uint64_t AWDMMCSHttpInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  AWDMMCSTcpInfo *v89;
  AWDMMCSError *v90;
  void *v91;
  void *v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  char v123;
  unsigned int v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  void *v174;
  char v175;
  unsigned int v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  uint64_t v180;
  BOOL v181;
  uint64_t v182;
  uint64_t v183;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        v18 = String;
        v19 = 112;
        goto LABEL_215;
      case 2u:
        v21 = (void *)PBReaderReadString();

        v18 = v21;
        v19 = 88;
        goto LABEL_215;
      case 3u:
        v22 = 0;
        v23 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 168) |= 0x100u;
        while (2)
        {
          v25 = *v3;
          v26 = *(_QWORD *)(a2 + v25);
          if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if (v27 < 0)
            {
              v22 += 7;
              v14 = v23++ >= 9;
              if (v14)
              {
                LODWORD(v24) = 0;
                goto LABEL_226;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_226:
        v180 = 104;
        goto LABEL_315;
      case 4u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        *(_DWORD *)(a1 + 168) |= 0x8000u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if (v33 < 0)
            {
              v28 += 7;
              v14 = v29++ >= 9;
              if (v14)
              {
                v30 = 0;
                goto LABEL_230;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v30 = 0;
LABEL_230:
        v181 = v30 != 0;
        v182 = 155;
        goto LABEL_328;
      case 5u:
        v34 = 0;
        v35 = 0;
        v36 = 0;
        *(_DWORD *)(a1 + 168) |= 8u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v36 |= (unint64_t)(v39 & 0x7F) << v34;
            if (v39 < 0)
            {
              v34 += 7;
              v14 = v35++ >= 9;
              if (v14)
              {
                v36 = 0;
                goto LABEL_234;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v36 = 0;
LABEL_234:
        v183 = 32;
        goto LABEL_333;
      case 6u:
        v40 = 0;
        v41 = 0;
        v36 = 0;
        *(_DWORD *)(a1 + 168) |= 4u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v36 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                v36 = 0;
                goto LABEL_238;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v36 = 0;
LABEL_238:
        v183 = 24;
        goto LABEL_333;
      case 7u:
        v45 = 0;
        v46 = 0;
        v36 = 0;
        *(_DWORD *)(a1 + 168) |= 1u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v36 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                v36 = 0;
                goto LABEL_242;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v36 = 0;
LABEL_242:
        v183 = 8;
        goto LABEL_333;
      case 8u:
        v50 = 0;
        v51 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 168) |= 0x80u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v24 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v24) = 0;
                goto LABEL_246;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_246:
        v180 = 72;
        goto LABEL_315;
      case 9u:
        v55 = (void *)PBReaderReadString();

        v18 = v55;
        v19 = 56;
        goto LABEL_215;
      case 0xAu:
        v56 = 0;
        v57 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 168) |= 0x40u;
        while (2)
        {
          v58 = *v3;
          v59 = *(_QWORD *)(a2 + v58);
          if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v24 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v56 += 7;
              v14 = v57++ >= 9;
              if (v14)
              {
                LODWORD(v24) = 0;
                goto LABEL_250;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_250:
        v180 = 48;
        goto LABEL_315;
      case 0xBu:
        v61 = 0;
        v62 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 168) |= 0x400u;
        while (2)
        {
          v63 = *v3;
          v64 = *(_QWORD *)(a2 + v63);
          if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v24 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v61 += 7;
              v14 = v62++ >= 9;
              if (v14)
              {
                LODWORD(v24) = 0;
                goto LABEL_254;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_254:
        v180 = 132;
        goto LABEL_315;
      case 0xCu:
        v66 = 0;
        v67 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 168) |= 0x800u;
        while (2)
        {
          v68 = *v3;
          v69 = *(_QWORD *)(a2 + v68);
          if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v24 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v66 += 7;
              v14 = v67++ >= 9;
              if (v14)
              {
                LODWORD(v24) = 0;
                goto LABEL_258;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_258:
        v180 = 136;
        goto LABEL_315;
      case 0xDu:
        v71 = 0;
        v72 = 0;
        v73 = 0;
        *(_DWORD *)(a1 + 168) |= 0x4000000u;
        while (2)
        {
          v74 = *v3;
          v75 = *(_QWORD *)(a2 + v74);
          if (v75 == -1 || v75 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v75);
            *(_QWORD *)(a2 + v74) = v75 + 1;
            v73 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              v14 = v72++ >= 9;
              if (v14)
              {
                v73 = 0;
                goto LABEL_262;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v73 = 0;
LABEL_262:
        v181 = v73 != 0;
        v182 = 166;
        goto LABEL_328;
      case 0xEu:
        v77 = 0;
        v78 = 0;
        v79 = 0;
        *(_DWORD *)(a1 + 168) |= 0x2000000u;
        while (2)
        {
          v80 = *v3;
          v81 = *(_QWORD *)(a2 + v80);
          if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v79 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              v14 = v78++ >= 9;
              if (v14)
              {
                v79 = 0;
                goto LABEL_266;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v79 = 0;
LABEL_266:
        v181 = v79 != 0;
        v182 = 165;
        goto LABEL_328;
      case 0xFu:
        v83 = 0;
        v84 = 0;
        v85 = 0;
        *(_DWORD *)(a1 + 168) |= 0x4000u;
        while (2)
        {
          v86 = *v3;
          v87 = *(_QWORD *)(a2 + v86);
          if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
            *(_QWORD *)(a2 + v86) = v87 + 1;
            v85 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              v14 = v84++ >= 9;
              if (v14)
              {
                v85 = 0;
                goto LABEL_270;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v85 = 0;
LABEL_270:
        v181 = v85 != 0;
        v182 = 154;
        goto LABEL_328;
      case 0x10u:
        v89 = objc_alloc_init(AWDMMCSTcpInfo);
        objc_msgSend((id)a1, "addTcpInfo:", v89);

        if (!PBReaderPlaceMark() || (AWDMMCSTcpInfoReadFrom((uint64_t)v89, a2) & 1) == 0)
          return 0;
        goto LABEL_113;
      case 0x11u:
        v90 = objc_alloc_init(AWDMMCSError);
        objc_msgSend((id)a1, "addHttpError:", v90);

        if (PBReaderPlaceMark() && (AWDMMCSErrorReadFrom((uint64_t)v90, a2) & 1) != 0)
        {
LABEL_113:
          PBReaderRecallMark();
LABEL_334:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0x12u:
        v91 = (void *)PBReaderReadString();

        v18 = v91;
        v19 = 80;
        goto LABEL_215;
      case 0x13u:
        v92 = (void *)PBReaderReadString();

        v18 = v92;
        v19 = 96;
        goto LABEL_215;
      case 0x14u:
        v93 = 0;
        v94 = 0;
        v95 = 0;
        *(_DWORD *)(a1 + 168) |= 0x1000000u;
        while (2)
        {
          v96 = *v3;
          v97 = *(_QWORD *)(a2 + v96);
          if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v97);
            *(_QWORD *)(a2 + v96) = v97 + 1;
            v95 |= (unint64_t)(v98 & 0x7F) << v93;
            if (v98 < 0)
            {
              v93 += 7;
              v14 = v94++ >= 9;
              if (v14)
              {
                v95 = 0;
                goto LABEL_274;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v95 = 0;
LABEL_274:
        v181 = v95 != 0;
        v182 = 164;
        goto LABEL_328;
      case 0x15u:
        v99 = 0;
        v100 = 0;
        v101 = 0;
        *(_DWORD *)(a1 + 168) |= 0x2000u;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
            *(_QWORD *)(a2 + v102) = v103 + 1;
            v101 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              v14 = v100++ >= 9;
              if (v14)
              {
                v101 = 0;
                goto LABEL_278;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v101 = 0;
LABEL_278:
        v181 = v101 != 0;
        v182 = 153;
        goto LABEL_328;
      case 0x16u:
        v105 = 0;
        v106 = 0;
        v107 = 0;
        *(_DWORD *)(a1 + 168) |= 0x1000u;
        while (2)
        {
          v108 = *v3;
          v109 = *(_QWORD *)(a2 + v108);
          if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
            *(_QWORD *)(a2 + v108) = v109 + 1;
            v107 |= (unint64_t)(v110 & 0x7F) << v105;
            if (v110 < 0)
            {
              v105 += 7;
              v14 = v106++ >= 9;
              if (v14)
              {
                v107 = 0;
                goto LABEL_282;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v107 = 0;
LABEL_282:
        v181 = v107 != 0;
        v182 = 152;
        goto LABEL_328;
      case 0x17u:
        v111 = 0;
        v112 = 0;
        v113 = 0;
        *(_DWORD *)(a1 + 168) |= 0x40000u;
        while (2)
        {
          v114 = *v3;
          v115 = *(_QWORD *)(a2 + v114);
          if (v115 == -1 || v115 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v115);
            *(_QWORD *)(a2 + v114) = v115 + 1;
            v113 |= (unint64_t)(v116 & 0x7F) << v111;
            if (v116 < 0)
            {
              v111 += 7;
              v14 = v112++ >= 9;
              if (v14)
              {
                v113 = 0;
                goto LABEL_286;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v113 = 0;
LABEL_286:
        v181 = v113 != 0;
        v182 = 158;
        goto LABEL_328;
      case 0x18u:
        v117 = 0;
        v118 = 0;
        v119 = 0;
        *(_DWORD *)(a1 + 168) |= 0x10000u;
        while (2)
        {
          v120 = *v3;
          v121 = *(_QWORD *)(a2 + v120);
          if (v121 == -1 || v121 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v122 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v121);
            *(_QWORD *)(a2 + v120) = v121 + 1;
            v119 |= (unint64_t)(v122 & 0x7F) << v117;
            if (v122 < 0)
            {
              v117 += 7;
              v14 = v118++ >= 9;
              if (v14)
              {
                v119 = 0;
                goto LABEL_290;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v119 = 0;
LABEL_290:
        v181 = v119 != 0;
        v182 = 156;
        goto LABEL_328;
      case 0x19u:
        v123 = 0;
        v124 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 168) |= 0x200u;
        while (2)
        {
          v125 = *v3;
          v126 = *(_QWORD *)(a2 + v125);
          if (v126 == -1 || v126 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v127 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v126);
            *(_QWORD *)(a2 + v125) = v126 + 1;
            v24 |= (unint64_t)(v127 & 0x7F) << v123;
            if (v127 < 0)
            {
              v123 += 7;
              v14 = v124++ >= 9;
              if (v14)
              {
                LODWORD(v24) = 0;
                goto LABEL_294;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_294:
        v180 = 128;
        goto LABEL_315;
      case 0x1Au:
        v128 = 0;
        v129 = 0;
        v130 = 0;
        *(_DWORD *)(a1 + 168) |= 0x800000u;
        while (2)
        {
          v131 = *v3;
          v132 = *(_QWORD *)(a2 + v131);
          if (v132 == -1 || v132 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v132);
            *(_QWORD *)(a2 + v131) = v132 + 1;
            v130 |= (unint64_t)(v133 & 0x7F) << v128;
            if (v133 < 0)
            {
              v128 += 7;
              v14 = v129++ >= 9;
              if (v14)
              {
                v130 = 0;
                goto LABEL_298;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v130 = 0;
LABEL_298:
        v181 = v130 != 0;
        v182 = 163;
        goto LABEL_328;
      case 0x1Bu:
        v134 = 0;
        v135 = 0;
        v136 = 0;
        *(_DWORD *)(a1 + 168) |= 0x20000u;
        while (2)
        {
          v137 = *v3;
          v138 = *(_QWORD *)(a2 + v137);
          if (v138 == -1 || v138 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
            *(_QWORD *)(a2 + v137) = v138 + 1;
            v136 |= (unint64_t)(v139 & 0x7F) << v134;
            if (v139 < 0)
            {
              v134 += 7;
              v14 = v135++ >= 9;
              if (v14)
              {
                v136 = 0;
                goto LABEL_302;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v136 = 0;
LABEL_302:
        v181 = v136 != 0;
        v182 = 157;
        goto LABEL_328;
      case 0x1Cu:
        v140 = 0;
        v141 = 0;
        v142 = 0;
        *(_DWORD *)(a1 + 168) |= 0x80000u;
        while (2)
        {
          v143 = *v3;
          v144 = *(_QWORD *)(a2 + v143);
          if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v144 + 1;
            v142 |= (unint64_t)(v145 & 0x7F) << v140;
            if (v145 < 0)
            {
              v140 += 7;
              v14 = v141++ >= 9;
              if (v14)
              {
                v142 = 0;
                goto LABEL_306;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v142 = 0;
LABEL_306:
        v181 = v142 != 0;
        v182 = 159;
        goto LABEL_328;
      case 0x1Du:
        v146 = 0;
        v147 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 168) |= 0x10u;
        while (2)
        {
          v148 = *v3;
          v149 = *(_QWORD *)(a2 + v148);
          if (v149 == -1 || v149 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
            *(_QWORD *)(a2 + v148) = v149 + 1;
            v24 |= (unint64_t)(v150 & 0x7F) << v146;
            if (v150 < 0)
            {
              v146 += 7;
              v14 = v147++ >= 9;
              if (v14)
              {
                LODWORD(v24) = 0;
                goto LABEL_310;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_310:
        v180 = 40;
        goto LABEL_315;
      case 0x1Eu:
        v151 = 0;
        v152 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 168) |= 0x20u;
        while (2)
        {
          v153 = *v3;
          v154 = *(_QWORD *)(a2 + v153);
          if (v154 == -1 || v154 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
            *(_QWORD *)(a2 + v153) = v154 + 1;
            v24 |= (unint64_t)(v155 & 0x7F) << v151;
            if (v155 < 0)
            {
              v151 += 7;
              v14 = v152++ >= 9;
              if (v14)
              {
                LODWORD(v24) = 0;
                goto LABEL_314;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_314:
        v180 = 44;
LABEL_315:
        *(_DWORD *)(a1 + v180) = v24;
        goto LABEL_334;
      case 0x1Fu:
        v156 = 0;
        v157 = 0;
        v158 = 0;
        *(_DWORD *)(a1 + 168) |= 0x400000u;
        while (2)
        {
          v159 = *v3;
          v160 = *(_QWORD *)(a2 + v159);
          if (v160 == -1 || v160 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
            *(_QWORD *)(a2 + v159) = v160 + 1;
            v158 |= (unint64_t)(v161 & 0x7F) << v156;
            if (v161 < 0)
            {
              v156 += 7;
              v14 = v157++ >= 9;
              if (v14)
              {
                v158 = 0;
                goto LABEL_319;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v158 = 0;
LABEL_319:
        v181 = v158 != 0;
        v182 = 162;
        goto LABEL_328;
      case 0x20u:
        v162 = 0;
        v163 = 0;
        v164 = 0;
        *(_DWORD *)(a1 + 168) |= 0x200000u;
        while (2)
        {
          v165 = *v3;
          v166 = *(_QWORD *)(a2 + v165);
          if (v166 == -1 || v166 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v167 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v166);
            *(_QWORD *)(a2 + v165) = v166 + 1;
            v164 |= (unint64_t)(v167 & 0x7F) << v162;
            if (v167 < 0)
            {
              v162 += 7;
              v14 = v163++ >= 9;
              if (v14)
              {
                v164 = 0;
                goto LABEL_323;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v164 = 0;
LABEL_323:
        v181 = v164 != 0;
        v182 = 161;
        goto LABEL_328;
      case 0x21u:
        v168 = 0;
        v169 = 0;
        v170 = 0;
        *(_DWORD *)(a1 + 168) |= 0x100000u;
        while (2)
        {
          v171 = *v3;
          v172 = *(_QWORD *)(a2 + v171);
          if (v172 == -1 || v172 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v173 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v172);
            *(_QWORD *)(a2 + v171) = v172 + 1;
            v170 |= (unint64_t)(v173 & 0x7F) << v168;
            if (v173 < 0)
            {
              v168 += 7;
              v14 = v169++ >= 9;
              if (v14)
              {
                v170 = 0;
                goto LABEL_327;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v170 = 0;
LABEL_327:
        v181 = v170 != 0;
        v182 = 160;
LABEL_328:
        *(_BYTE *)(a1 + v182) = v181;
        goto LABEL_334;
      case 0x22u:
        v174 = (void *)PBReaderReadString();

        v18 = v174;
        v19 = 120;
LABEL_215:
        *(_QWORD *)(a1 + v19) = v18;
        goto LABEL_334;
      case 0x23u:
        v175 = 0;
        v176 = 0;
        v36 = 0;
        *(_DWORD *)(a1 + 168) |= 2u;
        while (2)
        {
          v177 = *v3;
          v178 = *(_QWORD *)(a2 + v177);
          if (v178 == -1 || v178 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v179 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v178);
            *(_QWORD *)(a2 + v177) = v178 + 1;
            v36 |= (unint64_t)(v179 & 0x7F) << v175;
            if (v179 < 0)
            {
              v175 += 7;
              v14 = v176++ >= 9;
              if (v14)
              {
                v36 = 0;
                goto LABEL_332;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v36 = 0;
LABEL_332:
        v183 = 16;
LABEL_333:
        *(_QWORD *)(a1 + v183) = v36;
        goto LABEL_334;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_334;
    }
  }
}

uint64_t AWDMMCSPutRequestInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  id v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  void *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  AWDMMCSChunkingInfo *v75;
  AWDMMCSHttpInfo *v76;
  AWDMMCSError *v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 164) |= 4u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_139;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_141;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_139:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_141:
        v101 = 24;
        goto LABEL_150;
      case 2u:
        String = (void *)PBReaderReadString();

        v25 = String;
        v26 = 88;
        goto LABEL_137;
      case 3u:
        v27 = 0;
        v28 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 164) |= 2u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v19 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              v14 = v28++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_145:
        v101 = 16;
        goto LABEL_150;
      case 4u:
        v32 = 0;
        v33 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 164) |= 1u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v19 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_149:
        v101 = 8;
LABEL_150:
        *(_QWORD *)(a1 + v101) = v19;
        goto LABEL_197;
      case 5u:
        v37 = (void *)PBReaderReadString();

        v25 = v37;
        v26 = 56;
        goto LABEL_137;
      case 6u:
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 164) |= 8u;
        while (2)
        {
          v41 = *v3;
          v42 = *(_QWORD *)(a2 + v41);
          if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
            *(_QWORD *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v40) = 0;
                goto LABEL_154;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v40) = 0;
LABEL_154:
        v102 = 48;
        goto LABEL_196;
      case 7u:
        v44 = (void *)PBReaderReadString();

        v25 = v44;
        v26 = 152;
        goto LABEL_137;
      case 8u:
        v45 = 0;
        v46 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 164) |= 0x800u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v40 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                LODWORD(v40) = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v40) = 0;
LABEL_158:
        v102 = 144;
        goto LABEL_196;
      case 9u:
        v50 = 0;
        v51 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 164) |= 0x20u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v40 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v40) = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v40) = 0;
LABEL_162:
        v102 = 120;
        goto LABEL_196;
      case 0xAu:
        v55 = 0;
        v56 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 164) |= 0x100u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v40 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              v14 = v56++ >= 9;
              if (v14)
              {
                LODWORD(v40) = 0;
                goto LABEL_166;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v40) = 0;
LABEL_166:
        v102 = 132;
        goto LABEL_196;
      case 0xBu:
        v60 = 0;
        v61 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 164) |= 0x400u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v40 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v40) = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v40) = 0;
LABEL_170:
        v102 = 140;
        goto LABEL_196;
      case 0xCu:
        v65 = 0;
        v66 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 164) |= 0x200u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v40 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v40) = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v40) = 0;
LABEL_174:
        v102 = 136;
        goto LABEL_196;
      case 0xDu:
        v70 = 0;
        v71 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 164) |= 0x10u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v40 |= (unint64_t)(v74 & 0x7F) << v70;
            if (v74 < 0)
            {
              v70 += 7;
              v14 = v71++ >= 9;
              if (v14)
              {
                LODWORD(v40) = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v40) = 0;
LABEL_178:
        v102 = 72;
        goto LABEL_196;
      case 0xEu:
        v75 = objc_alloc_init(AWDMMCSChunkingInfo);
        objc_msgSend((id)a1, "addChunkingInfos:", v75);

        if (!PBReaderPlaceMark() || (AWDMMCSChunkingInfoReadFrom((uint64_t)v75, a2) & 1) == 0)
          return 0;
        goto LABEL_107;
      case 0xFu:
        v76 = objc_alloc_init(AWDMMCSHttpInfo);
        objc_msgSend((id)a1, "addAuthHttpInfos:", v76);
        goto LABEL_100;
      case 0x10u:
        v76 = objc_alloc_init(AWDMMCSHttpInfo);
        objc_msgSend((id)a1, "addContainerHttpInfos:", v76);
        goto LABEL_100;
      case 0x11u:
        v76 = objc_alloc_init(AWDMMCSHttpInfo);
        objc_msgSend((id)a1, "addCompleteHttpInfos:", v76);
LABEL_100:

        if (!PBReaderPlaceMark() || (AWDMMCSHttpInfoReadFrom((uint64_t)v76, a2) & 1) == 0)
          return 0;
        goto LABEL_107;
      case 0x12u:
        v77 = objc_alloc_init(AWDMMCSError);
        objc_msgSend((id)a1, "addCancelError:", v77);
        goto LABEL_105;
      case 0x13u:
        v77 = objc_alloc_init(AWDMMCSError);
        objc_msgSend((id)a1, "addError:", v77);
LABEL_105:

        if (PBReaderPlaceMark() && (AWDMMCSErrorReadFrom((uint64_t)v77, a2) & 1) != 0)
        {
LABEL_107:
          PBReaderRecallMark();
LABEL_197:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0x14u:
        v78 = 0;
        v79 = 0;
        v80 = 0;
        *(_WORD *)(a1 + 164) |= 0x2000u;
        while (2)
        {
          v81 = *v3;
          v82 = *(_QWORD *)(a2 + v81);
          if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
            *(_QWORD *)(a2 + v81) = v82 + 1;
            v80 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              v14 = v79++ >= 9;
              if (v14)
              {
                v80 = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v80 = 0;
LABEL_182:
        v103 = v80 != 0;
        v104 = 161;
        goto LABEL_191;
      case 0x15u:
        v84 = 0;
        v85 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 164) |= 0x80u;
        while (2)
        {
          v86 = *v3;
          v87 = *(_QWORD *)(a2 + v86);
          if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
            *(_QWORD *)(a2 + v86) = v87 + 1;
            v40 |= (unint64_t)(v88 & 0x7F) << v84;
            if (v88 < 0)
            {
              v84 += 7;
              v14 = v85++ >= 9;
              if (v14)
              {
                LODWORD(v40) = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v40) = 0;
LABEL_186:
        v102 = 128;
        goto LABEL_196;
      case 0x16u:
        v89 = 0;
        v90 = 0;
        v91 = 0;
        *(_WORD *)(a1 + 164) |= 0x1000u;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
            *(_QWORD *)(a2 + v92) = v93 + 1;
            v91 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              v14 = v90++ >= 9;
              if (v14)
              {
                v91 = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v91 = 0;
LABEL_190:
        v103 = v91 != 0;
        v104 = 160;
LABEL_191:
        *(_BYTE *)(a1 + v104) = v103;
        goto LABEL_197;
      case 0x17u:
        v95 = 0;
        v96 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 164) |= 0x40u;
        while (2)
        {
          v97 = *v3;
          v98 = *(_QWORD *)(a2 + v97);
          if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v98);
            *(_QWORD *)(a2 + v97) = v98 + 1;
            v40 |= (unint64_t)(v99 & 0x7F) << v95;
            if (v99 < 0)
            {
              v95 += 7;
              v14 = v96++ >= 9;
              if (v14)
              {
                LODWORD(v40) = 0;
                goto LABEL_195;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v40) = 0;
LABEL_195:
        v102 = 124;
LABEL_196:
        *(_DWORD *)(a1 + v102) = v40;
        goto LABEL_197;
      case 0x18u:
        v100 = (void *)PBReaderReadString();

        v25 = v100;
        v26 = 80;
LABEL_137:
        *(_QWORD *)(a1 + v26) = v25;
        goto LABEL_197;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_197;
    }
  }
}

uint64_t AWDMMCSTcpInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  char v145;
  unsigned int v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  char v155;
  unsigned int v156;
  uint64_t v157;
  unint64_t v158;
  char v159;
  char v160;
  unsigned int v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  char v165;
  unsigned int v166;
  uint64_t v167;
  unint64_t v168;
  char v169;
  char v170;
  unsigned int v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  char v175;
  unsigned int v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  unint64_t v183;
  char v184;
  char v185;
  unsigned int v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  char v190;
  unsigned int v191;
  uint64_t v192;
  unint64_t v193;
  char v194;
  char v195;
  unsigned int v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  char v200;
  unsigned int v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  char v205;
  unsigned int v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  char v210;
  unsigned int v211;
  uint64_t v212;
  unint64_t v213;
  char v214;
  char v215;
  unsigned int v216;
  uint64_t v217;
  unint64_t v218;
  char v219;
  uint64_t v220;
  uint64_t v221;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x1000000000uLL;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_302;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_304;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_302:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_304:
          v220 = 220;
          goto LABEL_429;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x80000uLL;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_308;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_308:
          v220 = 152;
          goto LABEL_429;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x400000000uLL;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_312;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_312:
          v220 = 212;
          goto LABEL_429;
        case 4u:
          v34 = 0;
          v35 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x800000uLL;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v19 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_316;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_316:
          v220 = 168;
          goto LABEL_429;
        case 5u:
          v39 = 0;
          v40 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x20000uLL;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v42 + 1;
              v19 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                v14 = v40++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_320;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_320:
          v220 = 144;
          goto LABEL_429;
        case 6u:
          v44 = 0;
          v45 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x1000000uLL;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v19 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                v14 = v45++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_324;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_324:
          v220 = 172;
          goto LABEL_429;
        case 7u:
          v49 = 0;
          v50 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x20000000uLL;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
              *(_QWORD *)(a2 + v51) = v52 + 1;
              v19 |= (unint64_t)(v53 & 0x7F) << v49;
              if (v53 < 0)
              {
                v49 += 7;
                v14 = v50++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_328;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_328:
          v220 = 192;
          goto LABEL_429;
        case 8u:
          v54 = 0;
          v55 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x100000uLL;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v19 |= (unint64_t)(v58 & 0x7F) << v54;
              if (v58 < 0)
              {
                v54 += 7;
                v14 = v55++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_332;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_332:
          v220 = 156;
          goto LABEL_429;
        case 9u:
          v59 = 0;
          v60 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x4000000uLL;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v19 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                v14 = v60++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_336;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_336:
          v220 = 180;
          goto LABEL_429;
        case 0xAu:
          v64 = 0;
          v65 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x800000000uLL;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v19 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                v14 = v65++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_340;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_340:
          v220 = 216;
          goto LABEL_429;
        case 0xBu:
          v69 = 0;
          v70 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x8000000uLL;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v19 |= (unint64_t)(v73 & 0x7F) << v69;
              if (v73 < 0)
              {
                v69 += 7;
                v14 = v70++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_344;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_344:
          v220 = 184;
          goto LABEL_429;
        case 0xCu:
          v74 = 0;
          v75 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x2000000uLL;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v19 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v14 = v75++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_348;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_348:
          v220 = 176;
          goto LABEL_429;
        case 0xDu:
          v79 = 0;
          v80 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x100000000uLL;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v19 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v14 = v80++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_352;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_352:
          v220 = 204;
          goto LABEL_429;
        case 0xEu:
          v84 = 0;
          v85 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x10000000uLL;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v19 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v14 = v85++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_356;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_356:
          v220 = 188;
          goto LABEL_429;
        case 0xFu:
          v89 = 0;
          v90 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x400000uLL;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v19 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v14 = v90++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_360;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_360:
          v220 = 164;
          goto LABEL_429;
        case 0x10u:
          v94 = 0;
          v95 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x200000000uLL;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v97);
              *(_QWORD *)(a2 + v96) = v97 + 1;
              v19 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                v14 = v95++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_364;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_364:
          v220 = 208;
          goto LABEL_429;
        case 0x11u:
          v99 = 0;
          v100 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x40000000uLL;
          while (2)
          {
            v101 = *v3;
            v102 = *(_QWORD *)(a2 + v101);
            if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v102);
              *(_QWORD *)(a2 + v101) = v102 + 1;
              v19 |= (unint64_t)(v103 & 0x7F) << v99;
              if (v103 < 0)
              {
                v99 += 7;
                v14 = v100++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_368;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_368:
          v220 = 196;
          goto LABEL_429;
        case 0x12u:
          v104 = 0;
          v105 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x200000uLL;
          while (2)
          {
            v106 = *v3;
            v107 = *(_QWORD *)(a2 + v106);
            if (v107 == -1 || v107 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
              *(_QWORD *)(a2 + v106) = v107 + 1;
              v19 |= (unint64_t)(v108 & 0x7F) << v104;
              if (v108 < 0)
              {
                v104 += 7;
                v14 = v105++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_372;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_372:
          v220 = 160;
          goto LABEL_429;
        case 0x13u:
          v109 = 0;
          v110 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x40000uLL;
          while (2)
          {
            v111 = *v3;
            v112 = *(_QWORD *)(a2 + v111);
            if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
              *(_QWORD *)(a2 + v111) = v112 + 1;
              v19 |= (unint64_t)(v113 & 0x7F) << v109;
              if (v113 < 0)
              {
                v109 += 7;
                v14 = v110++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_376;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_376:
          v220 = 148;
          goto LABEL_429;
        case 0x14u:
          v114 = 0;
          v115 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x80000000uLL;
          while (2)
          {
            v116 = *v3;
            v117 = *(_QWORD *)(a2 + v116);
            if (v117 == -1 || v117 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v118 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v117);
              *(_QWORD *)(a2 + v116) = v117 + 1;
              v19 |= (unint64_t)(v118 & 0x7F) << v114;
              if (v118 < 0)
              {
                v114 += 7;
                v14 = v115++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_380;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_380:
          v220 = 200;
          goto LABEL_429;
        case 0x15u:
          v119 = 0;
          v120 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x400uLL;
          while (2)
          {
            v122 = *v3;
            v123 = *(_QWORD *)(a2 + v122);
            if (v123 == -1 || v123 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v124 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v123);
              *(_QWORD *)(a2 + v122) = v123 + 1;
              v121 |= (unint64_t)(v124 & 0x7F) << v119;
              if (v124 < 0)
              {
                v119 += 7;
                v14 = v120++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_384;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_384:
          v221 = 88;
          goto LABEL_462;
        case 0x16u:
          v125 = 0;
          v126 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x200uLL;
          while (2)
          {
            v127 = *v3;
            v128 = *(_QWORD *)(a2 + v127);
            if (v128 == -1 || v128 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v128);
              *(_QWORD *)(a2 + v127) = v128 + 1;
              v121 |= (unint64_t)(v129 & 0x7F) << v125;
              if (v129 < 0)
              {
                v125 += 7;
                v14 = v126++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_388;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_388:
          v221 = 80;
          goto LABEL_462;
        case 0x17u:
          v130 = 0;
          v131 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x800uLL;
          while (2)
          {
            v132 = *v3;
            v133 = *(_QWORD *)(a2 + v132);
            if (v133 == -1 || v133 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v134 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v133);
              *(_QWORD *)(a2 + v132) = v133 + 1;
              v121 |= (unint64_t)(v134 & 0x7F) << v130;
              if (v134 < 0)
              {
                v130 += 7;
                v14 = v131++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_392;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_392:
          v221 = 96;
          goto LABEL_462;
        case 0x18u:
          v135 = 0;
          v136 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x1000uLL;
          while (2)
          {
            v137 = *v3;
            v138 = *(_QWORD *)(a2 + v137);
            if (v138 == -1 || v138 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
              *(_QWORD *)(a2 + v137) = v138 + 1;
              v121 |= (unint64_t)(v139 & 0x7F) << v135;
              if (v139 < 0)
              {
                v135 += 7;
                v14 = v136++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_396;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_396:
          v221 = 104;
          goto LABEL_462;
        case 0x19u:
          v140 = 0;
          v141 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x80uLL;
          while (2)
          {
            v142 = *v3;
            v143 = *(_QWORD *)(a2 + v142);
            if (v143 == -1 || v143 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v144 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v143);
              *(_QWORD *)(a2 + v142) = v143 + 1;
              v121 |= (unint64_t)(v144 & 0x7F) << v140;
              if (v144 < 0)
              {
                v140 += 7;
                v14 = v141++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_400;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_400:
          v221 = 64;
          goto LABEL_462;
        case 0x1Au:
          v145 = 0;
          v146 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x10uLL;
          while (2)
          {
            v147 = *v3;
            v148 = *(_QWORD *)(a2 + v147);
            if (v148 == -1 || v148 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v149 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v148);
              *(_QWORD *)(a2 + v147) = v148 + 1;
              v121 |= (unint64_t)(v149 & 0x7F) << v145;
              if (v149 < 0)
              {
                v145 += 7;
                v14 = v146++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_404;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_404:
          v221 = 40;
          goto LABEL_462;
        case 0x1Bu:
          v150 = 0;
          v151 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x20uLL;
          while (2)
          {
            v152 = *v3;
            v153 = *(_QWORD *)(a2 + v152);
            if (v153 == -1 || v153 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v154 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v153);
              *(_QWORD *)(a2 + v152) = v153 + 1;
              v121 |= (unint64_t)(v154 & 0x7F) << v150;
              if (v154 < 0)
              {
                v150 += 7;
                v14 = v151++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_408;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_408:
          v221 = 48;
          goto LABEL_462;
        case 0x1Cu:
          v155 = 0;
          v156 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x40uLL;
          while (2)
          {
            v157 = *v3;
            v158 = *(_QWORD *)(a2 + v157);
            if (v158 == -1 || v158 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v159 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v158);
              *(_QWORD *)(a2 + v157) = v158 + 1;
              v121 |= (unint64_t)(v159 & 0x7F) << v155;
              if (v159 < 0)
              {
                v155 += 7;
                v14 = v156++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_412;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_412:
          v221 = 56;
          goto LABEL_462;
        case 0x1Du:
          v160 = 0;
          v161 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x100uLL;
          while (2)
          {
            v162 = *v3;
            v163 = *(_QWORD *)(a2 + v162);
            if (v163 == -1 || v163 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v164 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v163);
              *(_QWORD *)(a2 + v162) = v163 + 1;
              v121 |= (unint64_t)(v164 & 0x7F) << v160;
              if (v164 < 0)
              {
                v160 += 7;
                v14 = v161++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_416;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_416:
          v221 = 72;
          goto LABEL_462;
        case 0x1Eu:
          v165 = 0;
          v166 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x2000000000uLL;
          while (2)
          {
            v167 = *v3;
            v168 = *(_QWORD *)(a2 + v167);
            if (v168 == -1 || v168 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v169 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v168);
              *(_QWORD *)(a2 + v167) = v168 + 1;
              v19 |= (unint64_t)(v169 & 0x7F) << v165;
              if (v169 < 0)
              {
                v165 += 7;
                v14 = v166++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_420;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_420:
          v220 = 224;
          goto LABEL_429;
        case 0x1Fu:
          v170 = 0;
          v171 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x4000000000uLL;
          while (2)
          {
            v172 = *v3;
            v173 = *(_QWORD *)(a2 + v172);
            if (v173 == -1 || v173 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v174 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v173);
              *(_QWORD *)(a2 + v172) = v173 + 1;
              v19 |= (unint64_t)(v174 & 0x7F) << v170;
              if (v174 < 0)
              {
                v170 += 7;
                v14 = v171++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_424;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_424:
          v220 = 228;
          goto LABEL_429;
        case 0x20u:
          v175 = 0;
          v176 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 236) |= 0x8000000000uLL;
          while (2)
          {
            v177 = *v3;
            v178 = *(_QWORD *)(a2 + v177);
            if (v178 == -1 || v178 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v179 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v178);
              *(_QWORD *)(a2 + v177) = v178 + 1;
              v19 |= (unint64_t)(v179 & 0x7F) << v175;
              if (v179 < 0)
              {
                v175 += 7;
                v14 = v176++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_428;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_428:
          v220 = 232;
LABEL_429:
          *(_DWORD *)(a1 + v220) = v19;
          continue;
        case 0x21u:
          v180 = 0;
          v181 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 2uLL;
          while (2)
          {
            v182 = *v3;
            v183 = *(_QWORD *)(a2 + v182);
            if (v183 == -1 || v183 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v184 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v183);
              *(_QWORD *)(a2 + v182) = v183 + 1;
              v121 |= (unint64_t)(v184 & 0x7F) << v180;
              if (v184 < 0)
              {
                v180 += 7;
                v14 = v181++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_433;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_433:
          v221 = 16;
          goto LABEL_462;
        case 0x22u:
          v185 = 0;
          v186 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 1uLL;
          while (2)
          {
            v187 = *v3;
            v188 = *(_QWORD *)(a2 + v187);
            if (v188 == -1 || v188 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v189 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v188);
              *(_QWORD *)(a2 + v187) = v188 + 1;
              v121 |= (unint64_t)(v189 & 0x7F) << v185;
              if (v189 < 0)
              {
                v185 += 7;
                v14 = v186++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_437;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_437:
          v221 = 8;
          goto LABEL_462;
        case 0x23u:
          v190 = 0;
          v191 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 8uLL;
          while (2)
          {
            v192 = *v3;
            v193 = *(_QWORD *)(a2 + v192);
            if (v193 == -1 || v193 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v194 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v193);
              *(_QWORD *)(a2 + v192) = v193 + 1;
              v121 |= (unint64_t)(v194 & 0x7F) << v190;
              if (v194 < 0)
              {
                v190 += 7;
                v14 = v191++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_441;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_441:
          v221 = 32;
          goto LABEL_462;
        case 0x24u:
          v195 = 0;
          v196 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 4uLL;
          while (2)
          {
            v197 = *v3;
            v198 = *(_QWORD *)(a2 + v197);
            if (v198 == -1 || v198 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v199 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v198);
              *(_QWORD *)(a2 + v197) = v198 + 1;
              v121 |= (unint64_t)(v199 & 0x7F) << v195;
              if (v199 < 0)
              {
                v195 += 7;
                v14 = v196++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_445;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_445:
          v221 = 24;
          goto LABEL_462;
        case 0x25u:
          v200 = 0;
          v201 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x4000uLL;
          while (2)
          {
            v202 = *v3;
            v203 = *(_QWORD *)(a2 + v202);
            if (v203 == -1 || v203 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v204 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v203);
              *(_QWORD *)(a2 + v202) = v203 + 1;
              v121 |= (unint64_t)(v204 & 0x7F) << v200;
              if (v204 < 0)
              {
                v200 += 7;
                v14 = v201++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_449;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_449:
          v221 = 120;
          goto LABEL_462;
        case 0x26u:
          v205 = 0;
          v206 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x2000uLL;
          while (2)
          {
            v207 = *v3;
            v208 = *(_QWORD *)(a2 + v207);
            if (v208 == -1 || v208 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v209 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v208);
              *(_QWORD *)(a2 + v207) = v208 + 1;
              v121 |= (unint64_t)(v209 & 0x7F) << v205;
              if (v209 < 0)
              {
                v205 += 7;
                v14 = v206++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_453;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_453:
          v221 = 112;
          goto LABEL_462;
        case 0x27u:
          v210 = 0;
          v211 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x10000uLL;
          while (2)
          {
            v212 = *v3;
            v213 = *(_QWORD *)(a2 + v212);
            if (v213 == -1 || v213 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v214 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v213);
              *(_QWORD *)(a2 + v212) = v213 + 1;
              v121 |= (unint64_t)(v214 & 0x7F) << v210;
              if (v214 < 0)
              {
                v210 += 7;
                v14 = v211++ >= 9;
                if (v14)
                {
                  v121 = 0;
                  goto LABEL_457;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v121 = 0;
LABEL_457:
          v221 = 136;
          goto LABEL_462;
        case 0x28u:
          v215 = 0;
          v216 = 0;
          v121 = 0;
          *(_QWORD *)(a1 + 236) |= 0x8000uLL;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v217 = *v3;
        v218 = *(_QWORD *)(a2 + v217);
        if (v218 == -1 || v218 >= *(_QWORD *)(a2 + *v4))
          break;
        v219 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v218);
        *(_QWORD *)(a2 + v217) = v218 + 1;
        v121 |= (unint64_t)(v219 & 0x7F) << v215;
        if ((v219 & 0x80) == 0)
          goto LABEL_459;
        v215 += 7;
        v14 = v216++ >= 9;
        if (v14)
        {
          v121 = 0;
          goto LABEL_461;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_459:
      if (*(_BYTE *)(a2 + *v5))
        v121 = 0;
LABEL_461:
      v221 = 128;
LABEL_462:
      *(_QWORD *)(a1 + v221) = v121;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDNanoPhoneEmergencyCallEndedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_64;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_66;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_66:
          v53 = 16;
          goto LABEL_71;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_70:
          v53 = 8;
LABEL_71:
          *(_QWORD *)(a1 + v53) = v19;
          continue;
        case 3u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  v31 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_75:
          v54 = v31 != 0;
          v55 = 24;
          goto LABEL_88;
        case 4u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          *(_BYTE *)(a1 + 28) |= 0x10u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v37 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v37 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v37 = 0;
LABEL_79:
          v54 = v37 != 0;
          v55 = 26;
          goto LABEL_88;
        case 5u:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  v43 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v43 = 0;
LABEL_83:
          v54 = v43 != 0;
          v55 = 25;
          goto LABEL_88;
        case 6u:
          v47 = 0;
          v48 = 0;
          v49 = 0;
          *(_BYTE *)(a1 + 28) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v50 = *v3;
        v51 = *(_QWORD *)(a2 + v50);
        if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          break;
        v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
        *(_QWORD *)(a2 + v50) = v51 + 1;
        v49 |= (unint64_t)(v52 & 0x7F) << v47;
        if ((v52 & 0x80) == 0)
          goto LABEL_85;
        v47 += 7;
        v14 = v48++ >= 9;
        if (v14)
        {
          v49 = 0;
          goto LABEL_87;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
      if (*(_BYTE *)(a2 + *v5))
        v49 = 0;
LABEL_87:
      v54 = v49 != 0;
      v55 = 27;
LABEL_88:
      *(_BYTE *)(a1 + v55) = v54;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDNanoPhoneIncomingCallConnectedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *String;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_51;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_53;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_51:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_53:
          v42 = 16;
          goto LABEL_58;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_57:
          v42 = 8;
LABEL_58:
          *(_QWORD *)(a1 + v42) = v19;
          continue;
        case 3u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 24) = String;
          continue;
        case 4u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v32 = 0;
                  goto LABEL_62;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_62:
          v43 = v32 != 0;
          v44 = 33;
          goto LABEL_67;
        case 5u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v39 = *v3;
        v40 = *(_QWORD *)(a2 + v39);
        if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
          break;
        v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
        *(_QWORD *)(a2 + v39) = v40 + 1;
        v38 |= (unint64_t)(v41 & 0x7F) << v36;
        if ((v41 & 0x80) == 0)
          goto LABEL_64;
        v36 += 7;
        v14 = v37++ >= 9;
        if (v14)
        {
          v38 = 0;
          goto LABEL_66;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
      if (*(_BYTE *)(a2 + *v5))
        v38 = 0;
LABEL_66:
      v43 = v38 != 0;
      v44 = 32;
LABEL_67:
      *(_BYTE *)(a1 + v44) = v43;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDNanoPhoneIncomingCallPresentedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *String;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_51;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_53;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_51:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_53:
          v42 = 16;
          goto LABEL_58;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_57:
          v42 = 8;
LABEL_58:
          *(_QWORD *)(a1 + v42) = v19;
          continue;
        case 3u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 24) = String;
          continue;
        case 4u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v32 = 0;
                  goto LABEL_62;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_62:
          v43 = v32 != 0;
          v44 = 33;
          goto LABEL_67;
        case 5u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v39 = *v3;
        v40 = *(_QWORD *)(a2 + v39);
        if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
          break;
        v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
        *(_QWORD *)(a2 + v39) = v40 + 1;
        v38 |= (unint64_t)(v41 & 0x7F) << v36;
        if ((v41 & 0x80) == 0)
          goto LABEL_64;
        v36 += 7;
        v14 = v37++ >= 9;
        if (v14)
        {
          v38 = 0;
          goto LABEL_66;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
      if (*(_BYTE *)(a2 + *v5))
        v38 = 0;
LABEL_66:
      v43 = v38 != 0;
      v44 = 32;
LABEL_67:
      *(_BYTE *)(a1 + v44) = v43;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDNetworkServiceProxyConnectionStatisticsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  unsigned int v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      v16 = v10 & 7;
      if (v15 || v16 == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x40000u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
              break;
            v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_211;
            v18 += 7;
            v14 = v19++ >= 9;
            if (v14)
            {
              v20 = 0;
              goto LABEL_213;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_211:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_213:
          v151 = 176;
          goto LABEL_319;
        case 2u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_DWORD *)(a1 + 208) |= 0x400000u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_217;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_217:
          v152 = 196;
          goto LABEL_306;
        case 3u:
          v35 = 0;
          v36 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 2u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v20 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_221;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_221:
          v151 = 40;
          goto LABEL_319;
        case 4u:
          v40 = 0;
          v41 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x20000u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v20 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_225;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_225:
          v151 = 168;
          goto LABEL_319;
        case 5u:
          v45 = 0;
          v46 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 4u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v20 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_229;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_229:
          v151 = 48;
          goto LABEL_319;
        case 6u:
          v50 = 0;
          v51 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 8u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v20 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_233;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_233:
          v151 = 56;
          goto LABEL_319;
        case 7u:
          v55 = 0;
          v56 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 1u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v20 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_237;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_237:
          v151 = 32;
          goto LABEL_319;
        case 8u:
          goto LABEL_34;
        case 9u:
          v60 = 0;
          v61 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x8000u;
          while (2)
          {
            v62 = *v3;
            v63 = *(_QWORD *)(a2 + v62);
            if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
              *(_QWORD *)(a2 + v62) = v63 + 1;
              v20 |= (unint64_t)(v64 & 0x7F) << v60;
              if (v64 < 0)
              {
                v60 += 7;
                v14 = v61++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_241;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_241:
          v151 = 152;
          goto LABEL_319;
        case 0xAu:
          v65 = 0;
          v66 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x20u;
          while (2)
          {
            v67 = *v3;
            v68 = *(_QWORD *)(a2 + v67);
            if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
              *(_QWORD *)(a2 + v67) = v68 + 1;
              v20 |= (unint64_t)(v69 & 0x7F) << v65;
              if (v69 < 0)
              {
                v65 += 7;
                v14 = v66++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_245;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_245:
          v151 = 72;
          goto LABEL_319;
        case 0xBu:
          v70 = 0;
          v71 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x4000u;
          while (2)
          {
            v72 = *v3;
            v73 = *(_QWORD *)(a2 + v72);
            if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
              *(_QWORD *)(a2 + v72) = v73 + 1;
              v20 |= (unint64_t)(v74 & 0x7F) << v70;
              if (v74 < 0)
              {
                v70 += 7;
                v14 = v71++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_249;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_249:
          v151 = 144;
          goto LABEL_319;
        case 0xCu:
          v75 = 0;
          v76 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x80u;
          while (2)
          {
            v77 = *v3;
            v78 = *(_QWORD *)(a2 + v77);
            if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
              *(_QWORD *)(a2 + v77) = v78 + 1;
              v20 |= (unint64_t)(v79 & 0x7F) << v75;
              if (v79 < 0)
              {
                v75 += 7;
                v14 = v76++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_253;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_253:
          v151 = 88;
          goto LABEL_319;
        case 0xDu:
          v80 = 0;
          v81 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x40u;
          while (2)
          {
            v82 = *v3;
            v83 = *(_QWORD *)(a2 + v82);
            if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
              *(_QWORD *)(a2 + v82) = v83 + 1;
              v20 |= (unint64_t)(v84 & 0x7F) << v80;
              if (v84 < 0)
              {
                v80 += 7;
                v14 = v81++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_257;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_257:
          v151 = 80;
          goto LABEL_319;
        case 0xEu:
          v85 = 0;
          v86 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x10u;
          while (2)
          {
            v87 = *v3;
            v88 = *(_QWORD *)(a2 + v87);
            if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
              *(_QWORD *)(a2 + v87) = v88 + 1;
              v20 |= (unint64_t)(v89 & 0x7F) << v85;
              if (v89 < 0)
              {
                v85 += 7;
                v14 = v86++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_261;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_261:
          v151 = 64;
          goto LABEL_319;
        case 0xFu:
          v90 = 0;
          v91 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x100u;
          while (2)
          {
            v92 = *v3;
            v93 = *(_QWORD *)(a2 + v92);
            if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
              *(_QWORD *)(a2 + v92) = v93 + 1;
              v20 |= (unint64_t)(v94 & 0x7F) << v90;
              if (v94 < 0)
              {
                v90 += 7;
                v14 = v91++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_265;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_265:
          v151 = 96;
          goto LABEL_319;
        case 0x10u:
          v95 = 0;
          v96 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x800u;
          while (2)
          {
            v97 = *v3;
            v98 = *(_QWORD *)(a2 + v97);
            if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v98);
              *(_QWORD *)(a2 + v97) = v98 + 1;
              v20 |= (unint64_t)(v99 & 0x7F) << v95;
              if (v99 < 0)
              {
                v95 += 7;
                v14 = v96++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_269;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_269:
          v151 = 120;
          goto LABEL_319;
        case 0x11u:
          v100 = 0;
          v101 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x200u;
          while (2)
          {
            v102 = *v3;
            v103 = *(_QWORD *)(a2 + v102);
            if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
              *(_QWORD *)(a2 + v102) = v103 + 1;
              v20 |= (unint64_t)(v104 & 0x7F) << v100;
              if (v104 < 0)
              {
                v100 += 7;
                v14 = v101++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_273;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_273:
          v151 = 104;
          goto LABEL_319;
        case 0x12u:
          v105 = 0;
          v106 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x400u;
          while (2)
          {
            v107 = *v3;
            v108 = *(_QWORD *)(a2 + v107);
            if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
              *(_QWORD *)(a2 + v107) = v108 + 1;
              v20 |= (unint64_t)(v109 & 0x7F) << v105;
              if (v109 < 0)
              {
                v105 += 7;
                v14 = v106++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_277;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_277:
          v151 = 112;
          goto LABEL_319;
        case 0x13u:
          v110 = 0;
          v111 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x2000u;
          while (2)
          {
            v112 = *v3;
            v113 = *(_QWORD *)(a2 + v112);
            if (v113 == -1 || v113 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v113);
              *(_QWORD *)(a2 + v112) = v113 + 1;
              v20 |= (unint64_t)(v114 & 0x7F) << v110;
              if (v114 < 0)
              {
                v110 += 7;
                v14 = v111++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_281;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_281:
          v151 = 136;
          goto LABEL_319;
        case 0x14u:
          v115 = 0;
          v116 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 208) |= 0x10000u;
          while (2)
          {
            v117 = *v3;
            v118 = *(_QWORD *)(a2 + v117);
            if (v118 == -1 || v118 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v119 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v118);
              *(_QWORD *)(a2 + v117) = v118 + 1;
              v20 |= (unint64_t)(v119 & 0x7F) << v115;
              if (v119 < 0)
              {
                v115 += 7;
                v14 = v116++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_285;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_285:
          v151 = 160;
          goto LABEL_319;
        case 0x15u:
          v120 = 0;
          v121 = 0;
          v31 = 0;
          *(_DWORD *)(a1 + 208) |= 0x1000000u;
          while (2)
          {
            v122 = *v3;
            v123 = *(_QWORD *)(a2 + v122);
            if (v123 == -1 || v123 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v124 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v123);
              *(_QWORD *)(a2 + v122) = v123 + 1;
              v31 |= (unint64_t)(v124 & 0x7F) << v120;
              if (v124 < 0)
              {
                v120 += 7;
                v14 = v121++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_289;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_289:
          v152 = 204;
          goto LABEL_306;
        case 0x16u:
          v125 = 0;
          v126 = 0;
          v31 = 0;
          *(_DWORD *)(a1 + 208) |= 0x100000u;
          while (2)
          {
            v127 = *v3;
            v128 = *(_QWORD *)(a2 + v127);
            if (v128 == -1 || v128 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v128);
              *(_QWORD *)(a2 + v127) = v128 + 1;
              v31 |= (unint64_t)(v129 & 0x7F) << v125;
              if (v129 < 0)
              {
                v125 += 7;
                v14 = v126++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_293;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_293:
          v152 = 188;
          goto LABEL_306;
        case 0x17u:
          v130 = 0;
          v131 = 0;
          v31 = 0;
          *(_DWORD *)(a1 + 208) |= 0x80000u;
          while (2)
          {
            v132 = *v3;
            v133 = *(_QWORD *)(a2 + v132);
            if (v133 == -1 || v133 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v134 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v133);
              *(_QWORD *)(a2 + v132) = v133 + 1;
              v31 |= (unint64_t)(v134 & 0x7F) << v130;
              if (v134 < 0)
              {
                v130 += 7;
                v14 = v131++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_297;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_297:
          v152 = 184;
          goto LABEL_306;
        case 0x18u:
          v135 = 0;
          v136 = 0;
          v31 = 0;
          *(_DWORD *)(a1 + 208) |= 0x200000u;
          while (2)
          {
            v137 = *v3;
            v138 = *(_QWORD *)(a2 + v137);
            if (v138 == -1 || v138 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
              *(_QWORD *)(a2 + v137) = v138 + 1;
              v31 |= (unint64_t)(v139 & 0x7F) << v135;
              if (v139 < 0)
              {
                v135 += 7;
                v14 = v136++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_301;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_301:
          v152 = 192;
          goto LABEL_306;
        case 0x19u:
          if (v16 == 2)
          {
            result = PBReaderPlaceMark();
            if (!(_DWORD)result)
              return result;
            while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
            {
              v140 = 0;
              v141 = 0;
              v142 = 0;
              while (1)
              {
                v143 = *v3;
                v144 = *(_QWORD *)(a2 + v143);
                if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
                  break;
                v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
                *(_QWORD *)(a2 + v143) = v144 + 1;
                v142 |= (unint64_t)(v145 & 0x7F) << v140;
                if (v145 < 0)
                {
                  v140 += 7;
                  v14 = v141++ >= 9;
                  if (!v14)
                    continue;
                }
                goto LABEL_202;
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_202:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v153 = 0;
            v154 = 0;
            v155 = 0;
            while (1)
            {
              v156 = *v3;
              v157 = *(_QWORD *)(a2 + v156);
              if (v157 == -1 || v157 >= *(_QWORD *)(a2 + *v4))
                break;
              v158 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v157);
              *(_QWORD *)(a2 + v156) = v157 + 1;
              v155 |= (unint64_t)(v158 & 0x7F) << v153;
              if (v158 < 0)
              {
                v153 += 7;
                v14 = v154++ >= 9;
                if (!v14)
                  continue;
              }
              goto LABEL_323;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_323:
            PBRepeatedUInt32Add();
          }
          goto LABEL_320;
        case 0x1Au:
          v146 = 0;
          v147 = 0;
          v31 = 0;
          *(_DWORD *)(a1 + 208) |= 0x800000u;
          while (2)
          {
            v148 = *v3;
            v149 = *(_QWORD *)(a2 + v148);
            if (v149 == -1 || v149 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
              *(_QWORD *)(a2 + v148) = v149 + 1;
              v31 |= (unint64_t)(v150 & 0x7F) << v146;
              if (v150 < 0)
              {
                v146 += 7;
                v14 = v147++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_305;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_305:
          v152 = 200;
LABEL_306:
          *(_DWORD *)(a1 + v152) = v31;
          goto LABEL_320;
        default:
          if ((v10 >> 3) == 99)
          {
            v24 = 0;
            v25 = 0;
            v20 = 0;
            *(_DWORD *)(a1 + 208) |= 0x1000u;
            while (1)
            {
              v26 = *v3;
              v27 = *(_QWORD *)(a2 + v26);
              if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
                break;
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v20 |= (unint64_t)(v28 & 0x7F) << v24;
              if ((v28 & 0x80) == 0)
                goto LABEL_316;
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_318;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_316:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_318:
            v151 = 128;
LABEL_319:
            *(_QWORD *)(a1 + v151) = v20;
          }
          else
          {
LABEL_34:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              return 0;
          }
LABEL_320:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDNetworkServiceProxyControlRequestStatisticsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 124) |= 0x200u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_126;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_128;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_126:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_128:
              v91 = 104;
              goto LABEL_173;
            case 2u:
              v24 = 0;
              v25 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 124) |= 0x400u;
              while (2)
              {
                v27 = *v3;
                v28 = *(_QWORD *)(a2 + v27);
                if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
                  *(_QWORD *)(a2 + v27) = v28 + 1;
                  v26 |= (unint64_t)(v29 & 0x7F) << v24;
                  if (v29 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_132;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_132:
              v92 = 112;
              goto LABEL_178;
            case 3u:
              v30 = 0;
              v31 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 124) |= 0x1000u;
              while (2)
              {
                v32 = *v3;
                v33 = *(_QWORD *)(a2 + v32);
                if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
                  *(_QWORD *)(a2 + v32) = v33 + 1;
                  v26 |= (unint64_t)(v34 & 0x7F) << v30;
                  if (v34 < 0)
                  {
                    v30 += 7;
                    v14 = v31++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_136;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_136:
              v92 = 120;
              goto LABEL_178;
            case 4u:
              v35 = 0;
              v36 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 124) |= 1u;
              while (2)
              {
                v37 = *v3;
                v38 = *(_QWORD *)(a2 + v37);
                if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
                  *(_QWORD *)(a2 + v37) = v38 + 1;
                  v20 |= (unint64_t)(v39 & 0x7F) << v35;
                  if (v39 < 0)
                  {
                    v35 += 7;
                    v14 = v36++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_140;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_140:
              v91 = 32;
              goto LABEL_173;
            case 6u:
              v40 = 0;
              v41 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 124) |= 0x80u;
              while (2)
              {
                v42 = *v3;
                v43 = *(_QWORD *)(a2 + v42);
                if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
                  *(_QWORD *)(a2 + v42) = v43 + 1;
                  v20 |= (unint64_t)(v44 & 0x7F) << v40;
                  if (v44 < 0)
                  {
                    v40 += 7;
                    v14 = v41++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_144;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_144:
              v91 = 88;
              goto LABEL_173;
            case 7u:
              v45 = 0;
              v46 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 124) |= 8u;
              while (2)
              {
                v47 = *v3;
                v48 = *(_QWORD *)(a2 + v47);
                if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
                  *(_QWORD *)(a2 + v47) = v48 + 1;
                  v20 |= (unint64_t)(v49 & 0x7F) << v45;
                  if (v49 < 0)
                  {
                    v45 += 7;
                    v14 = v46++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_148;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_148:
              v91 = 56;
              goto LABEL_173;
            case 8u:
              v50 = 0;
              v51 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 124) |= 0x40u;
              while (2)
              {
                v52 = *v3;
                v53 = *(_QWORD *)(a2 + v52);
                if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
                  *(_QWORD *)(a2 + v52) = v53 + 1;
                  v20 |= (unint64_t)(v54 & 0x7F) << v50;
                  if (v54 < 0)
                  {
                    v50 += 7;
                    v14 = v51++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_152;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_152:
              v91 = 80;
              goto LABEL_173;
            case 9u:
              v55 = 0;
              v56 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 124) |= 0x20u;
              while (2)
              {
                v57 = *v3;
                v58 = *(_QWORD *)(a2 + v57);
                if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
                  *(_QWORD *)(a2 + v57) = v58 + 1;
                  v20 |= (unint64_t)(v59 & 0x7F) << v55;
                  if (v59 < 0)
                  {
                    v55 += 7;
                    v14 = v56++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_156;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_156:
              v91 = 72;
              goto LABEL_173;
            case 0xAu:
              v60 = 0;
              v61 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 124) |= 0x10u;
              while (2)
              {
                v62 = *v3;
                v63 = *(_QWORD *)(a2 + v62);
                if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
                  *(_QWORD *)(a2 + v62) = v63 + 1;
                  v20 |= (unint64_t)(v64 & 0x7F) << v60;
                  if (v64 < 0)
                  {
                    v60 += 7;
                    v14 = v61++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_160;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_160:
              v91 = 64;
              goto LABEL_173;
            case 0xBu:
              v65 = 0;
              v66 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 124) |= 4u;
              while (2)
              {
                v67 = *v3;
                v68 = *(_QWORD *)(a2 + v67);
                if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
                  *(_QWORD *)(a2 + v67) = v68 + 1;
                  v20 |= (unint64_t)(v69 & 0x7F) << v65;
                  if (v69 < 0)
                  {
                    v65 += 7;
                    v14 = v66++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_164;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_164:
              v91 = 48;
              goto LABEL_173;
            case 0xCu:
              v70 = 0;
              v71 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 124) |= 2u;
              while (2)
              {
                v72 = *v3;
                v73 = *(_QWORD *)(a2 + v72);
                if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
                  *(_QWORD *)(a2 + v72) = v73 + 1;
                  v20 |= (unint64_t)(v74 & 0x7F) << v70;
                  if (v74 < 0)
                  {
                    v70 += 7;
                    v14 = v71++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_168;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_168:
              v91 = 40;
              goto LABEL_173;
            case 0xDu:
              v75 = 0;
              v76 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 124) |= 0x100u;
              while (2)
              {
                v77 = *v3;
                v78 = *(_QWORD *)(a2 + v77);
                if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
                  *(_QWORD *)(a2 + v77) = v78 + 1;
                  v20 |= (unint64_t)(v79 & 0x7F) << v75;
                  if (v79 < 0)
                  {
                    v75 += 7;
                    v14 = v76++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_172;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_172:
              v91 = 96;
LABEL_173:
              *(_QWORD *)(a1 + v91) = v20;
              goto LABEL_179;
            case 0xEu:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v80 = 0;
                  v81 = 0;
                  v82 = 0;
                  while (1)
                  {
                    v83 = *v3;
                    v84 = *(_QWORD *)(a2 + v83);
                    if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
                    *(_QWORD *)(a2 + v83) = v84 + 1;
                    v82 |= (unint64_t)(v85 & 0x7F) << v80;
                    if (v85 < 0)
                    {
                      v80 += 7;
                      v14 = v81++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_117;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_117:
                  PBRepeatedUInt32Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                v93 = 0;
                v94 = 0;
                v95 = 0;
                while (1)
                {
                  v96 = *v3;
                  v97 = *(_QWORD *)(a2 + v96);
                  if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v97);
                  *(_QWORD *)(a2 + v96) = v97 + 1;
                  v95 |= (unint64_t)(v98 & 0x7F) << v93;
                  if (v98 < 0)
                  {
                    v93 += 7;
                    v14 = v94++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_190;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_190:
                PBRepeatedUInt32Add();
              }
LABEL_179:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 0xFu:
              v86 = 0;
              v87 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 124) |= 0x800u;
              while (2)
              {
                v88 = *v3;
                v89 = *(_QWORD *)(a2 + v88);
                if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
                  *(_QWORD *)(a2 + v88) = v89 + 1;
                  v26 |= (unint64_t)(v90 & 0x7F) << v86;
                  if (v90 < 0)
                  {
                    v86 += 7;
                    v14 = v87++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_177;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_177:
              v92 = 116;
LABEL_178:
              *(_DWORD *)(a1 + v92) = v26;
              goto LABEL_179;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_179;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDNetworkServiceProxyProbeStatisticsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void *String;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_65;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_67;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_65:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_67:
          v51 = 32;
          goto LABEL_84;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 60) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_71:
          v52 = 40;
          goto LABEL_89;
        case 3u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 48) = String;
          continue;
        case 4u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 1u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_75:
          v51 = 8;
          goto LABEL_84;
        case 5u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 4u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_79:
          v51 = 24;
          goto LABEL_84;
        case 6u:
          v41 = 0;
          v42 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 2u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v19 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_83:
          v51 = 16;
LABEL_84:
          *(_QWORD *)(a1 + v51) = v19;
          continue;
        case 7u:
          v46 = 0;
          v47 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 60) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v48 = *v3;
        v49 = *(_QWORD *)(a2 + v48);
        if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
          break;
        v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
        *(_QWORD *)(a2 + v48) = v49 + 1;
        v26 |= (unint64_t)(v50 & 0x7F) << v46;
        if ((v50 & 0x80) == 0)
          goto LABEL_86;
        v46 += 7;
        v14 = v47++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_88;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_86:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_88:
      v52 = 56;
LABEL_89:
      *(_DWORD *)(a1 + v52) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDNetworkServiceProxyRequestStatisticsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  int v19;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  int *v33;
  int *v34;
  int *v35;
  void *String;
  id v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  uint64_t v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  char v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v8 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v11 = 0;
        v12 = 0;
        v13 = 0;
        while (1)
        {
          v14 = *v3;
          v15 = *(_QWORD *)(a2 + v14);
          if (v15 == -1 || v15 >= *(_QWORD *)(a2 + *v4))
            break;
          v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v15);
          *(_QWORD *)(a2 + v14) = v15 + 1;
          v13 |= (unint64_t)(v16 & 0x7F) << v11;
          if ((v16 & 0x80) == 0)
            goto LABEL_12;
          v11 += 7;
          v17 = v12++ >= 9;
          if (v17)
          {
            v13 = 0;
            v18 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v18 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v13 = 0;
LABEL_14:
        v19 = v13 & 7;
        if (!v18 && v19 != 4)
        {
          switch((v13 >> 3))
          {
            case 1u:
              v21 = 0;
              v22 = 0;
              v23 = 0;
              *(_BYTE *)(a1 + v7[785]) |= 1u;
              while (1)
              {
                v24 = *v3;
                v25 = *(_QWORD *)(a2 + v24);
                if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
                  break;
                v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
                *(_QWORD *)(a2 + v24) = v25 + 1;
                v23 |= (unint64_t)(v26 & 0x7F) << v21;
                if ((v26 & 0x80) == 0)
                  goto LABEL_138;
                v21 += 7;
                v17 = v22++ >= 9;
                if (v17)
                {
                  v23 = 0;
                  goto LABEL_140;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_138:
              if (*(_BYTE *)(a2 + *v5))
                v23 = 0;
LABEL_140:
              *(_QWORD *)(a1 + v8[786]) = v23;
              goto LABEL_203;
            case 2u:
              v27 = 0;
              v28 = 0;
              v29 = 0;
              *(_BYTE *)(a1 + v7[785]) |= 8u;
              while (2)
              {
                v30 = *v3;
                v31 = *(_QWORD *)(a2 + v30);
                if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v31);
                  *(_QWORD *)(a2 + v30) = v31 + 1;
                  v29 |= (unint64_t)(v32 & 0x7F) << v27;
                  if (v32 < 0)
                  {
                    v27 += 7;
                    v17 = v28++ >= 9;
                    if (v17)
                    {
                      LODWORD(v29) = 0;
                      goto LABEL_144;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v29) = 0;
LABEL_144:
              v93 = v10[787];
              goto LABEL_165;
            case 3u:
              v33 = v10;
              v34 = v7;
              v35 = v8;
              String = (void *)PBReaderReadString();

              v37 = String;
              v8 = v35;
              v7 = v34;
              v10 = v33;
              *(_QWORD *)(a1 + 144) = v37;
              goto LABEL_203;
            case 4u:
              v38 = 0;
              v39 = 0;
              v29 = 0;
              *(_BYTE *)(a1 + v7[785]) |= 0x20u;
              while (2)
              {
                v40 = *v3;
                v41 = *(_QWORD *)(a2 + v40);
                if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v41);
                  *(_QWORD *)(a2 + v40) = v41 + 1;
                  v29 |= (unint64_t)(v42 & 0x7F) << v38;
                  if (v42 < 0)
                  {
                    v38 += 7;
                    v17 = v39++ >= 9;
                    if (v17)
                    {
                      LODWORD(v29) = 0;
                      goto LABEL_148;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v29) = 0;
LABEL_148:
              v93 = 160;
              goto LABEL_165;
            case 5u:
              v43 = 0;
              v44 = 0;
              v29 = 0;
              *(_BYTE *)(a1 + v7[785]) |= 0x40u;
              while (2)
              {
                v45 = *v3;
                v46 = *(_QWORD *)(a2 + v45);
                if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
                  *(_QWORD *)(a2 + v45) = v46 + 1;
                  v29 |= (unint64_t)(v47 & 0x7F) << v43;
                  if (v47 < 0)
                  {
                    v43 += 7;
                    v17 = v44++ >= 9;
                    if (v17)
                    {
                      LODWORD(v29) = 0;
                      goto LABEL_152;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v29) = 0;
LABEL_152:
              v93 = 164;
              goto LABEL_165;
            case 6u:
              v48 = 0;
              v49 = 0;
              v29 = 0;
              *(_BYTE *)(a1 + v7[785]) |= 2u;
              while (2)
              {
                v50 = *v3;
                v51 = *(_QWORD *)(a2 + v50);
                if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v51);
                  *(_QWORD *)(a2 + v50) = v51 + 1;
                  v29 |= (unint64_t)(v52 & 0x7F) << v48;
                  if (v52 < 0)
                  {
                    v48 += 7;
                    v17 = v49++ >= 9;
                    if (v17)
                    {
                      LODWORD(v29) = 0;
                      goto LABEL_156;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v29) = 0;
LABEL_156:
              v93 = 136;
              goto LABEL_165;
            case 7u:
              v53 = 0;
              v54 = 0;
              v29 = 0;
              *(_BYTE *)(a1 + v7[785]) |= 4u;
              while (2)
              {
                v55 = *v3;
                v56 = *(_QWORD *)(a2 + v55);
                if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v56);
                  *(_QWORD *)(a2 + v55) = v56 + 1;
                  v29 |= (unint64_t)(v57 & 0x7F) << v53;
                  if (v57 < 0)
                  {
                    v53 += 7;
                    v17 = v54++ >= 9;
                    if (v17)
                    {
                      LODWORD(v29) = 0;
                      goto LABEL_160;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v29) = 0;
LABEL_160:
              v93 = 140;
              goto LABEL_165;
            case 8u:
              if (v19 != 2)
              {
                v94 = 0;
                v95 = 0;
                v96 = 0;
                while (1)
                {
                  v97 = *v3;
                  v98 = *(_QWORD *)(a2 + v97);
                  if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_201;
                  v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v98);
                  *(_QWORD *)(a2 + v97) = v98 + 1;
                  v96 |= (unint64_t)(v99 & 0x7F) << v94;
                  if (v99 < 0)
                  {
                    v94 += 7;
                    v17 = v95++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_202;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v58 = 0;
                v59 = 0;
                v60 = 0;
                while (1)
                {
                  v61 = *v3;
                  v62 = *(_QWORD *)(a2 + v61);
                  if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v62);
                  *(_QWORD *)(a2 + v61) = v62 + 1;
                  v60 |= (unint64_t)(v63 & 0x7F) << v58;
                  if (v63 < 0)
                  {
                    v58 += 7;
                    v17 = v59++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_76;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_76:
                PBRepeatedUInt32Add();
              }
              goto LABEL_129;
            case 9u:
              if (v19 != 2)
              {
                v100 = 0;
                v101 = 0;
                v102 = 0;
                while (1)
                {
                  v103 = *v3;
                  v104 = *(_QWORD *)(a2 + v103);
                  if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_201;
                  v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v104);
                  *(_QWORD *)(a2 + v103) = v104 + 1;
                  v102 |= (unint64_t)(v105 & 0x7F) << v100;
                  if (v105 < 0)
                  {
                    v100 += 7;
                    v17 = v101++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_202;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v64 = 0;
                v65 = 0;
                v66 = 0;
                while (1)
                {
                  v67 = *v3;
                  v68 = *(_QWORD *)(a2 + v67);
                  if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v68);
                  *(_QWORD *)(a2 + v67) = v68 + 1;
                  v66 |= (unint64_t)(v69 & 0x7F) << v64;
                  if (v69 < 0)
                  {
                    v64 += 7;
                    v17 = v65++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_89;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_89:
                PBRepeatedUInt32Add();
              }
              goto LABEL_129;
            case 0xAu:
              if (v19 != 2)
              {
                v106 = 0;
                v107 = 0;
                v108 = 0;
                while (1)
                {
                  v109 = *v3;
                  v110 = *(_QWORD *)(a2 + v109);
                  if (v110 == -1 || v110 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_201;
                  v111 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v110);
                  *(_QWORD *)(a2 + v109) = v110 + 1;
                  v108 |= (unint64_t)(v111 & 0x7F) << v106;
                  if (v111 < 0)
                  {
                    v106 += 7;
                    v17 = v107++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_202;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v70 = 0;
                v71 = 0;
                v72 = 0;
                while (1)
                {
                  v73 = *v3;
                  v74 = *(_QWORD *)(a2 + v73);
                  if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v74);
                  *(_QWORD *)(a2 + v73) = v74 + 1;
                  v72 |= (unint64_t)(v75 & 0x7F) << v70;
                  if (v75 < 0)
                  {
                    v70 += 7;
                    v17 = v71++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_102;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_102:
                PBRepeatedUInt32Add();
              }
              goto LABEL_129;
            case 0xBu:
              if (v19 != 2)
              {
                v112 = 0;
                v113 = 0;
                v114 = 0;
                while (1)
                {
                  v115 = *v3;
                  v116 = *(_QWORD *)(a2 + v115);
                  if (v116 == -1 || v116 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_201;
                  v117 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v116);
                  *(_QWORD *)(a2 + v115) = v116 + 1;
                  v114 |= (unint64_t)(v117 & 0x7F) << v112;
                  if (v117 < 0)
                  {
                    v112 += 7;
                    v17 = v113++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_202;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v76 = 0;
                v77 = 0;
                v78 = 0;
                while (1)
                {
                  v79 = *v3;
                  v80 = *(_QWORD *)(a2 + v79);
                  if (v80 == -1 || v80 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v80);
                  *(_QWORD *)(a2 + v79) = v80 + 1;
                  v78 |= (unint64_t)(v81 & 0x7F) << v76;
                  if (v81 < 0)
                  {
                    v76 += 7;
                    v17 = v77++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_115;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_115:
                PBRepeatedUInt32Add();
              }
              goto LABEL_129;
            case 0xCu:
              if (v19 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v82 = 0;
                  v83 = 0;
                  v84 = 0;
                  while (1)
                  {
                    v85 = *v3;
                    v86 = *(_QWORD *)(a2 + v85);
                    if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v86);
                    *(_QWORD *)(a2 + v85) = v86 + 1;
                    v84 |= (unint64_t)(v87 & 0x7F) << v82;
                    if (v87 < 0)
                    {
                      v82 += 7;
                      v17 = v83++ >= 9;
                      if (!v17)
                        continue;
                    }
                    goto LABEL_128;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_128:
                  PBRepeatedUInt32Add();
                }
LABEL_129:
                PBReaderRecallMark();
              }
              else
              {
                v118 = 0;
                v119 = 0;
                v120 = 0;
                while (1)
                {
                  v121 = *v3;
                  v122 = *(_QWORD *)(a2 + v121);
                  if (v122 == -1 || v122 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v122);
                  *(_QWORD *)(a2 + v121) = v122 + 1;
                  v120 |= (unint64_t)(v123 & 0x7F) << v118;
                  if (v123 < 0)
                  {
                    v118 += 7;
                    v17 = v119++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_202;
                }
LABEL_201:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_202:
                PBRepeatedUInt32Add();
              }
LABEL_203:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 0xDu:
              v88 = 0;
              v89 = 0;
              v29 = 0;
              *(_BYTE *)(a1 + v7[785]) |= 0x10u;
              while (2)
              {
                v90 = *v3;
                v91 = *(_QWORD *)(a2 + v90);
                if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v91);
                  *(_QWORD *)(a2 + v90) = v91 + 1;
                  v29 |= (unint64_t)(v92 & 0x7F) << v88;
                  if (v92 < 0)
                  {
                    v88 += 7;
                    v17 = v89++ >= 9;
                    if (v17)
                    {
                      LODWORD(v29) = 0;
                      goto LABEL_164;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v29) = 0;
LABEL_164:
              v93 = 156;
LABEL_165:
              *(_DWORD *)(a1 + v93) = v29;
              goto LABEL_203;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_203;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDOSAnalyticsSubmissionsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void *String;
  id v31;
  uint64_t v32;
  void *v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_60;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_62;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_62:
          v49 = 32;
          goto LABEL_79;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 64) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_66:
          *(_DWORD *)(a1 + 48) = v26;
          continue;
        case 3u:
          String = (void *)PBReaderReadString();

          v31 = String;
          v32 = 40;
          goto LABEL_37;
        case 4u:
          v33 = (void *)PBReaderReadString();

          v31 = v33;
          v32 = 56;
LABEL_37:
          *(_QWORD *)(a1 + v32) = v31;
          continue;
        case 5u:
          v34 = 0;
          v35 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 4u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v19 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_70:
          v49 = 24;
          goto LABEL_79;
        case 6u:
          v39 = 0;
          v40 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 1u;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v42 + 1;
              v19 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                v14 = v40++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_74:
          v49 = 8;
          goto LABEL_79;
        case 7u:
          v44 = 0;
          v45 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v46 = *v3;
        v47 = *(_QWORD *)(a2 + v46);
        if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
          break;
        v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
        *(_QWORD *)(a2 + v46) = v47 + 1;
        v19 |= (unint64_t)(v48 & 0x7F) << v44;
        if ((v48 & 0x80) == 0)
          goto LABEL_76;
        v44 += 7;
        v14 = v45++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_78;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_76:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_78:
      v49 = 16;
LABEL_79:
      *(_QWORD *)(a1 + v49) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPairedSyncSyncReportReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void *String;
  id v31;
  uint64_t v32;
  void *v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_103;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_105;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_103:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_105:
          v82 = 16;
          goto LABEL_114;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 84) |= 0x200u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_109:
          v83 = v26 != 0;
          v84 = 80;
          goto LABEL_148;
        case 3u:
          String = (void *)PBReaderReadString();

          v31 = String;
          v32 = 40;
          goto LABEL_45;
        case 4u:
          v33 = (void *)PBReaderReadString();

          v31 = v33;
          v32 = 48;
          goto LABEL_45;
        case 5u:
          v34 = 0;
          v35 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 1u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v19 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_113:
          v82 = 8;
LABEL_114:
          *(_QWORD *)(a1 + v82) = v19;
          continue;
        case 6u:
          v39 = (void *)PBReaderReadString();

          v31 = v39;
          v32 = 24;
LABEL_45:
          *(_QWORD *)(a1 + v32) = v31;
          continue;
        case 7u:
          v40 = 0;
          v41 = 0;
          v42 = 0;
          *(_WORD *)(a1 + 84) |= 0x20u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_118;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v42) = 0;
LABEL_118:
          v85 = 64;
          goto LABEL_143;
        case 8u:
          v46 = 0;
          v47 = 0;
          v42 = 0;
          *(_WORD *)(a1 + 84) |= 0x80u;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
              *(_QWORD *)(a2 + v48) = v49 + 1;
              v42 |= (unint64_t)(v50 & 0x7F) << v46;
              if (v50 < 0)
              {
                v46 += 7;
                v14 = v47++ >= 9;
                if (v14)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v42) = 0;
LABEL_122:
          v85 = 72;
          goto LABEL_143;
        case 9u:
          v51 = 0;
          v52 = 0;
          v42 = 0;
          *(_WORD *)(a1 + 84) |= 0x40u;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
              *(_QWORD *)(a2 + v53) = v54 + 1;
              v42 |= (unint64_t)(v55 & 0x7F) << v51;
              if (v55 < 0)
              {
                v51 += 7;
                v14 = v52++ >= 9;
                if (v14)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v42) = 0;
LABEL_126:
          v85 = 68;
          goto LABEL_143;
        case 0xAu:
          v56 = 0;
          v57 = 0;
          v42 = 0;
          *(_WORD *)(a1 + 84) |= 8u;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
              *(_QWORD *)(a2 + v58) = v59 + 1;
              v42 |= (unint64_t)(v60 & 0x7F) << v56;
              if (v60 < 0)
              {
                v56 += 7;
                v14 = v57++ >= 9;
                if (v14)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_130;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v42) = 0;
LABEL_130:
          v85 = 56;
          goto LABEL_143;
        case 0xBu:
          v61 = 0;
          v62 = 0;
          v42 = 0;
          *(_WORD *)(a1 + 84) |= 0x10u;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
              *(_QWORD *)(a2 + v63) = v64 + 1;
              v42 |= (unint64_t)(v65 & 0x7F) << v61;
              if (v65 < 0)
              {
                v61 += 7;
                v14 = v62++ >= 9;
                if (v14)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_134;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v42) = 0;
LABEL_134:
          v85 = 60;
          goto LABEL_143;
        case 0xCu:
          v66 = 0;
          v67 = 0;
          v42 = 0;
          *(_WORD *)(a1 + 84) |= 4u;
          while (2)
          {
            v68 = *v3;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
              *(_QWORD *)(a2 + v68) = v69 + 1;
              v42 |= (unint64_t)(v70 & 0x7F) << v66;
              if (v70 < 0)
              {
                v66 += 7;
                v14 = v67++ >= 9;
                if (v14)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_138;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v42) = 0;
LABEL_138:
          v85 = 32;
          goto LABEL_143;
        case 0xDu:
          v71 = 0;
          v72 = 0;
          v42 = 0;
          *(_WORD *)(a1 + 84) |= 0x100u;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
              *(_QWORD *)(a2 + v73) = v74 + 1;
              v42 |= (unint64_t)(v75 & 0x7F) << v71;
              if (v75 < 0)
              {
                v71 += 7;
                v14 = v72++ >= 9;
                if (v14)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_142;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v42) = 0;
LABEL_142:
          v85 = 76;
LABEL_143:
          *(_DWORD *)(a1 + v85) = v42;
          continue;
        case 0xEu:
          v76 = 0;
          v77 = 0;
          v78 = 0;
          *(_WORD *)(a1 + 84) |= 0x400u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v79 = *v3;
        v80 = *(_QWORD *)(a2 + v79);
        if (v80 == -1 || v80 >= *(_QWORD *)(a2 + *v4))
          break;
        v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v80);
        *(_QWORD *)(a2 + v79) = v80 + 1;
        v78 |= (unint64_t)(v81 & 0x7F) << v76;
        if ((v81 & 0x80) == 0)
          goto LABEL_145;
        v76 += 7;
        v14 = v77++ >= 9;
        if (v14)
        {
          v78 = 0;
          goto LABEL_147;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_145:
      if (*(_BYTE *)(a2 + *v5))
        v78 = 0;
LABEL_147:
      v83 = v78 != 0;
      v84 = 81;
LABEL_148:
      *(_BYTE *)(a1 + v84) = v83;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDAppBBPowerReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *String;
  uint64_t result;
  uint64_t v31;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 != 2)
      {
        if ((_DWORD)v17 != 1)
        {
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          goto LABEL_47;
        }
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_39;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_41;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_41:
        v31 = 20;
        goto LABEL_46;
      }
      String = (void *)PBReaderReadString();

      *(_QWORD *)(a1 + 8) = String;
LABEL_47:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v24 = 0;
    v25 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      v26 = *v3;
      v27 = *(_QWORD *)(a2 + v26);
      if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
      *(_QWORD *)(a2 + v26) = v27 + 1;
      v20 |= (unint64_t)(v28 & 0x7F) << v24;
      if ((v28 & 0x80) == 0)
        goto LABEL_43;
      v24 += 7;
      v14 = v25++ >= 9;
      if (v14)
      {
        LODWORD(v20) = 0;
        goto LABEL_45;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v20) = 0;
LABEL_45:
    v31 = 16;
LABEL_46:
    *(_DWORD *)(a1 + v31) = v20;
    goto LABEL_47;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDAppRRCConnectionStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 0x10u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_65;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_67;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_65:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_67:
          v50 = 32;
          goto LABEL_88;
        case 2u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 16) = String;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v19 |= (unint64_t)(v29 & 0x7F) << v25;
              if (v29 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_71:
          v50 = 12;
          goto LABEL_88;
        case 4u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v19 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_75:
          v50 = 8;
          goto LABEL_88;
        case 5u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v19 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_79:
          v50 = 24;
          goto LABEL_88;
        case 6u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 8u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v19 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_83:
          v50 = 28;
          goto LABEL_88;
        case 7u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v47 = *v3;
        v48 = *(_QWORD *)(a2 + v47);
        if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          break;
        v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
        *(_QWORD *)(a2 + v47) = v48 + 1;
        v19 |= (unint64_t)(v49 & 0x7F) << v45;
        if ((v49 & 0x80) == 0)
          goto LABEL_85;
        v45 += 7;
        v14 = v46++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_87;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_87:
      v50 = 36;
LABEL_88:
      *(_DWORD *)(a1 + v50) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDBacklightLuxMicroAmpsBucketReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDBasebandPowerToolKPIsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  uint64_t v137;
  char v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  unsigned int v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  char v191;
  char v192;
  unsigned int v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  char v198;
  unsigned int v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  char v203;
  char v204;
  unsigned int v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  char v210;
  unsigned int v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  char v216;
  unsigned int v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  char v221;
  char v222;
  unsigned int v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  char v227;
  char v228;
  unsigned int v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  char v233;
  char v234;
  unsigned int v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  char v239;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 432) |= 1u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_265;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_267;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_265:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_267:
              *(_QWORD *)(a1 + 416) = v20;
              goto LABEL_398;
            case 2u:
              v24 = 0;
              v25 = 0;
              v26 = 0;
              *(_BYTE *)(a1 + 432) |= 4u;
              while (2)
              {
                v27 = *v3;
                v28 = *(_QWORD *)(a2 + v27);
                if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
                  *(_QWORD *)(a2 + v27) = v28 + 1;
                  v26 |= (unint64_t)(v29 & 0x7F) << v24;
                  if (v29 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_271;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_271:
              v137 = 428;
              goto LABEL_276;
            case 3u:
              v30 = 0;
              v31 = 0;
              v26 = 0;
              *(_BYTE *)(a1 + 432) |= 2u;
              while (2)
              {
                v32 = *v3;
                v33 = *(_QWORD *)(a2 + v32);
                if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
                  *(_QWORD *)(a2 + v32) = v33 + 1;
                  v26 |= (unint64_t)(v34 & 0x7F) << v30;
                  if (v34 < 0)
                  {
                    v30 += 7;
                    v14 = v31++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_275;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_275:
              v137 = 424;
LABEL_276:
              *(_DWORD *)(a1 + v137) = v26;
              goto LABEL_398;
            case 4u:
              if (v16 != 2)
              {
                v138 = 0;
                v139 = 0;
                v140 = 0;
                while (1)
                {
                  v141 = *v3;
                  v142 = *(_QWORD *)(a2 + v141);
                  if (v142 == -1 || v142 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v142);
                  *(_QWORD *)(a2 + v141) = v142 + 1;
                  v140 |= (unint64_t)(v143 & 0x7F) << v138;
                  if (v143 < 0)
                  {
                    v138 += 7;
                    v14 = v139++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v35 = 0;
                v36 = 0;
                v37 = 0;
                while (1)
                {
                  v38 = *v3;
                  v39 = *(_QWORD *)(a2 + v38);
                  if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
                  *(_QWORD *)(a2 + v38) = v39 + 1;
                  v37 |= (unint64_t)(v40 & 0x7F) << v35;
                  if (v40 < 0)
                  {
                    v35 += 7;
                    v14 = v36++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_54;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 5u:
              if (v16 != 2)
              {
                v144 = 0;
                v145 = 0;
                v146 = 0;
                while (1)
                {
                  v147 = *v3;
                  v148 = *(_QWORD *)(a2 + v147);
                  if (v148 == -1 || v148 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v149 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v148);
                  *(_QWORD *)(a2 + v147) = v148 + 1;
                  v146 |= (unint64_t)(v149 & 0x7F) << v144;
                  if (v149 < 0)
                  {
                    v144 += 7;
                    v14 = v145++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v41 = 0;
                v42 = 0;
                v43 = 0;
                while (1)
                {
                  v44 = *v3;
                  v45 = *(_QWORD *)(a2 + v44);
                  if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
                  *(_QWORD *)(a2 + v44) = v45 + 1;
                  v43 |= (unint64_t)(v46 & 0x7F) << v41;
                  if (v46 < 0)
                  {
                    v41 += 7;
                    v14 = v42++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_67;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_67:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 6u:
              if (v16 != 2)
              {
                v150 = 0;
                v151 = 0;
                v152 = 0;
                while (1)
                {
                  v153 = *v3;
                  v154 = *(_QWORD *)(a2 + v153);
                  if (v154 == -1 || v154 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
                  *(_QWORD *)(a2 + v153) = v154 + 1;
                  v152 |= (unint64_t)(v155 & 0x7F) << v150;
                  if (v155 < 0)
                  {
                    v150 += 7;
                    v14 = v151++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v47 = 0;
                v48 = 0;
                v49 = 0;
                while (1)
                {
                  v50 = *v3;
                  v51 = *(_QWORD *)(a2 + v50);
                  if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
                  *(_QWORD *)(a2 + v50) = v51 + 1;
                  v49 |= (unint64_t)(v52 & 0x7F) << v47;
                  if (v52 < 0)
                  {
                    v47 += 7;
                    v14 = v48++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_80;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_80:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 7u:
              if (v16 != 2)
              {
                v156 = 0;
                v157 = 0;
                v158 = 0;
                while (1)
                {
                  v159 = *v3;
                  v160 = *(_QWORD *)(a2 + v159);
                  if (v160 == -1 || v160 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
                  *(_QWORD *)(a2 + v159) = v160 + 1;
                  v158 |= (unint64_t)(v161 & 0x7F) << v156;
                  if (v161 < 0)
                  {
                    v156 += 7;
                    v14 = v157++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v53 = 0;
                v54 = 0;
                v55 = 0;
                while (1)
                {
                  v56 = *v3;
                  v57 = *(_QWORD *)(a2 + v56);
                  if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
                  *(_QWORD *)(a2 + v56) = v57 + 1;
                  v55 |= (unint64_t)(v58 & 0x7F) << v53;
                  if (v58 < 0)
                  {
                    v53 += 7;
                    v14 = v54++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_93;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_93:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 8u:
              if (v16 != 2)
              {
                v162 = 0;
                v163 = 0;
                v164 = 0;
                while (1)
                {
                  v165 = *v3;
                  v166 = *(_QWORD *)(a2 + v165);
                  if (v166 == -1 || v166 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v167 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v166);
                  *(_QWORD *)(a2 + v165) = v166 + 1;
                  v164 |= (unint64_t)(v167 & 0x7F) << v162;
                  if (v167 < 0)
                  {
                    v162 += 7;
                    v14 = v163++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v59 = 0;
                v60 = 0;
                v61 = 0;
                while (1)
                {
                  v62 = *v3;
                  v63 = *(_QWORD *)(a2 + v62);
                  if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
                  *(_QWORD *)(a2 + v62) = v63 + 1;
                  v61 |= (unint64_t)(v64 & 0x7F) << v59;
                  if (v64 < 0)
                  {
                    v59 += 7;
                    v14 = v60++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_106;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_106:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 9u:
              if (v16 != 2)
              {
                v168 = 0;
                v169 = 0;
                v170 = 0;
                while (1)
                {
                  v171 = *v3;
                  v172 = *(_QWORD *)(a2 + v171);
                  if (v172 == -1 || v172 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v173 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v172);
                  *(_QWORD *)(a2 + v171) = v172 + 1;
                  v170 |= (unint64_t)(v173 & 0x7F) << v168;
                  if (v173 < 0)
                  {
                    v168 += 7;
                    v14 = v169++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v65 = 0;
                v66 = 0;
                v67 = 0;
                while (1)
                {
                  v68 = *v3;
                  v69 = *(_QWORD *)(a2 + v68);
                  if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
                  *(_QWORD *)(a2 + v68) = v69 + 1;
                  v67 |= (unint64_t)(v70 & 0x7F) << v65;
                  if (v70 < 0)
                  {
                    v65 += 7;
                    v14 = v66++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_119;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_119:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0xAu:
              if (v16 != 2)
              {
                v174 = 0;
                v175 = 0;
                v176 = 0;
                while (1)
                {
                  v177 = *v3;
                  v178 = *(_QWORD *)(a2 + v177);
                  if (v178 == -1 || v178 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v179 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v178);
                  *(_QWORD *)(a2 + v177) = v178 + 1;
                  v176 |= (unint64_t)(v179 & 0x7F) << v174;
                  if (v179 < 0)
                  {
                    v174 += 7;
                    v14 = v175++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v71 = 0;
                v72 = 0;
                v73 = 0;
                while (1)
                {
                  v74 = *v3;
                  v75 = *(_QWORD *)(a2 + v74);
                  if (v75 == -1 || v75 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v76 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v75);
                  *(_QWORD *)(a2 + v74) = v75 + 1;
                  v73 |= (unint64_t)(v76 & 0x7F) << v71;
                  if (v76 < 0)
                  {
                    v71 += 7;
                    v14 = v72++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_132;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_132:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0xBu:
              if (v16 != 2)
              {
                v180 = 0;
                v181 = 0;
                v182 = 0;
                while (1)
                {
                  v183 = *v3;
                  v184 = *(_QWORD *)(a2 + v183);
                  if (v184 == -1 || v184 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v185 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v184);
                  *(_QWORD *)(a2 + v183) = v184 + 1;
                  v182 |= (unint64_t)(v185 & 0x7F) << v180;
                  if (v185 < 0)
                  {
                    v180 += 7;
                    v14 = v181++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v77 = 0;
                v78 = 0;
                v79 = 0;
                while (1)
                {
                  v80 = *v3;
                  v81 = *(_QWORD *)(a2 + v80);
                  if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v81);
                  *(_QWORD *)(a2 + v80) = v81 + 1;
                  v79 |= (unint64_t)(v82 & 0x7F) << v77;
                  if (v82 < 0)
                  {
                    v77 += 7;
                    v14 = v78++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_145;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_145:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0xCu:
              if (v16 != 2)
              {
                v186 = 0;
                v187 = 0;
                v188 = 0;
                while (1)
                {
                  v189 = *v3;
                  v190 = *(_QWORD *)(a2 + v189);
                  if (v190 == -1 || v190 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v191 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v190);
                  *(_QWORD *)(a2 + v189) = v190 + 1;
                  v188 |= (unint64_t)(v191 & 0x7F) << v186;
                  if (v191 < 0)
                  {
                    v186 += 7;
                    v14 = v187++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v83 = 0;
                v84 = 0;
                v85 = 0;
                while (1)
                {
                  v86 = *v3;
                  v87 = *(_QWORD *)(a2 + v86);
                  if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
                  *(_QWORD *)(a2 + v86) = v87 + 1;
                  v85 |= (unint64_t)(v88 & 0x7F) << v83;
                  if (v88 < 0)
                  {
                    v83 += 7;
                    v14 = v84++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_158;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_158:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0xDu:
              if (v16 != 2)
              {
                v192 = 0;
                v193 = 0;
                v194 = 0;
                while (1)
                {
                  v195 = *v3;
                  v196 = *(_QWORD *)(a2 + v195);
                  if (v196 == -1 || v196 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v197 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v196);
                  *(_QWORD *)(a2 + v195) = v196 + 1;
                  v194 |= (unint64_t)(v197 & 0x7F) << v192;
                  if (v197 < 0)
                  {
                    v192 += 7;
                    v14 = v193++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v89 = 0;
                v90 = 0;
                v91 = 0;
                while (1)
                {
                  v92 = *v3;
                  v93 = *(_QWORD *)(a2 + v92);
                  if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
                  *(_QWORD *)(a2 + v92) = v93 + 1;
                  v91 |= (unint64_t)(v94 & 0x7F) << v89;
                  if (v94 < 0)
                  {
                    v89 += 7;
                    v14 = v90++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_171;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_171:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0xEu:
              if (v16 != 2)
              {
                v198 = 0;
                v199 = 0;
                v200 = 0;
                while (1)
                {
                  v201 = *v3;
                  v202 = *(_QWORD *)(a2 + v201);
                  if (v202 == -1 || v202 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v203 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v202);
                  *(_QWORD *)(a2 + v201) = v202 + 1;
                  v200 |= (unint64_t)(v203 & 0x7F) << v198;
                  if (v203 < 0)
                  {
                    v198 += 7;
                    v14 = v199++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v95 = 0;
                v96 = 0;
                v97 = 0;
                while (1)
                {
                  v98 = *v3;
                  v99 = *(_QWORD *)(a2 + v98);
                  if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
                  *(_QWORD *)(a2 + v98) = v99 + 1;
                  v97 |= (unint64_t)(v100 & 0x7F) << v95;
                  if (v100 < 0)
                  {
                    v95 += 7;
                    v14 = v96++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_184;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_184:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0xFu:
              if (v16 != 2)
              {
                v204 = 0;
                v205 = 0;
                v206 = 0;
                while (1)
                {
                  v207 = *v3;
                  v208 = *(_QWORD *)(a2 + v207);
                  if (v208 == -1 || v208 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v209 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v208);
                  *(_QWORD *)(a2 + v207) = v208 + 1;
                  v206 |= (unint64_t)(v209 & 0x7F) << v204;
                  if (v209 < 0)
                  {
                    v204 += 7;
                    v14 = v205++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v101 = 0;
                v102 = 0;
                v103 = 0;
                while (1)
                {
                  v104 = *v3;
                  v105 = *(_QWORD *)(a2 + v104);
                  if (v105 == -1 || v105 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v106 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v105);
                  *(_QWORD *)(a2 + v104) = v105 + 1;
                  v103 |= (unint64_t)(v106 & 0x7F) << v101;
                  if (v106 < 0)
                  {
                    v101 += 7;
                    v14 = v102++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_197;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_197:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0x10u:
              if (v16 != 2)
              {
                v210 = 0;
                v211 = 0;
                v212 = 0;
                while (1)
                {
                  v213 = *v3;
                  v214 = *(_QWORD *)(a2 + v213);
                  if (v214 == -1 || v214 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v215 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v214);
                  *(_QWORD *)(a2 + v213) = v214 + 1;
                  v212 |= (unint64_t)(v215 & 0x7F) << v210;
                  if (v215 < 0)
                  {
                    v210 += 7;
                    v14 = v211++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v107 = 0;
                v108 = 0;
                v109 = 0;
                while (1)
                {
                  v110 = *v3;
                  v111 = *(_QWORD *)(a2 + v110);
                  if (v111 == -1 || v111 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v112 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v111);
                  *(_QWORD *)(a2 + v110) = v111 + 1;
                  v109 |= (unint64_t)(v112 & 0x7F) << v107;
                  if (v112 < 0)
                  {
                    v107 += 7;
                    v14 = v108++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_210;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_210:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0x11u:
              if (v16 != 2)
              {
                v216 = 0;
                v217 = 0;
                v218 = 0;
                while (1)
                {
                  v219 = *v3;
                  v220 = *(_QWORD *)(a2 + v219);
                  if (v220 == -1 || v220 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v221 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v220);
                  *(_QWORD *)(a2 + v219) = v220 + 1;
                  v218 |= (unint64_t)(v221 & 0x7F) << v216;
                  if (v221 < 0)
                  {
                    v216 += 7;
                    v14 = v217++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v113 = 0;
                v114 = 0;
                v115 = 0;
                while (1)
                {
                  v116 = *v3;
                  v117 = *(_QWORD *)(a2 + v116);
                  if (v117 == -1 || v117 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v118 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v117);
                  *(_QWORD *)(a2 + v116) = v117 + 1;
                  v115 |= (unint64_t)(v118 & 0x7F) << v113;
                  if (v118 < 0)
                  {
                    v113 += 7;
                    v14 = v114++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_223;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_223:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0x12u:
              if (v16 != 2)
              {
                v222 = 0;
                v223 = 0;
                v224 = 0;
                while (1)
                {
                  v225 = *v3;
                  v226 = *(_QWORD *)(a2 + v225);
                  if (v226 == -1 || v226 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v227 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v226);
                  *(_QWORD *)(a2 + v225) = v226 + 1;
                  v224 |= (unint64_t)(v227 & 0x7F) << v222;
                  if (v227 < 0)
                  {
                    v222 += 7;
                    v14 = v223++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v119 = 0;
                v120 = 0;
                v121 = 0;
                while (1)
                {
                  v122 = *v3;
                  v123 = *(_QWORD *)(a2 + v122);
                  if (v123 == -1 || v123 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v124 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v123);
                  *(_QWORD *)(a2 + v122) = v123 + 1;
                  v121 |= (unint64_t)(v124 & 0x7F) << v119;
                  if (v124 < 0)
                  {
                    v119 += 7;
                    v14 = v120++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_236;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_236:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0x13u:
              if (v16 != 2)
              {
                v228 = 0;
                v229 = 0;
                v230 = 0;
                while (1)
                {
                  v231 = *v3;
                  v232 = *(_QWORD *)(a2 + v231);
                  if (v232 == -1 || v232 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_396;
                  v233 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v232);
                  *(_QWORD *)(a2 + v231) = v232 + 1;
                  v230 |= (unint64_t)(v233 & 0x7F) << v228;
                  if (v233 < 0)
                  {
                    v228 += 7;
                    v14 = v229++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v125 = 0;
                v126 = 0;
                v127 = 0;
                while (1)
                {
                  v128 = *v3;
                  v129 = *(_QWORD *)(a2 + v128);
                  if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
                  *(_QWORD *)(a2 + v128) = v129 + 1;
                  v127 |= (unint64_t)(v130 & 0x7F) << v125;
                  if (v130 < 0)
                  {
                    v125 += 7;
                    v14 = v126++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_249;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_249:
                PBRepeatedInt32Add();
              }
              goto LABEL_263;
            case 0x14u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v131 = 0;
                  v132 = 0;
                  v133 = 0;
                  while (1)
                  {
                    v134 = *v3;
                    v135 = *(_QWORD *)(a2 + v134);
                    if (v135 == -1 || v135 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v136 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v135);
                    *(_QWORD *)(a2 + v134) = v135 + 1;
                    v133 |= (unint64_t)(v136 & 0x7F) << v131;
                    if (v136 < 0)
                    {
                      v131 += 7;
                      v14 = v132++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_262;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_262:
                  PBRepeatedInt32Add();
                }
LABEL_263:
                PBReaderRecallMark();
              }
              else
              {
                v234 = 0;
                v235 = 0;
                v236 = 0;
                while (1)
                {
                  v237 = *v3;
                  v238 = *(_QWORD *)(a2 + v237);
                  if (v238 == -1 || v238 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v239 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v238);
                  *(_QWORD *)(a2 + v237) = v238 + 1;
                  v236 |= (unint64_t)(v239 & 0x7F) << v234;
                  if (v239 < 0)
                  {
                    v234 += 7;
                    v14 = v235++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_397;
                }
LABEL_396:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_397:
                PBRepeatedInt32Add();
              }
LABEL_398:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_398;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDCpuLoadReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_31;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3) == 1)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDLQMDataTransferReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  uint64_t v19;
  int *v20;
  void *String;
  id v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v9 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v4;
        v14 = *(_QWORD *)(a2 + v13);
        if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        v16 = v11++ >= 9;
        if (v16)
        {
          v12 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v12 = 0;
LABEL_14:
      if (v17 || (v12 & 7) == 4)
        break;
      switch((v12 >> 3))
      {
        case 1u:
          v19 = v2;
          v20 = v8;
          String = (void *)PBReaderReadString();

          v22 = String;
          v8 = v20;
          v2 = v19;
          *(_QWORD *)(a1 + 8) = v22;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + v8[856]) |= 1u;
          while (2)
          {
            v27 = *v4;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v16 = v25++ >= 9;
                if (v16)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v26) = 0;
LABEL_53:
          v45 = 16;
          goto LABEL_66;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + v8[856]) |= 8u;
          while (2)
          {
            v32 = *v4;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v16 = v31++ >= 9;
                if (v16)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v26) = 0;
LABEL_57:
          v45 = 28;
          goto LABEL_66;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + v8[856]) |= 2u;
          while (2)
          {
            v37 = *v4;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v16 = v36++ >= 9;
                if (v16)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v26) = 0;
LABEL_61:
          v45 = 20;
          goto LABEL_66;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + v8[856]) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v42 = *v4;
        v43 = *(_QWORD *)(a2 + v42);
        if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v5))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v43);
        *(_QWORD *)(a2 + v42) = v43 + 1;
        v26 |= (unint64_t)(v44 & 0x7F) << v40;
        if ((v44 & 0x80) == 0)
          goto LABEL_63;
        v40 += 7;
        v16 = v41++ >= 9;
        if (v16)
        {
          LODWORD(v26) = 0;
          goto LABEL_65;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_63:
      if (*(_BYTE *)(a2 + *v6))
        LODWORD(v26) = 0;
LABEL_65:
      v45 = 24;
LABEL_66:
      *(_DWORD *)(a1 + v45) = v26;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDNetworkUsageReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  uint64_t v19;
  int *v20;
  void *String;
  id v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v9 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v4;
        v14 = *(_QWORD *)(a2 + v13);
        if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        v16 = v11++ >= 9;
        if (v16)
        {
          v12 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v12 = 0;
LABEL_14:
      if (v17 || (v12 & 7) == 4)
        break;
      switch((v12 >> 3))
      {
        case 1u:
          v19 = v2;
          v20 = v8;
          String = (void *)PBReaderReadString();

          v22 = String;
          v8 = v20;
          v2 = v19;
          *(_QWORD *)(a1 + 40) = v22;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + v8[862]) |= 4u;
          while (2)
          {
            v27 = *v4;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v16 = v25++ >= 9;
                if (v16)
                {
                  v26 = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v26 = 0;
LABEL_60:
          v51 = 24;
          goto LABEL_73;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + v8[862]) |= 8u;
          while (2)
          {
            v32 = *v4;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v16 = v31++ >= 9;
                if (v16)
                {
                  v26 = 0;
                  goto LABEL_64;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v26 = 0;
LABEL_64:
          v51 = 32;
          goto LABEL_73;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + v8[862]) |= 1u;
          while (2)
          {
            v37 = *v4;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v16 = v36++ >= 9;
                if (v16)
                {
                  v26 = 0;
                  goto LABEL_68;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v26 = 0;
LABEL_68:
          v51 = 8;
          goto LABEL_73;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + v8[862]) |= 2u;
          while (2)
          {
            v42 = *v4;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v16 = v41++ >= 9;
                if (v16)
                {
                  v26 = 0;
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v26 = 0;
LABEL_72:
          v51 = 16;
LABEL_73:
          *(_QWORD *)(a1 + v51) = v26;
          continue;
        case 6u:
          v45 = 0;
          v46 = 0;
          v47 = 0;
          *(_BYTE *)(a1 + v8[862]) |= 0x10u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v48 = *v4;
        v49 = *(_QWORD *)(a2 + v48);
        if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v5))
          break;
        v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v49);
        *(_QWORD *)(a2 + v48) = v49 + 1;
        v47 |= (unint64_t)(v50 & 0x7F) << v45;
        if ((v50 & 0x80) == 0)
          goto LABEL_75;
        v45 += 7;
        v16 = v46++ >= 9;
        if (v16)
        {
          LODWORD(v47) = 0;
          goto LABEL_77;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_75:
      if (*(_BYTE *)(a2 + *v6))
        LODWORD(v47) = 0;
LABEL_77:
      *(_DWORD *)(a1 + 48) = v47;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDPowerApMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_64;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_66;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_66:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_70:
          v50 = 20;
          goto LABEL_87;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 0x20u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_74:
          v50 = 32;
          goto LABEL_87;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 0x10u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_78:
          v50 = 28;
          goto LABEL_87;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_82:
          v50 = 24;
          goto LABEL_87;
        case 6u:
          v45 = 0;
          v46 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v47 = *v3;
        v48 = *(_QWORD *)(a2 + v47);
        if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          break;
        v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
        *(_QWORD *)(a2 + v47) = v48 + 1;
        v26 |= (unint64_t)(v49 & 0x7F) << v45;
        if ((v49 & 0x80) == 0)
          goto LABEL_84;
        v45 += 7;
        v14 = v46++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_86;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_84:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_86:
      v50 = 16;
LABEL_87:
      *(_DWORD *)(a1 + v50) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerAppBBMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDAppBBPower *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDAppBBPower);
        objc_msgSend((id)a1, "addAppPower:", v23);

        if (!PBReaderPlaceMark() || (AWDAppBBPowerReadFrom((uint64_t)v23, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerAudioMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 80) |= 1u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_84;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_86;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_84:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_86:
              *(_QWORD *)(a1 + 56) = v20;
              goto LABEL_120;
            case 2u:
              v24 = 0;
              v25 = 0;
              v26 = 0;
              *(_BYTE *)(a1 + 80) |= 0x10u;
              while (2)
              {
                v27 = *v3;
                v28 = *(_QWORD *)(a2 + v27);
                if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
                  *(_QWORD *)(a2 + v27) = v28 + 1;
                  v26 |= (unint64_t)(v29 & 0x7F) << v24;
                  if (v29 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_90;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_90:
              v57 = 76;
              goto LABEL_103;
            case 3u:
              v30 = 0;
              v31 = 0;
              v26 = 0;
              *(_BYTE *)(a1 + 80) |= 4u;
              while (2)
              {
                v32 = *v3;
                v33 = *(_QWORD *)(a2 + v32);
                if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
                  *(_QWORD *)(a2 + v32) = v33 + 1;
                  v26 |= (unint64_t)(v34 & 0x7F) << v30;
                  if (v34 < 0)
                  {
                    v30 += 7;
                    v14 = v31++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_94;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_94:
              v57 = 68;
              goto LABEL_103;
            case 4u:
              v35 = 0;
              v36 = 0;
              v26 = 0;
              *(_BYTE *)(a1 + 80) |= 8u;
              while (2)
              {
                v37 = *v3;
                v38 = *(_QWORD *)(a2 + v37);
                if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
                  *(_QWORD *)(a2 + v37) = v38 + 1;
                  v26 |= (unint64_t)(v39 & 0x7F) << v35;
                  if (v39 < 0)
                  {
                    v35 += 7;
                    v14 = v36++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_98;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_98:
              v57 = 72;
              goto LABEL_103;
            case 5u:
              v40 = 0;
              v41 = 0;
              v26 = 0;
              *(_BYTE *)(a1 + 80) |= 2u;
              while (2)
              {
                v42 = *v3;
                v43 = *(_QWORD *)(a2 + v42);
                if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
                  *(_QWORD *)(a2 + v42) = v43 + 1;
                  v26 |= (unint64_t)(v44 & 0x7F) << v40;
                  if (v44 < 0)
                  {
                    v40 += 7;
                    v14 = v41++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_102;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_102:
              v57 = 64;
LABEL_103:
              *(_DWORD *)(a1 + v57) = v26;
              goto LABEL_120;
            case 6u:
              if (v16 != 2)
              {
                v58 = 0;
                v59 = 0;
                v60 = 0;
                while (1)
                {
                  v61 = *v3;
                  v62 = *(_QWORD *)(a2 + v61);
                  if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_118;
                  v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
                  *(_QWORD *)(a2 + v61) = v62 + 1;
                  v60 |= (unint64_t)(v63 & 0x7F) << v58;
                  if (v63 < 0)
                  {
                    v58 += 7;
                    v14 = v59++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_119;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v45 = 0;
                v46 = 0;
                v47 = 0;
                while (1)
                {
                  v48 = *v3;
                  v49 = *(_QWORD *)(a2 + v48);
                  if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
                  *(_QWORD *)(a2 + v48) = v49 + 1;
                  v47 |= (unint64_t)(v50 & 0x7F) << v45;
                  if (v50 < 0)
                  {
                    v45 += 7;
                    v14 = v46++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_68;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_68:
                PBRepeatedUInt32Add();
              }
              goto LABEL_82;
            case 7u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v51 = 0;
                  v52 = 0;
                  v53 = 0;
                  while (1)
                  {
                    v54 = *v3;
                    v55 = *(_QWORD *)(a2 + v54);
                    if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
                    *(_QWORD *)(a2 + v54) = v55 + 1;
                    v53 |= (unint64_t)(v56 & 0x7F) << v51;
                    if (v56 < 0)
                    {
                      v51 += 7;
                      v14 = v52++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_81;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_81:
                  PBRepeatedUInt32Add();
                }
LABEL_82:
                PBReaderRecallMark();
              }
              else
              {
                v64 = 0;
                v65 = 0;
                v66 = 0;
                while (1)
                {
                  v67 = *v3;
                  v68 = *(_QWORD *)(a2 + v67);
                  if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
                  *(_QWORD *)(a2 + v67) = v68 + 1;
                  v66 |= (unint64_t)(v69 & 0x7F) << v64;
                  if (v69 < 0)
                  {
                    v64 += 7;
                    v14 = v65++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_119;
                }
LABEL_118:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_119:
                PBRepeatedUInt32Add();
              }
LABEL_120:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_120;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerBBAppRRCMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  AWDAppRRCConnectionStats *v30;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 28) |= 2u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_45;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_47:
        *(_DWORD *)(a1 + 24) = v26;
      }
      else if ((_DWORD)v17 == 2)
      {
        v30 = objc_alloc_init(AWDAppRRCConnectionStats);
        objc_msgSend((id)a1, "addAppConnStats:", v30);

        if (!PBReaderPlaceMark() || (AWDAppRRCConnectionStatsReadFrom((uint64_t)v30, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_41;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_43:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerBBCallMetricInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 68) |= 4u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_70;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_72;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_70:
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v20) = 0;
LABEL_72:
              v46 = 64;
              goto LABEL_81;
            case 2u:
              v24 = 0;
              v25 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 68) |= 1u;
              while (2)
              {
                v26 = *v3;
                v27 = *(_QWORD *)(a2 + v26);
                if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
                  *(_QWORD *)(a2 + v26) = v27 + 1;
                  v20 |= (unint64_t)(v28 & 0x7F) << v24;
                  if (v28 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (v14)
                    {
                      LODWORD(v20) = 0;
                      goto LABEL_76;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v20) = 0;
LABEL_76:
              v46 = 56;
              goto LABEL_81;
            case 3u:
              if (v16 != 2)
              {
                v47 = 0;
                v48 = 0;
                v49 = 0;
                while (1)
                {
                  v50 = *v3;
                  v51 = *(_QWORD *)(a2 + v50);
                  if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_96;
                  v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
                  *(_QWORD *)(a2 + v50) = v51 + 1;
                  v49 |= (unint64_t)(v52 & 0x7F) << v47;
                  if (v52 < 0)
                  {
                    v47 += 7;
                    v14 = v48++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_97;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v29 = 0;
                v30 = 0;
                v31 = 0;
                while (1)
                {
                  v32 = *v3;
                  v33 = *(_QWORD *)(a2 + v32);
                  if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
                  *(_QWORD *)(a2 + v32) = v33 + 1;
                  v31 |= (unint64_t)(v34 & 0x7F) << v29;
                  if (v34 < 0)
                  {
                    v29 += 7;
                    v14 = v30++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_47;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_47:
                PBRepeatedUInt32Add();
              }
              goto LABEL_68;
            case 4u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v35 = 0;
                  v36 = 0;
                  v37 = 0;
                  while (1)
                  {
                    v38 = *v3;
                    v39 = *(_QWORD *)(a2 + v38);
                    if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
                    *(_QWORD *)(a2 + v38) = v39 + 1;
                    v37 |= (unint64_t)(v40 & 0x7F) << v35;
                    if (v40 < 0)
                    {
                      v35 += 7;
                      v14 = v36++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_60;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
                  PBRepeatedUInt32Add();
                }
LABEL_68:
                PBReaderRecallMark();
              }
              else
              {
                v53 = 0;
                v54 = 0;
                v55 = 0;
                while (1)
                {
                  v56 = *v3;
                  v57 = *(_QWORD *)(a2 + v56);
                  if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
                  *(_QWORD *)(a2 + v56) = v57 + 1;
                  v55 |= (unint64_t)(v58 & 0x7F) << v53;
                  if (v58 < 0)
                  {
                    v53 += 7;
                    v14 = v54++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_97;
                }
LABEL_96:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_97:
                PBRepeatedUInt32Add();
              }
LABEL_98:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 5u:
              v41 = 0;
              v42 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 68) |= 2u;
              while (2)
              {
                v43 = *v3;
                v44 = *(_QWORD *)(a2 + v43);
                if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
                  *(_QWORD *)(a2 + v43) = v44 + 1;
                  v20 |= (unint64_t)(v45 & 0x7F) << v41;
                  if (v45 < 0)
                  {
                    v41 += 7;
                    v14 = v42++ >= 9;
                    if (v14)
                    {
                      LODWORD(v20) = 0;
                      goto LABEL_80;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v20) = 0;
LABEL_80:
              v46 = 60;
LABEL_81:
              *(_DWORD *)(a1 + v46) = v20;
              goto LABEL_98;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_98;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerBBCallMetricsReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  int *v58;
  int *v59;
  int *v60;
  AWDPowerBBCallMetricInfo *v61;
  uint64_t v62;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
  v8 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
  v9 = (int *)MEMORY[0x24BE7AF30];
  v10 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    while (1)
    {
      v14 = *v3;
      v15 = *(_QWORD *)(a2 + v14);
      if (v15 == -1 || v15 >= *(_QWORD *)(a2 + *v4))
        break;
      v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v15);
      *(_QWORD *)(a2 + v14) = v15 + 1;
      v13 |= (unint64_t)(v16 & 0x7F) << v11;
      if ((v16 & 0x80) == 0)
        goto LABEL_12;
      v11 += 7;
      v17 = v12++ >= 9;
      if (v17)
      {
        v13 = 0;
        v18 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v18 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v13 = 0;
LABEL_14:
    if (v18 || (v13 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v13 >> 3))
    {
      case 1u:
        v20 = 0;
        v21 = 0;
        v22 = 0;
        a1[v7[896]] |= 1u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            goto LABEL_74;
          v20 += 7;
          v17 = v21++ >= 9;
          if (v17)
          {
            v22 = 0;
            goto LABEL_76;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_74:
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_76:
        *(_QWORD *)&a1[v8[897]] = v22;
        goto LABEL_102;
      case 2u:
        v27 = 0;
        v28 = 0;
        v29 = 0;
        a1[v7[896]] |= 0x10u;
        while (2)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v31);
            *(_QWORD *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if (v32 < 0)
            {
              v27 += 7;
              v17 = v28++ >= 9;
              if (v17)
              {
                LODWORD(v29) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v29) = 0;
LABEL_80:
        v62 = v10[899];
        goto LABEL_101;
      case 3u:
        v33 = 0;
        v34 = 0;
        v29 = 0;
        a1[v7[896]] |= 4u;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v29 |= (unint64_t)(v37 & 0x7F) << v33;
            if (v37 < 0)
            {
              v33 += 7;
              v17 = v34++ >= 9;
              if (v17)
              {
                LODWORD(v29) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v29) = 0;
LABEL_84:
        v62 = 20;
        goto LABEL_101;
      case 4u:
        v38 = 0;
        v39 = 0;
        v29 = 0;
        a1[v7[896]] |= 8u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v29 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              v17 = v39++ >= 9;
              if (v17)
              {
                LODWORD(v29) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v29) = 0;
LABEL_88:
        v62 = 24;
        goto LABEL_101;
      case 5u:
        v43 = 0;
        v44 = 0;
        v29 = 0;
        a1[v7[896]] |= 2u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v29 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v17 = v44++ >= 9;
              if (v17)
              {
                LODWORD(v29) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v29) = 0;
LABEL_92:
        v62 = 16;
        goto LABEL_101;
      case 6u:
        v48 = 0;
        v49 = 0;
        v29 = 0;
        a1[v7[896]] |= 0x20u;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v29 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v17 = v49++ >= 9;
              if (v17)
              {
                LODWORD(v29) = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v29) = 0;
LABEL_96:
        v62 = 32;
        goto LABEL_101;
      case 7u:
        v53 = 0;
        v54 = 0;
        v29 = 0;
        a1[v7[896]] |= 0x40u;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v29 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v17 = v54++ >= 9;
              if (v17)
              {
                LODWORD(v29) = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v29) = 0;
LABEL_100:
        v62 = 36;
LABEL_101:
        *(_DWORD *)&a1[v62] = v29;
        goto LABEL_102;
      case 8u:
        v58 = v10;
        v59 = v7;
        v60 = v8;
        v61 = objc_alloc_init(AWDPowerBBCallMetricInfo);
        objc_msgSend(a1, "addMetrics:", v61);

        if (PBReaderPlaceMark() && (AWDPowerBBCallMetricInfoReadFrom((uint64_t)v61, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          v8 = v60;
          v7 = v59;
          v10 = v58;
LABEL_102:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_102;
    }
  }
}

uint64_t AWDPowerBBLQMDataTransferMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  AWDLQMDataTransfer *v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      v16 = v10 & 7;
      if (v15 || v16 == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v18 == 2)
      {
        v32 = objc_alloc_init(AWDLQMDataTransfer);
        objc_msgSend((id)a1, "addLQMBytes:", v32);

        if (!PBReaderPlaceMark() || (AWDLQMDataTransferReadFrom((uint64_t)v32, a2) & 1) == 0)
          return 0;
LABEL_43:
        PBReaderRecallMark();
        goto LABEL_59;
      }
      if ((_DWORD)v18 == 1)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_47;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_49;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_47:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_49:
        *(_QWORD *)(a1 + 32) = v21;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
LABEL_59:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    if (v16 != 2)
    {
      v33 = 0;
      v34 = 0;
      v35 = 0;
      while (1)
      {
        v36 = *v3;
        v37 = *(_QWORD *)(a2 + v36);
        if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
          break;
        v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
        *(_QWORD *)(a2 + v36) = v37 + 1;
        v35 |= (unint64_t)(v38 & 0x7F) << v33;
        if (v38 < 0)
        {
          v33 += 7;
          v14 = v34++ >= 9;
          if (!v14)
            continue;
        }
        goto LABEL_58;
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_58:
      PBRepeatedUInt32Add();
      goto LABEL_59;
    }
    result = PBReaderPlaceMark();
    if (!(_DWORD)result)
      return result;
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
    {
      v26 = 0;
      v27 = 0;
      v28 = 0;
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if (v31 < 0)
        {
          v26 += 7;
          v14 = v27++ >= 9;
          if (!v14)
            continue;
        }
        goto LABEL_40;
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
      PBRepeatedUInt32Add();
    }
    goto LABEL_43;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerBBNonDataMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t result;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_71;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_73;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_71:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_73:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v23 = 0;
          v24 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 40) |= 0x20u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if (v28 < 0)
              {
                v23 += 7;
                v14 = v24++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_77:
          v55 = 32;
          goto LABEL_98;
        case 3u:
          v29 = 0;
          v30 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 40) |= 8u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v25 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_81;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_81:
          v55 = 24;
          goto LABEL_98;
        case 4u:
          v34 = 0;
          v35 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 40) |= 0x10u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v25 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_85:
          v55 = 28;
          goto LABEL_98;
        case 6u:
          v40 = 0;
          v41 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v25 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_89;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_89:
          v55 = 20;
          goto LABEL_98;
        case 7u:
          v45 = 0;
          v46 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 40) |= 0x40u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v25 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_93;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_93:
          v55 = 36;
          goto LABEL_98;
        case 8u:
          v50 = 0;
          v51 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v52 = *v3;
        v53 = *(_QWORD *)(a2 + v52);
        if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          break;
        v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
        *(_QWORD *)(a2 + v52) = v53 + 1;
        v25 |= (unint64_t)(v54 & 0x7F) << v50;
        if ((v54 & 0x80) == 0)
          goto LABEL_95;
        v50 += 7;
        v14 = v51++ >= 9;
        if (v14)
        {
          LODWORD(v25) = 0;
          goto LABEL_97;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_95:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v25) = 0;
LABEL_97:
      v55 = 16;
LABEL_98:
      *(_DWORD *)(a1 + v55) = v25;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerBBRATConnectedMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDRATConnectedPower *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDRATConnectedPower);
        objc_msgSend((id)a1, "addRATPower:", v23);

        if (!PBReaderPlaceMark() || !AWDRATConnectedPowerReadFrom((uint64_t)v23, a2))
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerBatteryMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 48) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_85;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_87;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_87:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 0x80u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_91:
          v65 = 40;
          goto LABEL_120;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 0x40u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_95:
          v65 = 36;
          goto LABEL_120;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 0x20u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_99:
          v65 = 32;
          goto LABEL_120;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 2u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_103:
          v65 = 16;
          goto LABEL_120;
        case 6u:
          v45 = 0;
          v46 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 0x100u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v26 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_107;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_107:
          v65 = 44;
          goto LABEL_120;
        case 7u:
          v50 = 0;
          v51 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 4u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v26 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_111;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_111:
          v65 = 20;
          goto LABEL_120;
        case 8u:
          v55 = 0;
          v56 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 0x10u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v26 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_115:
          v65 = 28;
          goto LABEL_120;
        case 9u:
          v60 = 0;
          v61 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v62 = *v3;
        v63 = *(_QWORD *)(a2 + v62);
        if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          break;
        v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
        *(_QWORD *)(a2 + v62) = v63 + 1;
        v26 |= (unint64_t)(v64 & 0x7F) << v60;
        if ((v64 & 0x80) == 0)
          goto LABEL_117;
        v60 += 7;
        v14 = v61++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_119;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_117:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_119:
      v65 = 24;
LABEL_120:
      *(_DWORD *)(a1 + v65) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerBluetoothMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_71;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_73;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_71:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_73:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_77:
          v55 = 16;
          goto LABEL_98;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 0x40u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_81;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_81:
          v55 = 36;
          goto LABEL_98;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 8u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_85:
          v55 = 24;
          goto LABEL_98;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 0x10u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_89;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_89:
          v55 = 28;
          goto LABEL_98;
        case 6u:
          v45 = 0;
          v46 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v26 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_93;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_93:
          v55 = 20;
          goto LABEL_98;
        case 7u:
          v50 = 0;
          v51 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v52 = *v3;
        v53 = *(_QWORD *)(a2 + v52);
        if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          break;
        v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
        *(_QWORD *)(a2 + v52) = v53 + 1;
        v26 |= (unint64_t)(v54 & 0x7F) << v50;
        if ((v54 & 0x80) == 0)
          goto LABEL_95;
        v50 += 7;
        v14 = v51++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_97;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_95:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_97:
      v55 = 32;
LABEL_98:
      *(_DWORD *)(a1 + v55) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerCameraMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_50;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_52;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_50:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_52:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_56:
          v40 = 20;
          goto LABEL_65;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_60:
          v40 = 16;
          goto LABEL_65;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v26 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
          goto LABEL_62;
        v35 += 7;
        v14 = v36++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_64;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_64:
      v40 = 24;
LABEL_65:
      *(_DWORD *)(a1 + v40) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerDisplayBacklightMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  AWDBacklightLuxMicroAmpsBucket *v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  uint64_t v146;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 124) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_200;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_202;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_200:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_202:
        *(_QWORD *)(a1 + 8) = v19;
        goto LABEL_300;
      case 2u:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x4000u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_206:
        v146 = 80;
        goto LABEL_299;
      case 3u:
        v30 = 0;
        v31 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x1000000u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v26 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_210:
        v146 = 120;
        goto LABEL_299;
      case 4u:
        v35 = 0;
        v36 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x80000u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v26 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_214;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_214:
        v146 = 100;
        goto LABEL_299;
      case 5u:
        v40 = 0;
        v41 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x40000u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v26 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_218;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_218:
        v146 = 96;
        goto LABEL_299;
      case 6u:
        v45 = 0;
        v46 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x20000u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v26 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_222:
        v146 = 92;
        goto LABEL_299;
      case 7u:
        v50 = 0;
        v51 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x8000u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v26 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_226;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_226:
        v146 = 84;
        goto LABEL_299;
      case 8u:
        v55 = 0;
        v56 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x10u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v26 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              v14 = v56++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_230;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_230:
        v146 = 28;
        goto LABEL_299;
      case 9u:
        v60 = 0;
        v61 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x200u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v26 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_234;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_234:
        v146 = 48;
        goto LABEL_299;
      case 0xAu:
        v65 = 0;
        v66 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x20u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v26 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_238;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_238:
        v146 = 32;
        goto LABEL_299;
      case 0xBu:
        v70 = 0;
        v71 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x400u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v26 |= (unint64_t)(v74 & 0x7F) << v70;
            if (v74 < 0)
            {
              v70 += 7;
              v14 = v71++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_242;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_242:
        v146 = 52;
        goto LABEL_299;
      case 0xCu:
        v75 = 0;
        v76 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 4u;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v78 + 1;
            v26 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              v14 = v76++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_246;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_246:
        v146 = 20;
        goto LABEL_299;
      case 0xDu:
        v80 = 0;
        v81 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x80u;
        while (2)
        {
          v82 = *v3;
          v83 = *(_QWORD *)(a2 + v82);
          if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
            *(_QWORD *)(a2 + v82) = v83 + 1;
            v26 |= (unint64_t)(v84 & 0x7F) << v80;
            if (v84 < 0)
            {
              v80 += 7;
              v14 = v81++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_250;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_250:
        v146 = 40;
        goto LABEL_299;
      case 0xEu:
        v85 = 0;
        v86 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 8u;
        while (2)
        {
          v87 = *v3;
          v88 = *(_QWORD *)(a2 + v87);
          if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
            *(_QWORD *)(a2 + v87) = v88 + 1;
            v26 |= (unint64_t)(v89 & 0x7F) << v85;
            if (v89 < 0)
            {
              v85 += 7;
              v14 = v86++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_254;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_254:
        v146 = 24;
        goto LABEL_299;
      case 0xFu:
        v90 = 0;
        v91 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x100u;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
            *(_QWORD *)(a2 + v92) = v93 + 1;
            v26 |= (unint64_t)(v94 & 0x7F) << v90;
            if (v94 < 0)
            {
              v90 += 7;
              v14 = v91++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_258;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_258:
        v146 = 44;
        goto LABEL_299;
      case 0x10u:
        v95 = 0;
        v96 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x40u;
        while (2)
        {
          v97 = *v3;
          v98 = *(_QWORD *)(a2 + v97);
          if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v98);
            *(_QWORD *)(a2 + v97) = v98 + 1;
            v26 |= (unint64_t)(v99 & 0x7F) << v95;
            if (v99 < 0)
            {
              v95 += 7;
              v14 = v96++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_262;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_262:
        v146 = 36;
        goto LABEL_299;
      case 0x11u:
        v100 = 0;
        v101 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x1000u;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
            *(_QWORD *)(a2 + v102) = v103 + 1;
            v26 |= (unint64_t)(v104 & 0x7F) << v100;
            if (v104 < 0)
            {
              v100 += 7;
              v14 = v101++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_266;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_266:
        v146 = 60;
        goto LABEL_299;
      case 0x12u:
        v105 = 0;
        v106 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x800u;
        while (2)
        {
          v107 = *v3;
          v108 = *(_QWORD *)(a2 + v107);
          if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
            *(_QWORD *)(a2 + v107) = v108 + 1;
            v26 |= (unint64_t)(v109 & 0x7F) << v105;
            if (v109 < 0)
            {
              v105 += 7;
              v14 = v106++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_270;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_270:
        v146 = 56;
        goto LABEL_299;
      case 0x13u:
        v110 = 0;
        v111 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 2u;
        while (2)
        {
          v112 = *v3;
          v113 = *(_QWORD *)(a2 + v112);
          if (v113 == -1 || v113 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v113);
            *(_QWORD *)(a2 + v112) = v113 + 1;
            v26 |= (unint64_t)(v114 & 0x7F) << v110;
            if (v114 < 0)
            {
              v110 += 7;
              v14 = v111++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_274;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_274:
        v146 = 16;
        goto LABEL_299;
      case 0x14u:
        v115 = 0;
        v116 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x2000u;
        while (2)
        {
          v117 = *v3;
          v118 = *(_QWORD *)(a2 + v117);
          if (v118 == -1 || v118 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v119 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v118);
            *(_QWORD *)(a2 + v117) = v118 + 1;
            v26 |= (unint64_t)(v119 & 0x7F) << v115;
            if (v119 < 0)
            {
              v115 += 7;
              v14 = v116++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_278;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_278:
        v146 = 64;
        goto LABEL_299;
      case 0x15u:
        v120 = objc_alloc_init(AWDBacklightLuxMicroAmpsBucket);
        objc_msgSend((id)a1, "addBacklightBucket:", v120);

        if (PBReaderPlaceMark() && (AWDBacklightLuxMicroAmpsBucketReadFrom((uint64_t)v120, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_300:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0x16u:
        v121 = 0;
        v122 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x800000u;
        while (2)
        {
          v123 = *v3;
          v124 = *(_QWORD *)(a2 + v123);
          if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
            *(_QWORD *)(a2 + v123) = v124 + 1;
            v26 |= (unint64_t)(v125 & 0x7F) << v121;
            if (v125 < 0)
            {
              v121 += 7;
              v14 = v122++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_282;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_282:
        v146 = 116;
        goto LABEL_299;
      case 0x17u:
        v126 = 0;
        v127 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x400000u;
        while (2)
        {
          v128 = *v3;
          v129 = *(_QWORD *)(a2 + v128);
          if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
            *(_QWORD *)(a2 + v128) = v129 + 1;
            v26 |= (unint64_t)(v130 & 0x7F) << v126;
            if (v130 < 0)
            {
              v126 += 7;
              v14 = v127++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_286;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_286:
        v146 = 112;
        goto LABEL_299;
      case 0x18u:
        v131 = 0;
        v132 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x10000u;
        while (2)
        {
          v133 = *v3;
          v134 = *(_QWORD *)(a2 + v133);
          if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v134 + 1;
            v26 |= (unint64_t)(v135 & 0x7F) << v131;
            if (v135 < 0)
            {
              v131 += 7;
              v14 = v132++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_290;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_290:
        v146 = 88;
        goto LABEL_299;
      case 0x19u:
        v136 = 0;
        v137 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x200000u;
        while (2)
        {
          v138 = *v3;
          v139 = *(_QWORD *)(a2 + v138);
          if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
            *(_QWORD *)(a2 + v138) = v139 + 1;
            v26 |= (unint64_t)(v140 & 0x7F) << v136;
            if (v140 < 0)
            {
              v136 += 7;
              v14 = v137++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_294;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_294:
        v146 = 108;
        goto LABEL_299;
      case 0x1Au:
        v141 = 0;
        v142 = 0;
        v26 = 0;
        *(_DWORD *)(a1 + 124) |= 0x100000u;
        while (2)
        {
          v143 = *v3;
          v144 = *(_QWORD *)(a2 + v143);
          if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v144 + 1;
            v26 |= (unint64_t)(v145 & 0x7F) << v141;
            if (v145 < 0)
            {
              v141 += 7;
              v14 = v142++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_298;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_298:
        v146 = 104;
LABEL_299:
        *(_DWORD *)(a1 + v146) = v26;
        goto LABEL_300;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_300;
    }
  }
}

uint64_t AWDPowerNetworkUsageMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDNetworkUsage *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDNetworkUsage);
        objc_msgSend((id)a1, "addUsage:", v23);

        if (!PBReaderPlaceMark() || (AWDNetworkUsageReadFrom((uint64_t)v23, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerPerProcessCPULoadMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDCpuLoad *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDCpuLoad);
        objc_msgSend((id)a1, "addLoad:", v23);

        if (!PBReaderPlaceMark() || (AWDCpuLoadReadFrom((uint64_t)v23, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDPowerStateResidencyAndWeightReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDPowerStateResidencyAndWeight__residency;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___AWDPowerStateResidencyAndWeight__residency;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDPowerStateResidencyAndWeight__residency;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 2u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDPowerStateResidencyAndWeight__weight;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___AWDPowerStateResidencyAndWeight__weight;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDPowerStateResidencyAndWeight__weight;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerTouchMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  int *v34;
  int *v35;
  int *v36;
  int *v37;
  int *v38;
  uint64_t v39;
  uint64_t result;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v8 = (int *)MEMORY[0x24BE7AF30];
    v9 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v10 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v11 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v12 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v13 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v14 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v15 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v16 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v17 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v18 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      while (1)
      {
        v22 = *v3;
        v23 = *(_QWORD *)(a2 + v22);
        if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
          break;
        v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v23);
        *(_QWORD *)(a2 + v22) = v23 + 1;
        v21 |= (unint64_t)(v24 & 0x7F) << v19;
        if ((v24 & 0x80) == 0)
          goto LABEL_12;
        v19 += 7;
        v25 = v20++ >= 9;
        if (v25)
        {
          v21 = 0;
          v26 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v26 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v21 = 0;
LABEL_14:
      if (v26 || (v21 & 7) == 4)
        break;
      switch((v21 >> 3))
      {
        case 1u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_WORD *)(a1 + v7[979]) |= 1u;
          while (1)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
              break;
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
              goto LABEL_92;
            v28 += 7;
            v25 = v29++ >= 9;
            if (v25)
            {
              v30 = 0;
              goto LABEL_94;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_92:
          if (*(_BYTE *)(a2 + *v5))
            v30 = 0;
LABEL_94:
          *(_QWORD *)(a1 + v9[980]) = v30;
          continue;
        case 2u:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[979]) |= 4u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                v25 = v42++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_98;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_98:
          v87 = v10[981];
          goto LABEL_131;
        case 3u:
          v47 = 0;
          v48 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[979]) |= 0x80u;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v50);
              *(_QWORD *)(a2 + v49) = v50 + 1;
              v43 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                v25 = v48++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_102;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_102:
          v87 = v11[982];
          goto LABEL_131;
        case 4u:
          v52 = 0;
          v53 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[979]) |= 8u;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v55);
              *(_QWORD *)(a2 + v54) = v55 + 1;
              v43 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                v25 = v53++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_106;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_106:
          v87 = v12[983];
          goto LABEL_131;
        case 5u:
          v57 = 0;
          v58 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[979]) |= 0x10u;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v60);
              *(_QWORD *)(a2 + v59) = v60 + 1;
              v43 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                v25 = v58++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_110;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_110:
          v87 = v13[984];
          goto LABEL_131;
        case 6u:
          v62 = 0;
          v63 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[979]) |= 0x20u;
          while (2)
          {
            v64 = *v3;
            v65 = *(_QWORD *)(a2 + v64);
            if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v65);
              *(_QWORD *)(a2 + v64) = v65 + 1;
              v43 |= (unint64_t)(v66 & 0x7F) << v62;
              if (v66 < 0)
              {
                v62 += 7;
                v25 = v63++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_114;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_114:
          v87 = v14[985];
          goto LABEL_131;
        case 7u:
          v67 = 0;
          v68 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[979]) |= 0x40u;
          while (2)
          {
            v69 = *v3;
            v70 = *(_QWORD *)(a2 + v69);
            if (v70 == -1 || v70 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v70);
              *(_QWORD *)(a2 + v69) = v70 + 1;
              v43 |= (unint64_t)(v71 & 0x7F) << v67;
              if (v71 < 0)
              {
                v67 += 7;
                v25 = v68++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_118;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_118:
          v87 = v15[986];
          goto LABEL_131;
        case 8u:
          v72 = 0;
          v73 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[979]) |= 0x100u;
          while (2)
          {
            v74 = *v3;
            v75 = *(_QWORD *)(a2 + v74);
            if (v75 == -1 || v75 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v76 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v75);
              *(_QWORD *)(a2 + v74) = v75 + 1;
              v43 |= (unint64_t)(v76 & 0x7F) << v72;
              if (v76 < 0)
              {
                v72 += 7;
                v25 = v73++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_122:
          v87 = v16[987];
          goto LABEL_131;
        case 9u:
          v77 = 0;
          v78 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[979]) |= 0x200u;
          while (2)
          {
            v79 = *v3;
            v80 = *(_QWORD *)(a2 + v79);
            if (v80 == -1 || v80 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v80);
              *(_QWORD *)(a2 + v79) = v80 + 1;
              v43 |= (unint64_t)(v81 & 0x7F) << v77;
              if (v81 < 0)
              {
                v77 += 7;
                v25 = v78++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_126:
          v87 = v17[988];
          goto LABEL_131;
        case 0xAu:
          v82 = 0;
          v83 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[979]) |= 2u;
          break;
        default:
          v34 = v9;
          v35 = v10;
          v36 = v7;
          v37 = v11;
          v38 = v12;
          v39 = a1;
          result = PBReaderSkipValueWithTag();
          v13 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          a1 = v39;
          v14 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v38;
          v15 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v11 = v37;
          v16 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v7 = v36;
          v18 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v10 = v35;
          v17 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v9 = v34;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v84 = *v3;
        v85 = *(_QWORD *)(a2 + v84);
        if (v85 == -1 || v85 >= *(_QWORD *)(a2 + *v4))
          break;
        v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v85);
        *(_QWORD *)(a2 + v84) = v85 + 1;
        v43 |= (unint64_t)(v86 & 0x7F) << v82;
        if ((v86 & 0x80) == 0)
          goto LABEL_128;
        v82 += 7;
        v25 = v83++ >= 9;
        if (v25)
        {
          LODWORD(v43) = 0;
          goto LABEL_130;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_128:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v43) = 0;
LABEL_130:
      v87 = v18[989];
LABEL_131:
      *(_DWORD *)(a1 + v87) = v43;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPowerWifiMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int *v36;
  int *v37;
  int *v38;
  int *v39;
  int *v40;
  uint64_t v41;
  uint64_t result;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  unsigned int v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  uint64_t v134;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v8 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v11 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v12 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v13 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v14 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v15 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v16 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v17 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v18 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v19 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v20 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v21 += 7;
        v27 = v22++ >= 9;
        if (v27)
        {
          v23 = 0;
          v28 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_14:
      if (v28 || (v23 & 7) == 4)
        break;
      switch((v23 >> 3))
      {
        case 1u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 1u;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_155;
            v30 += 7;
            v27 = v31++ >= 9;
            if (v27)
            {
              v32 = 0;
              goto LABEL_157;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_155:
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_157:
          *(_QWORD *)(a1 + v8[991]) = v32;
          continue;
        case 2u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 4u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                v27 = v44++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_161;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_161:
          v134 = v10[992];
          goto LABEL_230;
        case 3u:
          v49 = 0;
          v50 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 2u;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v52);
              *(_QWORD *)(a2 + v51) = v52 + 1;
              v45 |= (unint64_t)(v53 & 0x7F) << v49;
              if (v53 < 0)
              {
                v49 += 7;
                v27 = v50++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_165;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_165:
          v134 = v11[993];
          goto LABEL_230;
        case 4u:
          v54 = 0;
          v55 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x10u;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v45 |= (unint64_t)(v58 & 0x7F) << v54;
              if (v58 < 0)
              {
                v54 += 7;
                v27 = v55++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_169;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_169:
          v134 = v12[994];
          goto LABEL_230;
        case 5u:
          v59 = 0;
          v60 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x40u;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v45 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                v27 = v60++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_173;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_173:
          v134 = v13[995];
          goto LABEL_230;
        case 6u:
          v64 = 0;
          v65 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x100u;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v45 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                v27 = v65++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_177;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_177:
          v134 = v14[996];
          goto LABEL_230;
        case 7u:
          v69 = 0;
          v70 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 8u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v45 |= (unint64_t)(v73 & 0x7F) << v69;
              if (v73 < 0)
              {
                v69 += 7;
                v27 = v70++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_181;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_181:
          v134 = v15[997];
          goto LABEL_230;
        case 8u:
          v74 = 0;
          v75 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x20u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v45 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v27 = v75++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_185;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_185:
          v134 = v16[998];
          goto LABEL_230;
        case 9u:
          v79 = 0;
          v80 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x80u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v45 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v27 = v80++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_189;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_189:
          v134 = v17[999];
          goto LABEL_230;
        case 0xAu:
          v84 = 0;
          v85 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x10000u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v45 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v27 = v85++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_193;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_193:
          v134 = v18[1000];
          goto LABEL_230;
        case 0xBu:
          v89 = 0;
          v90 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x20000u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v45 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v27 = v90++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_197;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_197:
          v134 = v19[1001];
          goto LABEL_230;
        case 0xCu:
          v94 = 0;
          v95 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x200u;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v97);
              *(_QWORD *)(a2 + v96) = v97 + 1;
              v45 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                v27 = v95++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_201;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_201:
          v134 = v20[1002];
          goto LABEL_230;
        case 0xDu:
          v99 = 0;
          v100 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x8000u;
          while (2)
          {
            v101 = *v3;
            v102 = *(_QWORD *)(a2 + v101);
            if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v102);
              *(_QWORD *)(a2 + v101) = v102 + 1;
              v45 |= (unint64_t)(v103 & 0x7F) << v99;
              if (v103 < 0)
              {
                v99 += 7;
                v27 = v100++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_205;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_205:
          v134 = 72;
          goto LABEL_230;
        case 0xEu:
          v104 = 0;
          v105 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x800u;
          while (2)
          {
            v106 = *v3;
            v107 = *(_QWORD *)(a2 + v106);
            if (v107 == -1 || v107 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v107);
              *(_QWORD *)(a2 + v106) = v107 + 1;
              v45 |= (unint64_t)(v108 & 0x7F) << v104;
              if (v108 < 0)
              {
                v104 += 7;
                v27 = v105++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_209;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_209:
          v134 = 56;
          goto LABEL_230;
        case 0xFu:
          v109 = 0;
          v110 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x1000u;
          while (2)
          {
            v111 = *v3;
            v112 = *(_QWORD *)(a2 + v111);
            if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v112);
              *(_QWORD *)(a2 + v111) = v112 + 1;
              v45 |= (unint64_t)(v113 & 0x7F) << v109;
              if (v113 < 0)
              {
                v109 += 7;
                v27 = v110++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_213;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_213:
          v134 = 60;
          goto LABEL_230;
        case 0x10u:
          v114 = 0;
          v115 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x2000u;
          while (2)
          {
            v116 = *v3;
            v117 = *(_QWORD *)(a2 + v116);
            if (v117 == -1 || v117 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v118 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v117);
              *(_QWORD *)(a2 + v116) = v117 + 1;
              v45 |= (unint64_t)(v118 & 0x7F) << v114;
              if (v118 < 0)
              {
                v114 += 7;
                v27 = v115++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_217;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_217:
          v134 = 64;
          goto LABEL_230;
        case 0x11u:
          v119 = 0;
          v120 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x4000u;
          while (2)
          {
            v121 = *v3;
            v122 = *(_QWORD *)(a2 + v121);
            if (v122 == -1 || v122 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v122);
              *(_QWORD *)(a2 + v121) = v122 + 1;
              v45 |= (unint64_t)(v123 & 0x7F) << v119;
              if (v123 < 0)
              {
                v119 += 7;
                v27 = v120++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_221;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_221:
          v134 = 68;
          goto LABEL_230;
        case 0x12u:
          v124 = 0;
          v125 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x40000u;
          while (2)
          {
            v126 = *v3;
            v127 = *(_QWORD *)(a2 + v126);
            if (v127 == -1 || v127 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v128 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v127);
              *(_QWORD *)(a2 + v126) = v127 + 1;
              v45 |= (unint64_t)(v128 & 0x7F) << v124;
              if (v128 < 0)
              {
                v124 += 7;
                v27 = v125++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_225;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_225:
          v134 = 84;
          goto LABEL_230;
        case 0x13u:
          v129 = 0;
          v130 = 0;
          v45 = 0;
          *(_DWORD *)(a1 + v7[990]) |= 0x400u;
          break;
        default:
          v36 = v8;
          v37 = v10;
          v38 = v7;
          v39 = v11;
          v40 = v12;
          v41 = a1;
          result = PBReaderSkipValueWithTag();
          v20 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v13 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          a1 = v41;
          v14 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v40;
          v15 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v11 = v39;
          v16 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v7 = v38;
          v19 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v10 = v37;
          v17 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          v8 = v36;
          v18 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v131 = *v3;
        v132 = *(_QWORD *)(a2 + v131);
        if (v132 == -1 || v132 >= *(_QWORD *)(a2 + *v4))
          break;
        v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v132);
        *(_QWORD *)(a2 + v131) = v132 + 1;
        v45 |= (unint64_t)(v133 & 0x7F) << v129;
        if ((v133 & 0x80) == 0)
          goto LABEL_227;
        v129 += 7;
        v27 = v130++ >= 9;
        if (v27)
        {
          LODWORD(v45) = 0;
          goto LABEL_229;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_227:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v45) = 0;
LABEL_229:
      v134 = 52;
LABEL_230:
      *(_DWORD *)(a1 + v134) = v45;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDRATConnectedPowerReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDRATConnectedPower__powerConnSetupMicroWatt;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDRATConnectedPower__powerConnSetupMicroWatt;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDRATConnectedPower__powerConnSetupMicroWatt;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDRATConnectedPower__rAT;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDRATConnectedPower__rAT;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDRATConnectedPower__rAT;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 20) |= 2u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDRATConnectedPower__powerConnectedMicroWatt;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        v25 = &OBJC_IVAR___AWDRATConnectedPower__powerConnectedMicroWatt;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDRATConnectedPower__powerConnectedMicroWatt;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v20) = 0;
LABEL_50:
    *(_DWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPushConnectionConnectedReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  uint64_t v19;
  int *v20;
  void *String;
  id v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDITesterCertHomeKitTestSubmission__testUUID;
    v9 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v4;
        v14 = *(_QWORD *)(a2 + v13);
        if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        v16 = v11++ >= 9;
        if (v16)
        {
          v12 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v12 = 0;
LABEL_14:
      if (v17 || (v12 & 7) == 4)
        break;
      switch((v12 >> 3))
      {
        case 1u:
          v19 = v2;
          v20 = v8;
          String = (void *)PBReaderReadString();

          v22 = String;
          v8 = v20;
          v2 = v19;
          *(_QWORD *)(a1 + 32) = v22;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + v8[1015]) |= 1u;
          while (2)
          {
            v27 = *v4;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v16 = v25++ >= 9;
                if (v16)
                {
                  v26 = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v26 = 0;
LABEL_74:
          *(_QWORD *)(a1 + 8) = v26;
          continue;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + v8[1015]) |= 2u;
          while (2)
          {
            v33 = *v4;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v16 = v31++ >= 9;
                if (v16)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v32) = 0;
LABEL_78:
          v61 = 16;
          goto LABEL_99;
        case 4u:
          v36 = 0;
          v37 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + v8[1015]) |= 4u;
          while (2)
          {
            v38 = *v4;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v32 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v16 = v37++ >= 9;
                if (v16)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v32) = 0;
LABEL_82:
          v61 = 20;
          goto LABEL_99;
        case 5u:
          v41 = 0;
          v42 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + v8[1015]) |= 0x20u;
          while (2)
          {
            v43 = *v4;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v32 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v16 = v42++ >= 9;
                if (v16)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v32) = 0;
LABEL_86:
          v61 = 40;
          goto LABEL_99;
        case 6u:
          v46 = 0;
          v47 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + v8[1015]) |= 0x10u;
          while (2)
          {
            v48 = *v4;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v49);
              *(_QWORD *)(a2 + v48) = v49 + 1;
              v32 |= (unint64_t)(v50 & 0x7F) << v46;
              if (v50 < 0)
              {
                v46 += 7;
                v16 = v47++ >= 9;
                if (v16)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v32) = 0;
LABEL_90:
          v61 = 28;
          goto LABEL_99;
        case 7u:
          v51 = 0;
          v52 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + v8[1015]) |= 8u;
          while (2)
          {
            v53 = *v4;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v54);
              *(_QWORD *)(a2 + v53) = v54 + 1;
              v32 |= (unint64_t)(v55 & 0x7F) << v51;
              if (v55 < 0)
              {
                v51 += 7;
                v16 = v52++ >= 9;
                if (v16)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v32) = 0;
LABEL_94:
          v61 = 24;
          goto LABEL_99;
        case 8u:
          v56 = 0;
          v57 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + v8[1015]) |= 0x40u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v58 = *v4;
        v59 = *(_QWORD *)(a2 + v58);
        if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v5))
          break;
        v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v59);
        *(_QWORD *)(a2 + v58) = v59 + 1;
        v32 |= (unint64_t)(v60 & 0x7F) << v56;
        if ((v60 & 0x80) == 0)
          goto LABEL_96;
        v56 += 7;
        v16 = v57++ >= 9;
        if (v16)
        {
          LODWORD(v32) = 0;
          goto LABEL_98;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_96:
      if (*(_BYTE *)(a2 + *v6))
        LODWORD(v32) = 0;
LABEL_98:
      v61 = 44;
LABEL_99:
      *(_DWORD *)(a1 + v61) = v32;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDPushConnectionDisconnectedReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  uint64_t v19;
  int *v20;
  void *String;
  id v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v4;
        v14 = *(_QWORD *)(a2 + v13);
        if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        v16 = v11++ >= 9;
        if (v16)
        {
          v12 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v12 = 0;
LABEL_14:
      if (v17 || (v12 & 7) == 4)
        break;
      switch((v12 >> 3))
      {
        case 1u:
          v19 = v2;
          v20 = v8;
          String = (void *)PBReaderReadString();

          v22 = String;
          v8 = v20;
          v2 = v19;
          *(_QWORD *)(a1 + 32) = v22;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + *v8) |= 1u;
          while (2)
          {
            v27 = *v4;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v16 = v25++ >= 9;
                if (v16)
                {
                  v26 = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v26 = 0;
LABEL_67:
          *(_QWORD *)(a1 + 8) = v26;
          continue;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + *v8) |= 2u;
          while (2)
          {
            v33 = *v4;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v16 = v31++ >= 9;
                if (v16)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v32) = 0;
LABEL_71:
          v56 = 16;
          goto LABEL_88;
        case 4u:
          v36 = 0;
          v37 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + *v8) |= 0x10u;
          while (2)
          {
            v38 = *v4;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v32 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v16 = v37++ >= 9;
                if (v16)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v32) = 0;
LABEL_75:
          v56 = 40;
          goto LABEL_88;
        case 5u:
          v41 = 0;
          v42 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + *v8) |= 4u;
          while (2)
          {
            v43 = *v4;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v32 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v16 = v42++ >= 9;
                if (v16)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v32) = 0;
LABEL_79:
          v56 = 20;
          goto LABEL_88;
        case 6u:
          v46 = 0;
          v47 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + *v8) |= 0x20u;
          while (2)
          {
            v48 = *v4;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v49);
              *(_QWORD *)(a2 + v48) = v49 + 1;
              v32 |= (unint64_t)(v50 & 0x7F) << v46;
              if (v50 < 0)
              {
                v46 += 7;
                v16 = v47++ >= 9;
                if (v16)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v32) = 0;
LABEL_83:
          v56 = 44;
          goto LABEL_88;
        case 7u:
          v51 = 0;
          v52 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + *v8) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v53 = *v4;
        v54 = *(_QWORD *)(a2 + v53);
        if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v5))
          break;
        v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v54);
        *(_QWORD *)(a2 + v53) = v54 + 1;
        v32 |= (unint64_t)(v55 & 0x7F) << v51;
        if ((v55 & 0x80) == 0)
          goto LABEL_85;
        v51 += 7;
        v16 = v52++ >= 9;
        if (v16)
        {
          LODWORD(v32) = 0;
          goto LABEL_87;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_85:
      if (*(_BYTE *)(a2 + *v6))
        LODWORD(v32) = 0;
LABEL_87:
      v56 = 24;
LABEL_88:
      *(_DWORD *)(a1 + v56) = v32;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDPushFilterChangedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  id v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_46;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_48;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_46:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_48:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          String = (void *)PBReaderReadString();

          v25 = String;
          v26 = 24;
          goto LABEL_44;
        case 3u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_52:
          v39 = 16;
          goto LABEL_57;
        case 4u:
          v33 = 0;
          v34 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          break;
        case 5u:
          v38 = (void *)PBReaderReadString();

          v25 = v38;
          v26 = 32;
LABEL_44:
          *(_QWORD *)(a1 + v26) = v25;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v35 = *v3;
        v36 = *(_QWORD *)(a2 + v35);
        if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          break;
        v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
        *(_QWORD *)(a2 + v35) = v36 + 1;
        v29 |= (unint64_t)(v37 & 0x7F) << v33;
        if ((v37 & 0x80) == 0)
          goto LABEL_54;
        v33 += 7;
        v14 = v34++ >= 9;
        if (v14)
        {
          LODWORD(v29) = 0;
          goto LABEL_56;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v29) = 0;
LABEL_56:
      v39 = 20;
LABEL_57:
      *(_DWORD *)(a1 + v39) = v29;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPushFilterSentReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_51;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_53;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_51:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_53:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 24) = String;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_57:
          v41 = 16;
          goto LABEL_66;
        case 4u:
          v31 = 0;
          v32 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v27 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_61:
          v41 = 32;
          goto LABEL_66;
        case 5u:
          v36 = 0;
          v37 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 40) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v38 = *v3;
        v39 = *(_QWORD *)(a2 + v38);
        if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          break;
        v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
        *(_QWORD *)(a2 + v38) = v39 + 1;
        v27 |= (unint64_t)(v40 & 0x7F) << v36;
        if ((v40 & 0x80) == 0)
          goto LABEL_63;
        v36 += 7;
        v14 = v37++ >= 9;
        if (v14)
        {
          LODWORD(v27) = 0;
          goto LABEL_65;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_63:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v27) = 0;
LABEL_65:
      v41 = 36;
LABEL_66:
      *(_DWORD *)(a1 + v41) = v27;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPushKeepAliveFailedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 32) = String;
          continue;
        case 2u:
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_WORD *)(a1 + 60) |= 1u;
          while (2)
          {
            v22 = *v3;
            v23 = *(_QWORD *)(a2 + v22);
            if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
              *(_QWORD *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                v14 = v20++ >= 9;
                if (v14)
                {
                  v21 = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v21 = 0;
LABEL_95:
          *(_QWORD *)(a1 + 8) = v21;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 60) |= 2u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_99:
          v71 = 16;
          goto LABEL_132;
        case 4u:
          v31 = 0;
          v32 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 60) |= 0x80u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v27 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_103:
          v71 = 48;
          goto LABEL_132;
        case 5u:
          v36 = 0;
          v37 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 60) |= 0x10u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v27 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_107;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_107:
          v71 = 28;
          goto LABEL_132;
        case 6u:
          v41 = 0;
          v42 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 60) |= 8u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v27 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_111;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_111:
          v71 = 24;
          goto LABEL_132;
        case 7u:
          v46 = 0;
          v47 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 60) |= 0x20u;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
              *(_QWORD *)(a2 + v48) = v49 + 1;
              v27 |= (unint64_t)(v50 & 0x7F) << v46;
              if (v50 < 0)
              {
                v46 += 7;
                v14 = v47++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_115:
          v71 = 40;
          goto LABEL_132;
        case 8u:
          v51 = 0;
          v52 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 60) |= 0x200u;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
              *(_QWORD *)(a2 + v53) = v54 + 1;
              v27 |= (unint64_t)(v55 & 0x7F) << v51;
              if (v55 < 0)
              {
                v51 += 7;
                v14 = v52++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_119;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_119:
          v71 = 56;
          goto LABEL_132;
        case 9u:
          v56 = 0;
          v57 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 60) |= 0x40u;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
              *(_QWORD *)(a2 + v58) = v59 + 1;
              v27 |= (unint64_t)(v60 & 0x7F) << v56;
              if (v60 < 0)
              {
                v56 += 7;
                v14 = v57++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_123;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_123:
          v71 = 44;
          goto LABEL_132;
        case 0xAu:
          v61 = 0;
          v62 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 60) |= 0x100u;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
              *(_QWORD *)(a2 + v63) = v64 + 1;
              v27 |= (unint64_t)(v65 & 0x7F) << v61;
              if (v65 < 0)
              {
                v61 += 7;
                v14 = v62++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_127;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_127:
          v71 = 52;
          goto LABEL_132;
        case 0xBu:
          v66 = 0;
          v67 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 60) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v68 = *v3;
        v69 = *(_QWORD *)(a2 + v68);
        if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
          break;
        v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
        *(_QWORD *)(a2 + v68) = v69 + 1;
        v27 |= (unint64_t)(v70 & 0x7F) << v66;
        if ((v70 & 0x80) == 0)
          goto LABEL_129;
        v66 += 7;
        v14 = v67++ >= 9;
        if (v14)
        {
          LODWORD(v27) = 0;
          goto LABEL_131;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_129:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v27) = 0;
LABEL_131:
      v71 = 20;
LABEL_132:
      *(_DWORD *)(a1 + v71) = v27;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPushKeepAliveSentReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 32) = String;
          continue;
        case 2u:
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_WORD *)(a1 + 72) |= 1u;
          while (2)
          {
            v22 = *v3;
            v23 = *(_QWORD *)(a2 + v22);
            if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
              *(_QWORD *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                v14 = v20++ >= 9;
                if (v14)
                {
                  v21 = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v21 = 0;
LABEL_109:
          *(_QWORD *)(a1 + 8) = v21;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 2u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_113:
          v81 = 16;
          goto LABEL_154;
        case 4u:
          v31 = 0;
          v32 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 0x80u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v27 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_117:
          v81 = 52;
          goto LABEL_154;
        case 5u:
          v36 = 0;
          v37 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 0x400u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v27 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_121;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_121:
          v81 = 64;
          goto LABEL_154;
        case 6u:
          v41 = 0;
          v42 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 0x100u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v27 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_125;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_125:
          v81 = 56;
          goto LABEL_154;
        case 7u:
          v46 = 0;
          v47 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 0x10u;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
              *(_QWORD *)(a2 + v48) = v49 + 1;
              v27 |= (unint64_t)(v50 & 0x7F) << v46;
              if (v50 < 0)
              {
                v46 += 7;
                v14 = v47++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_129;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_129:
          v81 = 40;
          goto LABEL_154;
        case 8u:
          v51 = 0;
          v52 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 8u;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
              *(_QWORD *)(a2 + v53) = v54 + 1;
              v27 |= (unint64_t)(v55 & 0x7F) << v51;
              if (v55 < 0)
              {
                v51 += 7;
                v14 = v52++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_133;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_133:
          v81 = 24;
          goto LABEL_154;
        case 9u:
          v56 = 0;
          v57 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 0x20u;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
              *(_QWORD *)(a2 + v58) = v59 + 1;
              v27 |= (unint64_t)(v60 & 0x7F) << v56;
              if (v60 < 0)
              {
                v56 += 7;
                v14 = v57++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_137:
          v81 = 44;
          goto LABEL_154;
        case 0xAu:
          v61 = 0;
          v62 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 0x40u;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
              *(_QWORD *)(a2 + v63) = v64 + 1;
              v27 |= (unint64_t)(v65 & 0x7F) << v61;
              if (v65 < 0)
              {
                v61 += 7;
                v14 = v62++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_141:
          v81 = 48;
          goto LABEL_154;
        case 0xBu:
          v66 = 0;
          v67 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 0x200u;
          while (2)
          {
            v68 = *v3;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
              *(_QWORD *)(a2 + v68) = v69 + 1;
              v27 |= (unint64_t)(v70 & 0x7F) << v66;
              if (v70 < 0)
              {
                v66 += 7;
                v14 = v67++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_145:
          v81 = 60;
          goto LABEL_154;
        case 0xCu:
          v71 = 0;
          v72 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 0x800u;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
              *(_QWORD *)(a2 + v73) = v74 + 1;
              v27 |= (unint64_t)(v75 & 0x7F) << v71;
              if (v75 < 0)
              {
                v71 += 7;
                v14 = v72++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_149:
          v81 = 68;
          goto LABEL_154;
        case 0xDu:
          v76 = 0;
          v77 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 72) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v78 = *v3;
        v79 = *(_QWORD *)(a2 + v78);
        if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
          break;
        v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
        *(_QWORD *)(a2 + v78) = v79 + 1;
        v27 |= (unint64_t)(v80 & 0x7F) << v76;
        if ((v80 & 0x80) == 0)
          goto LABEL_151;
        v76 += 7;
        v14 = v77++ >= 9;
        if (v14)
        {
          LODWORD(v27) = 0;
          goto LABEL_153;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_151:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v27) = 0;
LABEL_153:
      v81 = 20;
LABEL_154:
      *(_DWORD *)(a1 + v81) = v27;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPushProxyManagerReceiveReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  id v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  void *v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_46;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_48;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_46:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_48:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          String = (void *)PBReaderReadString();

          v25 = String;
          v26 = 16;
          goto LABEL_37;
        case 3u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_52:
          v39 = 28;
          goto LABEL_57;
        case 4u:
          v33 = (void *)PBReaderReadString();

          v25 = v33;
          v26 = 32;
LABEL_37:
          *(_QWORD *)(a1 + v26) = v25;
          continue;
        case 5u:
          v34 = 0;
          v35 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v36 = *v3;
        v37 = *(_QWORD *)(a2 + v36);
        if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
          break;
        v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
        *(_QWORD *)(a2 + v36) = v37 + 1;
        v29 |= (unint64_t)(v38 & 0x7F) << v34;
        if ((v38 & 0x80) == 0)
          goto LABEL_54;
        v34 += 7;
        v14 = v35++ >= 9;
        if (v14)
        {
          LODWORD(v29) = 0;
          goto LABEL_56;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v29) = 0;
LABEL_56:
      v39 = 24;
LABEL_57:
      *(_DWORD *)(a1 + v39) = v29;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPushProxyManagerSendReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  id v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  void *v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_46;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_48;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_46:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_48:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          String = (void *)PBReaderReadString();

          v25 = String;
          v26 = 16;
          goto LABEL_37;
        case 3u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_52:
          v39 = 28;
          goto LABEL_57;
        case 4u:
          v33 = (void *)PBReaderReadString();

          v25 = v33;
          v26 = 32;
LABEL_37:
          *(_QWORD *)(a1 + v26) = v25;
          continue;
        case 5u:
          v34 = 0;
          v35 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v36 = *v3;
        v37 = *(_QWORD *)(a2 + v36);
        if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
          break;
        v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
        *(_QWORD *)(a2 + v36) = v37 + 1;
        v29 |= (unint64_t)(v38 & 0x7F) << v34;
        if ((v38 & 0x80) == 0)
          goto LABEL_54;
        v34 += 7;
        v14 = v35++ >= 9;
        if (v14)
        {
          LODWORD(v29) = 0;
          goto LABEL_56;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v29) = 0;
LABEL_56:
      v39 = 24;
LABEL_57:
      *(_DWORD *)(a1 + v39) = v29;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPushReceivedReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *String;
  id v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  void *v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        if (v13 == -1 || v13 >= *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v15 = v10++ >= 9;
        if (v15)
        {
          v11 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v11 = 0;
LABEL_14:
      if (v16 || (v11 & 7) == 4)
        break;
      switch((v11 >> 3))
      {
        case 1u:
          v18 = v2;
          String = (void *)PBReaderReadString();

          v20 = String;
          v2 = v18;
          v21 = 24;
          goto LABEL_72;
        case 2u:
          v23 = 0;
          v24 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 60) |= 1u;
          while (2)
          {
            v26 = *v4;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if (v28 < 0)
              {
                v23 += 7;
                v15 = v24++ >= 9;
                if (v15)
                {
                  v25 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v25 = 0;
LABEL_83:
          *(_QWORD *)(a1 + 8) = v25;
          continue;
        case 3u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 60) |= 2u;
          while (2)
          {
            v32 = *v4;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v15 = v30++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_87:
          v67 = 16;
          goto LABEL_112;
        case 4u:
          v35 = 0;
          v36 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 60) |= 0x10u;
          while (2)
          {
            v37 = *v4;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v31 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v15 = v36++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_91:
          v67 = 36;
          goto LABEL_112;
        case 5u:
          v40 = 0;
          v41 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 60) |= 0x40u;
          while (2)
          {
            v42 = *v4;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v31 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v15 = v41++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_95:
          v67 = 44;
          goto LABEL_112;
        case 6u:
          v45 = 0;
          v46 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 60) |= 0x20u;
          while (2)
          {
            v47 = *v4;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v31 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v15 = v46++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_99:
          v67 = 40;
          goto LABEL_112;
        case 7u:
          v50 = 0;
          v51 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 60) |= 8u;
          while (2)
          {
            v52 = *v4;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v31 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v15 = v51++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_103:
          v67 = 32;
          goto LABEL_112;
        case 8u:
          v55 = 0;
          v56 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 60) |= 4u;
          while (2)
          {
            v57 = *v4;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v31 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v15 = v56++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_107;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_107:
          v67 = 20;
          goto LABEL_112;
        case 9u:
          v60 = v2;
          v61 = (void *)PBReaderReadString();

          v20 = v61;
          v2 = v60;
          v21 = 48;
LABEL_72:
          *(_QWORD *)(a1 + v21) = v20;
          continue;
        case 0xAu:
          v62 = 0;
          v63 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 60) |= 0x80u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v64 = *v4;
        v65 = *(_QWORD *)(a2 + v64);
        if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v5))
          break;
        v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v65);
        *(_QWORD *)(a2 + v64) = v65 + 1;
        v31 |= (unint64_t)(v66 & 0x7F) << v62;
        if ((v66 & 0x80) == 0)
          goto LABEL_109;
        v62 += 7;
        v15 = v63++ >= 9;
        if (v15)
        {
          LODWORD(v31) = 0;
          goto LABEL_111;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_109:
      if (*(_BYTE *)(a2 + *v6))
        LODWORD(v31) = 0;
LABEL_111:
      v67 = 56;
LABEL_112:
      *(_DWORD *)(a1 + v67) = v31;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDPushReceivedDroppedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void *v58;
  uint64_t v59;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          String = (void *)PBReaderReadString();

          v18 = String;
          v19 = 24;
          goto LABEL_72;
        case 2u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                v14 = v22++ >= 9;
                if (v14)
                {
                  v23 = 0;
                  goto LABEL_76;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v23 = 0;
LABEL_76:
          *(_QWORD *)(a1 + 8) = v23;
          continue;
        case 3u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 2u;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_80;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_80:
          v59 = 16;
          goto LABEL_101;
        case 4u:
          v33 = 0;
          v34 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 0x10u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v36 + 1;
              v29 |= (unint64_t)(v37 & 0x7F) << v33;
              if (v37 < 0)
              {
                v33 += 7;
                v14 = v34++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_84:
          v59 = 36;
          goto LABEL_101;
        case 5u:
          v38 = 0;
          v39 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 0x40u;
          while (2)
          {
            v40 = *v3;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
              *(_QWORD *)(a2 + v40) = v41 + 1;
              v29 |= (unint64_t)(v42 & 0x7F) << v38;
              if (v42 < 0)
              {
                v38 += 7;
                v14 = v39++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_88;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_88:
          v59 = 44;
          goto LABEL_101;
        case 6u:
          v43 = 0;
          v44 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 0x20u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v29 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_92;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_92:
          v59 = 40;
          goto LABEL_101;
        case 7u:
          v48 = 0;
          v49 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 8u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v29 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_96;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_96:
          v59 = 32;
          goto LABEL_101;
        case 8u:
          v53 = 0;
          v54 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 4u;
          break;
        case 9u:
          v58 = (void *)PBReaderReadString();

          v18 = v58;
          v19 = 48;
LABEL_72:
          *(_QWORD *)(a1 + v19) = v18;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v55 = *v3;
        v56 = *(_QWORD *)(a2 + v55);
        if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          break;
        v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
        *(_QWORD *)(a2 + v55) = v56 + 1;
        v29 |= (unint64_t)(v57 & 0x7F) << v53;
        if ((v57 & 0x80) == 0)
          goto LABEL_98;
        v53 += 7;
        v14 = v54++ >= 9;
        if (v14)
        {
          LODWORD(v29) = 0;
          goto LABEL_100;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_98:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v29) = 0;
LABEL_100:
      v59 = 20;
LABEL_101:
      *(_DWORD *)(a1 + v59) = v29;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPushReceivedSlowReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void *v58;
  uint64_t v59;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          String = (void *)PBReaderReadString();

          v18 = String;
          v19 = 24;
          goto LABEL_72;
        case 2u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                v14 = v22++ >= 9;
                if (v14)
                {
                  v23 = 0;
                  goto LABEL_76;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v23 = 0;
LABEL_76:
          *(_QWORD *)(a1 + 8) = v23;
          continue;
        case 3u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 2u;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_80;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_80:
          v59 = 16;
          goto LABEL_101;
        case 4u:
          v33 = 0;
          v34 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 0x10u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v36 + 1;
              v29 |= (unint64_t)(v37 & 0x7F) << v33;
              if (v37 < 0)
              {
                v33 += 7;
                v14 = v34++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_84:
          v59 = 36;
          goto LABEL_101;
        case 5u:
          v38 = 0;
          v39 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 0x40u;
          while (2)
          {
            v40 = *v3;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
              *(_QWORD *)(a2 + v40) = v41 + 1;
              v29 |= (unint64_t)(v42 & 0x7F) << v38;
              if (v42 < 0)
              {
                v38 += 7;
                v14 = v39++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_88;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_88:
          v59 = 44;
          goto LABEL_101;
        case 6u:
          v43 = 0;
          v44 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 0x20u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v29 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_92;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_92:
          v59 = 40;
          goto LABEL_101;
        case 7u:
          v48 = 0;
          v49 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 8u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v29 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_96;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_96:
          v59 = 32;
          goto LABEL_101;
        case 8u:
          v53 = 0;
          v54 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 56) |= 4u;
          break;
        case 9u:
          v58 = (void *)PBReaderReadString();

          v18 = v58;
          v19 = 48;
LABEL_72:
          *(_QWORD *)(a1 + v19) = v18;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v55 = *v3;
        v56 = *(_QWORD *)(a2 + v55);
        if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          break;
        v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
        *(_QWORD *)(a2 + v55) = v56 + 1;
        v29 |= (unint64_t)(v57 & 0x7F) << v53;
        if ((v57 & 0x80) == 0)
          goto LABEL_98;
        v53 += 7;
        v14 = v54++ >= 9;
        if (v14)
        {
          LODWORD(v29) = 0;
          goto LABEL_100;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_98:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v29) = 0;
LABEL_100:
      v59 = 20;
LABEL_101:
      *(_DWORD *)(a1 + v59) = v29;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPushSentReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  void *v63;
  uint64_t v64;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          String = (void *)PBReaderReadString();

          v18 = String;
          v19 = 32;
          goto LABEL_79;
        case 2u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 64) |= 1u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                v14 = v22++ >= 9;
                if (v14)
                {
                  v23 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v23 = 0;
LABEL_83:
          *(_QWORD *)(a1 + 8) = v23;
          continue;
        case 3u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 64) |= 2u;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_87:
          v64 = 16;
          goto LABEL_112;
        case 4u:
          v33 = 0;
          v34 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 64) |= 0x20u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v36 + 1;
              v29 |= (unint64_t)(v37 & 0x7F) << v33;
              if (v37 < 0)
              {
                v33 += 7;
                v14 = v34++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_91:
          v64 = 40;
          goto LABEL_112;
        case 5u:
          v38 = 0;
          v39 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 64) |= 0x10u;
          while (2)
          {
            v40 = *v3;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
              *(_QWORD *)(a2 + v40) = v41 + 1;
              v29 |= (unint64_t)(v42 & 0x7F) << v38;
              if (v42 < 0)
              {
                v38 += 7;
                v14 = v39++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_95:
          v64 = 28;
          goto LABEL_112;
        case 6u:
          v43 = 0;
          v44 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 64) |= 0x80u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v29 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_99:
          v64 = 48;
          goto LABEL_112;
        case 7u:
          v48 = 0;
          v49 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 64) |= 0x40u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v29 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_103:
          v64 = 44;
          goto LABEL_112;
        case 8u:
          v53 = 0;
          v54 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 64) |= 8u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v29 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                v14 = v54++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_107;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_107:
          v64 = 24;
          goto LABEL_112;
        case 9u:
          v58 = 0;
          v59 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 64) |= 4u;
          break;
        case 0xAu:
          v63 = (void *)PBReaderReadString();

          v18 = v63;
          v19 = 56;
LABEL_79:
          *(_QWORD *)(a1 + v19) = v18;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v60 = *v3;
        v61 = *(_QWORD *)(a2 + v60);
        if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
          break;
        v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
        *(_QWORD *)(a2 + v60) = v61 + 1;
        v29 |= (unint64_t)(v62 & 0x7F) << v58;
        if ((v62 & 0x80) == 0)
          goto LABEL_109;
        v58 += 7;
        v14 = v59++ >= 9;
        if (v14)
        {
          LODWORD(v29) = 0;
          goto LABEL_111;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_109:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v29) = 0;
LABEL_111:
      v64 = 20;
LABEL_112:
      *(_DWORD *)(a1 + v64) = v29;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDPushTopicPolicyChangeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  id v25;
  uint64_t v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_46;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_48;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_46:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_48:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          String = (void *)PBReaderReadString();

          v25 = String;
          v26 = 24;
          goto LABEL_30;
        case 3u:
          v27 = (void *)PBReaderReadString();

          v25 = v27;
          v26 = 32;
LABEL_30:
          *(_QWORD *)(a1 + v26) = v25;
          continue;
        case 4u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v30 |= (unint64_t)(v33 & 0x7F) << v28;
              if (v33 < 0)
              {
                v28 += 7;
                v14 = v29++ >= 9;
                if (v14)
                {
                  LODWORD(v30) = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v30) = 0;
LABEL_52:
          v39 = 16;
          goto LABEL_57;
        case 5u:
          v34 = 0;
          v35 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v36 = *v3;
        v37 = *(_QWORD *)(a2 + v36);
        if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
          break;
        v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
        *(_QWORD *)(a2 + v36) = v37 + 1;
        v30 |= (unint64_t)(v38 & 0x7F) << v34;
        if ((v38 & 0x80) == 0)
          goto LABEL_54;
        v34 += 7;
        v14 = v35++ >= 9;
        if (v14)
        {
          LODWORD(v30) = 0;
          goto LABEL_56;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v30) = 0;
LABEL_56:
      v39 = 20;
LABEL_57:
      *(_DWORD *)(a1 + v39) = v30;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariActivatedHomeScreenQuickActionEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariAutoFillAuthenticationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *String;
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_60;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_62;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_62:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 48) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_66:
          v50 = 16;
          goto LABEL_75;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 48) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_70:
          v50 = 40;
          goto LABEL_75;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 48) |= 4u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_74:
          v50 = 20;
LABEL_75:
          *(_DWORD *)(a1 + v50) = v26;
          continue;
        case 5u:
          v40 = 0;
          v41 = 0;
          v42 = 0;
          *(_BYTE *)(a1 + 48) |= 0x10u;
          break;
        case 6u:
          String = (void *)PBReaderReadString();

          v47 = String;
          v48 = 32;
          goto LABEL_58;
        case 7u:
          v49 = (void *)PBReaderReadString();

          v47 = v49;
          v48 = 24;
LABEL_58:
          *(_QWORD *)(a1 + v48) = v47;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v43 = *v3;
        v44 = *(_QWORD *)(a2 + v43);
        if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
          break;
        v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
        *(_QWORD *)(a2 + v43) = v44 + 1;
        v42 |= (unint64_t)(v45 & 0x7F) << v40;
        if ((v45 & 0x80) == 0)
          goto LABEL_77;
        v40 += 7;
        v14 = v41++ >= 9;
        if (v14)
        {
          v42 = 0;
          goto LABEL_79;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_77:
      if (*(_BYTE *)(a2 + *v5))
        v42 = 0;
LABEL_79:
      *(_BYTE *)(a1 + 44) = v42 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariAutoFillAuthenticationPreferenceEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_BYTE *)(a1 + 16) = v25 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariCKBookmarksMigrationFinishedEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void *String;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_53;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_55;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_55:
          v44 = 16;
          goto LABEL_64;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 48) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_59:
          v45 = 40;
          goto LABEL_69;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v19 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_63:
          v44 = 8;
LABEL_64:
          *(_QWORD *)(a1 + v44) = v19;
          continue;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 48) |= 8u;
          break;
        case 5u:
          String = (void *)PBReaderReadString();

          v41 = String;
          v42 = 32;
          goto LABEL_51;
        case 6u:
          v43 = (void *)PBReaderReadString();

          v41 = v43;
          v42 = 24;
LABEL_51:
          *(_QWORD *)(a1 + v42) = v41;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v26 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
          goto LABEL_66;
        v35 += 7;
        v14 = v36++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_68;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_66:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_68:
      v45 = 44;
LABEL_69:
      *(_DWORD *)(a1 + v45) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariCKBookmarksMigrationStartedEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_50;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_52;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_50:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_52:
          v40 = 24;
          goto LABEL_65;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_56:
          *(_DWORD *)(a1 + 32) = v26;
          continue;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v19 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_60:
          v40 = 8;
          goto LABEL_65;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v19 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
          goto LABEL_62;
        v35 += 7;
        v14 = v36++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_64;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_64:
      v40 = 16;
LABEL_65:
      *(_QWORD *)(a1 + v40) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariCKBookmarksSyncEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *String;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_39;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_41;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_41:
          v33 = 16;
          goto LABEL_46;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        case 3u:
          String = (void *)PBReaderReadString();

          v30 = String;
          v31 = 32;
          goto LABEL_37;
        case 4u:
          v32 = (void *)PBReaderReadString();

          v30 = v32;
          v31 = 24;
LABEL_37:
          *(_QWORD *)(a1 + v31) = v30;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v26 = *v3;
        v27 = *(_QWORD *)(a2 + v26);
        if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          break;
        v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
        *(_QWORD *)(a2 + v26) = v27 + 1;
        v19 |= (unint64_t)(v28 & 0x7F) << v24;
        if ((v28 & 0x80) == 0)
          goto LABEL_43;
        v24 += 7;
        v14 = v25++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_45;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_45:
      v33 = 8;
LABEL_46:
      *(_QWORD *)(a1 + v33) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariContactAutoFillDidFillCustomContactSetEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_BYTE *)(a1 + 16) = v25 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariContactAutoFillDidSelectSetEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            v26 = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          v26 = 0;
LABEL_51:
        *(_BYTE *)(a1 + 20) = v26 != 0;
      }
      else if ((_DWORD)v17 == 2)
      {
        v30 = 0;
        v31 = 0;
        v32 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            break;
          v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
          *(_QWORD *)(a2 + v33) = v34 + 1;
          v32 |= (unint64_t)(v35 & 0x7F) << v30;
          if ((v35 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            LODWORD(v32) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v32) = 0;
LABEL_55:
        *(_DWORD *)(a1 + 16) = v32;
      }
      else if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_45;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_47:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariContactAutoFillDidShowSetsEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t result;
  BOOL v37;
  uint64_t v38;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            v26 = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          v26 = 0;
LABEL_51:
        v37 = v26 != 0;
        v38 = 17;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 20) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_45;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_47;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_47:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v30 = 0;
        v31 = 0;
        v32 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            break;
          v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
          *(_QWORD *)(a2 + v33) = v34 + 1;
          v32 |= (unint64_t)(v35 & 0x7F) << v30;
          if ((v35 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            v32 = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          v32 = 0;
LABEL_55:
        v37 = v32 != 0;
        v38 = 16;
      }
      *(_BYTE *)(a1 + v38) = v37;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSafariDedupedDAVBookmarksEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDSafariDedupedDAVBookmarksEvent__foldersWithDupesCount;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDSafariDedupedDAVBookmarksEvent__foldersWithDupesCount;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDSafariDedupedDAVBookmarksEvent__foldersWithDupesCount;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 4u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDSafariDedupedDAVBookmarksEvent__timestamp;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDSafariDedupedDAVBookmarksEvent__timestamp;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDSafariDedupedDAVBookmarksEvent__timestamp;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 32) |= 1u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDSafariDedupedDAVBookmarksEvent__dedupeCount;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        v20 = 0;
        v25 = &OBJC_IVAR___AWDSafariDedupedDAVBookmarksEvent__dedupeCount;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDSafariDedupedDAVBookmarksEvent__dedupeCount;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      v20 = 0;
LABEL_50:
    *(_QWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariDidReceiveInvalidMessageFromWebProcessEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *String;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_33:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariDidTerminateWebProcessBeforeNavigationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariDuplicatedPasswordsWarningEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSafariEnterPasswordsPreferencesEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDSafariEnterPasswordsPreferencesEvent__timestamp;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDSafariEnterPasswordsPreferencesEvent__timestamp;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDSafariEnterPasswordsPreferencesEvent__timestamp;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_QWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDSafariEnterPasswordsPreferencesEvent__percentageOfDuplicatedPasswords;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDSafariEnterPasswordsPreferencesEvent__percentageOfDuplicatedPasswords;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDSafariEnterPasswordsPreferencesEvent__percentageOfDuplicatedPasswords;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariEnterTwoUpEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariInteractedWithGeneratedPasswordEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSafariPageLoadCompleteEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 0x10u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__timestamp;
              goto LABEL_61;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              v19 = 0;
              v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__timestamp;
              goto LABEL_64;
            }
          }
          v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__timestamp;
          goto LABEL_62;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__configurationID;
              goto LABEL_61;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__configurationID;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__configurationID;
          goto LABEL_62;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__pageID;
              goto LABEL_61;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__pageID;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__pageID;
          goto LABEL_62;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 8u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__pageLoadTime;
              goto LABEL_61;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__pageLoadTime;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__pageLoadTime;
          goto LABEL_62;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 2u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v42 = *v3;
        v43 = *(_QWORD *)(a2 + v42);
        if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
        *(_QWORD *)(a2 + v42) = v43 + 1;
        v19 |= (unint64_t)(v44 & 0x7F) << v40;
        if ((v44 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__errorCode;
          goto LABEL_62;
        }
        v40 += 7;
        v23 = v41++ > 8;
        if (v23)
        {
          v19 = 0;
          v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__errorCode;
          goto LABEL_64;
        }
      }
      v24 = &OBJC_IVAR___AWDSafariPageLoadCompleteEvent__errorCode;
LABEL_61:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_64:
      *(_QWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSafariPageLoadStartedEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDSafariPageLoadStartedEvent__pageID;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDSafariPageLoadStartedEvent__pageID;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDSafariPageLoadStartedEvent__pageID;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 4u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDSafariPageLoadStartedEvent__timestamp;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDSafariPageLoadStartedEvent__timestamp;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDSafariPageLoadStartedEvent__timestamp;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 32) |= 1u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDSafariPageLoadStartedEvent__configurationID;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        v20 = 0;
        v25 = &OBJC_IVAR___AWDSafariPageLoadStartedEvent__configurationID;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDSafariPageLoadStartedEvent__configurationID;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      v20 = 0;
LABEL_50:
    *(_QWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariParticipatedInPasswordAutoFillReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariReaderActiveOptInOutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariReaderChangedOptInOutEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariSafeBrowsingUserActionAfterSeeingWarningEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariSafeBrowsingWarningShownEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariSelectedFavoritesGridItemEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_71;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_73;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_71:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_73:
          v55 = 32;
          goto LABEL_86;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 2u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_77:
          v55 = 16;
          goto LABEL_86;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 1u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_81;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_81:
          v55 = 8;
          goto LABEL_86;
        case 4u:
          v34 = 0;
          v35 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 4u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v19 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_85:
          v55 = 24;
LABEL_86:
          *(_QWORD *)(a1 + v55) = v19;
          continue;
        case 5u:
          v39 = 0;
          v40 = 0;
          v41 = 0;
          *(_BYTE *)(a1 + 52) |= 0x40u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                v14 = v40++ >= 9;
                if (v14)
                {
                  LODWORD(v41) = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v41) = 0;
LABEL_90:
          v56 = 48;
          goto LABEL_99;
        case 6u:
          v45 = 0;
          v46 = 0;
          v41 = 0;
          *(_BYTE *)(a1 + 52) |= 0x10u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v41 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  LODWORD(v41) = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v41) = 0;
LABEL_94:
          v56 = 40;
          goto LABEL_99;
        case 7u:
          v50 = 0;
          v51 = 0;
          v41 = 0;
          *(_BYTE *)(a1 + 52) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v52 = *v3;
        v53 = *(_QWORD *)(a2 + v52);
        if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          break;
        v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
        *(_QWORD *)(a2 + v52) = v53 + 1;
        v41 |= (unint64_t)(v54 & 0x7F) << v50;
        if ((v54 & 0x80) == 0)
          goto LABEL_96;
        v50 += 7;
        v14 = v51++ >= 9;
        if (v14)
        {
          LODWORD(v41) = 0;
          goto LABEL_98;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_96:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v41) = 0;
LABEL_98:
      v56 = 44;
LABEL_99:
      *(_DWORD *)(a1 + v56) = v41;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariSetAutoFillQuickTypeSuggestionEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_51:
        v36 = 20;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_45;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_47;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_47:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v30 = 0;
        v31 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            break;
          v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
          *(_QWORD *)(a2 + v32) = v33 + 1;
          v26 |= (unint64_t)(v34 & 0x7F) << v30;
          if ((v34 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_55:
        v36 = 16;
      }
      *(_DWORD *)(a1 + v36) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariSharedPasswordEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_50;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_52;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_50:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_52:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_56:
          v40 = 16;
          goto LABEL_65;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_60:
          v40 = 24;
          goto LABEL_65;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v26 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
          goto LABEL_62;
        v35 += 7;
        v14 = v36++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_64;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_64:
      v40 = 20;
LABEL_65:
      *(_DWORD *)(a1 + v40) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariTappedAutoFillQuickTypeSuggestionEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_51:
        v36 = 20;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_45;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_47;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_47:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v30 = 0;
        v31 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            break;
          v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
          *(_QWORD *)(a2 + v32) = v33 + 1;
          v26 |= (unint64_t)(v34 & 0x7F) << v30;
          if ((v34 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_55:
        v36 = 16;
      }
      *(_DWORD *)(a1 + v36) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariTappedOnToolbarButtonEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            v26 = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          v26 = 0;
LABEL_51:
        *(_BYTE *)(a1 + 20) = v26 != 0;
      }
      else if ((_DWORD)v17 == 2)
      {
        v30 = 0;
        v31 = 0;
        v32 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            break;
          v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
          *(_QWORD *)(a2 + v33) = v34 + 1;
          v32 |= (unint64_t)(v35 & 0x7F) << v30;
          if ((v35 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            LODWORD(v32) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v32) = 0;
LABEL_55:
        *(_DWORD *)(a1 + 16) = v32;
      }
      else if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_45;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_47:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariTwoFingerTappedOnLinkEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariUnableToSilentlyMigrateToCKBookmarksEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      v16 = v10 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        if (v16 == 2)
        {
          result = PBReaderPlaceMark();
          if (!(_DWORD)result)
            return result;
          while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
          {
            v25 = 0;
            v26 = 0;
            v27 = 0;
            while (1)
            {
              v28 = *v3;
              v29 = *(_QWORD *)(a2 + v28);
              if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
                break;
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (!v14)
                  continue;
              }
              goto LABEL_39;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v31 = 0;
          v32 = 0;
          v33 = 0;
          while (1)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
              break;
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              v14 = v32++ >= 9;
              if (!v14)
                continue;
            }
            goto LABEL_55;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_55:
          PBRepeatedInt32Add();
        }
      }
      else if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_43;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_45:
        *(_QWORD *)(a1 + 32) = v20;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariUsingPrivateBrowsingEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_BYTE *)(a1 + 16) = v25 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariVersioningEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void *String;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_43;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_45:
        *(_DWORD *)(a1 + 16) = v26;
      }
      else if ((_DWORD)v17 == 2)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 24) = String;
      }
      else if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_39;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_41;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_41:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariViewControllerDismissedEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariViewControllerPresentedFromHostAppEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *String;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 4)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_33:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSafariViewControllerTappedOnToolbarButtonEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            v26 = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          v26 = 0;
LABEL_51:
        *(_BYTE *)(a1 + 20) = v26 != 0;
      }
      else if ((_DWORD)v17 == 2)
      {
        v30 = 0;
        v31 = 0;
        v32 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            break;
          v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
          *(_QWORD *)(a2 + v33) = v34 + 1;
          v32 |= (unint64_t)(v35 & 0x7F) << v30;
          if ((v35 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            LODWORD(v32) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v32) = 0;
LABEL_55:
        *(_DWORD *)(a1 + 16) = v32;
      }
      else if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_45;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_47:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSiriNetworkAnalyzerRunReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int *v36;
  int *v37;
  int *v38;
  int *v39;
  int *v40;
  uint64_t v41;
  uint64_t result;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v11 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v12 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v13 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v14 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v15 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v16 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v17 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v18 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v19 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v20 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v21 += 7;
        v27 = v22++ >= 9;
        if (v27)
        {
          v23 = 0;
          v28 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_14:
      if (v28 || (v23 & 7) == 4)
        break;
      switch((v23 >> 3))
      {
        case 1u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[242]) |= 0x10u;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_113;
            v30 += 7;
            v27 = v31++ >= 9;
            if (v27)
            {
              v32 = 0;
              goto LABEL_115;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_113:
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_115:
          v107 = v8[243];
          goto LABEL_157;
        case 2u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[242]) |= 0x100u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                v27 = v44++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_119;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_119:
          v108 = v10[244];
          goto LABEL_166;
        case 3u:
          v49 = 0;
          v50 = 0;
          v51 = 0;
          *(_WORD *)(a1 + v7[242]) |= 0x800u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v51 |= (unint64_t)(v54 & 0x7F) << v49;
              if (v54 < 0)
              {
                v49 += 7;
                v27 = v50++ >= 9;
                if (v27)
                {
                  v51 = 0;
                  goto LABEL_123;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v51 = 0;
LABEL_123:
          v109 = v51 != 0;
          v110 = v11[245];
          goto LABEL_132;
        case 4u:
          v55 = 0;
          v56 = 0;
          v57 = 0;
          *(_WORD *)(a1 + v7[242]) |= 0x400u;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v59);
              *(_QWORD *)(a2 + v58) = v59 + 1;
              v57 |= (unint64_t)(v60 & 0x7F) << v55;
              if (v60 < 0)
              {
                v55 += 7;
                v27 = v56++ >= 9;
                if (v27)
                {
                  v57 = 0;
                  goto LABEL_127;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v57 = 0;
LABEL_127:
          v109 = v57 != 0;
          v110 = v12[246];
          goto LABEL_132;
        case 5u:
          v61 = 0;
          v62 = 0;
          v63 = 0;
          *(_WORD *)(a1 + v7[242]) |= 0x1000u;
          while (2)
          {
            v64 = *v3;
            v65 = *(_QWORD *)(a2 + v64);
            if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v65);
              *(_QWORD *)(a2 + v64) = v65 + 1;
              v63 |= (unint64_t)(v66 & 0x7F) << v61;
              if (v66 < 0)
              {
                v61 += 7;
                v27 = v62++ >= 9;
                if (v27)
                {
                  v63 = 0;
                  goto LABEL_131;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v63 = 0;
LABEL_131:
          v109 = v63 != 0;
          v110 = v13[247];
LABEL_132:
          *(_BYTE *)(a1 + v110) = v109;
          continue;
        case 6u:
          v67 = 0;
          v68 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[242]) |= 0x200u;
          while (2)
          {
            v69 = *v3;
            v70 = *(_QWORD *)(a2 + v69);
            if (v70 == -1 || v70 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v70);
              *(_QWORD *)(a2 + v69) = v70 + 1;
              v45 |= (unint64_t)(v71 & 0x7F) << v67;
              if (v71 < 0)
              {
                v67 += 7;
                v27 = v68++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_136;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_136:
          v108 = v14[248];
          goto LABEL_166;
        case 7u:
          v72 = 0;
          v73 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[242]) |= 2u;
          while (2)
          {
            v74 = *v3;
            v75 = *(_QWORD *)(a2 + v74);
            if (v75 == -1 || v75 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v76 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v75);
              *(_QWORD *)(a2 + v74) = v75 + 1;
              v32 |= (unint64_t)(v76 & 0x7F) << v72;
              if (v76 < 0)
              {
                v72 += 7;
                v27 = v73++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_140;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_140:
          v107 = v15[249];
          goto LABEL_157;
        case 8u:
          v77 = 0;
          v78 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[242]) |= 8u;
          while (2)
          {
            v79 = *v3;
            v80 = *(_QWORD *)(a2 + v79);
            if (v80 == -1 || v80 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v80);
              *(_QWORD *)(a2 + v79) = v80 + 1;
              v32 |= (unint64_t)(v81 & 0x7F) << v77;
              if (v81 < 0)
              {
                v77 += 7;
                v27 = v78++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_144;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_144:
          v107 = v16[250];
          goto LABEL_157;
        case 9u:
          v82 = 0;
          v83 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[242]) |= 4u;
          while (2)
          {
            v84 = *v3;
            v85 = *(_QWORD *)(a2 + v84);
            if (v85 == -1 || v85 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v85);
              *(_QWORD *)(a2 + v84) = v85 + 1;
              v32 |= (unint64_t)(v86 & 0x7F) << v82;
              if (v86 < 0)
              {
                v82 += 7;
                v27 = v83++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_148;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_148:
          v107 = v17[251];
          goto LABEL_157;
        case 0xAu:
          v87 = 0;
          v88 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[242]) |= 0x80u;
          while (2)
          {
            v89 = *v3;
            v90 = *(_QWORD *)(a2 + v89);
            if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v90);
              *(_QWORD *)(a2 + v89) = v90 + 1;
              v45 |= (unint64_t)(v91 & 0x7F) << v87;
              if (v91 < 0)
              {
                v87 += 7;
                v27 = v88++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_152;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_152:
          v108 = v18[252];
          goto LABEL_166;
        case 0xBu:
          v92 = 0;
          v93 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[242]) |= 1u;
          while (2)
          {
            v94 = *v3;
            v95 = *(_QWORD *)(a2 + v94);
            if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v95);
              *(_QWORD *)(a2 + v94) = v95 + 1;
              v32 |= (unint64_t)(v96 & 0x7F) << v92;
              if (v96 < 0)
              {
                v92 += 7;
                v27 = v93++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_156;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_156:
          v107 = v19[253];
LABEL_157:
          *(_QWORD *)(a1 + v107) = v32;
          continue;
        case 0xCu:
          v97 = 0;
          v98 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[242]) |= 0x40u;
          while (2)
          {
            v99 = *v3;
            v100 = *(_QWORD *)(a2 + v99);
            if (v100 == -1 || v100 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v100);
              *(_QWORD *)(a2 + v99) = v100 + 1;
              v45 |= (unint64_t)(v101 & 0x7F) << v97;
              if (v101 < 0)
              {
                v97 += 7;
                v27 = v98++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_161;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_161:
          v108 = v20[254];
          goto LABEL_166;
        case 0xDu:
          v102 = 0;
          v103 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[242]) |= 0x20u;
          break;
        default:
          v36 = v8;
          v37 = v10;
          v38 = v7;
          v39 = v11;
          v40 = v12;
          v41 = a1;
          result = PBReaderSkipValueWithTag();
          v20 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v13 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          a1 = v41;
          v14 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v40;
          v15 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v11 = v39;
          v16 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v7 = v38;
          v19 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v10 = v37;
          v17 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v8 = v36;
          v18 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v104 = *v3;
        v105 = *(_QWORD *)(a2 + v104);
        if (v105 == -1 || v105 >= *(_QWORD *)(a2 + *v4))
          break;
        v106 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v105);
        *(_QWORD *)(a2 + v104) = v105 + 1;
        v45 |= (unint64_t)(v106 & 0x7F) << v102;
        if ((v106 & 0x80) == 0)
          goto LABEL_163;
        v102 += 7;
        v27 = v103++ >= 9;
        if (v27)
        {
          LODWORD(v45) = 0;
          goto LABEL_165;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_163:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v45) = 0;
LABEL_165:
      v108 = 48;
LABEL_166:
      *(_DWORD *)(a1 + v108) = v45;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSiriRequestRecordReadFrom(_DWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  AWDTransportHistoryRecord *v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        a1[46] |= 0x400u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_207;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_209;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_207:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_209:
        v151 = 22;
        goto LABEL_298;
      case 2u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        a1[46] |= 0x10u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_213;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_213:
        v151 = 10;
        goto LABEL_298;
      case 3u:
        v29 = 0;
        v30 = 0;
        v31 = 0;
        a1[46] |= 0x800000u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v31 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              v14 = v30++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_217;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_217:
        v152 = 40;
        goto LABEL_311;
      case 4u:
        v35 = 0;
        v36 = 0;
        v31 = 0;
        a1[46] |= 0x20000u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v31 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_221;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_221:
        v152 = 34;
        goto LABEL_311;
      case 5u:
        v40 = 0;
        v41 = 0;
        v31 = 0;
        a1[46] |= 0x10000u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v31 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_225;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_225:
        v152 = 33;
        goto LABEL_311;
      case 6u:
        v45 = 0;
        v46 = 0;
        v31 = 0;
        a1[46] |= 0x2000000u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v31 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_229;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_229:
        v152 = 45;
        goto LABEL_311;
      case 7u:
        v50 = 0;
        v51 = 0;
        v31 = 0;
        a1[46] |= 0x1000000u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v31 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_233;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_233:
        v152 = 44;
        goto LABEL_311;
      case 8u:
        v55 = 0;
        v56 = 0;
        v19 = 0;
        a1[46] |= 0x800u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v19 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              v14 = v56++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_237;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_237:
        v151 = 24;
        goto LABEL_298;
      case 9u:
        v60 = 0;
        v61 = 0;
        v31 = 0;
        a1[46] |= 0x40000u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v31 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_241;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_241:
        v152 = 35;
        goto LABEL_311;
      case 0xAu:
        v65 = 0;
        v66 = 0;
        v19 = 0;
        a1[46] |= 0x40u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v19 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v14 = v66++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_245;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_245:
        v151 = 14;
        goto LABEL_298;
      case 0xBu:
        v70 = objc_alloc_init(AWDTransportHistoryRecord);
        objc_msgSend(a1, "addTransportHistory:", v70);

        if (PBReaderPlaceMark() && (AWDTransportHistoryRecordReadFrom((uint64_t)v70, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_312:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0xCu:
        v71 = 0;
        v72 = 0;
        v19 = 0;
        a1[46] |= 0x2000u;
        while (2)
        {
          v73 = *v3;
          v74 = *(_QWORD *)(a2 + v73);
          if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v19 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v71 += 7;
              v14 = v72++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_249;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_249:
        v151 = 28;
        goto LABEL_298;
      case 0xDu:
        v76 = 0;
        v77 = 0;
        v19 = 0;
        a1[46] |= 0x4000u;
        while (2)
        {
          v78 = *v3;
          v79 = *(_QWORD *)(a2 + v78);
          if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v19 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v76 += 7;
              v14 = v77++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_253;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_253:
        v151 = 30;
        goto LABEL_298;
      case 0xEu:
        v81 = 0;
        v82 = 0;
        v19 = 0;
        a1[46] |= 0x1000u;
        while (2)
        {
          v83 = *v3;
          v84 = *(_QWORD *)(a2 + v83);
          if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v84 + 1;
            v19 |= (unint64_t)(v85 & 0x7F) << v81;
            if (v85 < 0)
            {
              v81 += 7;
              v14 = v82++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_257;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_257:
        v151 = 26;
        goto LABEL_298;
      case 0xFu:
        v86 = 0;
        v87 = 0;
        v31 = 0;
        a1[46] |= 0x8000u;
        while (2)
        {
          v88 = *v3;
          v89 = *(_QWORD *)(a2 + v88);
          if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
            *(_QWORD *)(a2 + v88) = v89 + 1;
            v31 |= (unint64_t)(v90 & 0x7F) << v86;
            if (v90 < 0)
            {
              v86 += 7;
              v14 = v87++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_261;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_261:
        v152 = 32;
        goto LABEL_311;
      case 0x10u:
        v91 = 0;
        v92 = 0;
        v31 = 0;
        a1[46] |= 0x400000u;
        while (2)
        {
          v93 = *v3;
          v94 = *(_QWORD *)(a2 + v93);
          if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
            *(_QWORD *)(a2 + v93) = v94 + 1;
            v31 |= (unint64_t)(v95 & 0x7F) << v91;
            if (v95 < 0)
            {
              v91 += 7;
              v14 = v92++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_265;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_265:
        v152 = 39;
        goto LABEL_311;
      case 0x11u:
        v96 = 0;
        v97 = 0;
        v19 = 0;
        a1[46] |= 0x80u;
        while (2)
        {
          v98 = *v3;
          v99 = *(_QWORD *)(a2 + v98);
          if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
            *(_QWORD *)(a2 + v98) = v99 + 1;
            v19 |= (unint64_t)(v100 & 0x7F) << v96;
            if (v100 < 0)
            {
              v96 += 7;
              v14 = v97++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_269;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_269:
        v151 = 16;
        goto LABEL_298;
      case 0x12u:
        v101 = 0;
        v102 = 0;
        v19 = 0;
        a1[46] |= 0x20u;
        while (2)
        {
          v103 = *v3;
          v104 = *(_QWORD *)(a2 + v103);
          if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
            *(_QWORD *)(a2 + v103) = v104 + 1;
            v19 |= (unint64_t)(v105 & 0x7F) << v101;
            if (v105 < 0)
            {
              v101 += 7;
              v14 = v102++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_273:
        v151 = 12;
        goto LABEL_298;
      case 0x13u:
        v106 = 0;
        v107 = 0;
        v19 = 0;
        a1[46] |= 0x100u;
        while (2)
        {
          v108 = *v3;
          v109 = *(_QWORD *)(a2 + v108);
          if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
            *(_QWORD *)(a2 + v108) = v109 + 1;
            v19 |= (unint64_t)(v110 & 0x7F) << v106;
            if (v110 < 0)
            {
              v106 += 7;
              v14 = v107++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_277:
        v151 = 18;
        goto LABEL_298;
      case 0x14u:
        v111 = 0;
        v112 = 0;
        v19 = 0;
        a1[46] |= 0x200u;
        while (2)
        {
          v113 = *v3;
          v114 = *(_QWORD *)(a2 + v113);
          if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v114 + 1;
            v19 |= (unint64_t)(v115 & 0x7F) << v111;
            if (v115 < 0)
            {
              v111 += 7;
              v14 = v112++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_281:
        v151 = 20;
        goto LABEL_298;
      case 0x15u:
        v116 = 0;
        v117 = 0;
        v19 = 0;
        a1[46] |= 4u;
        while (2)
        {
          v118 = *v3;
          v119 = *(_QWORD *)(a2 + v118);
          if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v119 + 1;
            v19 |= (unint64_t)(v120 & 0x7F) << v116;
            if (v120 < 0)
            {
              v116 += 7;
              v14 = v117++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_285;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_285:
        v151 = 6;
        goto LABEL_298;
      case 0x16u:
        v121 = 0;
        v122 = 0;
        v19 = 0;
        a1[46] |= 2u;
        while (2)
        {
          v123 = *v3;
          v124 = *(_QWORD *)(a2 + v123);
          if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
            *(_QWORD *)(a2 + v123) = v124 + 1;
            v19 |= (unint64_t)(v125 & 0x7F) << v121;
            if (v125 < 0)
            {
              v121 += 7;
              v14 = v122++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_289;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_289:
        v151 = 4;
        goto LABEL_298;
      case 0x17u:
        v126 = 0;
        v127 = 0;
        v19 = 0;
        a1[46] |= 1u;
        while (2)
        {
          v128 = *v3;
          v129 = *(_QWORD *)(a2 + v128);
          if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
            *(_QWORD *)(a2 + v128) = v129 + 1;
            v19 |= (unint64_t)(v130 & 0x7F) << v126;
            if (v130 < 0)
            {
              v126 += 7;
              v14 = v127++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_293:
        v151 = 2;
        goto LABEL_298;
      case 0x18u:
        v131 = 0;
        v132 = 0;
        v19 = 0;
        a1[46] |= 8u;
        while (2)
        {
          v133 = *v3;
          v134 = *(_QWORD *)(a2 + v133);
          if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v134 + 1;
            v19 |= (unint64_t)(v135 & 0x7F) << v131;
            if (v135 < 0)
            {
              v131 += 7;
              v14 = v132++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_297:
        v151 = 8;
LABEL_298:
        *(_QWORD *)&a1[v151] = v19;
        goto LABEL_312;
      case 0x19u:
        v136 = 0;
        v137 = 0;
        v31 = 0;
        a1[46] |= 0x100000u;
        while (2)
        {
          v138 = *v3;
          v139 = *(_QWORD *)(a2 + v138);
          if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
            *(_QWORD *)(a2 + v138) = v139 + 1;
            v31 |= (unint64_t)(v140 & 0x7F) << v136;
            if (v140 < 0)
            {
              v136 += 7;
              v14 = v137++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_302;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_302:
        v152 = 37;
        goto LABEL_311;
      case 0x1Au:
        v141 = 0;
        v142 = 0;
        v31 = 0;
        a1[46] |= 0x200000u;
        while (2)
        {
          v143 = *v3;
          v144 = *(_QWORD *)(a2 + v143);
          if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v144 + 1;
            v31 |= (unint64_t)(v145 & 0x7F) << v141;
            if (v145 < 0)
            {
              v141 += 7;
              v14 = v142++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_306;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_306:
        v152 = 38;
        goto LABEL_311;
      case 0x1Bu:
        v146 = 0;
        v147 = 0;
        v31 = 0;
        a1[46] |= 0x80000u;
        while (2)
        {
          v148 = *v3;
          v149 = *(_QWORD *)(a2 + v148);
          if (v149 == -1 || v149 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
            *(_QWORD *)(a2 + v148) = v149 + 1;
            v31 |= (unint64_t)(v150 & 0x7F) << v146;
            if (v150 < 0)
            {
              v146 += 7;
              v14 = v147++ >= 9;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_310;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v31) = 0;
LABEL_310:
        v152 = 36;
LABEL_311:
        a1[v152] = v31;
        goto LABEL_312;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_312;
    }
  }
}

uint64_t AWDSiriServerConnectionFailedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_44;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_46;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_46:
          v36 = 16;
          goto LABEL_51;
        case 2u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 32) = String;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v19 |= (unint64_t)(v29 & 0x7F) << v25;
              if (v29 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_50:
          v36 = 8;
LABEL_51:
          *(_QWORD *)(a1 + v36) = v19;
          continue;
        case 4u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v33 = *v3;
        v34 = *(_QWORD *)(a2 + v33);
        if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
          break;
        v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
        *(_QWORD *)(a2 + v33) = v34 + 1;
        v32 |= (unint64_t)(v35 & 0x7F) << v30;
        if ((v35 & 0x80) == 0)
          goto LABEL_53;
        v30 += 7;
        v14 = v31++ >= 9;
        if (v14)
        {
          LODWORD(v32) = 0;
          goto LABEL_55;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v32) = 0;
LABEL_55:
      *(_DWORD *)(a1 + 24) = v32;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSiriServerConnectionOpenReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 28) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_51:
        *(_DWORD *)(a1 + 24) = v26;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          v30 = 0;
          v31 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
              break;
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v20 |= (unint64_t)(v34 & 0x7F) << v30;
            if ((v34 & 0x80) == 0)
              goto LABEL_53;
            v30 += 7;
            v14 = v31++ >= 9;
            if (v14)
            {
              v20 = 0;
              goto LABEL_55;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_55:
          v36 = 8;
        }
        else
        {
          if ((_DWORD)v17 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
              break;
            v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_45;
            v18 += 7;
            v14 = v19++ >= 9;
            if (v14)
            {
              v20 = 0;
              goto LABEL_47;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_47:
          v36 = 16;
        }
        *(_QWORD *)(a1 + v36) = v20;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSiriServerConnectionStartReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_31:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSiriSessionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  void *String;
  id v35;
  uint64_t v36;
  void *v37;
  AWDSiriRequestRecord *v38;
  uint64_t v39;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 56) |= 4u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_49;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_51:
        v39 = 24;
        goto LABEL_60;
      case 2u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 56) |= 2u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_55:
        v39 = 16;
        goto LABEL_60;
      case 3u:
        v29 = 0;
        v30 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v19 |= (unint64_t)(v33 & 0x7F) << v29;
            if (v33 < 0)
            {
              v29 += 7;
              v14 = v30++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_59:
        v39 = 8;
LABEL_60:
        *(_QWORD *)(a1 + v39) = v19;
        goto LABEL_61;
      case 4u:
        String = (void *)PBReaderReadString();

        v35 = String;
        v36 = 32;
        goto LABEL_44;
      case 5u:
        v37 = (void *)PBReaderReadString();

        v35 = v37;
        v36 = 40;
LABEL_44:
        *(_QWORD *)(a1 + v36) = v35;
        goto LABEL_61;
      case 6u:
        v38 = objc_alloc_init(AWDSiriRequestRecord);
        objc_msgSend((id)a1, "addSiriRequest:", v38);

        if (PBReaderPlaceMark() && (AWDSiriRequestRecordReadFrom(v38, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_61:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_61;
    }
  }
}

uint64_t AWDSiriSessionLoadTimeoutReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_58;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_60;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_58:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_60:
          v46 = 32;
          goto LABEL_77;
        case 2u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 40) = String;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v19 |= (unint64_t)(v29 & 0x7F) << v25;
              if (v29 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_64;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_64:
          v46 = 16;
          goto LABEL_77;
        case 4u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v19 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_68;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_68:
          v46 = 24;
          goto LABEL_77;
        case 5u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          *(_BYTE *)(a1 + 52) |= 0x10u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v37 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v37 = 0;
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v37 = 0;
LABEL_72:
          *(_BYTE *)(a1 + 48) = v37 != 0;
          continue;
        case 6u:
          v41 = 0;
          v42 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v43 = *v3;
        v44 = *(_QWORD *)(a2 + v43);
        if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
          break;
        v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
        *(_QWORD *)(a2 + v43) = v44 + 1;
        v19 |= (unint64_t)(v45 & 0x7F) << v41;
        if ((v45 & 0x80) == 0)
          goto LABEL_74;
        v41 += 7;
        v14 = v42++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_76;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_74:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_76:
      v46 = 8;
LABEL_77:
      *(_QWORD *)(a1 + v46) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSiriSpeechRecognizedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDSiriSpeechRecognized__durationFromVoiceSendEnd;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDSiriSpeechRecognized__durationFromVoiceSendEnd;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDSiriSpeechRecognized__durationFromVoiceSendEnd;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 4u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDSiriSpeechRecognized__timestamp;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDSiriSpeechRecognized__timestamp;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDSiriSpeechRecognized__timestamp;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 32) |= 1u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDSiriSpeechRecognized__durationFromVoiceRecordingEnd;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        v20 = 0;
        v25 = &OBJC_IVAR___AWDSiriSpeechRecognized__durationFromVoiceRecordingEnd;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDSiriSpeechRecognized__durationFromVoiceRecordingEnd;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      v20 = 0;
LABEL_50:
    *(_QWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSiriVoiceRecordingEndReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDSiriVoiceRecordingEnd__timestamp;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDSiriVoiceRecordingEnd__timestamp;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDSiriVoiceRecordingEnd__timestamp;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_QWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDSiriVoiceRecordingEnd__duration;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDSiriVoiceRecordingEnd__duration;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDSiriVoiceRecordingEnd__duration;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSiriVoiceRecordingStartReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_31:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSiriVoiceSendEndReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDSiriVoiceSendEnd__timestamp;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDSiriVoiceSendEnd__timestamp;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDSiriVoiceSendEnd__timestamp;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_QWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDSiriVoiceSendEnd__duration;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDSiriVoiceSendEnd__duration;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDSiriVoiceSendEnd__duration;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSiriVoiceSendStartReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_31:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDTCPConnectionInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDTCPConnectionInfo__dnsResolutionLatency;
              goto LABEL_77;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___AWDTCPConnectionInfo__dnsResolutionLatency;
              goto LABEL_80;
            }
          }
          v24 = &OBJC_IVAR___AWDTCPConnectionInfo__dnsResolutionLatency;
          goto LABEL_78;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpHandshakeLatency;
              goto LABEL_77;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpHandshakeLatency;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpHandshakeLatency;
          goto LABEL_78;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 0x40u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tlsLatency;
              goto LABEL_77;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tlsLatency;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tlsLatency;
          goto LABEL_78;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDTCPConnectionInfo__interfaceType;
              goto LABEL_77;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDTCPConnectionInfo__interfaceType;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDTCPConnectionInfo__interfaceType;
          goto LABEL_78;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpRetransmissions;
              goto LABEL_77;
            }
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v19 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v23 = v41++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpRetransmissions;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpRetransmissions;
          goto LABEL_78;
        case 6u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 0x20u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpTxBytes;
              goto LABEL_77;
            }
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v19 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v23 = v46++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpTxBytes;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpTxBytes;
          goto LABEL_78;
        case 7u:
          v50 = 0;
          v51 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 0x10u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v52 = *v3;
        v53 = *(_QWORD *)(a2 + v52);
        if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          break;
        v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
        *(_QWORD *)(a2 + v52) = v53 + 1;
        v19 |= (unint64_t)(v54 & 0x7F) << v50;
        if ((v54 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpRxBytes;
          goto LABEL_78;
        }
        v50 += 7;
        v23 = v51++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpRxBytes;
          goto LABEL_80;
        }
      }
      v24 = &OBJC_IVAR___AWDTCPConnectionInfo__tcpRxBytes;
LABEL_77:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_78:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_80:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDTransportHistoryRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  AWDTCPConnectionInfo *v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 4u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_60;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_62;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_62:
        v46 = 28;
        goto LABEL_75;
      case 2u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 2u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_66:
        v46 = 24;
        goto LABEL_75;
      case 3u:
        v29 = objc_alloc_init(AWDTCPConnectionInfo);
        objc_msgSend((id)a1, "addConnectionInfo:", v29);

        if (PBReaderPlaceMark() && AWDTCPConnectionInfoReadFrom((uint64_t)v29, a2))
        {
          PBReaderRecallMark();
LABEL_76:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 4u:
        v30 = 0;
        v31 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 0x10u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_70:
        v46 = 36;
        goto LABEL_75;
      case 5u:
        v35 = 0;
        v36 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 8u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_74:
        v46 = 32;
LABEL_75:
        *(_DWORD *)(a1 + v46) = v19;
        goto LABEL_76;
      case 6u:
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (2)
        {
          v43 = *v3;
          v44 = *(_QWORD *)(a2 + v43);
          if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                v42 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v42 = 0;
LABEL_81:
        *(_QWORD *)(a1 + 8) = v42;
        goto LABEL_76;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_76;
    }
  }
}

uint64_t AWDSOSAutomaticCallCountdownEnabledReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 5)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_BYTE *)(a1 + 16) = v25 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSOSAutomaticNewtonEnabledReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 5)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_BYTE *)(a1 + 16) = v25 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSOSLongPressTriggersEmergencySOSReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 5)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_BYTE *)(a1 + 16) = v25 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSOSNumberOfVoiceLoopsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 3)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDSOSNumberOfVoiceLoops__timestamp;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDSOSNumberOfVoiceLoops__timestamp;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDSOSNumberOfVoiceLoops__timestamp;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_QWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDSOSNumberOfVoiceLoops__numberOfVoiceLoops;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDSOSNumberOfVoiceLoops__numberOfVoiceLoops;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDSOSNumberOfVoiceLoops__numberOfVoiceLoops;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSOSShouldPlayAudioDuringCountdownReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 5)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_BYTE *)(a1 + 16) = v25 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSOSTriggeredReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 5)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSpringBoardAppBrightnessReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_44;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_46;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_46:
          v35 = 24;
          goto LABEL_55;
        case 2u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 32) = String;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v19 |= (unint64_t)(v29 & 0x7F) << v25;
              if (v29 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_50:
          v35 = 8;
          goto LABEL_55;
        case 4u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v32 = *v3;
        v33 = *(_QWORD *)(a2 + v32);
        if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          break;
        v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
        *(_QWORD *)(a2 + v32) = v33 + 1;
        v19 |= (unint64_t)(v34 & 0x7F) << v30;
        if ((v34 & 0x80) == 0)
          goto LABEL_52;
        v30 += 7;
        v14 = v31++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_54;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_52:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_54:
      v35 = 16;
LABEL_55:
      *(_QWORD *)(a1 + v35) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSpringBoardBiometricUnlockReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDSpringBoardBiometricUnlock__timestamp;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDSpringBoardBiometricUnlock__timestamp;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDSpringBoardBiometricUnlock__timestamp;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_QWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDSpringBoardBiometricUnlock__machTimestampInMilliseconds;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDSpringBoardBiometricUnlock__machTimestampInMilliseconds;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDSpringBoardBiometricUnlock__machTimestampInMilliseconds;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSpringBoardBreadcrumbReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void *String;
  id v31;
  uint64_t v32;
  void *v33;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_39;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_41;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_41:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          break;
        case 3u:
          String = (void *)PBReaderReadString();

          v31 = String;
          v32 = 24;
          goto LABEL_37;
        case 4u:
          v33 = (void *)PBReaderReadString();

          v31 = v33;
          v32 = 16;
LABEL_37:
          *(_QWORD *)(a1 + v32) = v31;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v27 = *v3;
        v28 = *(_QWORD *)(a2 + v27);
        if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          break;
        v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
        *(_QWORD *)(a2 + v27) = v28 + 1;
        v26 |= (unint64_t)(v29 & 0x7F) << v24;
        if ((v29 & 0x80) == 0)
          goto LABEL_43;
        v24 += 7;
        v14 = v25++ >= 9;
        if (v14)
        {
          v26 = 0;
          goto LABEL_45;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
      if (*(_BYTE *)(a2 + *v5))
        v26 = 0;
LABEL_45:
      *(_BYTE *)(a1 + 32) = v26 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSpringBoardClawGestureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_64;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_66;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_66:
          v53 = 16;
          goto LABEL_88;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_70:
          v54 = v26 != 0;
          v55 = 24;
          goto LABEL_83;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + 28) |= 0x10u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v32 = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_74:
          v54 = v32 != 0;
          v55 = 26;
          goto LABEL_83;
        case 4u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  v38 = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v38 = 0;
LABEL_78:
          v54 = v38 != 0;
          v55 = 25;
          goto LABEL_83;
        case 5u:
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_BYTE *)(a1 + 28) |= 0x20u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  v44 = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v44 = 0;
LABEL_82:
          v54 = v44 != 0;
          v55 = 27;
LABEL_83:
          *(_BYTE *)(a1 + v55) = v54;
          continue;
        case 6u:
          v48 = 0;
          v49 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v50 = *v3;
        v51 = *(_QWORD *)(a2 + v50);
        if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          break;
        v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
        *(_QWORD *)(a2 + v50) = v51 + 1;
        v19 |= (unint64_t)(v52 & 0x7F) << v48;
        if ((v52 & 0x80) == 0)
          goto LABEL_85;
        v48 += 7;
        v14 = v49++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_87;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_87:
      v53 = 8;
LABEL_88:
      *(_QWORD *)(a1 + v53) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSpringBoardDoNotDisturbChangeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDSpringBoardDoNotDisturbChange__timestamp;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDSpringBoardDoNotDisturbChange__timestamp;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDSpringBoardDoNotDisturbChange__timestamp;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_QWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDSpringBoardDoNotDisturbChange__state;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDSpringBoardDoNotDisturbChange__state;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDSpringBoardDoNotDisturbChange__state;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSpringBoardFolderStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 72) |= 4u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_70;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_72;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_70:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_72:
              v50 = 48;
              goto LABEL_89;
            case 2u:
              v24 = 0;
              v25 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 72) |= 8u;
              while (2)
              {
                v26 = *v3;
                v27 = *(_QWORD *)(a2 + v26);
                if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
                  *(_QWORD *)(a2 + v26) = v27 + 1;
                  v20 |= (unint64_t)(v28 & 0x7F) << v24;
                  if (v28 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_76;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_76:
              v50 = 56;
              goto LABEL_89;
            case 3u:
              v29 = 0;
              v30 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 72) |= 2u;
              while (2)
              {
                v31 = *v3;
                v32 = *(_QWORD *)(a2 + v31);
                if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
                  *(_QWORD *)(a2 + v31) = v32 + 1;
                  v20 |= (unint64_t)(v33 & 0x7F) << v29;
                  if (v33 < 0)
                  {
                    v29 += 7;
                    v14 = v30++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_80;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_80:
              v50 = 40;
              goto LABEL_89;
            case 4u:
              v34 = 0;
              v35 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 72) |= 0x10u;
              while (2)
              {
                v36 = *v3;
                v37 = *(_QWORD *)(a2 + v36);
                if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
                  *(_QWORD *)(a2 + v36) = v37 + 1;
                  v20 |= (unint64_t)(v38 & 0x7F) << v34;
                  if (v38 < 0)
                  {
                    v34 += 7;
                    v14 = v35++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_84;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_84:
              v50 = 64;
              goto LABEL_89;
            case 5u:
              v39 = 0;
              v40 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 72) |= 1u;
              while (2)
              {
                v41 = *v3;
                v42 = *(_QWORD *)(a2 + v41);
                if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
                  *(_QWORD *)(a2 + v41) = v42 + 1;
                  v20 |= (unint64_t)(v43 & 0x7F) << v39;
                  if (v43 < 0)
                  {
                    v39 += 7;
                    v14 = v40++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_88;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_88:
              v50 = 32;
LABEL_89:
              *(_QWORD *)(a1 + v50) = v20;
              goto LABEL_90;
            case 6u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v44 = 0;
                  v45 = 0;
                  v46 = 0;
                  while (1)
                  {
                    v47 = *v3;
                    v48 = *(_QWORD *)(a2 + v47);
                    if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
                    *(_QWORD *)(a2 + v47) = v48 + 1;
                    v46 |= (unint64_t)(v49 & 0x7F) << v44;
                    if (v49 < 0)
                    {
                      v44 += 7;
                      v14 = v45++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_68;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_68:
                  PBRepeatedUInt64Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                v51 = 0;
                v52 = 0;
                v53 = 0;
                while (1)
                {
                  v54 = *v3;
                  v55 = *(_QWORD *)(a2 + v54);
                  if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
                  *(_QWORD *)(a2 + v54) = v55 + 1;
                  v53 |= (unint64_t)(v56 & 0x7F) << v51;
                  if (v56 < 0)
                  {
                    v51 += 7;
                    v14 = v52++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_101;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_101:
                PBRepeatedUInt64Add();
              }
LABEL_90:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_90;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSpringBoardIconLaunchReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_64;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_66;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_66:
          v52 = 16;
          goto LABEL_88;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_70:
          v53 = v26 != 0;
          v54 = 32;
          goto LABEL_79;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + 36) |= 0x20u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v32 = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_74:
          v53 = v32 != 0;
          v54 = 34;
          goto LABEL_79;
        case 4u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + 36) |= 0x10u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  v38 = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v38 = 0;
LABEL_78:
          v53 = v38 != 0;
          v54 = 33;
LABEL_79:
          *(_BYTE *)(a1 + v54) = v53;
          continue;
        case 5u:
          v42 = 0;
          v43 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v19 |= (unint64_t)(v46 & 0x7F) << v42;
              if (v46 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_83:
          v52 = 8;
          goto LABEL_88;
        case 6u:
          v47 = 0;
          v48 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v49 = *v3;
        v50 = *(_QWORD *)(a2 + v49);
        if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
          break;
        v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
        *(_QWORD *)(a2 + v49) = v50 + 1;
        v19 |= (unint64_t)(v51 & 0x7F) << v47;
        if ((v51 & 0x80) == 0)
          goto LABEL_85;
        v47 += 7;
        v14 = v48++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_87;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_87:
      v52 = 24;
LABEL_88:
      *(_QWORD *)(a1 + v52) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSpringBoardPressSequenceReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  AWDTuple *v24;
  void *String;
  id v26;
  uint64_t v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  void *v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 52) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_49;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_51:
        v40 = 16;
        goto LABEL_60;
      case 2u:
        v24 = objc_alloc_init(AWDTuple);
        objc_msgSend((id)a1, "addSequence:", v24);

        if (PBReaderPlaceMark() && AWDTupleReadFrom((uint64_t)v24, a2))
        {
          PBReaderRecallMark();
LABEL_61:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 3u:
        String = (void *)PBReaderReadString();

        v26 = String;
        v27 = 32;
        goto LABEL_47;
      case 4u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 52) |= 4u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if (v33 < 0)
            {
              v28 += 7;
              v14 = v29++ >= 9;
              if (v14)
              {
                v30 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v30 = 0;
LABEL_55:
        *(_BYTE *)(a1 + 48) = v30 != 0;
        goto LABEL_61;
      case 5u:
        v34 = 0;
        v35 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 52) |= 1u;
        while (2)
        {
          v36 = *v3;
          v37 = *(_QWORD *)(a2 + v36);
          if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
            *(_QWORD *)(a2 + v36) = v37 + 1;
            v19 |= (unint64_t)(v38 & 0x7F) << v34;
            if (v38 < 0)
            {
              v34 += 7;
              v14 = v35++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_59:
        v40 = 8;
LABEL_60:
        *(_QWORD *)(a1 + v40) = v19;
        goto LABEL_61;
      case 6u:
        v39 = (void *)PBReaderReadString();

        v26 = v39;
        v27 = 40;
LABEL_47:
        *(_QWORD *)(a1 + v27) = v26;
        goto LABEL_61;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_61;
    }
  }
}

uint64_t AWDSpringBoardSOSAlertResponseReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void *String;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 5)
      {
        String = (void *)PBReaderReadString();

        v25 = String;
        v26 = 24;
      }
      else
      {
        if ((_DWORD)v17 != 4)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_34;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_36;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_36:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v27 = (void *)PBReaderReadString();

        v25 = v27;
        v26 = 16;
      }
      *(_QWORD *)(a1 + v26) = v25;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSpringBoardSwitcherPresentationInteractionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void *String;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 28) |= 2u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_43;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            v26 = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
        if (*(_BYTE *)(a2 + *v5))
          v26 = 0;
LABEL_45:
        *(_BYTE *)(a1 + 24) = v26 != 0;
      }
      else if ((_DWORD)v17 == 2)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
      else if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_39;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_41;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_41:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSpringBoardSwitcherToAppTransitionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_44;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_46;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_46:
          v36 = 16;
          goto LABEL_51;
        case 2u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 24) = String;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v19 |= (unint64_t)(v29 & 0x7F) << v25;
              if (v29 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_50:
          v36 = 8;
LABEL_51:
          *(_QWORD *)(a1 + v36) = v19;
          continue;
        case 4u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v33 = *v3;
        v34 = *(_QWORD *)(a2 + v33);
        if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
          break;
        v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
        *(_QWORD *)(a2 + v33) = v34 + 1;
        v32 |= (unint64_t)(v35 & 0x7F) << v30;
        if ((v35 & 0x80) == 0)
          goto LABEL_53;
        v30 += 7;
        v14 = v31++ >= 9;
        if (v14)
        {
          v32 = 0;
          goto LABEL_55;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
      if (*(_BYTE *)(a2 + *v5))
        v32 = 0;
LABEL_55:
      *(_BYTE *)(a1 + 32) = v32 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSpringBoardSystemGestureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void *String;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        String = (void *)PBReaderReadString();

        v25 = String;
        v26 = 24;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_34;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_36;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_36:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v27 = (void *)PBReaderReadString();

        v25 = v27;
        v26 = 16;
      }
      *(_QWORD *)(a1 + v26) = v25;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDTupleReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDTuple__upDuration;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDTuple__upDuration;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDTuple__upDuration;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_QWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDTuple__downDuration;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDTuple__downDuration;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDTuple__downDuration;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDVPNSessionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 80) |= 4u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_128;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_130;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_128:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_130:
          v99 = 24;
          goto LABEL_189;
        case 2u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 48) = String;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 80) |= 0x400u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_134;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_134:
          v100 = 68;
          goto LABEL_180;
        case 4u:
          v31 = 0;
          v32 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 80) |= 0x200u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v27 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_138;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_138:
          v100 = 64;
          goto LABEL_180;
        case 5u:
          v36 = 0;
          v37 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 80) |= 0x20u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v27 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_142;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_142:
          v100 = 40;
          goto LABEL_180;
        case 6u:
          v41 = 0;
          v42 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 80) |= 0x40u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v27 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_146;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_146:
          v100 = 44;
          goto LABEL_180;
        case 7u:
          v46 = 0;
          v47 = 0;
          v48 = 0;
          *(_WORD *)(a1 + 80) |= 0x4000u;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
              *(_QWORD *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                v14 = v47++ >= 9;
                if (v14)
                {
                  v48 = 0;
                  goto LABEL_150;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v48 = 0;
LABEL_150:
          v101 = v48 != 0;
          v102 = 78;
          goto LABEL_171;
        case 8u:
          v52 = 0;
          v53 = 0;
          v54 = 0;
          *(_WORD *)(a1 + 80) |= 0x1000u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v54 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                v14 = v53++ >= 9;
                if (v14)
                {
                  v54 = 0;
                  goto LABEL_154;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v54 = 0;
LABEL_154:
          v101 = v54 != 0;
          v102 = 76;
          goto LABEL_171;
        case 9u:
          v58 = 0;
          v59 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 80) |= 0x100u;
          while (2)
          {
            v60 = *v3;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
              *(_QWORD *)(a2 + v60) = v61 + 1;
              v27 |= (unint64_t)(v62 & 0x7F) << v58;
              if (v62 < 0)
              {
                v58 += 7;
                v14 = v59++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_158;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_158:
          v100 = 60;
          goto LABEL_180;
        case 0xAu:
          v63 = 0;
          v64 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 80) |= 0x800u;
          while (2)
          {
            v65 = *v3;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
              *(_QWORD *)(a2 + v65) = v66 + 1;
              v27 |= (unint64_t)(v67 & 0x7F) << v63;
              if (v67 < 0)
              {
                v63 += 7;
                v14 = v64++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_162:
          v100 = 72;
          goto LABEL_180;
        case 0xBu:
          v68 = 0;
          v69 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 80) |= 8u;
          while (2)
          {
            v70 = *v3;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
              *(_QWORD *)(a2 + v70) = v71 + 1;
              v27 |= (unint64_t)(v72 & 0x7F) << v68;
              if (v72 < 0)
              {
                v68 += 7;
                v14 = v69++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_166;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_166:
          v100 = 32;
          goto LABEL_180;
        case 0xCu:
          v73 = 0;
          v74 = 0;
          v75 = 0;
          *(_WORD *)(a1 + 80) |= 0x2000u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v75 |= (unint64_t)(v78 & 0x7F) << v73;
              if (v78 < 0)
              {
                v73 += 7;
                v14 = v74++ >= 9;
                if (v14)
                {
                  v75 = 0;
                  goto LABEL_170;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v75 = 0;
LABEL_170:
          v101 = v75 != 0;
          v102 = 77;
LABEL_171:
          *(_BYTE *)(a1 + v102) = v101;
          continue;
        case 0xDu:
          v79 = 0;
          v80 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 80) |= 0x10u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v27 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v14 = v80++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_175;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_175:
          v100 = 36;
          goto LABEL_180;
        case 0xEu:
          v84 = 0;
          v85 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 80) |= 0x80u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v27 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v14 = v85++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_179;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_179:
          v100 = 56;
LABEL_180:
          *(_DWORD *)(a1 + v100) = v27;
          continue;
        case 0xFu:
          v89 = 0;
          v90 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 80) |= 1u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v19 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v14 = v90++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_184;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_184:
          v99 = 8;
          goto LABEL_189;
        case 0x10u:
          v94 = 0;
          v95 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 80) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v96 = *v3;
        v97 = *(_QWORD *)(a2 + v96);
        if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
          break;
        v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v97);
        *(_QWORD *)(a2 + v96) = v97 + 1;
        v19 |= (unint64_t)(v98 & 0x7F) << v94;
        if ((v98 & 0x80) == 0)
          goto LABEL_186;
        v94 += 7;
        v14 = v95++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_188;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_186:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_188:
      v99 = 16;
LABEL_189:
      *(_QWORD *)(a1 + v99) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDBTLEConnectionStatsReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  uint64_t v33;
  int *v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = &OBJC_IVAR___AWDBTLEConnectionStats__start;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDBTLEConnectionStats__complete;
    v12 = &OBJC_IVAR___AWDBTLEConnectionStats__peakOutage;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[437]) |= 0x100u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_101;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_105;
          }
          v29 = v9;
          goto LABEL_102;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[437]) |= 1u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_101;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_102;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[437]) |= 0x80u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_101;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_102;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[437]) |= 0x200u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__totalDuration;
              goto LABEL_101;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__totalDuration;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDBTLEConnectionStats__totalDuration;
          goto LABEL_102;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[437]) |= 2u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc0;
              goto LABEL_101;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc0;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc0;
          goto LABEL_102;
        case 6u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[437]) |= 4u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc1;
              goto LABEL_101;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc1;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc1;
          goto LABEL_102;
        case 7u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[437]) |= 8u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc2;
              goto LABEL_101;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc2;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc2;
          goto LABEL_102;
        case 8u:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[437]) |= 0x10u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc3;
              goto LABEL_101;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc3;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc3;
          goto LABEL_102;
        case 9u:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[437]) |= 0x20u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc4;
              goto LABEL_101;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc4;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc4;
          goto LABEL_102;
        case 0xAu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[437]) |= 0x40u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v2;
          v34 = v8;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v8 = v34;
          v2 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v80 = *v4;
        v81 = *(_QWORD *)(a2 + v80);
        if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
          break;
        v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
        *(_QWORD *)(a2 + v80) = v81 + 1;
        v24 |= (unint64_t)(v82 & 0x7F) << v78;
        if ((v82 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc5;
          goto LABEL_102;
        }
        v28 = 0;
        v78 += 7;
        v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc5;
        v30 = v79++ > 8;
        if (v30)
          goto LABEL_105;
      }
      v29 = &OBJC_IVAR___AWDBTLEConnectionStats__dc5;
LABEL_101:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_102:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_105:
      *(_DWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL AWDChipCountersRxReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  int *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  unint64_t v116;
  char v117;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = &OBJC_IVAR___AWDChipCountersRx__rxframe;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDChipCountersRx__rxbyte;
    v12 = &OBJC_IVAR___AWDChipCountersRx__rxerror;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x400u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_157;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_161;
          }
          v29 = v9;
          goto LABEL_158;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x20u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_157;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_158;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x80u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_157;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_158;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x40u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxctl;
              goto LABEL_157;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxctl;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxctl;
          goto LABEL_158;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x1000u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxnobuf;
              goto LABEL_157;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxnobuf;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxnobuf;
          goto LABEL_158;
        case 6u:
          v93 = 0;
          v94 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x8000u;
          while (2)
          {
            v95 = *v4;
            v96 = *(_QWORD *)(a2 + v95);
            if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxrtry;
              goto LABEL_157;
            }
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v24 |= (unint64_t)(v97 & 0x7F) << v93;
            if (v97 < 0)
            {
              v28 = 0;
              v93 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxrtry;
              v30 = v94++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxrtry;
          goto LABEL_158;
        case 7u:
          v98 = 0;
          v99 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x2000u;
          while (2)
          {
            v100 = *v4;
            v101 = *(_QWORD *)(a2 + v100);
            if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxnondata;
              goto LABEL_157;
            }
            v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v101);
            *(_QWORD *)(a2 + v100) = v101 + 1;
            v24 |= (unint64_t)(v102 & 0x7F) << v98;
            if (v102 < 0)
            {
              v28 = 0;
              v98 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxnondata;
              v30 = v99++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxnondata;
          goto LABEL_158;
        case 8u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 4u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadds;
              goto LABEL_157;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadds;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadds;
          goto LABEL_158;
        case 9u:
          v103 = 0;
          v104 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 1u;
          while (2)
          {
            v105 = *v4;
            v106 = *(_QWORD *)(a2 + v105);
            if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadcm;
              goto LABEL_157;
            }
            v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v106);
            *(_QWORD *)(a2 + v105) = v106 + 1;
            v24 |= (unint64_t)(v107 & 0x7F) << v103;
            if (v107 < 0)
            {
              v28 = 0;
              v103 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadcm;
              v30 = v104++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadcm;
          goto LABEL_158;
        case 0xAu:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x200u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxfragerr;
              goto LABEL_157;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxfragerr;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxfragerr;
          goto LABEL_158;
        case 0xBu:
          v108 = 0;
          v109 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x10000u;
          while (2)
          {
            v110 = *v4;
            v111 = *(_QWORD *)(a2 + v110);
            if (v111 == -1 || v111 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxrunt;
              goto LABEL_157;
            }
            v112 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v111);
            *(_QWORD *)(a2 + v110) = v111 + 1;
            v24 |= (unint64_t)(v112 & 0x7F) << v108;
            if (v112 < 0)
            {
              v28 = 0;
              v108 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxrunt;
              v30 = v109++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxrunt;
          goto LABEL_158;
        case 0xCu:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x800u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxgiant;
              goto LABEL_157;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxgiant;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxgiant;
          goto LABEL_158;
        case 0xDu:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x4000u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxnoscb;
              goto LABEL_157;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxnoscb;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxnoscb;
          goto LABEL_158;
        case 0xEu:
          v113 = 0;
          v114 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 8u;
          while (2)
          {
            v115 = *v4;
            v116 = *(_QWORD *)(a2 + v115);
            if (v116 == -1 || v116 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadproto;
              goto LABEL_157;
            }
            v117 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v116);
            *(_QWORD *)(a2 + v115) = v116 + 1;
            v24 |= (unint64_t)(v117 & 0x7F) << v113;
            if (v117 < 0)
            {
              v28 = 0;
              v113 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadproto;
              v30 = v114++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadproto;
          goto LABEL_158;
        case 0xFu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x10u;
          while (2)
          {
            v80 = *v4;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadsrcmac;
              goto LABEL_157;
            }
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v24 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v28 = 0;
              v78 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadsrcmac;
              v30 = v79++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadsrcmac;
          goto LABEL_158;
        case 0x10u:
          v83 = 0;
          v84 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 2u;
          while (2)
          {
            v85 = *v4;
            v86 = *(_QWORD *)(a2 + v85);
            if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadda;
              goto LABEL_157;
            }
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v24 |= (unint64_t)(v87 & 0x7F) << v83;
            if (v87 < 0)
            {
              v28 = 0;
              v83 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadda;
              v30 = v84++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxbadda;
          goto LABEL_158;
        case 0x11u:
          v88 = 0;
          v89 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[448]) |= 0x100u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v8;
          v34 = v2;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v2 = v34;
          v8 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v90 = *v4;
        v91 = *(_QWORD *)(a2 + v90);
        if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v5))
          break;
        v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v91);
        *(_QWORD *)(a2 + v90) = v91 + 1;
        v24 |= (unint64_t)(v92 & 0x7F) << v88;
        if ((v92 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDChipCountersRx__rxfilter;
          goto LABEL_158;
        }
        v28 = 0;
        v88 += 7;
        v29 = &OBJC_IVAR___AWDChipCountersRx__rxfilter;
        v30 = v89++ > 8;
        if (v30)
          goto LABEL_161;
      }
      v29 = &OBJC_IVAR___AWDChipCountersRx__rxfilter;
LABEL_157:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_158:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_161:
      *(_QWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL AWDChipCountersTxReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  int *v29;
  BOOL v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  int *v86;
  int *v87;
  uint64_t v88;
  int *v89;
  int *v90;
  uint64_t v91;
  char v92;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = &OBJC_IVAR___AWDChipCountersTx__txframe;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDChipCountersTx__txbyte;
    v12 = &OBJC_IVAR___AWDChipCountersTx__txretrans;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 0x20u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_117;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_121;
          }
          v29 = v9;
          goto LABEL_118;
        case 2u:
          v31 = 0;
          v32 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 1u;
          while (2)
          {
            v33 = *v4;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_117;
            }
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v24 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v28 = 0;
              v31 += 7;
              v29 = v11;
              v30 = v32++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_118;
        case 3u:
          v36 = 0;
          v37 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 0x200u;
          while (2)
          {
            v38 = *v4;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_117;
            }
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v24 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v28 = 0;
              v36 += 7;
              v29 = v12;
              v30 = v37++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_118;
        case 4u:
          v41 = 0;
          v42 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 0x10u;
          while (2)
          {
            v43 = *v4;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersTx__txerror;
              goto LABEL_117;
            }
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v24 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v28 = 0;
              v41 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersTx__txerror;
              v30 = v42++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersTx__txerror;
          goto LABEL_118;
        case 5u:
          v46 = 0;
          v47 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 8u;
          while (2)
          {
            v48 = *v4;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersTx__txctl;
              goto LABEL_117;
            }
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v24 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v28 = 0;
              v46 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersTx__txctl;
              v30 = v47++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersTx__txctl;
          goto LABEL_118;
        case 6u:
          v51 = 0;
          v52 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 0x100u;
          while (2)
          {
            v53 = *v4;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersTx__txprshort;
              goto LABEL_117;
            }
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v24 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v28 = 0;
              v51 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersTx__txprshort;
              v30 = v52++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersTx__txprshort;
          goto LABEL_118;
        case 7u:
          v56 = 0;
          v57 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 0x800u;
          while (2)
          {
            v58 = *v4;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersTx__txserr;
              goto LABEL_117;
            }
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v24 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v28 = 0;
              v56 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersTx__txserr;
              v30 = v57++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersTx__txserr;
          goto LABEL_118;
        case 8u:
          v61 = 0;
          v62 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 0x80u;
          while (2)
          {
            v63 = *v4;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersTx__txnobuf;
              goto LABEL_117;
            }
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v24 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v28 = 0;
              v61 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersTx__txnobuf;
              v30 = v62++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersTx__txnobuf;
          goto LABEL_118;
        case 9u:
          v66 = 0;
          v67 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 0x40u;
          while (2)
          {
            v68 = *v4;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersTx__txnoassoc;
              goto LABEL_117;
            }
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v24 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v28 = 0;
              v66 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersTx__txnoassoc;
              v30 = v67++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersTx__txnoassoc;
          goto LABEL_118;
        case 0xAu:
          v71 = 0;
          v72 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 0x400u;
          while (2)
          {
            v73 = *v4;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersTx__txrunt;
              goto LABEL_117;
            }
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v24 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v28 = 0;
              v71 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersTx__txrunt;
              v30 = v72++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersTx__txrunt;
          goto LABEL_118;
        case 0xBu:
          v76 = 0;
          v77 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 2u;
          while (2)
          {
            v78 = *v4;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDChipCountersTx__txchit;
              goto LABEL_117;
            }
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v24 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v28 = 0;
              v76 += 7;
              v29 = &OBJC_IVAR___AWDChipCountersTx__txchit;
              v30 = v77++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDChipCountersTx__txchit;
          goto LABEL_118;
        case 0xCu:
          v81 = 0;
          v82 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[466]) |= 4u;
          break;
        default:
          v86 = v9;
          v87 = v11;
          v88 = v2;
          v89 = v8;
          v90 = v12;
          v91 = a1;
          v92 = PBReaderSkipValueWithTag();
          a1 = v91;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v90;
          v8 = v89;
          v2 = v88;
          v11 = v87;
          v9 = v86;
          if ((v92 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v83 = *v4;
        v84 = *(_QWORD *)(a2 + v83);
        if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v5))
          break;
        v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v84);
        *(_QWORD *)(a2 + v83) = v84 + 1;
        v24 |= (unint64_t)(v85 & 0x7F) << v81;
        if ((v85 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDChipCountersTx__txcmiss;
          goto LABEL_118;
        }
        v28 = 0;
        v81 += 7;
        v29 = &OBJC_IVAR___AWDChipCountersTx__txcmiss;
        v30 = v82++ > 8;
        if (v30)
          goto LABEL_121;
      }
      v29 = &OBJC_IVAR___AWDChipCountersTx__txcmiss;
LABEL_117:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_118:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_121:
      *(_QWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL AWDChipErrorCountersTxReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 0x10u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txuflo;
              goto LABEL_61;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              v19 = 0;
              v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txuflo;
              goto LABEL_64;
            }
          }
          v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txuflo;
          goto LABEL_62;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 8u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txphyerr;
              goto LABEL_61;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txphyerr;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txphyerr;
          goto LABEL_62;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txphycrs;
              goto LABEL_61;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txphycrs;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txphycrs;
          goto LABEL_62;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txchanrej;
              goto LABEL_61;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txchanrej;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txchanrej;
          goto LABEL_62;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 2u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v42 = *v3;
        v43 = *(_QWORD *)(a2 + v42);
        if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
        *(_QWORD *)(a2 + v42) = v43 + 1;
        v19 |= (unint64_t)(v44 & 0x7F) << v40;
        if ((v44 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txexptime;
          goto LABEL_62;
        }
        v40 += 7;
        v23 = v41++ > 8;
        if (v23)
        {
          v19 = 0;
          v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txexptime;
          goto LABEL_64;
        }
      }
      v24 = &OBJC_IVAR___AWDChipErrorCountersTx__txexptime;
LABEL_61:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_64:
      *(_QWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDControlFramesReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 4u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDControlFrames__blockAckRequest;
              goto LABEL_85;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              v19 = 0;
              v24 = &OBJC_IVAR___AWDControlFrames__blockAckRequest;
              goto LABEL_88;
            }
          }
          v24 = &OBJC_IVAR___AWDControlFrames__blockAckRequest;
          goto LABEL_86;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDControlFrames__blockAck;
              goto LABEL_85;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDControlFrames__blockAck;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDControlFrames__blockAck;
          goto LABEL_86;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 0x40u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDControlFrames__psPoll;
              goto LABEL_85;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDControlFrames__psPoll;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDControlFrames__psPoll;
          goto LABEL_86;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 0x80u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDControlFrames__rts;
              goto LABEL_85;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDControlFrames__rts;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDControlFrames__rts;
          goto LABEL_86;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 0x20u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDControlFrames__cts;
              goto LABEL_85;
            }
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v19 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v23 = v41++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDControlFrames__cts;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDControlFrames__cts;
          goto LABEL_86;
        case 6u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 1u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDControlFrames__ack;
              goto LABEL_85;
            }
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v19 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v23 = v46++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDControlFrames__ack;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDControlFrames__ack;
          goto LABEL_86;
        case 7u:
          v50 = 0;
          v51 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 8u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDControlFrames__cFend;
              goto LABEL_85;
            }
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v19 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v23 = v51++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDControlFrames__cFend;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDControlFrames__cFend;
          goto LABEL_86;
        case 8u:
          v55 = 0;
          v56 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 0x10u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v57 = *v3;
        v58 = *(_QWORD *)(a2 + v57);
        if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          break;
        v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
        *(_QWORD *)(a2 + v57) = v58 + 1;
        v19 |= (unint64_t)(v59 & 0x7F) << v55;
        if ((v59 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDControlFrames__cFendCFack;
          goto LABEL_86;
        }
        v55 += 7;
        v23 = v56++ > 8;
        if (v23)
        {
          v19 = 0;
          v24 = &OBJC_IVAR___AWDControlFrames__cFendCFack;
          goto LABEL_88;
        }
      }
      v24 = &OBJC_IVAR___AWDControlFrames__cFendCFack;
LABEL_85:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_86:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_88:
      *(_QWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDDataFramesReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  uint64_t v33;
  int *v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = &OBJC_IVAR___AWDDataFrames__dataFrames;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDDataFrames__dataCFack;
    v12 = &OBJC_IVAR___AWDDataFrames__dataCFpoll;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 0x40u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_133;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_137;
          }
          v29 = v9;
          goto LABEL_134;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 8u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_133;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_134;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 0x20u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_133;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_134;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 0x10u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDDataFrames__dataCFackCFpoll;
              goto LABEL_133;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDDataFrames__dataCFackCFpoll;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDDataFrames__dataCFackCFpoll;
          goto LABEL_134;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 0x80u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDDataFrames__null;
              goto LABEL_133;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDDataFrames__null;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDDataFrames__null;
          goto LABEL_134;
        case 6u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 1u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDDataFrames__cFack;
              goto LABEL_133;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDDataFrames__cFack;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDDataFrames__cFack;
          goto LABEL_134;
        case 7u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 4u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDDataFrames__cFpoll;
              goto LABEL_133;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDDataFrames__cFpoll;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDDataFrames__cFpoll;
          goto LABEL_134;
        case 8u:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 2u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDDataFrames__cFackCFpoll;
              goto LABEL_133;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDDataFrames__cFackCFpoll;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDDataFrames__cFackCFpoll;
          goto LABEL_134;
        case 9u:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 0x100u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDDataFrames__qoSdata;
              goto LABEL_133;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDDataFrames__qoSdata;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDDataFrames__qoSdata;
          goto LABEL_134;
        case 0xAu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 0x200u;
          while (2)
          {
            v80 = *v4;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDDataFrames__qoSdataCFack;
              goto LABEL_133;
            }
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v24 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v28 = 0;
              v78 += 7;
              v29 = &OBJC_IVAR___AWDDataFrames__qoSdataCFack;
              v30 = v79++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDDataFrames__qoSdataCFack;
          goto LABEL_134;
        case 0xBu:
          v83 = 0;
          v84 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 0x400u;
          while (2)
          {
            v85 = *v4;
            v86 = *(_QWORD *)(a2 + v85);
            if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDDataFrames__qoSdataCFackCFpoll;
              goto LABEL_133;
            }
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v24 |= (unint64_t)(v87 & 0x7F) << v83;
            if (v87 < 0)
            {
              v28 = 0;
              v83 += 7;
              v29 = &OBJC_IVAR___AWDDataFrames__qoSdataCFackCFpoll;
              v30 = v84++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDDataFrames__qoSdataCFackCFpoll;
          goto LABEL_134;
        case 0xCu:
          v88 = 0;
          v89 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 0x2000u;
          while (2)
          {
            v90 = *v4;
            v91 = *(_QWORD *)(a2 + v90);
            if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDDataFrames__qoSnull;
              goto LABEL_133;
            }
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v91);
            *(_QWORD *)(a2 + v90) = v91 + 1;
            v24 |= (unint64_t)(v92 & 0x7F) << v88;
            if (v92 < 0)
            {
              v28 = 0;
              v88 += 7;
              v29 = &OBJC_IVAR___AWDDataFrames__qoSnull;
              v30 = v89++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDDataFrames__qoSnull;
          goto LABEL_134;
        case 0xDu:
          v93 = 0;
          v94 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 0x1000u;
          while (2)
          {
            v95 = *v4;
            v96 = *(_QWORD *)(a2 + v95);
            if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDDataFrames__qoSnodataCFpoll;
              goto LABEL_133;
            }
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v24 |= (unint64_t)(v97 & 0x7F) << v93;
            if (v97 < 0)
            {
              v28 = 0;
              v93 += 7;
              v29 = &OBJC_IVAR___AWDDataFrames__qoSnodataCFpoll;
              v30 = v94++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDDataFrames__qoSnodataCFpoll;
          goto LABEL_134;
        case 0xEu:
          v98 = 0;
          v99 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[494]) |= 0x800u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v2;
          v34 = v8;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v8 = v34;
          v2 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v100 = *v4;
        v101 = *(_QWORD *)(a2 + v100);
        if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v5))
          break;
        v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v101);
        *(_QWORD *)(a2 + v100) = v101 + 1;
        v24 |= (unint64_t)(v102 & 0x7F) << v98;
        if ((v102 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDDataFrames__qoSnodataCFack;
          goto LABEL_134;
        }
        v28 = 0;
        v98 += 7;
        v29 = &OBJC_IVAR___AWDDataFrames__qoSnodataCFack;
        v30 = v99++ > 8;
        if (v30)
          goto LABEL_137;
      }
      v29 = &OBJC_IVAR___AWDDataFrames__qoSnodataCFack;
LABEL_133:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_134:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_137:
      *(_QWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDHEStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  int v19;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t result;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  int *v125;
  int *v126;
  int *v127;
  AWDOMICntrs *v128;
  uint64_t v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v8 = (int *)MEMORY[0x24BE7AF30];
    v9 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v10 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v11 = 0;
        v12 = 0;
        v13 = 0;
        while (1)
        {
          v14 = *v3;
          v15 = *(_QWORD *)(a2 + v14);
          if (v15 == -1 || v15 >= *(_QWORD *)(a2 + *v4))
            break;
          v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v15);
          *(_QWORD *)(a2 + v14) = v15 + 1;
          v13 |= (unint64_t)(v16 & 0x7F) << v11;
          if ((v16 & 0x80) == 0)
            goto LABEL_12;
          v11 += 7;
          v17 = v12++ >= 9;
          if (v17)
          {
            v13 = 0;
            v18 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v18 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v13 = 0;
LABEL_14:
        v19 = v13 & 7;
        if (!v18 && v19 != 4)
        {
          switch((v13 >> 3))
          {
            case 1u:
              v21 = 0;
              v22 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x1000u;
              while (1)
              {
                v24 = *v3;
                v25 = *(_QWORD *)(a2 + v24);
                if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
                  break;
                v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v25);
                *(_QWORD *)(a2 + v24) = v25 + 1;
                v23 |= (unint64_t)(v26 & 0x7F) << v21;
                if ((v26 & 0x80) == 0)
                  goto LABEL_178;
                v21 += 7;
                v17 = v22++ >= 9;
                if (v17)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_180;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_178:
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_180:
              v129 = v9[512];
              goto LABEL_249;
            case 2u:
              v27 = 0;
              v28 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x80u;
              while (2)
              {
                v29 = *v3;
                v30 = *(_QWORD *)(a2 + v29);
                if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v30);
                  *(_QWORD *)(a2 + v29) = v30 + 1;
                  v23 |= (unint64_t)(v31 & 0x7F) << v27;
                  if (v31 < 0)
                  {
                    v27 += 7;
                    v17 = v28++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_184;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_184:
              v129 = v10[513];
              goto LABEL_249;
            case 3u:
              v32 = 0;
              v33 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x800u;
              while (2)
              {
                v34 = *v3;
                v35 = *(_QWORD *)(a2 + v34);
                if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v35);
                  *(_QWORD *)(a2 + v34) = v35 + 1;
                  v23 |= (unint64_t)(v36 & 0x7F) << v32;
                  if (v36 < 0)
                  {
                    v32 += 7;
                    v17 = v33++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_188;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_188:
              v129 = 100;
              goto LABEL_249;
            case 4u:
              v37 = 0;
              v38 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x200u;
              while (2)
              {
                v39 = *v3;
                v40 = *(_QWORD *)(a2 + v39);
                if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v40);
                  *(_QWORD *)(a2 + v39) = v40 + 1;
                  v23 |= (unint64_t)(v41 & 0x7F) << v37;
                  if (v41 < 0)
                  {
                    v37 += 7;
                    v17 = v38++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_192;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_192:
              v129 = 92;
              goto LABEL_249;
            case 5u:
              v42 = 0;
              v43 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x100u;
              while (2)
              {
                v44 = *v3;
                v45 = *(_QWORD *)(a2 + v44);
                if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v45);
                  *(_QWORD *)(a2 + v44) = v45 + 1;
                  v23 |= (unint64_t)(v46 & 0x7F) << v42;
                  if (v46 < 0)
                  {
                    v42 += 7;
                    v17 = v43++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_196;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_196:
              v129 = 88;
              goto LABEL_249;
            case 6u:
              v47 = 0;
              v48 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x400u;
              while (2)
              {
                v49 = *v3;
                v50 = *(_QWORD *)(a2 + v49);
                if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v50);
                  *(_QWORD *)(a2 + v49) = v50 + 1;
                  v23 |= (unint64_t)(v51 & 0x7F) << v47;
                  if (v51 < 0)
                  {
                    v47 += 7;
                    v17 = v48++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_200;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_200:
              v129 = 96;
              goto LABEL_249;
            case 7u:
              v52 = 0;
              v53 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x20u;
              while (2)
              {
                v54 = *v3;
                v55 = *(_QWORD *)(a2 + v54);
                if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v55);
                  *(_QWORD *)(a2 + v54) = v55 + 1;
                  v23 |= (unint64_t)(v56 & 0x7F) << v52;
                  if (v56 < 0)
                  {
                    v52 += 7;
                    v17 = v53++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_204;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_204:
              v129 = 76;
              goto LABEL_249;
            case 8u:
              v57 = 0;
              v58 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x10000u;
              while (2)
              {
                v59 = *v3;
                v60 = *(_QWORD *)(a2 + v59);
                if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v60);
                  *(_QWORD *)(a2 + v59) = v60 + 1;
                  v23 |= (unint64_t)(v61 & 0x7F) << v57;
                  if (v61 < 0)
                  {
                    v57 += 7;
                    v17 = v58++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_208;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_208:
              v129 = 120;
              goto LABEL_249;
            case 9u:
              v62 = 0;
              v63 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x40u;
              while (2)
              {
                v64 = *v3;
                v65 = *(_QWORD *)(a2 + v64);
                if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v65);
                  *(_QWORD *)(a2 + v64) = v65 + 1;
                  v23 |= (unint64_t)(v66 & 0x7F) << v62;
                  if (v66 < 0)
                  {
                    v62 += 7;
                    v17 = v63++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_212;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_212:
              v129 = 80;
              goto LABEL_249;
            case 0xAu:
              v67 = 0;
              v68 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x10u;
              while (2)
              {
                v69 = *v3;
                v70 = *(_QWORD *)(a2 + v69);
                if (v70 == -1 || v70 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v70);
                  *(_QWORD *)(a2 + v69) = v70 + 1;
                  v23 |= (unint64_t)(v71 & 0x7F) << v67;
                  if (v71 < 0)
                  {
                    v67 += 7;
                    v17 = v68++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_216;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_216:
              v129 = 72;
              goto LABEL_249;
            case 0xBu:
              v72 = 0;
              v73 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 8u;
              while (2)
              {
                v74 = *v3;
                v75 = *(_QWORD *)(a2 + v74);
                if (v75 == -1 || v75 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v76 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v75);
                  *(_QWORD *)(a2 + v74) = v75 + 1;
                  v23 |= (unint64_t)(v76 & 0x7F) << v72;
                  if (v76 < 0)
                  {
                    v72 += 7;
                    v17 = v73++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_220;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_220:
              v129 = 68;
              goto LABEL_249;
            case 0xCu:
              if (v19 != 2)
              {
                v130 = 0;
                v131 = 0;
                v132 = 0;
                while (1)
                {
                  v133 = *v3;
                  v134 = *(_QWORD *)(a2 + v133);
                  if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_266;
                  v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v134);
                  *(_QWORD *)(a2 + v133) = v134 + 1;
                  v132 |= (unint64_t)(v135 & 0x7F) << v130;
                  if (v135 < 0)
                  {
                    v130 += 7;
                    v17 = v131++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_267;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v78 = 0;
                v79 = 0;
                v80 = 0;
                while (1)
                {
                  v81 = *v3;
                  v82 = *(_QWORD *)(a2 + v81);
                  if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v82);
                  *(_QWORD *)(a2 + v81) = v82 + 1;
                  v80 |= (unint64_t)(v83 & 0x7F) << v78;
                  if (v83 < 0)
                  {
                    v78 += 7;
                    v17 = v79++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_110;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_110:
                PBRepeatedUInt32Add();
              }
              goto LABEL_176;
            case 0xDu:
              if (v19 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v84 = 0;
                  v85 = 0;
                  v86 = 0;
                  while (1)
                  {
                    v87 = *v3;
                    v88 = *(_QWORD *)(a2 + v87);
                    if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v88);
                    *(_QWORD *)(a2 + v87) = v88 + 1;
                    v86 |= (unint64_t)(v89 & 0x7F) << v84;
                    if (v89 < 0)
                    {
                      v84 += 7;
                      v17 = v85++ >= 9;
                      if (!v17)
                        continue;
                    }
                    goto LABEL_123;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_123:
                  PBRepeatedUInt32Add();
                }
LABEL_176:
                PBReaderRecallMark();
              }
              else
              {
                v136 = 0;
                v137 = 0;
                v138 = 0;
                while (1)
                {
                  v139 = *v3;
                  v140 = *(_QWORD *)(a2 + v139);
                  if (v140 == -1 || v140 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v141 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v140);
                  *(_QWORD *)(a2 + v139) = v140 + 1;
                  v138 |= (unint64_t)(v141 & 0x7F) << v136;
                  if (v141 < 0)
                  {
                    v136 += 7;
                    v17 = v137++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_267;
                }
LABEL_266:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_267:
                PBRepeatedUInt32Add();
              }
LABEL_250:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 0xEu:
              v90 = 0;
              v91 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x4000u;
              while (2)
              {
                v92 = *v3;
                v93 = *(_QWORD *)(a2 + v92);
                if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v93);
                  *(_QWORD *)(a2 + v92) = v93 + 1;
                  v23 |= (unint64_t)(v94 & 0x7F) << v90;
                  if (v94 < 0)
                  {
                    v90 += 7;
                    v17 = v91++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_224;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_224:
              v129 = 112;
              goto LABEL_249;
            case 0xFu:
              v95 = 0;
              v96 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x2000u;
              while (2)
              {
                v97 = *v3;
                v98 = *(_QWORD *)(a2 + v97);
                if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v98);
                  *(_QWORD *)(a2 + v97) = v98 + 1;
                  v23 |= (unint64_t)(v99 & 0x7F) << v95;
                  if (v99 < 0)
                  {
                    v95 += 7;
                    v17 = v96++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_228;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_228:
              v129 = 108;
              goto LABEL_249;
            case 0x10u:
              v100 = 0;
              v101 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 2u;
              while (2)
              {
                v102 = *v3;
                v103 = *(_QWORD *)(a2 + v102);
                if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v103);
                  *(_QWORD *)(a2 + v102) = v103 + 1;
                  v23 |= (unint64_t)(v104 & 0x7F) << v100;
                  if (v104 < 0)
                  {
                    v100 += 7;
                    v17 = v101++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_232;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_232:
              v129 = 60;
              goto LABEL_249;
            case 0x11u:
              v105 = 0;
              v106 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 1u;
              while (2)
              {
                v107 = *v3;
                v108 = *(_QWORD *)(a2 + v107);
                if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v108);
                  *(_QWORD *)(a2 + v107) = v108 + 1;
                  v23 |= (unint64_t)(v109 & 0x7F) << v105;
                  if (v109 < 0)
                  {
                    v105 += 7;
                    v17 = v106++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_236;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_236:
              v129 = 56;
              goto LABEL_249;
            case 0x12u:
              v110 = 0;
              v111 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x20000u;
              while (2)
              {
                v112 = *v3;
                v113 = *(_QWORD *)(a2 + v112);
                if (v113 == -1 || v113 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v113);
                  *(_QWORD *)(a2 + v112) = v113 + 1;
                  v23 |= (unint64_t)(v114 & 0x7F) << v110;
                  if (v114 < 0)
                  {
                    v110 += 7;
                    v17 = v111++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_240;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_240:
              v129 = 136;
              goto LABEL_249;
            case 0x13u:
              v115 = 0;
              v116 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 4u;
              while (2)
              {
                v117 = *v3;
                v118 = *(_QWORD *)(a2 + v117);
                if (v118 == -1 || v118 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v119 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v118);
                  *(_QWORD *)(a2 + v117) = v118 + 1;
                  v23 |= (unint64_t)(v119 & 0x7F) << v115;
                  if (v119 < 0)
                  {
                    v115 += 7;
                    v17 = v116++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_244;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_244:
              v129 = 64;
              goto LABEL_249;
            case 0x14u:
              v120 = 0;
              v121 = 0;
              v23 = 0;
              *(_DWORD *)(a1 + v7[511]) |= 0x8000u;
              while (2)
              {
                v122 = *v3;
                v123 = *(_QWORD *)(a2 + v122);
                if (v123 == -1 || v123 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v124 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v123);
                  *(_QWORD *)(a2 + v122) = v123 + 1;
                  v23 |= (unint64_t)(v124 & 0x7F) << v120;
                  if (v124 < 0)
                  {
                    v120 += 7;
                    v17 = v121++ >= 9;
                    if (v17)
                    {
                      LODWORD(v23) = 0;
                      goto LABEL_248;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v23) = 0;
LABEL_248:
              v129 = 116;
LABEL_249:
              *(_DWORD *)(a1 + v129) = v23;
              goto LABEL_250;
            case 0x15u:
              v125 = v10;
              v126 = v7;
              v127 = v9;
              v128 = objc_alloc_init(AWDOMICntrs);

              *(_QWORD *)(a1 + 128) = v128;
              if (!PBReaderPlaceMark() || !AWDOMICntrsReadFrom((uint64_t)v128, a2))
                return 0;
              PBReaderRecallMark();
              v9 = v127;
              v7 = v126;
              v10 = v125;
              goto LABEL_250;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_250;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDLinkQualityMeasurementsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  int *v24;
  BOOL v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  char v171;
  unsigned int v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  char v176;
  unsigned int v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  char v181;
  unsigned int v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  unsigned int v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  char v191;
  unsigned int v192;
  uint64_t v193;
  unint64_t v194;
  char v195;
  char v196;
  unsigned int v197;
  uint64_t v198;
  unint64_t v199;
  char v200;
  char v201;
  unsigned int v202;
  uint64_t v203;
  unint64_t v204;
  char v205;
  char v206;
  unsigned int v207;
  uint64_t v208;
  unint64_t v209;
  char v210;
  char v211;
  unsigned int v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  char v216;
  unsigned int v217;
  uint64_t v218;
  unint64_t v219;
  char v220;
  char v221;
  unsigned int v222;
  uint64_t v223;
  unint64_t v224;
  char v225;
  char v226;
  unsigned int v227;
  uint64_t v228;
  unint64_t v229;
  char v230;
  char v231;
  unsigned int v232;
  uint64_t v233;
  unint64_t v234;
  char v235;
  char v236;
  unsigned int v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  char v241;
  unsigned int v242;
  uint64_t v243;
  unint64_t v244;
  char v245;
  char v246;
  unsigned int v247;
  uint64_t v248;
  unint64_t v249;
  char v250;
  char v251;
  unsigned int v252;
  uint64_t v253;
  unint64_t v254;
  char v255;
  char v256;
  unsigned int v257;
  uint64_t v258;
  unint64_t v259;
  char v260;
  char v261;
  unsigned int v262;
  uint64_t v263;
  unint64_t v264;
  char v265;
  char v266;
  unsigned int v267;
  uint64_t v268;
  unint64_t v269;
  char v270;
  char v271;
  unsigned int v272;
  uint64_t v273;
  unint64_t v274;
  char v275;
  char v276;
  unsigned int v277;
  uint64_t v278;
  unint64_t v279;
  char v280;
  char v281;
  unsigned int v282;
  uint64_t v283;
  unint64_t v284;
  char v285;
  char v286;
  unsigned int v287;
  uint64_t v288;
  unint64_t v289;
  char v290;
  char v291;
  unsigned int v292;
  uint64_t v293;
  unint64_t v294;
  char v295;
  char v296;
  unsigned int v297;
  uint64_t v298;
  unint64_t v299;
  char v300;
  char v301;
  unsigned int v302;
  uint64_t v303;
  unint64_t v304;
  char v305;
  char v306;
  unsigned int v307;
  uint64_t v308;
  unint64_t v309;
  char v310;
  char v311;
  unsigned int v312;
  uint64_t v313;
  unint64_t v314;
  char v315;
  char v316;
  unsigned int v317;
  uint64_t v318;
  unint64_t v319;
  char v320;
  char v321;
  unsigned int v322;
  uint64_t v323;
  unint64_t v324;
  char v325;
  char v326;
  unsigned int v327;
  uint64_t v328;
  unint64_t v329;
  char v330;
  char v331;
  unsigned int v332;
  uint64_t v333;
  unint64_t v334;
  char v335;
  char v336;
  unsigned int v337;
  uint64_t v338;
  unint64_t v339;
  char v340;
  char v341;
  unsigned int v342;
  uint64_t v343;
  unint64_t v344;
  char v345;
  char v346;
  unsigned int v347;
  uint64_t v348;
  unint64_t v349;
  char v350;
  char v351;
  unsigned int v352;
  uint64_t v353;
  unint64_t v354;
  char v355;
  char v356;
  unsigned int v357;
  uint64_t v358;
  unint64_t v359;
  char v360;
  char v361;
  unsigned int v362;
  uint64_t v363;
  unint64_t v364;
  char v365;
  char v366;
  unsigned int v367;
  uint64_t v368;
  unint64_t v369;
  char v370;
  char v371;
  unsigned int v372;
  uint64_t v373;
  unint64_t v374;
  char v375;
  char v376;
  unsigned int v377;
  uint64_t v378;
  unint64_t v379;
  char v380;
  char v381;
  unsigned int v382;
  uint64_t v383;
  unint64_t v384;
  char v385;
  char v386;
  unsigned int v387;
  uint64_t v388;
  unint64_t v389;
  char v390;
  char v391;
  unsigned int v392;
  uint64_t v393;
  unint64_t v394;
  char v395;
  char v396;
  unsigned int v397;
  uint64_t v398;
  unint64_t v399;
  char v400;
  char v401;
  unsigned int v402;
  uint64_t v403;
  unint64_t v404;
  char v405;
  char v406;
  unsigned int v407;
  uint64_t v408;
  unint64_t v409;
  char v410;
  char v411;
  unsigned int v412;
  uint64_t v413;
  unint64_t v414;
  char v415;
  char v416;
  unsigned int v417;
  uint64_t v418;
  unint64_t v419;
  char v420;
  char v421;
  unsigned int v422;
  uint64_t v423;
  unint64_t v424;
  char v425;
  char v426;
  unsigned int v427;
  uint64_t v428;
  unint64_t v429;
  char v430;
  char v431;
  unsigned int v432;
  uint64_t v433;
  unint64_t v434;
  char v435;
  char v436;
  unsigned int v437;
  uint64_t v438;
  unint64_t v439;
  char v440;
  char v441;
  unsigned int v442;
  uint64_t v443;
  unint64_t v444;
  char v445;
  char v446;
  unsigned int v447;
  uint64_t v448;
  unint64_t v449;
  char v450;
  char v451;
  unsigned int v452;
  uint64_t v453;
  unint64_t v454;
  char v455;
  char v456;
  unsigned int v457;
  uint64_t v458;
  unint64_t v459;
  char v460;
  char v461;
  unsigned int v462;
  uint64_t v463;
  unint64_t v464;
  char v465;
  char v466;
  unsigned int v467;
  uint64_t v468;
  unint64_t v469;
  char v470;
  char v471;
  unsigned int v472;
  uint64_t v473;
  unint64_t v474;
  char v475;
  char v476;
  unsigned int v477;
  uint64_t v478;
  unint64_t v479;
  char v480;
  char v481;
  unsigned int v482;
  uint64_t v483;
  unint64_t v484;
  char v485;
  char v486;
  unsigned int v487;
  uint64_t v488;
  unint64_t v489;
  char v490;
  char v491;
  unsigned int v492;
  uint64_t v493;
  unint64_t v494;
  char v495;
  char v496;
  unsigned int v497;
  uint64_t v498;
  unint64_t v499;
  char v500;
  char v501;
  unsigned int v502;
  uint64_t v503;
  unint64_t v504;
  char v505;
  char v506;
  unsigned int v507;
  uint64_t v508;
  unint64_t v509;
  char v510;
  char v511;
  unsigned int v512;
  uint64_t v513;
  unint64_t v514;
  char v515;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x8000uLL;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__timestamp;
              goto LABEL_813;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v23 = 0;
            v17 += 7;
            v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__timestamp;
            v25 = v18++ > 8;
            if (v25)
              goto LABEL_817;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__timestamp;
          goto LABEL_814;
        case 2u:
          v26 = 0;
          v27 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x4000000uLL;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowExpectedTrue;
              goto LABEL_813;
            }
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v19 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v23 = 0;
              v26 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowExpectedTrue;
              v25 = v27++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowExpectedTrue;
          goto LABEL_814;
        case 3u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x2000000uLL;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowExpectedFalse;
              goto LABEL_813;
            }
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v19 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v23 = 0;
              v31 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowExpectedFalse;
              v25 = v32++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowExpectedFalse;
          goto LABEL_814;
        case 4u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x10000000uLL;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowInputTrue;
              goto LABEL_813;
            }
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v19 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v23 = 0;
              v36 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowInputTrue;
              v25 = v37++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowInputTrue;
          goto LABEL_814;
        case 5u:
          v41 = 0;
          v42 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x8000000uLL;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowInputFalse;
              goto LABEL_813;
            }
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v19 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v23 = 0;
              v41 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowInputFalse;
              v25 = v42++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txOutputBelowInputFalse;
          goto LABEL_814;
        case 6u:
          v46 = 0;
          v47 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x1000000uLL;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txLowFrameCountTrue;
              goto LABEL_813;
            }
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v19 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v23 = 0;
              v46 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txLowFrameCountTrue;
              v25 = v47++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txLowFrameCountTrue;
          goto LABEL_814;
        case 7u:
          v51 = 0;
          v52 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x800000uLL;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txLowFrameCountFalse;
              goto LABEL_813;
            }
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v19 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v23 = 0;
              v51 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txLowFrameCountFalse;
              v25 = v52++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txLowFrameCountFalse;
          goto LABEL_814;
        case 8u:
          v56 = 0;
          v57 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 8uLL;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxLowFrameCountTrue;
              goto LABEL_813;
            }
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v19 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v23 = 0;
              v56 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxLowFrameCountTrue;
              v25 = v57++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxLowFrameCountTrue;
          goto LABEL_814;
        case 9u:
          v61 = 0;
          v62 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 4uLL;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxLowFrameCountFalse;
              goto LABEL_813;
            }
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v19 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v23 = 0;
              v61 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxLowFrameCountFalse;
              v25 = v62++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxLowFrameCountFalse;
          goto LABEL_814;
        case 0xAu:
          v66 = 0;
          v67 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x20000000uLL;
          while (2)
          {
            v68 = *v3;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxLatencyTrue;
              goto LABEL_813;
            }
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v19 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v23 = 0;
              v66 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxLatencyTrue;
              v25 = v67++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxLatencyTrue;
          goto LABEL_814;
        case 0xBu:
          v71 = 0;
          v72 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x10000000uLL;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxLatencyFalse;
              goto LABEL_813;
            }
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v19 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v23 = 0;
              v71 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxLatencyFalse;
              v25 = v72++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxLatencyFalse;
          goto LABEL_814;
        case 0xCu:
          v76 = 0;
          v77 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x2000000000000uLL;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxPhyRateTrue;
              goto LABEL_813;
            }
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v19 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v23 = 0;
              v76 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxPhyRateTrue;
              v25 = v77++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxPhyRateTrue;
          goto LABEL_814;
        case 0xDu:
          v81 = 0;
          v82 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x1000000000000uLL;
          while (2)
          {
            v83 = *v3;
            v84 = *(_QWORD *)(a2 + v83);
            if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxPhyRateFalse;
              goto LABEL_813;
            }
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v84 + 1;
            v19 |= (unint64_t)(v85 & 0x7F) << v81;
            if (v85 < 0)
            {
              v23 = 0;
              v81 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxPhyRateFalse;
              v25 = v82++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxPhyRateFalse;
          goto LABEL_814;
        case 0xEu:
          v86 = 0;
          v87 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x80000000uLL;
          while (2)
          {
            v88 = *v3;
            v89 = *(_QWORD *)(a2 + v88);
            if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxPerTrue;
              goto LABEL_813;
            }
            v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
            *(_QWORD *)(a2 + v88) = v89 + 1;
            v19 |= (unint64_t)(v90 & 0x7F) << v86;
            if (v90 < 0)
            {
              v23 = 0;
              v86 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxPerTrue;
              v25 = v87++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxPerTrue;
          goto LABEL_814;
        case 0xFu:
          v91 = 0;
          v92 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x40000000uLL;
          while (2)
          {
            v93 = *v3;
            v94 = *(_QWORD *)(a2 + v93);
            if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxPerFalse;
              goto LABEL_813;
            }
            v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
            *(_QWORD *)(a2 + v93) = v94 + 1;
            v19 |= (unint64_t)(v95 & 0x7F) << v91;
            if (v95 < 0)
            {
              v23 = 0;
              v91 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxPerFalse;
              v25 = v92++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxPerFalse;
          goto LABEL_814;
        case 0x10u:
          v96 = 0;
          v97 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x200000000uLL;
          while (2)
          {
            v98 = *v3;
            v99 = *(_QWORD *)(a2 + v98);
            if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxRetriesTrue;
              goto LABEL_813;
            }
            v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
            *(_QWORD *)(a2 + v98) = v99 + 1;
            v19 |= (unint64_t)(v100 & 0x7F) << v96;
            if (v100 < 0)
            {
              v23 = 0;
              v96 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxRetriesTrue;
              v25 = v97++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxRetriesTrue;
          goto LABEL_814;
        case 0x11u:
          v101 = 0;
          v102 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x100000000uLL;
          while (2)
          {
            v103 = *v3;
            v104 = *(_QWORD *)(a2 + v103);
            if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxRetriesFalse;
              goto LABEL_813;
            }
            v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
            *(_QWORD *)(a2 + v103) = v104 + 1;
            v19 |= (unint64_t)(v105 & 0x7F) << v101;
            if (v105 < 0)
            {
              v23 = 0;
              v101 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxRetriesFalse;
              v25 = v102++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highTxRetriesFalse;
          goto LABEL_814;
        case 0x12u:
          v106 = 0;
          v107 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x80000000uLL;
          while (2)
          {
            v108 = *v3;
            v109 = *(_QWORD *)(a2 + v108);
            if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txQueueFullTrue;
              goto LABEL_813;
            }
            v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
            *(_QWORD *)(a2 + v108) = v109 + 1;
            v19 |= (unint64_t)(v110 & 0x7F) << v106;
            if (v110 < 0)
            {
              v23 = 0;
              v106 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txQueueFullTrue;
              v25 = v107++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txQueueFullTrue;
          goto LABEL_814;
        case 0x13u:
          v111 = 0;
          v112 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x40000000uLL;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txQueueFullFalse;
              goto LABEL_813;
            }
            v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v114 + 1;
            v19 |= (unint64_t)(v115 & 0x7F) << v111;
            if (v115 < 0)
            {
              v23 = 0;
              v111 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txQueueFullFalse;
              v25 = v112++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txQueueFullFalse;
          goto LABEL_814;
        case 0x14u:
          v116 = 0;
          v117 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x800000000000uLL;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxAMPDUDensityTrue;
              goto LABEL_813;
            }
            v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v119 + 1;
            v19 |= (unint64_t)(v120 & 0x7F) << v116;
            if (v120 < 0)
            {
              v23 = 0;
              v116 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxAMPDUDensityTrue;
              v25 = v117++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxAMPDUDensityTrue;
          goto LABEL_814;
        case 0x15u:
          v121 = 0;
          v122 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x400000000000uLL;
          while (2)
          {
            v123 = *v3;
            v124 = *(_QWORD *)(a2 + v123);
            if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxAMPDUDensityFalse;
              goto LABEL_813;
            }
            v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
            *(_QWORD *)(a2 + v123) = v124 + 1;
            v19 |= (unint64_t)(v125 & 0x7F) << v121;
            if (v125 < 0)
            {
              v23 = 0;
              v121 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxAMPDUDensityFalse;
              v25 = v122++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowTxAMPDUDensityFalse;
          goto LABEL_814;
        case 0x16u:
          v126 = 0;
          v127 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x8000000uLL;
          while (2)
          {
            v128 = *v3;
            v129 = *(_QWORD *)(a2 + v128);
            if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxRetriesTrue;
              goto LABEL_813;
            }
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
            *(_QWORD *)(a2 + v128) = v129 + 1;
            v19 |= (unint64_t)(v130 & 0x7F) << v126;
            if (v130 < 0)
            {
              v23 = 0;
              v126 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxRetriesTrue;
              v25 = v127++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxRetriesTrue;
          goto LABEL_814;
        case 0x17u:
          v131 = 0;
          v132 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x4000000uLL;
          while (2)
          {
            v133 = *v3;
            v134 = *(_QWORD *)(a2 + v133);
            if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxRetriesFalse;
              goto LABEL_813;
            }
            v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v134 + 1;
            v19 |= (unint64_t)(v135 & 0x7F) << v131;
            if (v135 < 0)
            {
              v23 = 0;
              v131 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxRetriesFalse;
              v25 = v132++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxRetriesFalse;
          goto LABEL_814;
        case 0x18u:
          v136 = 0;
          v137 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x800000uLL;
          while (2)
          {
            v138 = *v3;
            v139 = *(_QWORD *)(a2 + v138);
            if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxPhyPERTrue;
              goto LABEL_813;
            }
            v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
            *(_QWORD *)(a2 + v138) = v139 + 1;
            v19 |= (unint64_t)(v140 & 0x7F) << v136;
            if (v140 < 0)
            {
              v23 = 0;
              v136 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxPhyPERTrue;
              v25 = v137++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxPhyPERTrue;
          goto LABEL_814;
        case 0x19u:
          v141 = 0;
          v142 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x400000uLL;
          while (2)
          {
            v143 = *v3;
            v144 = *(_QWORD *)(a2 + v143);
            if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxPhyPERFalse;
              goto LABEL_813;
            }
            v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v144 + 1;
            v19 |= (unint64_t)(v145 & 0x7F) << v141;
            if (v145 < 0)
            {
              v23 = 0;
              v141 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxPhyPERFalse;
              v25 = v142++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxPhyPERFalse;
          goto LABEL_814;
        case 0x1Au:
          v146 = 0;
          v147 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x80000uLL;
          while (2)
          {
            v148 = *v3;
            v149 = *(_QWORD *)(a2 + v148);
            if (v149 == -1 || v149 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxFCSErrsTrue;
              goto LABEL_813;
            }
            v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
            *(_QWORD *)(a2 + v148) = v149 + 1;
            v19 |= (unint64_t)(v150 & 0x7F) << v146;
            if (v150 < 0)
            {
              v23 = 0;
              v146 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxFCSErrsTrue;
              v25 = v147++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxFCSErrsTrue;
          goto LABEL_814;
        case 0x1Bu:
          v151 = 0;
          v152 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x40000uLL;
          while (2)
          {
            v153 = *v3;
            v154 = *(_QWORD *)(a2 + v153);
            if (v154 == -1 || v154 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxFCSErrsFalse;
              goto LABEL_813;
            }
            v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
            *(_QWORD *)(a2 + v153) = v154 + 1;
            v19 |= (unint64_t)(v155 & 0x7F) << v151;
            if (v155 < 0)
            {
              v23 = 0;
              v151 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxFCSErrsFalse;
              v25 = v152++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxFCSErrsFalse;
          goto LABEL_814;
        case 0x1Cu:
          v156 = 0;
          v157 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x200000uLL;
          while (2)
          {
            v158 = *v3;
            v159 = *(_QWORD *)(a2 + v158);
            if (v159 == -1 || v159 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxOverflowsTrue;
              goto LABEL_813;
            }
            v160 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v159);
            *(_QWORD *)(a2 + v158) = v159 + 1;
            v19 |= (unint64_t)(v160 & 0x7F) << v156;
            if (v160 < 0)
            {
              v23 = 0;
              v156 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxOverflowsTrue;
              v25 = v157++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxOverflowsTrue;
          goto LABEL_814;
        case 0x1Du:
          v161 = 0;
          v162 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x100000uLL;
          while (2)
          {
            v163 = *v3;
            v164 = *(_QWORD *)(a2 + v163);
            if (v164 == -1 || v164 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxOverflowsFalse;
              goto LABEL_813;
            }
            v165 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v164);
            *(_QWORD *)(a2 + v163) = v164 + 1;
            v19 |= (unint64_t)(v165 & 0x7F) << v161;
            if (v165 < 0)
            {
              v23 = 0;
              v161 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxOverflowsFalse;
              v25 = v162++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxOverflowsFalse;
          goto LABEL_814;
        case 0x1Eu:
          v166 = 0;
          v167 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x20000uLL;
          while (2)
          {
            v168 = *v3;
            v169 = *(_QWORD *)(a2 + v168);
            if (v169 == -1 || v169 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDupsTrue;
              goto LABEL_813;
            }
            v170 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v169);
            *(_QWORD *)(a2 + v168) = v169 + 1;
            v19 |= (unint64_t)(v170 & 0x7F) << v166;
            if (v170 < 0)
            {
              v23 = 0;
              v166 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDupsTrue;
              v25 = v167++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDupsTrue;
          goto LABEL_814;
        case 0x1Fu:
          v171 = 0;
          v172 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x10000uLL;
          while (2)
          {
            v173 = *v3;
            v174 = *(_QWORD *)(a2 + v173);
            if (v174 == -1 || v174 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDupsFalse;
              goto LABEL_813;
            }
            v175 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v174);
            *(_QWORD *)(a2 + v173) = v174 + 1;
            v19 |= (unint64_t)(v175 & 0x7F) << v171;
            if (v175 < 0)
            {
              v23 = 0;
              v171 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDupsFalse;
              v25 = v172++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDupsFalse;
          goto LABEL_814;
        case 0x20u:
          v176 = 0;
          v177 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x2000000uLL;
          while (2)
          {
            v178 = *v3;
            v179 = *(_QWORD *)(a2 + v178);
            if (v179 == -1 || v179 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxReplaysTrue;
              goto LABEL_813;
            }
            v180 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v179);
            *(_QWORD *)(a2 + v178) = v179 + 1;
            v19 |= (unint64_t)(v180 & 0x7F) << v176;
            if (v180 < 0)
            {
              v23 = 0;
              v176 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxReplaysTrue;
              v25 = v177++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxReplaysTrue;
          goto LABEL_814;
        case 0x21u:
          v181 = 0;
          v182 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x1000000uLL;
          while (2)
          {
            v183 = *v3;
            v184 = *(_QWORD *)(a2 + v183);
            if (v184 == -1 || v184 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxReplaysFalse;
              goto LABEL_813;
            }
            v185 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v184);
            *(_QWORD *)(a2 + v183) = v184 + 1;
            v19 |= (unint64_t)(v185 & 0x7F) << v181;
            if (v185 < 0)
            {
              v23 = 0;
              v181 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxReplaysFalse;
              v25 = v182++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxReplaysFalse;
          goto LABEL_814;
        case 0x22u:
          v186 = 0;
          v187 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x8000uLL;
          while (2)
          {
            v188 = *v3;
            v189 = *(_QWORD *)(a2 + v188);
            if (v189 == -1 || v189 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDecryptErrsTrue;
              goto LABEL_813;
            }
            v190 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v189);
            *(_QWORD *)(a2 + v188) = v189 + 1;
            v19 |= (unint64_t)(v190 & 0x7F) << v186;
            if (v190 < 0)
            {
              v23 = 0;
              v186 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDecryptErrsTrue;
              v25 = v187++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDecryptErrsTrue;
          goto LABEL_814;
        case 0x23u:
          v191 = 0;
          v192 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x4000uLL;
          while (2)
          {
            v193 = *v3;
            v194 = *(_QWORD *)(a2 + v193);
            if (v194 == -1 || v194 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDecryptErrsFalse;
              goto LABEL_813;
            }
            v195 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v194);
            *(_QWORD *)(a2 + v193) = v194 + 1;
            v19 |= (unint64_t)(v195 & 0x7F) << v191;
            if (v195 < 0)
            {
              v23 = 0;
              v191 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDecryptErrsFalse;
              v25 = v192++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDecryptErrsFalse;
          goto LABEL_814;
        case 0x24u:
          v196 = 0;
          v197 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x2000uLL;
          while (2)
          {
            v198 = *v3;
            v199 = *(_QWORD *)(a2 + v198);
            if (v199 == -1 || v199 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDataPERTrue;
              goto LABEL_813;
            }
            v200 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v199);
            *(_QWORD *)(a2 + v198) = v199 + 1;
            v19 |= (unint64_t)(v200 & 0x7F) << v196;
            if (v200 < 0)
            {
              v23 = 0;
              v196 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDataPERTrue;
              v25 = v197++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDataPERTrue;
          goto LABEL_814;
        case 0x25u:
          v201 = 0;
          v202 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x1000uLL;
          while (2)
          {
            v203 = *v3;
            v204 = *(_QWORD *)(a2 + v203);
            if (v204 == -1 || v204 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDataPERFalse;
              goto LABEL_813;
            }
            v205 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v204);
            *(_QWORD *)(a2 + v203) = v204 + 1;
            v19 |= (unint64_t)(v205 & 0x7F) << v201;
            if (v205 < 0)
            {
              v23 = 0;
              v201 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDataPERFalse;
              v25 = v202++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__highRxDataPERFalse;
          goto LABEL_814;
        case 0x26u:
          v206 = 0;
          v207 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x20000000000uLL;
          while (2)
          {
            v208 = *v3;
            v209 = *(_QWORD *)(a2 + v208);
            if (v209 == -1 || v209 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANDurTrue;
              goto LABEL_813;
            }
            v210 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v209);
            *(_QWORD *)(a2 + v208) = v209 + 1;
            v19 |= (unint64_t)(v210 & 0x7F) << v206;
            if (v210 < 0)
            {
              v23 = 0;
              v206 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANDurTrue;
              v25 = v207++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANDurTrue;
          goto LABEL_814;
        case 0x27u:
          v211 = 0;
          v212 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x10000000000uLL;
          while (2)
          {
            v213 = *v3;
            v214 = *(_QWORD *)(a2 + v213);
            if (v214 == -1 || v214 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANDurFalse;
              goto LABEL_813;
            }
            v215 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v214);
            *(_QWORD *)(a2 + v213) = v214 + 1;
            v19 |= (unint64_t)(v215 & 0x7F) << v211;
            if (v215 < 0)
            {
              v23 = 0;
              v211 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANDurFalse;
              v25 = v212++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANDurFalse;
          goto LABEL_814;
        case 0x28u:
          v216 = 0;
          v217 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x200000000000uLL;
          while (2)
          {
            v218 = *v3;
            v219 = *(_QWORD *)(a2 + v218);
            if (v219 == -1 || v219 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANTxDurTrue;
              goto LABEL_813;
            }
            v220 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v219);
            *(_QWORD *)(a2 + v218) = v219 + 1;
            v19 |= (unint64_t)(v220 & 0x7F) << v216;
            if (v220 < 0)
            {
              v23 = 0;
              v216 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANTxDurTrue;
              v25 = v217++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANTxDurTrue;
          goto LABEL_814;
        case 0x29u:
          v221 = 0;
          v222 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x100000000000uLL;
          while (2)
          {
            v223 = *v3;
            v224 = *(_QWORD *)(a2 + v223);
            if (v224 == -1 || v224 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANTxDurFalse;
              goto LABEL_813;
            }
            v225 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v224);
            *(_QWORD *)(a2 + v223) = v224 + 1;
            v19 |= (unint64_t)(v225 & 0x7F) << v221;
            if (v225 < 0)
            {
              v23 = 0;
              v221 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANTxDurFalse;
              v25 = v222++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANTxDurFalse;
          goto LABEL_814;
        case 0x2Au:
          v226 = 0;
          v227 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x80000000000uLL;
          while (2)
          {
            v228 = *v3;
            v229 = *(_QWORD *)(a2 + v228);
            if (v229 == -1 || v229 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANRxDurTrue;
              goto LABEL_813;
            }
            v230 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v229);
            *(_QWORD *)(a2 + v228) = v229 + 1;
            v19 |= (unint64_t)(v230 & 0x7F) << v226;
            if (v230 < 0)
            {
              v23 = 0;
              v226 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANRxDurTrue;
              v25 = v227++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANRxDurTrue;
          goto LABEL_814;
        case 0x2Bu:
          v231 = 0;
          v232 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x40000000000uLL;
          while (2)
          {
            v233 = *v3;
            v234 = *(_QWORD *)(a2 + v233);
            if (v234 == -1 || v234 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANRxDurFalse;
              goto LABEL_813;
            }
            v235 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v234);
            *(_QWORD *)(a2 + v233) = v234 + 1;
            v19 |= (unint64_t)(v235 & 0x7F) << v231;
            if (v235 < 0)
            {
              v23 = 0;
              v231 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANRxDurFalse;
              v25 = v232++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lowAvailWLANRxDurFalse;
          goto LABEL_814;
        case 0x2Cu:
          v236 = 0;
          v237 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x100uLL;
          while (2)
          {
            v238 = *v3;
            v239 = *(_QWORD *)(a2 + v238);
            if (v239 == -1 || v239 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__cCA;
              goto LABEL_813;
            }
            v240 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v239);
            *(_QWORD *)(a2 + v238) = v239 + 1;
            v19 |= (unint64_t)(v240 & 0x7F) << v236;
            if (v240 < 0)
            {
              v23 = 0;
              v236 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__cCA;
              v25 = v237++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__cCA;
          goto LABEL_814;
        case 0x2Du:
          v241 = 0;
          v242 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x400000000000000uLL;
          while (2)
          {
            v243 = *v3;
            v244 = *(_QWORD *)(a2 + v243);
            if (v244 == -1 || v244 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rSSI;
              goto LABEL_813;
            }
            v245 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v244);
            *(_QWORD *)(a2 + v243) = v244 + 1;
            v19 |= (unint64_t)(v245 & 0x7F) << v241;
            if (v245 < 0)
            {
              v23 = 0;
              v241 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rSSI;
              v25 = v242++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rSSI;
          goto LABEL_814;
        case 0x2Eu:
          v246 = 0;
          v247 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x20000000uLL;
          while (2)
          {
            v248 = *v3;
            v249 = *(_QWORD *)(a2 + v248);
            if (v249 == -1 || v249 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txPhyRate;
              goto LABEL_813;
            }
            v250 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v249);
            *(_QWORD *)(a2 + v248) = v249 + 1;
            v19 |= (unint64_t)(v250 & 0x7F) << v246;
            if (v250 < 0)
            {
              v23 = 0;
              v246 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txPhyRate;
              v25 = v247++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txPhyRate;
          goto LABEL_814;
        case 0x2Fu:
          v251 = 0;
          v252 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x40uLL;
          while (2)
          {
            v253 = *v3;
            v254 = *(_QWORD *)(a2 + v253);
            if (v254 == -1 || v254 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxPhyRate;
              goto LABEL_813;
            }
            v255 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v254);
            *(_QWORD *)(a2 + v253) = v254 + 1;
            v19 |= (unint64_t)(v255 & 0x7F) << v251;
            if (v255 < 0)
            {
              v23 = 0;
              v251 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxPhyRate;
              v25 = v252++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxPhyRate;
          goto LABEL_814;
        case 0x30u:
          v256 = 0;
          v257 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x10000uLL;
          while (2)
          {
            v258 = *v3;
            v259 = *(_QWORD *)(a2 + v258);
            if (v259 == -1 || v259 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txAMPDUDensity;
              goto LABEL_813;
            }
            v260 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v259);
            *(_QWORD *)(a2 + v258) = v259 + 1;
            v19 |= (unint64_t)(v260 & 0x7F) << v256;
            if (v260 < 0)
            {
              v23 = 0;
              v256 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txAMPDUDensity;
              v25 = v257++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txAMPDUDensity;
          goto LABEL_814;
        case 0x31u:
          v261 = 0;
          v262 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x8000000000000uLL;
          while (2)
          {
            v263 = *v3;
            v264 = *(_QWORD *)(a2 + v263);
            if (v264 == -1 || v264 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__measurementDurMS;
              goto LABEL_813;
            }
            v265 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v264);
            *(_QWORD *)(a2 + v263) = v264 + 1;
            v19 |= (unint64_t)(v265 & 0x7F) << v261;
            if (v265 < 0)
            {
              v23 = 0;
              v261 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__measurementDurMS;
              v25 = v262++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__measurementDurMS;
          goto LABEL_814;
        case 0x32u:
          v266 = 0;
          v267 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x200uLL;
          while (2)
          {
            v268 = *v3;
            v269 = *(_QWORD *)(a2 + v268);
            if (v269 == -1 || v269 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__concurrentIntDurMS;
              goto LABEL_813;
            }
            v270 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v269);
            *(_QWORD *)(a2 + v268) = v269 + 1;
            v19 |= (unint64_t)(v270 & 0x7F) << v266;
            if (v270 < 0)
            {
              v23 = 0;
              v266 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__concurrentIntDurMS;
              v25 = v267++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__concurrentIntDurMS;
          goto LABEL_814;
        case 0x33u:
          v271 = 0;
          v272 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x1000uLL;
          while (2)
          {
            v273 = *v3;
            v274 = *(_QWORD *)(a2 + v273);
            if (v274 == -1 || v274 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__tVPMActiveDurationMS;
              goto LABEL_813;
            }
            v275 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v274);
            *(_QWORD *)(a2 + v273) = v274 + 1;
            v19 |= (unint64_t)(v275 & 0x7F) << v271;
            if (v275 < 0)
            {
              v23 = 0;
              v271 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__tVPMActiveDurationMS;
              v25 = v272++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__tVPMActiveDurationMS;
          goto LABEL_814;
        case 0x34u:
          v276 = 0;
          v277 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x80000000000000uLL;
          while (2)
          {
            v278 = *v3;
            v279 = *(_QWORD *)(a2 + v278);
            if (v279 == -1 || v279 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__phyTxActivityDurMS;
              goto LABEL_813;
            }
            v280 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v279);
            *(_QWORD *)(a2 + v278) = v279 + 1;
            v19 |= (unint64_t)(v280 & 0x7F) << v276;
            if (v280 < 0)
            {
              v23 = 0;
              v276 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__phyTxActivityDurMS;
              v25 = v277++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__phyTxActivityDurMS;
          goto LABEL_814;
        case 0x35u:
          v281 = 0;
          v282 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x40000000000000uLL;
          while (2)
          {
            v283 = *v3;
            v284 = *(_QWORD *)(a2 + v283);
            if (v284 == -1 || v284 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__phyRxActivityDurMS;
              goto LABEL_813;
            }
            v285 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v284);
            *(_QWORD *)(a2 + v283) = v284 + 1;
            v19 |= (unint64_t)(v285 & 0x7F) << v281;
            if (v285 < 0)
            {
              v23 = 0;
              v281 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__phyRxActivityDurMS;
              v25 = v282++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__phyRxActivityDurMS;
          goto LABEL_814;
        case 0x36u:
          v286 = 0;
          v287 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x200000000uLL;
          while (2)
          {
            v288 = *v3;
            v289 = *(_QWORD *)(a2 + v288);
            if (v289 == -1 || v289 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txSubBytes;
              goto LABEL_813;
            }
            v290 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v289);
            *(_QWORD *)(a2 + v288) = v289 + 1;
            v19 |= (unint64_t)(v290 & 0x7F) << v286;
            if (v290 < 0)
            {
              v23 = 0;
              v286 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txSubBytes;
              v25 = v287++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txSubBytes;
          goto LABEL_814;
        case 0x37u:
          v291 = 0;
          v292 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x20000uLL;
          while (2)
          {
            v293 = *v3;
            v294 = *(_QWORD *)(a2 + v293);
            if (v294 == -1 || v294 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txCompBytes;
              goto LABEL_813;
            }
            v295 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v294);
            *(_QWORD *)(a2 + v293) = v294 + 1;
            v19 |= (unint64_t)(v295 & 0x7F) << v291;
            if (v295 < 0)
            {
              v23 = 0;
              v291 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txCompBytes;
              v25 = v292++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txCompBytes;
          goto LABEL_814;
        case 0x38u:
          v296 = 0;
          v297 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x80000uLL;
          while (2)
          {
            v298 = *v3;
            v299 = *(_QWORD *)(a2 + v298);
            if (v299 == -1 || v299 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txDelayBytes;
              goto LABEL_813;
            }
            v300 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v299);
            *(_QWORD *)(a2 + v298) = v299 + 1;
            v19 |= (unint64_t)(v300 & 0x7F) << v296;
            if (v300 < 0)
            {
              v23 = 0;
              v296 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txDelayBytes;
              v25 = v297++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txDelayBytes;
          goto LABEL_814;
        case 0x39u:
          v301 = 0;
          v302 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x10000000000000uLL;
          while (2)
          {
            v303 = *v3;
            v304 = *(_QWORD *)(a2 + v303);
            if (v304 == -1 || v304 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__offChanDurMS;
              goto LABEL_813;
            }
            v305 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v304);
            *(_QWORD *)(a2 + v303) = v304 + 1;
            v19 |= (unint64_t)(v305 & 0x7F) << v301;
            if (v305 < 0)
            {
              v23 = 0;
              v301 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__offChanDurMS;
              v25 = v302++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__offChanDurMS;
          goto LABEL_814;
        case 0x3Au:
          v306 = 0;
          v307 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x400000000uLL;
          while (2)
          {
            v308 = *v3;
            v309 = *(_QWORD *)(a2 + v308);
            if (v309 == -1 || v309 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txSubPkts;
              goto LABEL_813;
            }
            v310 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v309);
            *(_QWORD *)(a2 + v308) = v309 + 1;
            v19 |= (unint64_t)(v310 & 0x7F) << v306;
            if (v310 < 0)
            {
              v23 = 0;
              v306 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txSubPkts;
              v25 = v307++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txSubPkts;
          goto LABEL_814;
        case 0x3Bu:
          v311 = 0;
          v312 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x40000uLL;
          while (2)
          {
            v313 = *v3;
            v314 = *(_QWORD *)(a2 + v313);
            if (v314 == -1 || v314 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txCompPkts;
              goto LABEL_813;
            }
            v315 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v314);
            *(_QWORD *)(a2 + v313) = v314 + 1;
            v19 |= (unint64_t)(v315 & 0x7F) << v311;
            if (v315 < 0)
            {
              v23 = 0;
              v311 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txCompPkts;
              v25 = v312++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txCompPkts;
          goto LABEL_814;
        case 0x3Cu:
          v316 = 0;
          v317 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x4000000000000uLL;
          while (2)
          {
            v318 = *v3;
            v319 = *(_QWORD *)(a2 + v318);
            if (v319 == -1 || v319 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__maxQueueFullDurMS;
              goto LABEL_813;
            }
            v320 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v319);
            *(_QWORD *)(a2 + v318) = v319 + 1;
            v19 |= (unint64_t)(v320 & 0x7F) << v316;
            if (v320 < 0)
            {
              v23 = 0;
              v316 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__maxQueueFullDurMS;
              v25 = v317++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__maxQueueFullDurMS;
          goto LABEL_814;
        case 0x3Du:
          v321 = 0;
          v322 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x20uLL;
          while (2)
          {
            v323 = *v3;
            v324 = *(_QWORD *)(a2 + v323);
            if (v324 == -1 || v324 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__avgTxLatencyMS;
              goto LABEL_813;
            }
            v325 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v324);
            *(_QWORD *)(a2 + v323) = v324 + 1;
            v19 |= (unint64_t)(v325 & 0x7F) << v321;
            if (v325 < 0)
            {
              v23 = 0;
              v321 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__avgTxLatencyMS;
              v25 = v322++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__avgTxLatencyMS;
          goto LABEL_814;
        case 0x3Eu:
          v326 = 0;
          v327 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x40uLL;
          while (2)
          {
            v328 = *v3;
            v329 = *(_QWORD *)(a2 + v328);
            if (v329 == -1 || v329 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__bTAntennaDurMS;
              goto LABEL_813;
            }
            v330 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v329);
            *(_QWORD *)(a2 + v328) = v329 + 1;
            v19 |= (unint64_t)(v330 & 0x7F) << v326;
            if (v330 < 0)
            {
              v23 = 0;
              v326 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__bTAntennaDurMS;
              v25 = v327++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__bTAntennaDurMS;
          goto LABEL_814;
        case 0x3Fu:
          v331 = 0;
          v332 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x20000000000000uLL;
          while (2)
          {
            v333 = *v3;
            v334 = *(_QWORD *)(a2 + v333);
            if (v334 == -1 || v334 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__outputThroughput;
              goto LABEL_813;
            }
            v335 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v334);
            *(_QWORD *)(a2 + v333) = v334 + 1;
            v19 |= (unint64_t)(v335 & 0x7F) << v331;
            if (v335 < 0)
            {
              v23 = 0;
              v331 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__outputThroughput;
              v25 = v332++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__outputThroughput;
          goto LABEL_814;
        case 0x40u:
          v336 = 0;
          v337 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x800000000uLL;
          while (2)
          {
            v338 = *v3;
            v339 = *(_QWORD *)(a2 + v338);
            if (v339 == -1 || v339 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__inputThroughput;
              goto LABEL_813;
            }
            v340 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v339);
            *(_QWORD *)(a2 + v338) = v339 + 1;
            v19 |= (unint64_t)(v340 & 0x7F) << v336;
            if (v340 < 0)
            {
              v23 = 0;
              v336 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__inputThroughput;
              v25 = v337++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__inputThroughput;
          goto LABEL_814;
        case 0x41u:
          v341 = 0;
          v342 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x800uLL;
          while (2)
          {
            v343 = *v3;
            v344 = *(_QWORD *)(a2 + v343);
            if (v344 == -1 || v344 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__expectedThroughput;
              goto LABEL_813;
            }
            v345 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v344);
            *(_QWORD *)(a2 + v343) = v344 + 1;
            v19 |= (unint64_t)(v345 & 0x7F) << v341;
            if (v345 < 0)
            {
              v23 = 0;
              v341 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__expectedThroughput;
              v25 = v342++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__expectedThroughput;
          goto LABEL_814;
        case 0x42u:
          v346 = 0;
          v347 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x400uLL;
          while (2)
          {
            v348 = *v3;
            v349 = *(_QWORD *)(a2 + v348);
            if (v349 == -1 || v349 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__delayedThroughput;
              goto LABEL_813;
            }
            v350 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v349);
            *(_QWORD *)(a2 + v348) = v349 + 1;
            v19 |= (unint64_t)(v350 & 0x7F) << v346;
            if (v350 < 0)
            {
              v23 = 0;
              v346 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__delayedThroughput;
              v25 = v347++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__delayedThroughput;
          goto LABEL_814;
        case 0x43u:
          v351 = 0;
          v352 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 4uLL;
          while (2)
          {
            v353 = *v3;
            v354 = *(_QWORD *)(a2 + v353);
            if (v354 == -1 || v354 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__availWLANDurMS;
              goto LABEL_813;
            }
            v355 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v354);
            *(_QWORD *)(a2 + v353) = v354 + 1;
            v19 |= (unint64_t)(v355 & 0x7F) << v351;
            if (v355 < 0)
            {
              v23 = 0;
              v351 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__availWLANDurMS;
              v25 = v352++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__availWLANDurMS;
          goto LABEL_814;
        case 0x44u:
          v356 = 0;
          v357 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x10uLL;
          while (2)
          {
            v358 = *v3;
            v359 = *(_QWORD *)(a2 + v358);
            if (v359 == -1 || v359 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__availWLANTxDurMS;
              goto LABEL_813;
            }
            v360 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v359);
            *(_QWORD *)(a2 + v358) = v359 + 1;
            v19 |= (unint64_t)(v360 & 0x7F) << v356;
            if (v360 < 0)
            {
              v23 = 0;
              v356 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__availWLANTxDurMS;
              v25 = v357++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__availWLANTxDurMS;
          goto LABEL_814;
        case 0x45u:
          v361 = 0;
          v362 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 8uLL;
          while (2)
          {
            v363 = *v3;
            v364 = *(_QWORD *)(a2 + v363);
            if (v364 == -1 || v364 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__availWLANRxDurMS;
              goto LABEL_813;
            }
            v365 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v364);
            *(_QWORD *)(a2 + v363) = v364 + 1;
            v19 |= (unint64_t)(v365 & 0x7F) << v361;
            if (v365 < 0)
            {
              v23 = 0;
              v361 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__availWLANRxDurMS;
              v25 = v362++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__availWLANRxDurMS;
          goto LABEL_814;
        case 0x46u:
          v366 = 0;
          v367 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x100000000uLL;
          while (2)
          {
            v368 = *v3;
            v369 = *(_QWORD *)(a2 + v368);
            if (v369 == -1 || v369 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txRetries;
              goto LABEL_813;
            }
            v370 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v369);
            *(_QWORD *)(a2 + v368) = v369 + 1;
            v19 |= (unint64_t)(v370 & 0x7F) << v366;
            if (v370 < 0)
            {
              v23 = 0;
              v366 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txRetries;
              v25 = v367++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txRetries;
          goto LABEL_814;
        case 0x47u:
          v371 = 0;
          v372 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x200000uLL;
          while (2)
          {
            v373 = *v3;
            v374 = *(_QWORD *)(a2 + v373);
            if (v374 == -1 || v374 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txFails;
              goto LABEL_813;
            }
            v375 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v374);
            *(_QWORD *)(a2 + v373) = v374 + 1;
            v19 |= (unint64_t)(v375 & 0x7F) << v371;
            if (v375 < 0)
            {
              v23 = 0;
              v371 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txFails;
              v25 = v372++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txFails;
          goto LABEL_814;
        case 0x48u:
          v376 = 0;
          v377 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x400000uLL;
          while (2)
          {
            v378 = *v3;
            v379 = *(_QWORD *)(a2 + v378);
            if (v379 == -1 || v379 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txFrames;
              goto LABEL_813;
            }
            v380 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v379);
            *(_QWORD *)(a2 + v378) = v379 + 1;
            v19 |= (unint64_t)(v380 & 0x7F) << v376;
            if (v380 < 0)
            {
              v23 = 0;
              v376 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txFrames;
              v25 = v377++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txFrames;
          goto LABEL_814;
        case 0x49u:
          v381 = 0;
          v382 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x10uLL;
          while (2)
          {
            v383 = *v3;
            v384 = *(_QWORD *)(a2 + v383);
            if (v384 == -1 || v384 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxOvflErrs;
              goto LABEL_813;
            }
            v385 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v384);
            *(_QWORD *)(a2 + v383) = v384 + 1;
            v19 |= (unint64_t)(v385 & 0x7F) << v381;
            if (v385 < 0)
            {
              v23 = 0;
              v381 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxOvflErrs;
              v25 = v382++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxOvflErrs;
          goto LABEL_814;
        case 0x4Au:
          v386 = 0;
          v387 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x8000000000000000;
          while (2)
          {
            v388 = *v3;
            v389 = *(_QWORD *)(a2 + v388);
            if (v389 == -1 || v389 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxFCSErrs;
              goto LABEL_813;
            }
            v390 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v389);
            *(_QWORD *)(a2 + v388) = v389 + 1;
            v19 |= (unint64_t)(v390 & 0x7F) << v386;
            if (v390 < 0)
            {
              v23 = 0;
              v386 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxFCSErrs;
              v25 = v387++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxFCSErrs;
          goto LABEL_814;
        case 0x4Bu:
          v391 = 0;
          v392 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x20uLL;
          while (2)
          {
            v393 = *v3;
            v394 = *(_QWORD *)(a2 + v393);
            if (v394 == -1 || v394 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxPLCPErrs;
              goto LABEL_813;
            }
            v395 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v394);
            *(_QWORD *)(a2 + v393) = v394 + 1;
            v19 |= (unint64_t)(v395 & 0x7F) << v391;
            if (v395 < 0)
            {
              v23 = 0;
              v391 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxPLCPErrs;
              v25 = v392++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxPLCPErrs;
          goto LABEL_814;
        case 0x4Cu:
          v396 = 0;
          v397 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x1000000000000000uLL;
          while (2)
          {
            v398 = *v3;
            v399 = *(_QWORD *)(a2 + v398);
            if (v399 == -1 || v399 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxCRSErrs;
              goto LABEL_813;
            }
            v400 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v399);
            *(_QWORD *)(a2 + v398) = v399 + 1;
            v19 |= (unint64_t)(v400 & 0x7F) << v396;
            if (v400 < 0)
            {
              v23 = 0;
              v396 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxCRSErrs;
              v25 = v397++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxCRSErrs;
          goto LABEL_814;
        case 0x4Du:
          v401 = 0;
          v402 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x4000000000000000uLL;
          while (2)
          {
            v403 = *v3;
            v404 = *(_QWORD *)(a2 + v403);
            if (v404 == -1 || v404 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxDupErrs;
              goto LABEL_813;
            }
            v405 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v404);
            *(_QWORD *)(a2 + v403) = v404 + 1;
            v19 |= (unint64_t)(v405 & 0x7F) << v401;
            if (v405 < 0)
            {
              v23 = 0;
              v401 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxDupErrs;
              v25 = v402++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxDupErrs;
          goto LABEL_814;
        case 0x4Eu:
          v406 = 0;
          v407 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x80uLL;
          while (2)
          {
            v408 = *v3;
            v409 = *(_QWORD *)(a2 + v408);
            if (v409 == -1 || v409 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxReplayErrs;
              goto LABEL_813;
            }
            v410 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v409);
            *(_QWORD *)(a2 + v408) = v409 + 1;
            v19 |= (unint64_t)(v410 & 0x7F) << v406;
            if (v410 < 0)
            {
              v23 = 0;
              v406 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxReplayErrs;
              v25 = v407++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxReplayErrs;
          goto LABEL_814;
        case 0x4Fu:
          v411 = 0;
          v412 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x2000000000000000uLL;
          while (2)
          {
            v413 = *v3;
            v414 = *(_QWORD *)(a2 + v413);
            if (v414 == -1 || v414 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxDecryErrs;
              goto LABEL_813;
            }
            v415 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v414);
            *(_QWORD *)(a2 + v413) = v414 + 1;
            v19 |= (unint64_t)(v415 & 0x7F) << v411;
            if (v415 < 0)
            {
              v23 = 0;
              v411 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxDecryErrs;
              v25 = v412++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxDecryErrs;
          goto LABEL_814;
        case 0x50u:
          v416 = 0;
          v417 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x100uLL;
          while (2)
          {
            v418 = *v3;
            v419 = *(_QWORD *)(a2 + v418);
            if (v419 == -1 || v419 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxRetries;
              goto LABEL_813;
            }
            v420 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v419);
            *(_QWORD *)(a2 + v418) = v419 + 1;
            v19 |= (unint64_t)(v420 & 0x7F) << v416;
            if (v420 < 0)
            {
              v23 = 0;
              v416 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxRetries;
              v25 = v417++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxRetries;
          goto LABEL_814;
        case 0x51u:
          v421 = 0;
          v422 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 2uLL;
          while (2)
          {
            v423 = *v3;
            v424 = *(_QWORD *)(a2 + v423);
            if (v424 == -1 || v424 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxGoodPlcps;
              goto LABEL_813;
            }
            v425 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v424);
            *(_QWORD *)(a2 + v423) = v424 + 1;
            v19 |= (unint64_t)(v425 & 0x7F) << v421;
            if (v425 < 0)
            {
              v23 = 0;
              v421 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxGoodPlcps;
              v25 = v422++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxGoodPlcps;
          goto LABEL_814;
        case 0x52u:
          v426 = 0;
          v427 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 1uLL;
          while (2)
          {
            v428 = *v3;
            v429 = *(_QWORD *)(a2 + v428);
            if (v429 == -1 || v429 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxFrames;
              goto LABEL_813;
            }
            v430 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v429);
            *(_QWORD *)(a2 + v428) = v429 + 1;
            v19 |= (unint64_t)(v430 & 0x7F) << v426;
            if (v430 < 0)
            {
              v23 = 0;
              v426 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxFrames;
              v25 = v427++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxFrames;
          goto LABEL_814;
        case 0x53u:
          v431 = 0;
          v432 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x400uLL;
          while (2)
          {
            v433 = *v3;
            v434 = *(_QWORD *)(a2 + v433);
            if (v434 == -1 || v434 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__sNR;
              goto LABEL_813;
            }
            v435 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v434);
            *(_QWORD *)(a2 + v433) = v434 + 1;
            v19 |= (unint64_t)(v435 & 0x7F) << v431;
            if (v435 < 0)
            {
              v23 = 0;
              v431 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__sNR;
              v25 = v432++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__sNR;
          goto LABEL_814;
        case 0x54u:
          v436 = 0;
          v437 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x100000uLL;
          while (2)
          {
            v438 = *v3;
            v439 = *(_QWORD *)(a2 + v438);
            if (v439 == -1 || v439 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txExpectedAMPDUDensity;
              goto LABEL_813;
            }
            v440 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v439);
            *(_QWORD *)(a2 + v438) = v439 + 1;
            v19 |= (unint64_t)(v440 & 0x7F) << v436;
            if (v440 < 0)
            {
              v23 = 0;
              v436 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txExpectedAMPDUDensity;
              v25 = v437++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__txExpectedAMPDUDensity;
          goto LABEL_814;
        case 0x55u:
          v441 = 0;
          v442 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x100000000000000uLL;
          while (2)
          {
            v443 = *v3;
            v444 = *(_QWORD *)(a2 + v443);
            if (v444 == -1 || v444 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rC1CoexDurationMS;
              goto LABEL_813;
            }
            v445 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v444);
            *(_QWORD *)(a2 + v443) = v444 + 1;
            v19 |= (unint64_t)(v445 & 0x7F) << v441;
            if (v445 < 0)
            {
              v23 = 0;
              v441 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rC1CoexDurationMS;
              v25 = v442++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rC1CoexDurationMS;
          goto LABEL_814;
        case 0x56u:
          v446 = 0;
          v447 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x200000000000000uLL;
          while (2)
          {
            v448 = *v3;
            v449 = *(_QWORD *)(a2 + v448);
            if (v449 == -1 || v449 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rC2CoexDurationMS;
              goto LABEL_813;
            }
            v450 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v449);
            *(_QWORD *)(a2 + v448) = v449 + 1;
            v19 |= (unint64_t)(v450 & 0x7F) << v446;
            if (v450 < 0)
            {
              v23 = 0;
              v446 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rC2CoexDurationMS;
              v25 = v447++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rC2CoexDurationMS;
          goto LABEL_814;
        case 0x57u:
          v451 = 0;
          v452 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x4000000000uLL;
          while (2)
          {
            v453 = *v3;
            v454 = *(_QWORD *)(a2 + v453);
            if (v454 == -1 || v454 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lTECoexDurationMS;
              goto LABEL_813;
            }
            v455 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v454);
            *(_QWORD *)(a2 + v453) = v454 + 1;
            v19 |= (unint64_t)(v455 & 0x7F) << v451;
            if (v455 < 0)
            {
              v23 = 0;
              v451 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lTECoexDurationMS;
              v25 = v452++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lTECoexDurationMS;
          goto LABEL_814;
        case 0x58u:
          v456 = 0;
          v457 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x200uLL;
          while (2)
          {
            v458 = *v3;
            v459 = *(_QWORD *)(a2 + v458);
            if (v459 == -1 || v459 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxThroughput;
              goto LABEL_813;
            }
            v460 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v459);
            *(_QWORD *)(a2 + v458) = v459 + 1;
            v19 |= (unint64_t)(v460 & 0x7F) << v456;
            if (v460 < 0)
            {
              v23 = 0;
              v456 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxThroughput;
              v25 = v457++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxThroughput;
          goto LABEL_814;
        case 0x59u:
          v461 = 0;
          v462 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 1uLL;
          while (2)
          {
            v463 = *v3;
            v464 = *(_QWORD *)(a2 + v463);
            if (v464 == -1 || v464 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__aPTxDataStall;
              goto LABEL_813;
            }
            v465 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v464);
            *(_QWORD *)(a2 + v463) = v464 + 1;
            v19 |= (unint64_t)(v465 & 0x7F) << v461;
            if (v465 < 0)
            {
              v23 = 0;
              v461 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__aPTxDataStall;
              v25 = v462++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__aPTxDataStall;
          goto LABEL_814;
        case 0x5Au:
          v466 = 0;
          v467 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x800000000000000uLL;
          while (2)
          {
            v468 = *v3;
            v469 = *(_QWORD *)(a2 + v468);
            if (v469 == -1 || v469 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxAmpduTxBaMismatch;
              goto LABEL_813;
            }
            v470 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v469);
            *(_QWORD *)(a2 + v468) = v469 + 1;
            v19 |= (unint64_t)(v470 & 0x7F) << v466;
            if (v470 < 0)
            {
              v23 = 0;
              v466 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxAmpduTxBaMismatch;
              v25 = v467++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__rxAmpduTxBaMismatch;
          goto LABEL_814;
        case 0x5Bu:
          v471 = 0;
          v472 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x800uLL;
          while (2)
          {
            v473 = *v3;
            v474 = *(_QWORD *)(a2 + v473);
            if (v474 == -1 || v474 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__symptomsFails;
              goto LABEL_813;
            }
            v475 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v474);
            *(_QWORD *)(a2 + v473) = v474 + 1;
            v19 |= (unint64_t)(v475 & 0x7F) << v471;
            if (v475 < 0)
            {
              v23 = 0;
              v471 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__symptomsFails;
              v25 = v472++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__symptomsFails;
          goto LABEL_814;
        case 0x5Cu:
          v476 = 0;
          v477 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x1000000000uLL;
          while (2)
          {
            v478 = *v3;
            v479 = *(_QWORD *)(a2 + v478);
            if (v479 == -1 || v479 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__is2GBand;
              goto LABEL_813;
            }
            v480 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v479);
            *(_QWORD *)(a2 + v478) = v479 + 1;
            v19 |= (unint64_t)(v480 & 0x7F) << v476;
            if (v480 < 0)
            {
              v23 = 0;
              v476 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__is2GBand;
              v25 = v477++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__is2GBand;
          goto LABEL_814;
        case 0x5Du:
          v481 = 0;
          v482 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x2000000000uLL;
          while (2)
          {
            v483 = *v3;
            v484 = *(_QWORD *)(a2 + v483);
            if (v484 == -1 || v484 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__isFGTraffic;
              goto LABEL_813;
            }
            v485 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v484);
            *(_QWORD *)(a2 + v483) = v484 + 1;
            v19 |= (unint64_t)(v485 & 0x7F) << v481;
            if (v485 < 0)
            {
              v23 = 0;
              v481 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__isFGTraffic;
              v25 = v482++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__isFGTraffic;
          goto LABEL_814;
        case 0x5Eu:
          v486 = 0;
          v487 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x80uLL;
          while (2)
          {
            v488 = *v3;
            v489 = *(_QWORD *)(a2 + v488);
            if (v489 == -1 || v489 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__baselineThroughput;
              goto LABEL_813;
            }
            v490 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v489);
            *(_QWORD *)(a2 + v488) = v489 + 1;
            v19 |= (unint64_t)(v490 & 0x7F) << v486;
            if (v490 < 0)
            {
              v23 = 0;
              v486 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__baselineThroughput;
              v25 = v487++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__baselineThroughput;
          goto LABEL_814;
        case 0x5Fu:
          v491 = 0;
          v492 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x2000uLL;
          while (2)
          {
            v493 = *v3;
            v494 = *(_QWORD *)(a2 + v493);
            if (v494 == -1 || v494 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__testThroughput;
              goto LABEL_813;
            }
            v495 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v494);
            *(_QWORD *)(a2 + v493) = v494 + 1;
            v19 |= (unint64_t)(v495 & 0x7F) << v491;
            if (v495 < 0)
            {
              v23 = 0;
              v491 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__testThroughput;
              v25 = v492++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__testThroughput;
          goto LABEL_814;
        case 0x60u:
          v496 = 0;
          v497 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x400000000uLL;
          while (2)
          {
            v498 = *v3;
            v499 = *(_QWORD *)(a2 + v498);
            if (v499 == -1 || v499 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__infraDutyCycle;
              goto LABEL_813;
            }
            v500 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v499);
            *(_QWORD *)(a2 + v498) = v499 + 1;
            v19 |= (unint64_t)(v500 & 0x7F) << v496;
            if (v500 < 0)
            {
              v23 = 0;
              v496 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__infraDutyCycle;
              v25 = v497++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__infraDutyCycle;
          goto LABEL_814;
        case 0x61u:
          v501 = 0;
          v502 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 0x8000000000uLL;
          while (2)
          {
            v503 = *v3;
            v504 = *(_QWORD *)(a2 + v503);
            if (v504 == -1 || v504 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lastScanReason;
              goto LABEL_813;
            }
            v505 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v504);
            *(_QWORD *)(a2 + v503) = v504 + 1;
            v19 |= (unint64_t)(v505 & 0x7F) << v501;
            if (v505 < 0)
            {
              v23 = 0;
              v501 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lastScanReason;
              v25 = v502++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__lastScanReason;
          goto LABEL_814;
        case 0x62u:
          v506 = 0;
          v507 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 800) |= 2uLL;
          while (2)
          {
            v508 = *v3;
            v509 = *(_QWORD *)(a2 + v508);
            if (v509 == -1 || v509 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__accessPointOUI;
              goto LABEL_813;
            }
            v510 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v509);
            *(_QWORD *)(a2 + v508) = v509 + 1;
            v19 |= (unint64_t)(v510 & 0x7F) << v506;
            if (v510 < 0)
            {
              v23 = 0;
              v506 += 7;
              v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__accessPointOUI;
              v25 = v507++ > 8;
              if (v25)
                goto LABEL_817;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__accessPointOUI;
          goto LABEL_814;
        case 0x63u:
          v511 = 0;
          v512 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 808) |= 0x4000uLL;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v513 = *v3;
        v514 = *(_QWORD *)(a2 + v513);
        if (v514 == -1 || v514 >= *(_QWORD *)(a2 + *v4))
          break;
        v515 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v514);
        *(_QWORD *)(a2 + v513) = v514 + 1;
        v19 |= (unint64_t)(v515 & 0x7F) << v511;
        if ((v515 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__timeSinceLastRecovery;
          goto LABEL_814;
        }
        v23 = 0;
        v511 += 7;
        v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__timeSinceLastRecovery;
        v25 = v512++ > 8;
        if (v25)
          goto LABEL_817;
      }
      v24 = &OBJC_IVAR___AWDLinkQualityMeasurements__timeSinceLastRecovery;
LABEL_813:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_814:
      v23 = *(_BYTE *)(a2 + *v5) ? 0 : v19;
LABEL_817:
      *(_QWORD *)(a1 + *v24) = v23;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDMacCountersRxReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  uint64_t v33;
  int *v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = &OBJC_IVAR___AWDMacCountersRx__rxdfrmucastmbss;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDMacCountersRx__rxmfrmucastmbss;
    v12 = &OBJC_IVAR___AWDMacCountersRx__rxcfrmucast;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 0x100u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_133;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_137;
          }
          v29 = v9;
          goto LABEL_134;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 0x800u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_133;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_134;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 8u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_133;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_134;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 0x2000u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxrtsucast;
              goto LABEL_133;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxrtsucast;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxrtsucast;
          goto LABEL_134;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 0x20u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxctsucast;
              goto LABEL_133;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxctsucast;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxctsucast;
          goto LABEL_134;
        case 6u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 1u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxackucast;
              goto LABEL_133;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxackucast;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxackucast;
          goto LABEL_134;
        case 7u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 0x80u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxdfrmocast;
              goto LABEL_133;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxdfrmocast;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxdfrmocast;
          goto LABEL_134;
        case 8u:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 0x400u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxmfrmocast;
              goto LABEL_133;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxmfrmocast;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxmfrmocast;
          goto LABEL_134;
        case 9u:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 4u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxcfrmocast;
              goto LABEL_133;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxcfrmocast;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxcfrmocast;
          goto LABEL_134;
        case 0xAu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 0x1000u;
          while (2)
          {
            v80 = *v4;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxrtsocast;
              goto LABEL_133;
            }
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v24 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v28 = 0;
              v78 += 7;
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxrtsocast;
              v30 = v79++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxrtsocast;
          goto LABEL_134;
        case 0xBu:
          v83 = 0;
          v84 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 0x10u;
          while (2)
          {
            v85 = *v4;
            v86 = *(_QWORD *)(a2 + v85);
            if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxctsocast;
              goto LABEL_133;
            }
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v24 |= (unint64_t)(v87 & 0x7F) << v83;
            if (v87 < 0)
            {
              v28 = 0;
              v83 += 7;
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxctsocast;
              v30 = v84++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxctsocast;
          goto LABEL_134;
        case 0xCu:
          v88 = 0;
          v89 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 0x40u;
          while (2)
          {
            v90 = *v4;
            v91 = *(_QWORD *)(a2 + v90);
            if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxdfrmmcast;
              goto LABEL_133;
            }
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v91);
            *(_QWORD *)(a2 + v90) = v91 + 1;
            v24 |= (unint64_t)(v92 & 0x7F) << v88;
            if (v92 < 0)
            {
              v28 = 0;
              v88 += 7;
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxdfrmmcast;
              v30 = v89++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxdfrmmcast;
          goto LABEL_134;
        case 0xDu:
          v93 = 0;
          v94 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 0x200u;
          while (2)
          {
            v95 = *v4;
            v96 = *(_QWORD *)(a2 + v95);
            if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxmfrmmcast;
              goto LABEL_133;
            }
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v24 |= (unint64_t)(v97 & 0x7F) << v93;
            if (v97 < 0)
            {
              v28 = 0;
              v93 += 7;
              v29 = &OBJC_IVAR___AWDMacCountersRx__rxmfrmmcast;
              v30 = v94++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxmfrmmcast;
          goto LABEL_134;
        case 0xEu:
          v98 = 0;
          v99 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[631]) |= 2u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v2;
          v34 = v8;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v8 = v34;
          v2 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v100 = *v4;
        v101 = *(_QWORD *)(a2 + v100);
        if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v5))
          break;
        v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v101);
        *(_QWORD *)(a2 + v100) = v101 + 1;
        v24 |= (unint64_t)(v102 & 0x7F) << v98;
        if ((v102 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDMacCountersRx__rxcfrmmcast;
          goto LABEL_134;
        }
        v28 = 0;
        v98 += 7;
        v29 = &OBJC_IVAR___AWDMacCountersRx__rxcfrmmcast;
        v30 = v99++ > 8;
        if (v30)
          goto LABEL_137;
      }
      v29 = &OBJC_IVAR___AWDMacCountersRx__rxcfrmmcast;
LABEL_133:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_134:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_137:
      *(_QWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL AWDMacCountersRxErrorsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxfrmtoolong;
              goto LABEL_77;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              v19 = 0;
              v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxfrmtoolong;
              goto LABEL_80;
            }
          }
          v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxfrmtoolong;
          goto LABEL_78;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxfrmtooshrt;
              goto LABEL_77;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxfrmtooshrt;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxfrmtooshrt;
          goto LABEL_78;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 0x20u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxinvmachdr;
              goto LABEL_77;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxinvmachdr;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxinvmachdr;
          goto LABEL_78;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 1u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxbadfcs;
              goto LABEL_77;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxbadfcs;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxbadfcs;
          goto LABEL_78;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 2u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxbadplcp;
              goto LABEL_77;
            }
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v19 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v23 = v41++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxbadplcp;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxbadplcp;
          goto LABEL_78;
        case 6u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 4u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxcrsglitch;
              goto LABEL_77;
            }
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v19 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v23 = v46++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxcrsglitch;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxcrsglitch;
          goto LABEL_78;
        case 7u:
          v50 = 0;
          v51 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 0x40u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v52 = *v3;
        v53 = *(_QWORD *)(a2 + v52);
        if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          break;
        v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
        *(_QWORD *)(a2 + v52) = v53 + 1;
        v19 |= (unint64_t)(v54 & 0x7F) << v50;
        if ((v54 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxstrt;
          goto LABEL_78;
        }
        v50 += 7;
        v23 = v51++ > 8;
        if (v23)
        {
          v19 = 0;
          v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxstrt;
          goto LABEL_80;
        }
      }
      v24 = &OBJC_IVAR___AWDMacCountersRxErrors__rxstrt;
LABEL_77:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_78:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_80:
      *(_QWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDManagementFramesReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  int *v29;
  BOOL v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  int *v86;
  int *v87;
  uint64_t v88;
  int *v89;
  int *v90;
  uint64_t v91;
  char v92;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = &OBJC_IVAR___AWDManagementFrames__assocRequest;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDManagementFrames__assocResponse;
    v12 = &OBJC_IVAR___AWDManagementFrames__reassocRequest;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 4u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_117;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_121;
          }
          v29 = v9;
          goto LABEL_118;
        case 2u:
          v31 = 0;
          v32 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 8u;
          while (2)
          {
            v33 = *v4;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_117;
            }
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v24 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v28 = 0;
              v31 += 7;
              v29 = v11;
              v30 = v32++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_118;
        case 3u:
          v36 = 0;
          v37 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 0x400u;
          while (2)
          {
            v38 = *v4;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_117;
            }
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v24 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v28 = 0;
              v36 += 7;
              v29 = v12;
              v30 = v37++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_118;
        case 4u:
          v41 = 0;
          v42 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 0x800u;
          while (2)
          {
            v43 = *v4;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDManagementFrames__reassocResponse;
              goto LABEL_117;
            }
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v24 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v28 = 0;
              v41 += 7;
              v29 = &OBJC_IVAR___AWDManagementFrames__reassocResponse;
              v30 = v42++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDManagementFrames__reassocResponse;
          goto LABEL_118;
        case 5u:
          v46 = 0;
          v47 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 0x100u;
          while (2)
          {
            v48 = *v4;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDManagementFrames__probeRequest;
              goto LABEL_117;
            }
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v24 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v28 = 0;
              v46 += 7;
              v29 = &OBJC_IVAR___AWDManagementFrames__probeRequest;
              v30 = v47++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDManagementFrames__probeRequest;
          goto LABEL_118;
        case 6u:
          v51 = 0;
          v52 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 0x200u;
          while (2)
          {
            v53 = *v4;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDManagementFrames__probeResponse;
              goto LABEL_117;
            }
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v24 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v28 = 0;
              v51 += 7;
              v29 = &OBJC_IVAR___AWDManagementFrames__probeResponse;
              v30 = v52++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDManagementFrames__probeResponse;
          goto LABEL_118;
        case 7u:
          v56 = 0;
          v57 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 0x20u;
          while (2)
          {
            v58 = *v4;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDManagementFrames__beacon;
              goto LABEL_117;
            }
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v24 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v28 = 0;
              v56 += 7;
              v29 = &OBJC_IVAR___AWDManagementFrames__beacon;
              v30 = v57++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDManagementFrames__beacon;
          goto LABEL_118;
        case 8u:
          v61 = 0;
          v62 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 1u;
          while (2)
          {
            v63 = *v4;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDManagementFrames__aTIM;
              goto LABEL_117;
            }
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v24 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v28 = 0;
              v61 += 7;
              v29 = &OBJC_IVAR___AWDManagementFrames__aTIM;
              v30 = v62++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDManagementFrames__aTIM;
          goto LABEL_118;
        case 9u:
          v66 = 0;
          v67 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 0x80u;
          while (2)
          {
            v68 = *v4;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDManagementFrames__disassoc;
              goto LABEL_117;
            }
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v24 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v28 = 0;
              v66 += 7;
              v29 = &OBJC_IVAR___AWDManagementFrames__disassoc;
              v30 = v67++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDManagementFrames__disassoc;
          goto LABEL_118;
        case 0xAu:
          v71 = 0;
          v72 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 0x10u;
          while (2)
          {
            v73 = *v4;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDManagementFrames__auth;
              goto LABEL_117;
            }
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v24 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v28 = 0;
              v71 += 7;
              v29 = &OBJC_IVAR___AWDManagementFrames__auth;
              v30 = v72++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDManagementFrames__auth;
          goto LABEL_118;
        case 0xBu:
          v76 = 0;
          v77 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 0x40u;
          while (2)
          {
            v78 = *v4;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDManagementFrames__deauth;
              goto LABEL_117;
            }
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v24 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v28 = 0;
              v76 += 7;
              v29 = &OBJC_IVAR___AWDManagementFrames__deauth;
              v30 = v77++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDManagementFrames__deauth;
          goto LABEL_118;
        case 0xCu:
          v81 = 0;
          v82 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[654]) |= 2u;
          break;
        default:
          v86 = v9;
          v87 = v11;
          v88 = v2;
          v89 = v8;
          v90 = v12;
          v91 = a1;
          v92 = PBReaderSkipValueWithTag();
          a1 = v91;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v90;
          v8 = v89;
          v2 = v88;
          v11 = v87;
          v9 = v86;
          if ((v92 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v83 = *v4;
        v84 = *(_QWORD *)(a2 + v83);
        if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v5))
          break;
        v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v84);
        *(_QWORD *)(a2 + v83) = v84 + 1;
        v24 |= (unint64_t)(v85 & 0x7F) << v81;
        if ((v85 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDManagementFrames__action;
          goto LABEL_118;
        }
        v28 = 0;
        v81 += 7;
        v29 = &OBJC_IVAR___AWDManagementFrames__action;
        v30 = v82++ > 8;
        if (v30)
          goto LABEL_121;
      }
      v29 = &OBJC_IVAR___AWDManagementFrames__action;
LABEL_117:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_118:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_121:
      *(_QWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL AWDNwExclusionCountReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDNwExclusionCount__usageRank;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDNwExclusionCount__usageRank;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDNwExclusionCount__usageRank;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDNwExclusionCount__reasonCode;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDNwExclusionCount__reasonCode;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDNwExclusionCount__reasonCode;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 20) |= 2u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDNwExclusionCount__rssi;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        v25 = &OBJC_IVAR___AWDNwExclusionCount__rssi;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDNwExclusionCount__rssi;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v20) = 0;
LABEL_50:
    *(_DWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDOMICntrsReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  uint64_t v33;
  int *v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = &OBJC_IVAR___AWDOMICntrs__heOmitxSched;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDOMICntrs__heOmitxSuccess;
    v12 = &OBJC_IVAR___AWDOMICntrs__heOmitxRetries;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[671]) |= 0x10u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_101;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_105;
          }
          v29 = v9;
          goto LABEL_102;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[671]) |= 0x20u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_101;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_102;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[671]) |= 8u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_101;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_102;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[671]) |= 4u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxDur;
              goto LABEL_101;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxDur;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxDur;
          goto LABEL_102;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[671]) |= 0x100u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxUlmucfg;
              goto LABEL_101;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxUlmucfg;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxUlmucfg;
          goto LABEL_102;
        case 6u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[671]) |= 0x200u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxUlmucfgAck;
              goto LABEL_101;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxUlmucfgAck;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxUlmucfgAck;
          goto LABEL_102;
        case 7u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[671]) |= 0x40u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxTxnsts;
              goto LABEL_101;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxTxnsts;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxTxnsts;
          goto LABEL_102;
        case 8u:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[671]) |= 0x80u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxTxnstsAck;
              goto LABEL_101;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxTxnstsAck;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxTxnstsAck;
          goto LABEL_102;
        case 9u:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[671]) |= 1u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxDlmursdrec;
              goto LABEL_101;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxDlmursdrec;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_105;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxDlmursdrec;
          goto LABEL_102;
        case 0xAu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[671]) |= 2u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v2;
          v34 = v8;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v8 = v34;
          v2 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v80 = *v4;
        v81 = *(_QWORD *)(a2 + v80);
        if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
          break;
        v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
        *(_QWORD *)(a2 + v80) = v81 + 1;
        v24 |= (unint64_t)(v82 & 0x7F) << v78;
        if ((v82 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxDlmursdrecAck;
          goto LABEL_102;
        }
        v28 = 0;
        v78 += 7;
        v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxDlmursdrecAck;
        v30 = v79++ > 8;
        if (v30)
          goto LABEL_105;
      }
      v29 = &OBJC_IVAR___AWDOMICntrs__heOmitxDlmursdrecAck;
LABEL_101:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_102:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_105:
      *(_DWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL AWDRxPhyErrorsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDRxPhyErrors__bphyBadplcp;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDRxPhyErrors__bphyBadplcp;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDRxPhyErrors__bphyBadplcp;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 4u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDRxPhyErrors__rfdisable;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDRxPhyErrors__rfdisable;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDRxPhyErrors__rfdisable;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 32) |= 2u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDRxPhyErrors__bphyRxcrsglitch;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        v20 = 0;
        v25 = &OBJC_IVAR___AWDRxPhyErrors__bphyRxcrsglitch;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDRxPhyErrors__bphyRxcrsglitch;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      v20 = 0;
LABEL_50:
    *(_QWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDScanStatsPerSliceReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  int v19;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t result;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  int *v57;
  int *v58;
  int *v59;
  AWDWiFiMetricsScanObj *v60;
  uint64_t v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v8 = (int *)MEMORY[0x24BE7AF30];
    v9 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v10 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v11 = 0;
        v12 = 0;
        v13 = 0;
        while (1)
        {
          v14 = *v3;
          v15 = *(_QWORD *)(a2 + v14);
          if (v15 == -1 || v15 >= *(_QWORD *)(a2 + *v4))
            break;
          v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v15);
          *(_QWORD *)(a2 + v14) = v15 + 1;
          v13 |= (unint64_t)(v16 & 0x7F) << v11;
          if ((v16 & 0x80) == 0)
            goto LABEL_12;
          v11 += 7;
          v17 = v12++ >= 9;
          if (v17)
          {
            v13 = 0;
            v18 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v18 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v13 = 0;
LABEL_14:
        v19 = v13 & 7;
        if (!v18 && v19 != 4)
        {
          switch((v13 >> 3))
          {
            case 1u:
              v21 = 0;
              v22 = 0;
              v23 = 0;
              *((_BYTE *)a1 + v7[689]) |= 1u;
              while (1)
              {
                v24 = *v3;
                v25 = *(_QWORD *)(a2 + v24);
                if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
                  break;
                v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v25);
                *(_QWORD *)(a2 + v24) = v25 + 1;
                v23 |= (unint64_t)(v26 & 0x7F) << v21;
                if ((v26 & 0x80) == 0)
                  goto LABEL_86;
                v21 += 7;
                v17 = v22++ >= 9;
                if (v17)
                {
                  v23 = 0;
                  goto LABEL_88;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_86:
              if (*(_BYTE *)(a2 + *v5))
                v23 = 0;
LABEL_88:
              a1[10] = v23;
              goto LABEL_121;
            case 2u:
              v27 = 0;
              v28 = 0;
              v29 = 0;
              *((_BYTE *)a1 + v7[689]) |= 4u;
              while (2)
              {
                v30 = *v3;
                v31 = *(_QWORD *)(a2 + v30);
                if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v31);
                  *(_QWORD *)(a2 + v30) = v31 + 1;
                  v29 |= (unint64_t)(v32 & 0x7F) << v27;
                  if (v32 < 0)
                  {
                    v27 += 7;
                    v17 = v28++ >= 9;
                    if (v17)
                    {
                      LODWORD(v29) = 0;
                      goto LABEL_92;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v29) = 0;
LABEL_92:
              v61 = 92;
              goto LABEL_97;
            case 3u:
              v33 = 0;
              v34 = 0;
              v29 = 0;
              *((_BYTE *)a1 + v7[689]) |= 2u;
              while (2)
              {
                v35 = *v3;
                v36 = *(_QWORD *)(a2 + v35);
                if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v36);
                  *(_QWORD *)(a2 + v35) = v36 + 1;
                  v29 |= (unint64_t)(v37 & 0x7F) << v33;
                  if (v37 < 0)
                  {
                    v33 += 7;
                    v17 = v34++ >= 9;
                    if (v17)
                    {
                      LODWORD(v29) = 0;
                      goto LABEL_96;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v29) = 0;
LABEL_96:
              v61 = 88;
LABEL_97:
              *(_DWORD *)((char *)a1 + v61) = v29;
              goto LABEL_121;
            case 4u:
              if (v19 != 2)
              {
                v62 = 0;
                v63 = 0;
                v64 = 0;
                while (1)
                {
                  v65 = *v3;
                  v66 = *(_QWORD *)(a2 + v65);
                  if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_119;
                  v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v66);
                  *(_QWORD *)(a2 + v65) = v66 + 1;
                  v64 |= (unint64_t)(v67 & 0x7F) << v62;
                  if (v67 < 0)
                  {
                    v62 += 7;
                    v17 = v63++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_120;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v39 = 0;
                v40 = 0;
                v41 = 0;
                while (1)
                {
                  v42 = *v3;
                  v43 = *(_QWORD *)(a2 + v42);
                  if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v43);
                  *(_QWORD *)(a2 + v42) = v43 + 1;
                  v41 |= (unint64_t)(v44 & 0x7F) << v39;
                  if (v44 < 0)
                  {
                    v39 += 7;
                    v17 = v40++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_54;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
                PBRepeatedUInt32Add();
              }
              goto LABEL_81;
            case 5u:
              if (v19 != 2)
              {
                v68 = 0;
                v69 = 0;
                v70 = 0;
                while (1)
                {
                  v71 = *v3;
                  v72 = *(_QWORD *)(a2 + v71);
                  if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_119;
                  v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v72);
                  *(_QWORD *)(a2 + v71) = v72 + 1;
                  v70 |= (unint64_t)(v73 & 0x7F) << v68;
                  if (v73 < 0)
                  {
                    v68 += 7;
                    v17 = v69++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_120;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v45 = 0;
                v46 = 0;
                v47 = 0;
                while (1)
                {
                  v48 = *v3;
                  v49 = *(_QWORD *)(a2 + v48);
                  if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v49);
                  *(_QWORD *)(a2 + v48) = v49 + 1;
                  v47 |= (unint64_t)(v50 & 0x7F) << v45;
                  if (v50 < 0)
                  {
                    v45 += 7;
                    v17 = v46++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_67;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_67:
                PBRepeatedUInt32Add();
              }
              goto LABEL_81;
            case 6u:
              if (v19 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v51 = 0;
                  v52 = 0;
                  v53 = 0;
                  while (1)
                  {
                    v54 = *v3;
                    v55 = *(_QWORD *)(a2 + v54);
                    if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v55);
                    *(_QWORD *)(a2 + v54) = v55 + 1;
                    v53 |= (unint64_t)(v56 & 0x7F) << v51;
                    if (v56 < 0)
                    {
                      v51 += 7;
                      v17 = v52++ >= 9;
                      if (!v17)
                        continue;
                    }
                    goto LABEL_80;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_80:
                  PBRepeatedUInt32Add();
                }
LABEL_81:
                PBReaderRecallMark();
              }
              else
              {
                v74 = 0;
                v75 = 0;
                v76 = 0;
                while (1)
                {
                  v77 = *v3;
                  v78 = *(_QWORD *)(a2 + v77);
                  if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v78);
                  *(_QWORD *)(a2 + v77) = v78 + 1;
                  v76 |= (unint64_t)(v79 & 0x7F) << v74;
                  if (v79 < 0)
                  {
                    v74 += 7;
                    v17 = v75++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_120;
                }
LABEL_119:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_120:
                PBRepeatedUInt32Add();
              }
LABEL_121:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 7u:
              v57 = v10;
              v58 = v9;
              v59 = v7;
              v60 = objc_alloc_init(AWDWiFiMetricsScanObj);
              objc_msgSend(a1, "addScanObject:", v60);

              if (!PBReaderPlaceMark() || !AWDWiFiMetricsScanObjReadFrom((uint64_t)v60, a2))
                return 0;
              PBReaderRecallMark();
              v7 = v59;
              v9 = v58;
              v10 = v57;
              goto LABEL_121;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_121;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDSidecarBssSteeringReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  uint64_t v33;
  int *v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = &OBJC_IVAR___AWDSidecarBssSteering__trafficType;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDSidecarBssSteering__completionTime;
    v12 = &OBJC_IVAR___AWDSidecarBssSteering__attemptStatus;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 0x1000u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_125;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_129;
          }
          v29 = v9;
          goto LABEL_126;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 0x10u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_125;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_126;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 2u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_125;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_126;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 1u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__attemptPeerCount;
              goto LABEL_125;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__attemptPeerCount;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDSidecarBssSteering__attemptPeerCount;
          goto LABEL_126;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 4u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__bssSyncChannel;
              goto LABEL_125;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__bssSyncChannel;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDSidecarBssSteering__bssSyncChannel;
          goto LABEL_126;
        case 6u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 0x20u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__peerChannel;
              goto LABEL_125;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__peerChannel;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDSidecarBssSteering__peerChannel;
          goto LABEL_126;
        case 7u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 0x100u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__selfInfraChannel;
              goto LABEL_125;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__selfInfraChannel;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDSidecarBssSteering__selfInfraChannel;
          goto LABEL_126;
        case 8u:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 0x400u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__targetChannel;
              goto LABEL_125;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__targetChannel;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDSidecarBssSteering__targetChannel;
          goto LABEL_126;
        case 9u:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 0x80u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__policyCode;
              goto LABEL_125;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__policyCode;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDSidecarBssSteering__policyCode;
          goto LABEL_126;
        case 0xAu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 0x40u;
          while (2)
          {
            v80 = *v4;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__peerChannelFlags;
              goto LABEL_125;
            }
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v24 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v28 = 0;
              v78 += 7;
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__peerChannelFlags;
              v30 = v79++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDSidecarBssSteering__peerChannelFlags;
          goto LABEL_126;
        case 0xBu:
          v83 = 0;
          v84 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 0x200u;
          while (2)
          {
            v85 = *v4;
            v86 = *(_QWORD *)(a2 + v85);
            if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__selfInfraChannelFlags;
              goto LABEL_125;
            }
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v24 |= (unint64_t)(v87 & 0x7F) << v83;
            if (v87 < 0)
            {
              v28 = 0;
              v83 += 7;
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__selfInfraChannelFlags;
              v30 = v84++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDSidecarBssSteering__selfInfraChannelFlags;
          goto LABEL_126;
        case 0xCu:
          v88 = 0;
          v89 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 8u;
          while (2)
          {
            v90 = *v4;
            v91 = *(_QWORD *)(a2 + v90);
            if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__bssSyncChannelFlags;
              goto LABEL_125;
            }
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v91);
            *(_QWORD *)(a2 + v90) = v91 + 1;
            v24 |= (unint64_t)(v92 & 0x7F) << v88;
            if (v92 < 0)
            {
              v28 = 0;
              v88 += 7;
              v29 = &OBJC_IVAR___AWDSidecarBssSteering__bssSyncChannelFlags;
              v30 = v89++ > 8;
              if (v30)
                goto LABEL_129;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDSidecarBssSteering__bssSyncChannelFlags;
          goto LABEL_126;
        case 0xDu:
          v93 = 0;
          v94 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[694]) |= 0x800u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v2;
          v34 = v8;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v8 = v34;
          v2 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v95 = *v4;
        v96 = *(_QWORD *)(a2 + v95);
        if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v5))
          break;
        v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v96);
        *(_QWORD *)(a2 + v95) = v96 + 1;
        v24 |= (unint64_t)(v97 & 0x7F) << v93;
        if ((v97 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDSidecarBssSteering__targetChannelFlags;
          goto LABEL_126;
        }
        v28 = 0;
        v93 += 7;
        v29 = &OBJC_IVAR___AWDSidecarBssSteering__targetChannelFlags;
        v30 = v94++ > 8;
        if (v30)
          goto LABEL_129;
      }
      v29 = &OBJC_IVAR___AWDSidecarBssSteering__targetChannelFlags;
LABEL_125:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_126:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_129:
      *(_DWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL AWDSidecarHistogramBinReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        *(_BYTE *)(a1 + 32) |= 4u;
        v22 = *v3;
        v23 = *(_QWORD *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v21 = 0;
        }
        v26 = &OBJC_IVAR___AWDSidecarHistogramBin__value;
        goto LABEL_38;
      }
      if ((_DWORD)v18 == 2)
        break;
      if ((_DWORD)v18 == 1)
      {
        *(_BYTE *)(a1 + 32) |= 2u;
        v19 = *v3;
        v20 = *(_QWORD *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v20);
          *(_QWORD *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v21 = 0;
        }
        v26 = &OBJC_IVAR___AWDSidecarHistogramBin__binStart;
LABEL_38:
        *(_QWORD *)(a1 + *v26) = v21;
        goto LABEL_39;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_39:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    *(_BYTE *)(a1 + 32) |= 1u;
    v24 = *v3;
    v25 = *(_QWORD *)(a2 + v24);
    if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(_QWORD *)(a2 + *v4))
    {
      v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v25);
      *(_QWORD *)(a2 + v24) = v25 + 8;
    }
    else
    {
      *(_BYTE *)(a2 + *v5) = 1;
      v21 = 0;
    }
    v26 = &OBJC_IVAR___AWDSidecarHistogramBin__binEnd;
    goto LABEL_38;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSidecarPeerTrafficReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  AWDSidecarHistogramBin *v34;
  uint64_t v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        a1[144] |= 4u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_62;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_64;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_64:
        v35 = 24;
        goto LABEL_73;
      case 2u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        a1[144] |= 2u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_68:
        v35 = 16;
        goto LABEL_73;
      case 3u:
        v29 = 0;
        v30 = 0;
        v19 = 0;
        a1[144] |= 1u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v19 |= (unint64_t)(v33 & 0x7F) << v29;
            if (v33 < 0)
            {
              v29 += 7;
              v14 = v30++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_72:
        v35 = 8;
LABEL_73:
        *(_QWORD *)&a1[v35] = v19;
        goto LABEL_59;
      case 4u:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addTxTotalDelay:", v34);
        goto LABEL_56;
      case 5u:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addTxIPCDelay:", v34);
        goto LABEL_56;
      case 6u:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addTxFWDelay:", v34);
        goto LABEL_56;
      case 7u:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addTxHWDelay:", v34);
        goto LABEL_56;
      case 8u:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addTxDataRate:", v34);
        goto LABEL_56;
      case 9u:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addTxCCA:", v34);
        goto LABEL_56;
      case 0xAu:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addTxRetries:", v34);
        goto LABEL_56;
      case 0xBu:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addTxPacketBurstSize:", v34);
        goto LABEL_56;
      case 0xCu:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addTxPacketBurstInterval:", v34);
        goto LABEL_56;
      case 0xDu:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addRxTotalDelay:", v34);
        goto LABEL_56;
      case 0xEu:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addRxIPCDelay:", v34);
        goto LABEL_56;
      case 0xFu:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addRxFWDelay:", v34);
        goto LABEL_56;
      case 0x10u:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addRxDataRate:", v34);
        goto LABEL_56;
      case 0x11u:
        v34 = objc_alloc_init(AWDSidecarHistogramBin);
        objc_msgSend(a1, "addRxRSSI:", v34);
LABEL_56:

        if (PBReaderPlaceMark() && AWDSidecarHistogramBinReadFrom((uint64_t)v34, a2))
        {
          PBReaderRecallMark();
LABEL_59:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_59;
    }
  }
}

uint64_t AWDSlowWiFiNotificationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_64;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_66;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_66:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_70:
          v51 = 16;
          goto LABEL_83;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_74:
          v51 = 20;
          goto LABEL_83;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_78:
          v51 = 24;
          goto LABEL_83;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 0x10u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_82:
          v51 = 28;
LABEL_83:
          *(_DWORD *)(a1 + v51) = v26;
          continue;
        case 6u:
          v45 = 0;
          v46 = 0;
          v47 = 0;
          *(_BYTE *)(a1 + 36) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v48 = *v3;
        v49 = *(_QWORD *)(a2 + v48);
        if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
          break;
        v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
        *(_QWORD *)(a2 + v48) = v49 + 1;
        v47 |= (unint64_t)(v50 & 0x7F) << v45;
        if ((v50 & 0x80) == 0)
          goto LABEL_85;
        v45 += 7;
        v14 = v46++ >= 9;
        if (v14)
        {
          v47 = 0;
          goto LABEL_87;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
      if (*(_BYTE *)(a2 + *v5))
        v47 = 0;
LABEL_87:
      *(_BYTE *)(a1 + 32) = v47 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDSlowWiFiReportReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  AWDLinkQualityMeasurements *v24;
  AWDSlowWiFiNotification *v25;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = objc_alloc_init(AWDLinkQualityMeasurements);
        objc_msgSend((id)a1, "addLinkQualSample:", v24);

        if (!PBReaderPlaceMark() || !AWDLinkQualityMeasurementsReadFrom((uint64_t)v24, a2))
          return 0;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_37;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_39;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_39:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v25 = objc_alloc_init(AWDSlowWiFiNotification);

        *(_QWORD *)(a1 + 24) = v25;
        if (!PBReaderPlaceMark() || (AWDSlowWiFiNotificationReadFrom((uint64_t)v25, a2) & 1) == 0)
          return 0;
      }
      PBReaderRecallMark();
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWAAssociatedAPInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unsigned int v17;
  int *v18;
  void *String;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = (v10 >> 3) - 1;
      if (v17 >= 5)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
      }
      else
      {
        v18 = off_24C10E488[v17];
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + *v18) = String;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWADiagnosisActionAssociationDifferencesReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 32) |= 0x80u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_78;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_80;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_78:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_80:
          v65 = v19 != 0;
          v66 = 28;
          goto LABEL_97;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 32) |= 8u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_84:
          v65 = v26 != 0;
          v66 = 24;
          goto LABEL_97;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + 32) |= 0x10u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v32 = 0;
                  goto LABEL_88;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_88:
          v65 = v32 != 0;
          v66 = 25;
          goto LABEL_97;
        case 4u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + 32) |= 0x20u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  v38 = 0;
                  goto LABEL_92;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v38 = 0;
LABEL_92:
          v65 = v38 != 0;
          v66 = 26;
          goto LABEL_97;
        case 5u:
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_BYTE *)(a1 + 32) |= 0x40u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  v44 = 0;
                  goto LABEL_96;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v44 = 0;
LABEL_96:
          v65 = v44 != 0;
          v66 = 27;
LABEL_97:
          *(_BYTE *)(a1 + v66) = v65;
          continue;
        case 6u:
          v48 = 0;
          v49 = 0;
          v50 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
              *(_QWORD *)(a2 + v51) = v52 + 1;
              v50 |= (unint64_t)(v53 & 0x7F) << v48;
              if (v53 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  v50 = 0;
                  goto LABEL_101;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v50 = 0;
LABEL_101:
          *(_QWORD *)(a1 + 8) = v50;
          continue;
        case 7u:
          v54 = 0;
          v55 = 0;
          v56 = 0;
          *(_BYTE *)(a1 + 32) |= 4u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v56 |= (unint64_t)(v59 & 0x7F) << v54;
              if (v59 < 0)
              {
                v54 += 7;
                v14 = v55++ >= 9;
                if (v14)
                {
                  LODWORD(v56) = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v56) = 0;
LABEL_105:
          v67 = 20;
          goto LABEL_110;
        case 8u:
          v60 = 0;
          v61 = 0;
          v56 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v62 = *v3;
        v63 = *(_QWORD *)(a2 + v62);
        if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          break;
        v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
        *(_QWORD *)(a2 + v62) = v63 + 1;
        v56 |= (unint64_t)(v64 & 0x7F) << v60;
        if ((v64 & 0x80) == 0)
          goto LABEL_107;
        v60 += 7;
        v14 = v61++ >= 9;
        if (v14)
        {
          LODWORD(v56) = 0;
          goto LABEL_109;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_107:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v56) = 0;
LABEL_109:
      v67 = 16;
LABEL_110:
      *(_DWORD *)(a1 + v67) = v56;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWAPeerDiscoveryInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 4u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__numPeersDiscovered;
              goto LABEL_53;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__numPeersDiscovered;
              goto LABEL_56;
            }
          }
          v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__numPeersDiscovered;
          goto LABEL_54;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__iOSPeers;
              goto LABEL_53;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__iOSPeers;
                goto LABEL_56;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__iOSPeers;
          goto LABEL_54;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__tvOSPeers;
              goto LABEL_53;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__tvOSPeers;
                goto LABEL_56;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__tvOSPeers;
          goto LABEL_54;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v19 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__macOSPeers;
          goto LABEL_54;
        }
        v35 += 7;
        v23 = v36++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__macOSPeers;
          goto LABEL_56;
        }
      }
      v24 = &OBJC_IVAR___AWDWAPeerDiscoveryInfo__macOSPeers;
LABEL_53:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_56:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWAQuickDpsStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int *v36;
  int *v37;
  int *v38;
  int *v39;
  int *v40;
  uint64_t v41;
  uint64_t result;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  BOOL v108;
  uint64_t v109;
  uint64_t v110;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v11 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v12 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v13 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v14 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v15 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v16 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v17 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v18 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v19 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v20 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v21 += 7;
        v27 = v22++ >= 9;
        if (v27)
        {
          v23 = 0;
          v28 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_14:
      if (v28 || (v23 & 7) == 4)
        break;
      switch((v23 >> 3))
      {
        case 1u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[760]) |= 0x800u;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_113;
            v30 += 7;
            v27 = v31++ >= 9;
            if (v27)
            {
              v32 = 0;
              goto LABEL_115;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_113:
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_115:
          v108 = v32 != 0;
          v109 = v8[761];
          goto LABEL_156;
        case 2u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[760]) |= 0x400u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                v27 = v44++ >= 9;
                if (v27)
                {
                  v45 = 0;
                  goto LABEL_119;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v45 = 0;
LABEL_119:
          v108 = v45 != 0;
          v109 = v10[762];
          goto LABEL_156;
        case 3u:
          v49 = 0;
          v50 = 0;
          v51 = 0;
          *(_WORD *)(a1 + v7[760]) |= 0x1000u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v51 |= (unint64_t)(v54 & 0x7F) << v49;
              if (v54 < 0)
              {
                v49 += 7;
                v27 = v50++ >= 9;
                if (v27)
                {
                  v51 = 0;
                  goto LABEL_123;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v51 = 0;
LABEL_123:
          v108 = v51 != 0;
          v109 = v11[763];
          goto LABEL_156;
        case 4u:
          v55 = 0;
          v56 = 0;
          v57 = 0;
          *(_WORD *)(a1 + v7[760]) |= 0x80u;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v59);
              *(_QWORD *)(a2 + v58) = v59 + 1;
              v57 |= (unint64_t)(v60 & 0x7F) << v55;
              if (v60 < 0)
              {
                v55 += 7;
                v27 = v56++ >= 9;
                if (v27)
                {
                  LODWORD(v57) = 0;
                  goto LABEL_127;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v57) = 0;
LABEL_127:
          v110 = v12[764];
          goto LABEL_161;
        case 5u:
          v61 = 0;
          v62 = 0;
          v57 = 0;
          *(_WORD *)(a1 + v7[760]) |= 8u;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v64);
              *(_QWORD *)(a2 + v63) = v64 + 1;
              v57 |= (unint64_t)(v65 & 0x7F) << v61;
              if (v65 < 0)
              {
                v61 += 7;
                v27 = v62++ >= 9;
                if (v27)
                {
                  LODWORD(v57) = 0;
                  goto LABEL_131;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v57) = 0;
LABEL_131:
          v110 = v13[765];
          goto LABEL_161;
        case 6u:
          v66 = 0;
          v67 = 0;
          v57 = 0;
          *(_WORD *)(a1 + v7[760]) |= 4u;
          while (2)
          {
            v68 = *v3;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v69);
              *(_QWORD *)(a2 + v68) = v69 + 1;
              v57 |= (unint64_t)(v70 & 0x7F) << v66;
              if (v70 < 0)
              {
                v66 += 7;
                v27 = v67++ >= 9;
                if (v27)
                {
                  LODWORD(v57) = 0;
                  goto LABEL_135;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v57) = 0;
LABEL_135:
          v110 = v14[766];
          goto LABEL_161;
        case 7u:
          v71 = 0;
          v72 = 0;
          v57 = 0;
          *(_WORD *)(a1 + v7[760]) |= 0x10u;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v74);
              *(_QWORD *)(a2 + v73) = v74 + 1;
              v57 |= (unint64_t)(v75 & 0x7F) << v71;
              if (v75 < 0)
              {
                v71 += 7;
                v27 = v72++ >= 9;
                if (v27)
                {
                  LODWORD(v57) = 0;
                  goto LABEL_139;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v57) = 0;
LABEL_139:
          v110 = v15[767];
          goto LABEL_161;
        case 8u:
          v76 = 0;
          v77 = 0;
          v57 = 0;
          *(_WORD *)(a1 + v7[760]) |= 0x40u;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v79);
              *(_QWORD *)(a2 + v78) = v79 + 1;
              v57 |= (unint64_t)(v80 & 0x7F) << v76;
              if (v80 < 0)
              {
                v76 += 7;
                v27 = v77++ >= 9;
                if (v27)
                {
                  LODWORD(v57) = 0;
                  goto LABEL_143;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v57) = 0;
LABEL_143:
          v110 = v16[768];
          goto LABEL_161;
        case 9u:
          v81 = 0;
          v82 = 0;
          v57 = 0;
          *(_WORD *)(a1 + v7[760]) |= 0x20u;
          while (2)
          {
            v83 = *v3;
            v84 = *(_QWORD *)(a2 + v83);
            if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v84);
              *(_QWORD *)(a2 + v83) = v84 + 1;
              v57 |= (unint64_t)(v85 & 0x7F) << v81;
              if (v85 < 0)
              {
                v81 += 7;
                v27 = v82++ >= 9;
                if (v27)
                {
                  LODWORD(v57) = 0;
                  goto LABEL_147;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v57) = 0;
LABEL_147:
          v110 = v17[769];
          goto LABEL_161;
        case 0xAu:
          v86 = 0;
          v87 = 0;
          v57 = 0;
          *(_WORD *)(a1 + v7[760]) |= 0x100u;
          while (2)
          {
            v88 = *v3;
            v89 = *(_QWORD *)(a2 + v88);
            if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v89);
              *(_QWORD *)(a2 + v88) = v89 + 1;
              v57 |= (unint64_t)(v90 & 0x7F) << v86;
              if (v90 < 0)
              {
                v86 += 7;
                v27 = v87++ >= 9;
                if (v27)
                {
                  LODWORD(v57) = 0;
                  goto LABEL_151;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v57) = 0;
LABEL_151:
          v110 = v18[770];
          goto LABEL_161;
        case 0xBu:
          v91 = 0;
          v92 = 0;
          v93 = 0;
          *(_WORD *)(a1 + v7[760]) |= 0x200u;
          while (2)
          {
            v94 = *v3;
            v95 = *(_QWORD *)(a2 + v94);
            if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v95);
              *(_QWORD *)(a2 + v94) = v95 + 1;
              v93 |= (unint64_t)(v96 & 0x7F) << v91;
              if (v96 < 0)
              {
                v91 += 7;
                v27 = v92++ >= 9;
                if (v27)
                {
                  v93 = 0;
                  goto LABEL_155;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v93 = 0;
LABEL_155:
          v108 = v93 != 0;
          v109 = v19[771];
LABEL_156:
          *(_BYTE *)(a1 + v109) = v108;
          continue;
        case 0xCu:
          v97 = 0;
          v98 = 0;
          v57 = 0;
          *(_WORD *)(a1 + v7[760]) |= 2u;
          while (2)
          {
            v99 = *v3;
            v100 = *(_QWORD *)(a2 + v99);
            if (v100 == -1 || v100 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v100);
              *(_QWORD *)(a2 + v99) = v100 + 1;
              v57 |= (unint64_t)(v101 & 0x7F) << v97;
              if (v101 < 0)
              {
                v97 += 7;
                v27 = v98++ >= 9;
                if (v27)
                {
                  LODWORD(v57) = 0;
                  goto LABEL_160;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v57) = 0;
LABEL_160:
          v110 = v20[772];
LABEL_161:
          *(_DWORD *)(a1 + v110) = v57;
          continue;
        case 0xDu:
          v102 = 0;
          v103 = 0;
          v104 = 0;
          *(_WORD *)(a1 + v7[760]) |= 1u;
          break;
        default:
          v36 = v8;
          v37 = v10;
          v38 = v7;
          v39 = v11;
          v40 = v12;
          v41 = a1;
          result = PBReaderSkipValueWithTag();
          v20 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v13 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          a1 = v41;
          v14 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v40;
          v15 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v11 = v39;
          v16 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v7 = v38;
          v19 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v10 = v37;
          v17 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          v8 = v36;
          v18 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v105 = *v3;
        v106 = *(_QWORD *)(a2 + v105);
        if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v4))
          break;
        v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v106);
        *(_QWORD *)(a2 + v105) = v106 + 1;
        v104 |= (unint64_t)(v107 & 0x7F) << v102;
        if ((v107 & 0x80) == 0)
          goto LABEL_165;
        v102 += 7;
        v27 = v103++ >= 9;
        if (v27)
        {
          v104 = 0;
          goto LABEL_167;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_165:
      if (*(_BYTE *)(a2 + *v5))
        v104 = 0;
LABEL_167:
      *(_QWORD *)(a1 + 8) = v104;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWASymptomsDnsStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  char v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  char v152;
  char v153;
  unsigned int v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  char v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  uint64_t v165;
  BOOL v166;
  uint64_t v167;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x100000u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_218;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_220;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_218:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_220:
          v165 = 92;
          goto LABEL_313;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x400u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_224;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_224:
          v165 = 52;
          goto LABEL_313;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x800u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_228;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_228:
          v165 = 56;
          goto LABEL_313;
        case 4u:
          v34 = 0;
          v35 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x1000u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v19 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_232;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_232:
          v165 = 60;
          goto LABEL_313;
        case 5u:
          v39 = 0;
          v40 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x2000u;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v42 + 1;
              v19 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                v14 = v40++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_236;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_236:
          v165 = 64;
          goto LABEL_313;
        case 6u:
          v44 = 0;
          v45 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 2u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v19 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                v14 = v45++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_240;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_240:
          v165 = 16;
          goto LABEL_313;
        case 7u:
          v49 = 0;
          v50 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x80u;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
              *(_QWORD *)(a2 + v51) = v52 + 1;
              v19 |= (unint64_t)(v53 & 0x7F) << v49;
              if (v53 < 0)
              {
                v49 += 7;
                v14 = v50++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_244;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_244:
          v165 = 40;
          goto LABEL_313;
        case 8u:
          v54 = 0;
          v55 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x8000u;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v19 |= (unint64_t)(v58 & 0x7F) << v54;
              if (v58 < 0)
              {
                v54 += 7;
                v14 = v55++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_248;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_248:
          v165 = 72;
          goto LABEL_313;
        case 9u:
          v59 = 0;
          v60 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 8u;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v19 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                v14 = v60++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_252;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_252:
          v165 = 24;
          goto LABEL_313;
        case 0xAu:
          v64 = 0;
          v65 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x200u;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v19 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                v14 = v65++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_256;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_256:
          v165 = 48;
          goto LABEL_313;
        case 0xBu:
          v69 = 0;
          v70 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x20000u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v19 |= (unint64_t)(v73 & 0x7F) << v69;
              if (v73 < 0)
              {
                v69 += 7;
                v14 = v70++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_260;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_260:
          v165 = 80;
          goto LABEL_313;
        case 0xCu:
          v74 = 0;
          v75 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x20u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v19 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v14 = v75++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_264;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_264:
          v165 = 32;
          goto LABEL_313;
        case 0xDu:
          v79 = 0;
          v80 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x400000u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v19 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v14 = v80++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_268;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_268:
          v165 = 100;
          goto LABEL_313;
        case 0xEu:
          v84 = 0;
          v85 = 0;
          v86 = 0;
          *(_DWORD *)(a1 + 112) |= 0x1000000u;
          while (2)
          {
            v87 = *v3;
            v88 = *(_QWORD *)(a2 + v87);
            if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
              *(_QWORD *)(a2 + v87) = v88 + 1;
              v86 |= (unint64_t)(v89 & 0x7F) << v84;
              if (v89 < 0)
              {
                v84 += 7;
                v14 = v85++ >= 9;
                if (v14)
                {
                  v86 = 0;
                  goto LABEL_272;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v86 = 0;
LABEL_272:
          v166 = v86 != 0;
          v167 = 105;
          goto LABEL_332;
        case 0xFu:
          v90 = 0;
          v91 = 0;
          v92 = 0;
          *(_DWORD *)(a1 + 112) |= 0x8000000u;
          while (2)
          {
            v93 = *v3;
            v94 = *(_QWORD *)(a2 + v93);
            if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
              *(_QWORD *)(a2 + v93) = v94 + 1;
              v92 |= (unint64_t)(v95 & 0x7F) << v90;
              if (v95 < 0)
              {
                v90 += 7;
                v14 = v91++ >= 9;
                if (v14)
                {
                  v92 = 0;
                  goto LABEL_276;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v92 = 0;
LABEL_276:
          v166 = v92 != 0;
          v167 = 108;
          goto LABEL_332;
        case 0x10u:
          v96 = 0;
          v97 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x80000u;
          while (2)
          {
            v98 = *v3;
            v99 = *(_QWORD *)(a2 + v98);
            if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
              *(_QWORD *)(a2 + v98) = v99 + 1;
              v19 |= (unint64_t)(v100 & 0x7F) << v96;
              if (v100 < 0)
              {
                v96 += 7;
                v14 = v97++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_280;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_280:
          v165 = 88;
          goto LABEL_313;
        case 0x11u:
          v101 = 0;
          v102 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x40000u;
          while (2)
          {
            v103 = *v3;
            v104 = *(_QWORD *)(a2 + v103);
            if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
              *(_QWORD *)(a2 + v103) = v104 + 1;
              v19 |= (unint64_t)(v105 & 0x7F) << v101;
              if (v105 < 0)
              {
                v101 += 7;
                v14 = v102++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_284;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_284:
          v165 = 84;
          goto LABEL_313;
        case 0x12u:
          v106 = 0;
          v107 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x40u;
          while (2)
          {
            v108 = *v3;
            v109 = *(_QWORD *)(a2 + v108);
            if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
              *(_QWORD *)(a2 + v108) = v109 + 1;
              v19 |= (unint64_t)(v110 & 0x7F) << v106;
              if (v110 < 0)
              {
                v106 += 7;
                v14 = v107++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_288;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_288:
          v165 = 36;
          goto LABEL_313;
        case 0x13u:
          v111 = 0;
          v112 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x4000u;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
              *(_QWORD *)(a2 + v113) = v114 + 1;
              v19 |= (unint64_t)(v115 & 0x7F) << v111;
              if (v115 < 0)
              {
                v111 += 7;
                v14 = v112++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_292;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_292:
          v165 = 68;
          goto LABEL_313;
        case 0x14u:
          v116 = 0;
          v117 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 4u;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
              *(_QWORD *)(a2 + v118) = v119 + 1;
              v19 |= (unint64_t)(v120 & 0x7F) << v116;
              if (v120 < 0)
              {
                v116 += 7;
                v14 = v117++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_296;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_296:
          v165 = 20;
          goto LABEL_313;
        case 0x15u:
          v121 = 0;
          v122 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x100u;
          while (2)
          {
            v123 = *v3;
            v124 = *(_QWORD *)(a2 + v123);
            if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
              *(_QWORD *)(a2 + v123) = v124 + 1;
              v19 |= (unint64_t)(v125 & 0x7F) << v121;
              if (v125 < 0)
              {
                v121 += 7;
                v14 = v122++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_300;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_300:
          v165 = 44;
          goto LABEL_313;
        case 0x16u:
          v126 = 0;
          v127 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x10000u;
          while (2)
          {
            v128 = *v3;
            v129 = *(_QWORD *)(a2 + v128);
            if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
              *(_QWORD *)(a2 + v128) = v129 + 1;
              v19 |= (unint64_t)(v130 & 0x7F) << v126;
              if (v130 < 0)
              {
                v126 += 7;
                v14 = v127++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_304;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_304:
          v165 = 76;
          goto LABEL_313;
        case 0x17u:
          v131 = 0;
          v132 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x10u;
          while (2)
          {
            v133 = *v3;
            v134 = *(_QWORD *)(a2 + v133);
            if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
              *(_QWORD *)(a2 + v133) = v134 + 1;
              v19 |= (unint64_t)(v135 & 0x7F) << v131;
              if (v135 < 0)
              {
                v131 += 7;
                v14 = v132++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_308;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_308:
          v165 = 28;
          goto LABEL_313;
        case 0x18u:
          v136 = 0;
          v137 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 0x200000u;
          while (2)
          {
            v138 = *v3;
            v139 = *(_QWORD *)(a2 + v138);
            if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
              *(_QWORD *)(a2 + v138) = v139 + 1;
              v19 |= (unint64_t)(v140 & 0x7F) << v136;
              if (v140 < 0)
              {
                v136 += 7;
                v14 = v137++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_312;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_312:
          v165 = 96;
LABEL_313:
          *(_DWORD *)(a1 + v165) = v19;
          continue;
        case 0x19u:
          v141 = 0;
          v142 = 0;
          v143 = 0;
          *(_DWORD *)(a1 + 112) |= 1u;
          while (2)
          {
            v144 = *v3;
            v145 = *(_QWORD *)(a2 + v144);
            if (v145 == -1 || v145 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v146 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v145);
              *(_QWORD *)(a2 + v144) = v145 + 1;
              v143 |= (unint64_t)(v146 & 0x7F) << v141;
              if (v146 < 0)
              {
                v141 += 7;
                v14 = v142++ >= 9;
                if (v14)
                {
                  v143 = 0;
                  goto LABEL_319;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v143 = 0;
LABEL_319:
          *(_QWORD *)(a1 + 8) = v143;
          continue;
        case 0x1Au:
          v147 = 0;
          v148 = 0;
          v149 = 0;
          *(_DWORD *)(a1 + 112) |= 0x800000u;
          while (2)
          {
            v150 = *v3;
            v151 = *(_QWORD *)(a2 + v150);
            if (v151 == -1 || v151 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v152 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v151);
              *(_QWORD *)(a2 + v150) = v151 + 1;
              v149 |= (unint64_t)(v152 & 0x7F) << v147;
              if (v152 < 0)
              {
                v147 += 7;
                v14 = v148++ >= 9;
                if (v14)
                {
                  v149 = 0;
                  goto LABEL_323;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v149 = 0;
LABEL_323:
          v166 = v149 != 0;
          v167 = 104;
          goto LABEL_332;
        case 0x1Bu:
          v153 = 0;
          v154 = 0;
          v155 = 0;
          *(_DWORD *)(a1 + 112) |= 0x4000000u;
          while (2)
          {
            v156 = *v3;
            v157 = *(_QWORD *)(a2 + v156);
            if (v157 == -1 || v157 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v158 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v157);
              *(_QWORD *)(a2 + v156) = v157 + 1;
              v155 |= (unint64_t)(v158 & 0x7F) << v153;
              if (v158 < 0)
              {
                v153 += 7;
                v14 = v154++ >= 9;
                if (v14)
                {
                  v155 = 0;
                  goto LABEL_327;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v155 = 0;
LABEL_327:
          v166 = v155 != 0;
          v167 = 107;
          goto LABEL_332;
        case 0x1Cu:
          v159 = 0;
          v160 = 0;
          v161 = 0;
          *(_DWORD *)(a1 + 112) |= 0x2000000u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v162 = *v3;
        v163 = *(_QWORD *)(a2 + v162);
        if (v163 == -1 || v163 >= *(_QWORD *)(a2 + *v4))
          break;
        v164 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v163);
        *(_QWORD *)(a2 + v162) = v163 + 1;
        v161 |= (unint64_t)(v164 & 0x7F) << v159;
        if ((v164 & 0x80) == 0)
          goto LABEL_329;
        v159 += 7;
        v14 = v160++ >= 9;
        if (v14)
        {
          v161 = 0;
          goto LABEL_331;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_329:
      if (*(_BYTE *)(a2 + *v5))
        v161 = 0;
LABEL_331:
      v166 = v161 != 0;
      v167 = 106;
LABEL_332:
      *(_BYTE *)(a1 + v167) = v166;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWPA2CountersReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  int *v29;
  BOOL v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  int *v86;
  int *v87;
  uint64_t v88;
  int *v89;
  int *v90;
  uint64_t v91;
  char v92;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = &OBJC_IVAR___AWDWPA2Counters__tkipmicfaill;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDWPA2Counters__tkipcntrmsr;
    v12 = &OBJC_IVAR___AWDWPA2Counters__tkipreplay;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 0x80u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_117;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_121;
          }
          v29 = v9;
          goto LABEL_118;
        case 2u:
          v31 = 0;
          v32 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 0x20u;
          while (2)
          {
            v33 = *v4;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_117;
            }
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v24 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v28 = 0;
              v31 += 7;
              v29 = v11;
              v30 = v32++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_118;
        case 3u:
          v36 = 0;
          v37 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 0x100u;
          while (2)
          {
            v38 = *v4;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_117;
            }
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v24 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v28 = 0;
              v36 += 7;
              v29 = v12;
              v30 = v37++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_118;
        case 4u:
          v41 = 0;
          v42 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 1u;
          while (2)
          {
            v43 = *v4;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWPA2Counters__ccmpfmterr;
              goto LABEL_117;
            }
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v24 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v28 = 0;
              v41 += 7;
              v29 = &OBJC_IVAR___AWDWPA2Counters__ccmpfmterr;
              v30 = v42++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWPA2Counters__ccmpfmterr;
          goto LABEL_118;
        case 5u:
          v46 = 0;
          v47 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 2u;
          while (2)
          {
            v48 = *v4;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWPA2Counters__ccmpreplay;
              goto LABEL_117;
            }
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v24 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v28 = 0;
              v46 += 7;
              v29 = &OBJC_IVAR___AWDWPA2Counters__ccmpreplay;
              v30 = v47++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWPA2Counters__ccmpreplay;
          goto LABEL_118;
        case 6u:
          v51 = 0;
          v52 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 4u;
          while (2)
          {
            v53 = *v4;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWPA2Counters__ccmpundec;
              goto LABEL_117;
            }
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v24 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v28 = 0;
              v51 += 7;
              v29 = &OBJC_IVAR___AWDWPA2Counters__ccmpundec;
              v30 = v52++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWPA2Counters__ccmpundec;
          goto LABEL_118;
        case 7u:
          v56 = 0;
          v57 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 0x10u;
          while (2)
          {
            v58 = *v4;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWPA2Counters__fourwayfail;
              goto LABEL_117;
            }
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v24 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v28 = 0;
              v56 += 7;
              v29 = &OBJC_IVAR___AWDWPA2Counters__fourwayfail;
              v30 = v57++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWPA2Counters__fourwayfail;
          goto LABEL_118;
        case 8u:
          v61 = 0;
          v62 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 0x800u;
          while (2)
          {
            v63 = *v4;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWPA2Counters__wepundec;
              goto LABEL_117;
            }
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v24 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v28 = 0;
              v61 += 7;
              v29 = &OBJC_IVAR___AWDWPA2Counters__wepundec;
              v30 = v62++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWPA2Counters__wepundec;
          goto LABEL_118;
        case 9u:
          v66 = 0;
          v67 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 0x400u;
          while (2)
          {
            v68 = *v4;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWPA2Counters__wepicverr;
              goto LABEL_117;
            }
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v24 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v28 = 0;
              v66 += 7;
              v29 = &OBJC_IVAR___AWDWPA2Counters__wepicverr;
              v30 = v67++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWPA2Counters__wepicverr;
          goto LABEL_118;
        case 0xAu:
          v71 = 0;
          v72 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 8u;
          while (2)
          {
            v73 = *v4;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWPA2Counters__decsuccess;
              goto LABEL_117;
            }
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v24 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v28 = 0;
              v71 += 7;
              v29 = &OBJC_IVAR___AWDWPA2Counters__decsuccess;
              v30 = v72++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWPA2Counters__decsuccess;
          goto LABEL_118;
        case 0xBu:
          v76 = 0;
          v77 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 0x40u;
          while (2)
          {
            v78 = *v4;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWPA2Counters__tkipicverr;
              goto LABEL_117;
            }
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v24 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v28 = 0;
              v76 += 7;
              v29 = &OBJC_IVAR___AWDWPA2Counters__tkipicverr;
              v30 = v77++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWPA2Counters__tkipicverr;
          goto LABEL_118;
        case 0xCu:
          v81 = 0;
          v82 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[803]) |= 0x200u;
          break;
        default:
          v86 = v9;
          v87 = v11;
          v88 = v2;
          v89 = v8;
          v90 = v12;
          v91 = a1;
          v92 = PBReaderSkipValueWithTag();
          a1 = v91;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v90;
          v8 = v89;
          v2 = v88;
          v11 = v87;
          v9 = v86;
          if ((v92 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v83 = *v4;
        v84 = *(_QWORD *)(a2 + v83);
        if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v5))
          break;
        v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v84);
        *(_QWORD *)(a2 + v83) = v84 + 1;
        v24 |= (unint64_t)(v85 & 0x7F) << v81;
        if ((v85 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDWPA2Counters__wepexcluded;
          goto LABEL_118;
        }
        v28 = 0;
        v81 += 7;
        v29 = &OBJC_IVAR___AWDWPA2Counters__wepexcluded;
        v30 = v82++ > 8;
        if (v30)
          goto LABEL_121;
      }
      v29 = &OBJC_IVAR___AWDWPA2Counters__wepexcluded;
LABEL_117:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_118:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_121:
      *(_QWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDWiFiActionFrameEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *Data;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t v96;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_128;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_130;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_128:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_130:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          Data = (void *)PBReaderReadData();

          *(_QWORD *)(a1 + 72) = Data;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x1000u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_134;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_134:
          v96 = 60;
          goto LABEL_187;
        case 4u:
          v31 = 0;
          v32 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x400u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v27 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_138;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_138:
          v96 = 52;
          goto LABEL_187;
        case 5u:
          v36 = 0;
          v37 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 2u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v27 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_142;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_142:
          v96 = 16;
          goto LABEL_187;
        case 6u:
          v41 = 0;
          v42 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x800u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v27 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_146;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_146:
          v96 = 56;
          goto LABEL_187;
        case 7u:
          v46 = 0;
          v47 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x4000u;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
              *(_QWORD *)(a2 + v48) = v49 + 1;
              v27 |= (unint64_t)(v50 & 0x7F) << v46;
              if (v50 < 0)
              {
                v46 += 7;
                v14 = v47++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_150;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_150:
          v96 = 80;
          goto LABEL_187;
        case 8u:
          v51 = 0;
          v52 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x2000u;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
              *(_QWORD *)(a2 + v53) = v54 + 1;
              v27 |= (unint64_t)(v55 & 0x7F) << v51;
              if (v55 < 0)
              {
                v51 += 7;
                v14 = v52++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_154;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_154:
          v96 = 64;
          goto LABEL_187;
        case 9u:
          v56 = 0;
          v57 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x20u;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
              *(_QWORD *)(a2 + v58) = v59 + 1;
              v27 |= (unint64_t)(v60 & 0x7F) << v56;
              if (v60 < 0)
              {
                v56 += 7;
                v14 = v57++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_158;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_158:
          v96 = 32;
          goto LABEL_187;
        case 0xAu:
          v61 = 0;
          v62 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x200u;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
              *(_QWORD *)(a2 + v63) = v64 + 1;
              v27 |= (unint64_t)(v65 & 0x7F) << v61;
              if (v65 < 0)
              {
                v61 += 7;
                v14 = v62++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_162:
          v96 = 48;
          goto LABEL_187;
        case 0xBu:
          v66 = 0;
          v67 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x100u;
          while (2)
          {
            v68 = *v3;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
              *(_QWORD *)(a2 + v68) = v69 + 1;
              v27 |= (unint64_t)(v70 & 0x7F) << v66;
              if (v70 < 0)
              {
                v66 += 7;
                v14 = v67++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_166;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_166:
          v96 = 44;
          goto LABEL_187;
        case 0xCu:
          v71 = 0;
          v72 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x80u;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
              *(_QWORD *)(a2 + v73) = v74 + 1;
              v27 |= (unint64_t)(v75 & 0x7F) << v71;
              if (v75 < 0)
              {
                v71 += 7;
                v14 = v72++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_170;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_170:
          v96 = 40;
          goto LABEL_187;
        case 0xDu:
          v76 = 0;
          v77 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 4u;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
              *(_QWORD *)(a2 + v78) = v79 + 1;
              v27 |= (unint64_t)(v80 & 0x7F) << v76;
              if (v80 < 0)
              {
                v76 += 7;
                v14 = v77++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_174;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_174:
          v96 = 20;
          goto LABEL_187;
        case 0xEu:
          v81 = 0;
          v82 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x10u;
          while (2)
          {
            v83 = *v3;
            v84 = *(_QWORD *)(a2 + v83);
            if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
              *(_QWORD *)(a2 + v83) = v84 + 1;
              v27 |= (unint64_t)(v85 & 0x7F) << v81;
              if (v85 < 0)
              {
                v81 += 7;
                v14 = v82++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_178:
          v96 = 28;
          goto LABEL_187;
        case 0xFu:
          v86 = 0;
          v87 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 8u;
          while (2)
          {
            v88 = *v3;
            v89 = *(_QWORD *)(a2 + v88);
            if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
              *(_QWORD *)(a2 + v88) = v89 + 1;
              v27 |= (unint64_t)(v90 & 0x7F) << v86;
              if (v90 < 0)
              {
                v86 += 7;
                v14 = v87++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_182:
          v96 = 24;
          goto LABEL_187;
        case 0x10u:
          v91 = 0;
          v92 = 0;
          v27 = 0;
          *(_WORD *)(a1 + 84) |= 0x40u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v93 = *v3;
        v94 = *(_QWORD *)(a2 + v93);
        if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
          break;
        v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
        *(_QWORD *)(a2 + v93) = v94 + 1;
        v27 |= (unint64_t)(v95 & 0x7F) << v91;
        if ((v95 & 0x80) == 0)
          goto LABEL_184;
        v91 += 7;
        v14 = v92++ >= 9;
        if (v14)
        {
          LODWORD(v27) = 0;
          goto LABEL_186;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_184:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v27) = 0;
LABEL_186:
      v96 = 36;
LABEL_187:
      *(_DWORD *)(a1 + v96) = v27;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiAwdlSidecarReadFrom(uint64_t a1, uint64_t a2)
{
  __int16 *v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  int *v58;
  int *v59;
  AWDSidecarBssSteering *v60;
  __int16 *v61;
  int *v62;
  int *v63;
  AWDSidecarPeerTraffic *v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t result;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = (int *)MEMORY[0x24BE7AF30];
    v9 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v6))
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v4;
          v14 = *(_QWORD *)(a2 + v13);
          if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v5))
            break;
          v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v14);
          *(_QWORD *)(a2 + v13) = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_12;
          v10 += 7;
          v16 = v11++ >= 9;
          if (v16)
          {
            v12 = 0;
            v17 = *(unsigned __int8 *)(a2 + *v6);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
        v17 = *(unsigned __int8 *)(a2 + *v6);
        if (*(_BYTE *)(a2 + *v6))
          v12 = 0;
LABEL_14:
        v18 = v12 & 7;
        if (!v17 && v18 != 4)
        {
          switch((v12 >> 3))
          {
            case 1u:
              v20 = 0;
              v21 = 0;
              v22 = 0;
              *(_WORD *)(a1 + 100) |= 4u;
              while (1)
              {
                v23 = *v4;
                v24 = *(_QWORD *)(a2 + v23);
                if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v5))
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v24);
                *(_QWORD *)(a2 + v23) = v24 + 1;
                v22 |= (unint64_t)(v25 & 0x7F) << v20;
                if ((v25 & 0x80) == 0)
                  goto LABEL_104;
                v20 += 7;
                v16 = v21++ >= 9;
                if (v16)
                {
                  v22 = 0;
                  goto LABEL_106;
                }
              }
              *(_BYTE *)(a2 + *v6) = 1;
LABEL_104:
              if (*(_BYTE *)(a2 + *v6))
                v22 = 0;
LABEL_106:
              v82 = 48;
              goto LABEL_115;
            case 2u:
              v26 = 0;
              v27 = 0;
              v22 = 0;
              *(_WORD *)(a1 + 100) |= 2u;
              while (2)
              {
                v28 = *v4;
                v29 = *(_QWORD *)(a2 + v28);
                if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v5))
                {
                  *(_BYTE *)(a2 + *v6) = 1;
                }
                else
                {
                  v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v29);
                  *(_QWORD *)(a2 + v28) = v29 + 1;
                  v22 |= (unint64_t)(v30 & 0x7F) << v26;
                  if (v30 < 0)
                  {
                    v26 += 7;
                    v16 = v27++ >= 9;
                    if (v16)
                    {
                      v22 = 0;
                      goto LABEL_110;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v6))
                v22 = 0;
LABEL_110:
              v82 = 40;
              goto LABEL_115;
            case 3u:
              v31 = 0;
              v32 = 0;
              v22 = 0;
              *(_WORD *)(a1 + 100) |= 1u;
              while (2)
              {
                v33 = *v4;
                v34 = *(_QWORD *)(a2 + v33);
                if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v5))
                {
                  *(_BYTE *)(a2 + *v6) = 1;
                }
                else
                {
                  v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v34);
                  *(_QWORD *)(a2 + v33) = v34 + 1;
                  v22 |= (unint64_t)(v35 & 0x7F) << v31;
                  if (v35 < 0)
                  {
                    v31 += 7;
                    v16 = v32++ >= 9;
                    if (v16)
                    {
                      v22 = 0;
                      goto LABEL_114;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v6))
                v22 = 0;
LABEL_114:
              v82 = 32;
LABEL_115:
              *(_QWORD *)(a1 + v82) = v22;
              goto LABEL_141;
            case 4u:
              v36 = 0;
              v37 = 0;
              v38 = 0;
              *(_WORD *)(a1 + 100) |= 8u;
              while (2)
              {
                v39 = *v4;
                v40 = *(_QWORD *)(a2 + v39);
                if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v5))
                {
                  *(_BYTE *)(a2 + *v6) = 1;
                }
                else
                {
                  v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v40);
                  *(_QWORD *)(a2 + v39) = v40 + 1;
                  v38 |= (unint64_t)(v41 & 0x7F) << v36;
                  if (v41 < 0)
                  {
                    v36 += 7;
                    v16 = v37++ >= 9;
                    if (v16)
                    {
                      LODWORD(v38) = 0;
                      goto LABEL_119;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v6))
                LODWORD(v38) = 0;
LABEL_119:
              v83 = 56;
              goto LABEL_140;
            case 5u:
              v42 = 0;
              v43 = 0;
              v38 = 0;
              *(_WORD *)(a1 + 100) |= 0x40u;
              while (2)
              {
                v44 = *v4;
                v45 = *(_QWORD *)(a2 + v44);
                if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v5))
                {
                  *(_BYTE *)(a2 + *v6) = 1;
                }
                else
                {
                  v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v45);
                  *(_QWORD *)(a2 + v44) = v45 + 1;
                  v38 |= (unint64_t)(v46 & 0x7F) << v42;
                  if (v46 < 0)
                  {
                    v42 += 7;
                    v16 = v43++ >= 9;
                    if (v16)
                    {
                      LODWORD(v38) = 0;
                      goto LABEL_123;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v6))
                LODWORD(v38) = 0;
LABEL_123:
              v83 = 68;
              goto LABEL_140;
            case 6u:
              v47 = 0;
              v48 = 0;
              v38 = 0;
              *(_WORD *)(a1 + 100) |= 0x80u;
              while (2)
              {
                v49 = *v4;
                v50 = *(_QWORD *)(a2 + v49);
                if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v5))
                {
                  *(_BYTE *)(a2 + *v6) = 1;
                }
                else
                {
                  v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v50);
                  *(_QWORD *)(a2 + v49) = v50 + 1;
                  v38 |= (unint64_t)(v51 & 0x7F) << v47;
                  if (v51 < 0)
                  {
                    v47 += 7;
                    v16 = v48++ >= 9;
                    if (v16)
                    {
                      LODWORD(v38) = 0;
                      goto LABEL_127;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v6))
                LODWORD(v38) = 0;
LABEL_127:
              v83 = 72;
              goto LABEL_140;
            case 7u:
              v52 = 0;
              v53 = 0;
              v54 = 0;
              *(_WORD *)(a1 + 100) |= 0x100u;
              while (2)
              {
                v55 = *v4;
                v56 = *(_QWORD *)(a2 + v55);
                if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
                {
                  *(_BYTE *)(a2 + *v6) = 1;
                }
                else
                {
                  v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v56);
                  *(_QWORD *)(a2 + v55) = v56 + 1;
                  v54 |= (unint64_t)(v57 & 0x7F) << v52;
                  if (v57 < 0)
                  {
                    v52 += 7;
                    v16 = v53++ >= 9;
                    if (v16)
                    {
                      v54 = 0;
                      goto LABEL_131;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v6))
                v54 = 0;
LABEL_131:
              *(_BYTE *)(a1 + 96) = v54 != 0;
              goto LABEL_141;
            case 8u:
              v58 = v6;
              v59 = v9;
              v60 = objc_alloc_init(AWDSidecarBssSteering);

              *(_QWORD *)(a1 + 80) = v60;
              if (!PBReaderPlaceMark() || !AWDSidecarBssSteeringReadFrom((uint64_t)v60, a2))
                return 0;
              PBReaderRecallMark();
              v9 = v59;
              v6 = v58;
              v2 = &jpt_209325A8C;
              goto LABEL_141;
            case 9u:
              v61 = v2;
              v62 = v6;
              v63 = v9;
              v64 = objc_alloc_init(AWDSidecarPeerTraffic);

              *(_QWORD *)(a1 + 88) = v64;
              if (!PBReaderPlaceMark() || (AWDSidecarPeerTrafficReadFrom(v64, a2) & 1) == 0)
                return 0;
              PBReaderRecallMark();
              v9 = v63;
              v6 = v62;
              v2 = v61;
              goto LABEL_141;
            case 0xAu:
              v65 = 0;
              v66 = 0;
              v38 = 0;
              *(_WORD *)(a1 + 100) |= 0x10u;
              while (2)
              {
                v67 = *v4;
                v68 = *(_QWORD *)(a2 + v67);
                if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v5))
                {
                  *(_BYTE *)(a2 + *v6) = 1;
                }
                else
                {
                  v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v68);
                  *(_QWORD *)(a2 + v67) = v68 + 1;
                  v38 |= (unint64_t)(v69 & 0x7F) << v65;
                  if (v69 < 0)
                  {
                    v65 += 7;
                    v16 = v66++ >= 9;
                    if (v16)
                    {
                      LODWORD(v38) = 0;
                      goto LABEL_135;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v6))
                LODWORD(v38) = 0;
LABEL_135:
              v83 = 60;
              goto LABEL_140;
            case 0xBu:
              v70 = 0;
              v71 = 0;
              v38 = 0;
              *(_WORD *)(a1 + 100) |= 0x20u;
              while (2)
              {
                v72 = *v4;
                v73 = *(_QWORD *)(a2 + v72);
                if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v5))
                {
                  *(_BYTE *)(a2 + *v6) = 1;
                }
                else
                {
                  v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v73);
                  *(_QWORD *)(a2 + v72) = v73 + 1;
                  v38 |= (unint64_t)(v74 & 0x7F) << v70;
                  if (v74 < 0)
                  {
                    v70 += 7;
                    v16 = v71++ >= 9;
                    if (v16)
                    {
                      LODWORD(v38) = 0;
                      goto LABEL_139;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v6))
                LODWORD(v38) = 0;
LABEL_139:
              v83 = 64;
LABEL_140:
              *(_DWORD *)(a1 + v83) = v38;
              goto LABEL_141;
            case 0xCu:
              if (v18 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5) && !*(_BYTE *)(a2 + *v6))
                {
                  v76 = 0;
                  v77 = 0;
                  v78 = 0;
                  while (1)
                  {
                    v79 = *v4;
                    v80 = *(_QWORD *)(a2 + v79);
                    if (v80 == -1 || v80 >= *(_QWORD *)(a2 + *v5))
                      break;
                    v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v80);
                    *(_QWORD *)(a2 + v79) = v80 + 1;
                    v78 |= (unint64_t)(v81 & 0x7F) << v76;
                    if (v81 < 0)
                    {
                      v76 += 7;
                      v16 = v77++ >= 9;
                      if (!v16)
                        continue;
                    }
                    goto LABEL_102;
                  }
                  *(_BYTE *)(a2 + *v6) = 1;
LABEL_102:
                  PBRepeatedUInt32Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                v84 = 0;
                v85 = 0;
                v86 = 0;
                while (1)
                {
                  v87 = *v4;
                  v88 = *(_QWORD *)(a2 + v87);
                  if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v5))
                    break;
                  v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v88);
                  *(_QWORD *)(a2 + v87) = v88 + 1;
                  v86 |= (unint64_t)(v89 & 0x7F) << v84;
                  if (v89 < 0)
                  {
                    v84 += 7;
                    v16 = v85++ >= 9;
                    if (!v16)
                      continue;
                  }
                  goto LABEL_152;
                }
                *(_BYTE *)(a2 + *v6) = 1;
LABEL_152:
                PBRepeatedUInt32Add();
              }
LABEL_141:
              if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
                return *(_BYTE *)(a2 + *v6) == 0;
              continue;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_141;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDWiFiAwdlSidecarCoalescedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  AWDSidecarBssSteering *v87;
  AWDSidecarBssSteering *v88;
  AWDSidecarPeerTraffic *v89;
  uint64_t v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  void *String;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 132) |= 0x10u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_139;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_141;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_139:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_141:
        v102 = 40;
        goto LABEL_174;
      case 2u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 132) |= 8u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_145:
        v102 = 32;
        goto LABEL_174;
      case 3u:
        v29 = 0;
        v30 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 132) |= 4u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v19 |= (unint64_t)(v33 & 0x7F) << v29;
            if (v33 < 0)
            {
              v29 += 7;
              v14 = v30++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_149:
        v102 = 24;
        goto LABEL_174;
      case 4u:
        v34 = 0;
        v35 = 0;
        v36 = 0;
        *(_WORD *)(a1 + 132) |= 0x400u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v36 |= (unint64_t)(v39 & 0x7F) << v34;
            if (v39 < 0)
            {
              v34 += 7;
              v14 = v35++ >= 9;
              if (v14)
              {
                LODWORD(v36) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v36) = 0;
LABEL_153:
        v103 = 88;
        goto LABEL_200;
      case 5u:
        v40 = 0;
        v41 = 0;
        v36 = 0;
        *(_WORD *)(a1 + 132) |= 0x800u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v36 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                LODWORD(v36) = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v36) = 0;
LABEL_157:
        v103 = 92;
        goto LABEL_200;
      case 6u:
        v45 = 0;
        v46 = 0;
        v36 = 0;
        *(_WORD *)(a1 + 132) |= 0x1000u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v36 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                LODWORD(v36) = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v36) = 0;
LABEL_161:
        v103 = 96;
        goto LABEL_200;
      case 7u:
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_WORD *)(a1 + 132) |= 0x4000u;
        while (2)
        {
          v53 = *v3;
          v54 = *(_QWORD *)(a2 + v53);
          if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v52 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                v52 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v52 = 0;
LABEL_165:
        v104 = v52 != 0;
        v105 = 129;
        goto LABEL_191;
      case 8u:
        v56 = 0;
        v57 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 132) |= 2u;
        while (2)
        {
          v58 = *v3;
          v59 = *(_QWORD *)(a2 + v58);
          if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v19 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v56 += 7;
              v14 = v57++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_169:
        v102 = 16;
        goto LABEL_174;
      case 9u:
        v61 = 0;
        v62 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 132) |= 1u;
        while (2)
        {
          v63 = *v3;
          v64 = *(_QWORD *)(a2 + v63);
          if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v19 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v61 += 7;
              v14 = v62++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_173:
        v102 = 8;
LABEL_174:
        *(_QWORD *)(a1 + v102) = v19;
        goto LABEL_201;
      case 0xAu:
        v66 = 0;
        v67 = 0;
        v36 = 0;
        *(_WORD *)(a1 + 132) |= 0x80u;
        while (2)
        {
          v68 = *v3;
          v69 = *(_QWORD *)(a2 + v68);
          if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v36 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v66 += 7;
              v14 = v67++ >= 9;
              if (v14)
              {
                LODWORD(v36) = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v36) = 0;
LABEL_178:
        v103 = 56;
        goto LABEL_200;
      case 0xBu:
        v71 = 0;
        v72 = 0;
        v36 = 0;
        *(_WORD *)(a1 + 132) |= 0x100u;
        while (2)
        {
          v73 = *v3;
          v74 = *(_QWORD *)(a2 + v73);
          if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v36 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v71 += 7;
              v14 = v72++ >= 9;
              if (v14)
              {
                LODWORD(v36) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v36) = 0;
LABEL_182:
        v103 = 60;
        goto LABEL_200;
      case 0xCu:
        v76 = 0;
        v77 = 0;
        v36 = 0;
        *(_WORD *)(a1 + 132) |= 0x200u;
        while (2)
        {
          v78 = *v3;
          v79 = *(_QWORD *)(a2 + v78);
          if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v36 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v76 += 7;
              v14 = v77++ >= 9;
              if (v14)
              {
                LODWORD(v36) = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v36) = 0;
LABEL_186:
        v103 = 64;
        goto LABEL_200;
      case 0xDu:
        v81 = 0;
        v82 = 0;
        v83 = 0;
        *(_WORD *)(a1 + 132) |= 0x2000u;
        while (2)
        {
          v84 = *v3;
          v85 = *(_QWORD *)(a2 + v84);
          if (v85 == -1 || v85 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v85);
            *(_QWORD *)(a2 + v84) = v85 + 1;
            v83 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              v14 = v82++ >= 9;
              if (v14)
              {
                v83 = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v83 = 0;
LABEL_190:
        v104 = v83 != 0;
        v105 = 128;
LABEL_191:
        *(_BYTE *)(a1 + v105) = v104;
        goto LABEL_201;
      case 0xEu:
        v87 = objc_alloc_init(AWDSidecarBssSteering);

        *(_QWORD *)(a1 + 104) = v87;
        if (PBReaderPlaceMark() && AWDSidecarBssSteeringReadFrom((uint64_t)v87, a2))
          goto LABEL_114;
        return 0;
      case 0xFu:
        v88 = objc_alloc_init(AWDSidecarBssSteering);

        *(_QWORD *)(a1 + 72) = v88;
        if (!PBReaderPlaceMark() || !AWDSidecarBssSteeringReadFrom((uint64_t)v88, a2))
          return 0;
        goto LABEL_114;
      case 0x10u:
        v89 = objc_alloc_init(AWDSidecarPeerTraffic);

        v90 = 112;
        goto LABEL_120;
      case 0x11u:
        v89 = objc_alloc_init(AWDSidecarPeerTraffic);

        v90 = 80;
LABEL_120:
        *(_QWORD *)(a1 + v90) = v89;
        if (PBReaderPlaceMark() && (AWDSidecarPeerTrafficReadFrom(v89, a2) & 1) != 0)
        {
LABEL_114:
          PBReaderRecallMark();
LABEL_201:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0x12u:
        v91 = 0;
        v92 = 0;
        v36 = 0;
        *(_WORD *)(a1 + 132) |= 0x40u;
        while (2)
        {
          v93 = *v3;
          v94 = *(_QWORD *)(a2 + v93);
          if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
            *(_QWORD *)(a2 + v93) = v94 + 1;
            v36 |= (unint64_t)(v95 & 0x7F) << v91;
            if (v95 < 0)
            {
              v91 += 7;
              v14 = v92++ >= 9;
              if (v14)
              {
                LODWORD(v36) = 0;
                goto LABEL_195;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v36) = 0;
LABEL_195:
        v103 = 52;
        goto LABEL_200;
      case 0x13u:
        v96 = 0;
        v97 = 0;
        v36 = 0;
        *(_WORD *)(a1 + 132) |= 0x20u;
        while (2)
        {
          v98 = *v3;
          v99 = *(_QWORD *)(a2 + v98);
          if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
            *(_QWORD *)(a2 + v98) = v99 + 1;
            v36 |= (unint64_t)(v100 & 0x7F) << v96;
            if (v100 < 0)
            {
              v96 += 7;
              v14 = v97++ >= 9;
              if (v14)
              {
                LODWORD(v36) = 0;
                goto LABEL_199;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v36) = 0;
LABEL_199:
        v103 = 48;
LABEL_200:
        *(_DWORD *)(a1 + v103) = v36;
        goto LABEL_201;
      case 0x14u:
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 120) = String;
        goto LABEL_201;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_201;
    }
  }
}

uint64_t AWDWiFiBlacklistingEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *Data;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_72;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_74;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_72:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_74:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          Data = (void *)PBReaderReadData();

          *(_QWORD *)(a1 + 32) = Data;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 48) |= 0x10u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_78:
          v56 = 28;
          goto LABEL_99;
        case 4u:
          v31 = 0;
          v32 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 48) |= 0x20u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v27 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_82:
          v56 = 40;
          goto LABEL_99;
        case 5u:
          v36 = 0;
          v37 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 48) |= 4u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v27 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_86:
          v56 = 20;
          goto LABEL_99;
        case 6u:
          v41 = 0;
          v42 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 48) |= 8u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v27 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_90:
          v56 = 24;
          goto LABEL_99;
        case 7u:
          v46 = 0;
          v47 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 48) |= 2u;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
              *(_QWORD *)(a2 + v48) = v49 + 1;
              v27 |= (unint64_t)(v50 & 0x7F) << v46;
              if (v50 < 0)
              {
                v46 += 7;
                v14 = v47++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_94:
          v56 = 16;
          goto LABEL_99;
        case 8u:
          v51 = 0;
          v52 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 48) |= 0x40u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v53 = *v3;
        v54 = *(_QWORD *)(a2 + v53);
        if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
          break;
        v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
        *(_QWORD *)(a2 + v53) = v54 + 1;
        v27 |= (unint64_t)(v55 & 0x7F) << v51;
        if ((v55 & 0x80) == 0)
          goto LABEL_96;
        v51 += 7;
        v14 = v52++ >= 9;
        if (v14)
        {
          LODWORD(v27) = 0;
          goto LABEL_98;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_96:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v27) = 0;
LABEL_98:
      v56 = 44;
LABEL_99:
      *(_DWORD *)(a1 + v56) = v27;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiCLTMReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDWiFiCLTMSliceSpecific *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDWiFiCLTMSliceSpecific);
        objc_msgSend((id)a1, "addSliceStats:", v23);

        if (!PBReaderPlaceMark() || (AWDWiFiCLTMSliceSpecificReadFrom((uint64_t)v23, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiCLTMSliceSpecificReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  char v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  char v133;
  unsigned int v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  char v139;
  unsigned int v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  char v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 220) |= 1u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_177;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_179;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_177:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_179:
              v107 = 176;
              goto LABEL_213;
            case 2u:
              v24 = 0;
              v25 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 220) |= 0x80u;
              while (2)
              {
                v27 = *v3;
                v28 = *(_QWORD *)(a2 + v27);
                if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
                  *(_QWORD *)(a2 + v27) = v28 + 1;
                  v26 |= (unint64_t)(v29 & 0x7F) << v24;
                  if (v29 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_183;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_183:
              v108 = 212;
              goto LABEL_208;
            case 3u:
              v30 = 0;
              v31 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 220) |= 0x100u;
              while (2)
              {
                v32 = *v3;
                v33 = *(_QWORD *)(a2 + v32);
                if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
                  *(_QWORD *)(a2 + v32) = v33 + 1;
                  v26 |= (unint64_t)(v34 & 0x7F) << v30;
                  if (v34 < 0)
                  {
                    v30 += 7;
                    v14 = v31++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_187;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_187:
              v108 = 216;
              goto LABEL_208;
            case 4u:
              v35 = 0;
              v36 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 220) |= 0x10u;
              while (2)
              {
                v37 = *v3;
                v38 = *(_QWORD *)(a2 + v37);
                if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
                  *(_QWORD *)(a2 + v37) = v38 + 1;
                  v26 |= (unint64_t)(v39 & 0x7F) << v35;
                  if (v39 < 0)
                  {
                    v35 += 7;
                    v14 = v36++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_191;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_191:
              v108 = 200;
              goto LABEL_208;
            case 5u:
              v40 = 0;
              v41 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 220) |= 0x40u;
              while (2)
              {
                v42 = *v3;
                v43 = *(_QWORD *)(a2 + v42);
                if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
                  *(_QWORD *)(a2 + v42) = v43 + 1;
                  v26 |= (unint64_t)(v44 & 0x7F) << v40;
                  if (v44 < 0)
                  {
                    v40 += 7;
                    v14 = v41++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_195;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_195:
              v108 = 208;
              goto LABEL_208;
            case 6u:
              v45 = 0;
              v46 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 220) |= 4u;
              while (2)
              {
                v47 = *v3;
                v48 = *(_QWORD *)(a2 + v47);
                if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
                  *(_QWORD *)(a2 + v47) = v48 + 1;
                  v26 |= (unint64_t)(v49 & 0x7F) << v45;
                  if (v49 < 0)
                  {
                    v45 += 7;
                    v14 = v46++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_199;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_199:
              v108 = 192;
              goto LABEL_208;
            case 7u:
              if (v16 != 2)
              {
                v109 = 0;
                v110 = 0;
                v111 = 0;
                while (1)
                {
                  v112 = *v3;
                  v113 = *(_QWORD *)(a2 + v112);
                  if (v113 == -1 || v113 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_265;
                  v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v113);
                  *(_QWORD *)(a2 + v112) = v113 + 1;
                  v111 |= (unint64_t)(v114 & 0x7F) << v109;
                  if (v114 < 0)
                  {
                    v109 += 7;
                    v14 = v110++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_266;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v50 = 0;
                v51 = 0;
                v52 = 0;
                while (1)
                {
                  v53 = *v3;
                  v54 = *(_QWORD *)(a2 + v53);
                  if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
                  *(_QWORD *)(a2 + v53) = v54 + 1;
                  v52 |= (unint64_t)(v55 & 0x7F) << v50;
                  if (v55 < 0)
                  {
                    v50 += 7;
                    v14 = v51++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_75;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_75:
                PBRepeatedUInt32Add();
              }
              goto LABEL_175;
            case 8u:
              if (v16 != 2)
              {
                v115 = 0;
                v116 = 0;
                v117 = 0;
                while (1)
                {
                  v118 = *v3;
                  v119 = *(_QWORD *)(a2 + v118);
                  if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_242;
                  v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
                  *(_QWORD *)(a2 + v118) = v119 + 1;
                  v117 |= (unint64_t)(v120 & 0x7F) << v115;
                  if (v120 < 0)
                  {
                    v115 += 7;
                    v14 = v116++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_243;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v56 = 0;
                v57 = 0;
                v58 = 0;
                while (1)
                {
                  v59 = *v3;
                  v60 = *(_QWORD *)(a2 + v59);
                  if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
                  *(_QWORD *)(a2 + v59) = v60 + 1;
                  v58 |= (unint64_t)(v61 & 0x7F) << v56;
                  if (v61 < 0)
                  {
                    v56 += 7;
                    v14 = v57++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_88;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_88:
                PBRepeatedInt32Add();
              }
              goto LABEL_175;
            case 9u:
              if (v16 != 2)
              {
                v121 = 0;
                v122 = 0;
                v123 = 0;
                while (1)
                {
                  v124 = *v3;
                  v125 = *(_QWORD *)(a2 + v124);
                  if (v125 == -1 || v125 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_265;
                  v126 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v125);
                  *(_QWORD *)(a2 + v124) = v125 + 1;
                  v123 |= (unint64_t)(v126 & 0x7F) << v121;
                  if (v126 < 0)
                  {
                    v121 += 7;
                    v14 = v122++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_266;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v62 = 0;
                v63 = 0;
                v64 = 0;
                while (1)
                {
                  v65 = *v3;
                  v66 = *(_QWORD *)(a2 + v65);
                  if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
                  *(_QWORD *)(a2 + v65) = v66 + 1;
                  v64 |= (unint64_t)(v67 & 0x7F) << v62;
                  if (v67 < 0)
                  {
                    v62 += 7;
                    v14 = v63++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_101;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_101:
                PBRepeatedUInt32Add();
              }
              goto LABEL_175;
            case 0xAu:
              if (v16 != 2)
              {
                v127 = 0;
                v128 = 0;
                v129 = 0;
                while (1)
                {
                  v130 = *v3;
                  v131 = *(_QWORD *)(a2 + v130);
                  if (v131 == -1 || v131 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v132 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v131);
                  *(_QWORD *)(a2 + v130) = v131 + 1;
                  v129 |= (unint64_t)(v132 & 0x7F) << v127;
                  if (v132 < 0)
                  {
                    v127 += 7;
                    v14 = v128++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_243;
                }
LABEL_242:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_243:
                PBRepeatedInt32Add();
                goto LABEL_267;
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v68 = 0;
                v69 = 0;
                v70 = 0;
                while (1)
                {
                  v71 = *v3;
                  v72 = *(_QWORD *)(a2 + v71);
                  if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
                  *(_QWORD *)(a2 + v71) = v72 + 1;
                  v70 |= (unint64_t)(v73 & 0x7F) << v68;
                  if (v73 < 0)
                  {
                    v68 += 7;
                    v14 = v69++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_114;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_114:
                PBRepeatedInt32Add();
              }
              goto LABEL_175;
            case 0xBu:
              if (v16 != 2)
              {
                v133 = 0;
                v134 = 0;
                v135 = 0;
                while (1)
                {
                  v136 = *v3;
                  v137 = *(_QWORD *)(a2 + v136);
                  if (v137 == -1 || v137 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_265;
                  v138 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v137);
                  *(_QWORD *)(a2 + v136) = v137 + 1;
                  v135 |= (unint64_t)(v138 & 0x7F) << v133;
                  if (v138 < 0)
                  {
                    v133 += 7;
                    v14 = v134++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_266;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v74 = 0;
                v75 = 0;
                v76 = 0;
                while (1)
                {
                  v77 = *v3;
                  v78 = *(_QWORD *)(a2 + v77);
                  if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
                  *(_QWORD *)(a2 + v77) = v78 + 1;
                  v76 |= (unint64_t)(v79 & 0x7F) << v74;
                  if (v79 < 0)
                  {
                    v74 += 7;
                    v14 = v75++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_127;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_127:
                PBRepeatedUInt32Add();
              }
              goto LABEL_175;
            case 0xCu:
              v80 = 0;
              v81 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 220) |= 8u;
              while (2)
              {
                v82 = *v3;
                v83 = *(_QWORD *)(a2 + v82);
                if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
                  *(_QWORD *)(a2 + v82) = v83 + 1;
                  v26 |= (unint64_t)(v84 & 0x7F) << v80;
                  if (v84 < 0)
                  {
                    v80 += 7;
                    v14 = v81++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_203;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_203:
              v108 = 196;
              goto LABEL_208;
            case 0xDu:
              v85 = 0;
              v86 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 220) |= 0x20u;
              while (2)
              {
                v87 = *v3;
                v88 = *(_QWORD *)(a2 + v87);
                if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
                  *(_QWORD *)(a2 + v87) = v88 + 1;
                  v26 |= (unint64_t)(v89 & 0x7F) << v85;
                  if (v89 < 0)
                  {
                    v85 += 7;
                    v14 = v86++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_207;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_207:
              v108 = 204;
LABEL_208:
              *(_DWORD *)(a1 + v108) = v26;
              goto LABEL_267;
            case 0xEu:
              v90 = 0;
              v91 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 220) |= 2u;
              while (2)
              {
                v92 = *v3;
                v93 = *(_QWORD *)(a2 + v92);
                if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
                  *(_QWORD *)(a2 + v92) = v93 + 1;
                  v20 |= (unint64_t)(v94 & 0x7F) << v90;
                  if (v94 < 0)
                  {
                    v90 += 7;
                    v14 = v91++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_212;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_212:
              v107 = 184;
LABEL_213:
              *(_QWORD *)(a1 + v107) = v20;
              goto LABEL_267;
            case 0xFu:
              if (v16 != 2)
              {
                v139 = 0;
                v140 = 0;
                v141 = 0;
                while (1)
                {
                  v142 = *v3;
                  v143 = *(_QWORD *)(a2 + v142);
                  if (v143 == -1 || v143 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_265;
                  v144 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v143);
                  *(_QWORD *)(a2 + v142) = v143 + 1;
                  v141 |= (unint64_t)(v144 & 0x7F) << v139;
                  if (v144 < 0)
                  {
                    v139 += 7;
                    v14 = v140++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_266;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v95 = 0;
                v96 = 0;
                v97 = 0;
                while (1)
                {
                  v98 = *v3;
                  v99 = *(_QWORD *)(a2 + v98);
                  if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
                  *(_QWORD *)(a2 + v98) = v99 + 1;
                  v97 |= (unint64_t)(v100 & 0x7F) << v95;
                  if (v100 < 0)
                  {
                    v95 += 7;
                    v14 = v96++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_161;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_161:
                PBRepeatedUInt32Add();
              }
              goto LABEL_175;
            case 0x10u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v101 = 0;
                  v102 = 0;
                  v103 = 0;
                  while (1)
                  {
                    v104 = *v3;
                    v105 = *(_QWORD *)(a2 + v104);
                    if (v105 == -1 || v105 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v106 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v105);
                    *(_QWORD *)(a2 + v104) = v105 + 1;
                    v103 |= (unint64_t)(v106 & 0x7F) << v101;
                    if (v106 < 0)
                    {
                      v101 += 7;
                      v14 = v102++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_174;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_174:
                  PBRepeatedUInt32Add();
                }
LABEL_175:
                PBReaderRecallMark();
              }
              else
              {
                v145 = 0;
                v146 = 0;
                v147 = 0;
                while (1)
                {
                  v148 = *v3;
                  v149 = *(_QWORD *)(a2 + v148);
                  if (v149 == -1 || v149 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
                  *(_QWORD *)(a2 + v148) = v149 + 1;
                  v147 |= (unint64_t)(v150 & 0x7F) << v145;
                  if (v150 < 0)
                  {
                    v145 += 7;
                    v14 = v146++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_266;
                }
LABEL_265:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_266:
                PBRepeatedUInt32Add();
              }
LABEL_267:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_267;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiConnectionQualityReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  void *String;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  char v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  uint64_t v136;
  unint64_t v137;
  int v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  char v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  char v181;
  unsigned int v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  char v186;
  char v187;
  unsigned int v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  char v192;
  char v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  char v198;
  char v199;
  unsigned int v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  char v205;
  unsigned int v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  char v210;
  char v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  char v216;
  char v217;
  unsigned int v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  char v223;
  unsigned int v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  char v229;
  unsigned int v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  char v234;
  char v235;
  unsigned int v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x100000uLL;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_282;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_284;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_282:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_284:
          v241 = 168;
          goto LABEL_409;
        case 2u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 272) = String;
          continue;
        case 3u:
          v27 = PBReaderReadString();
          if (v27)
            objc_msgSend((id)a1, "addAdditionalUniqueIDs:", v27);
          continue;
        case 4u:
          v28 = PBReaderReadString();
          if (v28)
            objc_msgSend((id)a1, "addOtherUniqueIDs:", v28);
          continue;
        case 5u:
          *(_QWORD *)(a1 + 284) |= 0x80uLL;
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v31 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v31 = 0;
          }
          v243 = 64;
          goto LABEL_419;
        case 6u:
          *(_QWORD *)(a1 + 284) |= 0x100uLL;
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v31 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v31 = 0;
          }
          v243 = 72;
LABEL_419:
          *(_QWORD *)(a1 + v243) = v31;
          continue;
        case 7u:
          v34 = 0;
          v35 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x1000uLL;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v38;
              v20 |= (unint64_t)(v39 & 0x7F) << v34;
              if (v39 < 0)
              {
                v34 += 7;
                v15 = v35++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_288;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_288:
          v241 = 104;
          goto LABEL_409;
        case 8u:
          v40 = 0;
          v41 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x40uLL;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            v44 = v43 + 1;
            if (v43 == -1 || v44 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v44;
              v20 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                v15 = v41++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_292;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_292:
          v241 = 56;
          goto LABEL_409;
        case 9u:
          v46 = 0;
          v47 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x200uLL;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
              *(_QWORD *)(a2 + v48) = v50;
              v20 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                v15 = v47++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_296;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_296:
          v241 = 80;
          goto LABEL_409;
        case 0xAu:
          v52 = 0;
          v53 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x400uLL;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
              *(_QWORD *)(a2 + v54) = v56;
              v20 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                v15 = v53++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_300;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_300:
          v241 = 88;
          goto LABEL_409;
        case 0xBu:
          v58 = 0;
          v59 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x800uLL;
          while (2)
          {
            v60 = *v3;
            v61 = *(_QWORD *)(a2 + v60);
            v62 = v61 + 1;
            if (v61 == -1 || v62 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
              *(_QWORD *)(a2 + v60) = v62;
              v20 |= (unint64_t)(v63 & 0x7F) << v58;
              if (v63 < 0)
              {
                v58 += 7;
                v15 = v59++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_304;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_304:
          v241 = 96;
          goto LABEL_409;
        case 0xCu:
          v64 = 0;
          v65 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x40000uLL;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            v68 = v67 + 1;
            if (v67 == -1 || v68 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
              *(_QWORD *)(a2 + v66) = v68;
              v20 |= (unint64_t)(v69 & 0x7F) << v64;
              if (v69 < 0)
              {
                v64 += 7;
                v15 = v65++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_308;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_308:
          v241 = 152;
          goto LABEL_409;
        case 0xDu:
          v70 = 0;
          v71 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x20uLL;
          while (2)
          {
            v72 = *v3;
            v73 = *(_QWORD *)(a2 + v72);
            v74 = v73 + 1;
            if (v73 == -1 || v74 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
              *(_QWORD *)(a2 + v72) = v74;
              v20 |= (unint64_t)(v75 & 0x7F) << v70;
              if (v75 < 0)
              {
                v70 += 7;
                v15 = v71++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_312;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_312:
          v241 = 48;
          goto LABEL_409;
        case 0xEu:
          v76 = 0;
          v77 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x2000uLL;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
              *(_QWORD *)(a2 + v78) = v80;
              v20 |= (unint64_t)(v81 & 0x7F) << v76;
              if (v81 < 0)
              {
                v76 += 7;
                v15 = v77++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_316;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_316:
          v241 = 112;
          goto LABEL_409;
        case 0xFu:
          v82 = 0;
          v83 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x4000uLL;
          while (2)
          {
            v84 = *v3;
            v85 = *(_QWORD *)(a2 + v84);
            v86 = v85 + 1;
            if (v85 == -1 || v86 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v85);
              *(_QWORD *)(a2 + v84) = v86;
              v20 |= (unint64_t)(v87 & 0x7F) << v82;
              if (v87 < 0)
              {
                v82 += 7;
                v15 = v83++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_320;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_320:
          v241 = 120;
          goto LABEL_409;
        case 0x10u:
          v88 = 0;
          v89 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 2uLL;
          while (2)
          {
            v90 = *v3;
            v91 = *(_QWORD *)(a2 + v90);
            v92 = v91 + 1;
            if (v91 == -1 || v92 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v91);
              *(_QWORD *)(a2 + v90) = v92;
              v20 |= (unint64_t)(v93 & 0x7F) << v88;
              if (v93 < 0)
              {
                v88 += 7;
                v15 = v89++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_324;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_324:
          v241 = 16;
          goto LABEL_409;
        case 0x11u:
          v94 = 0;
          v95 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 8uLL;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            v98 = v97 + 1;
            if (v97 == -1 || v98 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v97);
              *(_QWORD *)(a2 + v96) = v98;
              v20 |= (unint64_t)(v99 & 0x7F) << v94;
              if (v99 < 0)
              {
                v94 += 7;
                v15 = v95++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_328;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_328:
          v241 = 32;
          goto LABEL_409;
        case 0x12u:
          v100 = 0;
          v101 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 1uLL;
          while (2)
          {
            v102 = *v3;
            v103 = *(_QWORD *)(a2 + v102);
            v104 = v103 + 1;
            if (v103 == -1 || v104 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
              *(_QWORD *)(a2 + v102) = v104;
              v20 |= (unint64_t)(v105 & 0x7F) << v100;
              if (v105 < 0)
              {
                v100 += 7;
                v15 = v101++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_332;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_332:
          v241 = 8;
          goto LABEL_409;
        case 0x13u:
          v106 = 0;
          v107 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 4uLL;
          while (2)
          {
            v108 = *v3;
            v109 = *(_QWORD *)(a2 + v108);
            v110 = v109 + 1;
            if (v109 == -1 || v110 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v111 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
              *(_QWORD *)(a2 + v108) = v110;
              v20 |= (unint64_t)(v111 & 0x7F) << v106;
              if (v111 < 0)
              {
                v106 += 7;
                v15 = v107++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_336;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_336:
          v241 = 24;
          goto LABEL_409;
        case 0x14u:
          v112 = 0;
          v113 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x8000uLL;
          while (2)
          {
            v114 = *v3;
            v115 = *(_QWORD *)(a2 + v114);
            v116 = v115 + 1;
            if (v115 == -1 || v116 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v117 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v115);
              *(_QWORD *)(a2 + v114) = v116;
              v20 |= (unint64_t)(v117 & 0x7F) << v112;
              if (v117 < 0)
              {
                v112 += 7;
                v15 = v113++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_340;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_340:
          v241 = 128;
          goto LABEL_409;
        case 0x15u:
          v118 = 0;
          v119 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x10uLL;
          while (2)
          {
            v120 = *v3;
            v121 = *(_QWORD *)(a2 + v120);
            v122 = v121 + 1;
            if (v121 == -1 || v122 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v121);
              *(_QWORD *)(a2 + v120) = v122;
              v20 |= (unint64_t)(v123 & 0x7F) << v118;
              if (v123 < 0)
              {
                v118 += 7;
                v15 = v119++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_344;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_344:
          v241 = 40;
          goto LABEL_409;
        case 0x16u:
          v124 = 0;
          v125 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x10000uLL;
          while (2)
          {
            v126 = *v3;
            v127 = *(_QWORD *)(a2 + v126);
            v128 = v127 + 1;
            if (v127 == -1 || v128 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
              *(_QWORD *)(a2 + v126) = v128;
              v20 |= (unint64_t)(v129 & 0x7F) << v124;
              if (v129 < 0)
              {
                v124 += 7;
                v15 = v125++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_348;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_348:
          v241 = 136;
          goto LABEL_409;
        case 0x17u:
          v130 = 0;
          v131 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x20000uLL;
          while (2)
          {
            v132 = *v3;
            v133 = *(_QWORD *)(a2 + v132);
            v134 = v133 + 1;
            if (v133 == -1 || v134 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v133);
              *(_QWORD *)(a2 + v132) = v134;
              v20 |= (unint64_t)(v135 & 0x7F) << v130;
              if (v135 < 0)
              {
                v130 += 7;
                v15 = v131++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_352;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_352:
          v241 = 144;
          goto LABEL_409;
        case 0x18u:
          *(_QWORD *)(a1 + 284) |= 0x200000000uLL;
          v136 = *v3;
          v137 = *(_QWORD *)(a2 + v136);
          if (v137 <= 0xFFFFFFFFFFFFFFFBLL && v137 + 4 <= *(_QWORD *)(a2 + *v4))
          {
            v138 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v137);
            *(_QWORD *)(a2 + v136) = v137 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v138 = 0;
          }
          v244 = 244;
          goto LABEL_432;
        case 0x19u:
          *(_QWORD *)(a1 + 284) |= 0x80000000uLL;
          v139 = *v3;
          v140 = *(_QWORD *)(a2 + v139);
          if (v140 <= 0xFFFFFFFFFFFFFFFBLL && v140 + 4 <= *(_QWORD *)(a2 + *v4))
          {
            v138 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v140);
            *(_QWORD *)(a2 + v139) = v140 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v138 = 0;
          }
          v244 = 236;
          goto LABEL_432;
        case 0x1Au:
          *(_QWORD *)(a1 + 284) |= 0x800000000uLL;
          v141 = *v3;
          v142 = *(_QWORD *)(a2 + v141);
          if (v142 <= 0xFFFFFFFFFFFFFFFBLL && v142 + 4 <= *(_QWORD *)(a2 + *v4))
          {
            v138 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v142);
            *(_QWORD *)(a2 + v141) = v142 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v138 = 0;
          }
          v244 = 252;
          goto LABEL_432;
        case 0x1Bu:
          *(_QWORD *)(a1 + 284) |= 0x400000000uLL;
          v143 = *v3;
          v144 = *(_QWORD *)(a2 + v143);
          if (v144 <= 0xFFFFFFFFFFFFFFFBLL && v144 + 4 <= *(_QWORD *)(a2 + *v4))
          {
            v138 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v144 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v138 = 0;
          }
          v244 = 248;
          goto LABEL_432;
        case 0x1Cu:
          *(_QWORD *)(a1 + 284) |= 0x100000000uLL;
          v145 = *v3;
          v146 = *(_QWORD *)(a2 + v145);
          if (v146 <= 0xFFFFFFFFFFFFFFFBLL && v146 + 4 <= *(_QWORD *)(a2 + *v4))
          {
            v138 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v146);
            *(_QWORD *)(a2 + v145) = v146 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v138 = 0;
          }
          v244 = 240;
          goto LABEL_432;
        case 0x1Du:
          *(_QWORD *)(a1 + 284) |= 0x1000000000uLL;
          v147 = *v3;
          v148 = *(_QWORD *)(a2 + v147);
          if (v148 <= 0xFFFFFFFFFFFFFFFBLL && v148 + 4 <= *(_QWORD *)(a2 + *v4))
          {
            v138 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v148);
            *(_QWORD *)(a2 + v147) = v148 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v138 = 0;
          }
          v244 = 256;
LABEL_432:
          *(_DWORD *)(a1 + v244) = v138;
          continue;
        case 0x1Eu:
          v149 = 0;
          v150 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x4000000000uLL;
          while (2)
          {
            v152 = *v3;
            v153 = *(_QWORD *)(a2 + v152);
            v154 = v153 + 1;
            if (v153 == -1 || v154 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v153);
              *(_QWORD *)(a2 + v152) = v154;
              v151 |= (unint64_t)(v155 & 0x7F) << v149;
              if (v155 < 0)
              {
                v149 += 7;
                v15 = v150++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_356;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_356:
          v242 = 264;
          goto LABEL_414;
        case 0x1Fu:
          v156 = 0;
          v157 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x1000000uLL;
          while (2)
          {
            v158 = *v3;
            v159 = *(_QWORD *)(a2 + v158);
            v160 = v159 + 1;
            if (v159 == -1 || v160 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v159);
              *(_QWORD *)(a2 + v158) = v160;
              v151 |= (unint64_t)(v161 & 0x7F) << v156;
              if (v161 < 0)
              {
                v156 += 7;
                v15 = v157++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_360;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_360:
          v242 = 196;
          goto LABEL_414;
        case 0x20u:
          v162 = 0;
          v163 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x10000000uLL;
          while (2)
          {
            v164 = *v3;
            v165 = *(_QWORD *)(a2 + v164);
            v166 = v165 + 1;
            if (v165 == -1 || v166 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v167 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v165);
              *(_QWORD *)(a2 + v164) = v166;
              v151 |= (unint64_t)(v167 & 0x7F) << v162;
              if (v167 < 0)
              {
                v162 += 7;
                v15 = v163++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_364;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_364:
          v242 = 212;
          goto LABEL_414;
        case 0x21u:
          v168 = 0;
          v169 = 0;
          v170 = 0;
          *(_QWORD *)(a1 + 284) |= 0x10000000000uLL;
          while (2)
          {
            v171 = *v3;
            v172 = *(_QWORD *)(a2 + v171);
            v173 = v172 + 1;
            if (v172 == -1 || v173 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v174 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v172);
              *(_QWORD *)(a2 + v171) = v173;
              v170 |= (unint64_t)(v174 & 0x7F) << v168;
              if (v174 < 0)
              {
                v168 += 7;
                v15 = v169++ >= 9;
                if (v15)
                {
                  v170 = 0;
                  goto LABEL_368;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v170 = 0;
LABEL_368:
          *(_BYTE *)(a1 + 280) = v170 != 0;
          continue;
        case 0x22u:
          v175 = 0;
          v176 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x20000000uLL;
          while (2)
          {
            v177 = *v3;
            v178 = *(_QWORD *)(a2 + v177);
            v179 = v178 + 1;
            if (v178 == -1 || v179 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v180 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v178);
              *(_QWORD *)(a2 + v177) = v179;
              v151 |= (unint64_t)(v180 & 0x7F) << v175;
              if (v180 < 0)
              {
                v175 += 7;
                v15 = v176++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_372;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_372:
          v242 = 216;
          goto LABEL_414;
        case 0x23u:
          v181 = 0;
          v182 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x200000uLL;
          while (2)
          {
            v183 = *v3;
            v184 = *(_QWORD *)(a2 + v183);
            v185 = v184 + 1;
            if (v184 == -1 || v185 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v186 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v184);
              *(_QWORD *)(a2 + v183) = v185;
              v151 |= (unint64_t)(v186 & 0x7F) << v181;
              if (v186 < 0)
              {
                v181 += 7;
                v15 = v182++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_376;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_376:
          v242 = 184;
          goto LABEL_414;
        case 0x24u:
          v187 = 0;
          v188 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x800000uLL;
          while (2)
          {
            v189 = *v3;
            v190 = *(_QWORD *)(a2 + v189);
            v191 = v190 + 1;
            if (v190 == -1 || v191 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v192 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v190);
              *(_QWORD *)(a2 + v189) = v191;
              v151 |= (unint64_t)(v192 & 0x7F) << v187;
              if (v192 < 0)
              {
                v187 += 7;
                v15 = v188++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_380;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_380:
          v242 = 192;
          goto LABEL_414;
        case 0x25u:
          v193 = 0;
          v194 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x4000000uLL;
          while (2)
          {
            v195 = *v3;
            v196 = *(_QWORD *)(a2 + v195);
            v197 = v196 + 1;
            if (v196 == -1 || v197 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v198 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v196);
              *(_QWORD *)(a2 + v195) = v197;
              v151 |= (unint64_t)(v198 & 0x7F) << v193;
              if (v198 < 0)
              {
                v193 += 7;
                v15 = v194++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_384;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_384:
          v242 = 204;
          goto LABEL_414;
        case 0x26u:
          v199 = 0;
          v200 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x8000000uLL;
          while (2)
          {
            v201 = *v3;
            v202 = *(_QWORD *)(a2 + v201);
            v203 = v202 + 1;
            if (v202 == -1 || v203 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v204 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v202);
              *(_QWORD *)(a2 + v201) = v203;
              v151 |= (unint64_t)(v204 & 0x7F) << v199;
              if (v204 < 0)
              {
                v199 += 7;
                v15 = v200++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_388;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_388:
          v242 = 208;
          goto LABEL_414;
        case 0x27u:
          v205 = 0;
          v206 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x2000000000uLL;
          while (2)
          {
            v207 = *v3;
            v208 = *(_QWORD *)(a2 + v207);
            v209 = v208 + 1;
            if (v208 == -1 || v209 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v210 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v208);
              *(_QWORD *)(a2 + v207) = v209;
              v151 |= (unint64_t)(v210 & 0x7F) << v205;
              if (v210 < 0)
              {
                v205 += 7;
                v15 = v206++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_392;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_392:
          v242 = 260;
          goto LABEL_414;
        case 0x28u:
          v211 = 0;
          v212 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x8000000000uLL;
          while (2)
          {
            v213 = *v3;
            v214 = *(_QWORD *)(a2 + v213);
            v215 = v214 + 1;
            if (v214 == -1 || v215 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v216 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v214);
              *(_QWORD *)(a2 + v213) = v215;
              v151 |= (unint64_t)(v216 & 0x7F) << v211;
              if (v216 < 0)
              {
                v211 += 7;
                v15 = v212++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_396;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_396:
          v242 = 268;
          goto LABEL_414;
        case 0x29u:
          v217 = 0;
          v218 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x2000000uLL;
          while (2)
          {
            v219 = *v3;
            v220 = *(_QWORD *)(a2 + v219);
            v221 = v220 + 1;
            if (v220 == -1 || v221 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v222 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v220);
              *(_QWORD *)(a2 + v219) = v221;
              v151 |= (unint64_t)(v222 & 0x7F) << v217;
              if (v222 < 0)
              {
                v217 += 7;
                v15 = v218++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_400;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_400:
          v242 = 200;
          goto LABEL_414;
        case 0x2Au:
          v223 = 0;
          v224 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x40000000uLL;
          while (2)
          {
            v225 = *v3;
            v226 = *(_QWORD *)(a2 + v225);
            v227 = v226 + 1;
            if (v226 == -1 || v227 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v228 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v226);
              *(_QWORD *)(a2 + v225) = v227;
              v151 |= (unint64_t)(v228 & 0x7F) << v223;
              if (v228 < 0)
              {
                v223 += 7;
                v15 = v224++ >= 9;
                if (v15)
                {
                  LODWORD(v151) = 0;
                  goto LABEL_404;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v151) = 0;
LABEL_404:
          v242 = 232;
          goto LABEL_414;
        case 0x2Bu:
          v229 = 0;
          v230 = 0;
          v20 = 0;
          *(_QWORD *)(a1 + 284) |= 0x80000uLL;
          while (2)
          {
            v231 = *v3;
            v232 = *(_QWORD *)(a2 + v231);
            v233 = v232 + 1;
            if (v232 == -1 || v233 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v234 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v232);
              *(_QWORD *)(a2 + v231) = v233;
              v20 |= (unint64_t)(v234 & 0x7F) << v229;
              if (v234 < 0)
              {
                v229 += 7;
                v15 = v230++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_408;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_408:
          v241 = 160;
LABEL_409:
          *(_QWORD *)(a1 + v241) = v20;
          continue;
        case 0x2Cu:
          v235 = 0;
          v236 = 0;
          v151 = 0;
          *(_QWORD *)(a1 + 284) |= 0x400000uLL;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v237 = *v3;
        v238 = *(_QWORD *)(a2 + v237);
        v239 = v238 + 1;
        if (v238 == -1 || v239 > *(_QWORD *)(a2 + *v4))
          break;
        v240 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v238);
        *(_QWORD *)(a2 + v237) = v239;
        v151 |= (unint64_t)(v240 & 0x7F) << v235;
        if ((v240 & 0x80) == 0)
          goto LABEL_411;
        v235 += 7;
        v15 = v236++ >= 9;
        if (v15)
        {
          LODWORD(v151) = 0;
          goto LABEL_413;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_411:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v151) = 0;
LABEL_413:
      v242 = 188;
LABEL_414:
      *(_DWORD *)(a1 + v242) = v151;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiDPSAWDLSnapshotReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_50;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_52;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_50:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_52:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_56:
          v40 = 16;
          goto LABEL_65;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_60:
          v40 = 24;
          goto LABEL_65;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v26 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
          goto LABEL_62;
        v35 += 7;
        v14 = v36++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_64;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_64:
      v40 = 20;
LABEL_65:
      *(_DWORD *)(a1 + v40) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiDPSActiveProbeStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 48) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_85;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_87;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_87:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_91:
          v65 = 16;
          goto LABEL_120;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_95:
          v65 = 20;
          goto LABEL_120;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 0x10u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_99:
          v65 = 28;
          goto LABEL_120;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 8u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_103:
          v65 = 24;
          goto LABEL_120;
        case 6u:
          v45 = 0;
          v46 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 0x20u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v26 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_107;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_107:
          v65 = 32;
          goto LABEL_120;
        case 7u:
          v50 = 0;
          v51 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 0x40u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v26 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_111;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_111:
          v65 = 36;
          goto LABEL_120;
        case 8u:
          v55 = 0;
          v56 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 0x100u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v26 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_115:
          v65 = 44;
          goto LABEL_120;
        case 9u:
          v60 = 0;
          v61 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 48) |= 0x80u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v62 = *v3;
        v63 = *(_QWORD *)(a2 + v62);
        if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          break;
        v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
        *(_QWORD *)(a2 + v62) = v63 + 1;
        v26 |= (unint64_t)(v64 & 0x7F) << v60;
        if ((v64 & 0x80) == 0)
          goto LABEL_117;
        v60 += 7;
        v14 = v61++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_119;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_117:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_119:
      v65 = 40;
LABEL_120:
      *(_DWORD *)(a1 + v65) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiDPSBTSnapshotReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_51:
        v36 = 20;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_45;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_47;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_47:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v30 = 0;
        v31 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            break;
          v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
          *(_QWORD *)(a2 + v32) = v33 + 1;
          v26 |= (unint64_t)(v34 & 0x7F) << v30;
          if ((v34 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_55:
        v36 = 16;
      }
      *(_DWORD *)(a1 + v36) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiDPSCountersSampleReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  AWDWiFiNWActivityPeerStats *v24;
  AWDWiFiNWActivityControllerStats *v25;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = objc_alloc_init(AWDWiFiNWActivityPeerStats);

        *(_QWORD *)(a1 + 24) = v24;
        if (!PBReaderPlaceMark() || (AWDWiFiNWActivityPeerStatsReadFrom((uint64_t)v24, a2) & 1) == 0)
          return 0;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_37;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_39;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_39:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v25 = objc_alloc_init(AWDWiFiNWActivityControllerStats);

        *(_QWORD *)(a1 + 16) = v25;
        if (!PBReaderPlaceMark() || (AWDWiFiNWActivityControllerStatsReadFrom((uint64_t)v25, a2) & 1) == 0)
          return 0;
      }
      PBReaderRecallMark();
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiDPSEpilogueReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int *v41;
  AWDWADiagnosisActionAssociationDifferences *v42;
  AWDWADiagnosisActionAssociationDifferences *v43;
  AWDWAQuickDpsStats *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  AWDWASymptomsDnsStats *v61;
  AWDWAPeerDiscoveryInfo *v62;
  AWDWAAssociatedAPInfo *v63;
  uint64_t v64;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
  v8 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    while (1)
    {
      v12 = *v3;
      v13 = *(_QWORD *)(a2 + v12);
      if (v13 == -1 || v13 >= *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
      *(_QWORD *)(a2 + v12) = v13 + 1;
      v11 |= (unint64_t)(v14 & 0x7F) << v9;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v9 += 7;
      v15 = v10++ >= 9;
      if (v15)
      {
        v11 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v11 = 0;
LABEL_14:
    if (v16 || (v11 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v11 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + v7[964]) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_89;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v20 = 0;
            goto LABEL_91;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_89:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_91:
        *(_QWORD *)(a1 + 8) = v20;
        goto LABEL_113;
      case 2u:
        v25 = 0;
        v26 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + v7[964]) |= 0x10u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              v15 = v26++ >= 9;
              if (v15)
              {
                LODWORD(v27) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_95:
        v64 = 48;
        goto LABEL_112;
      case 3u:
        v31 = 0;
        v32 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + v7[964]) |= 2u;
        while (2)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v27 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              v15 = v32++ >= 9;
              if (v15)
              {
                LODWORD(v27) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_99:
        v64 = 24;
        goto LABEL_112;
      case 4u:
        v36 = 0;
        v37 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + v7[964]) |= 8u;
        while (2)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v27 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v36 += 7;
              v15 = v37++ >= 9;
              if (v15)
              {
                LODWORD(v27) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_103:
        v64 = 32;
        goto LABEL_112;
      case 5u:
        v41 = v7;
        v42 = objc_alloc_init(AWDWADiagnosisActionAssociationDifferences);

        *(_QWORD *)(a1 + 56) = v42;
        if (PBReaderPlaceMark()
          && (AWDWADiagnosisActionAssociationDifferencesReadFrom((uint64_t)v42, a2) & 1) != 0)
        {
          goto LABEL_51;
        }
        return 0;
      case 6u:
        v41 = v7;
        v43 = objc_alloc_init(AWDWADiagnosisActionAssociationDifferences);
        objc_msgSend((id)a1, "addAssociationChanges:", v43);

        if (!PBReaderPlaceMark()
          || (AWDWADiagnosisActionAssociationDifferencesReadFrom((uint64_t)v43, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_51;
      case 7u:
        v41 = v7;
        v44 = objc_alloc_init(AWDWAQuickDpsStats);

        *(_QWORD *)(a1 + 72) = v44;
        if (!PBReaderPlaceMark() || (AWDWAQuickDpsStatsReadFrom((uint64_t)v44, a2) & 1) == 0)
          return 0;
        goto LABEL_51;
      case 8u:
        v45 = 0;
        v46 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + v7[964]) |= 4u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v27 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v15 = v46++ >= 9;
              if (v15)
              {
                LODWORD(v27) = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_107:
        v64 = 28;
        goto LABEL_112;
      case 9u:
        v50 = 0;
        v51 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + v7[964]) |= 0x20u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v27 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v15 = v51++ >= 9;
              if (v15)
              {
                LODWORD(v27) = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_111:
        v64 = 80;
LABEL_112:
        *(_DWORD *)(a1 + v64) = v27;
        goto LABEL_113;
      case 0xAu:
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_BYTE *)(a1 + v7[964]) |= 0x40u;
        while (2)
        {
          v58 = *v3;
          v59 = *(_QWORD *)(a2 + v58);
          if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v57 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v15 = v56++ >= 9;
              if (v15)
              {
                v57 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v57 = 0;
LABEL_118:
        *(_BYTE *)(a1 + 96) = v57 != 0;
        goto LABEL_113;
      case 0xBu:
        v41 = v7;
        v61 = objc_alloc_init(AWDWASymptomsDnsStats);

        *(_QWORD *)(a1 + 88) = v61;
        if (!PBReaderPlaceMark() || (AWDWASymptomsDnsStatsReadFrom((uint64_t)v61, a2) & 1) == 0)
          return 0;
        goto LABEL_51;
      case 0xCu:
        v41 = v7;
        v62 = objc_alloc_init(AWDWAPeerDiscoveryInfo);

        *(_QWORD *)(a1 + 64) = v62;
        if (PBReaderPlaceMark() && AWDWAPeerDiscoveryInfoReadFrom((uint64_t)v62, a2))
          goto LABEL_51;
        return 0;
      case 0xDu:
        v41 = v7;
        v63 = objc_alloc_init(AWDWAAssociatedAPInfo);
        objc_msgSend((id)a1, "addAccessPointInfo:", v63);

        if (PBReaderPlaceMark() && AWDWAAssociatedAPInfoReadFrom((uint64_t)v63, a2))
        {
LABEL_51:
          PBReaderRecallMark();
          v7 = v41;
LABEL_113:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_113;
    }
  }
}

uint64_t AWDWiFiDPSNotificationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_50;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_52;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_50:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_52:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_56:
          v41 = 20;
          goto LABEL_61;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_60:
          v41 = 16;
LABEL_61:
          *(_DWORD *)(a1 + v41) = v26;
          continue;
        case 4u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v38 = *v3;
        v39 = *(_QWORD *)(a2 + v38);
        if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          break;
        v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
        *(_QWORD *)(a2 + v38) = v39 + 1;
        v37 |= (unint64_t)(v40 & 0x7F) << v35;
        if ((v40 & 0x80) == 0)
          goto LABEL_63;
        v35 += 7;
        v14 = v36++ >= 9;
        if (v14)
        {
          v37 = 0;
          goto LABEL_65;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_63:
      if (*(_BYTE *)(a2 + *v5))
        v37 = 0;
LABEL_65:
      *(_BYTE *)(a1 + 24) = v37 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWiFiDPSPerACTxCompletionSnapshotReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  uint64_t v33;
  int *v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDPushConnectionDisconnected__has;
    v9 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__success;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__dropped;
    v12 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__noBuf;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 0x200u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_109;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_113;
          }
          v29 = v9;
          goto LABEL_110;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 2u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_109;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_110;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 0x80u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_109;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_110;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 0x100u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__noResources;
              goto LABEL_109;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__noResources;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__noResources;
          goto LABEL_110;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 0x40u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__noAck;
              goto LABEL_109;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__noAck;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__noAck;
          goto LABEL_110;
        case 6u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 1u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__chipModeError;
              goto LABEL_109;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__chipModeError;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__chipModeError;
          goto LABEL_110;
        case 7u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 4u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__expired;
              goto LABEL_109;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__expired;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__expired;
          goto LABEL_110;
        case 8u:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 0x400u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__txFailure;
              goto LABEL_109;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__txFailure;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__txFailure;
          goto LABEL_110;
        case 9u:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 8u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__firmwareFreePacket;
              goto LABEL_109;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__firmwareFreePacket;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__firmwareFreePacket;
          goto LABEL_110;
        case 0xAu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 0x20u;
          while (2)
          {
            v80 = *v4;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__maxRetries;
              goto LABEL_109;
            }
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v24 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v28 = 0;
              v78 += 7;
              v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__maxRetries;
              v30 = v79++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__maxRetries;
          goto LABEL_110;
        case 0xBu:
          v83 = 0;
          v84 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[983]) |= 0x10u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v2;
          v34 = v8;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v8 = v34;
          v2 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v85 = *v4;
        v86 = *(_QWORD *)(a2 + v85);
        if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
          break;
        v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
        *(_QWORD *)(a2 + v85) = v86 + 1;
        v24 |= (unint64_t)(v87 & 0x7F) << v83;
        if ((v87 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__forceLifetimeExp;
          goto LABEL_110;
        }
        v28 = 0;
        v83 += 7;
        v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__forceLifetimeExp;
        v30 = v84++ > 8;
        if (v30)
          goto LABEL_113;
      }
      v29 = &OBJC_IVAR___AWDWiFiDPSPerACTxCompletionSnapshot__forceLifetimeExp;
LABEL_109:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_110:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_113:
      *(_DWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDWiFiDPSReportReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  unint64_t v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  AWDWiFiDPSNotification *v25;
  AWDWiFiDPSActiveProbeStats *v26;
  AWDWiFiDPSCountersSample *v27;
  unint64_t v28;
  AWDWiFiDPSEpilogue *v29;
  AWDWiFiDPSSnapshot *v30;
  id v31;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  v8 = 0x24C10D000uLL;
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    while (1)
    {
      v12 = *v3;
      v13 = *(_QWORD *)(a2 + v12);
      if (v13 == -1 || v13 >= *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v13);
      *(_QWORD *)(a2 + v12) = v13 + 1;
      v11 |= (unint64_t)(v14 & 0x7F) << v9;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v9 += 7;
      v15 = v10++ >= 9;
      if (v15)
      {
        v11 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v11 = 0;
LABEL_14:
    if (v16 || (v11 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v11 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_47;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v20 = 0;
            goto LABEL_49;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_47:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_49:
        *(_QWORD *)(a1 + 8) = v20;
        goto LABEL_50;
      case 2u:
        v25 = objc_alloc_init(AWDWiFiDPSNotification);
        objc_msgSend((id)a1, "addStallNotification:", v25);

        if (!PBReaderPlaceMark() || (AWDWiFiDPSNotificationReadFrom((uint64_t)v25, a2) & 1) == 0)
          return 0;
        goto LABEL_45;
      case 3u:
        v26 = objc_alloc_init(AWDWiFiDPSActiveProbeStats);
        objc_msgSend((id)a1, "addProbeResult:", v26);

        if (!PBReaderPlaceMark() || (AWDWiFiDPSActiveProbeStatsReadFrom((uint64_t)v26, a2) & 1) == 0)
          return 0;
        goto LABEL_45;
      case 4u:
        v27 = objc_alloc_init(AWDWiFiDPSCountersSample);
        objc_msgSend((id)a1, "addDpsCounterSample:", v27);

        if (!PBReaderPlaceMark() || (AWDWiFiDPSCountersSampleReadFrom((uint64_t)v27, a2) & 1) == 0)
          return 0;
        goto LABEL_45;
      case 5u:
        v28 = v8;
        v29 = objc_alloc_init(AWDWiFiDPSEpilogue);

        *(_QWORD *)(a1 + 24) = v29;
        if (PBReaderPlaceMark() && (AWDWiFiDPSEpilogueReadFrom((uint64_t)v29, a2) & 1) != 0)
          goto LABEL_39;
        return 0;
      case 6u:
        v28 = v8;
        v30 = objc_alloc_init(AWDWiFiDPSSnapshot);

        *(_QWORD *)(a1 + 40) = v30;
        if (!PBReaderPlaceMark()
          || (AWDWiFiDPSSnapshotReadFrom((id *)&v30->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
LABEL_39:
        PBReaderRecallMark();
        v8 = v28;
        goto LABEL_50;
      case 7u:
        v31 = objc_alloc_init(*(Class *)(v8 + 1368));
        objc_msgSend((id)a1, "addUsbEvent:", v31);

        if (PBReaderPlaceMark() && (AWDWiFiUSBEventNotificationReadFrom((uint64_t)v31, a2) & 1) != 0)
        {
LABEL_45:
          PBReaderRecallMark();
LABEL_50:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_50;
    }
  }
}

uint64_t AWDWiFiDPSSnapshotReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  AWDWiFiDPSPerACTxCompletionSnapshot *v17;
  uint64_t result;
  AWDWiFiDPSPerACTxCompletionSnapshot *v19;
  uint64_t v20;
  AWDWiFiDPSBTSnapshot *v21;
  AWDWiFiDPSAWDLSnapshot *v22;
  AWDWiFiUsageSnapshot *v23;
  uint64_t v24;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(AWDWiFiDPSPerACTxCompletionSnapshot);

        a1[6] = v17;
        if (!PBReaderPlaceMark() || !AWDWiFiDPSPerACTxCompletionSnapshotReadFrom((uint64_t)v17, a2))
          return 0;
        goto LABEL_41;
      case 2u:
        v19 = objc_alloc_init(AWDWiFiDPSPerACTxCompletionSnapshot);

        v20 = 7;
        goto LABEL_27;
      case 3u:
        v19 = objc_alloc_init(AWDWiFiDPSPerACTxCompletionSnapshot);

        v20 = 9;
        goto LABEL_27;
      case 4u:
        v19 = objc_alloc_init(AWDWiFiDPSPerACTxCompletionSnapshot);

        v20 = 8;
LABEL_27:
        a1[v20] = v19;
        if (!PBReaderPlaceMark() || !AWDWiFiDPSPerACTxCompletionSnapshotReadFrom((uint64_t)v19, a2))
          return 0;
        goto LABEL_41;
      case 5u:
        v21 = objc_alloc_init(AWDWiFiDPSBTSnapshot);

        a1[2] = v21;
        if (!PBReaderPlaceMark() || (AWDWiFiDPSBTSnapshotReadFrom((uint64_t)v21, a2) & 1) == 0)
          return 0;
        goto LABEL_41;
      case 6u:
        v22 = objc_alloc_init(AWDWiFiDPSAWDLSnapshot);

        a1[1] = v22;
        if (!PBReaderPlaceMark() || (AWDWiFiDPSAWDLSnapshotReadFrom((uint64_t)v22, a2) & 1) == 0)
          return 0;
        goto LABEL_41;
      case 7u:
        v23 = objc_alloc_init(AWDWiFiUsageSnapshot);

        v24 = 4;
        goto LABEL_39;
      case 8u:
        v23 = objc_alloc_init(AWDWiFiUsageSnapshot);

        v24 = 5;
        goto LABEL_39;
      case 9u:
        v23 = objc_alloc_init(AWDWiFiUsageSnapshot);

        v24 = 3;
LABEL_39:
        a1[v24] = v23;
        if (PBReaderPlaceMark() && (AWDWiFiUsageSnapshotReadFrom((uint64_t)v23, a2) & 1) != 0)
        {
LABEL_41:
          PBReaderRecallMark();
LABEL_42:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_42;
    }
  }
}

BOOL AWDWiFiLPMReportReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  int *v24;
  BOOL v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  unint64_t v169;
  char v170;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x1000000u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__timestamp;
              goto LABEL_261;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v23 = 0;
            v17 += 7;
            v24 = &OBJC_IVAR___AWDWiFiLPMReport__timestamp;
            v25 = v18++ > 8;
            if (v25)
              goto LABEL_265;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__timestamp;
          goto LABEL_262;
        case 2u:
          v26 = 0;
          v27 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 1u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__associatedDuration;
              goto LABEL_261;
            }
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v19 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v23 = 0;
              v26 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__associatedDuration;
              v25 = v27++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__associatedDuration;
          goto LABEL_262;
        case 3u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x800000u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__sleepDuration;
              goto LABEL_261;
            }
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v19 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v23 = 0;
              v31 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__sleepDuration;
              v25 = v32++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__sleepDuration;
          goto LABEL_262;
        case 4u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x400000u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__roamDuration;
              goto LABEL_261;
            }
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v19 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v23 = 0;
              v36 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__roamDuration;
              v25 = v37++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__roamDuration;
          goto LABEL_262;
        case 5u:
          v41 = 0;
          v42 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x100u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__phyOffDuration;
              goto LABEL_261;
            }
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v19 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v23 = 0;
              v41 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__phyOffDuration;
              v25 = v42++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__phyOffDuration;
          goto LABEL_262;
        case 6u:
          v46 = 0;
          v47 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x20000000u;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__transmitDuration;
              goto LABEL_261;
            }
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v19 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v23 = 0;
              v46 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__transmitDuration;
              v25 = v47++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__transmitDuration;
          goto LABEL_262;
        case 7u:
          v51 = 0;
          v52 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x200000u;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__receiveDuration;
              goto LABEL_261;
            }
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v19 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v23 = 0;
              v51 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__receiveDuration;
              v25 = v52++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__receiveDuration;
          goto LABEL_262;
        case 8u:
          v56 = 0;
          v57 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x2000000u;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalLPASDuration;
              goto LABEL_261;
            }
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v19 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v23 = 0;
              v56 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalLPASDuration;
              v25 = v57++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalLPASDuration;
          goto LABEL_262;
        case 9u:
          v61 = 0;
          v62 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x200u;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumedInSelfManagedLPASMode;
              goto LABEL_261;
            }
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v19 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v23 = 0;
              v61 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumedInSelfManagedLPASMode;
              v25 = v62++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumedInSelfManagedLPASMode;
          goto LABEL_262;
        case 0xAu:
          v66 = 0;
          v67 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x8000u;
          while (2)
          {
            v68 = *v3;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToMac;
              goto LABEL_261;
            }
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v19 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v23 = 0;
              v66 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToMac;
              v25 = v67++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToMac;
          goto LABEL_262;
        case 0xBu:
          v71 = 0;
          v72 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x10000u;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToRF;
              goto LABEL_261;
            }
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v19 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v23 = 0;
              v71 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToRF;
              v25 = v72++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToRF;
          goto LABEL_262;
        case 0xCu:
          v76 = 0;
          v77 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x100000u;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
              goto LABEL_261;
            }
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v19 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v23 = 0;
              v76 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
              v25 = v77++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          goto LABEL_262;
        case 0xDu:
          v81 = 0;
          v82 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x20000u;
          while (2)
          {
            v83 = *v3;
            v84 = *(_QWORD *)(a2 + v83);
            if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToRoamScan;
              goto LABEL_261;
            }
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v84 + 1;
            v19 |= (unint64_t)(v85 & 0x7F) << v81;
            if (v85 < 0)
            {
              v23 = 0;
              v81 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToRoamScan;
              v25 = v82++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToRoamScan;
          goto LABEL_262;
        case 0xEu:
          v86 = 0;
          v87 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x1000u;
          while (2)
          {
            v88 = *v3;
            v89 = *(_QWORD *)(a2 + v88);
            if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToAssocScan;
              goto LABEL_261;
            }
            v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
            *(_QWORD *)(a2 + v88) = v89 + 1;
            v19 |= (unint64_t)(v90 & 0x7F) << v86;
            if (v90 < 0)
            {
              v23 = 0;
              v86 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToAssocScan;
              v25 = v87++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToAssocScan;
          goto LABEL_262;
        case 0xFu:
          v91 = 0;
          v92 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x2000u;
          while (2)
          {
            v93 = *v3;
            v94 = *(_QWORD *)(a2 + v93);
            if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToEPNOScan;
              goto LABEL_261;
            }
            v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
            *(_QWORD *)(a2 + v93) = v94 + 1;
            v19 |= (unint64_t)(v95 & 0x7F) << v91;
            if (v95 < 0)
            {
              v23 = 0;
              v91 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToEPNOScan;
              v25 = v92++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToEPNOScan;
          goto LABEL_262;
        case 0x10u:
          v96 = 0;
          v97 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x80000u;
          while (2)
          {
            v98 = *v3;
            v99 = *(_QWORD *)(a2 + v98);
            if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToTx;
              goto LABEL_261;
            }
            v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
            *(_QWORD *)(a2 + v98) = v99 + 1;
            v19 |= (unint64_t)(v100 & 0x7F) << v96;
            if (v100 < 0)
            {
              v23 = 0;
              v96 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToTx;
              v25 = v97++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToTx;
          goto LABEL_262;
        case 0x11u:
          v101 = 0;
          v102 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x40000u;
          while (2)
          {
            v103 = *v3;
            v104 = *(_QWORD *)(a2 + v103);
            if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToRx;
              goto LABEL_261;
            }
            v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
            *(_QWORD *)(a2 + v103) = v104 + 1;
            v19 |= (unint64_t)(v105 & 0x7F) << v101;
            if (v105 < 0)
            {
              v23 = 0;
              v101 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToRx;
              v25 = v102++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToRx;
          goto LABEL_262;
        case 0x12u:
          v106 = 0;
          v107 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x4000u;
          while (2)
          {
            v108 = *v3;
            v109 = *(_QWORD *)(a2 + v108);
            if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToFRTS;
              goto LABEL_261;
            }
            v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
            *(_QWORD *)(a2 + v108) = v109 + 1;
            v19 |= (unint64_t)(v110 & 0x7F) << v106;
            if (v110 < 0)
            {
              v23 = 0;
              v106 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToFRTS;
              v25 = v107++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToFRTS;
          goto LABEL_262;
        case 0x13u:
          v111 = 0;
          v112 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x800u;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToAWDLTx;
              goto LABEL_261;
            }
            v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v114 + 1;
            v19 |= (unint64_t)(v115 & 0x7F) << v111;
            if (v115 < 0)
            {
              v23 = 0;
              v111 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToAWDLTx;
              v25 = v112++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToAWDLTx;
          goto LABEL_262;
        case 0x14u:
          v116 = 0;
          v117 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x400u;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToAWDLRx;
              goto LABEL_261;
            }
            v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v119 + 1;
            v19 |= (unint64_t)(v120 & 0x7F) << v116;
            if (v120 < 0)
            {
              v23 = 0;
              v116 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToAWDLRx;
              v25 = v117++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToAWDLRx;
          goto LABEL_262;
        case 0x15u:
          v121 = 0;
          v122 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 4u;
          while (2)
          {
            v123 = *v3;
            v124 = *(_QWORD *)(a2 + v123);
            if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconReceivedInLpas;
              goto LABEL_261;
            }
            v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
            *(_QWORD *)(a2 + v123) = v124 + 1;
            v19 |= (unint64_t)(v125 & 0x7F) << v121;
            if (v125 < 0)
            {
              v23 = 0;
              v121 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconReceivedInLpas;
              v25 = v122++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconReceivedInLpas;
          goto LABEL_262;
        case 0x16u:
          v126 = 0;
          v127 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x10u;
          while (2)
          {
            v128 = *v3;
            v129 = *(_QWORD *)(a2 + v128);
            if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconsMissedInLpas;
              goto LABEL_261;
            }
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
            *(_QWORD *)(a2 + v128) = v129 + 1;
            v19 |= (unint64_t)(v130 & 0x7F) << v126;
            if (v130 < 0)
            {
              v23 = 0;
              v126 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconsMissedInLpas;
              v25 = v127++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconsMissedInLpas;
          goto LABEL_262;
        case 0x17u:
          v131 = 0;
          v132 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 8u;
          while (2)
          {
            v133 = *v3;
            v134 = *(_QWORD *)(a2 + v133);
            if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconsEarlyTerminatedInLpas;
              goto LABEL_261;
            }
            v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v134 + 1;
            v19 |= (unint64_t)(v135 & 0x7F) << v131;
            if (v135 < 0)
            {
              v23 = 0;
              v131 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconsEarlyTerminatedInLpas;
              v25 = v132++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconsEarlyTerminatedInLpas;
          goto LABEL_262;
        case 0x18u:
          v136 = 0;
          v137 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x20u;
          while (2)
          {
            v138 = *v3;
            v139 = *(_QWORD *)(a2 + v138);
            if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconsScheduledInLpas;
              goto LABEL_261;
            }
            v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
            *(_QWORD *)(a2 + v138) = v139 + 1;
            v19 |= (unint64_t)(v140 & 0x7F) << v136;
            if (v140 < 0)
            {
              v23 = 0;
              v136 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconsScheduledInLpas;
              v25 = v137++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__beaconsScheduledInLpas;
          goto LABEL_262;
        case 0x19u:
          v141 = 0;
          v142 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x4000000u;
          while (2)
          {
            v143 = *v3;
            v144 = *(_QWORD *)(a2 + v143);
            if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalLpasPowerBudget;
              goto LABEL_261;
            }
            v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v144 + 1;
            v19 |= (unint64_t)(v145 & 0x7F) << v141;
            if (v145 < 0)
            {
              v23 = 0;
              v141 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalLpasPowerBudget;
              v25 = v142++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalLpasPowerBudget;
          goto LABEL_262;
        case 0x1Au:
          v146 = 0;
          v147 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x40u;
          while (2)
          {
            v148 = *v3;
            v149 = *(_QWORD *)(a2 + v148);
            if (v149 == -1 || v149 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__lpasPowerBudgetRemaining;
              goto LABEL_261;
            }
            v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
            *(_QWORD *)(a2 + v148) = v149 + 1;
            v19 |= (unint64_t)(v150 & 0x7F) << v146;
            if (v150 < 0)
            {
              v23 = 0;
              v146 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__lpasPowerBudgetRemaining;
              v25 = v147++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__lpasPowerBudgetRemaining;
          goto LABEL_262;
        case 0x1Bu:
          v151 = 0;
          v152 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x8000000u;
          while (2)
          {
            v153 = *v3;
            v154 = *(_QWORD *)(a2 + v153);
            if (v154 == -1 || v154 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalLpasPowerMonitoringPeriod;
              goto LABEL_261;
            }
            v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
            *(_QWORD *)(a2 + v153) = v154 + 1;
            v19 |= (unint64_t)(v155 & 0x7F) << v151;
            if (v155 < 0)
            {
              v23 = 0;
              v151 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalLpasPowerMonitoringPeriod;
              v25 = v152++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalLpasPowerMonitoringPeriod;
          goto LABEL_262;
        case 0x1Cu:
          v156 = 0;
          v157 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x80u;
          while (2)
          {
            v158 = *v3;
            v159 = *(_QWORD *)(a2 + v158);
            if (v159 == -1 || v159 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__lpasPowerPeriodRemaining;
              goto LABEL_261;
            }
            v160 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v159);
            *(_QWORD *)(a2 + v158) = v159 + 1;
            v19 |= (unint64_t)(v160 & 0x7F) << v156;
            if (v160 < 0)
            {
              v23 = 0;
              v156 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__lpasPowerPeriodRemaining;
              v25 = v157++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__lpasPowerPeriodRemaining;
          goto LABEL_262;
        case 0x1Du:
          v161 = 0;
          v162 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 2u;
          while (2)
          {
            v163 = *v3;
            v164 = *(_QWORD *)(a2 + v163);
            if (v164 == -1 || v164 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__associatedSleepDuration;
              goto LABEL_261;
            }
            v165 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v164);
            *(_QWORD *)(a2 + v163) = v164 + 1;
            v19 |= (unint64_t)(v165 & 0x7F) << v161;
            if (v165 < 0)
            {
              v23 = 0;
              v161 += 7;
              v24 = &OBJC_IVAR___AWDWiFiLPMReport__associatedSleepDuration;
              v25 = v162++ > 8;
              if (v25)
                goto LABEL_265;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__associatedSleepDuration;
          goto LABEL_262;
        case 0x1Eu:
          v166 = 0;
          v167 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 248) |= 0x10000000u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v168 = *v3;
        v169 = *(_QWORD *)(a2 + v168);
        if (v169 == -1 || v169 >= *(_QWORD *)(a2 + *v4))
          break;
        v170 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v169);
        *(_QWORD *)(a2 + v168) = v169 + 1;
        v19 |= (unint64_t)(v170 & 0x7F) << v166;
        if ((v170 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalTimeForBugetExpiry;
          goto LABEL_262;
        }
        v23 = 0;
        v166 += 7;
        v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalTimeForBugetExpiry;
        v25 = v167++ > 8;
        if (v25)
          goto LABEL_265;
      }
      v24 = &OBJC_IVAR___AWDWiFiLPMReport__totalTimeForBugetExpiry;
LABEL_261:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_262:
      v23 = *(_BYTE *)(a2 + *v5) ? 0 : v19;
LABEL_265:
      *(_QWORD *)(a1 + *v24) = v23;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWiFiLTECoexBinReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  int *v29;
  BOOL v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  int *v86;
  int *v87;
  uint64_t v88;
  int *v89;
  int *v90;
  uint64_t v91;
  char v92;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v9 = &OBJC_IVAR___AWDWiFiLTECoexBin__rxframe;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDWiFiLTECoexBin__txframe;
    v12 = &OBJC_IVAR___AWDWiFiLTECoexBin__rxrtry;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 2u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_117;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_121;
          }
          v29 = v9;
          goto LABEL_118;
        case 2u:
          v31 = 0;
          v32 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 0x40u;
          while (2)
          {
            v33 = *v4;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_117;
            }
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v24 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v28 = 0;
              v31 += 7;
              v29 = v11;
              v30 = v32++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_118;
        case 3u:
          v36 = 0;
          v37 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 4u;
          while (2)
          {
            v38 = *v4;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_117;
            }
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v24 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v28 = 0;
              v36 += 7;
              v29 = v12;
              v30 = v37++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_118;
        case 4u:
          v41 = 0;
          v42 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 0x400u;
          while (2)
          {
            v43 = *v4;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txretrans;
              goto LABEL_117;
            }
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v24 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v28 = 0;
              v41 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txretrans;
              v30 = v42++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txretrans;
          goto LABEL_118;
        case 5u:
          v46 = 0;
          v47 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 0x80u;
          while (2)
          {
            v48 = *v4;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txnocts;
              goto LABEL_117;
            }
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v24 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v28 = 0;
              v46 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txnocts;
              v30 = v47++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txnocts;
          goto LABEL_118;
        case 6u:
          v51 = 0;
          v52 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 0x800u;
          while (2)
          {
            v53 = *v4;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txrts;
              goto LABEL_117;
            }
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v24 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v28 = 0;
              v51 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txrts;
              v30 = v52++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txrts;
          goto LABEL_118;
        case 7u:
          v56 = 0;
          v57 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 0x20u;
          while (2)
          {
            v58 = *v4;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txdeauth;
              goto LABEL_117;
            }
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v24 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v28 = 0;
              v56 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txdeauth;
              v30 = v57++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txdeauth;
          goto LABEL_118;
        case 8u:
          v61 = 0;
          v62 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 8u;
          while (2)
          {
            v63 = *v4;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txassocreq;
              goto LABEL_117;
            }
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v24 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v28 = 0;
              v61 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txassocreq;
              v30 = v62++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txassocreq;
          goto LABEL_118;
        case 9u:
          v66 = 0;
          v67 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 0x10u;
          while (2)
          {
            v68 = *v4;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txassocrsp;
              goto LABEL_117;
            }
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v24 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v28 = 0;
              v66 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txassocrsp;
              v30 = v67++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txassocrsp;
          goto LABEL_118;
        case 0xAu:
          v71 = 0;
          v72 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 0x100u;
          while (2)
          {
            v73 = *v4;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txreassocreq;
              goto LABEL_117;
            }
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v24 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v28 = 0;
              v71 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txreassocreq;
              v30 = v72++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txreassocreq;
          goto LABEL_118;
        case 0xBu:
          v76 = 0;
          v77 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 0x200u;
          while (2)
          {
            v78 = *v4;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txreassocrsp;
              goto LABEL_117;
            }
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v24 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v28 = 0;
              v76 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txreassocrsp;
              v30 = v77++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__txreassocrsp;
          goto LABEL_118;
        case 0xCu:
          v81 = 0;
          v82 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[19]) |= 1u;
          break;
        default:
          v86 = v9;
          v87 = v11;
          v88 = v2;
          v89 = v8;
          v90 = v12;
          v91 = a1;
          v92 = PBReaderSkipValueWithTag();
          a1 = v91;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v90;
          v8 = v89;
          v2 = v88;
          v11 = v87;
          v9 = v86;
          if ((v92 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v83 = *v4;
        v84 = *(_QWORD *)(a2 + v83);
        if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v5))
          break;
        v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v84);
        *(_QWORD *)(a2 + v83) = v84 + 1;
        v24 |= (unint64_t)(v85 & 0x7F) << v81;
        if ((v85 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__ctsnotrxafterrts;
          goto LABEL_118;
        }
        v28 = 0;
        v81 += 7;
        v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__ctsnotrxafterrts;
        v30 = v82++ > 8;
        if (v30)
          goto LABEL_121;
      }
      v29 = &OBJC_IVAR___AWDWiFiLTECoexBin__ctsnotrxafterrts;
LABEL_117:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_118:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_121:
      *(_QWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDWiFiLTECoexCountersReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  AWDWiFiLTECoexBin *v24;
  AWDWiFiLTECoexBin *v25;
  uint64_t v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
        goto LABEL_40;
      case 2u:
        v24 = objc_alloc_init(AWDWiFiLTECoexBin);

        *(_QWORD *)(a1 + 32) = v24;
        if (PBReaderPlaceMark() && AWDWiFiLTECoexBinReadFrom((uint64_t)v24, a2))
          goto LABEL_30;
        return 0;
      case 3u:
        v25 = objc_alloc_init(AWDWiFiLTECoexBin);

        v26 = 24;
        goto LABEL_33;
      case 4u:
        v25 = objc_alloc_init(AWDWiFiLTECoexBin);

        v26 = 16;
LABEL_33:
        *(_QWORD *)(a1 + v26) = v25;
        if (PBReaderPlaceMark() && AWDWiFiLTECoexBinReadFrom((uint64_t)v25, a2))
        {
LABEL_30:
          PBReaderRecallMark();
LABEL_40:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_40;
    }
  }
}

BOOL AWDWiFiLTECoexTxBlankingReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__timestamp;
              goto LABEL_77;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              v19 = 0;
              v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__timestamp;
              goto LABEL_80;
            }
          }
          v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__timestamp;
          goto LABEL_78;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type4BlankingCount;
              goto LABEL_77;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type4BlankingCount;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type4BlankingCount;
          goto LABEL_78;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type4ResumeCount;
              goto LABEL_77;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type4ResumeCount;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type4ResumeCount;
          goto LABEL_78;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 4u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type4BlankingTimeInMS;
              goto LABEL_77;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type4BlankingTimeInMS;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type4BlankingTimeInMS;
          goto LABEL_78;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 0x10u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type7BlankingCount;
              goto LABEL_77;
            }
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v19 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v23 = v41++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type7BlankingCount;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type7BlankingCount;
          goto LABEL_78;
        case 6u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 0x40u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type7ResumeCount;
              goto LABEL_77;
            }
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v19 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v23 = v46++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type7ResumeCount;
                goto LABEL_80;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type7ResumeCount;
          goto LABEL_78;
        case 7u:
          v50 = 0;
          v51 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 0x20u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v52 = *v3;
        v53 = *(_QWORD *)(a2 + v52);
        if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          break;
        v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
        *(_QWORD *)(a2 + v52) = v53 + 1;
        v19 |= (unint64_t)(v54 & 0x7F) << v50;
        if ((v54 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type7BlankingTimeInMS;
          goto LABEL_78;
        }
        v50 += 7;
        v23 = v51++ > 8;
        if (v23)
        {
          v19 = 0;
          v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type7BlankingTimeInMS;
          goto LABEL_80;
        }
      }
      v24 = &OBJC_IVAR___AWDWiFiLTECoexTxBlanking__type7BlankingTimeInMS;
LABEL_77:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_78:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_80:
      *(_QWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiLTEWCI2CountersReadFrom(char *a1, uint64_t a2)
{
  __int16 *v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  char v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  BOOL v18;
  int v19;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  __int16 *v27;
  int *v28;
  int *v29;
  int *v30;
  uint64_t result;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  int *v82;
  char *v83;
  AWDWiFiLTEWCI2CountersSliceSpecific *v84;
  char *v85;
  uint64_t v86;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  v9 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  v10 = (int *)MEMORY[0x24BE7AF30];
  v11 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    while (1)
    {
      v15 = *v4;
      v16 = *(_QWORD *)(a2 + v15);
      if (v16 == -1 || v16 >= *(_QWORD *)(a2 + *v5))
        break;
      v17 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v16);
      *(_QWORD *)(a2 + v15) = v16 + 1;
      v14 |= (unint64_t)(v17 & 0x7F) << v12;
      if ((v17 & 0x80) == 0)
        goto LABEL_12;
      v12 += 7;
      v18 = v13++ >= 9;
      if (v18)
      {
        v14 = 0;
        v19 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v19 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v14 = 0;
LABEL_14:
    if (v19 || (v14 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v14 >> 3))
    {
      case 1u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 0x10u;
        while (1)
        {
          v24 = *v4;
          v25 = *(_QWORD *)(a2 + v24);
          if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v5))
            break;
          v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v25);
          *(_QWORD *)(a2 + v24) = v25 + 1;
          v23 |= (unint64_t)(v26 & 0x7F) << v21;
          if ((v26 & 0x80) == 0)
            goto LABEL_102;
          v21 += 7;
          v18 = v22++ >= 9;
          if (v18)
          {
            v23 = 0;
            goto LABEL_104;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_102:
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_104:
        v86 = v9[46];
        goto LABEL_145;
      case 2u:
        v32 = 0;
        v33 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 0x400u;
        while (2)
        {
          v34 = *v4;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v23 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              v18 = v33++ >= 9;
              if (v18)
              {
                v23 = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_108:
        v86 = v11[47];
        goto LABEL_145;
      case 3u:
        v37 = 0;
        v38 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 0x200u;
        while (2)
        {
          v39 = *v4;
          v40 = *(_QWORD *)(a2 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 1;
            v23 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              v18 = v38++ >= 9;
              if (v18)
              {
                v23 = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_112:
        v86 = 80;
        goto LABEL_145;
      case 4u:
        v42 = 0;
        v43 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 2u;
        while (2)
        {
          v44 = *v4;
          v45 = *(_QWORD *)(a2 + v44);
          if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v45);
            *(_QWORD *)(a2 + v44) = v45 + 1;
            v23 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              v18 = v43++ >= 9;
              if (v18)
              {
                v23 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_116:
        v86 = 16;
        goto LABEL_145;
      case 5u:
        v47 = 0;
        v48 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 1u;
        while (2)
        {
          v49 = *v4;
          v50 = *(_QWORD *)(a2 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v50);
            *(_QWORD *)(a2 + v49) = v50 + 1;
            v23 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              v18 = v48++ >= 9;
              if (v18)
              {
                v23 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_120:
        v86 = 8;
        goto LABEL_145;
      case 6u:
        v52 = 0;
        v53 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 0x80u;
        while (2)
        {
          v54 = *v4;
          v55 = *(_QWORD *)(a2 + v54);
          if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v55);
            *(_QWORD *)(a2 + v54) = v55 + 1;
            v23 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              v18 = v53++ >= 9;
              if (v18)
              {
                v23 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_124:
        v86 = 64;
        goto LABEL_145;
      case 7u:
        v57 = 0;
        v58 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 0x40u;
        while (2)
        {
          v59 = *v4;
          v60 = *(_QWORD *)(a2 + v59);
          if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v60);
            *(_QWORD *)(a2 + v59) = v60 + 1;
            v23 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              v18 = v58++ >= 9;
              if (v18)
              {
                v23 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_128:
        v86 = 56;
        goto LABEL_145;
      case 8u:
        v62 = 0;
        v63 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 8u;
        while (2)
        {
          v64 = *v4;
          v65 = *(_QWORD *)(a2 + v64);
          if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v65);
            *(_QWORD *)(a2 + v64) = v65 + 1;
            v23 |= (unint64_t)(v66 & 0x7F) << v62;
            if (v66 < 0)
            {
              v62 += 7;
              v18 = v63++ >= 9;
              if (v18)
              {
                v23 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_132:
        v86 = 32;
        goto LABEL_145;
      case 9u:
        v67 = 0;
        v68 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 4u;
        while (2)
        {
          v69 = *v4;
          v70 = *(_QWORD *)(a2 + v69);
          if (v70 == -1 || v70 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v70);
            *(_QWORD *)(a2 + v69) = v70 + 1;
            v23 |= (unint64_t)(v71 & 0x7F) << v67;
            if (v71 < 0)
            {
              v67 += 7;
              v18 = v68++ >= 9;
              if (v18)
              {
                v23 = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_136:
        v86 = 24;
        goto LABEL_145;
      case 0xAu:
        v72 = 0;
        v73 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 0x100u;
        while (2)
        {
          v74 = *v4;
          v75 = *(_QWORD *)(a2 + v74);
          if (v75 == -1 || v75 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v75);
            *(_QWORD *)(a2 + v74) = v75 + 1;
            v23 |= (unint64_t)(v76 & 0x7F) << v72;
            if (v76 < 0)
            {
              v72 += 7;
              v18 = v73++ >= 9;
              if (v18)
              {
                v23 = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_140:
        v86 = 72;
        goto LABEL_145;
      case 0xBu:
        v77 = 0;
        v78 = 0;
        v23 = 0;
        *(_WORD *)&a1[v8[45]] |= 0x20u;
        while (2)
        {
          v79 = *v4;
          v80 = *(_QWORD *)(a2 + v79);
          if (v80 == -1 || v80 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v80);
            *(_QWORD *)(a2 + v79) = v80 + 1;
            v23 |= (unint64_t)(v81 & 0x7F) << v77;
            if (v81 < 0)
            {
              v77 += 7;
              v18 = v78++ >= 9;
              if (v18)
              {
                v23 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_144:
        v86 = 48;
LABEL_145:
        *(_QWORD *)&a1[v86] = v23;
        goto LABEL_146;
      case 0xCu:
        v82 = v11;
        v83 = a1;
        v84 = objc_alloc_init(AWDWiFiLTEWCI2CountersSliceSpecific);
        v85 = v83;
        objc_msgSend(v83, "addWci2Counters:", v84);

        if (PBReaderPlaceMark() && AWDWiFiLTEWCI2CountersSliceSpecificReadFrom((uint64_t)v84, a2))
        {
          PBReaderRecallMark();
          v11 = v82;
          v2 = &jpt_209348B4C;
          v6 = (int *)MEMORY[0x24BE7AF48];
          a1 = v85;
LABEL_146:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
        return 0;
      default:
        v27 = v2;
        v28 = v8;
        v29 = v9;
        v30 = v11;
        result = PBReaderSkipValueWithTag();
        v11 = v30;
        v9 = v29;
        v8 = v28;
        v2 = v27;
        if (!(_DWORD)result)
          return result;
        goto LABEL_146;
    }
  }
}

BOOL AWDWiFiLTEWCI2CountersSliceSpecificReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  uint64_t v33;
  int *v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v9 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__timestamp;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__wlanRxPriTimeInMS;
    v12 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__wlanRxPriCount;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 0x10u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_109;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_113;
          }
          v29 = v9;
          goto LABEL_110;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 0x400u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_109;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_110;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 0x200u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_109;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_110;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 2u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__lteTxPowerLimitTimeInMS;
              goto LABEL_109;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__lteTxPowerLimitTimeInMS;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__lteTxPowerLimitTimeInMS;
          goto LABEL_110;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 1u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__lteTxPowerLimitCount;
              goto LABEL_109;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__lteTxPowerLimitCount;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__lteTxPowerLimitCount;
          goto LABEL_110;
        case 6u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 0x80u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__type4HonouredTimeInMS;
              goto LABEL_109;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__type4HonouredTimeInMS;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__type4HonouredTimeInMS;
          goto LABEL_110;
        case 7u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 0x40u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__type4HonouredCount;
              goto LABEL_109;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__type4HonouredCount;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__type4HonouredCount;
          goto LABEL_110;
        case 8u:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 8u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__timeSharingWLANTimeInMS;
              goto LABEL_109;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__timeSharingWLANTimeInMS;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__timeSharingWLANTimeInMS;
          goto LABEL_110;
        case 9u:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 4u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__timeSharingWLANIntervalCount;
              goto LABEL_109;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__timeSharingWLANIntervalCount;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__timeSharingWLANIntervalCount;
          goto LABEL_110;
        case 0xAu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 0x100u;
          while (2)
          {
            v80 = *v4;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__wlanProtectionFramesDueToLTECoexCount;
              goto LABEL_109;
            }
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v24 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v28 = 0;
              v78 += 7;
              v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__wlanProtectionFramesDueToLTECoexCount;
              v30 = v79++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__wlanProtectionFramesDueToLTECoexCount;
          goto LABEL_110;
        case 0xBu:
          v83 = 0;
          v84 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[58]) |= 0x20u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v2;
          v34 = v8;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v8 = v34;
          v2 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v85 = *v4;
        v86 = *(_QWORD *)(a2 + v85);
        if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
          break;
        v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
        *(_QWORD *)(a2 + v85) = v86 + 1;
        v24 |= (unint64_t)(v87 & 0x7F) << v83;
        if ((v87 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__type4DueToTimerExpiryCount;
          goto LABEL_110;
        }
        v28 = 0;
        v83 += 7;
        v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__type4DueToTimerExpiryCount;
        v30 = v84++ > 8;
        if (v30)
          goto LABEL_113;
      }
      v29 = &OBJC_IVAR___AWDWiFiLTEWCI2CountersSliceSpecific__type4DueToTimerExpiryCount;
LABEL_109:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_110:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_113:
      *(_QWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDWiFiLprxStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 4u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_71;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_73;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_71:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_73:
          v55 = 24;
          goto LABEL_86;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 2u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_77:
          v55 = 16;
          goto LABEL_86;
        case 3u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 48) |= 0x40u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_81;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_81:
          v56 = 44;
          goto LABEL_99;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v19 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_85:
          v55 = 8;
LABEL_86:
          *(_QWORD *)(a1 + v55) = v19;
          continue;
        case 5u:
          v40 = 0;
          v41 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 48) |= 0x20u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v31 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_90:
          v56 = 40;
          goto LABEL_99;
        case 6u:
          v45 = 0;
          v46 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 48) |= 8u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v31 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_94:
          v56 = 32;
          goto LABEL_99;
        case 7u:
          v50 = 0;
          v51 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 48) |= 0x10u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v52 = *v3;
        v53 = *(_QWORD *)(a2 + v52);
        if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          break;
        v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
        *(_QWORD *)(a2 + v52) = v53 + 1;
        v31 |= (unint64_t)(v54 & 0x7F) << v50;
        if ((v54 & 0x80) == 0)
          goto LABEL_96;
        v50 += 7;
        v14 = v51++ >= 9;
        if (v14)
        {
          LODWORD(v31) = 0;
          goto LABEL_98;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_96:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v31) = 0;
LABEL_98:
      v56 = 36;
LABEL_99:
      *(_DWORD *)(a1 + v56) = v31;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetric11axLinkChangeDataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  void *Data;
  id v75;
  uint64_t v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  char v112;
  unsigned int v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  char v127;
  unsigned int v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  char v132;
  unsigned int v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  void *v137;
  char v138;
  unsigned int v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  void *v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  unint64_t v183;
  char v184;
  void *v185;
  void *v186;
  void *v187;
  void *v188;
  char v189;
  unsigned int v190;
  uint64_t v191;
  unint64_t v192;
  char v193;
  char v194;
  unsigned int v195;
  uint64_t v196;
  unint64_t v197;
  char v198;
  char v199;
  unsigned int v200;
  uint64_t v201;
  unint64_t v202;
  char v203;
  char v204;
  unsigned int v205;
  uint64_t v206;
  unint64_t v207;
  char v208;
  char v209;
  unsigned int v210;
  uint64_t v211;
  unint64_t v212;
  char v213;
  char v214;
  unsigned int v215;
  uint64_t v216;
  unint64_t v217;
  char v218;
  char v219;
  unsigned int v220;
  uint64_t v221;
  unint64_t v222;
  char v223;
  char v224;
  unsigned int v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  char v229;
  unsigned int v230;
  uint64_t v231;
  unint64_t v232;
  char v233;
  char v234;
  unsigned int v235;
  uint64_t v236;
  unint64_t v237;
  char v238;
  char v239;
  unsigned int v240;
  uint64_t v241;
  unint64_t v242;
  char v243;
  BOOL v244;
  uint64_t v245;
  uint64_t v246;
  char v247;
  unsigned int v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  char v252;
  char v253;
  unsigned int v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  char v258;
  char v259;
  unsigned int v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  char v264;
  char v265;
  unsigned int v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  char v270;
  char v271;
  unsigned int v272;
  uint64_t v273;
  uint64_t v274;
  unint64_t v275;
  char v276;
  char v277;
  unsigned int v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  char v282;
  char v283;
  unsigned int v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  char v288;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_QWORD *)(a1 + 384) |= 1uLL;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_360;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_362;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_360:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_362:
              *(_QWORD *)(a1 + 176) = v20;
              goto LABEL_497;
            case 2u:
              if (v16 != 2)
              {
                v247 = 0;
                v248 = 0;
                v249 = 0;
                while (1)
                {
                  v250 = *v3;
                  v251 = *(_QWORD *)(a2 + v250);
                  if (v251 == -1 || v251 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_548;
                  v252 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v251);
                  *(_QWORD *)(a2 + v250) = v251 + 1;
                  v249 |= (unint64_t)(v252 & 0x7F) << v247;
                  if (v252 < 0)
                  {
                    v247 += 7;
                    v14 = v248++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_549;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v25 = 0;
                v26 = 0;
                v27 = 0;
                while (1)
                {
                  v28 = *v3;
                  v29 = *(_QWORD *)(a2 + v28);
                  if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
                  *(_QWORD *)(a2 + v28) = v29 + 1;
                  v27 |= (unint64_t)(v30 & 0x7F) << v25;
                  if (v30 < 0)
                  {
                    v25 += 7;
                    v14 = v26++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_38;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_38:
                PBRepeatedInt32Add();
              }
              goto LABEL_267;
            case 3u:
              v31 = 0;
              v32 = 0;
              v33 = 0;
              *(_QWORD *)(a1 + 384) |= 0x200000000uLL;
              while (2)
              {
                v34 = *v3;
                v35 = *(_QWORD *)(a2 + v34);
                if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
                  *(_QWORD *)(a2 + v34) = v35 + 1;
                  v33 |= (unint64_t)(v36 & 0x7F) << v31;
                  if (v36 < 0)
                  {
                    v31 += 7;
                    v14 = v32++ >= 9;
                    if (v14)
                    {
                      v33 = 0;
                      goto LABEL_366;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v33 = 0;
LABEL_366:
              v244 = v33 != 0;
              v245 = 381;
              goto LABEL_371;
            case 4u:
              v37 = 0;
              v38 = 0;
              v39 = 0;
              *(_QWORD *)(a1 + 384) |= 0x100000000uLL;
              while (2)
              {
                v40 = *v3;
                v41 = *(_QWORD *)(a2 + v40);
                if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
                  *(_QWORD *)(a2 + v40) = v41 + 1;
                  v39 |= (unint64_t)(v42 & 0x7F) << v37;
                  if (v42 < 0)
                  {
                    v37 += 7;
                    v14 = v38++ >= 9;
                    if (v14)
                    {
                      v39 = 0;
                      goto LABEL_370;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v39 = 0;
LABEL_370:
              v244 = v39 != 0;
              v245 = 380;
LABEL_371:
              *(_BYTE *)(a1 + v245) = v244;
              goto LABEL_497;
            case 5u:
              v43 = 0;
              v44 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x4000000uLL;
              while (2)
              {
                v46 = *v3;
                v47 = *(_QWORD *)(a2 + v46);
                if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
                  *(_QWORD *)(a2 + v46) = v47 + 1;
                  v45 |= (unint64_t)(v48 & 0x7F) << v43;
                  if (v48 < 0)
                  {
                    v43 += 7;
                    v14 = v44++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_375;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_375:
              v246 = 348;
              goto LABEL_496;
            case 6u:
              v49 = 0;
              v50 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x10000000uLL;
              while (2)
              {
                v51 = *v3;
                v52 = *(_QWORD *)(a2 + v51);
                if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
                  *(_QWORD *)(a2 + v51) = v52 + 1;
                  v45 |= (unint64_t)(v53 & 0x7F) << v49;
                  if (v53 < 0)
                  {
                    v49 += 7;
                    v14 = v50++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_379;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_379:
              v246 = 356;
              goto LABEL_496;
            case 7u:
              v54 = 0;
              v55 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 8uLL;
              while (2)
              {
                v56 = *v3;
                v57 = *(_QWORD *)(a2 + v56);
                if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
                  *(_QWORD *)(a2 + v56) = v57 + 1;
                  v45 |= (unint64_t)(v58 & 0x7F) << v54;
                  if (v58 < 0)
                  {
                    v54 += 7;
                    v14 = v55++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_383;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_383:
              v246 = 192;
              goto LABEL_496;
            case 8u:
              v59 = 0;
              v60 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x10uLL;
              while (2)
              {
                v61 = *v3;
                v62 = *(_QWORD *)(a2 + v61);
                if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
                  *(_QWORD *)(a2 + v61) = v62 + 1;
                  v45 |= (unint64_t)(v63 & 0x7F) << v59;
                  if (v63 < 0)
                  {
                    v59 += 7;
                    v14 = v60++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_387;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_387:
              v246 = 196;
              goto LABEL_496;
            case 9u:
              v64 = 0;
              v65 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x2000000uLL;
              while (2)
              {
                v66 = *v3;
                v67 = *(_QWORD *)(a2 + v66);
                if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
                  *(_QWORD *)(a2 + v66) = v67 + 1;
                  v45 |= (unint64_t)(v68 & 0x7F) << v64;
                  if (v68 < 0)
                  {
                    v64 += 7;
                    v14 = v65++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_391;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_391:
              v246 = 344;
              goto LABEL_496;
            case 0xAu:
              v69 = 0;
              v70 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x40uLL;
              while (2)
              {
                v71 = *v3;
                v72 = *(_QWORD *)(a2 + v71);
                if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
                  *(_QWORD *)(a2 + v71) = v72 + 1;
                  v45 |= (unint64_t)(v73 & 0x7F) << v69;
                  if (v73 < 0)
                  {
                    v69 += 7;
                    v14 = v70++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_395;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_395:
              v246 = 204;
              goto LABEL_496;
            case 0xBu:
              Data = (void *)PBReaderReadData();

              v75 = Data;
              v76 = 336;
              goto LABEL_279;
            case 0x10u:
              v77 = 0;
              v78 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x8000000uLL;
              while (2)
              {
                v79 = *v3;
                v80 = *(_QWORD *)(a2 + v79);
                if (v80 == -1 || v80 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v80);
                  *(_QWORD *)(a2 + v79) = v80 + 1;
                  v45 |= (unint64_t)(v81 & 0x7F) << v77;
                  if (v81 < 0)
                  {
                    v77 += 7;
                    v14 = v78++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_399;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_399:
              v246 = 352;
              goto LABEL_496;
            case 0x11u:
              v82 = 0;
              v83 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x80000000uLL;
              while (2)
              {
                v84 = *v3;
                v85 = *(_QWORD *)(a2 + v84);
                if (v85 == -1 || v85 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v85);
                  *(_QWORD *)(a2 + v84) = v85 + 1;
                  v45 |= (unint64_t)(v86 & 0x7F) << v82;
                  if (v86 < 0)
                  {
                    v82 += 7;
                    v14 = v83++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_403;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_403:
              v246 = 376;
              goto LABEL_496;
            case 0x12u:
              v87 = 0;
              v88 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x1000000uLL;
              while (2)
              {
                v89 = *v3;
                v90 = *(_QWORD *)(a2 + v89);
                if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
                  *(_QWORD *)(a2 + v89) = v90 + 1;
                  v45 |= (unint64_t)(v91 & 0x7F) << v87;
                  if (v91 < 0)
                  {
                    v87 += 7;
                    v14 = v88++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_407;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_407:
              v246 = 324;
              goto LABEL_496;
            case 0x13u:
              v92 = 0;
              v93 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x20000000uLL;
              while (2)
              {
                v94 = *v3;
                v95 = *(_QWORD *)(a2 + v94);
                if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
                  *(_QWORD *)(a2 + v94) = v95 + 1;
                  v45 |= (unint64_t)(v96 & 0x7F) << v92;
                  if (v96 < 0)
                  {
                    v92 += 7;
                    v14 = v93++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_411;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_411:
              v246 = 360;
              goto LABEL_496;
            case 0x14u:
              v97 = 0;
              v98 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 2uLL;
              while (2)
              {
                v99 = *v3;
                v100 = *(_QWORD *)(a2 + v99);
                if (v100 == -1 || v100 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
                  *(_QWORD *)(a2 + v99) = v100 + 1;
                  v45 |= (unint64_t)(v101 & 0x7F) << v97;
                  if (v101 < 0)
                  {
                    v97 += 7;
                    v14 = v98++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_415;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_415:
              v246 = 184;
              goto LABEL_496;
            case 0x15u:
              v102 = 0;
              v103 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 4uLL;
              while (2)
              {
                v104 = *v3;
                v105 = *(_QWORD *)(a2 + v104);
                if (v105 == -1 || v105 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v106 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v105);
                  *(_QWORD *)(a2 + v104) = v105 + 1;
                  v45 |= (unint64_t)(v106 & 0x7F) << v102;
                  if (v106 < 0)
                  {
                    v102 += 7;
                    v14 = v103++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_419;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_419:
              v246 = 188;
              goto LABEL_496;
            case 0x16u:
              v107 = 0;
              v108 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x20uLL;
              while (2)
              {
                v109 = *v3;
                v110 = *(_QWORD *)(a2 + v109);
                if (v110 == -1 || v110 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v111 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v110);
                  *(_QWORD *)(a2 + v109) = v110 + 1;
                  v45 |= (unint64_t)(v111 & 0x7F) << v107;
                  if (v111 < 0)
                  {
                    v107 += 7;
                    v14 = v108++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_423;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_423:
              v246 = 200;
              goto LABEL_496;
            case 0x20u:
              v112 = 0;
              v113 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x400000uLL;
              while (2)
              {
                v114 = *v3;
                v115 = *(_QWORD *)(a2 + v114);
                if (v115 == -1 || v115 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v115);
                  *(_QWORD *)(a2 + v114) = v115 + 1;
                  v45 |= (unint64_t)(v116 & 0x7F) << v112;
                  if (v116 < 0)
                  {
                    v112 += 7;
                    v14 = v113++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_427;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_427:
              v246 = 304;
              goto LABEL_496;
            case 0x21u:
              v117 = 0;
              v118 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x200000uLL;
              while (2)
              {
                v119 = *v3;
                v120 = *(_QWORD *)(a2 + v119);
                if (v120 == -1 || v120 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v120);
                  *(_QWORD *)(a2 + v119) = v120 + 1;
                  v45 |= (unint64_t)(v121 & 0x7F) << v117;
                  if (v121 < 0)
                  {
                    v117 += 7;
                    v14 = v118++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_431;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_431:
              v246 = 300;
              goto LABEL_496;
            case 0x22u:
              v122 = 0;
              v123 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x800000uLL;
              while (2)
              {
                v124 = *v3;
                v125 = *(_QWORD *)(a2 + v124);
                if (v125 == -1 || v125 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v126 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v125);
                  *(_QWORD *)(a2 + v124) = v125 + 1;
                  v45 |= (unint64_t)(v126 & 0x7F) << v122;
                  if (v126 < 0)
                  {
                    v122 += 7;
                    v14 = v123++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_435;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_435:
              v246 = 320;
              goto LABEL_496;
            case 0x23u:
              v127 = 0;
              v128 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x80000uLL;
              while (2)
              {
                v129 = *v3;
                v130 = *(_QWORD *)(a2 + v129);
                if (v130 == -1 || v130 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v131 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v130);
                  *(_QWORD *)(a2 + v129) = v130 + 1;
                  v45 |= (unint64_t)(v131 & 0x7F) << v127;
                  if (v131 < 0)
                  {
                    v127 += 7;
                    v14 = v128++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_439;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_439:
              v246 = 292;
              goto LABEL_496;
            case 0x24u:
              v132 = 0;
              v133 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x100000uLL;
              while (2)
              {
                v134 = *v3;
                v135 = *(_QWORD *)(a2 + v134);
                if (v135 == -1 || v135 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v136 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v135);
                  *(_QWORD *)(a2 + v134) = v135 + 1;
                  v45 |= (unint64_t)(v136 & 0x7F) << v132;
                  if (v136 < 0)
                  {
                    v132 += 7;
                    v14 = v133++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_443;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_443:
              v246 = 296;
              goto LABEL_496;
            case 0x25u:
              v137 = (void *)PBReaderReadData();

              v75 = v137;
              v76 = 312;
              goto LABEL_279;
            case 0x30u:
              v138 = 0;
              v139 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x40000000uLL;
              while (2)
              {
                v140 = *v3;
                v141 = *(_QWORD *)(a2 + v140);
                if (v141 == -1 || v141 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v142 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v141);
                  *(_QWORD *)(a2 + v140) = v141 + 1;
                  v45 |= (unint64_t)(v142 & 0x7F) << v138;
                  if (v142 < 0)
                  {
                    v138 += 7;
                    v14 = v139++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_447;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_447:
              v246 = 364;
              goto LABEL_496;
            case 0x31u:
              v143 = (void *)PBReaderReadData();

              v75 = v143;
              v76 = 368;
              goto LABEL_279;
            case 0x32u:
              if (v16 != 2)
              {
                v253 = 0;
                v254 = 0;
                v255 = 0;
                while (1)
                {
                  v256 = *v3;
                  v257 = *(_QWORD *)(a2 + v256);
                  if (v257 == -1 || v257 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_548;
                  v258 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v257);
                  *(_QWORD *)(a2 + v256) = v257 + 1;
                  v255 |= (unint64_t)(v258 & 0x7F) << v253;
                  if (v258 < 0)
                  {
                    v253 += 7;
                    v14 = v254++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_549;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v144 = 0;
                v145 = 0;
                v146 = 0;
                while (1)
                {
                  v147 = *v3;
                  v148 = *(_QWORD *)(a2 + v147);
                  if (v148 == -1 || v148 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v149 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v148);
                  *(_QWORD *)(a2 + v147) = v148 + 1;
                  v146 |= (unint64_t)(v149 & 0x7F) << v144;
                  if (v149 < 0)
                  {
                    v144 += 7;
                    v14 = v145++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_201;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_201:
                PBRepeatedInt32Add();
              }
              goto LABEL_267;
            case 0x33u:
              if (v16 != 2)
              {
                v259 = 0;
                v260 = 0;
                v261 = 0;
                while (1)
                {
                  v262 = *v3;
                  v263 = *(_QWORD *)(a2 + v262);
                  if (v263 == -1 || v263 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_548;
                  v264 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v263);
                  *(_QWORD *)(a2 + v262) = v263 + 1;
                  v261 |= (unint64_t)(v264 & 0x7F) << v259;
                  if (v264 < 0)
                  {
                    v259 += 7;
                    v14 = v260++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_549;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v150 = 0;
                v151 = 0;
                v152 = 0;
                while (1)
                {
                  v153 = *v3;
                  v154 = *(_QWORD *)(a2 + v153);
                  if (v154 == -1 || v154 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
                  *(_QWORD *)(a2 + v153) = v154 + 1;
                  v152 |= (unint64_t)(v155 & 0x7F) << v150;
                  if (v155 < 0)
                  {
                    v150 += 7;
                    v14 = v151++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_214;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_214:
                PBRepeatedInt32Add();
              }
              goto LABEL_267;
            case 0x34u:
              if (v16 != 2)
              {
                v265 = 0;
                v266 = 0;
                v267 = 0;
                while (1)
                {
                  v268 = *v3;
                  v269 = *(_QWORD *)(a2 + v268);
                  if (v269 == -1 || v269 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_548;
                  v270 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v269);
                  *(_QWORD *)(a2 + v268) = v269 + 1;
                  v267 |= (unint64_t)(v270 & 0x7F) << v265;
                  if (v270 < 0)
                  {
                    v265 += 7;
                    v14 = v266++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_549;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v156 = 0;
                v157 = 0;
                v158 = 0;
                while (1)
                {
                  v159 = *v3;
                  v160 = *(_QWORD *)(a2 + v159);
                  if (v160 == -1 || v160 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
                  *(_QWORD *)(a2 + v159) = v160 + 1;
                  v158 |= (unint64_t)(v161 & 0x7F) << v156;
                  if (v161 < 0)
                  {
                    v156 += 7;
                    v14 = v157++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_227;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_227:
                PBRepeatedInt32Add();
              }
              goto LABEL_267;
            case 0x35u:
              if (v16 != 2)
              {
                v271 = 0;
                v272 = 0;
                v273 = 0;
                while (1)
                {
                  v274 = *v3;
                  v275 = *(_QWORD *)(a2 + v274);
                  if (v275 == -1 || v275 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_548;
                  v276 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v275);
                  *(_QWORD *)(a2 + v274) = v275 + 1;
                  v273 |= (unint64_t)(v276 & 0x7F) << v271;
                  if (v276 < 0)
                  {
                    v271 += 7;
                    v14 = v272++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_549;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v162 = 0;
                v163 = 0;
                v164 = 0;
                while (1)
                {
                  v165 = *v3;
                  v166 = *(_QWORD *)(a2 + v165);
                  if (v166 == -1 || v166 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v167 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v166);
                  *(_QWORD *)(a2 + v165) = v166 + 1;
                  v164 |= (unint64_t)(v167 & 0x7F) << v162;
                  if (v167 < 0)
                  {
                    v162 += 7;
                    v14 = v163++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_240;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_240:
                PBRepeatedInt32Add();
              }
              goto LABEL_267;
            case 0x36u:
              if (v16 != 2)
              {
                v277 = 0;
                v278 = 0;
                v279 = 0;
                while (1)
                {
                  v280 = *v3;
                  v281 = *(_QWORD *)(a2 + v280);
                  if (v281 == -1 || v281 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_548;
                  v282 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v281);
                  *(_QWORD *)(a2 + v280) = v281 + 1;
                  v279 |= (unint64_t)(v282 & 0x7F) << v277;
                  if (v282 < 0)
                  {
                    v277 += 7;
                    v14 = v278++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_549;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v168 = 0;
                v169 = 0;
                v170 = 0;
                while (1)
                {
                  v171 = *v3;
                  v172 = *(_QWORD *)(a2 + v171);
                  if (v172 == -1 || v172 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v173 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v172);
                  *(_QWORD *)(a2 + v171) = v172 + 1;
                  v170 |= (unint64_t)(v173 & 0x7F) << v168;
                  if (v173 < 0)
                  {
                    v168 += 7;
                    v14 = v169++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_253;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_253:
                PBRepeatedInt32Add();
              }
              goto LABEL_267;
            case 0x37u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v174 = 0;
                  v175 = 0;
                  v176 = 0;
                  while (1)
                  {
                    v177 = *v3;
                    v178 = *(_QWORD *)(a2 + v177);
                    if (v178 == -1 || v178 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v179 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v178);
                    *(_QWORD *)(a2 + v177) = v178 + 1;
                    v176 |= (unint64_t)(v179 & 0x7F) << v174;
                    if (v179 < 0)
                    {
                      v174 += 7;
                      v14 = v175++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_266;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_266:
                  PBRepeatedInt32Add();
                }
LABEL_267:
                PBReaderRecallMark();
              }
              else
              {
                v283 = 0;
                v284 = 0;
                v285 = 0;
                while (1)
                {
                  v286 = *v3;
                  v287 = *(_QWORD *)(a2 + v286);
                  if (v287 == -1 || v287 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v288 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v287);
                  *(_QWORD *)(a2 + v286) = v287 + 1;
                  v285 |= (unint64_t)(v288 & 0x7F) << v283;
                  if (v288 < 0)
                  {
                    v283 += 7;
                    v14 = v284++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_549;
                }
LABEL_548:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_549:
                PBRepeatedInt32Add();
              }
LABEL_497:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 0x38u:
              v180 = 0;
              v181 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x80uLL;
              while (2)
              {
                v182 = *v3;
                v183 = *(_QWORD *)(a2 + v182);
                if (v183 == -1 || v183 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v184 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v183);
                  *(_QWORD *)(a2 + v182) = v183 + 1;
                  v45 |= (unint64_t)(v184 & 0x7F) << v180;
                  if (v184 < 0)
                  {
                    v180 += 7;
                    v14 = v181++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_451;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_451:
              v246 = 208;
              goto LABEL_496;
            case 0x3Cu:
              v185 = (void *)PBReaderReadData();

              v75 = v185;
              v76 = 240;
              goto LABEL_279;
            case 0x3Du:
              v186 = (void *)PBReaderReadData();

              v75 = v186;
              v76 = 256;
              goto LABEL_279;
            case 0x3Eu:
              v187 = (void *)PBReaderReadData();

              v75 = v187;
              v76 = 224;
              goto LABEL_279;
            case 0x3Fu:
              v188 = (void *)PBReaderReadData();

              v75 = v188;
              v76 = 328;
LABEL_279:
              *(_QWORD *)(a1 + v76) = v75;
              goto LABEL_497;
            case 0x40u:
              v189 = 0;
              v190 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x800uLL;
              while (2)
              {
                v191 = *v3;
                v192 = *(_QWORD *)(a2 + v191);
                if (v192 == -1 || v192 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v193 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v192);
                  *(_QWORD *)(a2 + v191) = v192 + 1;
                  v45 |= (unint64_t)(v193 & 0x7F) << v189;
                  if (v193 < 0)
                  {
                    v189 += 7;
                    v14 = v190++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_455;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_455:
              v246 = 248;
              goto LABEL_496;
            case 0x41u:
              v194 = 0;
              v195 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x2000uLL;
              while (2)
              {
                v196 = *v3;
                v197 = *(_QWORD *)(a2 + v196);
                if (v197 == -1 || v197 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v198 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v197);
                  *(_QWORD *)(a2 + v196) = v197 + 1;
                  v45 |= (unint64_t)(v198 & 0x7F) << v194;
                  if (v198 < 0)
                  {
                    v194 += 7;
                    v14 = v195++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_459;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_459:
              v246 = 268;
              goto LABEL_496;
            case 0x42u:
              v199 = 0;
              v200 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x4000uLL;
              while (2)
              {
                v201 = *v3;
                v202 = *(_QWORD *)(a2 + v201);
                if (v202 == -1 || v202 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v203 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v202);
                  *(_QWORD *)(a2 + v201) = v202 + 1;
                  v45 |= (unint64_t)(v203 & 0x7F) << v199;
                  if (v203 < 0)
                  {
                    v199 += 7;
                    v14 = v200++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_463;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_463:
              v246 = 272;
              goto LABEL_496;
            case 0x43u:
              v204 = 0;
              v205 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x1000uLL;
              while (2)
              {
                v206 = *v3;
                v207 = *(_QWORD *)(a2 + v206);
                if (v207 == -1 || v207 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v208 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v207);
                  *(_QWORD *)(a2 + v206) = v207 + 1;
                  v45 |= (unint64_t)(v208 & 0x7F) << v204;
                  if (v208 < 0)
                  {
                    v204 += 7;
                    v14 = v205++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_467;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_467:
              v246 = 264;
              goto LABEL_496;
            case 0x44u:
              v209 = 0;
              v210 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x400uLL;
              while (2)
              {
                v211 = *v3;
                v212 = *(_QWORD *)(a2 + v211);
                if (v212 == -1 || v212 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v213 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v212);
                  *(_QWORD *)(a2 + v211) = v212 + 1;
                  v45 |= (unint64_t)(v213 & 0x7F) << v209;
                  if (v213 < 0)
                  {
                    v209 += 7;
                    v14 = v210++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_471;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_471:
              v246 = 232;
              goto LABEL_496;
            case 0x45u:
              v214 = 0;
              v215 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x8000uLL;
              while (2)
              {
                v216 = *v3;
                v217 = *(_QWORD *)(a2 + v216);
                if (v217 == -1 || v217 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v218 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v217);
                  *(_QWORD *)(a2 + v216) = v217 + 1;
                  v45 |= (unint64_t)(v218 & 0x7F) << v214;
                  if (v218 < 0)
                  {
                    v214 += 7;
                    v14 = v215++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_475;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_475:
              v246 = 276;
              goto LABEL_496;
            case 0x46u:
              v219 = 0;
              v220 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x10000uLL;
              while (2)
              {
                v221 = *v3;
                v222 = *(_QWORD *)(a2 + v221);
                if (v222 == -1 || v222 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v223 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v222);
                  *(_QWORD *)(a2 + v221) = v222 + 1;
                  v45 |= (unint64_t)(v223 & 0x7F) << v219;
                  if (v223 < 0)
                  {
                    v219 += 7;
                    v14 = v220++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_479;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_479:
              v246 = 280;
              goto LABEL_496;
            case 0x47u:
              v224 = 0;
              v225 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x100uLL;
              while (2)
              {
                v226 = *v3;
                v227 = *(_QWORD *)(a2 + v226);
                if (v227 == -1 || v227 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v228 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v227);
                  *(_QWORD *)(a2 + v226) = v227 + 1;
                  v45 |= (unint64_t)(v228 & 0x7F) << v224;
                  if (v228 < 0)
                  {
                    v224 += 7;
                    v14 = v225++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_483;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_483:
              v246 = 212;
              goto LABEL_496;
            case 0x48u:
              v229 = 0;
              v230 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x200uLL;
              while (2)
              {
                v231 = *v3;
                v232 = *(_QWORD *)(a2 + v231);
                if (v232 == -1 || v232 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v233 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v232);
                  *(_QWORD *)(a2 + v231) = v232 + 1;
                  v45 |= (unint64_t)(v233 & 0x7F) << v229;
                  if (v233 < 0)
                  {
                    v229 += 7;
                    v14 = v230++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_487;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_487:
              v246 = 216;
              goto LABEL_496;
            case 0x49u:
              v234 = 0;
              v235 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x20000uLL;
              while (2)
              {
                v236 = *v3;
                v237 = *(_QWORD *)(a2 + v236);
                if (v237 == -1 || v237 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v238 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v237);
                  *(_QWORD *)(a2 + v236) = v237 + 1;
                  v45 |= (unint64_t)(v238 & 0x7F) << v234;
                  if (v238 < 0)
                  {
                    v234 += 7;
                    v14 = v235++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_491;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_491:
              v246 = 284;
              goto LABEL_496;
            case 0x4Au:
              v239 = 0;
              v240 = 0;
              v45 = 0;
              *(_QWORD *)(a1 + 384) |= 0x40000uLL;
              while (2)
              {
                v241 = *v3;
                v242 = *(_QWORD *)(a2 + v241);
                if (v242 == -1 || v242 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v243 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v242);
                  *(_QWORD *)(a2 + v241) = v242 + 1;
                  v45 |= (unint64_t)(v243 & 0x7F) << v239;
                  if (v243 < 0)
                  {
                    v239 += 7;
                    v14 = v240++ >= 9;
                    if (v14)
                    {
                      LODWORD(v45) = 0;
                      goto LABEL_495;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v45) = 0;
LABEL_495:
              v246 = 288;
LABEL_496:
              *(_DWORD *)(a1 + v246) = v45;
              goto LABEL_497;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_497;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetric11axStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDHEStats *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDHEStats);

        *(_QWORD *)(a1 + 16) = v23;
        if (!PBReaderPlaceMark() || (AWDHEStatsReadFrom((uint64_t)v23, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricActiveProbeStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int *v36;
  int *v37;
  int *v38;
  int *v39;
  int *v40;
  uint64_t v41;
  uint64_t result;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  uint64_t v104;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v11 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v12 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v13 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v14 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v15 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v16 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v17 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v18 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v19 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v20 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v21 += 7;
        v27 = v22++ >= 9;
        if (v27)
        {
          v23 = 0;
          v28 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_14:
      if (v28 || (v23 & 7) == 4)
        break;
      switch((v23 >> 3))
      {
        case 1u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[130]) |= 1u;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_113;
            v30 += 7;
            v27 = v31++ >= 9;
            if (v27)
            {
              v32 = 0;
              goto LABEL_115;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_113:
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_115:
          *(_QWORD *)(a1 + v8[131]) = v32;
          continue;
        case 2u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 0x200u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                v27 = v44++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_119;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_119:
          v104 = v10[132];
          goto LABEL_164;
        case 3u:
          v49 = 0;
          v50 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 0x40u;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v52);
              *(_QWORD *)(a2 + v51) = v52 + 1;
              v45 |= (unint64_t)(v53 & 0x7F) << v49;
              if (v53 < 0)
              {
                v49 += 7;
                v27 = v50++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_123;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_123:
          v104 = v11[133];
          goto LABEL_164;
        case 4u:
          v54 = 0;
          v55 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 8u;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v45 |= (unint64_t)(v58 & 0x7F) << v54;
              if (v58 < 0)
              {
                v54 += 7;
                v27 = v55++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_127;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_127:
          v104 = v12[134];
          goto LABEL_164;
        case 5u:
          v59 = 0;
          v60 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 0x1000u;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v45 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                v27 = v60++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_131;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_131:
          v104 = v13[135];
          goto LABEL_164;
        case 6u:
          v64 = 0;
          v65 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 0x100u;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v45 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                v27 = v65++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_135;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_135:
          v104 = v14[136];
          goto LABEL_164;
        case 7u:
          v69 = 0;
          v70 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 0x20u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v45 |= (unint64_t)(v73 & 0x7F) << v69;
              if (v73 < 0)
              {
                v69 += 7;
                v27 = v70++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_139;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_139:
          v104 = v15[137];
          goto LABEL_164;
        case 8u:
          v74 = 0;
          v75 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 4u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v45 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v27 = v75++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_143;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_143:
          v104 = v16[138];
          goto LABEL_164;
        case 9u:
          v79 = 0;
          v80 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 0x800u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v45 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v27 = v80++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_147;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_147:
          v104 = v17[139];
          goto LABEL_164;
        case 0xAu:
          v84 = 0;
          v85 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 0x80u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v45 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v27 = v85++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_151;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_151:
          v104 = v18[140];
          goto LABEL_164;
        case 0xBu:
          v89 = 0;
          v90 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 0x10u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v45 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v27 = v90++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_155;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_155:
          v104 = v19[141];
          goto LABEL_164;
        case 0xCu:
          v94 = 0;
          v95 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 2u;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v97);
              *(_QWORD *)(a2 + v96) = v97 + 1;
              v45 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                v27 = v95++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_159;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_159:
          v104 = v20[142];
          goto LABEL_164;
        case 0xDu:
          v99 = 0;
          v100 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[130]) |= 0x400u;
          break;
        default:
          v36 = v8;
          v37 = v10;
          v38 = v7;
          v39 = v11;
          v40 = v12;
          v41 = a1;
          result = PBReaderSkipValueWithTag();
          v20 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v13 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          a1 = v41;
          v14 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v40;
          v15 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v11 = v39;
          v16 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v7 = v38;
          v19 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v10 = v37;
          v17 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v8 = v36;
          v18 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v101 = *v3;
        v102 = *(_QWORD *)(a2 + v101);
        if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
          break;
        v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v102);
        *(_QWORD *)(a2 + v101) = v102 + 1;
        v45 |= (unint64_t)(v103 & 0x7F) << v99;
        if ((v103 & 0x80) == 0)
          goto LABEL_161;
        v99 += 7;
        v27 = v100++ >= 9;
        if (v27)
        {
          LODWORD(v45) = 0;
          goto LABEL_163;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_161:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v45) = 0;
LABEL_163:
      v104 = 52;
LABEL_164:
      *(_DWORD *)(a1 + v104) = v45;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricCustomNetworkSettingReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_78;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_80;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_78:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_80:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 44) |= 8u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_84:
          v60 = 24;
          goto LABEL_109;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 44) |= 0x80u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_88;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_88:
          v60 = 40;
          goto LABEL_109;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 44) |= 0x10u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_92;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_92:
          v60 = 28;
          goto LABEL_109;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 44) |= 4u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_96;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_96:
          v60 = 20;
          goto LABEL_109;
        case 6u:
          v45 = 0;
          v46 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 44) |= 0x40u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v26 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_100:
          v60 = 36;
          goto LABEL_109;
        case 7u:
          v50 = 0;
          v51 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 44) |= 0x20u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v26 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_104;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_104:
          v60 = 32;
          goto LABEL_109;
        case 8u:
          v55 = 0;
          v56 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 44) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v57 = *v3;
        v58 = *(_QWORD *)(a2 + v57);
        if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          break;
        v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
        *(_QWORD *)(a2 + v57) = v58 + 1;
        v26 |= (unint64_t)(v59 & 0x7F) << v55;
        if ((v59 & 0x80) == 0)
          goto LABEL_106;
        v55 += 7;
        v14 = v56++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_108;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_106:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_108:
      v60 = 16;
LABEL_109:
      *(_DWORD *)(a1 + v60) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricExtendedTrapInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  char v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  char v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  unsigned int v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  char v191;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 348) |= 1u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_212;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_214;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_212:
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v20) = 0;
LABEL_214:
              *(_DWORD *)(a1 + 344) = v20;
              goto LABEL_315;
            case 2u:
              if (v16 != 2)
              {
                v108 = 0;
                v109 = 0;
                v110 = 0;
                while (1)
                {
                  v111 = *v3;
                  v112 = *(_QWORD *)(a2 + v111);
                  if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
                  *(_QWORD *)(a2 + v111) = v112 + 1;
                  v110 |= (unint64_t)(v113 & 0x7F) << v108;
                  if (v113 < 0)
                  {
                    v108 += 7;
                    v14 = v109++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v24 = 0;
                v25 = 0;
                v26 = 0;
                while (1)
                {
                  v27 = *v3;
                  v28 = *(_QWORD *)(a2 + v27);
                  if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
                  *(_QWORD *)(a2 + v27) = v28 + 1;
                  v26 |= (unint64_t)(v29 & 0x7F) << v24;
                  if (v29 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_40;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 3u:
              if (v16 != 2)
              {
                v114 = 0;
                v115 = 0;
                v116 = 0;
                while (1)
                {
                  v117 = *v3;
                  v118 = *(_QWORD *)(a2 + v117);
                  if (v118 == -1 || v118 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v119 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v118);
                  *(_QWORD *)(a2 + v117) = v118 + 1;
                  v116 |= (unint64_t)(v119 & 0x7F) << v114;
                  if (v119 < 0)
                  {
                    v114 += 7;
                    v14 = v115++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v30 = 0;
                v31 = 0;
                v32 = 0;
                while (1)
                {
                  v33 = *v3;
                  v34 = *(_QWORD *)(a2 + v33);
                  if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
                  *(_QWORD *)(a2 + v33) = v34 + 1;
                  v32 |= (unint64_t)(v35 & 0x7F) << v30;
                  if (v35 < 0)
                  {
                    v30 += 7;
                    v14 = v31++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_53;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 4u:
              if (v16 != 2)
              {
                v120 = 0;
                v121 = 0;
                v122 = 0;
                while (1)
                {
                  v123 = *v3;
                  v124 = *(_QWORD *)(a2 + v123);
                  if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
                  *(_QWORD *)(a2 + v123) = v124 + 1;
                  v122 |= (unint64_t)(v125 & 0x7F) << v120;
                  if (v125 < 0)
                  {
                    v120 += 7;
                    v14 = v121++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v36 = 0;
                v37 = 0;
                v38 = 0;
                while (1)
                {
                  v39 = *v3;
                  v40 = *(_QWORD *)(a2 + v39);
                  if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
                  *(_QWORD *)(a2 + v39) = v40 + 1;
                  v38 |= (unint64_t)(v41 & 0x7F) << v36;
                  if (v41 < 0)
                  {
                    v36 += 7;
                    v14 = v37++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_66;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_66:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 5u:
              if (v16 != 2)
              {
                v126 = 0;
                v127 = 0;
                v128 = 0;
                while (1)
                {
                  v129 = *v3;
                  v130 = *(_QWORD *)(a2 + v129);
                  if (v130 == -1 || v130 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v131 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v130);
                  *(_QWORD *)(a2 + v129) = v130 + 1;
                  v128 |= (unint64_t)(v131 & 0x7F) << v126;
                  if (v131 < 0)
                  {
                    v126 += 7;
                    v14 = v127++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v42 = 0;
                v43 = 0;
                v44 = 0;
                while (1)
                {
                  v45 = *v3;
                  v46 = *(_QWORD *)(a2 + v45);
                  if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
                  *(_QWORD *)(a2 + v45) = v46 + 1;
                  v44 |= (unint64_t)(v47 & 0x7F) << v42;
                  if (v47 < 0)
                  {
                    v42 += 7;
                    v14 = v43++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_79;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_79:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 6u:
              if (v16 != 2)
              {
                v132 = 0;
                v133 = 0;
                v134 = 0;
                while (1)
                {
                  v135 = *v3;
                  v136 = *(_QWORD *)(a2 + v135);
                  if (v136 == -1 || v136 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v137 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v136);
                  *(_QWORD *)(a2 + v135) = v136 + 1;
                  v134 |= (unint64_t)(v137 & 0x7F) << v132;
                  if (v137 < 0)
                  {
                    v132 += 7;
                    v14 = v133++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v48 = 0;
                v49 = 0;
                v50 = 0;
                while (1)
                {
                  v51 = *v3;
                  v52 = *(_QWORD *)(a2 + v51);
                  if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
                  *(_QWORD *)(a2 + v51) = v52 + 1;
                  v50 |= (unint64_t)(v53 & 0x7F) << v48;
                  if (v53 < 0)
                  {
                    v48 += 7;
                    v14 = v49++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_92;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_92:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 7u:
              if (v16 != 2)
              {
                v138 = 0;
                v139 = 0;
                v140 = 0;
                while (1)
                {
                  v141 = *v3;
                  v142 = *(_QWORD *)(a2 + v141);
                  if (v142 == -1 || v142 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v142);
                  *(_QWORD *)(a2 + v141) = v142 + 1;
                  v140 |= (unint64_t)(v143 & 0x7F) << v138;
                  if (v143 < 0)
                  {
                    v138 += 7;
                    v14 = v139++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v54 = 0;
                v55 = 0;
                v56 = 0;
                while (1)
                {
                  v57 = *v3;
                  v58 = *(_QWORD *)(a2 + v57);
                  if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
                  *(_QWORD *)(a2 + v57) = v58 + 1;
                  v56 |= (unint64_t)(v59 & 0x7F) << v54;
                  if (v59 < 0)
                  {
                    v54 += 7;
                    v14 = v55++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_105;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_105:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 8u:
              if (v16 != 2)
              {
                v144 = 0;
                v145 = 0;
                v146 = 0;
                while (1)
                {
                  v147 = *v3;
                  v148 = *(_QWORD *)(a2 + v147);
                  if (v148 == -1 || v148 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v149 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v148);
                  *(_QWORD *)(a2 + v147) = v148 + 1;
                  v146 |= (unint64_t)(v149 & 0x7F) << v144;
                  if (v149 < 0)
                  {
                    v144 += 7;
                    v14 = v145++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v60 = 0;
                v61 = 0;
                v62 = 0;
                while (1)
                {
                  v63 = *v3;
                  v64 = *(_QWORD *)(a2 + v63);
                  if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
                  *(_QWORD *)(a2 + v63) = v64 + 1;
                  v62 |= (unint64_t)(v65 & 0x7F) << v60;
                  if (v65 < 0)
                  {
                    v60 += 7;
                    v14 = v61++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_118;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_118:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 9u:
              if (v16 != 2)
              {
                v150 = 0;
                v151 = 0;
                v152 = 0;
                while (1)
                {
                  v153 = *v3;
                  v154 = *(_QWORD *)(a2 + v153);
                  if (v154 == -1 || v154 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
                  *(_QWORD *)(a2 + v153) = v154 + 1;
                  v152 |= (unint64_t)(v155 & 0x7F) << v150;
                  if (v155 < 0)
                  {
                    v150 += 7;
                    v14 = v151++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v66 = 0;
                v67 = 0;
                v68 = 0;
                while (1)
                {
                  v69 = *v3;
                  v70 = *(_QWORD *)(a2 + v69);
                  if (v70 == -1 || v70 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v70);
                  *(_QWORD *)(a2 + v69) = v70 + 1;
                  v68 |= (unint64_t)(v71 & 0x7F) << v66;
                  if (v71 < 0)
                  {
                    v66 += 7;
                    v14 = v67++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_131;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_131:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 0xAu:
              if (v16 != 2)
              {
                v156 = 0;
                v157 = 0;
                v158 = 0;
                while (1)
                {
                  v159 = *v3;
                  v160 = *(_QWORD *)(a2 + v159);
                  if (v160 == -1 || v160 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
                  *(_QWORD *)(a2 + v159) = v160 + 1;
                  v158 |= (unint64_t)(v161 & 0x7F) << v156;
                  if (v161 < 0)
                  {
                    v156 += 7;
                    v14 = v157++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v72 = 0;
                v73 = 0;
                v74 = 0;
                while (1)
                {
                  v75 = *v3;
                  v76 = *(_QWORD *)(a2 + v75);
                  if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
                  *(_QWORD *)(a2 + v75) = v76 + 1;
                  v74 |= (unint64_t)(v77 & 0x7F) << v72;
                  if (v77 < 0)
                  {
                    v72 += 7;
                    v14 = v73++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_144;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_144:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 0xBu:
              if (v16 != 2)
              {
                v162 = 0;
                v163 = 0;
                v164 = 0;
                while (1)
                {
                  v165 = *v3;
                  v166 = *(_QWORD *)(a2 + v165);
                  if (v166 == -1 || v166 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v167 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v166);
                  *(_QWORD *)(a2 + v165) = v166 + 1;
                  v164 |= (unint64_t)(v167 & 0x7F) << v162;
                  if (v167 < 0)
                  {
                    v162 += 7;
                    v14 = v163++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v78 = 0;
                v79 = 0;
                v80 = 0;
                while (1)
                {
                  v81 = *v3;
                  v82 = *(_QWORD *)(a2 + v81);
                  if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
                  *(_QWORD *)(a2 + v81) = v82 + 1;
                  v80 |= (unint64_t)(v83 & 0x7F) << v78;
                  if (v83 < 0)
                  {
                    v78 += 7;
                    v14 = v79++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_157;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_157:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 0xCu:
              if (v16 != 2)
              {
                v168 = 0;
                v169 = 0;
                v170 = 0;
                while (1)
                {
                  v171 = *v3;
                  v172 = *(_QWORD *)(a2 + v171);
                  if (v172 == -1 || v172 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v173 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v172);
                  *(_QWORD *)(a2 + v171) = v172 + 1;
                  v170 |= (unint64_t)(v173 & 0x7F) << v168;
                  if (v173 < 0)
                  {
                    v168 += 7;
                    v14 = v169++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v84 = 0;
                v85 = 0;
                v86 = 0;
                while (1)
                {
                  v87 = *v3;
                  v88 = *(_QWORD *)(a2 + v87);
                  if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
                  *(_QWORD *)(a2 + v87) = v88 + 1;
                  v86 |= (unint64_t)(v89 & 0x7F) << v84;
                  if (v89 < 0)
                  {
                    v84 += 7;
                    v14 = v85++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_170;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_170:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 0xDu:
              if (v16 != 2)
              {
                v174 = 0;
                v175 = 0;
                v176 = 0;
                while (1)
                {
                  v177 = *v3;
                  v178 = *(_QWORD *)(a2 + v177);
                  if (v178 == -1 || v178 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v179 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v178);
                  *(_QWORD *)(a2 + v177) = v178 + 1;
                  v176 |= (unint64_t)(v179 & 0x7F) << v174;
                  if (v179 < 0)
                  {
                    v174 += 7;
                    v14 = v175++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v90 = 0;
                v91 = 0;
                v92 = 0;
                while (1)
                {
                  v93 = *v3;
                  v94 = *(_QWORD *)(a2 + v93);
                  if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
                  *(_QWORD *)(a2 + v93) = v94 + 1;
                  v92 |= (unint64_t)(v95 & 0x7F) << v90;
                  if (v95 < 0)
                  {
                    v90 += 7;
                    v14 = v91++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_183;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_183:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 0xEu:
              if (v16 != 2)
              {
                v180 = 0;
                v181 = 0;
                v182 = 0;
                while (1)
                {
                  v183 = *v3;
                  v184 = *(_QWORD *)(a2 + v183);
                  if (v184 == -1 || v184 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_313;
                  v185 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v184);
                  *(_QWORD *)(a2 + v183) = v184 + 1;
                  v182 |= (unint64_t)(v185 & 0x7F) << v180;
                  if (v185 < 0)
                  {
                    v180 += 7;
                    v14 = v181++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v96 = 0;
                v97 = 0;
                v98 = 0;
                while (1)
                {
                  v99 = *v3;
                  v100 = *(_QWORD *)(a2 + v99);
                  if (v100 == -1 || v100 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
                  *(_QWORD *)(a2 + v99) = v100 + 1;
                  v98 |= (unint64_t)(v101 & 0x7F) << v96;
                  if (v101 < 0)
                  {
                    v96 += 7;
                    v14 = v97++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_196;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_196:
                PBRepeatedUInt32Add();
              }
              goto LABEL_210;
            case 0xFu:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v102 = 0;
                  v103 = 0;
                  v104 = 0;
                  while (1)
                  {
                    v105 = *v3;
                    v106 = *(_QWORD *)(a2 + v105);
                    if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v106);
                    *(_QWORD *)(a2 + v105) = v106 + 1;
                    v104 |= (unint64_t)(v107 & 0x7F) << v102;
                    if (v107 < 0)
                    {
                      v102 += 7;
                      v14 = v103++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_209;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_209:
                  PBRepeatedUInt32Add();
                }
LABEL_210:
                PBReaderRecallMark();
              }
              else
              {
                v186 = 0;
                v187 = 0;
                v188 = 0;
                while (1)
                {
                  v189 = *v3;
                  v190 = *(_QWORD *)(a2 + v189);
                  if (v190 == -1 || v190 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v191 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v190);
                  *(_QWORD *)(a2 + v189) = v190 + 1;
                  v188 |= (unint64_t)(v191 & 0x7F) << v186;
                  if (v191 < 0)
                  {
                    v186 += 7;
                    v14 = v187++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_314;
                }
LABEL_313:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_314:
                PBRepeatedUInt32Add();
              }
LABEL_315:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_315;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricHotspotTransportTypeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_50;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_52;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_50:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_52:
          v40 = 24;
          goto LABEL_61;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_56:
          v40 = 16;
          goto LABEL_61;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_60:
          v40 = 20;
LABEL_61:
          *(_DWORD *)(a1 + v40) = v19;
          continue;
        case 4u:
          v34 = 0;
          v35 = 0;
          v36 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v36 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          goto LABEL_63;
        v34 += 7;
        v14 = v35++ >= 9;
        if (v14)
        {
          v36 = 0;
          goto LABEL_65;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_63:
      if (*(_BYTE *)(a2 + *v5))
        v36 = 0;
LABEL_65:
      *(_QWORD *)(a1 + 8) = v36;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricIPv4DHCPLatencyReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void *String;
  uint64_t v41;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_51;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_53;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_51:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_53:
          v41 = 16;
          goto LABEL_66;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_57:
          v41 = 32;
          goto LABEL_66;
        case 3u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  v31 = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_61:
          *(_QWORD *)(a1 + 8) = v31;
          continue;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          break;
        case 5u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 24) = String;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v19 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
          goto LABEL_63;
        v35 += 7;
        v14 = v36++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_65;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_63:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_65:
      v41 = 20;
LABEL_66:
      *(_DWORD *)(a1 + v41) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricInterfaceStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int *v36;
  int *v37;
  int *v38;
  int *v39;
  int *v40;
  uint64_t v41;
  uint64_t result;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  uint64_t v119;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v8 = (int *)MEMORY[0x24BE7AF30];
    v9 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v10 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v11 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v12 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v13 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v14 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v15 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v16 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v17 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v18 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v19 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v20 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v21 += 7;
        v27 = v22++ >= 9;
        if (v27)
        {
          v23 = 0;
          v28 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_14:
      if (v28 || (v23 & 7) == 4)
        break;
      switch((v23 >> 3))
      {
        case 1u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[180]) |= 1u;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_134;
            v30 += 7;
            v27 = v31++ >= 9;
            if (v27)
            {
              v32 = 0;
              goto LABEL_136;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_134:
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_136:
          *(_QWORD *)(a1 + v9[181]) = v32;
          continue;
        case 2u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x80u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                v27 = v44++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_140;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_140:
          v119 = v10[182];
          goto LABEL_197;
        case 3u:
          v49 = 0;
          v50 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x2000u;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v52);
              *(_QWORD *)(a2 + v51) = v52 + 1;
              v45 |= (unint64_t)(v53 & 0x7F) << v49;
              if (v53 < 0)
              {
                v49 += 7;
                v27 = v50++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_144;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_144:
          v119 = v11[183];
          goto LABEL_197;
        case 4u:
          v54 = 0;
          v55 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x1000u;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v45 |= (unint64_t)(v58 & 0x7F) << v54;
              if (v58 < 0)
              {
                v54 += 7;
                v27 = v55++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_148;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_148:
          v119 = v12[184];
          goto LABEL_197;
        case 5u:
          v59 = 0;
          v60 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x400u;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v45 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                v27 = v60++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_152;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_152:
          v119 = v13[185];
          goto LABEL_197;
        case 6u:
          v64 = 0;
          v65 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 4u;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v45 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                v27 = v65++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_156;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_156:
          v119 = v14[186];
          goto LABEL_197;
        case 7u:
          v69 = 0;
          v70 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x100u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v45 |= (unint64_t)(v73 & 0x7F) << v69;
              if (v73 < 0)
              {
                v69 += 7;
                v27 = v70++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_160;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_160:
          v119 = v15[187];
          goto LABEL_197;
        case 8u:
          v74 = 0;
          v75 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x4000u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v45 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v27 = v75++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_164;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_164:
          v119 = v16[188];
          goto LABEL_197;
        case 9u:
          v79 = 0;
          v80 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x8000u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v45 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v27 = v80++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_168;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_168:
          v119 = v17[189];
          goto LABEL_197;
        case 0xAu:
          v84 = 0;
          v85 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x800u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v45 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v27 = v85++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_172;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_172:
          v119 = v18[190];
          goto LABEL_197;
        case 0xBu:
          v89 = 0;
          v90 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 8u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v45 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v27 = v90++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_176;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_176:
          v119 = v19[191];
          goto LABEL_197;
        case 0xCu:
          v94 = 0;
          v95 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x40u;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v97);
              *(_QWORD *)(a2 + v96) = v97 + 1;
              v45 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                v27 = v95++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_180;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_180:
          v119 = v20[192];
          goto LABEL_197;
        case 0xDu:
          v99 = 0;
          v100 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x200u;
          while (2)
          {
            v101 = *v3;
            v102 = *(_QWORD *)(a2 + v101);
            if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v102);
              *(_QWORD *)(a2 + v101) = v102 + 1;
              v45 |= (unint64_t)(v103 & 0x7F) << v99;
              if (v103 < 0)
              {
                v99 += 7;
                v27 = v100++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_184;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_184:
          v119 = 48;
          goto LABEL_197;
        case 0xEu:
          v104 = 0;
          v105 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 2u;
          while (2)
          {
            v106 = *v3;
            v107 = *(_QWORD *)(a2 + v106);
            if (v107 == -1 || v107 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v107);
              *(_QWORD *)(a2 + v106) = v107 + 1;
              v45 |= (unint64_t)(v108 & 0x7F) << v104;
              if (v108 < 0)
              {
                v104 += 7;
                v27 = v105++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_188;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_188:
          v119 = 16;
          goto LABEL_197;
        case 0xFu:
          v109 = 0;
          v110 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x20u;
          while (2)
          {
            v111 = *v3;
            v112 = *(_QWORD *)(a2 + v111);
            if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v112);
              *(_QWORD *)(a2 + v111) = v112 + 1;
              v45 |= (unint64_t)(v113 & 0x7F) << v109;
              if (v113 < 0)
              {
                v109 += 7;
                v27 = v110++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_192;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_192:
          v119 = 32;
          goto LABEL_197;
        case 0x10u:
          v114 = 0;
          v115 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[180]) |= 0x10u;
          break;
        default:
          v36 = v9;
          v37 = v10;
          v38 = v7;
          v39 = v11;
          v40 = v12;
          v41 = a1;
          result = PBReaderSkipValueWithTag();
          v20 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v13 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          a1 = v41;
          v14 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v40;
          v15 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v11 = v39;
          v16 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v7 = v38;
          v18 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v10 = v37;
          v17 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v9 = v36;
          v19 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v116 = *v3;
        v117 = *(_QWORD *)(a2 + v116);
        if (v117 == -1 || v117 >= *(_QWORD *)(a2 + *v4))
          break;
        v118 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v117);
        *(_QWORD *)(a2 + v116) = v117 + 1;
        v45 |= (unint64_t)(v118 & 0x7F) << v114;
        if ((v118 & 0x80) == 0)
          goto LABEL_194;
        v114 += 7;
        v27 = v115++ >= 9;
        if (v27)
        {
          LODWORD(v45) = 0;
          goto LABEL_196;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_194:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v45) = 0;
LABEL_196:
      v119 = 28;
LABEL_197:
      *(_DWORD *)(a1 + v119) = v45;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricJoinTimeoutReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 132) |= 1u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_95;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_97;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_95:
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v20) = 0;
LABEL_97:
              *(_DWORD *)(a1 + 128) = v20;
              goto LABEL_135;
            case 2u:
              if (v16 != 2)
              {
                v61 = 0;
                v62 = 0;
                v63 = 0;
                while (1)
                {
                  v64 = *v3;
                  v65 = *(_QWORD *)(a2 + v64);
                  if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_133;
                  v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v65);
                  *(_QWORD *)(a2 + v64) = v65 + 1;
                  v63 |= (unint64_t)(v66 & 0x7F) << v61;
                  if (v66 < 0)
                  {
                    v61 += 7;
                    v14 = v62++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_134;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v31 = 0;
                v32 = 0;
                v33 = 0;
                while (1)
                {
                  v34 = *v3;
                  v35 = *(_QWORD *)(a2 + v34);
                  if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
                  *(_QWORD *)(a2 + v34) = v35 + 1;
                  v33 |= (unint64_t)(v36 & 0x7F) << v31;
                  if (v36 < 0)
                  {
                    v31 += 7;
                    v14 = v32++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_53;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
                PBRepeatedUInt32Add();
              }
              goto LABEL_93;
            case 3u:
              if (v16 != 2)
              {
                v67 = 0;
                v68 = 0;
                v69 = 0;
                while (1)
                {
                  v70 = *v3;
                  v71 = *(_QWORD *)(a2 + v70);
                  if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_133;
                  v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
                  *(_QWORD *)(a2 + v70) = v71 + 1;
                  v69 |= (unint64_t)(v72 & 0x7F) << v67;
                  if (v72 < 0)
                  {
                    v67 += 7;
                    v14 = v68++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_134;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v37 = 0;
                v38 = 0;
                v39 = 0;
                while (1)
                {
                  v40 = *v3;
                  v41 = *(_QWORD *)(a2 + v40);
                  if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
                  *(_QWORD *)(a2 + v40) = v41 + 1;
                  v39 |= (unint64_t)(v42 & 0x7F) << v37;
                  if (v42 < 0)
                  {
                    v37 += 7;
                    v14 = v38++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_66;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_66:
                PBRepeatedUInt32Add();
              }
              goto LABEL_93;
            case 4u:
              if (v16 != 2)
              {
                v73 = 0;
                v74 = 0;
                v75 = 0;
                while (1)
                {
                  v76 = *v3;
                  v77 = *(_QWORD *)(a2 + v76);
                  if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_133;
                  v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
                  *(_QWORD *)(a2 + v76) = v77 + 1;
                  v75 |= (unint64_t)(v78 & 0x7F) << v73;
                  if (v78 < 0)
                  {
                    v73 += 7;
                    v14 = v74++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_134;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v43 = 0;
                v44 = 0;
                v45 = 0;
                while (1)
                {
                  v46 = *v3;
                  v47 = *(_QWORD *)(a2 + v46);
                  if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
                  *(_QWORD *)(a2 + v46) = v47 + 1;
                  v45 |= (unint64_t)(v48 & 0x7F) << v43;
                  if (v48 < 0)
                  {
                    v43 += 7;
                    v14 = v44++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_79;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_79:
                PBRepeatedUInt32Add();
              }
              goto LABEL_93;
            case 5u:
              if (v16 != 2)
              {
                v55 = 0;
                v56 = 0;
                v57 = 0;
                while (1)
                {
                  v58 = *v3;
                  v59 = *(_QWORD *)(a2 + v58);
                  if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_133;
                  v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
                  *(_QWORD *)(a2 + v58) = v59 + 1;
                  v57 |= (unint64_t)(v60 & 0x7F) << v55;
                  if (v60 < 0)
                  {
                    v55 += 7;
                    v14 = v56++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_134;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v25 = 0;
                v26 = 0;
                v27 = 0;
                while (1)
                {
                  v28 = *v3;
                  v29 = *(_QWORD *)(a2 + v28);
                  if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
                  *(_QWORD *)(a2 + v28) = v29 + 1;
                  v27 |= (unint64_t)(v30 & 0x7F) << v25;
                  if (v30 < 0)
                  {
                    v25 += 7;
                    v14 = v26++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_38;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_38:
                PBRepeatedUInt32Add();
              }
              goto LABEL_93;
            case 6u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v49 = 0;
                  v50 = 0;
                  v51 = 0;
                  while (1)
                  {
                    v52 = *v3;
                    v53 = *(_QWORD *)(a2 + v52);
                    if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
                    *(_QWORD *)(a2 + v52) = v53 + 1;
                    v51 |= (unint64_t)(v54 & 0x7F) << v49;
                    if (v54 < 0)
                    {
                      v49 += 7;
                      v14 = v50++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_92;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_92:
                  PBRepeatedUInt32Add();
                }
LABEL_93:
                PBReaderRecallMark();
              }
              else
              {
                v79 = 0;
                v80 = 0;
                v81 = 0;
                while (1)
                {
                  v82 = *v3;
                  v83 = *(_QWORD *)(a2 + v82);
                  if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
                  *(_QWORD *)(a2 + v82) = v83 + 1;
                  v81 |= (unint64_t)(v84 & 0x7F) << v79;
                  if (v84 < 0)
                  {
                    v79 += 7;
                    v14 = v80++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_134;
                }
LABEL_133:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_134:
                PBRepeatedUInt32Add();
              }
LABEL_135:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_135;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricLinkChangeDataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  void *Data;
  id v86;
  uint64_t v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  char v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  char v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  char v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  char v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  char v159;
  void *v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  void *v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  char v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  char v181;
  char v182;
  unsigned int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char v188;
  char v189;
  unsigned int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  char v195;
  char v196;
  unsigned int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  char v202;
  char v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  char v210;
  unsigned int v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  void *String;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  void *v220;
  void *v221;
  void *v222;
  void *v223;
  void *v224;
  void *v225;
  void *v226;
  void *v227;
  void *v228;
  void *v229;
  void *v230;
  char v231;
  unsigned int v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  char v236;
  char v237;
  unsigned int v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  char v242;
  char v243;
  unsigned int v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  char v248;
  void *v249;
  BOOL v250;
  uint64_t v251;
  uint64_t v252;
  char v253;
  unsigned int v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  char v259;
  char v260;
  unsigned int v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  char v266;
  char v267;
  unsigned int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  char v273;
  char v274;
  unsigned int v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  unint64_t v279;
  char v280;
  char v281;
  unsigned int v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  char v287;
  char v288;
  unsigned int v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  char v294;
  char v295;
  unsigned int v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  char v301;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
            break;
          v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v17 = v10 & 7;
        if (!v16 && v17 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v19 = 0;
              v20 = 0;
              v21 = 0;
              *(_DWORD *)(a1 + 436) |= 2u;
              while (1)
              {
                v22 = *v3;
                v23 = *(_QWORD *)(a2 + v22);
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
                *(_QWORD *)(a2 + v22) = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if ((v25 & 0x80) == 0)
                  goto LABEL_316;
                v19 += 7;
                v15 = v20++ >= 9;
                if (v15)
                {
                  v21 = 0;
                  goto LABEL_318;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_316:
              if (*(_BYTE *)(a2 + *v5))
                v21 = 0;
LABEL_318:
              *(_QWORD *)(a1 + 184) = v21;
              goto LABEL_421;
            case 2u:
              if (v17 != 2)
              {
                v253 = 0;
                v254 = 0;
                v255 = 0;
                while (1)
                {
                  v256 = *v3;
                  v257 = *(_QWORD *)(a2 + v256);
                  v258 = v257 + 1;
                  if (v257 == -1 || v258 > *(_QWORD *)(a2 + *v4))
                    goto LABEL_472;
                  v259 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v257);
                  *(_QWORD *)(a2 + v256) = v258;
                  v255 |= (unint64_t)(v259 & 0x7F) << v253;
                  if (v259 < 0)
                  {
                    v253 += 7;
                    v15 = v254++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_473;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v27 = 0;
                v28 = 0;
                v29 = 0;
                while (1)
                {
                  v30 = *v3;
                  v31 = *(_QWORD *)(a2 + v30);
                  v32 = v31 + 1;
                  if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
                    break;
                  v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
                  *(_QWORD *)(a2 + v30) = v32;
                  v29 |= (unint64_t)(v33 & 0x7F) << v27;
                  if (v33 < 0)
                  {
                    v27 += 7;
                    v15 = v28++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_38;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_38:
                PBRepeatedInt32Add();
              }
              goto LABEL_269;
            case 3u:
              v34 = 0;
              v35 = 0;
              v36 = 0;
              *(_DWORD *)(a1 + 436) |= 0x4000000u;
              while (2)
              {
                v37 = *v3;
                v38 = *(_QWORD *)(a2 + v37);
                v39 = v38 + 1;
                if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
                  *(_QWORD *)(a2 + v37) = v39;
                  v36 |= (unint64_t)(v40 & 0x7F) << v34;
                  if (v40 < 0)
                  {
                    v34 += 7;
                    v15 = v35++ >= 9;
                    if (v15)
                    {
                      v36 = 0;
                      goto LABEL_322;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v36 = 0;
LABEL_322:
              v250 = v36 != 0;
              v251 = 433;
              goto LABEL_327;
            case 4u:
              v41 = 0;
              v42 = 0;
              v43 = 0;
              *(_DWORD *)(a1 + 436) |= 0x2000000u;
              while (2)
              {
                v44 = *v3;
                v45 = *(_QWORD *)(a2 + v44);
                v46 = v45 + 1;
                if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
                  *(_QWORD *)(a2 + v44) = v46;
                  v43 |= (unint64_t)(v47 & 0x7F) << v41;
                  if (v47 < 0)
                  {
                    v41 += 7;
                    v15 = v42++ >= 9;
                    if (v15)
                    {
                      v43 = 0;
                      goto LABEL_326;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v43 = 0;
LABEL_326:
              v250 = v43 != 0;
              v251 = 432;
LABEL_327:
              *(_BYTE *)(a1 + v251) = v250;
              goto LABEL_421;
            case 5u:
              v48 = 0;
              v49 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x40000u;
              while (2)
              {
                v51 = *v3;
                v52 = *(_QWORD *)(a2 + v51);
                v53 = v52 + 1;
                if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
                  *(_QWORD *)(a2 + v51) = v53;
                  v50 |= (unint64_t)(v54 & 0x7F) << v48;
                  if (v54 < 0)
                  {
                    v48 += 7;
                    v15 = v49++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_331;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_331:
              v252 = 320;
              goto LABEL_420;
            case 6u:
              v55 = 0;
              v56 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x200000u;
              while (2)
              {
                v57 = *v3;
                v58 = *(_QWORD *)(a2 + v57);
                v59 = v58 + 1;
                if (v58 == -1 || v59 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
                  *(_QWORD *)(a2 + v57) = v59;
                  v50 |= (unint64_t)(v60 & 0x7F) << v55;
                  if (v60 < 0)
                  {
                    v55 += 7;
                    v15 = v56++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_335;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_335:
              v252 = 332;
              goto LABEL_420;
            case 7u:
              v61 = 0;
              v62 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x10u;
              while (2)
              {
                v63 = *v3;
                v64 = *(_QWORD *)(a2 + v63);
                v65 = v64 + 1;
                if (v64 == -1 || v65 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
                  *(_QWORD *)(a2 + v63) = v65;
                  v50 |= (unint64_t)(v66 & 0x7F) << v61;
                  if (v66 < 0)
                  {
                    v61 += 7;
                    v15 = v62++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_339;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_339:
              v252 = 200;
              goto LABEL_420;
            case 8u:
              v67 = 0;
              v68 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x80u;
              while (2)
              {
                v69 = *v3;
                v70 = *(_QWORD *)(a2 + v69);
                v71 = v70 + 1;
                if (v70 == -1 || v71 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v70);
                  *(_QWORD *)(a2 + v69) = v71;
                  v50 |= (unint64_t)(v72 & 0x7F) << v67;
                  if (v72 < 0)
                  {
                    v67 += 7;
                    v15 = v68++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_343;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_343:
              v252 = 212;
              goto LABEL_420;
            case 9u:
              v73 = 0;
              v74 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x20000u;
              while (2)
              {
                v75 = *v3;
                v76 = *(_QWORD *)(a2 + v75);
                v77 = v76 + 1;
                if (v76 == -1 || v77 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
                  *(_QWORD *)(a2 + v75) = v77;
                  v50 |= (unint64_t)(v78 & 0x7F) << v73;
                  if (v78 < 0)
                  {
                    v73 += 7;
                    v15 = v74++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_347;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_347:
              v252 = 304;
              goto LABEL_420;
            case 0xAu:
              v79 = 0;
              v80 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x200u;
              while (2)
              {
                v81 = *v3;
                v82 = *(_QWORD *)(a2 + v81);
                v83 = v82 + 1;
                if (v82 == -1 || v83 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
                  *(_QWORD *)(a2 + v81) = v83;
                  v50 |= (unint64_t)(v84 & 0x7F) << v79;
                  if (v84 < 0)
                  {
                    v79 += 7;
                    v15 = v80++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_351;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_351:
              v252 = 228;
              goto LABEL_420;
            case 0xBu:
              Data = (void *)PBReaderReadData();

              v86 = Data;
              v87 = 296;
              goto LABEL_314;
            case 0x10u:
              v88 = 0;
              v89 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x100000u;
              while (2)
              {
                v90 = *v3;
                v91 = *(_QWORD *)(a2 + v90);
                v92 = v91 + 1;
                if (v91 == -1 || v92 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v91);
                  *(_QWORD *)(a2 + v90) = v92;
                  v50 |= (unint64_t)(v93 & 0x7F) << v88;
                  if (v93 < 0)
                  {
                    v88 += 7;
                    v15 = v89++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_355;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_355:
              v252 = 328;
              goto LABEL_420;
            case 0x11u:
              v94 = 0;
              v95 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x1000000u;
              while (2)
              {
                v96 = *v3;
                v97 = *(_QWORD *)(a2 + v96);
                v98 = v97 + 1;
                if (v97 == -1 || v98 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v97);
                  *(_QWORD *)(a2 + v96) = v98;
                  v50 |= (unint64_t)(v99 & 0x7F) << v94;
                  if (v99 < 0)
                  {
                    v94 += 7;
                    v15 = v95++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_359;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_359:
              v252 = 352;
              goto LABEL_420;
            case 0x12u:
              v100 = 0;
              v101 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x10000u;
              while (2)
              {
                v102 = *v3;
                v103 = *(_QWORD *)(a2 + v102);
                v104 = v103 + 1;
                if (v103 == -1 || v104 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
                  *(_QWORD *)(a2 + v102) = v104;
                  v50 |= (unint64_t)(v105 & 0x7F) << v100;
                  if (v105 < 0)
                  {
                    v100 += 7;
                    v15 = v101++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_363;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_363:
              v252 = 288;
              goto LABEL_420;
            case 0x13u:
              v106 = 0;
              v107 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x400000u;
              while (2)
              {
                v108 = *v3;
                v109 = *(_QWORD *)(a2 + v108);
                v110 = v109 + 1;
                if (v109 == -1 || v110 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v111 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
                  *(_QWORD *)(a2 + v108) = v110;
                  v50 |= (unint64_t)(v111 & 0x7F) << v106;
                  if (v111 < 0)
                  {
                    v106 += 7;
                    v15 = v107++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_367;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_367:
              v252 = 336;
              goto LABEL_420;
            case 0x14u:
              v112 = 0;
              v113 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 4u;
              while (2)
              {
                v114 = *v3;
                v115 = *(_QWORD *)(a2 + v114);
                v116 = v115 + 1;
                if (v115 == -1 || v116 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v117 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v115);
                  *(_QWORD *)(a2 + v114) = v116;
                  v50 |= (unint64_t)(v117 & 0x7F) << v112;
                  if (v117 < 0)
                  {
                    v112 += 7;
                    v15 = v113++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_371;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_371:
              v252 = 192;
              goto LABEL_420;
            case 0x15u:
              v118 = 0;
              v119 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 8u;
              while (2)
              {
                v120 = *v3;
                v121 = *(_QWORD *)(a2 + v120);
                v122 = v121 + 1;
                if (v121 == -1 || v122 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v121);
                  *(_QWORD *)(a2 + v120) = v122;
                  v50 |= (unint64_t)(v123 & 0x7F) << v118;
                  if (v123 < 0)
                  {
                    v118 += 7;
                    v15 = v119++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_375;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_375:
              v252 = 196;
              goto LABEL_420;
            case 0x16u:
              v124 = 0;
              v125 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x100u;
              while (2)
              {
                v126 = *v3;
                v127 = *(_QWORD *)(a2 + v126);
                v128 = v127 + 1;
                if (v127 == -1 || v128 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
                  *(_QWORD *)(a2 + v126) = v128;
                  v50 |= (unint64_t)(v129 & 0x7F) << v124;
                  if (v129 < 0)
                  {
                    v124 += 7;
                    v15 = v125++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_379;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_379:
              v252 = 224;
              goto LABEL_420;
            case 0x20u:
              v130 = 0;
              v131 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x4000u;
              while (2)
              {
                v132 = *v3;
                v133 = *(_QWORD *)(a2 + v132);
                v134 = v133 + 1;
                if (v133 == -1 || v134 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v133);
                  *(_QWORD *)(a2 + v132) = v134;
                  v50 |= (unint64_t)(v135 & 0x7F) << v130;
                  if (v135 < 0)
                  {
                    v130 += 7;
                    v15 = v131++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_383;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_383:
              v252 = 248;
              goto LABEL_420;
            case 0x21u:
              v136 = 0;
              v137 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x2000u;
              while (2)
              {
                v138 = *v3;
                v139 = *(_QWORD *)(a2 + v138);
                v140 = v139 + 1;
                if (v139 == -1 || v140 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v141 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
                  *(_QWORD *)(a2 + v138) = v140;
                  v50 |= (unint64_t)(v141 & 0x7F) << v136;
                  if (v141 < 0)
                  {
                    v136 += 7;
                    v15 = v137++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_387;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_387:
              v252 = 244;
              goto LABEL_420;
            case 0x22u:
              v142 = 0;
              v143 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x8000u;
              while (2)
              {
                v144 = *v3;
                v145 = *(_QWORD *)(a2 + v144);
                v146 = v145 + 1;
                if (v145 == -1 || v146 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v147 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v145);
                  *(_QWORD *)(a2 + v144) = v146;
                  v50 |= (unint64_t)(v147 & 0x7F) << v142;
                  if (v147 < 0)
                  {
                    v142 += 7;
                    v15 = v143++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_391;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_391:
              v252 = 264;
              goto LABEL_420;
            case 0x23u:
              v148 = 0;
              v149 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x800u;
              while (2)
              {
                v150 = *v3;
                v151 = *(_QWORD *)(a2 + v150);
                v152 = v151 + 1;
                if (v151 == -1 || v152 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v151);
                  *(_QWORD *)(a2 + v150) = v152;
                  v50 |= (unint64_t)(v153 & 0x7F) << v148;
                  if (v153 < 0)
                  {
                    v148 += 7;
                    v15 = v149++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_395;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_395:
              v252 = 236;
              goto LABEL_420;
            case 0x24u:
              v154 = 0;
              v155 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x1000u;
              while (2)
              {
                v156 = *v3;
                v157 = *(_QWORD *)(a2 + v156);
                v158 = v157 + 1;
                if (v157 == -1 || v158 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v159 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v157);
                  *(_QWORD *)(a2 + v156) = v158;
                  v50 |= (unint64_t)(v159 & 0x7F) << v154;
                  if (v159 < 0)
                  {
                    v154 += 7;
                    v15 = v155++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_399;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_399:
              v252 = 240;
              goto LABEL_420;
            case 0x25u:
              v160 = (void *)PBReaderReadData();

              v86 = v160;
              v87 = 256;
              goto LABEL_314;
            case 0x30u:
              v161 = 0;
              v162 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x800000u;
              while (2)
              {
                v163 = *v3;
                v164 = *(_QWORD *)(a2 + v163);
                v165 = v164 + 1;
                if (v164 == -1 || v165 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v166 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v164);
                  *(_QWORD *)(a2 + v163) = v165;
                  v50 |= (unint64_t)(v166 & 0x7F) << v161;
                  if (v166 < 0)
                  {
                    v161 += 7;
                    v15 = v162++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_403;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_403:
              v252 = 340;
              goto LABEL_420;
            case 0x31u:
              v167 = (void *)PBReaderReadData();

              v86 = v167;
              v87 = 344;
              goto LABEL_314;
            case 0x32u:
              if (v17 != 2)
              {
                v260 = 0;
                v261 = 0;
                v262 = 0;
                while (1)
                {
                  v263 = *v3;
                  v264 = *(_QWORD *)(a2 + v263);
                  v265 = v264 + 1;
                  if (v264 == -1 || v265 > *(_QWORD *)(a2 + *v4))
                    goto LABEL_472;
                  v266 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v264);
                  *(_QWORD *)(a2 + v263) = v265;
                  v262 |= (unint64_t)(v266 & 0x7F) << v260;
                  if (v266 < 0)
                  {
                    v260 += 7;
                    v15 = v261++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_473;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v168 = 0;
                v169 = 0;
                v170 = 0;
                while (1)
                {
                  v171 = *v3;
                  v172 = *(_QWORD *)(a2 + v171);
                  v173 = v172 + 1;
                  if (v172 == -1 || v173 > *(_QWORD *)(a2 + *v4))
                    break;
                  v174 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v172);
                  *(_QWORD *)(a2 + v171) = v173;
                  v170 |= (unint64_t)(v174 & 0x7F) << v168;
                  if (v174 < 0)
                  {
                    v168 += 7;
                    v15 = v169++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_203;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_203:
                PBRepeatedInt32Add();
              }
              goto LABEL_269;
            case 0x33u:
              if (v17 != 2)
              {
                v267 = 0;
                v268 = 0;
                v269 = 0;
                while (1)
                {
                  v270 = *v3;
                  v271 = *(_QWORD *)(a2 + v270);
                  v272 = v271 + 1;
                  if (v271 == -1 || v272 > *(_QWORD *)(a2 + *v4))
                    goto LABEL_472;
                  v273 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v271);
                  *(_QWORD *)(a2 + v270) = v272;
                  v269 |= (unint64_t)(v273 & 0x7F) << v267;
                  if (v273 < 0)
                  {
                    v267 += 7;
                    v15 = v268++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_473;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v175 = 0;
                v176 = 0;
                v177 = 0;
                while (1)
                {
                  v178 = *v3;
                  v179 = *(_QWORD *)(a2 + v178);
                  v180 = v179 + 1;
                  if (v179 == -1 || v180 > *(_QWORD *)(a2 + *v4))
                    break;
                  v181 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v179);
                  *(_QWORD *)(a2 + v178) = v180;
                  v177 |= (unint64_t)(v181 & 0x7F) << v175;
                  if (v181 < 0)
                  {
                    v175 += 7;
                    v15 = v176++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_216;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_216:
                PBRepeatedInt32Add();
              }
              goto LABEL_269;
            case 0x34u:
              if (v17 != 2)
              {
                v274 = 0;
                v275 = 0;
                v276 = 0;
                while (1)
                {
                  v277 = *v3;
                  v278 = *(_QWORD *)(a2 + v277);
                  v279 = v278 + 1;
                  if (v278 == -1 || v279 > *(_QWORD *)(a2 + *v4))
                    goto LABEL_472;
                  v280 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v278);
                  *(_QWORD *)(a2 + v277) = v279;
                  v276 |= (unint64_t)(v280 & 0x7F) << v274;
                  if (v280 < 0)
                  {
                    v274 += 7;
                    v15 = v275++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_473;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v182 = 0;
                v183 = 0;
                v184 = 0;
                while (1)
                {
                  v185 = *v3;
                  v186 = *(_QWORD *)(a2 + v185);
                  v187 = v186 + 1;
                  if (v186 == -1 || v187 > *(_QWORD *)(a2 + *v4))
                    break;
                  v188 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v186);
                  *(_QWORD *)(a2 + v185) = v187;
                  v184 |= (unint64_t)(v188 & 0x7F) << v182;
                  if (v188 < 0)
                  {
                    v182 += 7;
                    v15 = v183++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_229;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_229:
                PBRepeatedInt32Add();
              }
              goto LABEL_269;
            case 0x35u:
              if (v17 != 2)
              {
                v281 = 0;
                v282 = 0;
                v283 = 0;
                while (1)
                {
                  v284 = *v3;
                  v285 = *(_QWORD *)(a2 + v284);
                  v286 = v285 + 1;
                  if (v285 == -1 || v286 > *(_QWORD *)(a2 + *v4))
                    goto LABEL_472;
                  v287 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v285);
                  *(_QWORD *)(a2 + v284) = v286;
                  v283 |= (unint64_t)(v287 & 0x7F) << v281;
                  if (v287 < 0)
                  {
                    v281 += 7;
                    v15 = v282++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_473;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v189 = 0;
                v190 = 0;
                v191 = 0;
                while (1)
                {
                  v192 = *v3;
                  v193 = *(_QWORD *)(a2 + v192);
                  v194 = v193 + 1;
                  if (v193 == -1 || v194 > *(_QWORD *)(a2 + *v4))
                    break;
                  v195 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v193);
                  *(_QWORD *)(a2 + v192) = v194;
                  v191 |= (unint64_t)(v195 & 0x7F) << v189;
                  if (v195 < 0)
                  {
                    v189 += 7;
                    v15 = v190++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_242;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_242:
                PBRepeatedInt32Add();
              }
              goto LABEL_269;
            case 0x36u:
              if (v17 != 2)
              {
                v288 = 0;
                v289 = 0;
                v290 = 0;
                while (1)
                {
                  v291 = *v3;
                  v292 = *(_QWORD *)(a2 + v291);
                  v293 = v292 + 1;
                  if (v292 == -1 || v293 > *(_QWORD *)(a2 + *v4))
                    goto LABEL_472;
                  v294 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v292);
                  *(_QWORD *)(a2 + v291) = v293;
                  v290 |= (unint64_t)(v294 & 0x7F) << v288;
                  if (v294 < 0)
                  {
                    v288 += 7;
                    v15 = v289++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_473;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v196 = 0;
                v197 = 0;
                v198 = 0;
                while (1)
                {
                  v199 = *v3;
                  v200 = *(_QWORD *)(a2 + v199);
                  v201 = v200 + 1;
                  if (v200 == -1 || v201 > *(_QWORD *)(a2 + *v4))
                    break;
                  v202 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v200);
                  *(_QWORD *)(a2 + v199) = v201;
                  v198 |= (unint64_t)(v202 & 0x7F) << v196;
                  if (v202 < 0)
                  {
                    v196 += 7;
                    v15 = v197++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_255;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_255:
                PBRepeatedInt32Add();
              }
              goto LABEL_269;
            case 0x37u:
              if (v17 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v203 = 0;
                  v204 = 0;
                  v205 = 0;
                  while (1)
                  {
                    v206 = *v3;
                    v207 = *(_QWORD *)(a2 + v206);
                    v208 = v207 + 1;
                    if (v207 == -1 || v208 > *(_QWORD *)(a2 + *v4))
                      break;
                    v209 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v207);
                    *(_QWORD *)(a2 + v206) = v208;
                    v205 |= (unint64_t)(v209 & 0x7F) << v203;
                    if (v209 < 0)
                    {
                      v203 += 7;
                      v15 = v204++ >= 9;
                      if (!v15)
                        continue;
                    }
                    goto LABEL_268;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_268:
                  PBRepeatedInt32Add();
                }
LABEL_269:
                PBReaderRecallMark();
              }
              else
              {
                v295 = 0;
                v296 = 0;
                v297 = 0;
                while (1)
                {
                  v298 = *v3;
                  v299 = *(_QWORD *)(a2 + v298);
                  v300 = v299 + 1;
                  if (v299 == -1 || v300 > *(_QWORD *)(a2 + *v4))
                    break;
                  v301 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v299);
                  *(_QWORD *)(a2 + v298) = v300;
                  v297 |= (unint64_t)(v301 & 0x7F) << v295;
                  if (v301 < 0)
                  {
                    v295 += 7;
                    v15 = v296++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_473;
                }
LABEL_472:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_473:
                PBRepeatedInt32Add();
              }
LABEL_421:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 0x38u:
              v210 = 0;
              v211 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x400u;
              while (2)
              {
                v212 = *v3;
                v213 = *(_QWORD *)(a2 + v212);
                v214 = v213 + 1;
                if (v213 == -1 || v214 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v215 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v213);
                  *(_QWORD *)(a2 + v212) = v214;
                  v50 |= (unint64_t)(v215 & 0x7F) << v210;
                  if (v215 < 0)
                  {
                    v210 += 7;
                    v15 = v211++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_407;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_407:
              v252 = 232;
              goto LABEL_420;
            case 0x39u:
              String = (void *)PBReaderReadString();

              v86 = String;
              v87 = 272;
              goto LABEL_314;
            case 0x3Au:
              *(_DWORD *)(a1 + 436) |= 1u;
              v217 = *v3;
              v218 = *(_QWORD *)(a2 + v217);
              if (v218 <= 0xFFFFFFFFFFFFFFF7 && v218 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v219 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v218);
                *(_QWORD *)(a2 + v217) = v218 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v219 = 0;
              }
              *(_QWORD *)(a1 + 176) = v219;
              goto LABEL_421;
            case 0x3Bu:
              v220 = (void *)PBReaderReadString();

              v86 = v220;
              v87 = 424;
              goto LABEL_314;
            case 0x3Cu:
              v221 = (void *)PBReaderReadString();

              v86 = v221;
              v87 = 384;
              goto LABEL_314;
            case 0x3Du:
              v222 = (void *)PBReaderReadString();

              v86 = v222;
              v87 = 392;
              goto LABEL_314;
            case 0x3Eu:
              v223 = (void *)PBReaderReadString();

              v86 = v223;
              v87 = 400;
              goto LABEL_314;
            case 0x3Fu:
              v224 = (void *)PBReaderReadString();

              v86 = v224;
              v87 = 216;
              goto LABEL_314;
            case 0x40u:
              v225 = (void *)PBReaderReadString();

              v86 = v225;
              v87 = 408;
              goto LABEL_314;
            case 0x41u:
              v226 = (void *)PBReaderReadString();

              v86 = v226;
              v87 = 416;
              goto LABEL_314;
            case 0x42u:
              v227 = (void *)PBReaderReadString();

              v86 = v227;
              v87 = 376;
              goto LABEL_314;
            case 0x43u:
              v228 = (void *)PBReaderReadString();

              v86 = v228;
              v87 = 368;
              goto LABEL_314;
            case 0x44u:
              v229 = (void *)PBReaderReadString();

              v86 = v229;
              v87 = 360;
              goto LABEL_314;
            case 0x45u:
              v230 = (void *)PBReaderReadString();

              v86 = v230;
              v87 = 280;
              goto LABEL_314;
            case 0x46u:
              v231 = 0;
              v232 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x80000u;
              while (2)
              {
                v233 = *v3;
                v234 = *(_QWORD *)(a2 + v233);
                v235 = v234 + 1;
                if (v234 == -1 || v235 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v236 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v234);
                  *(_QWORD *)(a2 + v233) = v235;
                  v50 |= (unint64_t)(v236 & 0x7F) << v231;
                  if (v236 < 0)
                  {
                    v231 += 7;
                    v15 = v232++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_411;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_411:
              v252 = 324;
              goto LABEL_420;
            case 0x47u:
              v237 = 0;
              v238 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x20u;
              while (2)
              {
                v239 = *v3;
                v240 = *(_QWORD *)(a2 + v239);
                v241 = v240 + 1;
                if (v240 == -1 || v241 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v242 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v240);
                  *(_QWORD *)(a2 + v239) = v241;
                  v50 |= (unint64_t)(v242 & 0x7F) << v237;
                  if (v242 < 0)
                  {
                    v237 += 7;
                    v15 = v238++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_415;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_415:
              v252 = 204;
              goto LABEL_420;
            case 0x48u:
              v243 = 0;
              v244 = 0;
              v50 = 0;
              *(_DWORD *)(a1 + 436) |= 0x40u;
              while (2)
              {
                v245 = *v3;
                v246 = *(_QWORD *)(a2 + v245);
                v247 = v246 + 1;
                if (v246 == -1 || v247 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v248 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v246);
                  *(_QWORD *)(a2 + v245) = v247;
                  v50 |= (unint64_t)(v248 & 0x7F) << v243;
                  if (v248 < 0)
                  {
                    v243 += 7;
                    v15 = v244++ >= 9;
                    if (v15)
                    {
                      LODWORD(v50) = 0;
                      goto LABEL_419;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v50) = 0;
LABEL_419:
              v252 = 208;
LABEL_420:
              *(_DWORD *)(a1 + v252) = v50;
              goto LABEL_421;
            case 0x49u:
              v249 = (void *)PBReaderReadString();

              v86 = v249;
              v87 = 312;
LABEL_314:
              *(_QWORD *)(a1 + v87) = v86;
              goto LABEL_421;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_421;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricNetworkPrefsReadFrom(_QWORD *a1, uint64_t a2)
{
  __int16 *v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  char v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  BOOL v18;
  int v19;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  __int16 *v27;
  int *v28;
  int *v29;
  int *v30;
  uint64_t result;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  int *v73;
  _QWORD *v74;
  AWDWifiMostUsedNetworks *v75;
  _QWORD *v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  uint64_t v108;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  v9 = (int *)MEMORY[0x24BE7AF30];
  v10 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  v11 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    while (1)
    {
      v15 = *v4;
      v16 = *(_QWORD *)(a2 + v15);
      if (v16 == -1 || v16 >= *(_QWORD *)(a2 + *v5))
        break;
      v17 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v16);
      *(_QWORD *)(a2 + v15) = v16 + 1;
      v14 |= (unint64_t)(v17 & 0x7F) << v12;
      if ((v17 & 0x80) == 0)
        goto LABEL_12;
      v12 += 7;
      v18 = v13++ >= 9;
      if (v18)
      {
        v14 = 0;
        v19 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v19 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v14 = 0;
LABEL_14:
    if (v19 || (v14 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v14 >> 3))
    {
      case 1u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x4000u;
        while (1)
        {
          v24 = *v4;
          v25 = *(_QWORD *)(a2 + v24);
          if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v5))
            break;
          v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
          *(_QWORD *)(a2 + v24) = v25 + 1;
          v23 |= (unint64_t)(v26 & 0x7F) << v21;
          if ((v26 & 0x80) == 0)
            goto LABEL_130;
          v21 += 7;
          v18 = v22++ >= 9;
          if (v18)
          {
            v23 = 0;
            goto LABEL_132;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_130:
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_132:
        *((_BYTE *)a1 + v10[256]) = v23 != 0;
        goto LABEL_190;
      case 2u:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 8u;
        while (2)
        {
          v35 = *v4;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v18 = v33++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_136:
        v108 = v11[257];
        goto LABEL_189;
      case 3u:
        v38 = 0;
        v39 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x10u;
        while (2)
        {
          v40 = *v4;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v34 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              v18 = v39++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_140:
        v108 = 28;
        goto LABEL_189;
      case 4u:
        v43 = 0;
        v44 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 2u;
        while (2)
        {
          v45 = *v4;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v34 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v18 = v44++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_144:
        v108 = 16;
        goto LABEL_189;
      case 5u:
        v48 = 0;
        v49 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x400u;
        while (2)
        {
          v50 = *v4;
          v51 = *(_QWORD *)(a2 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v34 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v18 = v49++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_148:
        v108 = 60;
        goto LABEL_189;
      case 6u:
        v53 = 0;
        v54 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x20u;
        while (2)
        {
          v55 = *v4;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v34 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v18 = v54++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_152:
        v108 = 32;
        goto LABEL_189;
      case 7u:
        v58 = 0;
        v59 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 4u;
        while (2)
        {
          v60 = *v4;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v34 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              v18 = v59++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_156:
        v108 = 20;
        goto LABEL_189;
      case 8u:
        v63 = 0;
        v64 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x800u;
        while (2)
        {
          v65 = *v4;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v34 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              v18 = v64++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_160:
        v108 = 64;
        goto LABEL_189;
      case 9u:
        v68 = 0;
        v69 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x100u;
        while (2)
        {
          v70 = *v4;
          v71 = *(_QWORD *)(a2 + v70);
          if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v34 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              v18 = v69++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_164:
        v108 = 44;
        goto LABEL_189;
      case 0xAu:
        v73 = v11;
        v74 = a1;
        v75 = objc_alloc_init(AWDWifiMostUsedNetworks);
        v76 = v74;
        objc_msgSend(v74, "addMostUsedNetworks:", v75);

        if (PBReaderPlaceMark() && (AWDWifiMostUsedNetworksReadFrom((uint64_t)v75, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          v11 = v73;
          v2 = &jpt_209368034;
          v6 = (int *)MEMORY[0x24BE7AF48];
          a1 = v76;
LABEL_190:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
        return 0;
      case 0xBu:
        v77 = 0;
        v78 = 0;
        v79 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 1u;
        while (2)
        {
          v80 = *v4;
          v81 = *(_QWORD *)(a2 + v80);
          if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v79 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              v18 = v78++ >= 9;
              if (v18)
              {
                v79 = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v79 = 0;
LABEL_168:
        a1[1] = v79;
        goto LABEL_190;
      case 0xCu:
        v83 = 0;
        v84 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x80u;
        while (2)
        {
          v85 = *v4;
          v86 = *(_QWORD *)(a2 + v85);
          if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v34 |= (unint64_t)(v87 & 0x7F) << v83;
            if (v87 < 0)
            {
              v83 += 7;
              v18 = v84++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_172:
        v108 = 40;
        goto LABEL_189;
      case 0xDu:
        v88 = 0;
        v89 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x1000u;
        while (2)
        {
          v90 = *v4;
          v91 = *(_QWORD *)(a2 + v90);
          if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v91);
            *(_QWORD *)(a2 + v90) = v91 + 1;
            v34 |= (unint64_t)(v92 & 0x7F) << v88;
            if (v92 < 0)
            {
              v88 += 7;
              v18 = v89++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_176:
        v108 = 68;
        goto LABEL_189;
      case 0xEu:
        v93 = 0;
        v94 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x2000u;
        while (2)
        {
          v95 = *v4;
          v96 = *(_QWORD *)(a2 + v95);
          if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v34 |= (unint64_t)(v97 & 0x7F) << v93;
            if (v97 < 0)
            {
              v93 += 7;
              v18 = v94++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_180:
        v108 = 72;
        goto LABEL_189;
      case 0xFu:
        v98 = 0;
        v99 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x40u;
        while (2)
        {
          v100 = *v4;
          v101 = *(_QWORD *)(a2 + v100);
          if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v101);
            *(_QWORD *)(a2 + v100) = v101 + 1;
            v34 |= (unint64_t)(v102 & 0x7F) << v98;
            if (v102 < 0)
            {
              v98 += 7;
              v18 = v99++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_184:
        v108 = 36;
        goto LABEL_189;
      case 0x10u:
        v103 = 0;
        v104 = 0;
        v34 = 0;
        *(_WORD *)((char *)a1 + v8[255]) |= 0x200u;
        while (2)
        {
          v105 = *v4;
          v106 = *(_QWORD *)(a2 + v105);
          if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v106);
            *(_QWORD *)(a2 + v105) = v106 + 1;
            v34 |= (unint64_t)(v107 & 0x7F) << v103;
            if (v107 < 0)
            {
              v103 += 7;
              v18 = v104++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_188:
        v108 = 56;
LABEL_189:
        *(_DWORD *)((char *)a1 + v108) = v34;
        goto LABEL_190;
      default:
        v27 = v2;
        v28 = v8;
        v29 = v10;
        v30 = v11;
        result = PBReaderSkipValueWithTag();
        v11 = v30;
        v10 = v29;
        v8 = v28;
        v2 = v27;
        if (!(_DWORD)result)
          return result;
        goto LABEL_190;
    }
  }
}

uint64_t AWDWiFiMetricRssiHistoryReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 188) |= 1u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_128;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_130;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_128:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_130:
              *(_QWORD *)(a1 + 176) = v20;
              goto LABEL_186;
            case 2u:
              if (v16 != 2)
              {
                v72 = 0;
                v73 = 0;
                v74 = 0;
                while (1)
                {
                  v75 = *v3;
                  v76 = *(_QWORD *)(a2 + v75);
                  if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_184;
                  v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
                  *(_QWORD *)(a2 + v75) = v76 + 1;
                  v74 |= (unint64_t)(v77 & 0x7F) << v72;
                  if (v77 < 0)
                  {
                    v72 += 7;
                    v14 = v73++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_185;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v24 = 0;
                v25 = 0;
                v26 = 0;
                while (1)
                {
                  v27 = *v3;
                  v28 = *(_QWORD *)(a2 + v27);
                  if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
                  *(_QWORD *)(a2 + v27) = v28 + 1;
                  v26 |= (unint64_t)(v29 & 0x7F) << v24;
                  if (v29 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_40;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
                PBRepeatedInt32Add();
              }
              goto LABEL_119;
            case 3u:
              if (v16 != 2)
              {
                v78 = 0;
                v79 = 0;
                v80 = 0;
                while (1)
                {
                  v81 = *v3;
                  v82 = *(_QWORD *)(a2 + v81);
                  if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_184;
                  v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
                  *(_QWORD *)(a2 + v81) = v82 + 1;
                  v80 |= (unint64_t)(v83 & 0x7F) << v78;
                  if (v83 < 0)
                  {
                    v78 += 7;
                    v14 = v79++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_185;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v30 = 0;
                v31 = 0;
                v32 = 0;
                while (1)
                {
                  v33 = *v3;
                  v34 = *(_QWORD *)(a2 + v33);
                  if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
                  *(_QWORD *)(a2 + v33) = v34 + 1;
                  v32 |= (unint64_t)(v35 & 0x7F) << v30;
                  if (v35 < 0)
                  {
                    v30 += 7;
                    v14 = v31++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_53;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
                PBRepeatedInt32Add();
              }
              goto LABEL_119;
            case 4u:
              if (v16 != 2)
              {
                v84 = 0;
                v85 = 0;
                v86 = 0;
                while (1)
                {
                  v87 = *v3;
                  v88 = *(_QWORD *)(a2 + v87);
                  if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_184;
                  v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
                  *(_QWORD *)(a2 + v87) = v88 + 1;
                  v86 |= (unint64_t)(v89 & 0x7F) << v84;
                  if (v89 < 0)
                  {
                    v84 += 7;
                    v14 = v85++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_185;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v36 = 0;
                v37 = 0;
                v38 = 0;
                while (1)
                {
                  v39 = *v3;
                  v40 = *(_QWORD *)(a2 + v39);
                  if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
                  *(_QWORD *)(a2 + v39) = v40 + 1;
                  v38 |= (unint64_t)(v41 & 0x7F) << v36;
                  if (v41 < 0)
                  {
                    v36 += 7;
                    v14 = v37++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_66;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_66:
                PBRepeatedInt32Add();
              }
              goto LABEL_119;
            case 5u:
              if (v16 != 2)
              {
                v90 = 0;
                v91 = 0;
                v92 = 0;
                while (1)
                {
                  v93 = *v3;
                  v94 = *(_QWORD *)(a2 + v93);
                  if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_184;
                  v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
                  *(_QWORD *)(a2 + v93) = v94 + 1;
                  v92 |= (unint64_t)(v95 & 0x7F) << v90;
                  if (v95 < 0)
                  {
                    v90 += 7;
                    v14 = v91++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_185;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v42 = 0;
                v43 = 0;
                v44 = 0;
                while (1)
                {
                  v45 = *v3;
                  v46 = *(_QWORD *)(a2 + v45);
                  if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
                  *(_QWORD *)(a2 + v45) = v46 + 1;
                  v44 |= (unint64_t)(v47 & 0x7F) << v42;
                  if (v47 < 0)
                  {
                    v42 += 7;
                    v14 = v43++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_79;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_79:
                PBRepeatedInt32Add();
              }
              goto LABEL_119;
            case 6u:
              if (v16 != 2)
              {
                v96 = 0;
                v97 = 0;
                v98 = 0;
                while (1)
                {
                  v99 = *v3;
                  v100 = *(_QWORD *)(a2 + v99);
                  if (v100 == -1 || v100 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_184;
                  v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
                  *(_QWORD *)(a2 + v99) = v100 + 1;
                  v98 |= (unint64_t)(v101 & 0x7F) << v96;
                  if (v101 < 0)
                  {
                    v96 += 7;
                    v14 = v97++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_185;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v48 = 0;
                v49 = 0;
                v50 = 0;
                while (1)
                {
                  v51 = *v3;
                  v52 = *(_QWORD *)(a2 + v51);
                  if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
                  *(_QWORD *)(a2 + v51) = v52 + 1;
                  v50 |= (unint64_t)(v53 & 0x7F) << v48;
                  if (v53 < 0)
                  {
                    v48 += 7;
                    v14 = v49++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_92;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_92:
                PBRepeatedInt32Add();
              }
              goto LABEL_119;
            case 7u:
              if (v16 != 2)
              {
                v102 = 0;
                v103 = 0;
                v104 = 0;
                while (1)
                {
                  v105 = *v3;
                  v106 = *(_QWORD *)(a2 + v105);
                  if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_184;
                  v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v106);
                  *(_QWORD *)(a2 + v105) = v106 + 1;
                  v104 |= (unint64_t)(v107 & 0x7F) << v102;
                  if (v107 < 0)
                  {
                    v102 += 7;
                    v14 = v103++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_185;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v54 = 0;
                v55 = 0;
                v56 = 0;
                while (1)
                {
                  v57 = *v3;
                  v58 = *(_QWORD *)(a2 + v57);
                  if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
                  *(_QWORD *)(a2 + v57) = v58 + 1;
                  v56 |= (unint64_t)(v59 & 0x7F) << v54;
                  if (v59 < 0)
                  {
                    v54 += 7;
                    v14 = v55++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_105;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_105:
                PBRepeatedInt32Add();
              }
              goto LABEL_119;
            case 8u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v60 = 0;
                  v61 = 0;
                  v62 = 0;
                  while (1)
                  {
                    v63 = *v3;
                    v64 = *(_QWORD *)(a2 + v63);
                    if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
                    *(_QWORD *)(a2 + v63) = v64 + 1;
                    v62 |= (unint64_t)(v65 & 0x7F) << v60;
                    if (v65 < 0)
                    {
                      v60 += 7;
                      v14 = v61++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_118;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_118:
                  PBRepeatedInt32Add();
                }
LABEL_119:
                PBReaderRecallMark();
              }
              else
              {
                v108 = 0;
                v109 = 0;
                v110 = 0;
                while (1)
                {
                  v111 = *v3;
                  v112 = *(_QWORD *)(a2 + v111);
                  if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
                  *(_QWORD *)(a2 + v111) = v112 + 1;
                  v110 |= (unint64_t)(v113 & 0x7F) << v108;
                  if (v113 < 0)
                  {
                    v108 += 7;
                    v14 = v109++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_185;
                }
LABEL_184:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_185:
                PBRepeatedInt32Add();
              }
LABEL_186:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 9u:
              v66 = 0;
              v67 = 0;
              v68 = 0;
              *(_BYTE *)(a1 + 188) |= 2u;
              while (2)
              {
                v69 = *v3;
                v70 = *(_QWORD *)(a2 + v69);
                if (v70 == -1 || v70 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v70);
                  *(_QWORD *)(a2 + v69) = v70 + 1;
                  v68 |= (unint64_t)(v71 & 0x7F) << v66;
                  if (v71 < 0)
                  {
                    v66 += 7;
                    v14 = v67++ >= 9;
                    if (v14)
                    {
                      LODWORD(v68) = 0;
                      goto LABEL_134;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v68) = 0;
LABEL_134:
              *(_DWORD *)(a1 + 184) = v68;
              goto LABEL_186;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_186;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricScanStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDScanStatsPerSlice *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDScanStatsPerSlice);
        objc_msgSend((id)a1, "addScanStats:", v23);

        if (!PBReaderPlaceMark() || (AWDScanStatsPerSliceReadFrom(v23, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricWiFiStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDWifiStats *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDWifiStats);

        *(_QWORD *)(a1 + 16) = v23;
        if (!PBReaderPlaceMark() || (AWDWifiStatsReadFrom((uint64_t)v23, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricWowStateReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_BYTE *)(a1 + 16) = v25 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsAssociationHistoryReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDWiFiMetricsManagerAssociationEvent *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDWiFiMetricsManagerAssociationEvent);
        objc_msgSend((id)a1, "addAssociationEvents:", v23);

        if (!PBReaderPlaceMark()
          || (AWDWiFiMetricsManagerAssociationEventReadFrom((uint64_t)v23, a2) & 1) == 0)
        {
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWiFiMetricsAutoJoinNwExclusionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDWiFiMetricsAutoJoinNwExclusion__usageRank;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDWiFiMetricsAutoJoinNwExclusion__usageRank;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDWiFiMetricsAutoJoinNwExclusion__usageRank;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDWiFiMetricsAutoJoinNwExclusion__reasonCode;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDWiFiMetricsAutoJoinNwExclusion__reasonCode;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDWiFiMetricsAutoJoinNwExclusion__reasonCode;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 20) |= 2u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDWiFiMetricsAutoJoinNwExclusion__rssi;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        v25 = &OBJC_IVAR___AWDWiFiMetricsAutoJoinNwExclusion__rssi;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDWiFiMetricsAutoJoinNwExclusion__rssi;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v20) = 0;
LABEL_50:
    *(_DWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsHealthUIEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void *String;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_44;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_46;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_46:
          v36 = 16;
          goto LABEL_55;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_50:
          *(_DWORD *)(a1 + 24) = v26;
          continue;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        case 4u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 32) = String;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v32 = *v3;
        v33 = *(_QWORD *)(a2 + v32);
        if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          break;
        v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
        *(_QWORD *)(a2 + v32) = v33 + 1;
        v19 |= (unint64_t)(v34 & 0x7F) << v30;
        if ((v34 & 0x80) == 0)
          goto LABEL_52;
        v30 += 7;
        v14 = v31++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_54;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_52:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_54:
      v36 = 8;
LABEL_55:
      *(_QWORD *)(a1 + v36) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsKnownNetworksEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void *Data;
  id v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  void *String;
  uint64_t v64;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_81;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_83;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_81:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_83:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 64) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_87:
          v64 = 28;
          goto LABEL_112;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 64) |= 0x20u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_91:
          v64 = 40;
          goto LABEL_112;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 64) |= 0x10u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_95:
          v64 = 36;
          goto LABEL_112;
        case 5u:
          Data = (void *)PBReaderReadData();

          v41 = Data;
          v42 = 48;
          goto LABEL_79;
        case 6u:
          v43 = 0;
          v44 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 64) |= 2u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v26 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_99:
          v64 = 24;
          goto LABEL_112;
        case 7u:
          v48 = 0;
          v49 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 64) |= 0x80u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v26 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_103:
          v64 = 60;
          goto LABEL_112;
        case 8u:
          v53 = 0;
          v54 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 64) |= 0x40u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v26 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                v14 = v54++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_107;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_107:
          v64 = 56;
          goto LABEL_112;
        case 9u:
          v58 = 0;
          v59 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 64) |= 8u;
          break;
        case 0xAu:
          String = (void *)PBReaderReadString();

          v41 = String;
          v42 = 16;
LABEL_79:
          *(_QWORD *)(a1 + v42) = v41;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v60 = *v3;
        v61 = *(_QWORD *)(a2 + v60);
        if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
          break;
        v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
        *(_QWORD *)(a2 + v60) = v61 + 1;
        v26 |= (unint64_t)(v62 & 0x7F) << v58;
        if ((v62 & 0x80) == 0)
          goto LABEL_109;
        v58 += 7;
        v14 = v59++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_111;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_109:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_111:
      v64 = 32;
LABEL_112:
      *(_DWORD *)(a1 + v64) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerAssociationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  AWDWiFiMetricsManagerEvent *v30;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 28) |= 2u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_45;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_47:
        *(_DWORD *)(a1 + 24) = v26;
      }
      else if ((_DWORD)v17 == 2)
      {
        v30 = objc_alloc_init(AWDWiFiMetricsManagerEvent);

        *(_QWORD *)(a1 + 16) = v30;
        if (!PBReaderPlaceMark() || (AWDWiFiMetricsManagerEventReadFrom((uint64_t)v30, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_41;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_43:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerAutoJoinCumulativeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 96) |= 1u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_112;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_114;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_112:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_114:
              *(_QWORD *)(a1 + 56) = v20;
              goto LABEL_148;
            case 2u:
              if (v16 != 2)
              {
                v79 = 0;
                v80 = 0;
                v81 = 0;
                while (1)
                {
                  v82 = *v3;
                  v83 = *(_QWORD *)(a2 + v82);
                  if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_164;
                  v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
                  *(_QWORD *)(a2 + v82) = v83 + 1;
                  v81 |= (unint64_t)(v84 & 0x7F) << v79;
                  if (v84 < 0)
                  {
                    v79 += 7;
                    v14 = v80++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_165;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v25 = 0;
                v26 = 0;
                v27 = 0;
                while (1)
                {
                  v28 = *v3;
                  v29 = *(_QWORD *)(a2 + v28);
                  if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
                  *(_QWORD *)(a2 + v28) = v29 + 1;
                  v27 |= (unint64_t)(v30 & 0x7F) << v25;
                  if (v30 < 0)
                  {
                    v25 += 7;
                    v14 = v26++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_38;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_38:
                PBRepeatedUInt32Add();
              }
              goto LABEL_110;
            case 3u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v31 = 0;
                  v32 = 0;
                  v33 = 0;
                  while (1)
                  {
                    v34 = *v3;
                    v35 = *(_QWORD *)(a2 + v34);
                    if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
                    *(_QWORD *)(a2 + v34) = v35 + 1;
                    v33 |= (unint64_t)(v36 & 0x7F) << v31;
                    if (v36 < 0)
                    {
                      v31 += 7;
                      v14 = v32++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_51;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_51:
                  PBRepeatedUInt32Add();
                }
LABEL_110:
                PBReaderRecallMark();
              }
              else
              {
                v85 = 0;
                v86 = 0;
                v87 = 0;
                while (1)
                {
                  v88 = *v3;
                  v89 = *(_QWORD *)(a2 + v88);
                  if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
                  *(_QWORD *)(a2 + v88) = v89 + 1;
                  v87 |= (unint64_t)(v90 & 0x7F) << v85;
                  if (v90 < 0)
                  {
                    v85 += 7;
                    v14 = v86++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_165;
                }
LABEL_164:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_165:
                PBRepeatedUInt32Add();
              }
LABEL_148:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 4u:
              v37 = 0;
              v38 = 0;
              v39 = 0;
              *(_WORD *)(a1 + 96) |= 0x100u;
              while (2)
              {
                v40 = *v3;
                v41 = *(_QWORD *)(a2 + v40);
                if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
                  *(_QWORD *)(a2 + v40) = v41 + 1;
                  v39 |= (unint64_t)(v42 & 0x7F) << v37;
                  if (v42 < 0)
                  {
                    v37 += 7;
                    v14 = v38++ >= 9;
                    if (v14)
                    {
                      LODWORD(v39) = 0;
                      goto LABEL_118;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v39) = 0;
LABEL_118:
              v78 = 92;
              goto LABEL_147;
            case 5u:
              v43 = 0;
              v44 = 0;
              v39 = 0;
              *(_WORD *)(a1 + 96) |= 2u;
              while (2)
              {
                v45 = *v3;
                v46 = *(_QWORD *)(a2 + v45);
                if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
                  *(_QWORD *)(a2 + v45) = v46 + 1;
                  v39 |= (unint64_t)(v47 & 0x7F) << v43;
                  if (v47 < 0)
                  {
                    v43 += 7;
                    v14 = v44++ >= 9;
                    if (v14)
                    {
                      LODWORD(v39) = 0;
                      goto LABEL_122;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v39) = 0;
LABEL_122:
              v78 = 64;
              goto LABEL_147;
            case 6u:
              v48 = 0;
              v49 = 0;
              v39 = 0;
              *(_WORD *)(a1 + 96) |= 4u;
              while (2)
              {
                v50 = *v3;
                v51 = *(_QWORD *)(a2 + v50);
                if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
                  *(_QWORD *)(a2 + v50) = v51 + 1;
                  v39 |= (unint64_t)(v52 & 0x7F) << v48;
                  if (v52 < 0)
                  {
                    v48 += 7;
                    v14 = v49++ >= 9;
                    if (v14)
                    {
                      LODWORD(v39) = 0;
                      goto LABEL_126;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v39) = 0;
LABEL_126:
              v78 = 68;
              goto LABEL_147;
            case 7u:
              v53 = 0;
              v54 = 0;
              v39 = 0;
              *(_WORD *)(a1 + 96) |= 0x40u;
              while (2)
              {
                v55 = *v3;
                v56 = *(_QWORD *)(a2 + v55);
                if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
                  *(_QWORD *)(a2 + v55) = v56 + 1;
                  v39 |= (unint64_t)(v57 & 0x7F) << v53;
                  if (v57 < 0)
                  {
                    v53 += 7;
                    v14 = v54++ >= 9;
                    if (v14)
                    {
                      LODWORD(v39) = 0;
                      goto LABEL_130;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v39) = 0;
LABEL_130:
              v78 = 84;
              goto LABEL_147;
            case 8u:
              v58 = 0;
              v59 = 0;
              v39 = 0;
              *(_WORD *)(a1 + 96) |= 0x80u;
              while (2)
              {
                v60 = *v3;
                v61 = *(_QWORD *)(a2 + v60);
                if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
                  *(_QWORD *)(a2 + v60) = v61 + 1;
                  v39 |= (unint64_t)(v62 & 0x7F) << v58;
                  if (v62 < 0)
                  {
                    v58 += 7;
                    v14 = v59++ >= 9;
                    if (v14)
                    {
                      LODWORD(v39) = 0;
                      goto LABEL_134;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v39) = 0;
LABEL_134:
              v78 = 88;
              goto LABEL_147;
            case 9u:
              v63 = 0;
              v64 = 0;
              v39 = 0;
              *(_WORD *)(a1 + 96) |= 0x20u;
              while (2)
              {
                v65 = *v3;
                v66 = *(_QWORD *)(a2 + v65);
                if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
                  *(_QWORD *)(a2 + v65) = v66 + 1;
                  v39 |= (unint64_t)(v67 & 0x7F) << v63;
                  if (v67 < 0)
                  {
                    v63 += 7;
                    v14 = v64++ >= 9;
                    if (v14)
                    {
                      LODWORD(v39) = 0;
                      goto LABEL_138;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v39) = 0;
LABEL_138:
              v78 = 80;
              goto LABEL_147;
            case 0xAu:
              v68 = 0;
              v69 = 0;
              v39 = 0;
              *(_WORD *)(a1 + 96) |= 8u;
              while (2)
              {
                v70 = *v3;
                v71 = *(_QWORD *)(a2 + v70);
                if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
                  *(_QWORD *)(a2 + v70) = v71 + 1;
                  v39 |= (unint64_t)(v72 & 0x7F) << v68;
                  if (v72 < 0)
                  {
                    v68 += 7;
                    v14 = v69++ >= 9;
                    if (v14)
                    {
                      LODWORD(v39) = 0;
                      goto LABEL_142;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v39) = 0;
LABEL_142:
              v78 = 72;
              goto LABEL_147;
            case 0xBu:
              v73 = 0;
              v74 = 0;
              v39 = 0;
              *(_WORD *)(a1 + 96) |= 0x10u;
              while (2)
              {
                v75 = *v3;
                v76 = *(_QWORD *)(a2 + v75);
                if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
                  *(_QWORD *)(a2 + v75) = v76 + 1;
                  v39 |= (unint64_t)(v77 & 0x7F) << v73;
                  if (v77 < 0)
                  {
                    v73 += 7;
                    v14 = v74++ >= 9;
                    if (v14)
                    {
                      LODWORD(v39) = 0;
                      goto LABEL_146;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v39) = 0;
LABEL_146:
              v78 = 76;
LABEL_147:
              *(_DWORD *)(a1 + v78) = v39;
              goto LABEL_148;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_148;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerAutoJoinRecordReadFrom(_DWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int *v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  int *v58;
  uint64_t result;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  int *v126;
  AWDWiFiMetricsAutoJoinNwExclusion *v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v9 = 0;
        v10 = 0;
        v11 = 0;
        while (1)
        {
          v12 = *v3;
          v13 = *(_QWORD *)(a2 + v12);
          if (v13 == -1 || v13 >= *(_QWORD *)(a2 + *v4))
            break;
          v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v13);
          *(_QWORD *)(a2 + v12) = v13 + 1;
          v11 |= (unint64_t)(v14 & 0x7F) << v9;
          if ((v14 & 0x80) == 0)
            goto LABEL_12;
          v9 += 7;
          v15 = v10++ >= 9;
          if (v15)
          {
            v11 = 0;
            v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v11 = 0;
LABEL_14:
        v17 = v11 & 7;
        if (!v16 && v17 != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              v19 = 0;
              v20 = 0;
              v21 = 0;
              a1[36] |= 8u;
              while (1)
              {
                v22 = *v3;
                v23 = *(_QWORD *)(a2 + v22);
                if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
                  break;
                v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
                *(_QWORD *)(a2 + v22) = v23 + 1;
                v21 |= (unint64_t)(v24 & 0x7F) << v19;
                if ((v24 & 0x80) == 0)
                  goto LABEL_178;
                v19 += 7;
                v15 = v20++ >= 9;
                if (v15)
                {
                  v21 = 0;
                  goto LABEL_180;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_178:
              if (*(_BYTE *)(a2 + *v5))
                v21 = 0;
LABEL_180:
              v133 = 56;
              goto LABEL_197;
            case 2u:
              v27 = 0;
              v28 = 0;
              v21 = 0;
              a1[36] |= 1u;
              while (2)
              {
                v29 = *v3;
                v30 = *(_QWORD *)(a2 + v29);
                if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
                  *(_QWORD *)(a2 + v29) = v30 + 1;
                  v21 |= (unint64_t)(v31 & 0x7F) << v27;
                  if (v31 < 0)
                  {
                    v27 += 7;
                    v15 = v28++ >= 9;
                    if (v15)
                    {
                      v21 = 0;
                      goto LABEL_184;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v21 = 0;
LABEL_184:
              v133 = v8[333];
              goto LABEL_197;
            case 3u:
              v32 = 0;
              v33 = 0;
              v21 = 0;
              a1[36] |= 2u;
              while (2)
              {
                v34 = *v3;
                v35 = *(_QWORD *)(a2 + v34);
                if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
                  *(_QWORD *)(a2 + v34) = v35 + 1;
                  v21 |= (unint64_t)(v36 & 0x7F) << v32;
                  if (v36 < 0)
                  {
                    v32 += 7;
                    v15 = v33++ >= 9;
                    if (v15)
                    {
                      v21 = 0;
                      goto LABEL_188;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v21 = 0;
LABEL_188:
              v133 = 40;
              goto LABEL_197;
            case 4u:
              v37 = 0;
              v38 = 0;
              v21 = 0;
              a1[36] |= 0x10u;
              while (2)
              {
                v39 = *v3;
                v40 = *(_QWORD *)(a2 + v39);
                if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
                  *(_QWORD *)(a2 + v39) = v40 + 1;
                  v21 |= (unint64_t)(v41 & 0x7F) << v37;
                  if (v41 < 0)
                  {
                    v37 += 7;
                    v15 = v38++ >= 9;
                    if (v15)
                    {
                      v21 = 0;
                      goto LABEL_192;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v21 = 0;
LABEL_192:
              v133 = 64;
              goto LABEL_197;
            case 5u:
              v42 = 0;
              v43 = 0;
              v21 = 0;
              a1[36] |= 4u;
              while (2)
              {
                v44 = *v3;
                v45 = *(_QWORD *)(a2 + v44);
                if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
                  *(_QWORD *)(a2 + v44) = v45 + 1;
                  v21 |= (unint64_t)(v46 & 0x7F) << v42;
                  if (v46 < 0)
                  {
                    v42 += 7;
                    v15 = v43++ >= 9;
                    if (v15)
                    {
                      v21 = 0;
                      goto LABEL_196;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v21 = 0;
LABEL_196:
              v133 = 48;
LABEL_197:
              *(_QWORD *)((char *)a1 + v133) = v21;
              goto LABEL_259;
            case 6u:
              v47 = 0;
              v48 = 0;
              v49 = 0;
              a1[36] |= 0x80000u;
              while (2)
              {
                v50 = *v3;
                v51 = *(_QWORD *)(a2 + v50);
                if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
                  *(_QWORD *)(a2 + v50) = v51 + 1;
                  v49 |= (unint64_t)(v52 & 0x7F) << v47;
                  if (v52 < 0)
                  {
                    v47 += 7;
                    v15 = v48++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_201;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_201:
              v134 = 35;
              goto LABEL_258;
            case 7u:
              v53 = 0;
              v54 = 0;
              v49 = 0;
              a1[36] |= 0x8000u;
              while (2)
              {
                v55 = *v3;
                v56 = *(_QWORD *)(a2 + v55);
                if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
                  *(_QWORD *)(a2 + v55) = v56 + 1;
                  v49 |= (unint64_t)(v57 & 0x7F) << v53;
                  if (v57 < 0)
                  {
                    v53 += 7;
                    v15 = v54++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_205;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_205:
              v134 = 31;
              goto LABEL_258;
            case 8u:
              if (v17 == 2)
              {
                v58 = v8;
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v60 = 0;
                  v61 = 0;
                  v62 = 0;
                  while (1)
                  {
                    v63 = *v3;
                    v64 = *(_QWORD *)(a2 + v63);
                    if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
                    *(_QWORD *)(a2 + v63) = v64 + 1;
                    v62 |= (unint64_t)(v65 & 0x7F) << v60;
                    if (v65 < 0)
                    {
                      v60 += 7;
                      v15 = v61++ >= 9;
                      if (!v15)
                        continue;
                    }
                    goto LABEL_82;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_82:
                  PBRepeatedUInt32Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                v135 = 0;
                v136 = 0;
                v137 = 0;
                while (1)
                {
                  v138 = *v3;
                  v139 = *(_QWORD *)(a2 + v138);
                  if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
                  {
                    v58 = v8;
                    *(_BYTE *)(a2 + *v5) = 1;
                    goto LABEL_271;
                  }
                  v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
                  *(_QWORD *)(a2 + v138) = v139 + 1;
                  v137 |= (unint64_t)(v140 & 0x7F) << v135;
                  if ((v140 & 0x80) == 0)
                    break;
                  v135 += 7;
                  v15 = v136++ >= 9;
                  if (v15)
                  {
                    v58 = v8;
                    goto LABEL_271;
                  }
                }
                v58 = v8;
LABEL_271:
                PBRepeatedUInt32Add();
              }
              v8 = v58;
LABEL_259:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 9u:
              v66 = 0;
              v67 = 0;
              v49 = 0;
              a1[36] |= 0x40000u;
              while (2)
              {
                v68 = *v3;
                v69 = *(_QWORD *)(a2 + v68);
                if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
                  *(_QWORD *)(a2 + v68) = v69 + 1;
                  v49 |= (unint64_t)(v70 & 0x7F) << v66;
                  if (v70 < 0)
                  {
                    v66 += 7;
                    v15 = v67++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_209;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_209:
              v134 = 34;
              goto LABEL_258;
            case 0xAu:
              v71 = 0;
              v72 = 0;
              v49 = 0;
              a1[36] |= 0x800u;
              while (2)
              {
                v73 = *v3;
                v74 = *(_QWORD *)(a2 + v73);
                if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
                  *(_QWORD *)(a2 + v73) = v74 + 1;
                  v49 |= (unint64_t)(v75 & 0x7F) << v71;
                  if (v75 < 0)
                  {
                    v71 += 7;
                    v15 = v72++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_213;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_213:
              v134 = 24;
              goto LABEL_258;
            case 0xBu:
              v76 = 0;
              v77 = 0;
              v49 = 0;
              a1[36] |= 0x4000u;
              while (2)
              {
                v78 = *v3;
                v79 = *(_QWORD *)(a2 + v78);
                if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
                  *(_QWORD *)(a2 + v78) = v79 + 1;
                  v49 |= (unint64_t)(v80 & 0x7F) << v76;
                  if (v80 < 0)
                  {
                    v76 += 7;
                    v15 = v77++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_217;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_217:
              v134 = 30;
              goto LABEL_258;
            case 0xCu:
              v81 = 0;
              v82 = 0;
              v49 = 0;
              a1[36] |= 0x2000u;
              while (2)
              {
                v83 = *v3;
                v84 = *(_QWORD *)(a2 + v83);
                if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
                  *(_QWORD *)(a2 + v83) = v84 + 1;
                  v49 |= (unint64_t)(v85 & 0x7F) << v81;
                  if (v85 < 0)
                  {
                    v81 += 7;
                    v15 = v82++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_221;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_221:
              v134 = 29;
              goto LABEL_258;
            case 0xDu:
              v86 = 0;
              v87 = 0;
              v49 = 0;
              a1[36] |= 0x20000u;
              while (2)
              {
                v88 = *v3;
                v89 = *(_QWORD *)(a2 + v88);
                if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
                  *(_QWORD *)(a2 + v88) = v89 + 1;
                  v49 |= (unint64_t)(v90 & 0x7F) << v86;
                  if (v90 < 0)
                  {
                    v86 += 7;
                    v15 = v87++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_225;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_225:
              v134 = 33;
              goto LABEL_258;
            case 0xEu:
              v91 = 0;
              v92 = 0;
              v49 = 0;
              a1[36] |= 0x200u;
              while (2)
              {
                v93 = *v3;
                v94 = *(_QWORD *)(a2 + v93);
                if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
                  *(_QWORD *)(a2 + v93) = v94 + 1;
                  v49 |= (unint64_t)(v95 & 0x7F) << v91;
                  if (v95 < 0)
                  {
                    v91 += 7;
                    v15 = v92++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_229;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_229:
              v134 = 22;
              goto LABEL_258;
            case 0xFu:
              v96 = 0;
              v97 = 0;
              v49 = 0;
              a1[36] |= 0x400u;
              while (2)
              {
                v98 = *v3;
                v99 = *(_QWORD *)(a2 + v98);
                if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
                  *(_QWORD *)(a2 + v98) = v99 + 1;
                  v49 |= (unint64_t)(v100 & 0x7F) << v96;
                  if (v100 < 0)
                  {
                    v96 += 7;
                    v15 = v97++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_233;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_233:
              v134 = 23;
              goto LABEL_258;
            case 0x10u:
              v101 = 0;
              v102 = 0;
              v49 = 0;
              a1[36] |= 0x10000u;
              while (2)
              {
                v103 = *v3;
                v104 = *(_QWORD *)(a2 + v103);
                if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
                  *(_QWORD *)(a2 + v103) = v104 + 1;
                  v49 |= (unint64_t)(v105 & 0x7F) << v101;
                  if (v105 < 0)
                  {
                    v101 += 7;
                    v15 = v102++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_237;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_237:
              v134 = 32;
              goto LABEL_258;
            case 0x11u:
              v106 = 0;
              v107 = 0;
              v49 = 0;
              a1[36] |= 0x100u;
              while (2)
              {
                v108 = *v3;
                v109 = *(_QWORD *)(a2 + v108);
                if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
                  *(_QWORD *)(a2 + v108) = v109 + 1;
                  v49 |= (unint64_t)(v110 & 0x7F) << v106;
                  if (v110 < 0)
                  {
                    v106 += 7;
                    v15 = v107++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_241;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_241:
              v134 = 21;
              goto LABEL_258;
            case 0x12u:
              v111 = 0;
              v112 = 0;
              v49 = 0;
              a1[36] |= 0x40u;
              while (2)
              {
                v113 = *v3;
                v114 = *(_QWORD *)(a2 + v113);
                if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
                  *(_QWORD *)(a2 + v113) = v114 + 1;
                  v49 |= (unint64_t)(v115 & 0x7F) << v111;
                  if (v115 < 0)
                  {
                    v111 += 7;
                    v15 = v112++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_245;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_245:
              v134 = 19;
              goto LABEL_258;
            case 0x13u:
              v116 = 0;
              v117 = 0;
              v49 = 0;
              a1[36] |= 0x80u;
              while (2)
              {
                v118 = *v3;
                v119 = *(_QWORD *)(a2 + v118);
                if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
                  *(_QWORD *)(a2 + v118) = v119 + 1;
                  v49 |= (unint64_t)(v120 & 0x7F) << v116;
                  if (v120 < 0)
                  {
                    v116 += 7;
                    v15 = v117++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_249;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_249:
              v134 = 20;
              goto LABEL_258;
            case 0x14u:
              v121 = 0;
              v122 = 0;
              v49 = 0;
              a1[36] |= 0x1000u;
              while (2)
              {
                v123 = *v3;
                v124 = *(_QWORD *)(a2 + v123);
                if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
                  *(_QWORD *)(a2 + v123) = v124 + 1;
                  v49 |= (unint64_t)(v125 & 0x7F) << v121;
                  if (v125 < 0)
                  {
                    v121 += 7;
                    v15 = v122++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_253;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_253:
              v134 = 28;
              goto LABEL_258;
            case 0x15u:
              v126 = v8;
              v127 = objc_alloc_init(AWDWiFiMetricsAutoJoinNwExclusion);
              objc_msgSend(a1, "addNetworksExcludedFromAJDueToThresholds:", v127);

              if (!PBReaderPlaceMark() || !AWDWiFiMetricsAutoJoinNwExclusionReadFrom((uint64_t)v127, a2))
                return 0;
              PBReaderRecallMark();
              v8 = v126;
              v5 = (int *)MEMORY[0x24BE7AF48];
              goto LABEL_259;
            case 0x16u:
              v128 = 0;
              v129 = 0;
              v49 = 0;
              a1[36] |= 0x20u;
              while (2)
              {
                v130 = *v3;
                v131 = *(_QWORD *)(a2 + v130);
                if (v131 == -1 || v131 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v132 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v131);
                  *(_QWORD *)(a2 + v130) = v131 + 1;
                  v49 |= (unint64_t)(v132 & 0x7F) << v128;
                  if (v132 < 0)
                  {
                    v128 += 7;
                    v15 = v129++ >= 9;
                    if (v15)
                    {
                      LODWORD(v49) = 0;
                      goto LABEL_257;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v49) = 0;
LABEL_257:
              v134 = 18;
LABEL_258:
              a1[v134] = v49;
              goto LABEL_259;
            default:
              v25 = v8;
              v26 = PBReaderSkipValueWithTag();
              v8 = v25;
              if ((v26 & 1) != 0)
                goto LABEL_259;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerAutoJoinSessionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDWiFiMetricsManagerAutoJoinRecord *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDWiFiMetricsManagerAutoJoinRecord);
        objc_msgSend((id)a1, "addRecords:", v23);

        if (!PBReaderPlaceMark() || (AWDWiFiMetricsManagerAutoJoinRecordReadFrom(v23, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerAwdlUsageReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  AWDWifiAwdlStateInfo *v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  AWDWifiAwdlServiceRecord *v146;
  char v147;
  unsigned int v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  char v152;
  unsigned int v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  char v157;
  unsigned int v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  char v167;
  unsigned int v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  char v172;
  unsigned int v173;
  uint64_t v174;
  unint64_t v175;
  char v176;
  char v177;
  unsigned int v178;
  uint64_t v179;
  unint64_t v180;
  char v181;
  char v182;
  unsigned int v183;
  uint64_t v184;
  unint64_t v185;
  char v186;
  AWDWifiAwdlHistogramBin *v187;
  char v188;
  unsigned int v189;
  uint64_t v190;
  unint64_t v191;
  char v192;
  char v193;
  unsigned int v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  char v198;
  unsigned int v199;
  uint64_t v200;
  unint64_t v201;
  char v202;
  char v203;
  unsigned int v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  char v208;
  unsigned int v209;
  uint64_t v210;
  unint64_t v211;
  char v212;
  char v213;
  unsigned int v214;
  uint64_t v215;
  unint64_t v216;
  char v217;
  AWDWifiAwdlD2dMigrationStats *v218;
  char v219;
  unsigned int v220;
  uint64_t v221;
  unint64_t v222;
  char v223;
  char v224;
  unsigned int v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  char v229;
  unsigned int v230;
  uint64_t v231;
  unint64_t v232;
  char v233;
  char v234;
  unsigned int v235;
  uint64_t v236;
  unint64_t v237;
  char v238;
  char v239;
  unsigned int v240;
  uint64_t v241;
  unint64_t v242;
  char v243;
  uint64_t v244;
  uint64_t v245;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 240) |= 4uLL;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_344;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_346;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_344:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_346:
        v244 = 24;
        goto LABEL_479;
      case 2u:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x40000000000uLL;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_350;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_350:
        v245 = 216;
        goto LABEL_520;
      case 3u:
        v30 = 0;
        v31 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x4000000000uLL;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v26 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_354;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_354:
        v245 = 200;
        goto LABEL_520;
      case 4u:
        v35 = 0;
        v36 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x2000000000uLL;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v26 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_358;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_358:
        v245 = 188;
        goto LABEL_520;
      case 5u:
        v40 = 0;
        v41 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x1000000000uLL;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v26 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_362;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_362:
        v245 = 184;
        goto LABEL_520;
      case 6u:
        v45 = 0;
        v46 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x10000uLL;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v26 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_366;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_366:
        v245 = 84;
        goto LABEL_520;
      case 7u:
        v50 = 0;
        v51 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x20000uLL;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v26 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_370;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_370:
        v245 = 88;
        goto LABEL_520;
      case 8u:
        v55 = 0;
        v56 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x40000uLL;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v26 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              v14 = v56++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_374;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_374:
        v245 = 92;
        goto LABEL_520;
      case 9u:
        v60 = 0;
        v61 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x8000uLL;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v26 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_378;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_378:
        v245 = 80;
        goto LABEL_520;
      case 0xAu:
        v65 = 0;
        v66 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x8000000uLL;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v26 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_382;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_382:
        v245 = 136;
        goto LABEL_520;
      case 0xBu:
        v70 = 0;
        v71 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x10000000uLL;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v26 |= (unint64_t)(v74 & 0x7F) << v70;
            if (v74 < 0)
            {
              v70 += 7;
              v14 = v71++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_386;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_386:
        v245 = 152;
        goto LABEL_520;
      case 0xCu:
        v75 = 0;
        v76 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x20000000uLL;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v78 + 1;
            v26 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              v14 = v76++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_390;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_390:
        v245 = 156;
        goto LABEL_520;
      case 0xDu:
        v80 = 0;
        v81 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x40000000uLL;
        while (2)
        {
          v82 = *v3;
          v83 = *(_QWORD *)(a2 + v82);
          if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
            *(_QWORD *)(a2 + v82) = v83 + 1;
            v26 |= (unint64_t)(v84 & 0x7F) << v80;
            if (v84 < 0)
            {
              v80 += 7;
              v14 = v81++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_394;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_394:
        v245 = 160;
        goto LABEL_520;
      case 0xEu:
        v85 = 0;
        v86 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x80uLL;
        while (2)
        {
          v87 = *v3;
          v88 = *(_QWORD *)(a2 + v87);
          if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
            *(_QWORD *)(a2 + v87) = v88 + 1;
            v26 |= (unint64_t)(v89 & 0x7F) << v85;
            if (v89 < 0)
            {
              v85 += 7;
              v14 = v86++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_398;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_398:
        v245 = 48;
        goto LABEL_520;
      case 0xFu:
        v90 = 0;
        v91 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x100uLL;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
            *(_QWORD *)(a2 + v92) = v93 + 1;
            v26 |= (unint64_t)(v94 & 0x7F) << v90;
            if (v94 < 0)
            {
              v90 += 7;
              v14 = v91++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_402;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_402:
        v245 = 52;
        goto LABEL_520;
      case 0x10u:
        v95 = 0;
        v96 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x10000000000uLL;
        while (2)
        {
          v97 = *v3;
          v98 = *(_QWORD *)(a2 + v97);
          if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v98);
            *(_QWORD *)(a2 + v97) = v98 + 1;
            v26 |= (unint64_t)(v99 & 0x7F) << v95;
            if (v99 < 0)
            {
              v95 += 7;
              v14 = v96++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_406;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_406:
        v245 = 208;
        goto LABEL_520;
      case 0x11u:
        v100 = objc_alloc_init(AWDWifiAwdlStateInfo);
        objc_msgSend((id)a1, "addStates:", v100);

        if (!PBReaderPlaceMark() || (AWDWifiAwdlStateInfoReadFrom((uint64_t)v100, a2) & 1) == 0)
          return 0;
        goto LABEL_307;
      case 0x12u:
        v101 = 0;
        v102 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 240) |= 1uLL;
        while (2)
        {
          v103 = *v3;
          v104 = *(_QWORD *)(a2 + v103);
          if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
            *(_QWORD *)(a2 + v103) = v104 + 1;
            v19 |= (unint64_t)(v105 & 0x7F) << v101;
            if (v105 < 0)
            {
              v101 += 7;
              v14 = v102++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_410;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_410:
        v244 = 8;
        goto LABEL_479;
      case 0x13u:
        v106 = 0;
        v107 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x400uLL;
        while (2)
        {
          v108 = *v3;
          v109 = *(_QWORD *)(a2 + v108);
          if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
            *(_QWORD *)(a2 + v108) = v109 + 1;
            v26 |= (unint64_t)(v110 & 0x7F) << v106;
            if (v110 < 0)
            {
              v106 += 7;
              v14 = v107++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_414;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_414:
        v245 = 60;
        goto LABEL_520;
      case 0x14u:
        v111 = 0;
        v112 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x200uLL;
        while (2)
        {
          v113 = *v3;
          v114 = *(_QWORD *)(a2 + v113);
          if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v114 + 1;
            v26 |= (unint64_t)(v115 & 0x7F) << v111;
            if (v115 < 0)
            {
              v111 += 7;
              v14 = v112++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_418;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_418:
        v245 = 56;
        goto LABEL_520;
      case 0x15u:
        v116 = 0;
        v117 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x1000uLL;
        while (2)
        {
          v118 = *v3;
          v119 = *(_QWORD *)(a2 + v118);
          if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v119 + 1;
            v26 |= (unint64_t)(v120 & 0x7F) << v116;
            if (v120 < 0)
            {
              v116 += 7;
              v14 = v117++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_422;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_422:
        v245 = 68;
        goto LABEL_520;
      case 0x16u:
        v121 = 0;
        v122 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x800uLL;
        while (2)
        {
          v123 = *v3;
          v124 = *(_QWORD *)(a2 + v123);
          if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
            *(_QWORD *)(a2 + v123) = v124 + 1;
            v26 |= (unint64_t)(v125 & 0x7F) << v121;
            if (v125 < 0)
            {
              v121 += 7;
              v14 = v122++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_426;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_426:
        v245 = 64;
        goto LABEL_520;
      case 0x17u:
        v126 = 0;
        v127 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x10uLL;
        while (2)
        {
          v128 = *v3;
          v129 = *(_QWORD *)(a2 + v128);
          if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
            *(_QWORD *)(a2 + v128) = v129 + 1;
            v26 |= (unint64_t)(v130 & 0x7F) << v126;
            if (v130 < 0)
            {
              v126 += 7;
              v14 = v127++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_430;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_430:
        v245 = 36;
        goto LABEL_520;
      case 0x18u:
        v131 = 0;
        v132 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 8uLL;
        while (2)
        {
          v133 = *v3;
          v134 = *(_QWORD *)(a2 + v133);
          if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v134 + 1;
            v26 |= (unint64_t)(v135 & 0x7F) << v131;
            if (v135 < 0)
            {
              v131 += 7;
              v14 = v132++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_434;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_434:
        v245 = 32;
        goto LABEL_520;
      case 0x19u:
        v136 = 0;
        v137 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x40uLL;
        while (2)
        {
          v138 = *v3;
          v139 = *(_QWORD *)(a2 + v138);
          if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
            *(_QWORD *)(a2 + v138) = v139 + 1;
            v26 |= (unint64_t)(v140 & 0x7F) << v136;
            if (v140 < 0)
            {
              v136 += 7;
              v14 = v137++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_438;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_438:
        v245 = 44;
        goto LABEL_520;
      case 0x1Au:
        v141 = 0;
        v142 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x20uLL;
        while (2)
        {
          v143 = *v3;
          v144 = *(_QWORD *)(a2 + v143);
          if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v144 + 1;
            v26 |= (unint64_t)(v145 & 0x7F) << v141;
            if (v145 < 0)
            {
              v141 += 7;
              v14 = v142++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_442;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_442:
        v245 = 40;
        goto LABEL_520;
      case 0x1Bu:
        v146 = objc_alloc_init(AWDWifiAwdlServiceRecord);
        objc_msgSend((id)a1, "addServices:", v146);

        if (!PBReaderPlaceMark() || (AWDWifiAwdlServiceRecordReadFrom((uint64_t)v146, a2) & 1) == 0)
          return 0;
        goto LABEL_307;
      case 0x1Cu:
        v147 = 0;
        v148 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x100000uLL;
        while (2)
        {
          v149 = *v3;
          v150 = *(_QWORD *)(a2 + v149);
          if (v150 == -1 || v150 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v151 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v150);
            *(_QWORD *)(a2 + v149) = v150 + 1;
            v26 |= (unint64_t)(v151 & 0x7F) << v147;
            if (v151 < 0)
            {
              v147 += 7;
              v14 = v148++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_446;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_446:
        v245 = 100;
        goto LABEL_520;
      case 0x1Du:
        v152 = 0;
        v153 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x4000uLL;
        while (2)
        {
          v154 = *v3;
          v155 = *(_QWORD *)(a2 + v154);
          if (v155 == -1 || v155 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v156 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v155);
            *(_QWORD *)(a2 + v154) = v155 + 1;
            v26 |= (unint64_t)(v156 & 0x7F) << v152;
            if (v156 < 0)
            {
              v152 += 7;
              v14 = v153++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_450;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_450:
        v245 = 76;
        goto LABEL_520;
      case 0x1Eu:
        v157 = 0;
        v158 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x1000000uLL;
        while (2)
        {
          v159 = *v3;
          v160 = *(_QWORD *)(a2 + v159);
          if (v160 == -1 || v160 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
            *(_QWORD *)(a2 + v159) = v160 + 1;
            v26 |= (unint64_t)(v161 & 0x7F) << v157;
            if (v161 < 0)
            {
              v157 += 7;
              v14 = v158++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_454;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_454:
        v245 = 124;
        goto LABEL_520;
      case 0x1Fu:
        v162 = 0;
        v163 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x800000uLL;
        while (2)
        {
          v164 = *v3;
          v165 = *(_QWORD *)(a2 + v164);
          if (v165 == -1 || v165 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v166 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v165);
            *(_QWORD *)(a2 + v164) = v165 + 1;
            v26 |= (unint64_t)(v166 & 0x7F) << v162;
            if (v166 < 0)
            {
              v162 += 7;
              v14 = v163++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_458;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_458:
        v245 = 120;
        goto LABEL_520;
      case 0x20u:
        v167 = 0;
        v168 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x4000000uLL;
        while (2)
        {
          v169 = *v3;
          v170 = *(_QWORD *)(a2 + v169);
          if (v170 == -1 || v170 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v171 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v170);
            *(_QWORD *)(a2 + v169) = v170 + 1;
            v26 |= (unint64_t)(v171 & 0x7F) << v167;
            if (v171 < 0)
            {
              v167 += 7;
              v14 = v168++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_462;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_462:
        v245 = 132;
        goto LABEL_520;
      case 0x21u:
        v172 = 0;
        v173 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x2000000uLL;
        while (2)
        {
          v174 = *v3;
          v175 = *(_QWORD *)(a2 + v174);
          if (v175 == -1 || v175 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v176 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v175);
            *(_QWORD *)(a2 + v174) = v175 + 1;
            v26 |= (unint64_t)(v176 & 0x7F) << v172;
            if (v176 < 0)
            {
              v172 += 7;
              v14 = v173++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_466;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_466:
        v245 = 128;
        goto LABEL_520;
      case 0x22u:
        v177 = 0;
        v178 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x200000uLL;
        while (2)
        {
          v179 = *v3;
          v180 = *(_QWORD *)(a2 + v179);
          if (v180 == -1 || v180 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v181 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v180);
            *(_QWORD *)(a2 + v179) = v180 + 1;
            v26 |= (unint64_t)(v181 & 0x7F) << v177;
            if (v181 < 0)
            {
              v177 += 7;
              v14 = v178++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_470;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_470:
        v245 = 112;
        goto LABEL_520;
      case 0x23u:
        v182 = 0;
        v183 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x400000uLL;
        while (2)
        {
          v184 = *v3;
          v185 = *(_QWORD *)(a2 + v184);
          if (v185 == -1 || v185 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v186 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v185);
            *(_QWORD *)(a2 + v184) = v185 + 1;
            v26 |= (unint64_t)(v186 & 0x7F) << v182;
            if (v186 < 0)
            {
              v182 += 7;
              v14 = v183++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_474;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_474:
        v245 = 116;
        goto LABEL_520;
      case 0x24u:
        v187 = objc_alloc_init(AWDWifiAwdlHistogramBin);
        objc_msgSend((id)a1, "addHopCountHistogram:", v187);
        goto LABEL_260;
      case 0x25u:
        v187 = objc_alloc_init(AWDWifiAwdlHistogramBin);
        objc_msgSend((id)a1, "addParentRssiHistogram:", v187);
LABEL_260:

        if (!PBReaderPlaceMark() || !AWDWifiAwdlHistogramBinReadFrom((uint64_t)v187, a2))
          return 0;
        goto LABEL_307;
      case 0x26u:
        v188 = 0;
        v189 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 240) |= 2uLL;
        while (2)
        {
          v190 = *v3;
          v191 = *(_QWORD *)(a2 + v190);
          if (v191 == -1 || v191 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v192 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v191);
            *(_QWORD *)(a2 + v190) = v191 + 1;
            v19 |= (unint64_t)(v192 & 0x7F) << v188;
            if (v192 < 0)
            {
              v188 += 7;
              v14 = v189++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_478;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_478:
        v244 = 16;
LABEL_479:
        *(_QWORD *)(a1 + v244) = v19;
        goto LABEL_521;
      case 0x27u:
        v193 = 0;
        v194 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x80000000uLL;
        while (2)
        {
          v195 = *v3;
          v196 = *(_QWORD *)(a2 + v195);
          if (v196 == -1 || v196 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v197 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v196);
            *(_QWORD *)(a2 + v195) = v196 + 1;
            v26 |= (unint64_t)(v197 & 0x7F) << v193;
            if (v197 < 0)
            {
              v193 += 7;
              v14 = v194++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_483;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_483:
        v245 = 164;
        goto LABEL_520;
      case 0x28u:
        v198 = 0;
        v199 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x100000000uLL;
        while (2)
        {
          v200 = *v3;
          v201 = *(_QWORD *)(a2 + v200);
          if (v201 == -1 || v201 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v202 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v201);
            *(_QWORD *)(a2 + v200) = v201 + 1;
            v26 |= (unint64_t)(v202 & 0x7F) << v198;
            if (v202 < 0)
            {
              v198 += 7;
              v14 = v199++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_487;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_487:
        v245 = 168;
        goto LABEL_520;
      case 0x29u:
        v203 = 0;
        v204 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x200000000uLL;
        while (2)
        {
          v205 = *v3;
          v206 = *(_QWORD *)(a2 + v205);
          if (v206 == -1 || v206 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v207 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v206);
            *(_QWORD *)(a2 + v205) = v206 + 1;
            v26 |= (unint64_t)(v207 & 0x7F) << v203;
            if (v207 < 0)
            {
              v203 += 7;
              v14 = v204++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_491;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_491:
        v245 = 172;
        goto LABEL_520;
      case 0x2Au:
        v208 = 0;
        v209 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x400000000uLL;
        while (2)
        {
          v210 = *v3;
          v211 = *(_QWORD *)(a2 + v210);
          if (v211 == -1 || v211 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v212 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v211);
            *(_QWORD *)(a2 + v210) = v211 + 1;
            v26 |= (unint64_t)(v212 & 0x7F) << v208;
            if (v212 < 0)
            {
              v208 += 7;
              v14 = v209++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_495;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_495:
        v245 = 176;
        goto LABEL_520;
      case 0x2Bu:
        v213 = 0;
        v214 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x800000000uLL;
        while (2)
        {
          v215 = *v3;
          v216 = *(_QWORD *)(a2 + v215);
          if (v216 == -1 || v216 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v217 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v216);
            *(_QWORD *)(a2 + v215) = v216 + 1;
            v26 |= (unint64_t)(v217 & 0x7F) << v213;
            if (v217 < 0)
            {
              v213 += 7;
              v14 = v214++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_499;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_499:
        v245 = 180;
        goto LABEL_520;
      case 0x2Cu:
        v218 = objc_alloc_init(AWDWifiAwdlD2dMigrationStats);

        *(_QWORD *)(a1 + 104) = v218;
        if (PBReaderPlaceMark() && (AWDWifiAwdlD2dMigrationStatsReadFrom((uint64_t)v218, a2) & 1) != 0)
        {
LABEL_307:
          PBReaderRecallMark();
LABEL_521:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0x2Du:
        v219 = 0;
        v220 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x80000000000uLL;
        while (2)
        {
          v221 = *v3;
          v222 = *(_QWORD *)(a2 + v221);
          if (v222 == -1 || v222 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v223 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v222);
            *(_QWORD *)(a2 + v221) = v222 + 1;
            v26 |= (unint64_t)(v223 & 0x7F) << v219;
            if (v223 < 0)
            {
              v219 += 7;
              v14 = v220++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_503;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_503:
        v245 = 220;
        goto LABEL_520;
      case 0x2Eu:
        v224 = 0;
        v225 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x8000000000uLL;
        while (2)
        {
          v226 = *v3;
          v227 = *(_QWORD *)(a2 + v226);
          if (v227 == -1 || v227 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v228 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v227);
            *(_QWORD *)(a2 + v226) = v227 + 1;
            v26 |= (unint64_t)(v228 & 0x7F) << v224;
            if (v228 < 0)
            {
              v224 += 7;
              v14 = v225++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_507;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_507:
        v245 = 204;
        goto LABEL_520;
      case 0x2Fu:
        v229 = 0;
        v230 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x80000uLL;
        while (2)
        {
          v231 = *v3;
          v232 = *(_QWORD *)(a2 + v231);
          if (v232 == -1 || v232 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v233 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v232);
            *(_QWORD *)(a2 + v231) = v232 + 1;
            v26 |= (unint64_t)(v233 & 0x7F) << v229;
            if (v233 < 0)
            {
              v229 += 7;
              v14 = v230++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_511;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_511:
        v245 = 96;
        goto LABEL_520;
      case 0x30u:
        v234 = 0;
        v235 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x20000000000uLL;
        while (2)
        {
          v236 = *v3;
          v237 = *(_QWORD *)(a2 + v236);
          if (v237 == -1 || v237 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v238 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v237);
            *(_QWORD *)(a2 + v236) = v237 + 1;
            v26 |= (unint64_t)(v238 & 0x7F) << v234;
            if (v238 < 0)
            {
              v234 += 7;
              v14 = v235++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_515;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_515:
        v245 = 212;
        goto LABEL_520;
      case 0x31u:
        v239 = 0;
        v240 = 0;
        v26 = 0;
        *(_QWORD *)(a1 + 240) |= 0x2000uLL;
        while (2)
        {
          v241 = *v3;
          v242 = *(_QWORD *)(a2 + v241);
          if (v242 == -1 || v242 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v243 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v242);
            *(_QWORD *)(a2 + v241) = v242 + 1;
            v26 |= (unint64_t)(v243 & 0x7F) << v239;
            if (v243 < 0)
            {
              v239 += 7;
              v14 = v240++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_519;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_519:
        v245 = 72;
LABEL_520:
        *(_DWORD *)(a1 + v245) = v26;
        goto LABEL_521;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_521;
    }
  }
}

uint64_t AWDWiFiMetricsManagerBGScanBlacklistedNetworksReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  AWDWiFiMetricsManagerBlacklistedNetworkInfo *v24;
  void *String;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = objc_alloc_init(AWDWiFiMetricsManagerBlacklistedNetworkInfo);
        objc_msgSend((id)a1, "addBlacklistingHistory:", v24);

        if (!PBReaderPlaceMark()
          || (AWDWiFiMetricsManagerBlacklistedNetworkInfoReadFrom((uint64_t)v24, a2) & 1) == 0)
        {
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((_DWORD)v17 == 2)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 24) = String;
      }
      else if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_35;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_37;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_35:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_37:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerBTCoexModeChangeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  int *v34;
  int *v35;
  int *v36;
  int *v37;
  int *v38;
  uint64_t v39;
  uint64_t result;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v8 = (int *)MEMORY[0x24BE7AF30];
    v9 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v10 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v11 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v12 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v13 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v14 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v15 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v16 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v17 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v18 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      while (1)
      {
        v22 = *v3;
        v23 = *(_QWORD *)(a2 + v22);
        if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
          break;
        v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v23);
        *(_QWORD *)(a2 + v22) = v23 + 1;
        v21 |= (unint64_t)(v24 & 0x7F) << v19;
        if ((v24 & 0x80) == 0)
          goto LABEL_12;
        v19 += 7;
        v25 = v20++ >= 9;
        if (v25)
        {
          v21 = 0;
          v26 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v26 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v21 = 0;
LABEL_14:
      if (v26 || (v21 & 7) == 4)
        break;
      switch((v21 >> 3))
      {
        case 1u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_WORD *)(a1 + v7[410]) |= 1u;
          while (1)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
              break;
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
              goto LABEL_92;
            v28 += 7;
            v25 = v29++ >= 9;
            if (v25)
            {
              v30 = 0;
              goto LABEL_94;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_92:
          if (*(_BYTE *)(a2 + *v5))
            v30 = 0;
LABEL_94:
          *(_QWORD *)(a1 + v9[411]) = v30;
          continue;
        case 2u:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[410]) |= 8u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                v25 = v42++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_98;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_98:
          v87 = v10[412];
          goto LABEL_131;
        case 3u:
          v47 = 0;
          v48 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[410]) |= 2u;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v50);
              *(_QWORD *)(a2 + v49) = v50 + 1;
              v43 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                v25 = v48++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_102;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_102:
          v87 = v11[413];
          goto LABEL_131;
        case 4u:
          v52 = 0;
          v53 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[410]) |= 0x10u;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v55);
              *(_QWORD *)(a2 + v54) = v55 + 1;
              v43 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                v25 = v53++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_106;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_106:
          v87 = v12[414];
          goto LABEL_131;
        case 5u:
          v57 = 0;
          v58 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[410]) |= 0x40u;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v60);
              *(_QWORD *)(a2 + v59) = v60 + 1;
              v43 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                v25 = v58++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_110;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_110:
          v87 = v13[415];
          goto LABEL_131;
        case 6u:
          v62 = 0;
          v63 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[410]) |= 0x100u;
          while (2)
          {
            v64 = *v3;
            v65 = *(_QWORD *)(a2 + v64);
            if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v65);
              *(_QWORD *)(a2 + v64) = v65 + 1;
              v43 |= (unint64_t)(v66 & 0x7F) << v62;
              if (v66 < 0)
              {
                v62 += 7;
                v25 = v63++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_114;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_114:
          v87 = v14[416];
          goto LABEL_131;
        case 7u:
          v67 = 0;
          v68 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[410]) |= 0x80u;
          while (2)
          {
            v69 = *v3;
            v70 = *(_QWORD *)(a2 + v69);
            if (v70 == -1 || v70 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v70);
              *(_QWORD *)(a2 + v69) = v70 + 1;
              v43 |= (unint64_t)(v71 & 0x7F) << v67;
              if (v71 < 0)
              {
                v67 += 7;
                v25 = v68++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_118;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_118:
          v87 = v15[417];
          goto LABEL_131;
        case 8u:
          v72 = 0;
          v73 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[410]) |= 0x200u;
          while (2)
          {
            v74 = *v3;
            v75 = *(_QWORD *)(a2 + v74);
            if (v75 == -1 || v75 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v76 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v75);
              *(_QWORD *)(a2 + v74) = v75 + 1;
              v43 |= (unint64_t)(v76 & 0x7F) << v72;
              if (v76 < 0)
              {
                v72 += 7;
                v25 = v73++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_122:
          v87 = v16[418];
          goto LABEL_131;
        case 9u:
          v77 = 0;
          v78 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[410]) |= 4u;
          while (2)
          {
            v79 = *v3;
            v80 = *(_QWORD *)(a2 + v79);
            if (v80 == -1 || v80 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v80);
              *(_QWORD *)(a2 + v79) = v80 + 1;
              v43 |= (unint64_t)(v81 & 0x7F) << v77;
              if (v81 < 0)
              {
                v77 += 7;
                v25 = v78++ >= 9;
                if (v25)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v43) = 0;
LABEL_126:
          v87 = v17[419];
          goto LABEL_131;
        case 0xAu:
          v82 = 0;
          v83 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[410]) |= 0x20u;
          break;
        default:
          v34 = v9;
          v35 = v10;
          v36 = v7;
          v37 = v11;
          v38 = v12;
          v39 = a1;
          result = PBReaderSkipValueWithTag();
          v13 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          a1 = v39;
          v14 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v38;
          v15 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v11 = v37;
          v16 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v7 = v36;
          v18 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v10 = v35;
          v17 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v9 = v34;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v84 = *v3;
        v85 = *(_QWORD *)(a2 + v84);
        if (v85 == -1 || v85 >= *(_QWORD *)(a2 + *v4))
          break;
        v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v85);
        *(_QWORD *)(a2 + v84) = v85 + 1;
        v43 |= (unint64_t)(v86 & 0x7F) << v82;
        if ((v86 & 0x80) == 0)
          goto LABEL_128;
        v82 += 7;
        v25 = v83++ >= 9;
        if (v25)
        {
          LODWORD(v43) = 0;
          goto LABEL_130;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_128:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v43) = 0;
LABEL_130:
      v87 = v18[420];
LABEL_131:
      *(_DWORD *)(a1 + v87) = v43;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerBTCoexStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  AWDWiFiMetricsManagerStateMachine *v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  uint64_t result;
  char v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  char v133;
  unsigned int v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  char v139;
  unsigned int v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  char v154;
  unsigned int v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  char v159;
  unsigned int v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  char v164;
  unsigned int v165;
  uint64_t v166;
  unint64_t v167;
  char v168;
  char v169;
  unsigned int v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  char v179;
  unsigned int v180;
  uint64_t v181;
  unint64_t v182;
  char v183;
  uint64_t v184;
  char v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  char v191;
  unsigned int v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  char v196;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x8000000u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_269;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_271;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_269:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_271:
              v184 = 272;
              goto LABEL_388;
            case 2u:
              v24 = 0;
              v25 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 2u;
              while (2)
              {
                v26 = *v3;
                v27 = *(_QWORD *)(a2 + v26);
                if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
                  *(_QWORD *)(a2 + v26) = v27 + 1;
                  v20 |= (unint64_t)(v28 & 0x7F) << v24;
                  if (v28 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_275;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_275:
              v184 = 64;
              goto LABEL_388;
            case 3u:
              v29 = 0;
              v30 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 1u;
              while (2)
              {
                v31 = *v3;
                v32 = *(_QWORD *)(a2 + v31);
                if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
                  *(_QWORD *)(a2 + v31) = v32 + 1;
                  v20 |= (unint64_t)(v33 & 0x7F) << v29;
                  if (v33 < 0)
                  {
                    v29 += 7;
                    v14 = v30++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_279;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_279:
              v184 = 56;
              goto LABEL_388;
            case 4u:
              v34 = 0;
              v35 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x20000000u;
              while (2)
              {
                v36 = *v3;
                v37 = *(_QWORD *)(a2 + v36);
                if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
                  *(_QWORD *)(a2 + v36) = v37 + 1;
                  v20 |= (unint64_t)(v38 & 0x7F) << v34;
                  if (v38 < 0)
                  {
                    v34 += 7;
                    v14 = v35++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_283;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_283:
              v184 = 288;
              goto LABEL_388;
            case 5u:
              v39 = 0;
              v40 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x80u;
              while (2)
              {
                v41 = *v3;
                v42 = *(_QWORD *)(a2 + v41);
                if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
                  *(_QWORD *)(a2 + v41) = v42 + 1;
                  v20 |= (unint64_t)(v43 & 0x7F) << v39;
                  if (v43 < 0)
                  {
                    v39 += 7;
                    v14 = v40++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_287;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_287:
              v184 = 112;
              goto LABEL_388;
            case 6u:
              v44 = 0;
              v45 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x20u;
              while (2)
              {
                v46 = *v3;
                v47 = *(_QWORD *)(a2 + v46);
                if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
                  *(_QWORD *)(a2 + v46) = v47 + 1;
                  v20 |= (unint64_t)(v48 & 0x7F) << v44;
                  if (v48 < 0)
                  {
                    v44 += 7;
                    v14 = v45++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_291;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_291:
              v184 = 96;
              goto LABEL_388;
            case 7u:
              v49 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

              v50 = 296;
              goto LABEL_71;
            case 8u:
              v49 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

              v50 = 304;
              goto LABEL_71;
            case 9u:
              v49 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

              v50 = 320;
              goto LABEL_71;
            case 0xAu:
              v49 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

              v50 = 312;
              goto LABEL_71;
            case 0xBu:
              v49 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

              v50 = 336;
              goto LABEL_71;
            case 0xCu:
              v49 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

              v50 = 328;
              goto LABEL_71;
            case 0xDu:
              v49 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

              v50 = 352;
              goto LABEL_71;
            case 0xEu:
              v49 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

              v50 = 344;
LABEL_71:
              *(_QWORD *)(a1 + v50) = v49;
              if (PBReaderPlaceMark()
                && (AWDWiFiMetricsManagerStateMachineReadFrom((uint64_t)v49, a2) & 1) != 0)
              {
                goto LABEL_73;
              }
              return 0;
            case 0xFu:
              v51 = 0;
              v52 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x200u;
              while (2)
              {
                v53 = *v3;
                v54 = *(_QWORD *)(a2 + v53);
                if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
                  *(_QWORD *)(a2 + v53) = v54 + 1;
                  v20 |= (unint64_t)(v55 & 0x7F) << v51;
                  if (v55 < 0)
                  {
                    v51 += 7;
                    v14 = v52++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_295;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_295:
              v184 = 128;
              goto LABEL_388;
            case 0x10u:
              v56 = 0;
              v57 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x80000u;
              while (2)
              {
                v58 = *v3;
                v59 = *(_QWORD *)(a2 + v58);
                if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
                  *(_QWORD *)(a2 + v58) = v59 + 1;
                  v20 |= (unint64_t)(v60 & 0x7F) << v56;
                  if (v60 < 0)
                  {
                    v56 += 7;
                    v14 = v57++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_299;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_299:
              v184 = 208;
              goto LABEL_388;
            case 0x11u:
              v61 = 0;
              v62 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x200000u;
              while (2)
              {
                v63 = *v3;
                v64 = *(_QWORD *)(a2 + v63);
                if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
                  *(_QWORD *)(a2 + v63) = v64 + 1;
                  v20 |= (unint64_t)(v65 & 0x7F) << v61;
                  if (v65 < 0)
                  {
                    v61 += 7;
                    v14 = v62++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_303;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_303:
              v184 = 224;
              goto LABEL_388;
            case 0x12u:
              v66 = 0;
              v67 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x100u;
              while (2)
              {
                v68 = *v3;
                v69 = *(_QWORD *)(a2 + v68);
                if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
                  *(_QWORD *)(a2 + v68) = v69 + 1;
                  v20 |= (unint64_t)(v70 & 0x7F) << v66;
                  if (v70 < 0)
                  {
                    v66 += 7;
                    v14 = v67++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_307;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_307:
              v184 = 120;
              goto LABEL_388;
            case 0x13u:
              v71 = 0;
              v72 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x100000u;
              while (2)
              {
                v73 = *v3;
                v74 = *(_QWORD *)(a2 + v73);
                if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
                  *(_QWORD *)(a2 + v73) = v74 + 1;
                  v20 |= (unint64_t)(v75 & 0x7F) << v71;
                  if (v75 < 0)
                  {
                    v71 += 7;
                    v14 = v72++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_311;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_311:
              v184 = 216;
              goto LABEL_388;
            case 0x14u:
              v76 = 0;
              v77 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x40000u;
              while (2)
              {
                v78 = *v3;
                v79 = *(_QWORD *)(a2 + v78);
                if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
                  *(_QWORD *)(a2 + v78) = v79 + 1;
                  v20 |= (unint64_t)(v80 & 0x7F) << v76;
                  if (v80 < 0)
                  {
                    v76 += 7;
                    v14 = v77++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_315;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_315:
              v184 = 200;
              goto LABEL_388;
            case 0x15u:
              v81 = 0;
              v82 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x2000u;
              while (2)
              {
                v83 = *v3;
                v84 = *(_QWORD *)(a2 + v83);
                if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
                  *(_QWORD *)(a2 + v83) = v84 + 1;
                  v20 |= (unint64_t)(v85 & 0x7F) << v81;
                  if (v85 < 0)
                  {
                    v81 += 7;
                    v14 = v82++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_319;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_319:
              v184 = 160;
              goto LABEL_388;
            case 0x16u:
              v86 = 0;
              v87 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x20000u;
              while (2)
              {
                v88 = *v3;
                v89 = *(_QWORD *)(a2 + v88);
                if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
                  *(_QWORD *)(a2 + v88) = v89 + 1;
                  v20 |= (unint64_t)(v90 & 0x7F) << v86;
                  if (v90 < 0)
                  {
                    v86 += 7;
                    v14 = v87++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_323;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_323:
              v184 = 192;
              goto LABEL_388;
            case 0x17u:
              v91 = 0;
              v92 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x1000u;
              while (2)
              {
                v93 = *v3;
                v94 = *(_QWORD *)(a2 + v93);
                if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
                  *(_QWORD *)(a2 + v93) = v94 + 1;
                  v20 |= (unint64_t)(v95 & 0x7F) << v91;
                  if (v95 < 0)
                  {
                    v91 += 7;
                    v14 = v92++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_327;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_327:
              v184 = 152;
              goto LABEL_388;
            case 0x18u:
              v96 = 0;
              v97 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x400u;
              while (2)
              {
                v98 = *v3;
                v99 = *(_QWORD *)(a2 + v98);
                if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
                  *(_QWORD *)(a2 + v98) = v99 + 1;
                  v20 |= (unint64_t)(v100 & 0x7F) << v96;
                  if (v100 < 0)
                  {
                    v96 += 7;
                    v14 = v97++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_331;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_331:
              v184 = 136;
              goto LABEL_388;
            case 0x19u:
              v101 = 0;
              v102 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x8000u;
              while (2)
              {
                v103 = *v3;
                v104 = *(_QWORD *)(a2 + v103);
                if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
                  *(_QWORD *)(a2 + v103) = v104 + 1;
                  v20 |= (unint64_t)(v105 & 0x7F) << v101;
                  if (v105 < 0)
                  {
                    v101 += 7;
                    v14 = v102++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_335;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_335:
              v184 = 176;
              goto LABEL_388;
            case 0x1Au:
              v106 = 0;
              v107 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x800u;
              while (2)
              {
                v108 = *v3;
                v109 = *(_QWORD *)(a2 + v108);
                if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
                  *(_QWORD *)(a2 + v108) = v109 + 1;
                  v20 |= (unint64_t)(v110 & 0x7F) << v106;
                  if (v110 < 0)
                  {
                    v106 += 7;
                    v14 = v107++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_339;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_339:
              v184 = 144;
              goto LABEL_388;
            case 0x1Bu:
              v111 = 0;
              v112 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x4000u;
              while (2)
              {
                v113 = *v3;
                v114 = *(_QWORD *)(a2 + v113);
                if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
                  *(_QWORD *)(a2 + v113) = v114 + 1;
                  v20 |= (unint64_t)(v115 & 0x7F) << v111;
                  if (v115 < 0)
                  {
                    v111 += 7;
                    v14 = v112++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_343;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_343:
              v184 = 168;
              goto LABEL_388;
            case 0x1Cu:
              v116 = 0;
              v117 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x10000u;
              while (2)
              {
                v118 = *v3;
                v119 = *(_QWORD *)(a2 + v118);
                if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
                  *(_QWORD *)(a2 + v118) = v119 + 1;
                  v20 |= (unint64_t)(v120 & 0x7F) << v116;
                  if (v120 < 0)
                  {
                    v116 += 7;
                    v14 = v117++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_347;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_347:
              v184 = 184;
              goto LABEL_388;
            case 0x1Du:
              v121 = 0;
              v122 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 4u;
              while (2)
              {
                v123 = *v3;
                v124 = *(_QWORD *)(a2 + v123);
                if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
                  *(_QWORD *)(a2 + v123) = v124 + 1;
                  v20 |= (unint64_t)(v125 & 0x7F) << v121;
                  if (v125 < 0)
                  {
                    v121 += 7;
                    v14 = v122++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_351;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_351:
              v184 = 72;
              goto LABEL_388;
            case 0x1Eu:
              if (v16 != 2)
              {
                v185 = 0;
                v186 = 0;
                v187 = 0;
                while (1)
                {
                  v188 = *v3;
                  v189 = *(_QWORD *)(a2 + v188);
                  if (v189 == -1 || v189 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_405;
                  v190 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v189);
                  *(_QWORD *)(a2 + v188) = v189 + 1;
                  v187 |= (unint64_t)(v190 & 0x7F) << v185;
                  if (v190 < 0)
                  {
                    v185 += 7;
                    v14 = v186++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_406;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v127 = 0;
                v128 = 0;
                v129 = 0;
                while (1)
                {
                  v130 = *v3;
                  v131 = *(_QWORD *)(a2 + v130);
                  if (v131 == -1 || v131 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v132 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v131);
                  *(_QWORD *)(a2 + v130) = v131 + 1;
                  v129 |= (unint64_t)(v132 & 0x7F) << v127;
                  if (v132 < 0)
                  {
                    v127 += 7;
                    v14 = v128++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_191;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_191:
                PBRepeatedUInt64Add();
              }
              goto LABEL_73;
            case 0x1Fu:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v133 = 0;
                  v134 = 0;
                  v135 = 0;
                  while (1)
                  {
                    v136 = *v3;
                    v137 = *(_QWORD *)(a2 + v136);
                    if (v137 == -1 || v137 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v138 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v137);
                    *(_QWORD *)(a2 + v136) = v137 + 1;
                    v135 |= (unint64_t)(v138 & 0x7F) << v133;
                    if (v138 < 0)
                    {
                      v133 += 7;
                      v14 = v134++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_204;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_204:
                  PBRepeatedUInt64Add();
                }
LABEL_73:
                PBReaderRecallMark();
              }
              else
              {
                v191 = 0;
                v192 = 0;
                v193 = 0;
                while (1)
                {
                  v194 = *v3;
                  v195 = *(_QWORD *)(a2 + v194);
                  if (v195 == -1 || v195 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v196 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v195);
                  *(_QWORD *)(a2 + v194) = v195 + 1;
                  v193 |= (unint64_t)(v196 & 0x7F) << v191;
                  if (v196 < 0)
                  {
                    v191 += 7;
                    v14 = v192++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_406;
                }
LABEL_405:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_406:
                PBRepeatedUInt64Add();
              }
LABEL_389:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 0x20u:
              v139 = 0;
              v140 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x4000000u;
              while (2)
              {
                v141 = *v3;
                v142 = *(_QWORD *)(a2 + v141);
                if (v142 == -1 || v142 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v142);
                  *(_QWORD *)(a2 + v141) = v142 + 1;
                  v20 |= (unint64_t)(v143 & 0x7F) << v139;
                  if (v143 < 0)
                  {
                    v139 += 7;
                    v14 = v140++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_355;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_355:
              v184 = 264;
              goto LABEL_388;
            case 0x21u:
              v144 = 0;
              v145 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x400000u;
              while (2)
              {
                v146 = *v3;
                v147 = *(_QWORD *)(a2 + v146);
                if (v147 == -1 || v147 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v148 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v147);
                  *(_QWORD *)(a2 + v146) = v147 + 1;
                  v20 |= (unint64_t)(v148 & 0x7F) << v144;
                  if (v148 < 0)
                  {
                    v144 += 7;
                    v14 = v145++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_359;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_359:
              v184 = 232;
              goto LABEL_388;
            case 0x22u:
              v149 = 0;
              v150 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 8u;
              while (2)
              {
                v151 = *v3;
                v152 = *(_QWORD *)(a2 + v151);
                if (v152 == -1 || v152 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v152);
                  *(_QWORD *)(a2 + v151) = v152 + 1;
                  v20 |= (unint64_t)(v153 & 0x7F) << v149;
                  if (v153 < 0)
                  {
                    v149 += 7;
                    v14 = v150++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_363;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_363:
              v184 = 80;
              goto LABEL_388;
            case 0x23u:
              v154 = 0;
              v155 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x800000u;
              while (2)
              {
                v156 = *v3;
                v157 = *(_QWORD *)(a2 + v156);
                if (v157 == -1 || v157 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v158 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v157);
                  *(_QWORD *)(a2 + v156) = v157 + 1;
                  v20 |= (unint64_t)(v158 & 0x7F) << v154;
                  if (v158 < 0)
                  {
                    v154 += 7;
                    v14 = v155++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_367;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_367:
              v184 = 240;
              goto LABEL_388;
            case 0x24u:
              v159 = 0;
              v160 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x1000000u;
              while (2)
              {
                v161 = *v3;
                v162 = *(_QWORD *)(a2 + v161);
                if (v162 == -1 || v162 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v163 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v162);
                  *(_QWORD *)(a2 + v161) = v162 + 1;
                  v20 |= (unint64_t)(v163 & 0x7F) << v159;
                  if (v163 < 0)
                  {
                    v159 += 7;
                    v14 = v160++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_371;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_371:
              v184 = 248;
              goto LABEL_388;
            case 0x25u:
              v164 = 0;
              v165 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x2000000u;
              while (2)
              {
                v166 = *v3;
                v167 = *(_QWORD *)(a2 + v166);
                if (v167 == -1 || v167 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v168 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v167);
                  *(_QWORD *)(a2 + v166) = v167 + 1;
                  v20 |= (unint64_t)(v168 & 0x7F) << v164;
                  if (v168 < 0)
                  {
                    v164 += 7;
                    v14 = v165++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_375;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_375:
              v184 = 256;
              goto LABEL_388;
            case 0x26u:
              v169 = 0;
              v170 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x10u;
              while (2)
              {
                v171 = *v3;
                v172 = *(_QWORD *)(a2 + v171);
                if (v172 == -1 || v172 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v173 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v172);
                  *(_QWORD *)(a2 + v171) = v172 + 1;
                  v20 |= (unint64_t)(v173 & 0x7F) << v169;
                  if (v173 < 0)
                  {
                    v169 += 7;
                    v14 = v170++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_379;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_379:
              v184 = 88;
              goto LABEL_388;
            case 0x27u:
              v174 = 0;
              v175 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x40u;
              while (2)
              {
                v176 = *v3;
                v177 = *(_QWORD *)(a2 + v176);
                if (v177 == -1 || v177 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v178 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v177);
                  *(_QWORD *)(a2 + v176) = v177 + 1;
                  v20 |= (unint64_t)(v178 & 0x7F) << v174;
                  if (v178 < 0)
                  {
                    v174 += 7;
                    v14 = v175++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_383;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_383:
              v184 = 104;
              goto LABEL_388;
            case 0x28u:
              v179 = 0;
              v180 = 0;
              v20 = 0;
              *(_DWORD *)(a1 + 360) |= 0x10000000u;
              while (2)
              {
                v181 = *v3;
                v182 = *(_QWORD *)(a2 + v181);
                if (v182 == -1 || v182 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v183 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v182);
                  *(_QWORD *)(a2 + v181) = v182 + 1;
                  v20 |= (unint64_t)(v183 & 0x7F) << v179;
                  if (v183 < 0)
                  {
                    v179 += 7;
                    v14 = v180++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_387;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_387:
              v184 = 280;
LABEL_388:
              *(_QWORD *)(a1 + v184) = v20;
              goto LABEL_389;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_389;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerBlacklistedNetworkInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  AWDWiFiMetricsManagerBlacklistingInstanceInfo *v30;
  uint64_t v31;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 24) = String;
        goto LABEL_48;
      case 2u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (2)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              v14 = v20++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_42;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_42:
        v31 = 16;
        goto LABEL_47;
      case 3u:
        v25 = 0;
        v26 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v21 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_46;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_46:
        v31 = 20;
LABEL_47:
        *(_DWORD *)(a1 + v31) = v21;
        goto LABEL_48;
      case 4u:
        v30 = objc_alloc_init(AWDWiFiMetricsManagerBlacklistingInstanceInfo);
        objc_msgSend((id)a1, "addBlacklistingRecord:", v30);

        if (PBReaderPlaceMark()
          && (AWDWiFiMetricsManagerBlacklistingInstanceInfoReadFrom((uint64_t)v30, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_48:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_48;
    }
  }
}

uint64_t AWDWiFiMetricsManagerBlacklistingInstanceInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v20 |= (unint64_t)(v28 & 0x7F) << v24;
          if ((v28 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_51:
        v36 = 20;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
              break;
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v31 |= (unint64_t)(v34 & 0x7F) << v29;
            if ((v34 & 0x80) == 0)
              goto LABEL_54;
            v29 += 7;
            v14 = v30++ >= 9;
            if (v14)
            {
              v31 = 0;
              goto LABEL_56;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_56:
          *(_QWORD *)(a1 + 8) = v31;
          continue;
        }
        if ((_DWORD)v17 != 1)
        {
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
        }
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_45;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_47:
        v36 = 16;
      }
      *(_DWORD *)(a1 + v36) = v20;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerChipCountersReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  AWDWiFiMetricsManagerFrameCounterStats *v24;
  AWDChipCountersTx *v25;
  AWDChipErrorCountersTx *v26;
  AWDChipCountersRx *v27;
  AWDMacCountersRxErrors *v28;
  AWDMacCountersRx *v29;
  AWDRxPhyErrors *v30;
  AWDWPA2Counters *v31;
  uint64_t v32;
  AWDWiFiMetricsManagerFrameCounterStats *v33;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 96) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_60;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_62;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_62:
        *(_QWORD *)(a1 + 8) = v19;
        goto LABEL_57;
      case 2u:
        v24 = objc_alloc_init(AWDWiFiMetricsManagerFrameCounterStats);

        *(_QWORD *)(a1 + 24) = v24;
        if (PBReaderPlaceMark()
          && (AWDWiFiMetricsManagerFrameCounterStatsReadFrom((uint64_t)v24, a2) & 1) != 0)
        {
          goto LABEL_56;
        }
        return 0;
      case 3u:
        v25 = objc_alloc_init(AWDChipCountersTx);

        *(_QWORD *)(a1 + 80) = v25;
        if (!PBReaderPlaceMark() || !AWDChipCountersTxReadFrom((uint64_t)v25, a2))
          return 0;
        goto LABEL_56;
      case 4u:
        v26 = objc_alloc_init(AWDChipErrorCountersTx);

        *(_QWORD *)(a1 + 72) = v26;
        if (!PBReaderPlaceMark() || !AWDChipErrorCountersTxReadFrom((uint64_t)v26, a2))
          return 0;
        goto LABEL_56;
      case 5u:
        v27 = objc_alloc_init(AWDChipCountersRx);

        *(_QWORD *)(a1 + 40) = v27;
        if (!PBReaderPlaceMark() || !AWDChipCountersRxReadFrom((uint64_t)v27, a2))
          return 0;
        goto LABEL_56;
      case 6u:
        v28 = objc_alloc_init(AWDMacCountersRxErrors);

        *(_QWORD *)(a1 + 56) = v28;
        if (!PBReaderPlaceMark() || !AWDMacCountersRxErrorsReadFrom((uint64_t)v28, a2))
          return 0;
        goto LABEL_56;
      case 7u:
        v29 = objc_alloc_init(AWDMacCountersRx);

        *(_QWORD *)(a1 + 48) = v29;
        if (!PBReaderPlaceMark() || !AWDMacCountersRxReadFrom((uint64_t)v29, a2))
          return 0;
        goto LABEL_56;
      case 8u:
        v30 = objc_alloc_init(AWDRxPhyErrors);

        *(_QWORD *)(a1 + 64) = v30;
        if (!PBReaderPlaceMark() || !AWDRxPhyErrorsReadFrom((uint64_t)v30, a2))
          return 0;
        goto LABEL_56;
      case 9u:
        v31 = objc_alloc_init(AWDWPA2Counters);

        v32 = 88;
        goto LABEL_51;
      case 0xAu:
        v31 = objc_alloc_init(AWDWPA2Counters);

        v32 = 32;
LABEL_51:
        *(_QWORD *)(a1 + v32) = v31;
        if (!PBReaderPlaceMark() || !AWDWPA2CountersReadFrom((uint64_t)v31, a2))
          return 0;
        goto LABEL_56;
      case 0xBu:
        v33 = objc_alloc_init(AWDWiFiMetricsManagerFrameCounterStats);
        objc_msgSend((id)a1, "addFrameCounterPerInterface:", v33);

        if (PBReaderPlaceMark()
          && (AWDWiFiMetricsManagerFrameCounterStatsReadFrom((uint64_t)v33, a2) & 1) != 0)
        {
LABEL_56:
          PBReaderRecallMark();
LABEL_57:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_57;
    }
  }
}

uint64_t AWDWiFiMetricsManagerChipMemoryReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_71;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_73;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_71:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_73:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_77:
          v55 = 28;
          goto LABEL_98;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 0x40u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_81;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_81:
          v55 = 36;
          goto LABEL_98;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 0x20u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_85:
          v55 = 32;
          goto LABEL_98;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_89;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_89:
          v55 = 16;
          goto LABEL_98;
        case 6u:
          v45 = 0;
          v46 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 8u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v26 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_93;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_93:
          v55 = 24;
          goto LABEL_98;
        case 7u:
          v50 = 0;
          v51 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v52 = *v3;
        v53 = *(_QWORD *)(a2 + v52);
        if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          break;
        v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
        *(_QWORD *)(a2 + v52) = v53 + 1;
        v26 |= (unint64_t)(v54 & 0x7F) << v50;
        if ((v54 & 0x80) == 0)
          goto LABEL_95;
        v50 += 7;
        v14 = v51++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_97;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_95:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_97:
      v55 = 20;
LABEL_98:
      *(_DWORD *)(a1 + v55) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerDeviceCountReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_53;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_55;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_55:
          *(_QWORD *)(a1 + 16) = v20;
          continue;
        case 2u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                v15 = v26++ >= 9;
                if (v15)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_59:
          v48 = 24;
          goto LABEL_68;
        case 3u:
          *(_BYTE *)(a1 + 36) |= 1u;
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v34 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v34 = 0;
          }
          *(_QWORD *)(a1 + 8) = v34;
          continue;
        case 5u:
          v36 = 0;
          v37 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 36) |= 0x10u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v40;
              v27 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v15 = v37++ >= 9;
                if (v15)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_63:
          v48 = 32;
          goto LABEL_68;
        case 7u:
          v42 = 0;
          v43 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v44 = *v3;
        v45 = *(_QWORD *)(a2 + v44);
        v46 = v45 + 1;
        if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
          break;
        v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
        *(_QWORD *)(a2 + v44) = v46;
        v27 |= (unint64_t)(v47 & 0x7F) << v42;
        if ((v47 & 0x80) == 0)
          goto LABEL_65;
        v42 += 7;
        v15 = v43++ >= 9;
        if (v15)
        {
          LODWORD(v27) = 0;
          goto LABEL_67;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_65:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v27) = 0;
LABEL_67:
      v48 = 28;
LABEL_68:
      *(_DWORD *)(a1 + v48) = v27;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_51:
        v36 = 16;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_45;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_47;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_47:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v30 = 0;
        v31 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            break;
          v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
          *(_QWORD *)(a2 + v32) = v33 + 1;
          v26 |= (unint64_t)(v34 & 0x7F) << v30;
          if ((v34 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_55:
        v36 = 20;
      }
      *(_DWORD *)(a1 + v36) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerFrameCounterStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  AWDControlFrames *v24;
  AWDControlFrames *v25;
  AWDDataFrames *v26;
  AWDDataFrames *v27;
  AWDManagementFrames *v28;
  uint64_t v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_46;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_48;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_46:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_48:
        *(_QWORD *)(a1 + 8) = v19;
        goto LABEL_49;
      case 2u:
        v24 = objc_alloc_init(AWDControlFrames);

        *(_QWORD *)(a1 + 16) = v24;
        if (PBReaderPlaceMark() && AWDControlFramesReadFrom((uint64_t)v24, a2))
          goto LABEL_44;
        return 0;
      case 3u:
        v25 = objc_alloc_init(AWDControlFrames);

        *(_QWORD *)(a1 + 40) = v25;
        if (PBReaderPlaceMark() && AWDControlFramesReadFrom((uint64_t)v25, a2))
          goto LABEL_44;
        return 0;
      case 4u:
        v26 = objc_alloc_init(AWDDataFrames);

        *(_QWORD *)(a1 + 24) = v26;
        if (!PBReaderPlaceMark() || !AWDDataFramesReadFrom((uint64_t)v26, a2))
          return 0;
        goto LABEL_44;
      case 5u:
        v27 = objc_alloc_init(AWDDataFrames);

        *(_QWORD *)(a1 + 48) = v27;
        if (PBReaderPlaceMark() && AWDDataFramesReadFrom((uint64_t)v27, a2))
          goto LABEL_44;
        return 0;
      case 6u:
        v28 = objc_alloc_init(AWDManagementFrames);

        v29 = 32;
        goto LABEL_42;
      case 7u:
        v28 = objc_alloc_init(AWDManagementFrames);

        v29 = 56;
LABEL_42:
        *(_QWORD *)(a1 + v29) = v28;
        if (PBReaderPlaceMark() && AWDManagementFramesReadFrom((uint64_t)v28, a2))
        {
LABEL_44:
          PBReaderRecallMark();
LABEL_49:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_49;
    }
  }
}

uint64_t AWDWiFiMetricsManagerInfraInterfaceReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  AWDWiFiMetricsManagerStateMachine *v110;
  uint64_t v111;
  char v112;
  unsigned int v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 4u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_206;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_208;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_206:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_208:
        v127 = 24;
        goto LABEL_257;
      case 2u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 2u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_212;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_212:
        v127 = 16;
        goto LABEL_257;
      case 3u:
        v29 = 0;
        v30 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 0x100u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v19 |= (unint64_t)(v33 & 0x7F) << v29;
            if (v33 < 0)
            {
              v29 += 7;
              v14 = v30++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_216;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_216:
        v127 = 72;
        goto LABEL_257;
      case 4u:
        v34 = 0;
        v35 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 0x200u;
        while (2)
        {
          v36 = *v3;
          v37 = *(_QWORD *)(a2 + v36);
          if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
            *(_QWORD *)(a2 + v36) = v37 + 1;
            v19 |= (unint64_t)(v38 & 0x7F) << v34;
            if (v38 < 0)
            {
              v34 += 7;
              v14 = v35++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_220;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_220:
        v127 = 80;
        goto LABEL_257;
      case 5u:
        v39 = 0;
        v40 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 0x400u;
        while (2)
        {
          v41 = *v3;
          v42 = *(_QWORD *)(a2 + v41);
          if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
            *(_QWORD *)(a2 + v41) = v42 + 1;
            v19 |= (unint64_t)(v43 & 0x7F) << v39;
            if (v43 < 0)
            {
              v39 += 7;
              v14 = v40++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_224;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_224:
        v127 = 88;
        goto LABEL_257;
      case 6u:
        v44 = 0;
        v45 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 0x800u;
        while (2)
        {
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
            *(_QWORD *)(a2 + v46) = v47 + 1;
            v19 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              v14 = v45++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_228;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_228:
        v127 = 96;
        goto LABEL_257;
      case 7u:
        v49 = 0;
        v50 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 0x1000u;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
            *(_QWORD *)(a2 + v51) = v52 + 1;
            v19 |= (unint64_t)(v53 & 0x7F) << v49;
            if (v53 < 0)
            {
              v49 += 7;
              v14 = v50++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_232;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_232:
        v127 = 104;
        goto LABEL_257;
      case 8u:
        v54 = 0;
        v55 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 1u;
        while (2)
        {
          v56 = *v3;
          v57 = *(_QWORD *)(a2 + v56);
          if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
            *(_QWORD *)(a2 + v56) = v57 + 1;
            v19 |= (unint64_t)(v58 & 0x7F) << v54;
            if (v58 < 0)
            {
              v54 += 7;
              v14 = v55++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_236;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_236:
        v127 = 8;
        goto LABEL_257;
      case 9u:
        v59 = 0;
        v60 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 8u;
        while (2)
        {
          v61 = *v3;
          v62 = *(_QWORD *)(a2 + v61);
          if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
            *(_QWORD *)(a2 + v61) = v62 + 1;
            v19 |= (unint64_t)(v63 & 0x7F) << v59;
            if (v63 < 0)
            {
              v59 += 7;
              v14 = v60++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_240;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_240:
        v127 = 32;
        goto LABEL_257;
      case 0xAu:
        v64 = 0;
        v65 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 0x10u;
        while (2)
        {
          v66 = *v3;
          v67 = *(_QWORD *)(a2 + v66);
          if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
            *(_QWORD *)(a2 + v66) = v67 + 1;
            v19 |= (unint64_t)(v68 & 0x7F) << v64;
            if (v68 < 0)
            {
              v64 += 7;
              v14 = v65++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_244;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_244:
        v127 = 40;
        goto LABEL_257;
      case 0xBu:
        v69 = 0;
        v70 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 0x20u;
        while (2)
        {
          v71 = *v3;
          v72 = *(_QWORD *)(a2 + v71);
          if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
            *(_QWORD *)(a2 + v71) = v72 + 1;
            v19 |= (unint64_t)(v73 & 0x7F) << v69;
            if (v73 < 0)
            {
              v69 += 7;
              v14 = v70++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_248;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_248:
        v127 = 48;
        goto LABEL_257;
      case 0xCu:
        v74 = 0;
        v75 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 0x40u;
        while (2)
        {
          v76 = *v3;
          v77 = *(_QWORD *)(a2 + v76);
          if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
            *(_QWORD *)(a2 + v76) = v77 + 1;
            v19 |= (unint64_t)(v78 & 0x7F) << v74;
            if (v78 < 0)
            {
              v74 += 7;
              v14 = v75++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_252;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_252:
        v127 = 56;
        goto LABEL_257;
      case 0xDu:
        v79 = 0;
        v80 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 432) |= 0x80u;
        while (2)
        {
          v81 = *v3;
          v82 = *(_QWORD *)(a2 + v81);
          if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
            *(_QWORD *)(a2 + v81) = v82 + 1;
            v19 |= (unint64_t)(v83 & 0x7F) << v79;
            if (v83 < 0)
            {
              v79 += 7;
              v14 = v80++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_256:
        v127 = 64;
LABEL_257:
        *(_QWORD *)(a1 + v127) = v19;
        goto LABEL_291;
      case 0xEu:
        v84 = 0;
        v85 = 0;
        v86 = 0;
        *(_DWORD *)(a1 + 432) |= 0x80000u;
        while (2)
        {
          v87 = *v3;
          v88 = *(_QWORD *)(a2 + v87);
          if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
            *(_QWORD *)(a2 + v87) = v88 + 1;
            v86 |= (unint64_t)(v89 & 0x7F) << v84;
            if (v89 < 0)
            {
              v84 += 7;
              v14 = v85++ >= 9;
              if (v14)
              {
                LODWORD(v86) = 0;
                goto LABEL_261;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v86) = 0;
LABEL_261:
        v128 = 380;
        goto LABEL_290;
      case 0xFu:
        v90 = 0;
        v91 = 0;
        v86 = 0;
        *(_DWORD *)(a1 + 432) |= 0x10000u;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
            *(_QWORD *)(a2 + v92) = v93 + 1;
            v86 |= (unint64_t)(v94 & 0x7F) << v90;
            if (v94 < 0)
            {
              v90 += 7;
              v14 = v91++ >= 9;
              if (v14)
              {
                LODWORD(v86) = 0;
                goto LABEL_265;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v86) = 0;
LABEL_265:
        v128 = 240;
        goto LABEL_290;
      case 0x10u:
        v95 = 0;
        v96 = 0;
        v86 = 0;
        *(_DWORD *)(a1 + 432) |= 0x4000u;
        while (2)
        {
          v97 = *v3;
          v98 = *(_QWORD *)(a2 + v97);
          if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v98);
            *(_QWORD *)(a2 + v97) = v98 + 1;
            v86 |= (unint64_t)(v99 & 0x7F) << v95;
            if (v99 < 0)
            {
              v95 += 7;
              v14 = v96++ >= 9;
              if (v14)
              {
                LODWORD(v86) = 0;
                goto LABEL_269;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v86) = 0;
LABEL_269:
        v128 = 232;
        goto LABEL_290;
      case 0x11u:
        v100 = 0;
        v101 = 0;
        v86 = 0;
        *(_DWORD *)(a1 + 432) |= 0x8000u;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
            *(_QWORD *)(a2 + v102) = v103 + 1;
            v86 |= (unint64_t)(v104 & 0x7F) << v100;
            if (v104 < 0)
            {
              v100 += 7;
              v14 = v101++ >= 9;
              if (v14)
              {
                LODWORD(v86) = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v86) = 0;
LABEL_273:
        v128 = 236;
        goto LABEL_290;
      case 0x12u:
        v105 = 0;
        v106 = 0;
        v86 = 0;
        *(_DWORD *)(a1 + 432) |= 0x20000u;
        while (2)
        {
          v107 = *v3;
          v108 = *(_QWORD *)(a2 + v107);
          if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
            *(_QWORD *)(a2 + v107) = v108 + 1;
            v86 |= (unint64_t)(v109 & 0x7F) << v105;
            if (v109 < 0)
            {
              v105 += 7;
              v14 = v106++ >= 9;
              if (v14)
              {
                LODWORD(v86) = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v86) = 0;
LABEL_277:
        v128 = 296;
        goto LABEL_290;
      case 0x13u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 248;
        goto LABEL_202;
      case 0x14u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 288;
        goto LABEL_202;
      case 0x15u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 264;
        goto LABEL_202;
      case 0x16u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 272;
        goto LABEL_202;
      case 0x17u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 280;
        goto LABEL_202;
      case 0x18u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 256;
        goto LABEL_202;
      case 0x19u:
        v112 = 0;
        v113 = 0;
        v86 = 0;
        *(_DWORD *)(a1 + 432) |= 0x40000u;
        while (2)
        {
          v114 = *v3;
          v115 = *(_QWORD *)(a2 + v114);
          if (v115 == -1 || v115 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v115);
            *(_QWORD *)(a2 + v114) = v115 + 1;
            v86 |= (unint64_t)(v116 & 0x7F) << v112;
            if (v116 < 0)
            {
              v112 += 7;
              v14 = v113++ >= 9;
              if (v14)
              {
                LODWORD(v86) = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v86) = 0;
LABEL_281:
        v128 = 376;
        goto LABEL_290;
      case 0x1Au:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 304;
        goto LABEL_202;
      case 0x1Bu:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 320;
        goto LABEL_202;
      case 0x1Cu:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 328;
        goto LABEL_202;
      case 0x1Du:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 336;
        goto LABEL_202;
      case 0x1Eu:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 344;
        goto LABEL_202;
      case 0x1Fu:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 352;
        goto LABEL_202;
      case 0x20u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 360;
        goto LABEL_202;
      case 0x21u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 368;
        goto LABEL_202;
      case 0x22u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 312;
        goto LABEL_202;
      case 0x23u:
        v117 = 0;
        v118 = 0;
        v86 = 0;
        *(_DWORD *)(a1 + 432) |= 0x2000u;
        while (2)
        {
          v119 = *v3;
          v120 = *(_QWORD *)(a2 + v119);
          if (v120 == -1 || v120 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v120);
            *(_QWORD *)(a2 + v119) = v120 + 1;
            v86 |= (unint64_t)(v121 & 0x7F) << v117;
            if (v121 < 0)
            {
              v117 += 7;
              v14 = v118++ >= 9;
              if (v14)
              {
                LODWORD(v86) = 0;
                goto LABEL_285;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v86) = 0;
LABEL_285:
        v128 = 152;
        goto LABEL_290;
      case 0x24u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 160;
        goto LABEL_202;
      case 0x25u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 176;
        goto LABEL_202;
      case 0x26u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 184;
        goto LABEL_202;
      case 0x27u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 192;
        goto LABEL_202;
      case 0x28u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 200;
        goto LABEL_202;
      case 0x29u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 208;
        goto LABEL_202;
      case 0x2Au:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 216;
        goto LABEL_202;
      case 0x2Bu:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 224;
        goto LABEL_202;
      case 0x2Cu:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 168;
        goto LABEL_202;
      case 0x2Du:
        v122 = 0;
        v123 = 0;
        v86 = 0;
        *(_DWORD *)(a1 + 432) |= 0x100000u;
        while (2)
        {
          v124 = *v3;
          v125 = *(_QWORD *)(a2 + v124);
          if (v125 == -1 || v125 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v126 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v125);
            *(_QWORD *)(a2 + v124) = v125 + 1;
            v86 |= (unint64_t)(v126 & 0x7F) << v122;
            if (v126 < 0)
            {
              v122 += 7;
              v14 = v123++ >= 9;
              if (v14)
              {
                LODWORD(v86) = 0;
                goto LABEL_289;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v86) = 0;
LABEL_289:
        v128 = 384;
LABEL_290:
        *(_DWORD *)(a1 + v128) = v86;
        goto LABEL_291;
      case 0x2Eu:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 408;
        goto LABEL_202;
      case 0x2Fu:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 424;
        goto LABEL_202;
      case 0x30u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 392;
        goto LABEL_202;
      case 0x31u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 416;
        goto LABEL_202;
      case 0x32u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 400;
        goto LABEL_202;
      case 0x33u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 144;
        goto LABEL_202;
      case 0x34u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 112;
        goto LABEL_202;
      case 0x35u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 120;
        goto LABEL_202;
      case 0x36u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 136;
        goto LABEL_202;
      case 0x37u:
        v110 = objc_alloc_init(AWDWiFiMetricsManagerStateMachine);

        v111 = 128;
LABEL_202:
        *(_QWORD *)(a1 + v111) = v110;
        if (PBReaderPlaceMark()
          && (AWDWiFiMetricsManagerStateMachineReadFrom((uint64_t)v110, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_291:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_291;
    }
  }
}

uint64_t AWDWiFiMetricsManagerLastSSIDInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void *Data;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        Data = (void *)PBReaderReadData();

        v25 = Data;
        v26 = 24;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_34;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_36;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_36:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v27 = (void *)PBReaderReadData();

        v25 = v27;
        v26 = 16;
      }
      *(_QWORD *)(a1 + v26) = v25;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerLeakyAPStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *Data;
  id v30;
  uint64_t v31;
  void *v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_53;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_55;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_55:
          v44 = 16;
          goto LABEL_68;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 4u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_59:
          v44 = 24;
          goto LABEL_68;
        case 3u:
          Data = (void *)PBReaderReadData();

          v30 = Data;
          v31 = 48;
          goto LABEL_37;
        case 4u:
          v32 = (void *)PBReaderReadData();

          v30 = v32;
          v31 = 40;
LABEL_37:
          *(_QWORD *)(a1 + v31) = v30;
          continue;
        case 5u:
          v33 = 0;
          v34 = 0;
          v35 = 0;
          *(_BYTE *)(a1 + 56) |= 8u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v35 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                v14 = v34++ >= 9;
                if (v14)
                {
                  LODWORD(v35) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v35) = 0;
LABEL_63:
          *(_DWORD *)(a1 + 32) = v35;
          continue;
        case 6u:
          v39 = 0;
          v40 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v41 = *v3;
        v42 = *(_QWORD *)(a2 + v41);
        if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
          break;
        v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
        *(_QWORD *)(a2 + v41) = v42 + 1;
        v19 |= (unint64_t)(v43 & 0x7F) << v39;
        if ((v43 & 0x80) == 0)
          goto LABEL_65;
        v39 += 7;
        v14 = v40++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_67;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_65:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_67:
      v44 = 8;
LABEL_68:
      *(_QWORD *)(a1 + v44) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerLinkQualityStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDWifiLinkQualityRecord *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDWifiLinkQualityRecord);
        objc_msgSend((id)a1, "addStatRecord:", v23);

        if (!PBReaderPlaceMark() || (AWDWifiLinkQualityRecordReadFrom((uint64_t)v23, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerNetworkTransitionCumulativeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      v16 = v10 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        if (v16 == 2)
        {
          result = PBReaderPlaceMark();
          if (!(_DWORD)result)
            return result;
          while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
          {
            v26 = 0;
            v27 = 0;
            v28 = 0;
            while (1)
            {
              v29 = *v3;
              v30 = *(_QWORD *)(a2 + v29);
              if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
                break;
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (!v14)
                  continue;
              }
              goto LABEL_40;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v38 = 0;
          v39 = 0;
          v40 = 0;
          while (1)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
              break;
            v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
            *(_QWORD *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              v14 = v39++ >= 9;
              if (!v14)
                continue;
            }
            goto LABEL_67;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_67:
          PBRepeatedUInt32Add();
        }
      }
      else if ((_DWORD)v18 == 2)
      {
        v32 = 0;
        v33 = 0;
        v34 = 0;
        *(_BYTE *)(a1 + 44) |= 2u;
        while (1)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            break;
          v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
          *(_QWORD *)(a2 + v35) = v36 + 1;
          v34 |= (unint64_t)(v37 & 0x7F) << v32;
          if ((v37 & 0x80) == 0)
            goto LABEL_55;
          v32 += 7;
          v14 = v33++ >= 9;
          if (v14)
          {
            LODWORD(v34) = 0;
            goto LABEL_57;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_55:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v34) = 0;
LABEL_57:
        *(_DWORD *)(a1 + 40) = v34;
      }
      else if ((_DWORD)v18 == 1)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 44) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_51;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_53;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_51:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_53:
        *(_QWORD *)(a1 + 32) = v21;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerNetworkTransitionRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 76) |= 8u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_84;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_86;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_84:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_86:
              v61 = 56;
              goto LABEL_99;
            case 2u:
              v24 = 0;
              v25 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 76) |= 1u;
              while (2)
              {
                v26 = *v3;
                v27 = *(_QWORD *)(a2 + v26);
                if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
                  *(_QWORD *)(a2 + v26) = v27 + 1;
                  v20 |= (unint64_t)(v28 & 0x7F) << v24;
                  if (v28 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_90;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_90:
              v61 = 32;
              goto LABEL_99;
            case 3u:
              v29 = 0;
              v30 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 76) |= 2u;
              while (2)
              {
                v31 = *v3;
                v32 = *(_QWORD *)(a2 + v31);
                if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
                  *(_QWORD *)(a2 + v31) = v32 + 1;
                  v20 |= (unint64_t)(v33 & 0x7F) << v29;
                  if (v33 < 0)
                  {
                    v29 += 7;
                    v14 = v30++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_94;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_94:
              v61 = 40;
              goto LABEL_99;
            case 4u:
              v34 = 0;
              v35 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 76) |= 4u;
              while (2)
              {
                v36 = *v3;
                v37 = *(_QWORD *)(a2 + v36);
                if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
                  *(_QWORD *)(a2 + v36) = v37 + 1;
                  v20 |= (unint64_t)(v38 & 0x7F) << v34;
                  if (v38 < 0)
                  {
                    v34 += 7;
                    v14 = v35++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_98;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_98:
              v61 = 48;
LABEL_99:
              *(_QWORD *)(a1 + v61) = v20;
              goto LABEL_113;
            case 5u:
              v39 = 0;
              v40 = 0;
              v41 = 0;
              *(_BYTE *)(a1 + 76) |= 0x20u;
              while (2)
              {
                v42 = *v3;
                v43 = *(_QWORD *)(a2 + v42);
                if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
                  *(_QWORD *)(a2 + v42) = v43 + 1;
                  v41 |= (unint64_t)(v44 & 0x7F) << v39;
                  if (v44 < 0)
                  {
                    v39 += 7;
                    v14 = v40++ >= 9;
                    if (v14)
                    {
                      LODWORD(v41) = 0;
                      goto LABEL_103;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v41) = 0;
LABEL_103:
              v62 = 68;
              goto LABEL_112;
            case 6u:
              v45 = 0;
              v46 = 0;
              v41 = 0;
              *(_BYTE *)(a1 + 76) |= 0x10u;
              while (2)
              {
                v47 = *v3;
                v48 = *(_QWORD *)(a2 + v47);
                if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
                  *(_QWORD *)(a2 + v47) = v48 + 1;
                  v41 |= (unint64_t)(v49 & 0x7F) << v45;
                  if (v49 < 0)
                  {
                    v45 += 7;
                    v14 = v46++ >= 9;
                    if (v14)
                    {
                      LODWORD(v41) = 0;
                      goto LABEL_107;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v41) = 0;
LABEL_107:
              v62 = 64;
              goto LABEL_112;
            case 7u:
              v50 = 0;
              v51 = 0;
              v41 = 0;
              *(_BYTE *)(a1 + 76) |= 0x40u;
              while (2)
              {
                v52 = *v3;
                v53 = *(_QWORD *)(a2 + v52);
                if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
                  *(_QWORD *)(a2 + v52) = v53 + 1;
                  v41 |= (unint64_t)(v54 & 0x7F) << v50;
                  if (v54 < 0)
                  {
                    v50 += 7;
                    v14 = v51++ >= 9;
                    if (v14)
                    {
                      LODWORD(v41) = 0;
                      goto LABEL_111;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v41) = 0;
LABEL_111:
              v62 = 72;
LABEL_112:
              *(_DWORD *)(a1 + v62) = v41;
              goto LABEL_113;
            case 8u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v55 = 0;
                  v56 = 0;
                  v57 = 0;
                  while (1)
                  {
                    v58 = *v3;
                    v59 = *(_QWORD *)(a2 + v58);
                    if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
                    *(_QWORD *)(a2 + v58) = v59 + 1;
                    v57 |= (unint64_t)(v60 & 0x7F) << v55;
                    if (v60 < 0)
                    {
                      v55 += 7;
                      v14 = v56++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_82;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_82:
                  PBRepeatedUInt32Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                v63 = 0;
                v64 = 0;
                v65 = 0;
                while (1)
                {
                  v66 = *v3;
                  v67 = *(_QWORD *)(a2 + v66);
                  if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
                  *(_QWORD *)(a2 + v66) = v67 + 1;
                  v65 |= (unint64_t)(v68 & 0x7F) << v63;
                  if (v68 < 0)
                  {
                    v63 += 7;
                    v14 = v64++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_124;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_124:
                PBRepeatedUInt32Add();
              }
LABEL_113:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_113;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerNetworkTransitionSessionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDWiFiMetricsManagerNetworkTransitionRecord *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDWiFiMetricsManagerNetworkTransitionRecord);
        objc_msgSend((id)a1, "addRecords:", v23);

        if (!PBReaderPlaceMark()
          || (AWDWiFiMetricsManagerNetworkTransitionRecordReadFrom((uint64_t)v23, a2) & 1) == 0)
        {
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerOneStatsAssociationInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  AWDWiFiMetricsManagerChipCounters *v24;
  AWDWiFiMetricsManagerBTCoexStats *v25;
  AWDWiFiMetricsManagerBTCoexModeChange *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_40;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_42;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_42:
        *(_QWORD *)(a1 + 8) = v19;
        goto LABEL_43;
      case 2u:
        v24 = objc_alloc_init(AWDWiFiMetricsManagerChipCounters);

        *(_QWORD *)(a1 + 32) = v24;
        goto LABEL_36;
      case 3u:
        v25 = objc_alloc_init(AWDWiFiMetricsManagerBTCoexStats);

        *(_QWORD *)(a1 + 24) = v25;
        if (!PBReaderPlaceMark() || (AWDWiFiMetricsManagerBTCoexStatsReadFrom((uint64_t)v25, a2) & 1) == 0)
          return 0;
        goto LABEL_38;
      case 4u:
        v26 = objc_alloc_init(AWDWiFiMetricsManagerBTCoexModeChange);

        *(_QWORD *)(a1 + 16) = v26;
        if (!PBReaderPlaceMark()
          || (AWDWiFiMetricsManagerBTCoexModeChangeReadFrom((uint64_t)v26, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_38;
      case 5u:
        v24 = objc_alloc_init(AWDWiFiMetricsManagerChipCounters);
        objc_msgSend((id)a1, "addChipCountersPerSlice:", v24);

LABEL_36:
        if (PBReaderPlaceMark() && (AWDWiFiMetricsManagerChipCountersReadFrom((uint64_t)v24, a2) & 1) != 0)
        {
LABEL_38:
          PBReaderRecallMark();
LABEL_43:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_43;
    }
  }
}

uint64_t AWDWiFiMetricsManagerP2pLegacyUsageReportReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 44) |= 4u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_57;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_59;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_57:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_59:
          v45 = 24;
          goto LABEL_76;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 44) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_63:
          *(_DWORD *)(a1 + 40) = v26;
          continue;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 44) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v19 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_67:
          v45 = 32;
          goto LABEL_76;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v19 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_71:
          v45 = 8;
          goto LABEL_76;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 44) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v42 = *v3;
        v43 = *(_QWORD *)(a2 + v42);
        if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
        *(_QWORD *)(a2 + v42) = v43 + 1;
        v19 |= (unint64_t)(v44 & 0x7F) << v40;
        if ((v44 & 0x80) == 0)
          goto LABEL_73;
        v40 += 7;
        v14 = v41++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_75;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_73:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_75:
      v45 = 16;
LABEL_76:
      *(_QWORD *)(a1 + v45) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerPowerStatsUpdateEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_64;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_66;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_66:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_70:
          v50 = 28;
          goto LABEL_87;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 0x20u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_74:
          v50 = 32;
          goto LABEL_87;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_78:
          v50 = 16;
          goto LABEL_87;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_82:
          v50 = 20;
          goto LABEL_87;
        case 6u:
          v45 = 0;
          v46 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v47 = *v3;
        v48 = *(_QWORD *)(a2 + v47);
        if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          break;
        v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
        *(_QWORD *)(a2 + v47) = v48 + 1;
        v26 |= (unint64_t)(v49 & 0x7F) << v45;
        if ((v49 & 0x80) == 0)
          goto LABEL_84;
        v45 += 7;
        v14 = v46++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_86;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_84:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_86:
      v50 = 24;
LABEL_87:
      *(_DWORD *)(a1 + v50) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerPowerStickinessReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_51:
        v36 = 20;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_45;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_47;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_47:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v30 = 0;
        v31 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            break;
          v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
          *(_QWORD *)(a2 + v32) = v33 + 1;
          v26 |= (unint64_t)(v34 & 0x7F) << v30;
          if ((v34 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_55:
        v36 = 16;
      }
      *(_DWORD *)(a1 + v36) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerRCU1CoexModeChangeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  int *v35;
  int *v36;
  int *v37;
  int *v38;
  int *v39;
  uint64_t v40;
  uint64_t result;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v11 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v12 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v13 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v14 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v15 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v16 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v17 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v18 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v19 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          break;
        v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v24);
        *(_QWORD *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0)
          goto LABEL_12;
        v20 += 7;
        v26 = v21++ >= 9;
        if (v26)
        {
          v22 = 0;
          v27 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v27 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v22 = 0;
LABEL_14:
      if (v27 || (v22 & 7) == 4)
        break;
      switch((v22 >> 3))
      {
        case 1u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_WORD *)(a1 + v7[618]) |= 0x10u;
          while (1)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
              break;
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v31 |= (unint64_t)(v34 & 0x7F) << v29;
            if ((v34 & 0x80) == 0)
              goto LABEL_99;
            v29 += 7;
            v26 = v30++ >= 9;
            if (v26)
            {
              v31 = 0;
              goto LABEL_101;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_99:
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_101:
          v95 = v8[619];
          goto LABEL_139;
        case 2u:
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_WORD *)(a1 + v7[618]) |= 0x20u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                v26 = v43++ >= 9;
                if (v26)
                {
                  LODWORD(v44) = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v44) = 0;
LABEL_105:
          v96 = v10[620];
          goto LABEL_144;
        case 3u:
          v48 = 0;
          v49 = 0;
          v44 = 0;
          *(_WORD *)(a1 + v7[618]) |= 0x100u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v44 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v26 = v49++ >= 9;
                if (v26)
                {
                  LODWORD(v44) = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v44) = 0;
LABEL_109:
          v96 = v11[621];
          goto LABEL_144;
        case 4u:
          v53 = 0;
          v54 = 0;
          v44 = 0;
          *(_WORD *)(a1 + v7[618]) |= 0x80u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v44 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                v26 = v54++ >= 9;
                if (v26)
                {
                  LODWORD(v44) = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v44) = 0;
LABEL_113:
          v96 = v12[622];
          goto LABEL_144;
        case 5u:
          v58 = 0;
          v59 = 0;
          v60 = 0;
          *(_WORD *)(a1 + v7[618]) |= 0x400u;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v60 |= (unint64_t)(v63 & 0x7F) << v58;
              if (v63 < 0)
              {
                v58 += 7;
                v26 = v59++ >= 9;
                if (v26)
                {
                  v60 = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v60 = 0;
LABEL_117:
          v97 = v60 != 0;
          v98 = v13[623];
          goto LABEL_122;
        case 6u:
          v64 = 0;
          v65 = 0;
          v66 = 0;
          *(_WORD *)(a1 + v7[618]) |= 0x200u;
          while (2)
          {
            v67 = *v3;
            v68 = *(_QWORD *)(a2 + v67);
            if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v68);
              *(_QWORD *)(a2 + v67) = v68 + 1;
              v66 |= (unint64_t)(v69 & 0x7F) << v64;
              if (v69 < 0)
              {
                v64 += 7;
                v26 = v65++ >= 9;
                if (v26)
                {
                  v66 = 0;
                  goto LABEL_121;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v66 = 0;
LABEL_121:
          v97 = v66 != 0;
          v98 = v14[624];
LABEL_122:
          *(_BYTE *)(a1 + v98) = v97;
          continue;
        case 7u:
          v70 = 0;
          v71 = 0;
          v31 = 0;
          *(_WORD *)(a1 + v7[618]) |= 4u;
          while (2)
          {
            v72 = *v3;
            v73 = *(_QWORD *)(a2 + v72);
            if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v73);
              *(_QWORD *)(a2 + v72) = v73 + 1;
              v31 |= (unint64_t)(v74 & 0x7F) << v70;
              if (v74 < 0)
              {
                v70 += 7;
                v26 = v71++ >= 9;
                if (v26)
                {
                  v31 = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_126:
          v95 = v15[625];
          goto LABEL_139;
        case 8u:
          v75 = 0;
          v76 = 0;
          v31 = 0;
          *(_WORD *)(a1 + v7[618]) |= 2u;
          while (2)
          {
            v77 = *v3;
            v78 = *(_QWORD *)(a2 + v77);
            if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v78);
              *(_QWORD *)(a2 + v77) = v78 + 1;
              v31 |= (unint64_t)(v79 & 0x7F) << v75;
              if (v79 < 0)
              {
                v75 += 7;
                v26 = v76++ >= 9;
                if (v26)
                {
                  v31 = 0;
                  goto LABEL_130;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_130:
          v95 = v16[626];
          goto LABEL_139;
        case 9u:
          v80 = 0;
          v81 = 0;
          v31 = 0;
          *(_WORD *)(a1 + v7[618]) |= 1u;
          while (2)
          {
            v82 = *v3;
            v83 = *(_QWORD *)(a2 + v82);
            if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v83);
              *(_QWORD *)(a2 + v82) = v83 + 1;
              v31 |= (unint64_t)(v84 & 0x7F) << v80;
              if (v84 < 0)
              {
                v80 += 7;
                v26 = v81++ >= 9;
                if (v26)
                {
                  v31 = 0;
                  goto LABEL_134;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_134:
          v95 = v17[627];
          goto LABEL_139;
        case 0xAu:
          v85 = 0;
          v86 = 0;
          v31 = 0;
          *(_WORD *)(a1 + v7[618]) |= 8u;
          while (2)
          {
            v87 = *v3;
            v88 = *(_QWORD *)(a2 + v87);
            if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v88);
              *(_QWORD *)(a2 + v87) = v88 + 1;
              v31 |= (unint64_t)(v89 & 0x7F) << v85;
              if (v89 < 0)
              {
                v85 += 7;
                v26 = v86++ >= 9;
                if (v26)
                {
                  v31 = 0;
                  goto LABEL_138;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_138:
          v95 = v18[628];
LABEL_139:
          *(_QWORD *)(a1 + v95) = v31;
          continue;
        case 0xBu:
          v90 = 0;
          v91 = 0;
          v44 = 0;
          *(_WORD *)(a1 + v7[618]) |= 0x40u;
          break;
        default:
          v35 = v8;
          v36 = v10;
          v37 = v7;
          v38 = v11;
          v39 = v12;
          v40 = a1;
          result = PBReaderSkipValueWithTag();
          v13 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          a1 = v40;
          v14 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v39;
          v15 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v11 = v38;
          v16 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v7 = v37;
          v19 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v10 = v36;
          v17 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v8 = v35;
          v18 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v92 = *v3;
        v93 = *(_QWORD *)(a2 + v92);
        if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          break;
        v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v93);
        *(_QWORD *)(a2 + v92) = v93 + 1;
        v44 |= (unint64_t)(v94 & 0x7F) << v90;
        if ((v94 & 0x80) == 0)
          goto LABEL_141;
        v90 += 7;
        v26 = v91++ >= 9;
        if (v26)
        {
          LODWORD(v44) = 0;
          goto LABEL_143;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_141:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v44) = 0;
LABEL_143:
      v96 = v19[629];
LABEL_144:
      *(_DWORD *)(a1 + v96) = v44;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerRangingReportReadFrom(char *a1, uint64_t a2)
{
  __int16 *v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  char v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  BOOL v18;
  int v19;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  __int16 *v27;
  int *v28;
  int *v29;
  int *v30;
  uint64_t result;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  int *v108;
  char *v109;
  AWDWiFiRangingRttData *v110;
  char *v111;
  char v112;
  unsigned int v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t v117;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  v9 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  v10 = (int *)MEMORY[0x24BE7AF30];
  v11 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    while (1)
    {
      v15 = *v4;
      v16 = *(_QWORD *)(a2 + v15);
      if (v16 == -1 || v16 >= *(_QWORD *)(a2 + *v5))
        break;
      v17 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v16);
      *(_QWORD *)(a2 + v15) = v16 + 1;
      v14 |= (unint64_t)(v17 & 0x7F) << v12;
      if ((v17 & 0x80) == 0)
        goto LABEL_12;
      v12 += 7;
      v18 = v13++ >= 9;
      if (v18)
      {
        v14 = 0;
        v19 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v19 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v14 = 0;
LABEL_14:
    if (v19 || (v14 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v14 >> 3))
    {
      case 1u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_DWORD *)&a1[v8[630]] |= 1u;
        while (1)
        {
          v24 = *v4;
          v25 = *(_QWORD *)(a2 + v24);
          if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v5))
            break;
          v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v25);
          *(_QWORD *)(a2 + v24) = v25 + 1;
          v23 |= (unint64_t)(v26 & 0x7F) << v21;
          if ((v26 & 0x80) == 0)
            goto LABEL_144;
          v21 += 7;
          v18 = v22++ >= 9;
          if (v18)
          {
            v23 = 0;
            goto LABEL_146;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_144:
        if (*(_BYTE *)(a2 + *v6))
          v23 = 0;
LABEL_146:
        *(_QWORD *)&a1[v9[631]] = v23;
        goto LABEL_212;
      case 2u:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x4000u;
        while (2)
        {
          v35 = *v4;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v18 = v33++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_150:
        v117 = v11[632];
        goto LABEL_211;
      case 3u:
        v38 = 0;
        v39 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x8000u;
        while (2)
        {
          v40 = *v4;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v34 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              v18 = v39++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_154;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_154:
        v117 = 80;
        goto LABEL_211;
      case 4u:
        v43 = 0;
        v44 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x2000u;
        while (2)
        {
          v45 = *v4;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v34 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v18 = v44++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_158:
        v117 = 72;
        goto LABEL_211;
      case 5u:
        v48 = 0;
        v49 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x10u;
        while (2)
        {
          v50 = *v4;
          v51 = *(_QWORD *)(a2 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v34 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v18 = v49++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_162:
        v117 = 28;
        goto LABEL_211;
      case 6u:
        v53 = 0;
        v54 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x20u;
        while (2)
        {
          v55 = *v4;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v34 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v18 = v54++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_166;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_166:
        v117 = 32;
        goto LABEL_211;
      case 7u:
        v58 = 0;
        v59 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 8u;
        while (2)
        {
          v60 = *v4;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v34 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              v18 = v59++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_170:
        v117 = 24;
        goto LABEL_211;
      case 8u:
        v63 = 0;
        v64 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x40u;
        while (2)
        {
          v65 = *v4;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v34 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              v18 = v64++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_174:
        v117 = 36;
        goto LABEL_211;
      case 9u:
        v68 = 0;
        v69 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x100u;
        while (2)
        {
          v70 = *v4;
          v71 = *(_QWORD *)(a2 + v70);
          if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v34 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              v18 = v69++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_178:
        v117 = 44;
        goto LABEL_211;
      case 0xAu:
        v73 = 0;
        v74 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x80u;
        while (2)
        {
          v75 = *v4;
          v76 = *(_QWORD *)(a2 + v75);
          if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v34 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v73 += 7;
              v18 = v74++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_182:
        v117 = 40;
        goto LABEL_211;
      case 0xBu:
        v78 = 0;
        v79 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x800u;
        while (2)
        {
          v80 = *v4;
          v81 = *(_QWORD *)(a2 + v80);
          if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v34 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v78 += 7;
              v18 = v79++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_186:
        v117 = 56;
        goto LABEL_211;
      case 0xCu:
        v83 = 0;
        v84 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x1000u;
        while (2)
        {
          v85 = *v4;
          v86 = *(_QWORD *)(a2 + v85);
          if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v34 |= (unint64_t)(v87 & 0x7F) << v83;
            if (v87 < 0)
            {
              v83 += 7;
              v18 = v84++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_190:
        v117 = 60;
        goto LABEL_211;
      case 0xDu:
        v88 = 0;
        v89 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x10000u;
        while (2)
        {
          v90 = *v4;
          v91 = *(_QWORD *)(a2 + v90);
          if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v91);
            *(_QWORD *)(a2 + v90) = v91 + 1;
            v34 |= (unint64_t)(v92 & 0x7F) << v88;
            if (v92 < 0)
            {
              v88 += 7;
              v18 = v89++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_194:
        v117 = 84;
        goto LABEL_211;
      case 0xEu:
        v93 = 0;
        v94 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 4u;
        while (2)
        {
          v95 = *v4;
          v96 = *(_QWORD *)(a2 + v95);
          if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v34 |= (unint64_t)(v97 & 0x7F) << v93;
            if (v97 < 0)
            {
              v93 += 7;
              v18 = v94++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_198;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_198:
        v117 = 20;
        goto LABEL_211;
      case 0xFu:
        v98 = 0;
        v99 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 2u;
        while (2)
        {
          v100 = *v4;
          v101 = *(_QWORD *)(a2 + v100);
          if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v101);
            *(_QWORD *)(a2 + v100) = v101 + 1;
            v34 |= (unint64_t)(v102 & 0x7F) << v98;
            if (v102 < 0)
            {
              v98 += 7;
              v18 = v99++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_202:
        v117 = 16;
        goto LABEL_211;
      case 0x10u:
        v103 = 0;
        v104 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x400u;
        while (2)
        {
          v105 = *v4;
          v106 = *(_QWORD *)(a2 + v105);
          if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v106);
            *(_QWORD *)(a2 + v105) = v106 + 1;
            v34 |= (unint64_t)(v107 & 0x7F) << v103;
            if (v107 < 0)
            {
              v103 += 7;
              v18 = v104++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_206:
        v117 = 52;
        goto LABEL_211;
      case 0x11u:
        v108 = v11;
        v109 = a1;
        v110 = objc_alloc_init(AWDWiFiRangingRttData);
        v111 = v109;
        objc_msgSend(v109, "addRttSamples:", v110);

        if (PBReaderPlaceMark() && AWDWiFiRangingRttDataReadFrom((uint64_t)v110, a2))
        {
          PBReaderRecallMark();
          v11 = v108;
          v2 = &jpt_20939EAF0;
          v6 = (int *)MEMORY[0x24BE7AF48];
          a1 = v111;
LABEL_212:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
        return 0;
      case 0x12u:
        v112 = 0;
        v113 = 0;
        v34 = 0;
        *(_DWORD *)&a1[v8[630]] |= 0x200u;
        while (2)
        {
          v114 = *v4;
          v115 = *(_QWORD *)(a2 + v114);
          if (v115 == -1 || v115 >= *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v115);
            *(_QWORD *)(a2 + v114) = v115 + 1;
            v34 |= (unint64_t)(v116 & 0x7F) << v112;
            if (v116 < 0)
            {
              v112 += 7;
              v18 = v113++ >= 9;
              if (v18)
              {
                LODWORD(v34) = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          LODWORD(v34) = 0;
LABEL_210:
        v117 = 48;
LABEL_211:
        *(_DWORD *)&a1[v117] = v34;
        goto LABEL_212;
      default:
        v27 = v2;
        v28 = v8;
        v29 = v9;
        v30 = v11;
        result = PBReaderSkipValueWithTag();
        v11 = v30;
        v9 = v29;
        v8 = v28;
        v2 = v27;
        if (!(_DWORD)result)
          return result;
        goto LABEL_212;
    }
  }
}

