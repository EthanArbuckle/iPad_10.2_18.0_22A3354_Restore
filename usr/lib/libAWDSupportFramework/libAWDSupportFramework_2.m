uint64_t AWDWiFiMetricsManagerRoamStatusReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  void *Data;
  id v61;
  uint64_t v62;
  void *v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  unsigned int v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  char v171;
  unsigned int v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  char v176;
  unsigned int v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  BOOL v183;
  uint64_t v184;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 164) |= 0x10u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_242;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_244;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_242:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_244:
          v181 = 40;
          goto LABEL_342;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x800u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_248;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_248:
          v182 = 72;
          goto LABEL_367;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x80000u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_252;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_252:
          v182 = 112;
          goto LABEL_367;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x400000u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_256;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_256:
          v182 = 124;
          goto LABEL_367;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x800000u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_260;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_260:
          v182 = 128;
          goto LABEL_367;
        case 6u:
          v45 = 0;
          v46 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x100000u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v26 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_264;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_264:
          v182 = 116;
          goto LABEL_367;
        case 7u:
          v50 = 0;
          v51 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x40000u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v26 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_268;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_268:
          v182 = 108;
          goto LABEL_367;
        case 8u:
          v55 = 0;
          v56 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x10000000u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v26 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_272;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_272:
          v182 = 156;
          goto LABEL_367;
        case 9u:
          Data = (void *)PBReaderReadData();

          v61 = Data;
          v62 = 96;
          goto LABEL_79;
        case 0xAu:
          v63 = (void *)PBReaderReadData();

          v61 = v63;
          v62 = 144;
LABEL_79:
          *(_QWORD *)(a1 + v62) = v61;
          continue;
        case 0xBu:
          v64 = 0;
          v65 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x200u;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v26 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                v14 = v65++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_276;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_276:
          v182 = 64;
          goto LABEL_367;
        case 0xCu:
          v69 = 0;
          v70 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x8000u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v26 |= (unint64_t)(v73 & 0x7F) << v69;
              if (v73 < 0)
              {
                v69 += 7;
                v14 = v70++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_280;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_280:
          v182 = 88;
          goto LABEL_367;
        case 0xDu:
          v74 = 0;
          v75 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x2000000u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v26 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v14 = v75++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_284;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_284:
          v182 = 136;
          goto LABEL_367;
        case 0xEu:
          v79 = 0;
          v80 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x100u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v26 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v14 = v80++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_288;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_288:
          v182 = 60;
          goto LABEL_367;
        case 0xFu:
          v84 = 0;
          v85 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x80u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v26 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v14 = v85++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_292;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_292:
          v182 = 56;
          goto LABEL_367;
        case 0x10u:
          v89 = 0;
          v90 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x40u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v26 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v14 = v90++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_296;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_296:
          v182 = 52;
          goto LABEL_367;
        case 0x11u:
          v94 = 0;
          v95 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x20u;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v97);
              *(_QWORD *)(a2 + v96) = v97 + 1;
              v26 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                v14 = v95++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_300;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_300:
          v182 = 48;
          goto LABEL_367;
        case 0x12u:
          v99 = 0;
          v100 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 164) |= 8u;
          while (2)
          {
            v101 = *v3;
            v102 = *(_QWORD *)(a2 + v101);
            if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v102);
              *(_QWORD *)(a2 + v101) = v102 + 1;
              v19 |= (unint64_t)(v103 & 0x7F) << v99;
              if (v103 < 0)
              {
                v99 += 7;
                v14 = v100++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_304;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_304:
          v181 = 32;
          goto LABEL_342;
        case 0x13u:
          v104 = 0;
          v105 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x2000u;
          while (2)
          {
            v106 = *v3;
            v107 = *(_QWORD *)(a2 + v106);
            if (v107 == -1 || v107 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
              *(_QWORD *)(a2 + v106) = v107 + 1;
              v26 |= (unint64_t)(v108 & 0x7F) << v104;
              if (v108 < 0)
              {
                v104 += 7;
                v14 = v105++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_308;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_308:
          v182 = 80;
          goto LABEL_367;
        case 0x14u:
          v109 = 0;
          v110 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x200000u;
          while (2)
          {
            v111 = *v3;
            v112 = *(_QWORD *)(a2 + v111);
            if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
              *(_QWORD *)(a2 + v111) = v112 + 1;
              v26 |= (unint64_t)(v113 & 0x7F) << v109;
              if (v113 < 0)
              {
                v109 += 7;
                v14 = v110++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_312;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_312:
          v182 = 120;
          goto LABEL_367;
        case 0x15u:
          v114 = 0;
          v115 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 164) |= 1u;
          while (2)
          {
            v116 = *v3;
            v117 = *(_QWORD *)(a2 + v116);
            if (v117 == -1 || v117 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v118 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v117);
              *(_QWORD *)(a2 + v116) = v117 + 1;
              v19 |= (unint64_t)(v118 & 0x7F) << v114;
              if (v118 < 0)
              {
                v114 += 7;
                v14 = v115++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_316;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_316:
          v181 = 8;
          goto LABEL_342;
        case 0x16u:
          v119 = 0;
          v120 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x400u;
          while (2)
          {
            v121 = *v3;
            v122 = *(_QWORD *)(a2 + v121);
            if (v122 == -1 || v122 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v122);
              *(_QWORD *)(a2 + v121) = v122 + 1;
              v26 |= (unint64_t)(v123 & 0x7F) << v119;
              if (v123 < 0)
              {
                v119 += 7;
                v14 = v120++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_320;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_320:
          v182 = 68;
          goto LABEL_367;
        case 0x17u:
          v124 = 0;
          v125 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x1000u;
          while (2)
          {
            v126 = *v3;
            v127 = *(_QWORD *)(a2 + v126);
            if (v127 == -1 || v127 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v128 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
              *(_QWORD *)(a2 + v126) = v127 + 1;
              v26 |= (unint64_t)(v128 & 0x7F) << v124;
              if (v128 < 0)
              {
                v124 += 7;
                v14 = v125++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_324;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_324:
          v182 = 76;
          goto LABEL_367;
        case 0x18u:
          v129 = 0;
          v130 = 0;
          v131 = 0;
          *(_DWORD *)(a1 + 164) |= 0x40000000u;
          while (2)
          {
            v132 = *v3;
            v133 = *(_QWORD *)(a2 + v132);
            if (v133 == -1 || v133 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v134 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v133);
              *(_QWORD *)(a2 + v132) = v133 + 1;
              v131 |= (unint64_t)(v134 & 0x7F) << v129;
              if (v134 < 0)
              {
                v129 += 7;
                v14 = v130++ >= 9;
                if (v14)
                {
                  v131 = 0;
                  goto LABEL_328;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v131 = 0;
LABEL_328:
          v183 = v131 != 0;
          v184 = 161;
          goto LABEL_333;
        case 0x19u:
          v135 = 0;
          v136 = 0;
          v137 = 0;
          *(_DWORD *)(a1 + 164) |= 0x20000000u;
          while (2)
          {
            v138 = *v3;
            v139 = *(_QWORD *)(a2 + v138);
            if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
              *(_QWORD *)(a2 + v138) = v139 + 1;
              v137 |= (unint64_t)(v140 & 0x7F) << v135;
              if (v140 < 0)
              {
                v135 += 7;
                v14 = v136++ >= 9;
                if (v14)
                {
                  v137 = 0;
                  goto LABEL_332;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v137 = 0;
LABEL_332:
          v183 = v137 != 0;
          v184 = 160;
LABEL_333:
          *(_BYTE *)(a1 + v184) = v183;
          continue;
        case 0x1Au:
          v141 = 0;
          v142 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 164) |= 2u;
          while (2)
          {
            v143 = *v3;
            v144 = *(_QWORD *)(a2 + v143);
            if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
              *(_QWORD *)(a2 + v143) = v144 + 1;
              v19 |= (unint64_t)(v145 & 0x7F) << v141;
              if (v145 < 0)
              {
                v141 += 7;
                v14 = v142++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_337;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_337:
          v181 = 16;
          goto LABEL_342;
        case 0x1Bu:
          v146 = 0;
          v147 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 164) |= 4u;
          while (2)
          {
            v148 = *v3;
            v149 = *(_QWORD *)(a2 + v148);
            if (v149 == -1 || v149 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
              *(_QWORD *)(a2 + v148) = v149 + 1;
              v19 |= (unint64_t)(v150 & 0x7F) << v146;
              if (v150 < 0)
              {
                v146 += 7;
                v14 = v147++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_341;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_341:
          v181 = 24;
LABEL_342:
          *(_QWORD *)(a1 + v181) = v19;
          continue;
        case 0x1Cu:
          v151 = 0;
          v152 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x10000u;
          while (2)
          {
            v153 = *v3;
            v154 = *(_QWORD *)(a2 + v153);
            if (v154 == -1 || v154 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
              *(_QWORD *)(a2 + v153) = v154 + 1;
              v26 |= (unint64_t)(v155 & 0x7F) << v151;
              if (v155 < 0)
              {
                v151 += 7;
                v14 = v152++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_346;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_346:
          v182 = 92;
          goto LABEL_367;
        case 0x1Du:
          v156 = 0;
          v157 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x4000000u;
          while (2)
          {
            v158 = *v3;
            v159 = *(_QWORD *)(a2 + v158);
            if (v159 == -1 || v159 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v160 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v159);
              *(_QWORD *)(a2 + v158) = v159 + 1;
              v26 |= (unint64_t)(v160 & 0x7F) << v156;
              if (v160 < 0)
              {
                v156 += 7;
                v14 = v157++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_350;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_350:
          v182 = 140;
          goto LABEL_367;
        case 0x1Eu:
          v161 = 0;
          v162 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x4000u;
          while (2)
          {
            v163 = *v3;
            v164 = *(_QWORD *)(a2 + v163);
            if (v164 == -1 || v164 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v165 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v164);
              *(_QWORD *)(a2 + v163) = v164 + 1;
              v26 |= (unint64_t)(v165 & 0x7F) << v161;
              if (v165 < 0)
              {
                v161 += 7;
                v14 = v162++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_354;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_354:
          v182 = 84;
          goto LABEL_367;
        case 0x1Fu:
          v166 = 0;
          v167 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x1000000u;
          while (2)
          {
            v168 = *v3;
            v169 = *(_QWORD *)(a2 + v168);
            if (v169 == -1 || v169 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v170 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v169);
              *(_QWORD *)(a2 + v168) = v169 + 1;
              v26 |= (unint64_t)(v170 & 0x7F) << v166;
              if (v170 < 0)
              {
                v166 += 7;
                v14 = v167++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_358;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_358:
          v182 = 132;
          goto LABEL_367;
        case 0x20u:
          v171 = 0;
          v172 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x20000u;
          while (2)
          {
            v173 = *v3;
            v174 = *(_QWORD *)(a2 + v173);
            if (v174 == -1 || v174 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v175 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v174);
              *(_QWORD *)(a2 + v173) = v174 + 1;
              v26 |= (unint64_t)(v175 & 0x7F) << v171;
              if (v175 < 0)
              {
                v171 += 7;
                v14 = v172++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_362;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_362:
          v182 = 104;
          goto LABEL_367;
        case 0x21u:
          v176 = 0;
          v177 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 164) |= 0x8000000u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v178 = *v3;
        v179 = *(_QWORD *)(a2 + v178);
        if (v179 == -1 || v179 >= *(_QWORD *)(a2 + *v4))
          break;
        v180 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v179);
        *(_QWORD *)(a2 + v178) = v179 + 1;
        v26 |= (unint64_t)(v180 & 0x7F) << v176;
        if ((v180 & 0x80) == 0)
          goto LABEL_364;
        v176 += 7;
        v14 = v177++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_366;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_364:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_366:
      v182 = 152;
LABEL_367:
      *(_DWORD *)(a1 + v182) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerSoftErrorReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void *String;
  id v71;
  uint64_t v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  void *Data;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  AWDWiFiMetricsManagerChipCounters *v101;
  AWDWiFiMetricsManagerBTCoexStats *v102;
  AWDWiFiMetricsManagerBTCoexModeChange *v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  AWDWiFiMetricsManagerChipCounters *v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 136) |= 4u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_149;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_151;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_149:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_151:
        v110 = 24;
        goto LABEL_164;
      case 2u:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 0x2000u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_155:
        v111 = 128;
        goto LABEL_214;
      case 3u:
        v30 = 0;
        v31 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 136) |= 1u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_159:
        v110 = 8;
        goto LABEL_164;
      case 4u:
        v35 = 0;
        v36 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 136) |= 2u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_163:
        v110 = 16;
LABEL_164:
        *(_QWORD *)(a1 + v110) = v19;
        goto LABEL_215;
      case 5u:
        v40 = 0;
        v41 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 0x100u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v26 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_168:
        v111 = 108;
        goto LABEL_214;
      case 6u:
        v45 = 0;
        v46 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 0x800u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v26 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_172:
        v111 = 120;
        goto LABEL_214;
      case 7u:
        v50 = 0;
        v51 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 0x80u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v26 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_176:
        v111 = 104;
        goto LABEL_214;
      case 8u:
        v55 = 0;
        v56 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 0x400u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v26 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              v14 = v56++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_180:
        v111 = 116;
        goto LABEL_214;
      case 9u:
        v60 = 0;
        v61 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 0x200u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v26 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_184:
        v111 = 112;
        goto LABEL_214;
      case 0xAu:
        v65 = 0;
        v66 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 0x1000u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v26 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_188:
        v111 = 124;
        goto LABEL_214;
      case 0xBu:
        String = (void *)PBReaderReadString();

        v71 = String;
        v72 = 40;
        goto LABEL_114;
      case 0xCu:
        v73 = 0;
        v74 = 0;
        v75 = 0;
        *(_WORD *)(a1 + 136) |= 0x4000u;
        while (2)
        {
          v76 = *v3;
          v77 = *(_QWORD *)(a2 + v76);
          if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
            *(_QWORD *)(a2 + v76) = v77 + 1;
            v75 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              v14 = v74++ >= 9;
              if (v14)
              {
                v75 = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v75 = 0;
LABEL_192:
        v112 = v75 != 0;
        v113 = 132;
        goto LABEL_209;
      case 0xDu:
        v79 = 0;
        v80 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 0x40u;
        while (2)
        {
          v81 = *v3;
          v82 = *(_QWORD *)(a2 + v81);
          if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
            *(_QWORD *)(a2 + v81) = v82 + 1;
            v26 |= (unint64_t)(v83 & 0x7F) << v79;
            if (v83 < 0)
            {
              v79 += 7;
              v14 = v80++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_196:
        v111 = 100;
        goto LABEL_214;
      case 0xEu:
        v84 = 0;
        v85 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 0x10u;
        while (2)
        {
          v86 = *v3;
          v87 = *(_QWORD *)(a2 + v86);
          if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
            *(_QWORD *)(a2 + v86) = v87 + 1;
            v26 |= (unint64_t)(v88 & 0x7F) << v84;
            if (v88 < 0)
            {
              v84 += 7;
              v14 = v85++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_200;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_200:
        v111 = 72;
        goto LABEL_214;
      case 0xFu:
        Data = (void *)PBReaderReadData();

        v71 = Data;
        v72 = 32;
LABEL_114:
        *(_QWORD *)(a1 + v72) = v71;
        goto LABEL_215;
      case 0x10u:
        v90 = 0;
        v91 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 8u;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
            *(_QWORD *)(a2 + v92) = v93 + 1;
            v26 |= (unint64_t)(v94 & 0x7F) << v90;
            if (v94 < 0)
            {
              v90 += 7;
              v14 = v91++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_204;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_204:
        v111 = 48;
        goto LABEL_214;
      case 0x11u:
        v95 = 0;
        v96 = 0;
        v97 = 0;
        *(_WORD *)(a1 + 136) |= 0x8000u;
        while (2)
        {
          v98 = *v3;
          v99 = *(_QWORD *)(a2 + v98);
          if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
            *(_QWORD *)(a2 + v98) = v99 + 1;
            v97 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              v14 = v96++ >= 9;
              if (v14)
              {
                v97 = 0;
                goto LABEL_208;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v97 = 0;
LABEL_208:
        v112 = v97 != 0;
        v113 = 133;
LABEL_209:
        *(_BYTE *)(a1 + v113) = v112;
        goto LABEL_215;
      case 0x12u:
        v101 = objc_alloc_init(AWDWiFiMetricsManagerChipCounters);

        *(_QWORD *)(a1 + 80) = v101;
        if (!PBReaderPlaceMark()
          || (AWDWiFiMetricsManagerChipCountersReadFrom((uint64_t)v101, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_147;
      case 0x13u:
        v102 = objc_alloc_init(AWDWiFiMetricsManagerBTCoexStats);

        *(_QWORD *)(a1 + 64) = v102;
        if (!PBReaderPlaceMark()
          || (AWDWiFiMetricsManagerBTCoexStatsReadFrom((uint64_t)v102, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_147;
      case 0x14u:
        v103 = objc_alloc_init(AWDWiFiMetricsManagerBTCoexModeChange);

        *(_QWORD *)(a1 + 56) = v103;
        if (PBReaderPlaceMark()
          && (AWDWiFiMetricsManagerBTCoexModeChangeReadFrom((uint64_t)v103, a2) & 1) != 0)
        {
          goto LABEL_147;
        }
        return 0;
      case 0x15u:
        v104 = 0;
        v105 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 136) |= 0x20u;
        while (2)
        {
          v106 = *v3;
          v107 = *(_QWORD *)(a2 + v106);
          if (v107 == -1 || v107 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
            *(_QWORD *)(a2 + v106) = v107 + 1;
            v26 |= (unint64_t)(v108 & 0x7F) << v104;
            if (v108 < 0)
            {
              v104 += 7;
              v14 = v105++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_213;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_213:
        v111 = 96;
LABEL_214:
        *(_DWORD *)(a1 + v111) = v26;
        goto LABEL_215;
      case 0x16u:
        v109 = objc_alloc_init(AWDWiFiMetricsManagerChipCounters);
        objc_msgSend((id)a1, "addChipCountersPerSlice:", v109);

        if (PBReaderPlaceMark()
          && (AWDWiFiMetricsManagerChipCountersReadFrom((uint64_t)v109, a2) & 1) != 0)
        {
LABEL_147:
          PBReaderRecallMark();
LABEL_215:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_215;
    }
  }
}

uint64_t AWDWiFiMetricsManagerSoftErrorUserFeedbackReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      v16 = v10 & 7;
      if (v15 || v16 == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v18 == 2)
      {
        if (v16 != 2)
        {
          v44 = 0;
          v45 = 0;
          v46 = 0;
          while (1)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
              break;
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v46 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              v14 = v45++ >= 9;
              if (!v14)
                continue;
            }
            goto LABEL_76;
          }
LABEL_75:
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_76:
          PBRepeatedInt32Add();
          goto LABEL_77;
        }
        result = PBReaderPlaceMark();
        if (!(_DWORD)result)
          return result;
        while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
        {
          v32 = 0;
          v33 = 0;
          v34 = 0;
          while (1)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
              break;
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (!v14)
                continue;
            }
            goto LABEL_53;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          PBRepeatedInt32Add();
        }
LABEL_56:
        PBReaderRecallMark();
        goto LABEL_77;
      }
      if ((_DWORD)v18 == 1)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_58;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_60;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_58:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_60:
        *(_QWORD *)(a1 + 56) = v21;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
LABEL_77:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    if (v16 != 2)
    {
      v38 = 0;
      v39 = 0;
      v40 = 0;
      while (1)
      {
        v41 = *v3;
        v42 = *(_QWORD *)(a2 + v41);
        if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
          goto LABEL_75;
        v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
        *(_QWORD *)(a2 + v41) = v42 + 1;
        v40 |= (unint64_t)(v43 & 0x7F) << v38;
        if (v43 < 0)
        {
          v38 += 7;
          v14 = v39++ >= 9;
          if (!v14)
            continue;
        }
        goto LABEL_76;
      }
    }
    result = PBReaderPlaceMark();
    if (!(_DWORD)result)
      return result;
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
    {
      v26 = 0;
      v27 = 0;
      v28 = 0;
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if (v31 < 0)
        {
          v26 += 7;
          v14 = v27++ >= 9;
          if (!v14)
            continue;
        }
        goto LABEL_40;
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
      PBRepeatedInt32Add();
    }
    goto LABEL_56;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerStateMachineReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_QWORD *)(a1 + 8) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_39:
        *(_DWORD *)(a1 + 16) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerUserBlacklistEventReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  void *String;
  id v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  void *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        if (v13 == -1 || v13 >= *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v15 = v10++ >= 9;
        if (v15)
        {
          v11 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v11 = 0;
LABEL_14:
      if (v16 || (v11 & 7) == 4)
        break;
      switch((v11 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 72) |= 4u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)(a2 + v21);
            if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v5))
              break;
            v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_81;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_83;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_81:
          if (*(_BYTE *)(a2 + *v6))
            v20 = 0;
LABEL_83:
          v67 = 24;
          goto LABEL_104;
        case 2u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 72) |= 0x10u;
          while (2)
          {
            v28 = *v4;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v15 = v26++ >= 9;
                if (v15)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v27) = 0;
LABEL_87:
          v68 = 48;
          goto LABEL_113;
        case 3u:
          v31 = v2;
          String = (void *)PBReaderReadString();

          v33 = String;
          v2 = v31;
          v34 = 64;
          goto LABEL_58;
        case 4u:
          v35 = 0;
          v36 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 72) |= 0x80u;
          while (2)
          {
            v37 = *v4;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v27 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v15 = v36++ >= 9;
                if (v15)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v27) = 0;
LABEL_91:
          v68 = 60;
          goto LABEL_113;
        case 5u:
          v40 = 0;
          v41 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 72) |= 8u;
          while (2)
          {
            v42 = *v4;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v20 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v15 = v41++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v20 = 0;
LABEL_95:
          v67 = 32;
          goto LABEL_104;
        case 6u:
          v45 = 0;
          v46 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 72) |= 1u;
          while (2)
          {
            v47 = *v4;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v20 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v15 = v46++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v20 = 0;
LABEL_99:
          v67 = 8;
          goto LABEL_104;
        case 7u:
          v50 = v2;
          v51 = (void *)PBReaderReadString();

          v33 = v51;
          v2 = v50;
          v34 = 40;
LABEL_58:
          *(_QWORD *)(a1 + v34) = v33;
          continue;
        case 8u:
          v52 = 0;
          v53 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 72) |= 2u;
          while (2)
          {
            v54 = *v4;
            v55 = *(_QWORD *)(a2 + v54);
            if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v55);
              *(_QWORD *)(a2 + v54) = v55 + 1;
              v20 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                v15 = v53++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v20 = 0;
LABEL_103:
          v67 = 16;
LABEL_104:
          *(_QWORD *)(a1 + v67) = v20;
          continue;
        case 9u:
          v57 = 0;
          v58 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 72) |= 0x40u;
          while (2)
          {
            v59 = *v4;
            v60 = *(_QWORD *)(a2 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v60);
              *(_QWORD *)(a2 + v59) = v60 + 1;
              v27 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                v15 = v58++ >= 9;
                if (v15)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v27) = 0;
LABEL_108:
          v68 = 56;
          goto LABEL_113;
        case 0xAu:
          v62 = 0;
          v63 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 72) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v64 = *v4;
        v65 = *(_QWORD *)(a2 + v64);
        if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v5))
          break;
        v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v65);
        *(_QWORD *)(a2 + v64) = v65 + 1;
        v27 |= (unint64_t)(v66 & 0x7F) << v62;
        if ((v66 & 0x80) == 0)
          goto LABEL_110;
        v62 += 7;
        v15 = v63++ >= 9;
        if (v15)
        {
          LODWORD(v27) = 0;
          goto LABEL_112;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_110:
      if (*(_BYTE *)(a2 + *v6))
        LODWORD(v27) = 0;
LABEL_112:
      v68 = 52;
LABEL_113:
      *(_DWORD *)(a1 + v68) = v27;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDWiFiMetricsManagerWatchdogEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  void *String;
  id v66;
  uint64_t v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t result;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  void *v85;
  void *v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  AWDWiFiMetricExtendedTrapInfo *v92;
  AWDWiFiMetricJoinTimeout *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  void *Data;
  uint64_t v109;
  uint64_t v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 232) |= 4u;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_146;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_148;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_146:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_148:
              v109 = 48;
              goto LABEL_189;
            case 2u:
              v24 = 0;
              v25 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 232) |= 0x1000u;
              while (2)
              {
                v27 = *v3;
                v28 = *(_QWORD *)(a2 + v27);
                if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
                  *(_QWORD *)(a2 + v27) = v28 + 1;
                  v26 |= (unint64_t)(v29 & 0x7F) << v24;
                  if (v29 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_152;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_152:
              v110 = 152;
              goto LABEL_198;
            case 3u:
              v30 = 0;
              v31 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 232) |= 0x40u;
              while (2)
              {
                v32 = *v3;
                v33 = *(_QWORD *)(a2 + v32);
                if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
                  *(_QWORD *)(a2 + v32) = v33 + 1;
                  v26 |= (unint64_t)(v34 & 0x7F) << v30;
                  if (v34 < 0)
                  {
                    v30 += 7;
                    v14 = v31++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_156;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_156:
              v110 = 80;
              goto LABEL_198;
            case 4u:
              v35 = 0;
              v36 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 232) |= 8u;
              while (2)
              {
                v37 = *v3;
                v38 = *(_QWORD *)(a2 + v37);
                if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
                  *(_QWORD *)(a2 + v37) = v38 + 1;
                  v26 |= (unint64_t)(v39 & 0x7F) << v35;
                  if (v39 < 0)
                  {
                    v35 += 7;
                    v14 = v36++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_160;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_160:
              v110 = 56;
              goto LABEL_198;
            case 5u:
              v40 = 0;
              v41 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 232) |= 0x200u;
              while (2)
              {
                v42 = *v3;
                v43 = *(_QWORD *)(a2 + v42);
                if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
                  *(_QWORD *)(a2 + v42) = v43 + 1;
                  v26 |= (unint64_t)(v44 & 0x7F) << v40;
                  if (v44 < 0)
                  {
                    v40 += 7;
                    v14 = v41++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_164;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_164:
              v110 = 120;
              goto LABEL_198;
            case 6u:
              v45 = 0;
              v46 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 232) |= 0x800u;
              while (2)
              {
                v47 = *v3;
                v48 = *(_QWORD *)(a2 + v47);
                if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
                  *(_QWORD *)(a2 + v47) = v48 + 1;
                  v26 |= (unint64_t)(v49 & 0x7F) << v45;
                  if (v49 < 0)
                  {
                    v45 += 7;
                    v14 = v46++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_168;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_168:
              v110 = 140;
              goto LABEL_198;
            case 7u:
              v50 = 0;
              v51 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 232) |= 0x10u;
              while (2)
              {
                v52 = *v3;
                v53 = *(_QWORD *)(a2 + v52);
                if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
                  *(_QWORD *)(a2 + v52) = v53 + 1;
                  v26 |= (unint64_t)(v54 & 0x7F) << v50;
                  if (v54 < 0)
                  {
                    v50 += 7;
                    v14 = v51++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_172;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_172:
              v110 = 60;
              goto LABEL_198;
            case 8u:
              v55 = 0;
              v56 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 232) |= 0x20u;
              while (2)
              {
                v57 = *v3;
                v58 = *(_QWORD *)(a2 + v57);
                if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
                  *(_QWORD *)(a2 + v57) = v58 + 1;
                  v26 |= (unint64_t)(v59 & 0x7F) << v55;
                  if (v59 < 0)
                  {
                    v55 += 7;
                    v14 = v56++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_176;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_176:
              v110 = 64;
              goto LABEL_198;
            case 9u:
              v60 = 0;
              v61 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 232) |= 0x100u;
              while (2)
              {
                v62 = *v3;
                v63 = *(_QWORD *)(a2 + v62);
                if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
                  *(_QWORD *)(a2 + v62) = v63 + 1;
                  v26 |= (unint64_t)(v64 & 0x7F) << v60;
                  if (v64 < 0)
                  {
                    v60 += 7;
                    v14 = v61++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_180;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_180:
              v110 = 108;
              goto LABEL_198;
            case 0xAu:
              String = (void *)PBReaderReadString();

              v66 = String;
              v67 = 128;
              goto LABEL_144;
            case 0xBu:
              v68 = 0;
              v69 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 232) |= 2u;
              while (2)
              {
                v70 = *v3;
                v71 = *(_QWORD *)(a2 + v70);
                if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
                  *(_QWORD *)(a2 + v70) = v71 + 1;
                  v20 |= (unint64_t)(v72 & 0x7F) << v68;
                  if (v72 < 0)
                  {
                    v68 += 7;
                    v14 = v69++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_184;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_184:
              v109 = 40;
              goto LABEL_189;
            case 0xCu:
              v73 = 0;
              v74 = 0;
              v20 = 0;
              *(_WORD *)(a1 + 232) |= 1u;
              while (2)
              {
                v75 = *v3;
                v76 = *(_QWORD *)(a2 + v75);
                if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
                  *(_QWORD *)(a2 + v75) = v76 + 1;
                  v20 |= (unint64_t)(v77 & 0x7F) << v73;
                  if (v77 < 0)
                  {
                    v73 += 7;
                    v14 = v74++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_188;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_188:
              v109 = 32;
LABEL_189:
              *(_QWORD *)(a1 + v109) = v20;
              goto LABEL_199;
            case 0xDu:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v79 = 0;
                  v80 = 0;
                  v81 = 0;
                  while (1)
                  {
                    v82 = *v3;
                    v83 = *(_QWORD *)(a2 + v82);
                    if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
                    *(_QWORD *)(a2 + v82) = v83 + 1;
                    v81 |= (unint64_t)(v84 & 0x7F) << v79;
                    if (v84 < 0)
                    {
                      v79 += 7;
                      v14 = v80++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_111;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_111:
                  PBRepeatedUInt64Add();
                }
LABEL_126:
                PBReaderRecallMark();
              }
              else
              {
                v111 = 0;
                v112 = 0;
                v113 = 0;
                while (1)
                {
                  v114 = *v3;
                  v115 = *(_QWORD *)(a2 + v114);
                  if (v115 == -1 || v115 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v115);
                  *(_QWORD *)(a2 + v114) = v115 + 1;
                  v113 |= (unint64_t)(v116 & 0x7F) << v111;
                  if (v116 < 0)
                  {
                    v111 += 7;
                    v14 = v112++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_209;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_209:
                PBRepeatedUInt64Add();
              }
LABEL_199:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 0xEu:
              v85 = (void *)PBReaderReadString();

              v66 = v85;
              v67 = 72;
              goto LABEL_144;
            case 0xFu:
              v86 = (void *)PBReaderReadString();

              v66 = v86;
              v67 = 88;
              goto LABEL_144;
            case 0x10u:
              v87 = 0;
              v88 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 232) |= 0x80u;
              while (2)
              {
                v89 = *v3;
                v90 = *(_QWORD *)(a2 + v89);
                if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
                  *(_QWORD *)(a2 + v89) = v90 + 1;
                  v26 |= (unint64_t)(v91 & 0x7F) << v87;
                  if (v91 < 0)
                  {
                    v87 += 7;
                    v14 = v88++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_193;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_193:
              v110 = 104;
              goto LABEL_198;
            case 0x11u:
              v92 = objc_alloc_init(AWDWiFiMetricExtendedTrapInfo);

              *(_QWORD *)(a1 + 144) = v92;
              if (!PBReaderPlaceMark()
                || (AWDWiFiMetricExtendedTrapInfoReadFrom((uint64_t)v92, a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_126;
            case 0x12u:
              v93 = objc_alloc_init(AWDWiFiMetricJoinTimeout);

              *(_QWORD *)(a1 + 96) = v93;
              if (PBReaderPlaceMark() && (AWDWiFiMetricJoinTimeoutReadFrom((uint64_t)v93, a2) & 1) != 0)
                goto LABEL_126;
              return 0;
            case 0x13u:
              v94 = (void *)PBReaderReadString();

              v66 = v94;
              v67 = 224;
              goto LABEL_144;
            case 0x14u:
              v95 = (void *)PBReaderReadString();

              v66 = v95;
              v67 = 184;
              goto LABEL_144;
            case 0x15u:
              v96 = (void *)PBReaderReadString();

              v66 = v96;
              v67 = 192;
              goto LABEL_144;
            case 0x16u:
              v97 = (void *)PBReaderReadString();

              v66 = v97;
              v67 = 200;
              goto LABEL_144;
            case 0x17u:
              v98 = (void *)PBReaderReadString();

              v66 = v98;
              v67 = 208;
              goto LABEL_144;
            case 0x18u:
              v99 = (void *)PBReaderReadString();

              v66 = v99;
              v67 = 216;
              goto LABEL_144;
            case 0x19u:
              v100 = (void *)PBReaderReadString();

              v66 = v100;
              v67 = 176;
              goto LABEL_144;
            case 0x1Au:
              v101 = (void *)PBReaderReadString();

              v66 = v101;
              v67 = 168;
              goto LABEL_144;
            case 0x1Bu:
              v102 = (void *)PBReaderReadString();

              v66 = v102;
              v67 = 160;
              goto LABEL_144;
            case 0x1Cu:
              v103 = 0;
              v104 = 0;
              v26 = 0;
              *(_WORD *)(a1 + 232) |= 0x400u;
              while (2)
              {
                v105 = *v3;
                v106 = *(_QWORD *)(a2 + v105);
                if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v106);
                  *(_QWORD *)(a2 + v105) = v106 + 1;
                  v26 |= (unint64_t)(v107 & 0x7F) << v103;
                  if (v107 < 0)
                  {
                    v103 += 7;
                    v14 = v104++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_197;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_197:
              v110 = 136;
LABEL_198:
              *(_DWORD *)(a1 + v110) = v26;
              goto LABEL_199;
            case 0x1Du:
              Data = (void *)PBReaderReadData();

              v66 = Data;
              v67 = 112;
LABEL_144:
              *(_QWORD *)(a1 + v67) = v66;
              goto LABEL_199;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_199;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiMetricsManagerWifidAvailabilityReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_BYTE *)(a1 + 28) |= 4u;
        while (1)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v4))
            break;
          v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
          *(_QWORD *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0)
            goto LABEL_45;
          v26 += 7;
          v15 = v27++ >= 9;
          if (v15)
          {
            LODWORD(v28) = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_47:
        *(_DWORD *)(a1 + 24) = v28;
      }
      else if ((_DWORD)v18 == 2)
      {
        *(_BYTE *)(a1 + 28) |= 2u;
        v33 = *v3;
        v34 = *(_QWORD *)(a2 + v33);
        if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v35 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v34);
          *(_QWORD *)(a2 + v33) = v34 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v35 = 0;
        }
        *(_QWORD *)(a1 + 16) = v35;
      }
      else if ((_DWORD)v18 == 1)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_41;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v21 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_43:
        *(_QWORD *)(a1 + 8) = v21;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWiFiMetricsScanObjReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDWiFiMetricsScanObj__durScans;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDWiFiMetricsScanObj__durScans;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDWiFiMetricsScanObj__durScans;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDWiFiMetricsScanObj__scanType;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDWiFiMetricsScanObj__scanType;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDWiFiMetricsScanObj__scanType;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 20) |= 2u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDWiFiMetricsScanObj__numScans;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        v25 = &OBJC_IVAR___AWDWiFiMetricsScanObj__numScans;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDWiFiMetricsScanObj__numScans;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v20) = 0;
LABEL_50:
    *(_DWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiNWActivityReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t String;
  AWDWiFiNWActivityInterfaceStats *v25;
  AWDWiFiNWActivityPeerStats *v26;
  AWDWiFiNWActivityControllerStats *v27;
  AWDLinkQualityMeasurements *v28;
  AWDWiFiQualityScore *v29;
  AWDBTLEConnectionStats *v30;
  void *v31;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_50;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_52;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_50:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_52:
        *(_QWORD *)(a1 + 8) = v19;
        goto LABEL_53;
      case 2u:
        String = PBReaderReadString();
        if (String)
          objc_msgSend((id)a1, "addActivities:", String);
        goto LABEL_53;
      case 3u:
        v25 = objc_alloc_init(AWDWiFiNWActivityInterfaceStats);
        objc_msgSend((id)a1, "addInterfaceStats:", v25);

        if (!PBReaderPlaceMark() || (AWDWiFiNWActivityInterfaceStatsReadFrom((uint64_t)v25, a2) & 1) == 0)
          return 0;
        goto LABEL_41;
      case 4u:
        v26 = objc_alloc_init(AWDWiFiNWActivityPeerStats);
        objc_msgSend((id)a1, "addPeerStats:", v26);

        if (!PBReaderPlaceMark() || (AWDWiFiNWActivityPeerStatsReadFrom((uint64_t)v26, a2) & 1) == 0)
          return 0;
        goto LABEL_41;
      case 5u:
        v27 = objc_alloc_init(AWDWiFiNWActivityControllerStats);

        *(_QWORD *)(a1 + 40) = v27;
        if (PBReaderPlaceMark() && (AWDWiFiNWActivityControllerStatsReadFrom((uint64_t)v27, a2) & 1) != 0)
          goto LABEL_41;
        return 0;
      case 6u:
        v28 = objc_alloc_init(AWDLinkQualityMeasurements);

        *(_QWORD *)(a1 + 56) = v28;
        if (PBReaderPlaceMark() && AWDLinkQualityMeasurementsReadFrom((uint64_t)v28, a2))
          goto LABEL_41;
        return 0;
      case 7u:
        v29 = objc_alloc_init(AWDWiFiQualityScore);
        objc_msgSend((id)a1, "addScore:", v29);

        if (!PBReaderPlaceMark() || !AWDWiFiQualityScoreReadFrom((uint64_t)v29, a2))
          return 0;
        goto LABEL_41;
      case 8u:
        v30 = objc_alloc_init(AWDBTLEConnectionStats);
        objc_msgSend((id)a1, "addBtleConnection:", v30);

        if (PBReaderPlaceMark() && AWDBTLEConnectionStatsReadFrom((uint64_t)v30, a2))
        {
LABEL_41:
          PBReaderRecallMark();
LABEL_53:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 9u:
        v31 = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 24) = v31;
        goto LABEL_53;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_53;
    }
  }
}

uint64_t AWDWiFiNWActivityAggregateMetricsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int *v46;
  int *v47;
  int *v48;
  int *v49;
  int *v50;
  uint64_t v51;
  uint64_t result;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  unsigned int v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  char v139;
  unsigned int v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v11 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v12 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v13 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v14 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v15 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v16 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v17 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v18 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v19 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v20 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v21 += 7;
        v27 = v22++ >= 9;
        if (v27)
        {
          v23 = 0;
          v28 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_14:
      if (v28 || (v23 & 7) == 4)
        break;
      switch((v23 >> 3))
      {
        case 1u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x800u;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_183;
            v30 += 7;
            v27 = v31++ >= 9;
            if (v27)
            {
              v32 = 0;
              goto LABEL_185;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_183:
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_185:
          v154 = v8[773];
          goto LABEL_275;
        case 2u:
          v36 = 0;
          v37 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x1000u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v32 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v27 = v37++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_189;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_189:
          v154 = v10[774];
          goto LABEL_275;
        case 3u:
          v41 = 0;
          v42 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x4000u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v32 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v27 = v42++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_193;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_193:
          v154 = v11[775];
          goto LABEL_275;
        case 5u:
          v53 = 0;
          v54 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 4u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v32 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                v27 = v54++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_197;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_197:
          v154 = v12[776];
          goto LABEL_275;
        case 6u:
          v58 = 0;
          v59 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 8u;
          while (2)
          {
            v60 = *v3;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v61);
              *(_QWORD *)(a2 + v60) = v61 + 1;
              v32 |= (unint64_t)(v62 & 0x7F) << v58;
              if (v62 < 0)
              {
                v58 += 7;
                v27 = v59++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_201;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_201:
          v154 = v13[777];
          goto LABEL_275;
        case 7u:
          v63 = 0;
          v64 = 0;
          v65 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x200000u;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v65 |= (unint64_t)(v68 & 0x7F) << v63;
              if (v68 < 0)
              {
                v63 += 7;
                v27 = v64++ >= 9;
                if (v27)
                {
                  LODWORD(v65) = 0;
                  goto LABEL_205;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v65) = 0;
LABEL_205:
          v155 = v14[778];
          goto LABEL_210;
        case 8u:
          v69 = 0;
          v70 = 0;
          v65 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x400000u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v65 |= (unint64_t)(v73 & 0x7F) << v69;
              if (v73 < 0)
              {
                v69 += 7;
                v27 = v70++ >= 9;
                if (v27)
                {
                  LODWORD(v65) = 0;
                  goto LABEL_209;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v65) = 0;
LABEL_209:
          v155 = v15[779];
LABEL_210:
          *(_DWORD *)(a1 + v155) = v65;
          continue;
        case 9u:
          v74 = 0;
          v75 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x2000u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v32 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v27 = v75++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_214;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_214:
          v154 = v16[780];
          goto LABEL_275;
        case 0xAu:
          v79 = 0;
          v80 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x200u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v32 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v27 = v80++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_218;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_218:
          v154 = v17[781];
          goto LABEL_275;
        case 0xCu:
          v84 = 0;
          v85 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x100u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v32 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v27 = v85++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_222;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_222:
          v154 = v18[782];
          goto LABEL_275;
        case 0xDu:
          v89 = 0;
          v90 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x8000u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v32 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v27 = v90++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_226;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_226:
          v154 = v19[783];
          goto LABEL_275;
        case 0xEu:
          v94 = 0;
          v95 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x10000u;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v97);
              *(_QWORD *)(a2 + v96) = v97 + 1;
              v32 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                v27 = v95++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_230;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_230:
          v154 = v20[784];
          goto LABEL_275;
        case 0x10u:
          v99 = 0;
          v100 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x100000u;
          while (2)
          {
            v101 = *v3;
            v102 = *(_QWORD *)(a2 + v101);
            if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v102);
              *(_QWORD *)(a2 + v101) = v102 + 1;
              v32 |= (unint64_t)(v103 & 0x7F) << v99;
              if (v103 < 0)
              {
                v99 += 7;
                v27 = v100++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_234;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_234:
          v154 = 168;
          goto LABEL_275;
        case 0x12u:
          v104 = 0;
          v105 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x20000u;
          while (2)
          {
            v106 = *v3;
            v107 = *(_QWORD *)(a2 + v106);
            if (v107 == -1 || v107 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v107);
              *(_QWORD *)(a2 + v106) = v107 + 1;
              v32 |= (unint64_t)(v108 & 0x7F) << v104;
              if (v108 < 0)
              {
                v104 += 7;
                v27 = v105++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_238;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_238:
          v154 = 144;
          goto LABEL_275;
        case 0x13u:
          v109 = 0;
          v110 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x80000u;
          while (2)
          {
            v111 = *v3;
            v112 = *(_QWORD *)(a2 + v111);
            if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v112);
              *(_QWORD *)(a2 + v111) = v112 + 1;
              v32 |= (unint64_t)(v113 & 0x7F) << v109;
              if (v113 < 0)
              {
                v109 += 7;
                v27 = v110++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_242;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_242:
          v154 = 160;
          goto LABEL_275;
        case 0x14u:
          v114 = 0;
          v115 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x40000u;
          while (2)
          {
            v116 = *v3;
            v117 = *(_QWORD *)(a2 + v116);
            if (v117 == -1 || v117 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v118 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v117);
              *(_QWORD *)(a2 + v116) = v117 + 1;
              v32 |= (unint64_t)(v118 & 0x7F) << v114;
              if (v118 < 0)
              {
                v114 += 7;
                v27 = v115++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_246;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_246:
          v154 = 152;
          goto LABEL_275;
        case 0x15u:
          v119 = 0;
          v120 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 2u;
          while (2)
          {
            v121 = *v3;
            v122 = *(_QWORD *)(a2 + v121);
            if (v122 == -1 || v122 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v122);
              *(_QWORD *)(a2 + v121) = v122 + 1;
              v32 |= (unint64_t)(v123 & 0x7F) << v119;
              if (v123 < 0)
              {
                v119 += 7;
                v27 = v120++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_250;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_250:
          v154 = 16;
          goto LABEL_275;
        case 0x16u:
          v124 = 0;
          v125 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x400u;
          while (2)
          {
            v126 = *v3;
            v127 = *(_QWORD *)(a2 + v126);
            if (v127 == -1 || v127 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v128 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v127);
              *(_QWORD *)(a2 + v126) = v127 + 1;
              v32 |= (unint64_t)(v128 & 0x7F) << v124;
              if (v128 < 0)
              {
                v124 += 7;
                v27 = v125++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_254;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_254:
          v154 = 88;
          goto LABEL_275;
        case 0x17u:
          v129 = 0;
          v130 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x10u;
          while (2)
          {
            v131 = *v3;
            v132 = *(_QWORD *)(a2 + v131);
            if (v132 == -1 || v132 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v132);
              *(_QWORD *)(a2 + v131) = v132 + 1;
              v32 |= (unint64_t)(v133 & 0x7F) << v129;
              if (v133 < 0)
              {
                v129 += 7;
                v27 = v130++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_258;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_258:
          v154 = 40;
          goto LABEL_275;
        case 0x18u:
          v134 = 0;
          v135 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x20u;
          while (2)
          {
            v136 = *v3;
            v137 = *(_QWORD *)(a2 + v136);
            if (v137 == -1 || v137 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v138 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v137);
              *(_QWORD *)(a2 + v136) = v137 + 1;
              v32 |= (unint64_t)(v138 & 0x7F) << v134;
              if (v138 < 0)
              {
                v134 += 7;
                v27 = v135++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_262;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_262:
          v154 = 48;
          goto LABEL_275;
        case 0x19u:
          v139 = 0;
          v140 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x40u;
          while (2)
          {
            v141 = *v3;
            v142 = *(_QWORD *)(a2 + v141);
            if (v142 == -1 || v142 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v142);
              *(_QWORD *)(a2 + v141) = v142 + 1;
              v32 |= (unint64_t)(v143 & 0x7F) << v139;
              if (v143 < 0)
              {
                v139 += 7;
                v27 = v140++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_266;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_266:
          v154 = 56;
          goto LABEL_275;
        case 0x1Au:
          v144 = 0;
          v145 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 0x80u;
          while (2)
          {
            v146 = *v3;
            v147 = *(_QWORD *)(a2 + v146);
            if (v147 == -1 || v147 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v148 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v147);
              *(_QWORD *)(a2 + v146) = v147 + 1;
              v32 |= (unint64_t)(v148 & 0x7F) << v144;
              if (v148 < 0)
              {
                v144 += 7;
                v27 = v145++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_270;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_270:
          v154 = 64;
          goto LABEL_275;
        case 0x1Bu:
          v149 = 0;
          v150 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + v7[772]) |= 1u;
          break;
        default:
          v46 = v8;
          v47 = v10;
          v48 = v7;
          v49 = v11;
          v50 = v12;
          v51 = a1;
          result = PBReaderSkipValueWithTag();
          v20 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v13 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          a1 = v51;
          v14 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v50;
          v15 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v11 = v49;
          v16 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v7 = v48;
          v19 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v10 = v47;
          v17 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          v8 = v46;
          v18 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v151 = *v3;
        v152 = *(_QWORD *)(a2 + v151);
        if (v152 == -1 || v152 >= *(_QWORD *)(a2 + *v4))
          break;
        v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v152);
        *(_QWORD *)(a2 + v151) = v152 + 1;
        v32 |= (unint64_t)(v153 & 0x7F) << v149;
        if ((v153 & 0x80) == 0)
          goto LABEL_272;
        v149 += 7;
        v27 = v150++ >= 9;
        if (v27)
        {
          v32 = 0;
          goto LABEL_274;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_272:
      if (*(_BYTE *)(a2 + *v5))
        v32 = 0;
LABEL_274:
      v154 = 8;
LABEL_275:
      *(_QWORD *)(a1 + v154) = v32;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWiFiNWActivityAssocReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v23;
  int *v24;
  BOOL v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  char v171;
  unsigned int v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  char v176;
  unsigned int v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  char v181;
  unsigned int v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  unsigned int v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  char v191;
  unsigned int v192;
  uint64_t v193;
  unint64_t v194;
  char v195;
  char v196;
  unsigned int v197;
  uint64_t v198;
  unint64_t v199;
  char v200;
  char v201;
  unsigned int v202;
  uint64_t v203;
  unint64_t v204;
  char v205;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x40uLL;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__authSuccess;
              goto LABEL_317;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v23 = 0;
            v17 += 7;
            v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__authSuccess;
            v25 = v18++ > 8;
            if (v25)
              goto LABEL_321;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__authSuccess;
          goto LABEL_318;
        case 2u:
          v26 = 0;
          v27 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x20uLL;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__authFailed;
              goto LABEL_317;
            }
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v19 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v23 = 0;
              v26 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__authFailed;
              v25 = v27++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__authFailed;
          goto LABEL_318;
        case 3u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x10uLL;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocSuccess;
              goto LABEL_317;
            }
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v19 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v23 = 0;
              v31 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocSuccess;
              v25 = v32++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocSuccess;
          goto LABEL_318;
        case 4u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 4uLL;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocFailed;
              goto LABEL_317;
            }
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v19 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v23 = 0;
              v36 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocFailed;
              v25 = v37++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocFailed;
          goto LABEL_318;
        case 5u:
          v41 = 0;
          v42 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x800000uLL;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__reassocSuccess;
              goto LABEL_317;
            }
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v19 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v23 = 0;
              v41 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__reassocSuccess;
              v25 = v42++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__reassocSuccess;
          goto LABEL_318;
        case 6u:
          v46 = 0;
          v47 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x400000uLL;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__reassocFailed;
              goto LABEL_317;
            }
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v19 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v23 = 0;
              v46 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__reassocFailed;
              v25 = v47++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__reassocFailed;
          goto LABEL_318;
        case 7u:
          v51 = 0;
          v52 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x20000uLL;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__linkChanged;
              goto LABEL_317;
            }
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v19 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v23 = 0;
              v51 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__linkChanged;
              v25 = v52++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__linkChanged;
          goto LABEL_318;
        case 8u:
          v56 = 0;
          v57 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x10000000uLL;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamSuccess;
              goto LABEL_317;
            }
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v19 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v23 = 0;
              v56 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamSuccess;
              v25 = v57++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamSuccess;
          goto LABEL_318;
        case 9u:
          v61 = 0;
          v62 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x1000000uLL;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamFailed;
              goto LABEL_317;
            }
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v19 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v23 = 0;
              v61 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamFailed;
              v25 = v62++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamFailed;
          goto LABEL_318;
        case 0xAu:
          v66 = 0;
          v67 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 2uLL;
          while (2)
          {
            v68 = *v3;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocDoneSuccess;
              goto LABEL_317;
            }
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v19 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v23 = 0;
              v66 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocDoneSuccess;
              v25 = v67++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocDoneSuccess;
          goto LABEL_318;
        case 0xBu:
          v71 = 0;
          v72 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 1uLL;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocDoneFailed;
              goto LABEL_317;
            }
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v19 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v23 = 0;
              v71 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocDoneFailed;
              v25 = v72++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocDoneFailed;
          goto LABEL_318;
        case 0xCu:
          v76 = 0;
          v77 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 8uLL;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocReady;
              goto LABEL_317;
            }
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v19 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v23 = 0;
              v76 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocReady;
              v25 = v77++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__assocReady;
          goto LABEL_318;
        case 0xDu:
          v81 = 0;
          v82 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x800000000uLL;
          while (2)
          {
            v83 = *v3;
            v84 = *(_QWORD *)(a2 + v83);
            if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__ssidChanged;
              goto LABEL_317;
            }
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v84 + 1;
            v19 |= (unint64_t)(v85 & 0x7F) << v81;
            if (v85 < 0)
            {
              v23 = 0;
              v81 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__ssidChanged;
              v25 = v82++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__ssidChanged;
          goto LABEL_318;
        case 0xEu:
          v86 = 0;
          v87 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x100uLL;
          while (2)
          {
            v88 = *v3;
            v89 = *(_QWORD *)(a2 + v88);
            if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__bssidChanged;
              goto LABEL_317;
            }
            v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
            *(_QWORD *)(a2 + v88) = v89 + 1;
            v19 |= (unint64_t)(v90 & 0x7F) << v86;
            if (v90 < 0)
            {
              v23 = 0;
              v86 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__bssidChanged;
              v25 = v87++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__bssidChanged;
          goto LABEL_318;
        case 0xFu:
          v91 = 0;
          v92 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x800uLL;
          while (2)
          {
            v93 = *v3;
            v94 = *(_QWORD *)(a2 + v93);
            if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__deauthReceived;
              goto LABEL_317;
            }
            v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
            *(_QWORD *)(a2 + v93) = v94 + 1;
            v19 |= (unint64_t)(v95 & 0x7F) << v91;
            if (v95 < 0)
            {
              v23 = 0;
              v91 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__deauthReceived;
              v25 = v92++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__deauthReceived;
          goto LABEL_318;
        case 0x10u:
          v96 = 0;
          v97 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x2000uLL;
          while (2)
          {
            v98 = *v3;
            v99 = *(_QWORD *)(a2 + v98);
            if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__disassocReceived;
              goto LABEL_317;
            }
            v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
            *(_QWORD *)(a2 + v98) = v99 + 1;
            v19 |= (unint64_t)(v100 & 0x7F) << v96;
            if (v100 < 0)
            {
              v23 = 0;
              v96 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__disassocReceived;
              v25 = v97++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__disassocReceived;
          goto LABEL_318;
        case 0x11u:
          v101 = 0;
          v102 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x1000uLL;
          while (2)
          {
            v103 = *v3;
            v104 = *(_QWORD *)(a2 + v103);
            if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__decryptError;
              goto LABEL_317;
            }
            v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
            *(_QWORD *)(a2 + v103) = v104 + 1;
            v19 |= (unint64_t)(v105 & 0x7F) << v101;
            if (v105 < 0)
            {
              v23 = 0;
              v101 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__decryptError;
              v25 = v102++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__decryptError;
          goto LABEL_318;
        case 0x12u:
          v106 = 0;
          v107 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x80000uLL;
          while (2)
          {
            v108 = *v3;
            v109 = *(_QWORD *)(a2 + v108);
            if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__pruned;
              goto LABEL_317;
            }
            v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
            *(_QWORD *)(a2 + v108) = v109 + 1;
            v19 |= (unint64_t)(v110 & 0x7F) << v106;
            if (v110 < 0)
            {
              v23 = 0;
              v106 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__pruned;
              v25 = v107++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__pruned;
          goto LABEL_318;
        case 0x13u:
          v111 = 0;
          v112 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x1000000000uLL;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__supplicant;
              goto LABEL_317;
            }
            v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v114 + 1;
            v19 |= (unint64_t)(v115 & 0x7F) << v111;
            if (v115 < 0)
            {
              v23 = 0;
              v111 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__supplicant;
              v25 = v112++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__supplicant;
          goto LABEL_318;
        case 0x14u:
          v116 = 0;
          v117 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x40000uLL;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__macAddrChanged;
              goto LABEL_317;
            }
            v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v119 + 1;
            v19 |= (unint64_t)(v120 & 0x7F) << v116;
            if (v120 < 0)
            {
              v23 = 0;
              v116 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__macAddrChanged;
              v25 = v117++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__macAddrChanged;
          goto LABEL_318;
        case 0x15u:
          v121 = 0;
          v122 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x20000000uLL;
          while (2)
          {
            v123 = *v3;
            v124 = *(_QWORD *)(a2 + v123);
            if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__rssiChanged;
              goto LABEL_317;
            }
            v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
            *(_QWORD *)(a2 + v123) = v124 + 1;
            v19 |= (unint64_t)(v125 & 0x7F) << v121;
            if (v125 < 0)
            {
              v23 = 0;
              v121 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__rssiChanged;
              v25 = v122++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__rssiChanged;
          goto LABEL_318;
        case 0x16u:
          v126 = 0;
          v127 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x10000uLL;
          while (2)
          {
            v128 = *v3;
            v129 = *(_QWORD *)(a2 + v128);
            if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__homeChanQualChanged;
              goto LABEL_317;
            }
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
            *(_QWORD *)(a2 + v128) = v129 + 1;
            v19 |= (unint64_t)(v130 & 0x7F) << v126;
            if (v130 < 0)
            {
              v23 = 0;
              v126 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__homeChanQualChanged;
              v25 = v127++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__homeChanQualChanged;
          goto LABEL_318;
        case 0x17u:
          v131 = 0;
          v132 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x200uLL;
          while (2)
          {
            v133 = *v3;
            v134 = *(_QWORD *)(a2 + v133);
            if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__chanSwitchEvent;
              goto LABEL_317;
            }
            v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v134 + 1;
            v19 |= (unint64_t)(v135 & 0x7F) << v131;
            if (v135 < 0)
            {
              v23 = 0;
              v131 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__chanSwitchEvent;
              v25 = v132++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__chanSwitchEvent;
          goto LABEL_318;
        case 0x18u:
          v136 = 0;
          v137 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x2000000uLL;
          while (2)
          {
            v138 = *v3;
            v139 = *(_QWORD *)(a2 + v138);
            if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamPrep;
              goto LABEL_317;
            }
            v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
            *(_QWORD *)(a2 + v138) = v139 + 1;
            v19 |= (unint64_t)(v140 & 0x7F) << v136;
            if (v140 < 0)
            {
              v23 = 0;
              v136 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamPrep;
              v25 = v137++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamPrep;
          goto LABEL_318;
        case 0x19u:
          v141 = 0;
          v142 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x8000000uLL;
          while (2)
          {
            v143 = *v3;
            v144 = *(_QWORD *)(a2 + v143);
            if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamScanStart;
              goto LABEL_317;
            }
            v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v144 + 1;
            v19 |= (unint64_t)(v145 & 0x7F) << v141;
            if (v145 < 0)
            {
              v23 = 0;
              v141 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamScanStart;
              v25 = v142++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamScanStart;
          goto LABEL_318;
        case 0x1Au:
          v146 = 0;
          v147 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x4000000uLL;
          while (2)
          {
            v148 = *v3;
            v149 = *(_QWORD *)(a2 + v148);
            if (v149 == -1 || v149 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamScanEnd;
              goto LABEL_317;
            }
            v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
            *(_QWORD *)(a2 + v148) = v149 + 1;
            v19 |= (unint64_t)(v150 & 0x7F) << v146;
            if (v150 < 0)
            {
              v23 = 0;
              v146 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamScanEnd;
              v25 = v147++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__roamScanEnd;
          goto LABEL_318;
        case 0x1Bu:
          v151 = 0;
          v152 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x100000000uLL;
          while (2)
          {
            v153 = *v3;
            v154 = *(_QWORD *)(a2 + v153);
            if (v154 == -1 || v154 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanResults;
              goto LABEL_317;
            }
            v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
            *(_QWORD *)(a2 + v153) = v154 + 1;
            v19 |= (unint64_t)(v155 & 0x7F) << v151;
            if (v155 < 0)
            {
              v23 = 0;
              v151 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanResults;
              v25 = v152++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanResults;
          goto LABEL_318;
        case 0x1Cu:
          v156 = 0;
          v157 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x200000000uLL;
          while (2)
          {
            v158 = *v3;
            v159 = *(_QWORD *)(a2 + v158);
            if (v159 == -1 || v159 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanSummary;
              goto LABEL_317;
            }
            v160 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v159);
            *(_QWORD *)(a2 + v158) = v159 + 1;
            v19 |= (unint64_t)(v160 & 0x7F) << v156;
            if (v160 < 0)
            {
              v23 = 0;
              v156 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanSummary;
              v25 = v157++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanSummary;
          goto LABEL_318;
        case 0x1Du:
          v161 = 0;
          v162 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x40000000uLL;
          while (2)
          {
            v163 = *v3;
            v164 = *(_QWORD *)(a2 + v163);
            if (v164 == -1 || v164 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanDone;
              goto LABEL_317;
            }
            v165 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v164);
            *(_QWORD *)(a2 + v163) = v164 + 1;
            v19 |= (unint64_t)(v165 & 0x7F) << v161;
            if (v165 < 0)
            {
              v23 = 0;
              v161 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanDone;
              v25 = v162++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanDone;
          goto LABEL_318;
        case 0x1Eu:
          v166 = 0;
          v167 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x80000000uLL;
          while (2)
          {
            v168 = *v3;
            v169 = *(_QWORD *)(a2 + v168);
            if (v169 == -1 || v169 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanInternalDone;
              goto LABEL_317;
            }
            v170 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v169);
            *(_QWORD *)(a2 + v168) = v169 + 1;
            v19 |= (unint64_t)(v170 & 0x7F) << v166;
            if (v170 < 0)
            {
              v23 = 0;
              v166 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanInternalDone;
              v25 = v167++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__scanInternalDone;
          goto LABEL_318;
        case 0x1Fu:
          v171 = 0;
          v172 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x80uLL;
          while (2)
          {
            v173 = *v3;
            v174 = *(_QWORD *)(a2 + v173);
            if (v174 == -1 || v174 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__bssDisallowEvent;
              goto LABEL_317;
            }
            v175 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v174);
            *(_QWORD *)(a2 + v173) = v174 + 1;
            v19 |= (unint64_t)(v175 & 0x7F) << v171;
            if (v175 < 0)
            {
              v23 = 0;
              v171 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__bssDisallowEvent;
              v25 = v172++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__bssDisallowEvent;
          goto LABEL_318;
        case 0x20u:
          v176 = 0;
          v177 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x400000000uLL;
          while (2)
          {
            v178 = *v3;
            v179 = *(_QWORD *)(a2 + v178);
            if (v179 == -1 || v179 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__slowWiFiSymptom;
              goto LABEL_317;
            }
            v180 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v179);
            *(_QWORD *)(a2 + v178) = v179 + 1;
            v19 |= (unint64_t)(v180 & 0x7F) << v176;
            if (v180 < 0)
            {
              v23 = 0;
              v176 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__slowWiFiSymptom;
              v25 = v177++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__slowWiFiSymptom;
          goto LABEL_318;
        case 0x21u:
          v181 = 0;
          v182 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x4000uLL;
          while (2)
          {
            v183 = *v3;
            v184 = *(_QWORD *)(a2 + v183);
            if (v184 == -1 || v184 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__dpsSymptom;
              goto LABEL_317;
            }
            v185 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v184);
            *(_QWORD *)(a2 + v183) = v184 + 1;
            v19 |= (unint64_t)(v185 & 0x7F) << v181;
            if (v185 < 0)
            {
              v23 = 0;
              v181 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__dpsSymptom;
              v25 = v182++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__dpsSymptom;
          goto LABEL_318;
        case 0x22u:
          v186 = 0;
          v187 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x400uLL;
          while (2)
          {
            v188 = *v3;
            v189 = *(_QWORD *)(a2 + v188);
            if (v189 == -1 || v189 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__crashTracerTrig;
              goto LABEL_317;
            }
            v190 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v189);
            *(_QWORD *)(a2 + v188) = v189 + 1;
            v19 |= (unint64_t)(v190 & 0x7F) << v186;
            if (v190 < 0)
            {
              v23 = 0;
              v186 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__crashTracerTrig;
              v25 = v187++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__crashTracerTrig;
          goto LABEL_318;
        case 0x23u:
          v191 = 0;
          v192 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x100000uLL;
          while (2)
          {
            v193 = *v3;
            v194 = *(_QWORD *)(a2 + v193);
            if (v194 == -1 || v194 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__rc1Stats;
              goto LABEL_317;
            }
            v195 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v194);
            *(_QWORD *)(a2 + v193) = v194 + 1;
            v19 |= (unint64_t)(v195 & 0x7F) << v191;
            if (v195 < 0)
            {
              v23 = 0;
              v191 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__rc1Stats;
              v25 = v192++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__rc1Stats;
          goto LABEL_318;
        case 0x24u:
          v196 = 0;
          v197 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x200000uLL;
          while (2)
          {
            v198 = *v3;
            v199 = *(_QWORD *)(a2 + v198);
            if (v199 == -1 || v199 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__rc2Stats;
              goto LABEL_317;
            }
            v200 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v199);
            *(_QWORD *)(a2 + v198) = v199 + 1;
            v19 |= (unint64_t)(v200 & 0x7F) << v196;
            if (v200 < 0)
            {
              v23 = 0;
              v196 += 7;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__rc2Stats;
              v25 = v197++ > 8;
              if (v25)
                goto LABEL_321;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__rc2Stats;
          goto LABEL_318;
        case 0x25u:
          v201 = 0;
          v202 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 156) |= 0x8000uLL;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v203 = *v3;
        v204 = *(_QWORD *)(a2 + v203);
        if (v204 == -1 || v204 >= *(_QWORD *)(a2 + *v4))
          break;
        v205 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v204);
        *(_QWORD *)(a2 + v203) = v204 + 1;
        v19 |= (unint64_t)(v205 & 0x7F) << v201;
        if ((v205 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__escoTrafficInd;
          goto LABEL_318;
        }
        v23 = 0;
        v201 += 7;
        v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__escoTrafficInd;
        v25 = v202++ > 8;
        if (v25)
          goto LABEL_321;
      }
      v24 = &OBJC_IVAR___AWDWiFiNWActivityAssoc__escoTrafficInd;
LABEL_317:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_318:
      v23 = *(_BYTE *)(a2 + *v5) ? 0 : v19;
LABEL_321:
      *(_DWORD *)(a1 + *v24) = v23;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiNWActivityBtCoexReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int *v26;
  int *v27;
  int *v28;
  uint64_t result;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  int *v110;
  AWDWiFiNWActivityBtCoexReqestReason *v111;
  uint64_t v112;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  v9 = (int *)MEMORY[0x24BE7AF30];
  v10 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    while (1)
    {
      v14 = *v3;
      v15 = *(_QWORD *)(a2 + v14);
      if (v15 == -1 || v15 >= *(_QWORD *)(a2 + *v4))
        break;
      v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v15);
      *(_QWORD *)(a2 + v14) = v15 + 1;
      v13 |= (unint64_t)(v16 & 0x7F) << v11;
      if ((v16 & 0x80) == 0)
        goto LABEL_12;
      v11 += 7;
      v17 = v12++ >= 9;
      if (v17)
      {
        v13 = 0;
        v18 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v18 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v13 = 0;
LABEL_14:
    if (v18 || (v13 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v13 >> 3))
    {
      case 1u:
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x800u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            goto LABEL_144;
          v20 += 7;
          v17 = v21++ >= 9;
          if (v17)
          {
            LODWORD(v22) = 0;
            goto LABEL_146;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_144:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_146:
        v112 = v8[835];
        goto LABEL_211;
      case 2u:
        v30 = 0;
        v31 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x100u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v22 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v17 = v31++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_150:
        v112 = v10[836];
        goto LABEL_211;
      case 3u:
        v35 = 0;
        v36 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x80u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v22 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v17 = v36++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_154;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_154:
        v112 = 44;
        goto LABEL_211;
      case 4u:
        v40 = 0;
        v41 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x20u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v22 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v17 = v41++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_158:
        v112 = 28;
        goto LABEL_211;
      case 5u:
        v45 = 0;
        v46 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x400u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v22 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v17 = v46++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_162:
        v112 = 56;
        goto LABEL_211;
      case 6u:
        v50 = 0;
        v51 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x4000u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v22 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v17 = v51++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_166;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_166:
        v112 = 72;
        goto LABEL_211;
      case 7u:
        v55 = 0;
        v56 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x40u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v22 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              v17 = v56++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_170:
        v112 = 40;
        goto LABEL_211;
      case 8u:
        v60 = 0;
        v61 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x200u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v22 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v17 = v61++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_174:
        v112 = 52;
        goto LABEL_211;
      case 9u:
        v65 = 0;
        v66 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x10000u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v22 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v17 = v66++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_178:
        v112 = 80;
        goto LABEL_211;
      case 0xAu:
        v70 = 0;
        v71 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x8000u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v22 |= (unint64_t)(v74 & 0x7F) << v70;
            if (v74 < 0)
            {
              v70 += 7;
              v17 = v71++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_182:
        v112 = 76;
        goto LABEL_211;
      case 0xBu:
        v75 = 0;
        v76 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 4u;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v78);
            *(_QWORD *)(a2 + v77) = v78 + 1;
            v22 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              v17 = v76++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_186:
        v112 = 16;
        goto LABEL_211;
      case 0xCu:
        v80 = 0;
        v81 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x10u;
        while (2)
        {
          v82 = *v3;
          v83 = *(_QWORD *)(a2 + v82);
          if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v83);
            *(_QWORD *)(a2 + v82) = v83 + 1;
            v22 |= (unint64_t)(v84 & 0x7F) << v80;
            if (v84 < 0)
            {
              v80 += 7;
              v17 = v81++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_190:
        v112 = 24;
        goto LABEL_211;
      case 0xDu:
        v85 = 0;
        v86 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 8u;
        while (2)
        {
          v87 = *v3;
          v88 = *(_QWORD *)(a2 + v87);
          if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v88);
            *(_QWORD *)(a2 + v87) = v88 + 1;
            v22 |= (unint64_t)(v89 & 0x7F) << v85;
            if (v89 < 0)
            {
              v85 += 7;
              v17 = v86++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_194:
        v112 = 20;
        goto LABEL_211;
      case 0xEu:
        v90 = 0;
        v91 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 2u;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v93);
            *(_QWORD *)(a2 + v92) = v93 + 1;
            v22 |= (unint64_t)(v94 & 0x7F) << v90;
            if (v94 < 0)
            {
              v90 += 7;
              v17 = v91++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_198;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_198:
        v112 = 12;
        goto LABEL_211;
      case 0xFu:
        v95 = 0;
        v96 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 1u;
        while (2)
        {
          v97 = *v3;
          v98 = *(_QWORD *)(a2 + v97);
          if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v98);
            *(_QWORD *)(a2 + v97) = v98 + 1;
            v22 |= (unint64_t)(v99 & 0x7F) << v95;
            if (v99 < 0)
            {
              v95 += 7;
              v17 = v96++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_202:
        v112 = 8;
        goto LABEL_211;
      case 0x10u:
        v100 = 0;
        v101 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x2000u;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v103);
            *(_QWORD *)(a2 + v102) = v103 + 1;
            v22 |= (unint64_t)(v104 & 0x7F) << v100;
            if (v104 < 0)
            {
              v100 += 7;
              v17 = v101++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_206:
        v112 = 68;
        goto LABEL_211;
      case 0x11u:
        v105 = 0;
        v106 = 0;
        v22 = 0;
        *(_DWORD *)(a1 + v7[834]) |= 0x1000u;
        while (2)
        {
          v107 = *v3;
          v108 = *(_QWORD *)(a2 + v107);
          if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v108);
            *(_QWORD *)(a2 + v107) = v108 + 1;
            v22 |= (unint64_t)(v109 & 0x7F) << v105;
            if (v109 < 0)
            {
              v105 += 7;
              v17 = v106++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_210:
        v112 = 64;
LABEL_211:
        *(_DWORD *)(a1 + v112) = v22;
        goto LABEL_212;
      case 0x12u:
        v110 = v10;
        v111 = objc_alloc_init(AWDWiFiNWActivityBtCoexReqestReason);

        *(_QWORD *)(a1 + 32) = v111;
        if (PBReaderPlaceMark() && AWDWiFiNWActivityBtCoexReqestReasonReadFrom((uint64_t)v111, a2))
        {
          PBReaderRecallMark();
          v10 = v110;
LABEL_212:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        v26 = v7;
        v27 = v8;
        v28 = v10;
        result = PBReaderSkipValueWithTag();
        v10 = v28;
        v8 = v27;
        v7 = v26;
        if (!(_DWORD)result)
          return result;
        goto LABEL_212;
    }
  }
}

BOOL AWDWiFiNWActivityBtCoexReqestReasonReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  uint64_t v33;
  int *v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v9 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__acl;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__sco;
    v12 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__esco;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 2u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_133;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_137;
          }
          v29 = v9;
          goto LABEL_134;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 0x1000u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_133;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_134;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 0x10u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_133;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_134;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 1u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__a2dp;
              goto LABEL_133;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__a2dp;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__a2dp;
          goto LABEL_134;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 0x2000u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__sniff;
              goto LABEL_133;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__sniff;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__sniff;
          goto LABEL_134;
        case 6u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 0x400u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__pagescan;
              goto LABEL_133;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__pagescan;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__pagescan;
          goto LABEL_134;
        case 7u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 0x40u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__inquiryscan;
              goto LABEL_133;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__inquiryscan;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__inquiryscan;
          goto LABEL_134;
        case 8u:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 0x200u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__page;
              goto LABEL_133;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__page;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__page;
          goto LABEL_134;
        case 9u:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 0x20u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__inquiry;
              goto LABEL_133;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__inquiry;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__inquiry;
          goto LABEL_134;
        case 0xAu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 0x80u;
          while (2)
          {
            v80 = *v4;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__mss;
              goto LABEL_133;
            }
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v24 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v28 = 0;
              v78 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__mss;
              v30 = v79++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__mss;
          goto LABEL_134;
        case 0xBu:
          v83 = 0;
          v84 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 0x800u;
          while (2)
          {
            v85 = *v4;
            v86 = *(_QWORD *)(a2 + v85);
            if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__park;
              goto LABEL_133;
            }
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v24 |= (unint64_t)(v87 & 0x7F) << v83;
            if (v87 < 0)
            {
              v28 = 0;
              v83 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__park;
              v30 = v84++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__park;
          goto LABEL_134;
        case 0xCu:
          v88 = 0;
          v89 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 4u;
          while (2)
          {
            v90 = *v4;
            v91 = *(_QWORD *)(a2 + v90);
            if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__ble;
              goto LABEL_133;
            }
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v91);
            *(_QWORD *)(a2 + v90) = v91 + 1;
            v24 |= (unint64_t)(v92 & 0x7F) << v88;
            if (v92 < 0)
            {
              v28 = 0;
              v88 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__ble;
              v30 = v89++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__ble;
          goto LABEL_134;
        case 0xDu:
          v93 = 0;
          v94 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 8u;
          while (2)
          {
            v95 = *v4;
            v96 = *(_QWORD *)(a2 + v95);
            if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__blescan;
              goto LABEL_133;
            }
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v24 |= (unint64_t)(v97 & 0x7F) << v93;
            if (v97 < 0)
            {
              v28 = 0;
              v93 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__blescan;
              v30 = v94++ > 8;
              if (v30)
                goto LABEL_137;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__blescan;
          goto LABEL_134;
        case 0xEu:
          v98 = 0;
          v99 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[853]) |= 0x100u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v2;
          v34 = v8;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v8 = v34;
          v2 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v100 = *v4;
        v101 = *(_QWORD *)(a2 + v100);
        if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v5))
          break;
        v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v101);
        *(_QWORD *)(a2 + v100) = v101 + 1;
        v24 |= (unint64_t)(v102 & 0x7F) << v98;
        if ((v102 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__other;
          goto LABEL_134;
        }
        v28 = 0;
        v98 += 7;
        v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__other;
        v30 = v99++ > 8;
        if (v30)
          goto LABEL_137;
      }
      v29 = &OBJC_IVAR___AWDWiFiNWActivityBtCoexReqestReason__other;
LABEL_133:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_134:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_137:
      *(_DWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDWiFiNWActivityControllerStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int *v30;
  AWDWiFiNWActivityScanActivity *v31;
  AWDWiFiNWActivityPowerPStats *v32;
  AWDWiFiNWActivityImpedingFunctions *v33;
  AWDWiFiNWActivityAggregateMetrics *v34;
  AWDWiFiNWActivityBtCoex *v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  AWDWiFiNWActivityRateAndAggregation *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  AWDWiFiNWActivityMpduWME *v83;
  AWDWiFiNWActivityMpduLost *v84;
  uint64_t v85;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
  v8 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    while (1)
    {
      v12 = *v3;
      v13 = *(_QWORD *)(a2 + v12);
      if (v13 == -1 || v13 >= *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
      *(_QWORD *)(a2 + v12) = v13 + 1;
      v11 |= (unint64_t)(v14 & 0x7F) << v9;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v9 += 7;
      v15 = v10++ >= 9;
      if (v15)
      {
        v11 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v11 = 0;
LABEL_14:
    if (v16 || (v11 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v11 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_WORD *)(a1 + v7[868]) |= 0x100u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_125;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_127;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_125:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_127:
        v85 = 64;
        goto LABEL_168;
      case 2u:
        v25 = 0;
        v26 = 0;
        v20 = 0;
        *(_WORD *)(a1 + v7[868]) |= 2u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v20 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v15 = v26++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_131:
        v85 = 24;
        goto LABEL_168;
      case 3u:
        v30 = v7;
        v31 = objc_alloc_init(AWDWiFiNWActivityScanActivity);

        *(_QWORD *)(a1 + 120) = v31;
        if (PBReaderPlaceMark() && AWDWiFiNWActivityScanActivityReadFrom((uint64_t)v31, a2))
          goto LABEL_37;
        return 0;
      case 4u:
        v30 = v7;
        v32 = objc_alloc_init(AWDWiFiNWActivityPowerPStats);

        *(_QWORD *)(a1 + 96) = v32;
        if (!PBReaderPlaceMark() || !AWDWiFiNWActivityPowerPStatsReadFrom((uint64_t)v32, a2))
          return 0;
        goto LABEL_37;
      case 5u:
        v30 = v7;
        v33 = objc_alloc_init(AWDWiFiNWActivityImpedingFunctions);

        *(_QWORD *)(a1 + 72) = v33;
        if (!PBReaderPlaceMark()
          || (AWDWiFiNWActivityImpedingFunctionsReadFrom((uint64_t)v33, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_37;
      case 6u:
        v30 = v7;
        v34 = objc_alloc_init(AWDWiFiNWActivityAggregateMetrics);

        *(_QWORD *)(a1 + 16) = v34;
        if (!PBReaderPlaceMark()
          || (AWDWiFiNWActivityAggregateMetricsReadFrom((uint64_t)v34, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_37;
      case 7u:
        v30 = v7;
        v35 = objc_alloc_init(AWDWiFiNWActivityBtCoex);

        *(_QWORD *)(a1 + 32) = v35;
        if (!PBReaderPlaceMark() || (AWDWiFiNWActivityBtCoexReadFrom((uint64_t)v35, a2) & 1) == 0)
          return 0;
        goto LABEL_37;
      case 8u:
        v36 = 0;
        v37 = 0;
        v20 = 0;
        *(_WORD *)(a1 + v7[868]) |= 0x20u;
        while (2)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v20 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v36 += 7;
              v15 = v37++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_135:
        v85 = 52;
        goto LABEL_168;
      case 9u:
        v41 = 0;
        v42 = 0;
        v20 = 0;
        *(_WORD *)(a1 + v7[868]) |= 0x40u;
        while (2)
        {
          v43 = *v3;
          v44 = *(_QWORD *)(a2 + v43);
          if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v20 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v41 += 7;
              v15 = v42++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_139:
        v85 = 56;
        goto LABEL_168;
      case 0xAu:
        v30 = v7;
        v46 = objc_alloc_init(AWDWiFiNWActivityRateAndAggregation);

        *(_QWORD *)(a1 + 88) = v46;
        if (PBReaderPlaceMark()
          && (AWDWiFiNWActivityRateAndAggregationReadFrom((uint64_t)v46, a2) & 1) != 0)
        {
          goto LABEL_37;
        }
        return 0;
      case 0xBu:
        v47 = 0;
        v48 = 0;
        v20 = 0;
        *(_WORD *)(a1 + v7[868]) |= 8u;
        while (2)
        {
          v49 = *v3;
          v50 = *(_QWORD *)(a2 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v50);
            *(_QWORD *)(a2 + v49) = v50 + 1;
            v20 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              v15 = v48++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_143:
        v85 = 44;
        goto LABEL_168;
      case 0xCu:
        v52 = 0;
        v53 = 0;
        v20 = 0;
        *(_WORD *)(a1 + v7[868]) |= 0x10u;
        while (2)
        {
          v54 = *v3;
          v55 = *(_QWORD *)(a2 + v54);
          if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v55);
            *(_QWORD *)(a2 + v54) = v55 + 1;
            v20 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              v15 = v53++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_147;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_147:
        v85 = 48;
        goto LABEL_168;
      case 0xDu:
        v57 = 0;
        v58 = 0;
        v20 = 0;
        *(_WORD *)(a1 + v7[868]) |= 4u;
        while (2)
        {
          v59 = *v3;
          v60 = *(_QWORD *)(a2 + v59);
          if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v60);
            *(_QWORD *)(a2 + v59) = v60 + 1;
            v20 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              v15 = v58++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_151;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_151:
        v85 = 40;
        goto LABEL_168;
      case 0xEu:
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_WORD *)(a1 + v7[868]) |= 1u;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v64 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v15 = v63++ >= 9;
              if (v15)
              {
                v64 = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v64 = 0;
LABEL_155:
        *(_QWORD *)(a1 + 8) = v64;
        goto LABEL_169;
      case 0xFu:
        v68 = 0;
        v69 = 0;
        v20 = 0;
        *(_WORD *)(a1 + v7[868]) |= 0x80u;
        while (2)
        {
          v70 = *v3;
          v71 = *(_QWORD *)(a2 + v70);
          if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v20 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              v15 = v69++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_159:
        v85 = 60;
        goto LABEL_168;
      case 0x10u:
        v73 = 0;
        v74 = 0;
        v20 = 0;
        *(_WORD *)(a1 + v7[868]) |= 0x200u;
        while (2)
        {
          v75 = *v3;
          v76 = *(_QWORD *)(a2 + v75);
          if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v20 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v73 += 7;
              v15 = v74++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_163:
        v85 = 80;
        goto LABEL_168;
      case 0x11u:
        v78 = 0;
        v79 = 0;
        v20 = 0;
        *(_WORD *)(a1 + v7[868]) |= 0x400u;
        while (2)
        {
          v80 = *v3;
          v81 = *(_QWORD *)(a2 + v80);
          if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v20 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v78 += 7;
              v15 = v79++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_167:
        v85 = 84;
LABEL_168:
        *(_DWORD *)(a1 + v85) = v20;
        goto LABEL_169;
      case 0x12u:
        v30 = v7;
        v83 = objc_alloc_init(AWDWiFiNWActivityMpduWME);
        objc_msgSend((id)a1, "addTxmpduWME:", v83);
        goto LABEL_118;
      case 0x13u:
        v30 = v7;
        v83 = objc_alloc_init(AWDWiFiNWActivityMpduWME);
        objc_msgSend((id)a1, "addRxmpduWME:", v83);
LABEL_118:

        if (!PBReaderPlaceMark() || !AWDWiFiNWActivityMpduWMEReadFrom((uint64_t)v83, a2))
          return 0;
        goto LABEL_37;
      case 0x14u:
        v30 = v7;
        v84 = objc_alloc_init(AWDWiFiNWActivityMpduLost);
        objc_msgSend((id)a1, "addRxmdpuLost:", v84);

        if (PBReaderPlaceMark() && (AWDWiFiNWActivityMpduLostReadFrom((uint64_t)v84, a2) & 1) != 0)
        {
LABEL_37:
          PBReaderRecallMark();
          v7 = v30;
LABEL_169:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_169;
    }
  }
}

uint64_t AWDWiFiNWActivityHistogramBinReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_31;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_33:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3) == 1)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiNWActivityImpedingFunctionsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  AWDWiFiNWActivityStateBin *v17;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  AWDWiFiTDM *v145;
  uint64_t v146;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(AWDWiFiNWActivityStateBin);
        objc_msgSend((id)a1, "addCTLMIndex:", v17);
        goto LABEL_27;
      case 2u:
        v17 = objc_alloc_init(AWDWiFiNWActivityStateBin);
        objc_msgSend((id)a1, "addTxPowerBackoffDB:", v17);
        goto LABEL_27;
      case 3u:
        v17 = objc_alloc_init(AWDWiFiNWActivityStateBin);
        objc_msgSend((id)a1, "addTxDutyCyclePct:", v17);
        goto LABEL_27;
      case 4u:
        v17 = objc_alloc_init(AWDWiFiNWActivityStateBin);
        objc_msgSend((id)a1, "addCTLMIndex1:", v17);
        goto LABEL_27;
      case 5u:
        v17 = objc_alloc_init(AWDWiFiNWActivityStateBin);
        objc_msgSend((id)a1, "addTxPowerBackoffDB1:", v17);
        goto LABEL_27;
      case 6u:
        v17 = objc_alloc_init(AWDWiFiNWActivityStateBin);
        objc_msgSend((id)a1, "addTxDutyCyclePct1:", v17);
LABEL_27:

        if (PBReaderPlaceMark() && (AWDWiFiNWActivityStateBinReadFrom((uint64_t)v17, a2) & 1) != 0)
          goto LABEL_29;
        return 0;
      case 7u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x80000u;
        while (2)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              v14 = v20++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_211;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_211:
        v146 = 144;
        goto LABEL_308;
      case 8u:
        v25 = 0;
        v26 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x100000u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v21 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_215;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_215:
        v146 = 148;
        goto LABEL_308;
      case 9u:
        v30 = 0;
        v31 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x200000u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v21 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_219;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_219:
        v146 = 152;
        goto LABEL_308;
      case 0xAu:
        v35 = 0;
        v36 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x400000u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v21 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_223;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_223:
        v146 = 156;
        goto LABEL_308;
      case 0xBu:
        v40 = 0;
        v41 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 1u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v21 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_227:
        v146 = 8;
        goto LABEL_308;
      case 0xCu:
        v45 = 0;
        v46 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 2u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v21 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_231;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_231:
        v146 = 12;
        goto LABEL_308;
      case 0xDu:
        v50 = 0;
        v51 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x8000u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v21 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_235;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_235:
        v146 = 96;
        goto LABEL_308;
      case 0xEu:
        v55 = 0;
        v56 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x10000u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v21 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              v14 = v56++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_239;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_239:
        v146 = 100;
        goto LABEL_308;
      case 0xFu:
        v60 = 0;
        v61 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x800000u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v21 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_243;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_243:
        v146 = 160;
        goto LABEL_308;
      case 0x10u:
        v65 = 0;
        v66 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x1000000u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v21 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_247;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_247:
        v146 = 164;
        goto LABEL_308;
      case 0x11u:
        v70 = 0;
        v71 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x10u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v21 |= (unint64_t)(v74 & 0x7F) << v70;
            if (v74 < 0)
            {
              v70 += 7;
              v14 = v71++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_251;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_251:
        v146 = 40;
        goto LABEL_308;
      case 0x12u:
        v75 = 0;
        v76 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x20u;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v78 + 1;
            v21 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              v14 = v76++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_255;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_255:
        v146 = 44;
        goto LABEL_308;
      case 0x13u:
        v80 = 0;
        v81 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 4u;
        while (2)
        {
          v82 = *v3;
          v83 = *(_QWORD *)(a2 + v82);
          if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
            *(_QWORD *)(a2 + v82) = v83 + 1;
            v21 |= (unint64_t)(v84 & 0x7F) << v80;
            if (v84 < 0)
            {
              v80 += 7;
              v14 = v81++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_259;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_259:
        v146 = 32;
        goto LABEL_308;
      case 0x14u:
        v85 = 0;
        v86 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 8u;
        while (2)
        {
          v87 = *v3;
          v88 = *(_QWORD *)(a2 + v87);
          if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
            *(_QWORD *)(a2 + v87) = v88 + 1;
            v21 |= (unint64_t)(v89 & 0x7F) << v85;
            if (v89 < 0)
            {
              v85 += 7;
              v14 = v86++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_263;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_263:
        v146 = 36;
        goto LABEL_308;
      case 0x15u:
        v90 = 0;
        v91 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x20000u;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
            *(_QWORD *)(a2 + v92) = v93 + 1;
            v21 |= (unint64_t)(v94 & 0x7F) << v90;
            if (v94 < 0)
            {
              v90 += 7;
              v14 = v91++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_267;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_267:
        v146 = 104;
        goto LABEL_308;
      case 0x16u:
        v95 = 0;
        v96 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x40000u;
        while (2)
        {
          v97 = *v3;
          v98 = *(_QWORD *)(a2 + v97);
          if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v98);
            *(_QWORD *)(a2 + v97) = v98 + 1;
            v21 |= (unint64_t)(v99 & 0x7F) << v95;
            if (v99 < 0)
            {
              v95 += 7;
              v14 = v96++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_271;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_271:
        v146 = 108;
        goto LABEL_308;
      case 0x17u:
        v100 = 0;
        v101 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x80u;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
            *(_QWORD *)(a2 + v102) = v103 + 1;
            v21 |= (unint64_t)(v104 & 0x7F) << v100;
            if (v104 < 0)
            {
              v100 += 7;
              v14 = v101++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_275;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_275:
        v146 = 52;
        goto LABEL_308;
      case 0x18u:
        v105 = 0;
        v106 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x40u;
        while (2)
        {
          v107 = *v3;
          v108 = *(_QWORD *)(a2 + v107);
          if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
            *(_QWORD *)(a2 + v107) = v108 + 1;
            v21 |= (unint64_t)(v109 & 0x7F) << v105;
            if (v109 < 0)
            {
              v105 += 7;
              v14 = v106++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_279;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_279:
        v146 = 48;
        goto LABEL_308;
      case 0x19u:
        v110 = 0;
        v111 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x100u;
        while (2)
        {
          v112 = *v3;
          v113 = *(_QWORD *)(a2 + v112);
          if (v113 == -1 || v113 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v113);
            *(_QWORD *)(a2 + v112) = v113 + 1;
            v21 |= (unint64_t)(v114 & 0x7F) << v110;
            if (v114 < 0)
            {
              v110 += 7;
              v14 = v111++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_283;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_283:
        v146 = 56;
        goto LABEL_308;
      case 0x1Au:
        v115 = 0;
        v116 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x200u;
        while (2)
        {
          v117 = *v3;
          v118 = *(_QWORD *)(a2 + v117);
          if (v118 == -1 || v118 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v119 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v118);
            *(_QWORD *)(a2 + v117) = v118 + 1;
            v21 |= (unint64_t)(v119 & 0x7F) << v115;
            if (v119 < 0)
            {
              v115 += 7;
              v14 = v116++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_287;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_287:
        v146 = 60;
        goto LABEL_308;
      case 0x1Bu:
        v120 = 0;
        v121 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x2000u;
        while (2)
        {
          v122 = *v3;
          v123 = *(_QWORD *)(a2 + v122);
          if (v123 == -1 || v123 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v124 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v123);
            *(_QWORD *)(a2 + v122) = v123 + 1;
            v21 |= (unint64_t)(v124 & 0x7F) << v120;
            if (v124 < 0)
            {
              v120 += 7;
              v14 = v121++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_291;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_291:
        v146 = 76;
        goto LABEL_308;
      case 0x1Cu:
        v125 = 0;
        v126 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x400u;
        while (2)
        {
          v127 = *v3;
          v128 = *(_QWORD *)(a2 + v127);
          if (v128 == -1 || v128 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v128);
            *(_QWORD *)(a2 + v127) = v128 + 1;
            v21 |= (unint64_t)(v129 & 0x7F) << v125;
            if (v129 < 0)
            {
              v125 += 7;
              v14 = v126++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_295;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_295:
        v146 = 64;
        goto LABEL_308;
      case 0x1Du:
        v130 = 0;
        v131 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x800u;
        while (2)
        {
          v132 = *v3;
          v133 = *(_QWORD *)(a2 + v132);
          if (v133 == -1 || v133 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v134 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v133);
            *(_QWORD *)(a2 + v132) = v133 + 1;
            v21 |= (unint64_t)(v134 & 0x7F) << v130;
            if (v134 < 0)
            {
              v130 += 7;
              v14 = v131++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_299;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_299:
        v146 = 68;
        goto LABEL_308;
      case 0x1Eu:
        v135 = 0;
        v136 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x1000u;
        while (2)
        {
          v137 = *v3;
          v138 = *(_QWORD *)(a2 + v137);
          if (v138 == -1 || v138 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
            *(_QWORD *)(a2 + v137) = v138 + 1;
            v21 |= (unint64_t)(v139 & 0x7F) << v135;
            if (v139 < 0)
            {
              v135 += 7;
              v14 = v136++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_303;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_303:
        v146 = 72;
        goto LABEL_308;
      case 0x1Fu:
        v140 = 0;
        v141 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 168) |= 0x4000u;
        while (2)
        {
          v142 = *v3;
          v143 = *(_QWORD *)(a2 + v142);
          if (v143 == -1 || v143 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v144 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v143);
            *(_QWORD *)(a2 + v142) = v143 + 1;
            v21 |= (unint64_t)(v144 & 0x7F) << v140;
            if (v144 < 0)
            {
              v140 += 7;
              v14 = v141++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_307;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_307:
        v146 = 80;
LABEL_308:
        *(_DWORD *)(a1 + v146) = v21;
        goto LABEL_309;
      case 0x20u:
        v145 = objc_alloc_init(AWDWiFiTDM);

        *(_QWORD *)(a1 + 88) = v145;
        if (PBReaderPlaceMark() && (AWDWiFiTDMReadFrom(v145, a2) & 1) != 0)
        {
LABEL_29:
          PBReaderRecallMark();
LABEL_309:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_309;
    }
  }
}

uint64_t AWDWiFiNWActivityInterfaceStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  AWDWiFiNWActivityTraffic *v24;
  AWDWiFiNWActivityPeerStats *v25;
  AWDWiFiNWActivityStateBin *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  AWDWiFiNWActivityAssoc *v37;
  AWDWiFiNWActivityStateBin *v38;
  uint64_t v39;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 68) |= 4u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_60;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_62;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_62:
        v39 = 64;
        goto LABEL_71;
      case 2u:
        v24 = objc_alloc_init(AWDWiFiNWActivityTraffic);
        objc_msgSend((id)a1, "addPackets:", v24);
        goto LABEL_30;
      case 3u:
        v24 = objc_alloc_init(AWDWiFiNWActivityTraffic);
        objc_msgSend((id)a1, "addBytes:", v24);
LABEL_30:

        if (!PBReaderPlaceMark() || (AWDWiFiNWActivityTrafficReadFrom((uint64_t)v24, a2) & 1) == 0)
          return 0;
        goto LABEL_58;
      case 4u:
        v25 = objc_alloc_init(AWDWiFiNWActivityPeerStats);
        objc_msgSend((id)a1, "addPeer:", v25);

        if (!PBReaderPlaceMark() || (AWDWiFiNWActivityPeerStatsReadFrom((uint64_t)v25, a2) & 1) == 0)
          return 0;
        goto LABEL_58;
      case 5u:
        v26 = objc_alloc_init(AWDWiFiNWActivityStateBin);
        objc_msgSend((id)a1, "addNpeers:", v26);

        if (PBReaderPlaceMark() && (AWDWiFiNWActivityStateBinReadFrom((uint64_t)v26, a2) & 1) != 0)
          goto LABEL_58;
        return 0;
      case 6u:
        v27 = 0;
        v28 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v19 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              v14 = v28++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_66:
        v39 = 36;
        goto LABEL_71;
      case 7u:
        v32 = 0;
        v33 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v19 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_70:
        v39 = 32;
LABEL_71:
        *(_DWORD *)(a1 + v39) = v19;
        goto LABEL_72;
      case 8u:
        v37 = objc_alloc_init(AWDWiFiNWActivityAssoc);

        *(_QWORD *)(a1 + 8) = v37;
        if (PBReaderPlaceMark() && AWDWiFiNWActivityAssocReadFrom((uint64_t)v37, a2))
          goto LABEL_58;
        return 0;
      case 9u:
        v38 = objc_alloc_init(AWDWiFiNWActivityStateBin);

        *(_QWORD *)(a1 + 16) = v38;
        if (PBReaderPlaceMark() && (AWDWiFiNWActivityStateBinReadFrom((uint64_t)v38, a2) & 1) != 0)
        {
LABEL_58:
          PBReaderRecallMark();
LABEL_72:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_72;
    }
  }
}

uint64_t AWDWiFiNWActivityMpduLostReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  AWDWiFiNWActivityMpduWME *v17;
  uint64_t v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
      {
        v17 = objc_alloc_init(AWDWiFiNWActivityMpduWME);

        v18 = 16;
      }
      else
      {
        if ((v10 >> 3) != 1)
        {
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
        }
        v17 = objc_alloc_init(AWDWiFiNWActivityMpduWME);

        v18 = 8;
      }
      *(_QWORD *)(a1 + v18) = v17;
      if (!PBReaderPlaceMark() || !AWDWiFiNWActivityMpduWMEReadFrom((uint64_t)v17, a2))
        return 0;
      PBReaderRecallMark();
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWiFiNWActivityMpduWMEReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid0;
              goto LABEL_85;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              v19 = 0;
              v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid0;
              goto LABEL_88;
            }
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid0;
          goto LABEL_86;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid1;
              goto LABEL_85;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid1;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid1;
          goto LABEL_86;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid2;
              goto LABEL_85;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid2;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid2;
          goto LABEL_86;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 8u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid3;
              goto LABEL_85;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid3;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid3;
          goto LABEL_86;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 0x10u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid4;
              goto LABEL_85;
            }
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v19 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v23 = v41++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid4;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid4;
          goto LABEL_86;
        case 6u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 0x20u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid5;
              goto LABEL_85;
            }
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v19 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v23 = v46++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid5;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid5;
          goto LABEL_86;
        case 7u:
          v50 = 0;
          v51 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 0x40u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid6;
              goto LABEL_85;
            }
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v19 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v23 = v51++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid6;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid6;
          goto LABEL_86;
        case 8u:
          v55 = 0;
          v56 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 72) |= 0x80u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v57 = *v3;
        v58 = *(_QWORD *)(a2 + v57);
        if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          break;
        v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
        *(_QWORD *)(a2 + v57) = v58 + 1;
        v19 |= (unint64_t)(v59 & 0x7F) << v55;
        if ((v59 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid7;
          goto LABEL_86;
        }
        v55 += 7;
        v23 = v56++ > 8;
        if (v23)
        {
          v19 = 0;
          v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid7;
          goto LABEL_88;
        }
      }
      v24 = &OBJC_IVAR___AWDWiFiNWActivityMpduWME__tid7;
LABEL_85:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_86:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_88:
      *(_QWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiNWActivityPeerStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  AWDWiFiNWActivityStateBin *v25;
  AWDWiFiNWActivityTraffic *v26;
  AWDWiFiNWActivityHistogramBin *v27;
  AWDWiFiNWActivityTxCompletions *v28;
  AWDWiFiNWActivityPerACTxCompletions *v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 0x100u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_132;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_134;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_132:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_134:
        v80 = 96;
        goto LABEL_175;
      case 2u:
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 48) = String;
        goto LABEL_176;
      case 3u:
        v25 = objc_alloc_init(AWDWiFiNWActivityStateBin);
        objc_msgSend((id)a1, "addRssi:", v25);
        goto LABEL_32;
      case 4u:
        v25 = objc_alloc_init(AWDWiFiNWActivityStateBin);
        objc_msgSend((id)a1, "addCca:", v25);
        goto LABEL_32;
      case 5u:
        v25 = objc_alloc_init(AWDWiFiNWActivityStateBin);
        objc_msgSend((id)a1, "addSnr:", v25);
LABEL_32:

        if (!PBReaderPlaceMark() || (AWDWiFiNWActivityStateBinReadFrom((uint64_t)v25, a2) & 1) == 0)
          return 0;
        goto LABEL_130;
      case 6u:
        v26 = objc_alloc_init(AWDWiFiNWActivityTraffic);
        objc_msgSend((id)a1, "addPackets:", v26);
        goto LABEL_37;
      case 7u:
        v26 = objc_alloc_init(AWDWiFiNWActivityTraffic);
        objc_msgSend((id)a1, "addBytes:", v26);
LABEL_37:

        if (!PBReaderPlaceMark() || (AWDWiFiNWActivityTrafficReadFrom((uint64_t)v26, a2) & 1) == 0)
          return 0;
        goto LABEL_130;
      case 8u:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addTxLatencyBK:", v27);
        goto LABEL_128;
      case 9u:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addTxLatencyBE:", v27);
        goto LABEL_128;
      case 0xAu:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addTxLatencyVO:", v27);
        goto LABEL_128;
      case 0xBu:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addTxLatencyVI:", v27);
        goto LABEL_128;
      case 0xCu:
        v28 = objc_alloc_init(AWDWiFiNWActivityTxCompletions);

        *(_QWORD *)(a1 + 40) = v28;
        if (!PBReaderPlaceMark() || !AWDWiFiNWActivityTxCompletionsReadFrom((uint64_t)v28, a2))
          return 0;
        goto LABEL_130;
      case 0xDu:
        v29 = objc_alloc_init(AWDWiFiNWActivityPerACTxCompletions);
        objc_msgSend((id)a1, "addAcCompletions:", v29);

        if (!PBReaderPlaceMark() || !AWDWiFiNWActivityPerACTxCompletionsReadFrom((uint64_t)v29, a2))
          return 0;
        goto LABEL_130;
      case 0xEu:
        v30 = 0;
        v31 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 0x200u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_138:
        v80 = 100;
        goto LABEL_175;
      case 0xFu:
        v35 = 0;
        v36 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 0x400u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_142:
        v80 = 176;
        goto LABEL_175;
      case 0x10u:
        v40 = 0;
        v41 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 1u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v19 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_146:
        v80 = 24;
        goto LABEL_175;
      case 0x11u:
        v45 = 0;
        v46 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 8u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v19 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_150:
        v80 = 64;
        goto LABEL_175;
      case 0x12u:
        v50 = 0;
        v51 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 0x20u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v19 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_154;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_154:
        v80 = 72;
        goto LABEL_175;
      case 0x13u:
        v55 = 0;
        v56 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 2u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v19 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              v14 = v56++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_158:
        v80 = 56;
        goto LABEL_175;
      case 0x14u:
        v60 = 0;
        v61 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 0x10u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v19 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_162:
        v80 = 68;
        goto LABEL_175;
      case 0x15u:
        v65 = 0;
        v66 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 4u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v19 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_166;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_166:
        v80 = 60;
        goto LABEL_175;
      case 0x16u:
        v70 = 0;
        v71 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 0x40u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v19 |= (unint64_t)(v74 & 0x7F) << v70;
            if (v74 < 0)
            {
              v70 += 7;
              v14 = v71++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_170:
        v80 = 88;
        goto LABEL_175;
      case 0x17u:
        v75 = 0;
        v76 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 224) |= 0x80u;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v78 + 1;
            v19 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              v14 = v76++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_174:
        v80 = 92;
LABEL_175:
        *(_DWORD *)(a1 + v80) = v19;
        goto LABEL_176;
      case 0x18u:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addRxLatencyTID0:", v27);
        goto LABEL_128;
      case 0x19u:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addRxLatencyTID1:", v27);
        goto LABEL_128;
      case 0x1Au:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addRxLatencyTID2:", v27);
        goto LABEL_128;
      case 0x1Bu:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addRxLatencyTID3:", v27);
        goto LABEL_128;
      case 0x1Cu:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addRxLatencyTID4:", v27);
        goto LABEL_128;
      case 0x1Du:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addRxLatencyTID5:", v27);
        goto LABEL_128;
      case 0x1Eu:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addRxLatencyTID6:", v27);
        goto LABEL_128;
      case 0x1Fu:
        v27 = objc_alloc_init(AWDWiFiNWActivityHistogramBin);
        objc_msgSend((id)a1, "addRxLatencyTID7:", v27);
LABEL_128:

        if (PBReaderPlaceMark() && (AWDWiFiNWActivityHistogramBinReadFrom((uint64_t)v27, a2) & 1) != 0)
        {
LABEL_130:
          PBReaderRecallMark();
LABEL_176:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_176;
    }
  }
}

BOOL AWDWiFiNWActivityPerACTxCompletionsReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  int *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  unint64_t v116;
  char v117;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v9 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__ac;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__success;
    v12 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__durSinceLastSuccessfulComp;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 1u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_157;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_161;
          }
          v29 = v9;
          goto LABEL_158;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x8000u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_157;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_158;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x20u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_157;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_158;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x80u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__failedComp;
              goto LABEL_157;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__failedComp;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__failedComp;
          goto LABEL_158;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x10u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__durSinceLastFailedComp;
              goto LABEL_157;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__durSinceLastFailedComp;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__durSinceLastFailedComp;
          goto LABEL_158;
        case 6u:
          v93 = 0;
          v94 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x40u;
          while (2)
          {
            v95 = *v4;
            v96 = *(_QWORD *)(a2 + v95);
            if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__expiredComp;
              goto LABEL_157;
            }
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v24 |= (unint64_t)(v97 & 0x7F) << v93;
            if (v97 < 0)
            {
              v28 = 0;
              v93 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__expiredComp;
              v30 = v94++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__expiredComp;
          goto LABEL_158;
        case 7u:
          v98 = 0;
          v99 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x200u;
          while (2)
          {
            v100 = *v4;
            v101 = *(_QWORD *)(a2 + v100);
            if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__noAckComp;
              goto LABEL_157;
            }
            v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v101);
            *(_QWORD *)(a2 + v100) = v101 + 1;
            v24 |= (unint64_t)(v102 & 0x7F) << v98;
            if (v102 < 0)
            {
              v28 = 0;
              v98 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__noAckComp;
              v30 = v99++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__noAckComp;
          goto LABEL_158;
        case 8u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x400u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__otherErrComp;
              goto LABEL_157;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__otherErrComp;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__otherErrComp;
          goto LABEL_158;
        case 9u:
          v103 = 0;
          v104 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 4u;
          while (2)
          {
            v105 = *v4;
            v106 = *(_QWORD *)(a2 + v105);
            if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__durSinceLastEnqueue;
              goto LABEL_157;
            }
            v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v106);
            *(_QWORD *)(a2 + v105) = v106 + 1;
            v24 |= (unint64_t)(v107 & 0x7F) << v103;
            if (v107 < 0)
            {
              v28 = 0;
              v103 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__durSinceLastEnqueue;
              v30 = v104++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__durSinceLastEnqueue;
          goto LABEL_158;
        case 0xAu:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x800u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__qeuedPackets;
              goto LABEL_157;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__qeuedPackets;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__qeuedPackets;
          goto LABEL_158;
        case 0xBu:
          v108 = 0;
          v109 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x1000u;
          while (2)
          {
            v110 = *v4;
            v111 = *(_QWORD *)(a2 + v110);
            if (v111 == -1 || v111 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__sinceLastEnqueueHowManyFailed;
              goto LABEL_157;
            }
            v112 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v111);
            *(_QWORD *)(a2 + v110) = v111 + 1;
            v24 |= (unint64_t)(v112 & 0x7F) << v108;
            if (v112 < 0)
            {
              v28 = 0;
              v108 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__sinceLastEnqueueHowManyFailed;
              v30 = v109++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__sinceLastEnqueueHowManyFailed;
          goto LABEL_158;
        case 0xCu:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x2000u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__sinceLastEnqueueHowManySuccess;
              goto LABEL_157;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__sinceLastEnqueueHowManySuccess;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__sinceLastEnqueueHowManySuccess;
          goto LABEL_158;
        case 0xDu:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x4000u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__sinceLastSuccessHowManyFailed;
              goto LABEL_157;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__sinceLastSuccessHowManyFailed;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__sinceLastSuccessHowManyFailed;
          goto LABEL_158;
        case 0xEu:
          v113 = 0;
          v114 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 8u;
          while (2)
          {
            v115 = *v4;
            v116 = *(_QWORD *)(a2 + v115);
            if (v116 == -1 || v116 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__durSinceLastEnqueueAtLastCheck;
              goto LABEL_157;
            }
            v117 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v116);
            *(_QWORD *)(a2 + v115) = v116 + 1;
            v24 |= (unint64_t)(v117 & 0x7F) << v113;
            if (v117 < 0)
            {
              v28 = 0;
              v113 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__durSinceLastEnqueueAtLastCheck;
              v30 = v114++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__durSinceLastEnqueueAtLastCheck;
          goto LABEL_158;
        case 0xFu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x10000u;
          while (2)
          {
            v80 = *v4;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__successfulCompletionsAtLastCheck;
              goto LABEL_157;
            }
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v24 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v28 = 0;
              v78 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__successfulCompletionsAtLastCheck;
              v30 = v79++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__successfulCompletionsAtLastCheck;
          goto LABEL_158;
        case 0x10u:
          v83 = 0;
          v84 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 0x100u;
          while (2)
          {
            v85 = *v4;
            v86 = *(_QWORD *)(a2 + v85);
            if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__failedCompletionsAtLastCheck;
              goto LABEL_157;
            }
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v24 |= (unint64_t)(v87 & 0x7F) << v83;
            if (v87 < 0)
            {
              v28 = 0;
              v83 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__failedCompletionsAtLastCheck;
              v30 = v84++ > 8;
              if (v30)
                goto LABEL_161;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__failedCompletionsAtLastCheck;
          goto LABEL_158;
        case 0x11u:
          v88 = 0;
          v89 = 0;
          v24 = 0;
          *(_DWORD *)(a1 + v8[978]) |= 2u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v8;
          v34 = v2;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v2 = v34;
          v8 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v90 = *v4;
        v91 = *(_QWORD *)(a2 + v90);
        if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v5))
          break;
        v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v91);
        *(_QWORD *)(a2 + v90) = v91 + 1;
        v24 |= (unint64_t)(v92 & 0x7F) << v88;
        if ((v92 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__dpsNotifications;
          goto LABEL_158;
        }
        v28 = 0;
        v88 += 7;
        v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__dpsNotifications;
        v30 = v89++ > 8;
        if (v30)
          goto LABEL_161;
      }
      v29 = &OBJC_IVAR___AWDWiFiNWActivityPerACTxCompletions__dpsNotifications;
LABEL_157:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_158:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_161:
      *(_DWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL AWDWiFiNWActivityPowerPStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerPStats__kRadioPhyReportTxDur;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerPStats__kRadioPhyReportTxDur;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerPStats__kRadioPhyReportTxDur;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_QWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerPStats__kRadioPhyReportRxDur;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerPStats__kRadioPhyReportRxDur;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerPStats__kRadioPhyReportRxDur;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWiFiNWActivityPowerStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerStats__kRadioPhyReportTxDur;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerStats__kRadioPhyReportTxDur;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerStats__kRadioPhyReportTxDur;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_QWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerStats__kRadioPhyReportRxDur;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerStats__kRadioPhyReportRxDur;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDWiFiNWActivityPowerStats__kRadioPhyReportRxDur;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiNWActivityRateAndAggregationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t result;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v6 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v3;
      v11 = *(_QWORD *)(a2 + v10);
      if (v11 == -1 || v11 >= *(_QWORD *)(a2 + *v4))
        break;
      v12 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v11);
      *(_QWORD *)(a2 + v10) = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      v13 = v8++ >= 9;
      if (v13)
      {
        v9 = 0;
        v14 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v14 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v9 = 0;
LABEL_14:
    v15 = v9 & 7;
    if (v14 || v15 == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v9 >> 3))
    {
      case 1u:
        if (v15 != 2)
        {
          v54 = 0;
          v55 = 0;
          v56 = 0;
          while (1)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
              break;
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v56 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v13 = v55++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_123;
          }
LABEL_122:
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_123:
          PBRepeatedUInt64Add();
LABEL_124:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        result = PBReaderPlaceMark();
        if ((_DWORD)result)
        {
          while (1)
          {
            if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4) || *(_BYTE *)(a2 + *v5))
              goto LABEL_86;
            v18 = 0;
            v19 = 0;
            v20 = 0;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if (v23 < 0)
              {
                v18 += 7;
                v13 = v19++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_31;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
            PBRepeatedUInt64Add();
          }
        }
        return result;
      case 2u:
        if (v15 != 2)
        {
          v60 = 0;
          v61 = 0;
          v62 = 0;
          while (1)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
              goto LABEL_122;
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v13 = v61++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_123;
          }
        }
        result = PBReaderPlaceMark();
        if (!(_DWORD)result)
          return result;
        while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
        {
          v30 = 0;
          v31 = 0;
          v32 = 0;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              v13 = v31++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_59;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_59:
          PBRepeatedUInt64Add();
        }
        goto LABEL_86;
      case 3u:
        if (v15 != 2)
        {
          v66 = 0;
          v67 = 0;
          v68 = 0;
          while (1)
          {
            v69 = *v3;
            v70 = *(_QWORD *)(a2 + v69);
            if (v70 == -1 || v70 >= *(_QWORD *)(a2 + *v4))
              goto LABEL_122;
            v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v70);
            *(_QWORD *)(a2 + v69) = v70 + 1;
            v68 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v13 = v67++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_123;
          }
        }
        result = PBReaderPlaceMark();
        if (!(_DWORD)result)
          return result;
        while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
        {
          v36 = 0;
          v37 = 0;
          v38 = 0;
          while (1)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
              break;
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              v13 = v37++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_72;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_72:
          PBRepeatedUInt64Add();
        }
        goto LABEL_86;
      case 4u:
        if (v15 != 2)
        {
          v72 = 0;
          v73 = 0;
          v74 = 0;
          while (1)
          {
            v75 = *v3;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
              goto LABEL_122;
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v74 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              v13 = v73++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_123;
          }
        }
        result = PBReaderPlaceMark();
        if (!(_DWORD)result)
          return result;
        while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
        {
          v42 = 0;
          v43 = 0;
          v44 = 0;
          while (1)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
              break;
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v44 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              v13 = v43++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_85;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
          PBRepeatedUInt64Add();
        }
LABEL_86:
        PBReaderRecallMark();
        goto LABEL_124;
      case 5u:
        if (v15 != 2)
        {
          v48 = 0;
          v49 = 0;
          v50 = 0;
          while (1)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
              goto LABEL_122;
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v52);
            *(_QWORD *)(a2 + v51) = v52 + 1;
            v50 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v13 = v49++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_123;
          }
        }
        result = PBReaderPlaceMark();
        if (!(_DWORD)result)
          return result;
        while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
        {
          v24 = 0;
          v25 = 0;
          v26 = 0;
          while (1)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
              break;
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              v13 = v25++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_44;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
          PBRepeatedUInt64Add();
        }
        goto LABEL_86;
      default:
        if ((PBReaderSkipValueWithTag() & 1) != 0)
          goto LABEL_124;
        return 0;
    }
  }
}

BOOL AWDWiFiNWActivityScanActivityReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  int *v29;
  BOOL v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  int *v86;
  int *v87;
  uint64_t v88;
  int *v89;
  int *v90;
  uint64_t v91;
  char v92;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDWiFiLPMReport__powerConsumptionDueToUserScan;
    v9 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__userCount;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__userDur;
    v12 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__roamCount;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 0x400u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_117;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_121;
          }
          v29 = v9;
          goto LABEL_118;
        case 2u:
          v31 = 0;
          v32 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 0x800u;
          while (2)
          {
            v33 = *v4;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_117;
            }
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v24 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v28 = 0;
              v31 += 7;
              v29 = v11;
              v30 = v32++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_118;
        case 3u:
          v36 = 0;
          v37 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 0x100u;
          while (2)
          {
            v38 = *v4;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_117;
            }
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v24 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v28 = 0;
              v36 += 7;
              v29 = v12;
              v30 = v37++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_118;
        case 4u:
          v41 = 0;
          v42 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 0x200u;
          while (2)
          {
            v43 = *v4;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__roamDur;
              goto LABEL_117;
            }
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v24 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v28 = 0;
              v41 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__roamDur;
              v30 = v42++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__roamDur;
          goto LABEL_118;
        case 5u:
          v46 = 0;
          v47 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 1u;
          while (2)
          {
            v48 = *v4;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__assocCount;
              goto LABEL_117;
            }
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v24 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v28 = 0;
              v46 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__assocCount;
              v30 = v47++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__assocCount;
          goto LABEL_118;
        case 6u:
          v51 = 0;
          v52 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 2u;
          while (2)
          {
            v53 = *v4;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__assocDur;
              goto LABEL_117;
            }
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v24 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v28 = 0;
              v51 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__assocDur;
              v30 = v52++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__assocDur;
          goto LABEL_118;
        case 7u:
          v56 = 0;
          v57 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 0x10u;
          while (2)
          {
            v58 = *v4;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoBSSIDCount;
              goto LABEL_117;
            }
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v24 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v28 = 0;
              v56 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoBSSIDCount;
              v30 = v57++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoBSSIDCount;
          goto LABEL_118;
        case 8u:
          v61 = 0;
          v62 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 0x20u;
          while (2)
          {
            v63 = *v4;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoBSSIDDur;
              goto LABEL_117;
            }
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v24 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v28 = 0;
              v61 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoBSSIDDur;
              v30 = v62++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoBSSIDDur;
          goto LABEL_118;
        case 9u:
          v66 = 0;
          v67 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 0x40u;
          while (2)
          {
            v68 = *v4;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoSSIDCount;
              goto LABEL_117;
            }
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v24 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v28 = 0;
              v66 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoSSIDCount;
              v30 = v67++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoSSIDCount;
          goto LABEL_118;
        case 0xAu:
          v71 = 0;
          v72 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 0x80u;
          while (2)
          {
            v73 = *v4;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoSSIDDur;
              goto LABEL_117;
            }
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v24 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v28 = 0;
              v71 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoSSIDDur;
              v30 = v72++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__pnoSSIDDur;
          goto LABEL_118;
        case 0xBu:
          v76 = 0;
          v77 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 4u;
          while (2)
          {
            v78 = *v4;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__otherCount;
              goto LABEL_117;
            }
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v24 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v28 = 0;
              v76 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__otherCount;
              v30 = v77++ > 8;
              if (v30)
                goto LABEL_121;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__otherCount;
          goto LABEL_118;
        case 0xCu:
          v81 = 0;
          v82 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[1007]) |= 8u;
          break;
        default:
          v86 = v9;
          v87 = v11;
          v88 = v2;
          v89 = v8;
          v90 = v12;
          v91 = a1;
          v92 = PBReaderSkipValueWithTag();
          a1 = v91;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v90;
          v8 = v89;
          v2 = v88;
          v11 = v87;
          v9 = v86;
          if ((v92 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v83 = *v4;
        v84 = *(_QWORD *)(a2 + v83);
        if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v5))
          break;
        v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v84);
        *(_QWORD *)(a2 + v83) = v84 + 1;
        v24 |= (unint64_t)(v85 & 0x7F) << v81;
        if ((v85 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__otherDur;
          goto LABEL_118;
        }
        v28 = 0;
        v81 += 7;
        v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__otherDur;
        v30 = v82++ > 8;
        if (v30)
          goto LABEL_121;
      }
      v29 = &OBJC_IVAR___AWDWiFiNWActivityScanActivity__otherDur;
LABEL_117:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_118:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_121:
      *(_DWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDWiFiNWActivityStateBinReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_31;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_33:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3) == 1)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiNWActivityTrafficReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v25) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWiFiNWActivityTxCompletionsReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  uint64_t v33;
  int *v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v9 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__success;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__expired;
    v12 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__nobuf;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 0x200u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_109;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_113;
          }
          v29 = v9;
          goto LABEL_110;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 2u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_109;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_110;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 0x40u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_109;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_110;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 0x20u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__noack;
              goto LABEL_109;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__noack;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__noack;
          goto LABEL_110;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 0x400u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__txfailure;
              goto LABEL_109;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__txfailure;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__txfailure;
          goto LABEL_110;
        case 6u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 0x100u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__noresources;
              goto LABEL_109;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__noresources;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__noresources;
          goto LABEL_110;
        case 7u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 8u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__ioerror;
              goto LABEL_109;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__ioerror;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__ioerror;
          goto LABEL_110;
        case 8u:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 0x10u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__mbfree;
              goto LABEL_109;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__mbfree;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__mbfree;
          goto LABEL_110;
        case 9u:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 1u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__chipmodeerror;
              goto LABEL_109;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__chipmodeerror;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__chipmodeerror;
          goto LABEL_110;
        case 0xAu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 0x80u;
          while (2)
          {
            v80 = *v4;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__noremotepeer;
              goto LABEL_109;
            }
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v24 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v28 = 0;
              v78 += 7;
              v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__noremotepeer;
              v30 = v79++ > 8;
              if (v30)
                goto LABEL_113;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__noremotepeer;
          goto LABEL_110;
        case 0xBu:
          v83 = 0;
          v84 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[2]) |= 4u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v2;
          v34 = v8;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v8 = v34;
          v2 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v85 = *v4;
        v86 = *(_QWORD *)(a2 + v85);
        if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
          break;
        v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
        *(_QWORD *)(a2 + v85) = v86 + 1;
        v24 |= (unint64_t)(v87 & 0x7F) << v83;
        if ((v87 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__internalerror;
          goto LABEL_110;
        }
        v28 = 0;
        v83 += 7;
        v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__internalerror;
        v30 = v84++ > 8;
        if (v30)
          goto LABEL_113;
      }
      v29 = &OBJC_IVAR___AWDWiFiNWActivityTxCompletions__internalerror;
LABEL_109:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_110:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_113:
      *(_DWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDWiFiOtaSystemInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *Data;
  id v25;
  uint64_t v26;
  void *String;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 136) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_60;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_62;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_62:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          Data = (void *)PBReaderReadData();

          v25 = Data;
          v26 = 16;
          goto LABEL_42;
        case 3u:
          String = (void *)PBReaderReadString();

          v25 = String;
          v26 = 56;
          goto LABEL_42;
        case 4u:
          v28 = (void *)PBReaderReadString();

          v25 = v28;
          v26 = 24;
          goto LABEL_42;
        case 5u:
          v29 = (void *)PBReaderReadString();

          v25 = v29;
          v26 = 128;
          goto LABEL_42;
        case 6u:
          v30 = (void *)PBReaderReadString();

          v25 = v30;
          v26 = 88;
          goto LABEL_42;
        case 7u:
          v31 = (void *)PBReaderReadString();

          v25 = v31;
          v26 = 96;
          goto LABEL_42;
        case 8u:
          v32 = (void *)PBReaderReadString();

          v25 = v32;
          v26 = 104;
          goto LABEL_42;
        case 9u:
          v33 = (void *)PBReaderReadString();

          v25 = v33;
          v26 = 112;
          goto LABEL_42;
        case 0xAu:
          v34 = (void *)PBReaderReadString();

          v25 = v34;
          v26 = 120;
          goto LABEL_42;
        case 0xBu:
          v35 = (void *)PBReaderReadString();

          v25 = v35;
          v26 = 80;
          goto LABEL_42;
        case 0xCu:
          v36 = (void *)PBReaderReadString();

          v25 = v36;
          v26 = 72;
          goto LABEL_42;
        case 0xDu:
          v37 = (void *)PBReaderReadString();

          v25 = v37;
          v26 = 64;
          goto LABEL_42;
        case 0xEu:
          v38 = (void *)PBReaderReadString();

          v25 = v38;
          v26 = 40;
          goto LABEL_42;
        case 0xFu:
          v39 = (void *)PBReaderReadString();

          v25 = v39;
          v26 = 48;
LABEL_42:
          *(_QWORD *)(a1 + v26) = v25;
          continue;
        case 0x10u:
          v40 = 0;
          v41 = 0;
          v42 = 0;
          *(_BYTE *)(a1 + 136) |= 2u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v42) = 0;
LABEL_66:
          v51 = 32;
          goto LABEL_71;
        case 0x11u:
          v46 = 0;
          v47 = 0;
          v42 = 0;
          *(_BYTE *)(a1 + 136) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v48 = *v3;
        v49 = *(_QWORD *)(a2 + v48);
        if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
          break;
        v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
        *(_QWORD *)(a2 + v48) = v49 + 1;
        v42 |= (unint64_t)(v50 & 0x7F) << v46;
        if ((v50 & 0x80) == 0)
          goto LABEL_68;
        v46 += 7;
        v14 = v47++ >= 9;
        if (v14)
        {
          LODWORD(v42) = 0;
          goto LABEL_70;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_68:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v42) = 0;
LABEL_70:
      v51 = 36;
LABEL_71:
      *(_DWORD *)(a1 + v51) = v42;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiP2PAirplayMetricsReadFrom(_DWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  AWDWifiP2PAirplayHistogramBin *v146;
  char v147;
  unsigned int v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  char v152;
  unsigned int v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  char v157;
  unsigned int v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  char v167;
  unsigned int v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  char v172;
  unsigned int v173;
  uint64_t v174;
  unint64_t v175;
  char v176;
  char v177;
  unsigned int v178;
  uint64_t v179;
  unint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  BOOL v184;
  uint64_t v185;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        a1[40] |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_246;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_248;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_246:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_248:
        v182 = 4;
        goto LABEL_273;
      case 2u:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        a1[40] |= 0x800000u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_252;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_252:
        v183 = 36;
        goto LABEL_371;
      case 3u:
        v30 = 0;
        v31 = 0;
        v26 = 0;
        a1[40] |= 0x100000u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v26 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_256:
        v183 = 33;
        goto LABEL_371;
      case 4u:
        v35 = 0;
        v36 = 0;
        v26 = 0;
        a1[40] |= 0x10u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v26 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_260:
        v183 = 15;
        goto LABEL_371;
      case 5u:
        v40 = 0;
        v41 = 0;
        v26 = 0;
        a1[40] |= 0x200000u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v26 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_264:
        v183 = 34;
        goto LABEL_371;
      case 6u:
        v45 = 0;
        v46 = 0;
        v19 = 0;
        a1[40] |= 4u;
        while (2)
        {
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v19 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_268:
        v182 = 6;
        goto LABEL_273;
      case 7u:
        v50 = 0;
        v51 = 0;
        v19 = 0;
        a1[40] |= 1u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v19 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_272:
        v182 = 2;
LABEL_273:
        *(_QWORD *)&a1[v182] = v19;
        goto LABEL_372;
      case 8u:
        v55 = 0;
        v56 = 0;
        v26 = 0;
        a1[40] |= 0x400000u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v26 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              v14 = v56++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_277:
        v183 = 35;
        goto LABEL_371;
      case 9u:
        v60 = 0;
        v61 = 0;
        v26 = 0;
        a1[40] |= 8u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v26 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_281:
        v183 = 14;
        goto LABEL_371;
      case 0xAu:
        v65 = 0;
        v66 = 0;
        v26 = 0;
        a1[40] |= 0x1000000u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v26 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_285;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_285:
        v183 = 37;
        goto LABEL_371;
      case 0xBu:
        v70 = 0;
        v71 = 0;
        v26 = 0;
        a1[40] |= 0x8000u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v26 |= (unint64_t)(v74 & 0x7F) << v70;
            if (v74 < 0)
            {
              v70 += 7;
              v14 = v71++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_289;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_289:
        v183 = 28;
        goto LABEL_371;
      case 0xCu:
        v75 = 0;
        v76 = 0;
        v26 = 0;
        a1[40] |= 0x80u;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v78 + 1;
            v26 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              v14 = v76++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_293:
        v183 = 18;
        goto LABEL_371;
      case 0xDu:
        v80 = 0;
        v81 = 0;
        v26 = 0;
        a1[40] |= 0x80000u;
        while (2)
        {
          v82 = *v3;
          v83 = *(_QWORD *)(a2 + v82);
          if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
            *(_QWORD *)(a2 + v82) = v83 + 1;
            v26 |= (unint64_t)(v84 & 0x7F) << v80;
            if (v84 < 0)
            {
              v80 += 7;
              v14 = v81++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_297:
        v183 = 32;
        goto LABEL_371;
      case 0xEu:
        v85 = 0;
        v86 = 0;
        v26 = 0;
        a1[40] |= 0x100u;
        while (2)
        {
          v87 = *v3;
          v88 = *(_QWORD *)(a2 + v87);
          if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
            *(_QWORD *)(a2 + v87) = v88 + 1;
            v26 |= (unint64_t)(v89 & 0x7F) << v85;
            if (v89 < 0)
            {
              v85 += 7;
              v14 = v86++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_301;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_301:
        v183 = 19;
        goto LABEL_371;
      case 0xFu:
        v90 = 0;
        v91 = 0;
        v26 = 0;
        a1[40] |= 0x800u;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
            *(_QWORD *)(a2 + v92) = v93 + 1;
            v26 |= (unint64_t)(v94 & 0x7F) << v90;
            if (v94 < 0)
            {
              v90 += 7;
              v14 = v91++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_305:
        v183 = 24;
        goto LABEL_371;
      case 0x10u:
        v95 = 0;
        v96 = 0;
        v26 = 0;
        a1[40] |= 0x10000u;
        while (2)
        {
          v97 = *v3;
          v98 = *(_QWORD *)(a2 + v97);
          if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v98);
            *(_QWORD *)(a2 + v97) = v98 + 1;
            v26 |= (unint64_t)(v99 & 0x7F) << v95;
            if (v99 < 0)
            {
              v95 += 7;
              v14 = v96++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_309;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_309:
        v183 = 29;
        goto LABEL_371;
      case 0x11u:
        v100 = 0;
        v101 = 0;
        v26 = 0;
        a1[40] |= 0x200u;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
            *(_QWORD *)(a2 + v102) = v103 + 1;
            v26 |= (unint64_t)(v104 & 0x7F) << v100;
            if (v104 < 0)
            {
              v100 += 7;
              v14 = v101++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_313:
        v183 = 20;
        goto LABEL_371;
      case 0x12u:
        v105 = 0;
        v106 = 0;
        v26 = 0;
        a1[40] |= 0x40000u;
        while (2)
        {
          v107 = *v3;
          v108 = *(_QWORD *)(a2 + v107);
          if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
            *(_QWORD *)(a2 + v107) = v108 + 1;
            v26 |= (unint64_t)(v109 & 0x7F) << v105;
            if (v109 < 0)
            {
              v105 += 7;
              v14 = v106++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_317:
        v183 = 31;
        goto LABEL_371;
      case 0x13u:
        v110 = 0;
        v111 = 0;
        v112 = 0;
        a1[40] |= 0x4000000u;
        while (2)
        {
          v113 = *v3;
          v114 = *(_QWORD *)(a2 + v113);
          if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v114 + 1;
            v112 |= (unint64_t)(v115 & 0x7F) << v110;
            if (v115 < 0)
            {
              v110 += 7;
              v14 = v111++ >= 9;
              if (v14)
              {
                v112 = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v112 = 0;
LABEL_321:
        v184 = v112 != 0;
        v185 = 153;
        goto LABEL_342;
      case 0x14u:
        v116 = 0;
        v117 = 0;
        v118 = 0;
        a1[40] |= 0x2000000u;
        while (2)
        {
          v119 = *v3;
          v120 = *(_QWORD *)(a2 + v119);
          if (v120 == -1 || v120 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v120);
            *(_QWORD *)(a2 + v119) = v120 + 1;
            v118 |= (unint64_t)(v121 & 0x7F) << v116;
            if (v121 < 0)
            {
              v116 += 7;
              v14 = v117++ >= 9;
              if (v14)
              {
                v118 = 0;
                goto LABEL_325;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v118 = 0;
LABEL_325:
        v184 = v118 != 0;
        v185 = 152;
        goto LABEL_342;
      case 0x15u:
        v122 = 0;
        v123 = 0;
        v124 = 0;
        a1[40] |= 0x8000000u;
        while (2)
        {
          v125 = *v3;
          v126 = *(_QWORD *)(a2 + v125);
          if (v126 == -1 || v126 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v127 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v126);
            *(_QWORD *)(a2 + v125) = v126 + 1;
            v124 |= (unint64_t)(v127 & 0x7F) << v122;
            if (v127 < 0)
            {
              v122 += 7;
              v14 = v123++ >= 9;
              if (v14)
              {
                v124 = 0;
                goto LABEL_329;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v124 = 0;
LABEL_329:
        v184 = v124 != 0;
        v185 = 154;
        goto LABEL_342;
      case 0x16u:
        v128 = 0;
        v129 = 0;
        v130 = 0;
        a1[40] |= 0x40000000u;
        while (2)
        {
          v131 = *v3;
          v132 = *(_QWORD *)(a2 + v131);
          if (v132 == -1 || v132 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v132);
            *(_QWORD *)(a2 + v131) = v132 + 1;
            v130 |= (unint64_t)(v133 & 0x7F) << v128;
            if (v133 < 0)
            {
              v128 += 7;
              v14 = v129++ >= 9;
              if (v14)
              {
                v130 = 0;
                goto LABEL_333;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v130 = 0;
LABEL_333:
        v184 = v130 != 0;
        v185 = 157;
        goto LABEL_342;
      case 0x17u:
        v134 = 0;
        v135 = 0;
        v136 = 0;
        a1[40] |= 0x20000000u;
        while (2)
        {
          v137 = *v3;
          v138 = *(_QWORD *)(a2 + v137);
          if (v138 == -1 || v138 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
            *(_QWORD *)(a2 + v137) = v138 + 1;
            v136 |= (unint64_t)(v139 & 0x7F) << v134;
            if (v139 < 0)
            {
              v134 += 7;
              v14 = v135++ >= 9;
              if (v14)
              {
                v136 = 0;
                goto LABEL_337;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v136 = 0;
LABEL_337:
        v184 = v136 != 0;
        v185 = 156;
        goto LABEL_342;
      case 0x18u:
        v140 = 0;
        v141 = 0;
        v142 = 0;
        a1[40] |= 0x10000000u;
        while (2)
        {
          v143 = *v3;
          v144 = *(_QWORD *)(a2 + v143);
          if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v144 + 1;
            v142 |= (unint64_t)(v145 & 0x7F) << v140;
            if (v145 < 0)
            {
              v140 += 7;
              v14 = v141++ >= 9;
              if (v14)
              {
                v142 = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v142 = 0;
LABEL_341:
        v184 = v142 != 0;
        v185 = 155;
LABEL_342:
        *((_BYTE *)a1 + v185) = v184;
        goto LABEL_372;
      case 0x19u:
        v146 = objc_alloc_init(AWDWifiP2PAirplayHistogramBin);
        objc_msgSend(a1, "addPeerRSSI:", v146);
        goto LABEL_193;
      case 0x1Au:
        v146 = objc_alloc_init(AWDWifiP2PAirplayHistogramBin);
        objc_msgSend(a1, "addAvgCCASocialChannel:", v146);
        goto LABEL_193;
      case 0x1Bu:
        v146 = objc_alloc_init(AWDWifiP2PAirplayHistogramBin);
        objc_msgSend(a1, "addAvgCCASelfInfraChannel:", v146);
        goto LABEL_193;
      case 0x1Cu:
        v146 = objc_alloc_init(AWDWifiP2PAirplayHistogramBin);
        objc_msgSend(a1, "addAvgCCAPeerInfraChannel:", v146);
LABEL_193:

        if (PBReaderPlaceMark() && AWDWifiP2PAirplayHistogramBinReadFrom((uint64_t)v146, a2))
        {
          PBReaderRecallMark();
LABEL_372:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0x1Du:
        v147 = 0;
        v148 = 0;
        v26 = 0;
        a1[40] |= 0x20000u;
        while (2)
        {
          v149 = *v3;
          v150 = *(_QWORD *)(a2 + v149);
          if (v150 == -1 || v150 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v151 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v150);
            *(_QWORD *)(a2 + v149) = v150 + 1;
            v26 |= (unint64_t)(v151 & 0x7F) << v147;
            if (v151 < 0)
            {
              v147 += 7;
              v14 = v148++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_346;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_346:
        v183 = 30;
        goto LABEL_371;
      case 0x1Eu:
        v152 = 0;
        v153 = 0;
        v26 = 0;
        a1[40] |= 0x400u;
        while (2)
        {
          v154 = *v3;
          v155 = *(_QWORD *)(a2 + v154);
          if (v155 == -1 || v155 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v156 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v155);
            *(_QWORD *)(a2 + v154) = v155 + 1;
            v26 |= (unint64_t)(v156 & 0x7F) << v152;
            if (v156 < 0)
            {
              v152 += 7;
              v14 = v153++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_350;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_350:
        v183 = 21;
        goto LABEL_371;
      case 0x1Fu:
        v157 = 0;
        v158 = 0;
        v26 = 0;
        a1[40] |= 0x1000u;
        while (2)
        {
          v159 = *v3;
          v160 = *(_QWORD *)(a2 + v159);
          if (v160 == -1 || v160 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
            *(_QWORD *)(a2 + v159) = v160 + 1;
            v26 |= (unint64_t)(v161 & 0x7F) << v157;
            if (v161 < 0)
            {
              v157 += 7;
              v14 = v158++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_354;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_354:
        v183 = 25;
        goto LABEL_371;
      case 0x20u:
        v162 = 0;
        v163 = 0;
        v26 = 0;
        a1[40] |= 0x4000u;
        while (2)
        {
          v164 = *v3;
          v165 = *(_QWORD *)(a2 + v164);
          if (v165 == -1 || v165 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v166 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v165);
            *(_QWORD *)(a2 + v164) = v165 + 1;
            v26 |= (unint64_t)(v166 & 0x7F) << v162;
            if (v166 < 0)
            {
              v162 += 7;
              v14 = v163++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_358;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_358:
        v183 = 27;
        goto LABEL_371;
      case 0x21u:
        v167 = 0;
        v168 = 0;
        v26 = 0;
        a1[40] |= 0x2000u;
        while (2)
        {
          v169 = *v3;
          v170 = *(_QWORD *)(a2 + v169);
          if (v170 == -1 || v170 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v171 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v170);
            *(_QWORD *)(a2 + v169) = v170 + 1;
            v26 |= (unint64_t)(v171 & 0x7F) << v167;
            if (v171 < 0)
            {
              v167 += 7;
              v14 = v168++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_362;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_362:
        v183 = 26;
        goto LABEL_371;
      case 0x22u:
        v172 = 0;
        v173 = 0;
        v26 = 0;
        a1[40] |= 0x20u;
        while (2)
        {
          v174 = *v3;
          v175 = *(_QWORD *)(a2 + v174);
          if (v175 == -1 || v175 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v176 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v175);
            *(_QWORD *)(a2 + v174) = v175 + 1;
            v26 |= (unint64_t)(v176 & 0x7F) << v172;
            if (v176 < 0)
            {
              v172 += 7;
              v14 = v173++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_366;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_366:
        v183 = 16;
        goto LABEL_371;
      case 0x23u:
        v177 = 0;
        v178 = 0;
        v26 = 0;
        a1[40] |= 0x40u;
        while (2)
        {
          v179 = *v3;
          v180 = *(_QWORD *)(a2 + v179);
          if (v180 == -1 || v180 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v181 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v180);
            *(_QWORD *)(a2 + v179) = v180 + 1;
            v26 |= (unint64_t)(v181 & 0x7F) << v177;
            if (v181 < 0)
            {
              v177 += 7;
              v14 = v178++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_370;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_370:
        v183 = 17;
LABEL_371:
        a1[v183] = v26;
        goto LABEL_372;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_372;
    }
  }
}

BOOL AWDWiFiQualityScoreReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiQualityScore__channelQuality;
              goto LABEL_61;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___AWDWiFiQualityScore__channelQuality;
              goto LABEL_64;
            }
          }
          v24 = &OBJC_IVAR___AWDWiFiQualityScore__channelQuality;
          goto LABEL_62;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiQualityScore__txLoss;
              goto LABEL_61;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDWiFiQualityScore__txLoss;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiQualityScore__txLoss;
          goto LABEL_62;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiQualityScore__rxLoss;
              goto LABEL_61;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDWiFiQualityScore__rxLoss;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiQualityScore__rxLoss;
          goto LABEL_62;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiQualityScore__txLatency;
              goto LABEL_61;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDWiFiQualityScore__txLatency;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiQualityScore__txLatency;
          goto LABEL_62;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v42 = *v3;
        v43 = *(_QWORD *)(a2 + v42);
        if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
        *(_QWORD *)(a2 + v42) = v43 + 1;
        v19 |= (unint64_t)(v44 & 0x7F) << v40;
        if ((v44 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDWiFiQualityScore__rxLatency;
          goto LABEL_62;
        }
        v40 += 7;
        v23 = v41++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___AWDWiFiQualityScore__rxLatency;
          goto LABEL_64;
        }
      }
      v24 = &OBJC_IVAR___AWDWiFiQualityScore__rxLatency;
LABEL_61:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_64:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWiFiRangingRttDataReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v20;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  int *v29;
  BOOL v30;
  int *v31;
  int *v32;
  uint64_t v33;
  int *v34;
  int *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  unint64_t v106;
  char v107;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v9 = &OBJC_IVAR___AWDWiFiRangingRttData__flags;
    v10 = (int *)MEMORY[0x24BE7AF30];
    v11 = &OBJC_IVAR___AWDWiFiRangingRttData__rtt;
    v12 = &OBJC_IVAR___AWDWiFiRangingRttData__rssi;
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = *v4;
        v17 = *(_QWORD *)(a2 + v16);
        if (v17 == -1 || v17 >= *(_QWORD *)(a2 + *v5))
          break;
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v17);
        *(_QWORD *)(a2 + v16) = v17 + 1;
        v15 |= (unint64_t)(v18 & 0x7F) << v13;
        if ((v18 & 0x80) == 0)
          goto LABEL_12;
        v13 += 7;
        if (v14++ >= 9)
        {
          v15 = 0;
          v20 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v20 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v15 = 0;
LABEL_14:
      if (v20 || (v15 & 7) == 4)
        break;
      switch((v15 >> 3))
      {
        case 1u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 8u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v9;
              goto LABEL_141;
            }
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if ((v27 & 0x80) == 0)
              break;
            v28 = 0;
            v22 += 7;
            v29 = v9;
            v30 = v23++ > 8;
            if (v30)
              goto LABEL_145;
          }
          v29 = v9;
          goto LABEL_142;
        case 2u:
          v38 = 0;
          v39 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x1000u;
          while (2)
          {
            v40 = *v4;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v11;
              goto LABEL_141;
            }
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v24 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v28 = 0;
              v38 += 7;
              v29 = v11;
              v30 = v39++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = v11;
          goto LABEL_142;
        case 3u:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x800u;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = v12;
              goto LABEL_141;
            }
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v24 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v28 = 0;
              v43 += 7;
              v29 = v12;
              v30 = v44++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = v12;
          goto LABEL_142;
        case 4u:
          v48 = 0;
          v49 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x2000u;
          while (2)
          {
            v50 = *v4;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__snr;
              goto LABEL_141;
            }
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v24 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v28 = 0;
              v48 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__snr;
              v30 = v49++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__snr;
          goto LABEL_142;
        case 5u:
          v53 = 0;
          v54 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 4u;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__coreId;
              goto LABEL_141;
            }
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v24 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v28 = 0;
              v53 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__coreId;
              v30 = v54++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__coreId;
          goto LABEL_142;
        case 6u:
          v58 = 0;
          v59 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x10u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__losPeakRatio;
              goto LABEL_141;
            }
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v24 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v28 = 0;
              v58 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__losPeakRatio;
              v30 = v59++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__losPeakRatio;
          goto LABEL_142;
        case 7u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 1u;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__bitErrorRate;
              goto LABEL_141;
            }
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v24 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v28 = 0;
              v63 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__bitErrorRate;
              v30 = v64++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__bitErrorRate;
          goto LABEL_142;
        case 8u:
          v68 = 0;
          v69 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x400u;
          while (2)
          {
            v70 = *v4;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__phyError;
              goto LABEL_141;
            }
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v24 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v28 = 0;
              v68 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__phyError;
              v30 = v69++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__phyError;
          goto LABEL_142;
        case 9u:
          v73 = 0;
          v74 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x4000u;
          while (2)
          {
            v75 = *v4;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__status;
              goto LABEL_141;
            }
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v24 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v28 = 0;
              v73 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__status;
              v30 = v74++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__status;
          goto LABEL_142;
        case 0xAu:
          v78 = 0;
          v79 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x200u;
          while (2)
          {
            v80 = *v4;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerSnr;
              goto LABEL_141;
            }
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v24 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v28 = 0;
              v78 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerSnr;
              v30 = v79++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerSnr;
          goto LABEL_142;
        case 0xBu:
          v83 = 0;
          v84 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x80u;
          while (2)
          {
            v85 = *v4;
            v86 = *(_QWORD *)(a2 + v85);
            if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerLosPeakRatio;
              goto LABEL_141;
            }
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v24 |= (unint64_t)(v87 & 0x7F) << v83;
            if (v87 < 0)
            {
              v28 = 0;
              v83 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerLosPeakRatio;
              v30 = v84++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerLosPeakRatio;
          goto LABEL_142;
        case 0xCu:
          v88 = 0;
          v89 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x40u;
          while (2)
          {
            v90 = *v4;
            v91 = *(_QWORD *)(a2 + v90);
            if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerCoreId;
              goto LABEL_141;
            }
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v91);
            *(_QWORD *)(a2 + v90) = v91 + 1;
            v24 |= (unint64_t)(v92 & 0x7F) << v88;
            if (v92 < 0)
            {
              v28 = 0;
              v88 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerCoreId;
              v30 = v89++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerCoreId;
          goto LABEL_142;
        case 0xDu:
          v93 = 0;
          v94 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x20u;
          while (2)
          {
            v95 = *v4;
            v96 = *(_QWORD *)(a2 + v95);
            if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerBitErrorRate;
              goto LABEL_141;
            }
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v24 |= (unint64_t)(v97 & 0x7F) << v93;
            if (v97 < 0)
            {
              v28 = 0;
              v93 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerBitErrorRate;
              v30 = v94++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerBitErrorRate;
          goto LABEL_142;
        case 0xEu:
          v98 = 0;
          v99 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 0x100u;
          while (2)
          {
            v100 = *v4;
            v101 = *(_QWORD *)(a2 + v100);
            if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v5))
            {
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerPhyError;
              goto LABEL_141;
            }
            v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v101);
            *(_QWORD *)(a2 + v100) = v101 + 1;
            v24 |= (unint64_t)(v102 & 0x7F) << v98;
            if (v102 < 0)
            {
              v28 = 0;
              v98 += 7;
              v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerPhyError;
              v30 = v99++ > 8;
              if (v30)
                goto LABEL_145;
              continue;
            }
            break;
          }
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__peerPhyError;
          goto LABEL_142;
        case 0xFu:
          v103 = 0;
          v104 = 0;
          v24 = 0;
          *(_WORD *)(a1 + v8[74]) |= 2u;
          break;
        default:
          v31 = v9;
          v32 = v11;
          v33 = v2;
          v34 = v8;
          v35 = v12;
          v36 = a1;
          v37 = PBReaderSkipValueWithTag();
          a1 = v36;
          v6 = (int *)MEMORY[0x24BE7AF48];
          v12 = v35;
          v8 = v34;
          v2 = v33;
          v11 = v32;
          v9 = v31;
          if ((v37 & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v105 = *v4;
        v106 = *(_QWORD *)(a2 + v105);
        if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v5))
          break;
        v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v10) + v106);
        *(_QWORD *)(a2 + v105) = v106 + 1;
        v24 |= (unint64_t)(v107 & 0x7F) << v103;
        if ((v107 & 0x80) == 0)
        {
          v29 = &OBJC_IVAR___AWDWiFiRangingRttData__channel;
          goto LABEL_142;
        }
        v28 = 0;
        v103 += 7;
        v29 = &OBJC_IVAR___AWDWiFiRangingRttData__channel;
        v30 = v104++ > 8;
        if (v30)
          goto LABEL_145;
      }
      v29 = &OBJC_IVAR___AWDWiFiRangingRttData__channel;
LABEL_141:
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_142:
      v28 = *(_BYTE *)(a2 + *v6) ? 0 : v24;
LABEL_145:
      *(_DWORD *)(a1 + *v29) = v28;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL AWDWiFiRetStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDWiFiRetStats__rxDuration;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDWiFiRetStats__rxDuration;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDWiFiRetStats__rxDuration;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 4u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDWiFiRetStats__timestamp;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDWiFiRetStats__timestamp;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDWiFiRetStats__timestamp;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 32) |= 1u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDWiFiRetStats__retDuration;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        v20 = 0;
        v25 = &OBJC_IVAR___AWDWiFiRetStats__retDuration;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDWiFiRetStats__retDuration;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      v20 = 0;
LABEL_50:
    *(_QWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiSDBReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  AWDWiFiSDBSliceSpecific *v30;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_45;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_47:
        *(_DWORD *)(a1 + 16) = v26;
      }
      else if ((_DWORD)v17 == 2)
      {
        v30 = objc_alloc_init(AWDWiFiSDBSliceSpecific);
        objc_msgSend((id)a1, "addSliceStats:", v30);

        if (!PBReaderPlaceMark() || (AWDWiFiSDBSliceSpecificReadFrom((uint64_t)v30, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_41;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_43:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiSDBSliceSpecificReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int *v36;
  int *v37;
  int *v38;
  int *v39;
  int *v40;
  uint64_t v41;
  uint64_t result;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v8 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v11 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v12 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v13 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v14 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v15 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v16 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v17 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v18 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v19 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v20 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v21 += 7;
        v27 = v22++ >= 9;
        if (v27)
        {
          v23 = 0;
          v28 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_14:
      if (v28 || (v23 & 7) == 4)
        break;
      switch((v23 >> 3))
      {
        case 1u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[98]) |= 1u;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_113;
            v30 += 7;
            v27 = v31++ >= 9;
            if (v27)
            {
              v32 = 0;
              goto LABEL_115;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_113:
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_115:
          v104 = v8[99];
          goto LABEL_165;
        case 2u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[98]) |= 0x400u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                v27 = v44++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_119;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_119:
          v105 = v10[100];
          goto LABEL_152;
        case 3u:
          v49 = 0;
          v50 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[98]) |= 0x1000u;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v52);
              *(_QWORD *)(a2 + v51) = v52 + 1;
              v45 |= (unint64_t)(v53 & 0x7F) << v49;
              if (v53 < 0)
              {
                v49 += 7;
                v27 = v50++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_123;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_123:
          v105 = v11[101];
          goto LABEL_152;
        case 4u:
          v54 = 0;
          v55 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[98]) |= 0x800u;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v45 |= (unint64_t)(v58 & 0x7F) << v54;
              if (v58 < 0)
              {
                v54 += 7;
                v27 = v55++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_127;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_127:
          v105 = v12[102];
          goto LABEL_152;
        case 5u:
          v59 = 0;
          v60 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[98]) |= 0x80u;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v45 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                v27 = v60++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_131;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_131:
          v105 = v13[103];
          goto LABEL_152;
        case 6u:
          v64 = 0;
          v65 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[98]) |= 0x100u;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v45 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                v27 = v65++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_135;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_135:
          v105 = v14[104];
          goto LABEL_152;
        case 7u:
          v69 = 0;
          v70 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[98]) |= 0x200u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v45 |= (unint64_t)(v73 & 0x7F) << v69;
              if (v73 < 0)
              {
                v69 += 7;
                v27 = v70++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_139;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_139:
          v105 = v15[105];
          goto LABEL_152;
        case 8u:
          v74 = 0;
          v75 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[98]) |= 0x20u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v45 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v27 = v75++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_143;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_143:
          v105 = v16[106];
          goto LABEL_152;
        case 9u:
          v79 = 0;
          v80 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[98]) |= 0x40u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v45 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v27 = v80++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_147;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_147:
          v105 = v17[107];
          goto LABEL_152;
        case 0xAu:
          v84 = 0;
          v85 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[98]) |= 0x10u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v45 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v27 = v85++ >= 9;
                if (v27)
                {
                  LODWORD(v45) = 0;
                  goto LABEL_151;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v45) = 0;
LABEL_151:
          v105 = v18[108];
LABEL_152:
          *(_DWORD *)(a1 + v105) = v45;
          continue;
        case 0xBu:
          v89 = 0;
          v90 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[98]) |= 8u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v32 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v27 = v90++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_156;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_156:
          v104 = v19[109];
          goto LABEL_165;
        case 0xCu:
          v94 = 0;
          v95 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[98]) |= 4u;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v97);
              *(_QWORD *)(a2 + v96) = v97 + 1;
              v32 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                v27 = v95++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_160;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_160:
          v104 = v20[110];
          goto LABEL_165;
        case 0xDu:
          v99 = 0;
          v100 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[98]) |= 2u;
          break;
        default:
          v36 = v8;
          v37 = v10;
          v38 = v7;
          v39 = v11;
          v40 = v12;
          v41 = a1;
          result = PBReaderSkipValueWithTag();
          v20 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v13 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          a1 = v41;
          v14 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v40;
          v15 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v11 = v39;
          v16 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v7 = v38;
          v19 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v10 = v37;
          v17 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v8 = v36;
          v18 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v101 = *v3;
        v102 = *(_QWORD *)(a2 + v101);
        if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
          break;
        v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v102);
        *(_QWORD *)(a2 + v101) = v102 + 1;
        v32 |= (unint64_t)(v103 & 0x7F) << v99;
        if ((v103 & 0x80) == 0)
          goto LABEL_162;
        v99 += 7;
        v27 = v100++ >= 9;
        if (v27)
        {
          v32 = 0;
          goto LABEL_164;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_162:
      if (*(_BYTE *)(a2 + *v5))
        v32 = 0;
LABEL_164:
      v104 = 16;
LABEL_165:
      *(_QWORD *)(a1 + v104) = v32;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiSlowWiFiReportReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  AWDSlowWiFiNotification *v24;
  AWDLinkQualityMeasurements *v25;
  AWDWiFiUSBEventNotification *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_38;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_40;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_38:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_40:
        *(_QWORD *)(a1 + 8) = v19;
        goto LABEL_41;
      case 2u:
        v24 = objc_alloc_init(AWDSlowWiFiNotification);

        *(_QWORD *)(a1 + 24) = v24;
        if (!PBReaderPlaceMark() || (AWDSlowWiFiNotificationReadFrom((uint64_t)v24, a2) & 1) == 0)
          return 0;
        goto LABEL_36;
      case 3u:
        v25 = objc_alloc_init(AWDLinkQualityMeasurements);
        objc_msgSend((id)a1, "addLinkQualSample:", v25);

        if (!PBReaderPlaceMark() || !AWDLinkQualityMeasurementsReadFrom((uint64_t)v25, a2))
          return 0;
        goto LABEL_36;
      case 4u:
        v26 = objc_alloc_init(AWDWiFiUSBEventNotification);
        objc_msgSend((id)a1, "addUsbEvent:", v26);

        if (PBReaderPlaceMark() && (AWDWiFiUSBEventNotificationReadFrom((uint64_t)v26, a2) & 1) != 0)
        {
LABEL_36:
          PBReaderRecallMark();
LABEL_41:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_41;
    }
  }
}

uint64_t AWDWiFiSoftAPReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int *v36;
  int *v37;
  int *v38;
  int *v39;
  int *v40;
  uint64_t v41;
  uint64_t result;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v8 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v11 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v12 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v13 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v14 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v15 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v16 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v17 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v18 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v19 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v20 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v21 += 7;
        v27 = v22++ >= 9;
        if (v27)
        {
          v23 = 0;
          v28 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_14:
      if (v28 || (v23 & 7) == 4)
        break;
      switch((v23 >> 3))
      {
        case 1u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[117]) |= 8u;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_127;
            v30 += 7;
            v27 = v31++ >= 9;
            if (v27)
            {
              v32 = 0;
              goto LABEL_129;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_127:
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_129:
          v115 = v8[118];
          goto LABEL_182;
        case 2u:
          v43 = 0;
          v44 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[117]) |= 2u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v32 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                v27 = v44++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_133;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_133:
          v115 = v10[119];
          goto LABEL_182;
        case 3u:
          v48 = 0;
          v49 = 0;
          v50 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x40u;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v52);
              *(_QWORD *)(a2 + v51) = v52 + 1;
              v50 |= (unint64_t)(v53 & 0x7F) << v48;
              if (v53 < 0)
              {
                v48 += 7;
                v27 = v49++ >= 9;
                if (v27)
                {
                  LODWORD(v50) = 0;
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v50) = 0;
LABEL_137:
          v116 = v11[120];
          goto LABEL_187;
        case 4u:
          v54 = 0;
          v55 = 0;
          v50 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x400u;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v50 |= (unint64_t)(v58 & 0x7F) << v54;
              if (v58 < 0)
              {
                v54 += 7;
                v27 = v55++ >= 9;
                if (v27)
                {
                  LODWORD(v50) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v50) = 0;
LABEL_141:
          v116 = v12[121];
          goto LABEL_187;
        case 5u:
          v59 = 0;
          v60 = 0;
          v50 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x2000u;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v50 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                v27 = v60++ >= 9;
                if (v27)
                {
                  LODWORD(v50) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v50) = 0;
LABEL_145:
          v116 = v13[122];
          goto LABEL_187;
        case 6u:
          v64 = 0;
          v65 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[117]) |= 4u;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v32 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                v27 = v65++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_149:
          v115 = v14[123];
          goto LABEL_182;
        case 7u:
          v69 = 0;
          v70 = 0;
          v50 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x10u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v50 |= (unint64_t)(v73 & 0x7F) << v69;
              if (v73 < 0)
              {
                v69 += 7;
                v27 = v70++ >= 9;
                if (v27)
                {
                  LODWORD(v50) = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v50) = 0;
LABEL_153:
          v116 = v15[124];
          goto LABEL_187;
        case 8u:
          v74 = 0;
          v75 = 0;
          v50 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x100u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v50 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v27 = v75++ >= 9;
                if (v27)
                {
                  LODWORD(v50) = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v50) = 0;
LABEL_157:
          v116 = v16[125];
          goto LABEL_187;
        case 9u:
          v79 = 0;
          v80 = 0;
          v50 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x20u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v50 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v27 = v80++ >= 9;
                if (v27)
                {
                  LODWORD(v50) = 0;
                  goto LABEL_161;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v50) = 0;
LABEL_161:
          v116 = v17[126];
          goto LABEL_187;
        case 0xAu:
          v84 = 0;
          v85 = 0;
          v50 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x200u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v50 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v27 = v85++ >= 9;
                if (v27)
                {
                  LODWORD(v50) = 0;
                  goto LABEL_165;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v50) = 0;
LABEL_165:
          v116 = v18[127];
          goto LABEL_187;
        case 0xBu:
          v89 = 0;
          v90 = 0;
          v50 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x80u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v50 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v27 = v90++ >= 9;
                if (v27)
                {
                  LODWORD(v50) = 0;
                  goto LABEL_169;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v50) = 0;
LABEL_169:
          v116 = v19[128];
          goto LABEL_187;
        case 0xCu:
          v94 = 0;
          v95 = 0;
          v50 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x1000u;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v97);
              *(_QWORD *)(a2 + v96) = v97 + 1;
              v50 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                v27 = v95++ >= 9;
                if (v27)
                {
                  LODWORD(v50) = 0;
                  goto LABEL_173;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v50) = 0;
LABEL_173:
          v116 = v20[129];
          goto LABEL_187;
        case 0xDu:
          v99 = 0;
          v100 = 0;
          v101 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x4000u;
          while (2)
          {
            v102 = *v3;
            v103 = *(_QWORD *)(a2 + v102);
            if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v103);
              *(_QWORD *)(a2 + v102) = v103 + 1;
              v101 |= (unint64_t)(v104 & 0x7F) << v99;
              if (v104 < 0)
              {
                v99 += 7;
                v27 = v100++ >= 9;
                if (v27)
                {
                  v101 = 0;
                  goto LABEL_177;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v101 = 0;
LABEL_177:
          *(_BYTE *)(a1 + 80) = v101 != 0;
          continue;
        case 0xEu:
          v105 = 0;
          v106 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[117]) |= 1u;
          while (2)
          {
            v107 = *v3;
            v108 = *(_QWORD *)(a2 + v107);
            if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v108);
              *(_QWORD *)(a2 + v107) = v108 + 1;
              v32 |= (unint64_t)(v109 & 0x7F) << v105;
              if (v109 < 0)
              {
                v105 += 7;
                v27 = v106++ >= 9;
                if (v27)
                {
                  v32 = 0;
                  goto LABEL_181;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_181:
          v115 = 8;
LABEL_182:
          *(_QWORD *)(a1 + v115) = v32;
          continue;
        case 0xFu:
          v110 = 0;
          v111 = 0;
          v50 = 0;
          *(_WORD *)(a1 + v7[117]) |= 0x800u;
          break;
        default:
          v36 = v8;
          v37 = v10;
          v38 = v7;
          v39 = v11;
          v40 = v12;
          v41 = a1;
          result = PBReaderSkipValueWithTag();
          v20 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v13 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          a1 = v41;
          v14 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v40;
          v15 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v11 = v39;
          v16 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v7 = v38;
          v19 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v10 = v37;
          v17 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v8 = v36;
          v18 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v112 = *v3;
        v113 = *(_QWORD *)(a2 + v112);
        if (v113 == -1 || v113 >= *(_QWORD *)(a2 + *v4))
          break;
        v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v113);
        *(_QWORD *)(a2 + v112) = v113 + 1;
        v50 |= (unint64_t)(v114 & 0x7F) << v110;
        if ((v114 & 0x80) == 0)
          goto LABEL_184;
        v110 += 7;
        v27 = v111++ >= 9;
        if (v27)
        {
          LODWORD(v50) = 0;
          goto LABEL_186;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_184:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v50) = 0;
LABEL_186:
      v116 = 68;
LABEL_187:
      *(_DWORD *)(a1 + v116) = v50;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiSoftAPClientReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_71;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_73;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_71:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_73:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 32) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_77:
          v58 = v26 != 0;
          v59 = 28;
          goto LABEL_86;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + 32) |= 0x20u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v32 = 0;
                  goto LABEL_81;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_81:
          v58 = v32 != 0;
          v59 = 29;
          goto LABEL_86;
        case 4u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + 32) |= 0x40u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  v38 = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v38 = 0;
LABEL_85:
          v58 = v38 != 0;
          v59 = 30;
LABEL_86:
          *(_BYTE *)(a1 + v59) = v58;
          continue;
        case 5u:
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_BYTE *)(a1 + 32) |= 4u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  LODWORD(v44) = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v44) = 0;
LABEL_90:
          v60 = 20;
          goto LABEL_99;
        case 6u:
          v48 = 0;
          v49 = 0;
          v44 = 0;
          *(_BYTE *)(a1 + 32) |= 8u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v44 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v44) = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v44) = 0;
LABEL_94:
          v60 = 24;
          goto LABEL_99;
        case 7u:
          v53 = 0;
          v54 = 0;
          v44 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v55 = *v3;
        v56 = *(_QWORD *)(a2 + v55);
        if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          break;
        v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
        *(_QWORD *)(a2 + v55) = v56 + 1;
        v44 |= (unint64_t)(v57 & 0x7F) << v53;
        if ((v57 & 0x80) == 0)
          goto LABEL_96;
        v53 += 7;
        v14 = v54++ >= 9;
        if (v14)
        {
          LODWORD(v44) = 0;
          goto LABEL_98;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_96:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v44) = 0;
LABEL_98:
      v60 = 16;
LABEL_99:
      *(_DWORD *)(a1 + v60) = v44;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiTDMReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  AWDWiFiTDMSlice *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(AWDWiFiTDMSlice);
        objc_msgSend(a1, "addSliceStats:", v17);

        if (!PBReaderPlaceMark() || (AWDWiFiTDMSliceReadFrom((uint64_t)v17, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiTDMSliceReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int *v36;
  int *v37;
  int *v38;
  int *v39;
  int *v40;
  uint64_t v41;
  uint64_t result;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v8 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v11 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v12 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v13 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v14 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v15 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v16 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v17 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v18 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v19 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v20 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v21 += 7;
        v27 = v22++ >= 9;
        if (v27)
        {
          v23 = 0;
          v28 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_14:
      if (v28 || (v23 & 7) == 4)
        break;
      switch((v23 >> 3))
      {
        case 1u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[142]) |= 0x200u;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_106;
            v30 += 7;
            v27 = v31++ >= 9;
            if (v27)
            {
              LODWORD(v32) = 0;
              goto LABEL_108;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_106:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_108:
          v99 = v8[143];
          goto LABEL_141;
        case 2u:
          v43 = 0;
          v44 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[142]) |= 0x800u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v32 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                v27 = v44++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_112:
          v99 = v10[144];
          goto LABEL_141;
        case 3u:
          v48 = 0;
          v49 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[142]) |= 0x400u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v32 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v27 = v49++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_116;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_116:
          v99 = v11[145];
          goto LABEL_141;
        case 4u:
          v53 = 0;
          v54 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[142]) |= 0x40u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v32 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                v27 = v54++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_120:
          v99 = v12[146];
          goto LABEL_141;
        case 5u:
          v58 = 0;
          v59 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[142]) |= 0x80u;
          while (2)
          {
            v60 = *v3;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v61);
              *(_QWORD *)(a2 + v60) = v61 + 1;
              v32 |= (unint64_t)(v62 & 0x7F) << v58;
              if (v62 < 0)
              {
                v58 += 7;
                v27 = v59++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_124:
          v99 = v13[147];
          goto LABEL_141;
        case 6u:
          v63 = 0;
          v64 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[142]) |= 0x100u;
          while (2)
          {
            v65 = *v3;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v66);
              *(_QWORD *)(a2 + v65) = v66 + 1;
              v32 |= (unint64_t)(v67 & 0x7F) << v63;
              if (v67 < 0)
              {
                v63 += 7;
                v27 = v64++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_128;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_128:
          v99 = v14[148];
          goto LABEL_141;
        case 7u:
          v68 = 0;
          v69 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[142]) |= 0x10u;
          while (2)
          {
            v70 = *v3;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v71);
              *(_QWORD *)(a2 + v70) = v71 + 1;
              v32 |= (unint64_t)(v72 & 0x7F) << v68;
              if (v72 < 0)
              {
                v68 += 7;
                v27 = v69++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_132;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_132:
          v99 = v15[149];
          goto LABEL_141;
        case 8u:
          v73 = 0;
          v74 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[142]) |= 0x20u;
          while (2)
          {
            v75 = *v3;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v76);
              *(_QWORD *)(a2 + v75) = v76 + 1;
              v32 |= (unint64_t)(v77 & 0x7F) << v73;
              if (v77 < 0)
              {
                v73 += 7;
                v27 = v74++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_136;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_136:
          v99 = v16[150];
          goto LABEL_141;
        case 9u:
          v78 = 0;
          v79 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[142]) |= 8u;
          while (2)
          {
            v80 = *v3;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v81);
              *(_QWORD *)(a2 + v80) = v81 + 1;
              v32 |= (unint64_t)(v82 & 0x7F) << v78;
              if (v82 < 0)
              {
                v78 += 7;
                v27 = v79++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_140;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_140:
          v99 = v17[151];
LABEL_141:
          *(_DWORD *)(a1 + v99) = v32;
          continue;
        case 0xAu:
          v83 = 0;
          v84 = 0;
          v85 = 0;
          *(_WORD *)(a1 + v7[142]) |= 4u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v85 |= (unint64_t)(v88 & 0x7F) << v83;
              if (v88 < 0)
              {
                v83 += 7;
                v27 = v84++ >= 9;
                if (v27)
                {
                  v85 = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v85 = 0;
LABEL_145:
          v100 = v18[152];
          goto LABEL_154;
        case 0xBu:
          v89 = 0;
          v90 = 0;
          v85 = 0;
          *(_WORD *)(a1 + v7[142]) |= 2u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v85 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v27 = v90++ >= 9;
                if (v27)
                {
                  v85 = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v85 = 0;
LABEL_149:
          v100 = v19[153];
          goto LABEL_154;
        case 0xCu:
          v94 = 0;
          v95 = 0;
          v85 = 0;
          *(_WORD *)(a1 + v7[142]) |= 1u;
          break;
        default:
          v36 = v8;
          v37 = v10;
          v38 = v7;
          v39 = v11;
          v40 = v12;
          v41 = a1;
          result = PBReaderSkipValueWithTag();
          v20 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v13 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          a1 = v41;
          v14 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v40;
          v15 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v11 = v39;
          v16 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v7 = v38;
          v18 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v10 = v37;
          v17 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v8 = v36;
          v19 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v96 = *v3;
        v97 = *(_QWORD *)(a2 + v96);
        if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
          break;
        v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v97);
        *(_QWORD *)(a2 + v96) = v97 + 1;
        v85 |= (unint64_t)(v98 & 0x7F) << v94;
        if ((v98 & 0x80) == 0)
          goto LABEL_151;
        v94 += 7;
        v27 = v95++ >= 9;
        if (v27)
        {
          v85 = 0;
          goto LABEL_153;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_151:
      if (*(_BYTE *)(a2 + *v5))
        v85 = 0;
LABEL_153:
      v100 = v20[154];
LABEL_154:
      *(_QWORD *)(a1 + v100) = v85;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiTxInhibitEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 28) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            v26 = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          v26 = 0;
LABEL_51:
        *(_BYTE *)(a1 + 24) = v26 != 0;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          v30 = 0;
          v31 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
              break;
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v20 |= (unint64_t)(v34 & 0x7F) << v30;
            if ((v34 & 0x80) == 0)
              goto LABEL_53;
            v30 += 7;
            v14 = v31++ >= 9;
            if (v14)
            {
              v20 = 0;
              goto LABEL_55;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_55:
          v36 = 16;
        }
        else
        {
          if ((_DWORD)v17 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
              break;
            v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_45;
            v18 += 7;
            v14 = v19++ >= 9;
            if (v14)
            {
              v20 = 0;
              goto LABEL_47;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_47:
          v36 = 8;
        }
        *(_QWORD *)(a1 + v36) = v20;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiUIConfigureEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_44;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_46;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_46:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 24) = String;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_50:
          v36 = 32;
          goto LABEL_55;
        case 4u:
          v31 = 0;
          v32 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v33 = *v3;
        v34 = *(_QWORD *)(a2 + v33);
        if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
          break;
        v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
        *(_QWORD *)(a2 + v33) = v34 + 1;
        v27 |= (unint64_t)(v35 & 0x7F) << v31;
        if ((v35 & 0x80) == 0)
          goto LABEL_52;
        v31 += 7;
        v14 = v32++ >= 9;
        if (v14)
        {
          LODWORD(v27) = 0;
          goto LABEL_54;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_52:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v27) = 0;
LABEL_54:
      v36 = 16;
LABEL_55:
      *(_DWORD *)(a1 + v36) = v27;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiUIEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_44;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_46;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_46:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 16) = String;
          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 32) |= 4u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  v27 = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v27 = 0;
LABEL_50:
          *(_BYTE *)(a1 + 28) = v27 != 0;
          continue;
        case 4u:
          v31 = 0;
          v32 = 0;
          v33 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v34 = *v3;
        v35 = *(_QWORD *)(a2 + v34);
        if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          break;
        v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
        *(_QWORD *)(a2 + v34) = v35 + 1;
        v33 |= (unint64_t)(v36 & 0x7F) << v31;
        if ((v36 & 0x80) == 0)
          goto LABEL_52;
        v31 += 7;
        v14 = v32++ >= 9;
        if (v14)
        {
          LODWORD(v33) = 0;
          goto LABEL_54;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_52:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v33) = 0;
LABEL_54:
      *(_DWORD *)(a1 + 24) = v33;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiUIJoinEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *String;
  id v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  AWDWiFiUIScanCount *v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 52) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_49;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_51:
        *(_QWORD *)(a1 + 8) = v19;
        goto LABEL_61;
      case 2u:
        String = (void *)PBReaderReadString();

        v25 = String;
        v26 = 24;
        goto LABEL_44;
      case 3u:
        v27 = 0;
        v28 = 0;
        v29 = 0;
        *(_BYTE *)(a1 + 52) |= 4u;
        while (2)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
            *(_QWORD *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if (v32 < 0)
            {
              v27 += 7;
              v14 = v28++ >= 9;
              if (v14)
              {
                LODWORD(v29) = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v29) = 0;
LABEL_55:
        v40 = 48;
        goto LABEL_60;
      case 4u:
        v33 = 0;
        v34 = 0;
        v29 = 0;
        *(_BYTE *)(a1 + 52) |= 2u;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v29 |= (unint64_t)(v37 & 0x7F) << v33;
            if (v37 < 0)
            {
              v33 += 7;
              v14 = v34++ >= 9;
              if (v14)
              {
                LODWORD(v29) = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v29) = 0;
LABEL_59:
        v40 = 16;
LABEL_60:
        *(_DWORD *)(a1 + v40) = v29;
        goto LABEL_61;
      case 5u:
        v38 = (void *)PBReaderReadString();

        v25 = v38;
        v26 = 32;
LABEL_44:
        *(_QWORD *)(a1 + v26) = v25;
        goto LABEL_61;
      case 6u:
        v39 = objc_alloc_init(AWDWiFiUIScanCount);
        objc_msgSend((id)a1, "addSectionCounts:", v39);

        if (PBReaderPlaceMark() && (AWDWiFiUIScanCountReadFrom((uint64_t)v39, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_61:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_61;
    }
  }
}

uint64_t AWDWiFiUIScanCountReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_31;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3) == 1)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiUIScanSessionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  AWDWiFiUIScanCount *v30;
  void *String;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_40;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_42;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_42:
        *(_QWORD *)(a1 + 8) = v19;
        goto LABEL_47;
      case 2u:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 40) |= 2u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_46;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_46:
        *(_DWORD *)(a1 + 24) = v26;
        goto LABEL_47;
      case 3u:
        v30 = objc_alloc_init(AWDWiFiUIScanCount);
        objc_msgSend((id)a1, "addCounts:", v30);

        if (PBReaderPlaceMark() && (AWDWiFiUIScanCountReadFrom((uint64_t)v30, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_47:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 4u:
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 32) = String;
        goto LABEL_47;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_47;
    }
  }
}

uint64_t AWDWiFiUSBEventNotificationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_57;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_59;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_57:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_59:
          v47 = 16;
          goto LABEL_64;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_63:
          v47 = 20;
LABEL_64:
          *(_DWORD *)(a1 + v47) = v19;
          continue;
        case 3u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  v31 = 0;
                  goto LABEL_68;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_68:
          *(_QWORD *)(a1 + 8) = v31;
          continue;
        case 4u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v37 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v37 = 0;
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v37 = 0;
LABEL_72:
          v48 = v37 != 0;
          v49 = 24;
          goto LABEL_77;
        case 5u:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_BYTE *)(a1 + 28) |= 0x10u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v44 = *v3;
        v45 = *(_QWORD *)(a2 + v44);
        if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
          break;
        v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
        *(_QWORD *)(a2 + v44) = v45 + 1;
        v43 |= (unint64_t)(v46 & 0x7F) << v41;
        if ((v46 & 0x80) == 0)
          goto LABEL_74;
        v41 += 7;
        v14 = v42++ >= 9;
        if (v14)
        {
          v43 = 0;
          goto LABEL_76;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_74:
      if (*(_BYTE *)(a2 + *v5))
        v43 = 0;
LABEL_76:
      v48 = v43 != 0;
      v49 = 25;
LABEL_77:
      *(_BYTE *)(a1 + v49) = v48;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWiFiUsageSnapshotReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_51:
        v36 = 20;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_45;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_47;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_47:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v30 = 0;
        v31 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            break;
          v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
          *(_QWORD *)(a2 + v32) = v33 + 1;
          v26 |= (unint64_t)(v34 & 0x7F) << v30;
          if ((v34 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_55:
        v36 = 16;
      }
      *(_DWORD *)(a1 + v36) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWiFiWcpsStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  int *v24;
  BOOL v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  char v171;
  unsigned int v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  char v176;
  unsigned int v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  char v181;
  unsigned int v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  unsigned int v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  char v191;
  unsigned int v192;
  uint64_t v193;
  unint64_t v194;
  char v195;
  char v196;
  unsigned int v197;
  uint64_t v198;
  unint64_t v199;
  char v200;
  char v201;
  unsigned int v202;
  uint64_t v203;
  unint64_t v204;
  char v205;
  char v206;
  unsigned int v207;
  uint64_t v208;
  unint64_t v209;
  char v210;
  char v211;
  unsigned int v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  char v216;
  unsigned int v217;
  uint64_t v218;
  unint64_t v219;
  char v220;
  char v221;
  unsigned int v222;
  uint64_t v223;
  unint64_t v224;
  char v225;
  char v226;
  unsigned int v227;
  uint64_t v228;
  unint64_t v229;
  char v230;
  char v231;
  unsigned int v232;
  uint64_t v233;
  unint64_t v234;
  char v235;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x40000000000uLL;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__timestamp;
              goto LABEL_365;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v23 = 0;
            v17 += 7;
            v24 = &OBJC_IVAR___AWDWiFiWcpsStats__timestamp;
            v25 = v18++ > 8;
            if (v25)
              goto LABEL_369;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__timestamp;
          goto LABEL_366;
        case 2u:
          v26 = 0;
          v27 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x4000uLL;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__durationBucket;
              goto LABEL_365;
            }
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v19 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v23 = 0;
              v26 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__durationBucket;
              v25 = v27++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__durationBucket;
          goto LABEL_366;
        case 3u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x2000000000uLL;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageActive;
              goto LABEL_365;
            }
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v19 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v23 = 0;
              v31 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageActive;
              v25 = v32++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageActive;
          goto LABEL_366;
        case 4u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x4000000000uLL;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentagePowerSave;
              goto LABEL_365;
            }
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v19 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v23 = 0;
              v36 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentagePowerSave;
              v25 = v37++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentagePowerSave;
          goto LABEL_366;
        case 5u:
          v41 = 0;
          v42 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x10000000000uLL;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageWcpsEnabled;
              goto LABEL_365;
            }
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v19 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v23 = 0;
              v41 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageWcpsEnabled;
              v25 = v42++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageWcpsEnabled;
          goto LABEL_366;
        case 6u:
          v46 = 0;
          v47 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x20000000000uLL;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageWcpsReduced;
              goto LABEL_365;
            }
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v19 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v23 = 0;
              v46 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageWcpsReduced;
              v25 = v47++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageWcpsReduced;
          goto LABEL_366;
        case 7u:
          v51 = 0;
          v52 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x8000000000uLL;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageWcpsDisabled;
              goto LABEL_365;
            }
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v19 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v23 = 0;
              v51 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageWcpsDisabled;
              v25 = v52++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__percentageWcpsDisabled;
          goto LABEL_366;
        case 8u:
          v56 = 0;
          v57 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x2000uLL;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntVoGoodPeriods;
              goto LABEL_365;
            }
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v19 |= (unint64_t)(v60 & 0x7F) << v56;
            if (v60 < 0)
            {
              v23 = 0;
              v56 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntVoGoodPeriods;
              v25 = v57++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntVoGoodPeriods;
          goto LABEL_366;
        case 9u:
          v61 = 0;
          v62 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x1000uLL;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntVoBadPeriods;
              goto LABEL_365;
            }
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v19 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v23 = 0;
              v61 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntVoBadPeriods;
              v25 = v62++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntVoBadPeriods;
          goto LABEL_366;
        case 0xAu:
          v66 = 0;
          v67 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 2uLL;
          while (2)
          {
            v68 = *v3;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgRssi;
              goto LABEL_365;
            }
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v19 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v23 = 0;
              v66 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgRssi;
              v25 = v67++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgRssi;
          goto LABEL_366;
        case 0xBu:
          v71 = 0;
          v72 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 8uLL;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgSnr;
              goto LABEL_365;
            }
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v19 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v23 = 0;
              v71 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgSnr;
              v25 = v72++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgSnr;
          goto LABEL_366;
        case 0xCu:
          v76 = 0;
          v77 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 1uLL;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgCca;
              goto LABEL_365;
            }
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v19 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v23 = 0;
              v76 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgCca;
              v25 = v77++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgCca;
          goto LABEL_366;
        case 0xDu:
          v81 = 0;
          v82 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x10uLL;
          while (2)
          {
            v83 = *v3;
            v84 = *(_QWORD *)(a2 + v83);
            if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgTxAirLatency;
              goto LABEL_365;
            }
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v84 + 1;
            v19 |= (unint64_t)(v85 & 0x7F) << v81;
            if (v85 < 0)
            {
              v23 = 0;
              v81 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgTxAirLatency;
              v25 = v82++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgTxAirLatency;
          goto LABEL_366;
        case 0xEu:
          v86 = 0;
          v87 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x20uLL;
          while (2)
          {
            v88 = *v3;
            v89 = *(_QWORD *)(a2 + v88);
            if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgTxPacketLoss;
              goto LABEL_365;
            }
            v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
            *(_QWORD *)(a2 + v88) = v89 + 1;
            v19 |= (unint64_t)(v90 & 0x7F) << v86;
            if (v90 < 0)
            {
              v23 = 0;
              v86 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgTxPacketLoss;
              v25 = v87++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgTxPacketLoss;
          goto LABEL_366;
        case 0xFu:
          v91 = 0;
          v92 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x40uLL;
          while (2)
          {
            v93 = *v3;
            v94 = *(_QWORD *)(a2 + v93);
            if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgTxRetrans;
              goto LABEL_365;
            }
            v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
            *(_QWORD *)(a2 + v93) = v94 + 1;
            v19 |= (unint64_t)(v95 & 0x7F) << v91;
            if (v95 < 0)
            {
              v23 = 0;
              v91 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgTxRetrans;
              v25 = v92++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgTxRetrans;
          goto LABEL_366;
        case 0x10u:
          v96 = 0;
          v97 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 4uLL;
          while (2)
          {
            v98 = *v3;
            v99 = *(_QWORD *)(a2 + v98);
            if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgRxRetry;
              goto LABEL_365;
            }
            v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
            *(_QWORD *)(a2 + v98) = v99 + 1;
            v19 |= (unint64_t)(v100 & 0x7F) << v96;
            if (v100 < 0)
            {
              v23 = 0;
              v96 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgRxRetry;
              v25 = v97++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__avgRxRetry;
          goto LABEL_366;
        case 0x11u:
          v101 = 0;
          v102 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x20000uLL;
          while (2)
          {
            v103 = *v3;
            v104 = *(_QWORD *)(a2 + v103);
            if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endRssi;
              goto LABEL_365;
            }
            v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
            *(_QWORD *)(a2 + v103) = v104 + 1;
            v19 |= (unint64_t)(v105 & 0x7F) << v101;
            if (v105 < 0)
            {
              v23 = 0;
              v101 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endRssi;
              v25 = v102++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endRssi;
          goto LABEL_366;
        case 0x12u:
          v106 = 0;
          v107 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x80000uLL;
          while (2)
          {
            v108 = *v3;
            v109 = *(_QWORD *)(a2 + v108);
            if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endSnr;
              goto LABEL_365;
            }
            v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
            *(_QWORD *)(a2 + v108) = v109 + 1;
            v19 |= (unint64_t)(v110 & 0x7F) << v106;
            if (v110 < 0)
            {
              v23 = 0;
              v106 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endSnr;
              v25 = v107++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endSnr;
          goto LABEL_366;
        case 0x13u:
          v111 = 0;
          v112 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x8000uLL;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endCca;
              goto LABEL_365;
            }
            v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v114 + 1;
            v19 |= (unint64_t)(v115 & 0x7F) << v111;
            if (v115 < 0)
            {
              v23 = 0;
              v111 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endCca;
              v25 = v112++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endCca;
          goto LABEL_366;
        case 0x14u:
          v116 = 0;
          v117 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x100000uLL;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endTxAirLatency;
              goto LABEL_365;
            }
            v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v119 + 1;
            v19 |= (unint64_t)(v120 & 0x7F) << v116;
            if (v120 < 0)
            {
              v23 = 0;
              v116 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endTxAirLatency;
              v25 = v117++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endTxAirLatency;
          goto LABEL_366;
        case 0x15u:
          v121 = 0;
          v122 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x200000uLL;
          while (2)
          {
            v123 = *v3;
            v124 = *(_QWORD *)(a2 + v123);
            if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endTxPacketLoss;
              goto LABEL_365;
            }
            v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
            *(_QWORD *)(a2 + v123) = v124 + 1;
            v19 |= (unint64_t)(v125 & 0x7F) << v121;
            if (v125 < 0)
            {
              v23 = 0;
              v121 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endTxPacketLoss;
              v25 = v122++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endTxPacketLoss;
          goto LABEL_366;
        case 0x16u:
          v126 = 0;
          v127 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x400000uLL;
          while (2)
          {
            v128 = *v3;
            v129 = *(_QWORD *)(a2 + v128);
            if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endTxRetrans;
              goto LABEL_365;
            }
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
            *(_QWORD *)(a2 + v128) = v129 + 1;
            v19 |= (unint64_t)(v130 & 0x7F) << v126;
            if (v130 < 0)
            {
              v23 = 0;
              v126 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endTxRetrans;
              v25 = v127++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endTxRetrans;
          goto LABEL_366;
        case 0x17u:
          v131 = 0;
          v132 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x40000uLL;
          while (2)
          {
            v133 = *v3;
            v134 = *(_QWORD *)(a2 + v133);
            if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endRxRetry;
              goto LABEL_365;
            }
            v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v134 + 1;
            v19 |= (unint64_t)(v135 & 0x7F) << v131;
            if (v135 < 0)
            {
              v23 = 0;
              v131 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endRxRetry;
              v25 = v132++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endRxRetry;
          goto LABEL_366;
        case 0x18u:
          v136 = 0;
          v137 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x80000000uLL;
          while (2)
          {
            v138 = *v3;
            v139 = *(_QWORD *)(a2 + v138);
            if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minRssi;
              goto LABEL_365;
            }
            v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
            *(_QWORD *)(a2 + v138) = v139 + 1;
            v19 |= (unint64_t)(v140 & 0x7F) << v136;
            if (v140 < 0)
            {
              v23 = 0;
              v136 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minRssi;
              v25 = v137++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minRssi;
          goto LABEL_366;
        case 0x19u:
          v141 = 0;
          v142 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x200000000uLL;
          while (2)
          {
            v143 = *v3;
            v144 = *(_QWORD *)(a2 + v143);
            if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minSnr;
              goto LABEL_365;
            }
            v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v144 + 1;
            v19 |= (unint64_t)(v145 & 0x7F) << v141;
            if (v145 < 0)
            {
              v23 = 0;
              v141 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minSnr;
              v25 = v142++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minSnr;
          goto LABEL_366;
        case 0x1Au:
          v146 = 0;
          v147 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x40000000uLL;
          while (2)
          {
            v148 = *v3;
            v149 = *(_QWORD *)(a2 + v148);
            if (v149 == -1 || v149 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minCca;
              goto LABEL_365;
            }
            v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
            *(_QWORD *)(a2 + v148) = v149 + 1;
            v19 |= (unint64_t)(v150 & 0x7F) << v146;
            if (v150 < 0)
            {
              v23 = 0;
              v146 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minCca;
              v25 = v147++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minCca;
          goto LABEL_366;
        case 0x1Bu:
          v151 = 0;
          v152 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x400000000uLL;
          while (2)
          {
            v153 = *v3;
            v154 = *(_QWORD *)(a2 + v153);
            if (v154 == -1 || v154 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minTxAirLatency;
              goto LABEL_365;
            }
            v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
            *(_QWORD *)(a2 + v153) = v154 + 1;
            v19 |= (unint64_t)(v155 & 0x7F) << v151;
            if (v155 < 0)
            {
              v23 = 0;
              v151 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minTxAirLatency;
              v25 = v152++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minTxAirLatency;
          goto LABEL_366;
        case 0x1Cu:
          v156 = 0;
          v157 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x800000000uLL;
          while (2)
          {
            v158 = *v3;
            v159 = *(_QWORD *)(a2 + v158);
            if (v159 == -1 || v159 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minTxPacketLoss;
              goto LABEL_365;
            }
            v160 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v159);
            *(_QWORD *)(a2 + v158) = v159 + 1;
            v19 |= (unint64_t)(v160 & 0x7F) << v156;
            if (v160 < 0)
            {
              v23 = 0;
              v156 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minTxPacketLoss;
              v25 = v157++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minTxPacketLoss;
          goto LABEL_366;
        case 0x1Du:
          v161 = 0;
          v162 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x1000000000uLL;
          while (2)
          {
            v163 = *v3;
            v164 = *(_QWORD *)(a2 + v163);
            if (v164 == -1 || v164 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minTxRetrans;
              goto LABEL_365;
            }
            v165 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v164);
            *(_QWORD *)(a2 + v163) = v164 + 1;
            v19 |= (unint64_t)(v165 & 0x7F) << v161;
            if (v165 < 0)
            {
              v23 = 0;
              v161 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minTxRetrans;
              v25 = v162++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minTxRetrans;
          goto LABEL_366;
        case 0x1Eu:
          v166 = 0;
          v167 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x100000000uLL;
          while (2)
          {
            v168 = *v3;
            v169 = *(_QWORD *)(a2 + v168);
            if (v169 == -1 || v169 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minRxRetry;
              goto LABEL_365;
            }
            v170 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v169);
            *(_QWORD *)(a2 + v168) = v169 + 1;
            v19 |= (unint64_t)(v170 & 0x7F) << v166;
            if (v170 < 0)
            {
              v23 = 0;
              v166 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minRxRetry;
              v25 = v167++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__minRxRetry;
          goto LABEL_366;
        case 0x1Fu:
          v171 = 0;
          v172 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x1000000uLL;
          while (2)
          {
            v173 = *v3;
            v174 = *(_QWORD *)(a2 + v173);
            if (v174 == -1 || v174 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxRssi;
              goto LABEL_365;
            }
            v175 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v174);
            *(_QWORD *)(a2 + v173) = v174 + 1;
            v19 |= (unint64_t)(v175 & 0x7F) << v171;
            if (v175 < 0)
            {
              v23 = 0;
              v171 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxRssi;
              v25 = v172++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxRssi;
          goto LABEL_366;
        case 0x20u:
          v176 = 0;
          v177 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x20000000uLL;
          while (2)
          {
            v178 = *v3;
            v179 = *(_QWORD *)(a2 + v178);
            if (v179 == -1 || v179 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxnSnr;
              goto LABEL_365;
            }
            v180 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v179);
            *(_QWORD *)(a2 + v178) = v179 + 1;
            v19 |= (unint64_t)(v180 & 0x7F) << v176;
            if (v180 < 0)
            {
              v23 = 0;
              v176 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxnSnr;
              v25 = v177++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxnSnr;
          goto LABEL_366;
        case 0x21u:
          v181 = 0;
          v182 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x800000uLL;
          while (2)
          {
            v183 = *v3;
            v184 = *(_QWORD *)(a2 + v183);
            if (v184 == -1 || v184 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxCca;
              goto LABEL_365;
            }
            v185 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v184);
            *(_QWORD *)(a2 + v183) = v184 + 1;
            v19 |= (unint64_t)(v185 & 0x7F) << v181;
            if (v185 < 0)
            {
              v23 = 0;
              v181 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxCca;
              v25 = v182++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxCca;
          goto LABEL_366;
        case 0x22u:
          v186 = 0;
          v187 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x4000000uLL;
          while (2)
          {
            v188 = *v3;
            v189 = *(_QWORD *)(a2 + v188);
            if (v189 == -1 || v189 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxTxAirLatency;
              goto LABEL_365;
            }
            v190 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v189);
            *(_QWORD *)(a2 + v188) = v189 + 1;
            v19 |= (unint64_t)(v190 & 0x7F) << v186;
            if (v190 < 0)
            {
              v23 = 0;
              v186 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxTxAirLatency;
              v25 = v187++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxTxAirLatency;
          goto LABEL_366;
        case 0x23u:
          v191 = 0;
          v192 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x8000000uLL;
          while (2)
          {
            v193 = *v3;
            v194 = *(_QWORD *)(a2 + v193);
            if (v194 == -1 || v194 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxTxPacketLoss;
              goto LABEL_365;
            }
            v195 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v194);
            *(_QWORD *)(a2 + v193) = v194 + 1;
            v19 |= (unint64_t)(v195 & 0x7F) << v191;
            if (v195 < 0)
            {
              v23 = 0;
              v191 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxTxPacketLoss;
              v25 = v192++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxTxPacketLoss;
          goto LABEL_366;
        case 0x24u:
          v196 = 0;
          v197 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x10000000uLL;
          while (2)
          {
            v198 = *v3;
            v199 = *(_QWORD *)(a2 + v198);
            if (v199 == -1 || v199 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxTxRetrans;
              goto LABEL_365;
            }
            v200 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v199);
            *(_QWORD *)(a2 + v198) = v199 + 1;
            v19 |= (unint64_t)(v200 & 0x7F) << v196;
            if (v200 < 0)
            {
              v23 = 0;
              v196 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxTxRetrans;
              v25 = v197++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxTxRetrans;
          goto LABEL_366;
        case 0x25u:
          v201 = 0;
          v202 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x2000000uLL;
          while (2)
          {
            v203 = *v3;
            v204 = *(_QWORD *)(a2 + v203);
            if (v204 == -1 || v204 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxRxRetry;
              goto LABEL_365;
            }
            v205 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v204);
            *(_QWORD *)(a2 + v203) = v204 + 1;
            v19 |= (unint64_t)(v205 & 0x7F) << v201;
            if (v205 < 0)
            {
              v23 = 0;
              v201 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxRxRetry;
              v25 = v202++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__maxRxRetry;
          goto LABEL_366;
        case 0x26u:
          v206 = 0;
          v207 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x400uLL;
          while (2)
          {
            v208 = *v3;
            v209 = *(_QWORD *)(a2 + v208);
            if (v209 == -1 || v209 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntRedBtConnLatLow;
              goto LABEL_365;
            }
            v210 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v209);
            *(_QWORD *)(a2 + v208) = v209 + 1;
            v19 |= (unint64_t)(v210 & 0x7F) << v206;
            if (v210 < 0)
            {
              v23 = 0;
              v206 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntRedBtConnLatLow;
              v25 = v207++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntRedBtConnLatLow;
          goto LABEL_366;
        case 0x27u:
          v211 = 0;
          v212 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x800uLL;
          while (2)
          {
            v213 = *v3;
            v214 = *(_QWORD *)(a2 + v213);
            if (v214 == -1 || v214 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntRedBtDisconnLatHi;
              goto LABEL_365;
            }
            v215 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v214);
            *(_QWORD *)(a2 + v213) = v214 + 1;
            v19 |= (unint64_t)(v215 & 0x7F) << v211;
            if (v215 < 0)
            {
              v23 = 0;
              v211 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntRedBtDisconnLatHi;
              v25 = v212++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntRedBtDisconnLatHi;
          goto LABEL_366;
        case 0x28u:
          v216 = 0;
          v217 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x100uLL;
          while (2)
          {
            v218 = *v3;
            v219 = *(_QWORD *)(a2 + v218);
            if (v219 == -1 || v219 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntDisBtConnLatHi;
              goto LABEL_365;
            }
            v220 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v219);
            *(_QWORD *)(a2 + v218) = v219 + 1;
            v19 |= (unint64_t)(v220 & 0x7F) << v216;
            if (v220 < 0)
            {
              v23 = 0;
              v216 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntDisBtConnLatHi;
              v25 = v217++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntDisBtConnLatHi;
          goto LABEL_366;
        case 0x29u:
          v221 = 0;
          v222 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x200uLL;
          while (2)
          {
            v223 = *v3;
            v224 = *(_QWORD *)(a2 + v223);
            if (v224 == -1 || v224 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntDisBtEv3;
              goto LABEL_365;
            }
            v225 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v224);
            *(_QWORD *)(a2 + v223) = v224 + 1;
            v19 |= (unint64_t)(v225 & 0x7F) << v221;
            if (v225 < 0)
            {
              v23 = 0;
              v221 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntDisBtEv3;
              v25 = v222++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntDisBtEv3;
          goto LABEL_366;
        case 0x2Au:
          v226 = 0;
          v227 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x80uLL;
          while (2)
          {
            v228 = *v3;
            v229 = *(_QWORD *)(a2 + v228);
            if (v229 == -1 || v229 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntAwdlActive;
              goto LABEL_365;
            }
            v230 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v229);
            *(_QWORD *)(a2 + v228) = v229 + 1;
            v19 |= (unint64_t)(v230 & 0x7F) << v226;
            if (v230 < 0)
            {
              v23 = 0;
              v226 += 7;
              v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntAwdlActive;
              v25 = v227++ > 8;
              if (v25)
                goto LABEL_369;
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__cntAwdlActive;
          goto LABEL_366;
        case 0x2Bu:
          v231 = 0;
          v232 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 352) |= 0x10000uLL;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v233 = *v3;
        v234 = *(_QWORD *)(a2 + v233);
        if (v234 == -1 || v234 >= *(_QWORD *)(a2 + *v4))
          break;
        v235 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v234);
        *(_QWORD *)(a2 + v233) = v234 + 1;
        v19 |= (unint64_t)(v235 & 0x7F) << v231;
        if ((v235 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endLinkState;
          goto LABEL_366;
        }
        v23 = 0;
        v231 += 7;
        v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endLinkState;
        v25 = v232++ > 8;
        if (v25)
          goto LABEL_369;
      }
      v24 = &OBJC_IVAR___AWDWiFiWcpsStats__endLinkState;
LABEL_365:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_366:
      v23 = *(_BYTE *)(a2 + *v5) ? 0 : v19;
LABEL_369:
      *(_QWORD *)(a1 + *v24) = v23;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiAssociationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void *Data;
  id v41;
  uint64_t v42;
  void *String;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  void *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  void *v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  void *v71;
  uint64_t v72;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 104) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_91;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_93;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_91:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_93:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 104) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_97;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_97:
          v72 = 64;
          goto LABEL_126;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 104) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_101;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_101:
          v72 = 32;
          goto LABEL_126;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 104) |= 0x80u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_105:
          v72 = 96;
          goto LABEL_126;
        case 5u:
          Data = (void *)PBReaderReadData();

          v41 = Data;
          v42 = 24;
          goto LABEL_89;
        case 6u:
          String = (void *)PBReaderReadString();

          v41 = String;
          v42 = 88;
          goto LABEL_89;
        case 7u:
          v44 = 0;
          v45 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 104) |= 8u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v26 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                v14 = v45++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_109:
          v72 = 48;
          goto LABEL_126;
        case 8u:
          v49 = (void *)PBReaderReadData();

          v41 = v49;
          v42 = 56;
          goto LABEL_89;
        case 9u:
          v50 = 0;
          v51 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 104) |= 0x20u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v26 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_113:
          v72 = 68;
          goto LABEL_126;
        case 0xAu:
          v55 = 0;
          v56 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 104) |= 0x100u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v26 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_117:
          v72 = 100;
          goto LABEL_126;
        case 0xBu:
          v60 = (void *)PBReaderReadString();

          v41 = v60;
          v42 = 40;
          goto LABEL_89;
        case 0xCu:
          v61 = 0;
          v62 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 104) |= 0x40u;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
              *(_QWORD *)(a2 + v63) = v64 + 1;
              v26 |= (unint64_t)(v65 & 0x7F) << v61;
              if (v65 < 0)
              {
                v61 += 7;
                v14 = v62++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_121;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_121:
          v72 = 72;
          goto LABEL_126;
        case 0xDu:
          v66 = 0;
          v67 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 104) |= 2u;
          break;
        case 0xEu:
          v71 = (void *)PBReaderReadString();

          v41 = v71;
          v42 = 80;
LABEL_89:
          *(_QWORD *)(a1 + v42) = v41;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v68 = *v3;
        v69 = *(_QWORD *)(a2 + v68);
        if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
          break;
        v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
        *(_QWORD *)(a2 + v68) = v69 + 1;
        v26 |= (unint64_t)(v70 & 0x7F) << v66;
        if ((v70 & 0x80) == 0)
          goto LABEL_123;
        v66 += 7;
        v14 = v67++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_125;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_123:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_125:
      v72 = 16;
LABEL_126:
      *(_DWORD *)(a1 + v72) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiAwdlD2dMigrationStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_78;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_80;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_78:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_80:
          v60 = 16;
          goto LABEL_101;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 52) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_84:
          v61 = 36;
          goto LABEL_110;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 1u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v19 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_88;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_88:
          v60 = 8;
          goto LABEL_101;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 52) |= 0x40u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_92;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_92:
          v61 = 44;
          goto LABEL_110;
        case 5u:
          v40 = 0;
          v41 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 52) |= 0x80u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v26 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_96;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_96:
          v61 = 48;
          goto LABEL_110;
        case 6u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 4u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v19 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_100:
          v60 = 24;
LABEL_101:
          *(_QWORD *)(a1 + v60) = v19;
          continue;
        case 7u:
          v50 = 0;
          v51 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 52) |= 0x20u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v26 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_105:
          v61 = 40;
          goto LABEL_110;
        case 8u:
          v55 = 0;
          v56 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 52) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v57 = *v3;
        v58 = *(_QWORD *)(a2 + v57);
        if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          break;
        v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
        *(_QWORD *)(a2 + v57) = v58 + 1;
        v26 |= (unint64_t)(v59 & 0x7F) << v55;
        if ((v59 & 0x80) == 0)
          goto LABEL_107;
        v55 += 7;
        v14 = v56++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_109;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_107:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_109:
      v61 = 32;
LABEL_110:
      *(_DWORD *)(a1 + v61) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDWifiAwdlHistogramBinReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        *(_BYTE *)(a1 + 32) |= 4u;
        v22 = *v3;
        v23 = *(_QWORD *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v21 = 0;
        }
        v26 = &OBJC_IVAR___AWDWifiAwdlHistogramBin__value;
        goto LABEL_38;
      }
      if ((_DWORD)v18 == 2)
        break;
      if ((_DWORD)v18 == 1)
      {
        *(_BYTE *)(a1 + 32) |= 2u;
        v19 = *v3;
        v20 = *(_QWORD *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v20);
          *(_QWORD *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v21 = 0;
        }
        v26 = &OBJC_IVAR___AWDWifiAwdlHistogramBin__binStart;
LABEL_38:
        *(_QWORD *)(a1 + *v26) = v21;
        goto LABEL_39;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_39:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    *(_BYTE *)(a1 + 32) |= 1u;
    v24 = *v3;
    v25 = *(_QWORD *)(a2 + v24);
    if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(_QWORD *)(a2 + *v4))
    {
      v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v25);
      *(_QWORD *)(a2 + v24) = v25 + 8;
    }
    else
    {
      *(_BYTE *)(a2 + *v5) = 1;
      v21 = 0;
    }
    v26 = &OBJC_IVAR___AWDWifiAwdlHistogramBin__binEnd;
    goto LABEL_38;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiAwdlServiceRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void *Data;
  uint64_t v41;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_51;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_53;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_51:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_53:
          v41 = 16;
          goto LABEL_62;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_57:
          v41 = 32;
          goto LABEL_62;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_61:
          v41 = 20;
LABEL_62:
          *(_DWORD *)(a1 + v41) = v19;
          continue;
        case 4u:
          v34 = 0;
          v35 = 0;
          v36 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          break;
        case 5u:
          Data = (void *)PBReaderReadData();

          *(_QWORD *)(a1 + 24) = Data;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v36 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          goto LABEL_64;
        v34 += 7;
        v14 = v35++ >= 9;
        if (v14)
        {
          v36 = 0;
          goto LABEL_66;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
      if (*(_BYTE *)(a2 + *v5))
        v36 = 0;
LABEL_66:
      *(_QWORD *)(a1 + 8) = v36;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiAwdlStateInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_QWORD *)(a1 + 8) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_39:
        *(_DWORD *)(a1 + 16) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiHardwareVersionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *String;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_33:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiLinkQualityRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  char v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  unsigned int v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  char v176;
  char v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  char v183;
  unsigned int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  char v190;
  unsigned int v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  char v195;
  char v196;
  unsigned int v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x4000000u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_234;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_236;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_234:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_236:
          v202 = 136;
          goto LABEL_337;
        case 2u:
          v26 = 0;
          v27 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x2000000u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v30;
              v20 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                v15 = v27++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_240;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_240:
          v202 = 132;
          goto LABEL_337;
        case 3u:
          v32 = 0;
          v33 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x10000000u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
              *(_QWORD *)(a2 + v34) = v36;
              v20 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                v15 = v33++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_244;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_244:
          v202 = 144;
          goto LABEL_337;
        case 4u:
          v38 = 0;
          v39 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x200u;
          while (2)
          {
            v40 = *v3;
            v41 = *(_QWORD *)(a2 + v40);
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
              *(_QWORD *)(a2 + v40) = v42;
              v20 |= (unint64_t)(v43 & 0x7F) << v38;
              if (v43 < 0)
              {
                v38 += 7;
                v15 = v39++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_248;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_248:
          v202 = 68;
          goto LABEL_337;
        case 5u:
          v44 = 0;
          v45 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x100u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v48;
              v20 |= (unint64_t)(v49 & 0x7F) << v44;
              if (v49 < 0)
              {
                v44 += 7;
                v15 = v45++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_252;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_252:
          v202 = 64;
          goto LABEL_337;
        case 6u:
          v50 = 0;
          v51 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x2000u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            v54 = v53 + 1;
            if (v53 == -1 || v54 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v54;
              v20 |= (unint64_t)(v55 & 0x7F) << v50;
              if (v55 < 0)
              {
                v50 += 7;
                v15 = v51++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_256;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_256:
          v202 = 84;
          goto LABEL_337;
        case 7u:
          v56 = 0;
          v57 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x1000u;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
              *(_QWORD *)(a2 + v58) = v60;
              v20 |= (unint64_t)(v61 & 0x7F) << v56;
              if (v61 < 0)
              {
                v56 += 7;
                v15 = v57++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_260;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_260:
          v202 = 80;
          goto LABEL_337;
        case 8u:
          v62 = 0;
          v63 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x8000u;
          while (2)
          {
            v64 = *v3;
            v65 = *(_QWORD *)(a2 + v64);
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v65);
              *(_QWORD *)(a2 + v64) = v66;
              v20 |= (unint64_t)(v67 & 0x7F) << v62;
              if (v67 < 0)
              {
                v62 += 7;
                v15 = v63++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_264;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_264:
          v202 = 92;
          goto LABEL_337;
        case 9u:
          v68 = 0;
          v69 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x100000u;
          while (2)
          {
            v70 = *v3;
            v71 = *(_QWORD *)(a2 + v70);
            v72 = v71 + 1;
            if (v71 == -1 || v72 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
              *(_QWORD *)(a2 + v70) = v72;
              v20 |= (unint64_t)(v73 & 0x7F) << v68;
              if (v73 < 0)
              {
                v68 += 7;
                v15 = v69++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_268;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_268:
          v202 = 112;
          goto LABEL_337;
        case 0xAu:
          v74 = 0;
          v75 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x80000u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            v78 = v77 + 1;
            if (v77 == -1 || v78 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
              *(_QWORD *)(a2 + v76) = v78;
              v20 |= (unint64_t)(v79 & 0x7F) << v74;
              if (v79 < 0)
              {
                v74 += 7;
                v15 = v75++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_272;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_272:
          v202 = 108;
          goto LABEL_337;
        case 0xBu:
          v80 = 0;
          v81 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x1000000u;
          while (2)
          {
            v82 = *v3;
            v83 = *(_QWORD *)(a2 + v82);
            v84 = v83 + 1;
            if (v83 == -1 || v84 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
              *(_QWORD *)(a2 + v82) = v84;
              v20 |= (unint64_t)(v85 & 0x7F) << v80;
              if (v85 < 0)
              {
                v80 += 7;
                v15 = v81++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_276;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_276:
          v202 = 128;
          goto LABEL_337;
        case 0xCu:
          v86 = 0;
          v87 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x10000u;
          while (2)
          {
            v88 = *v3;
            v89 = *(_QWORD *)(a2 + v88);
            v90 = v89 + 1;
            if (v89 == -1 || v90 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
              *(_QWORD *)(a2 + v88) = v90;
              v20 |= (unint64_t)(v91 & 0x7F) << v86;
              if (v91 < 0)
              {
                v86 += 7;
                v15 = v87++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_280;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_280:
          v202 = 96;
          goto LABEL_337;
        case 0xDu:
          v92 = 0;
          v93 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x40000000u;
          while (2)
          {
            v94 = *v3;
            v95 = *(_QWORD *)(a2 + v94);
            v96 = v95 + 1;
            if (v95 == -1 || v96 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
              *(_QWORD *)(a2 + v94) = v96;
              v20 |= (unint64_t)(v97 & 0x7F) << v92;
              if (v97 < 0)
              {
                v92 += 7;
                v15 = v93++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_284;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_284:
          v202 = 152;
          goto LABEL_337;
        case 0xEu:
          v98 = 0;
          v99 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x8000000u;
          while (2)
          {
            v100 = *v3;
            v101 = *(_QWORD *)(a2 + v100);
            v102 = v101 + 1;
            if (v101 == -1 || v102 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v101);
              *(_QWORD *)(a2 + v100) = v102;
              v20 |= (unint64_t)(v103 & 0x7F) << v98;
              if (v103 < 0)
              {
                v98 += 7;
                v15 = v99++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_288;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_288:
          v202 = 140;
          goto LABEL_337;
        case 0xFu:
          v104 = 0;
          v105 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x4000u;
          while (2)
          {
            v106 = *v3;
            v107 = *(_QWORD *)(a2 + v106);
            v108 = v107 + 1;
            if (v107 == -1 || v108 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
              *(_QWORD *)(a2 + v106) = v108;
              v20 |= (unint64_t)(v109 & 0x7F) << v104;
              if (v109 < 0)
              {
                v104 += 7;
                v15 = v105++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_292;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_292:
          v202 = 88;
          goto LABEL_337;
        case 0x10u:
          v110 = 0;
          v111 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x80u;
          while (2)
          {
            v112 = *v3;
            v113 = *(_QWORD *)(a2 + v112);
            v114 = v113 + 1;
            if (v113 == -1 || v114 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v113);
              *(_QWORD *)(a2 + v112) = v114;
              v20 |= (unint64_t)(v115 & 0x7F) << v110;
              if (v115 < 0)
              {
                v110 += 7;
                v15 = v111++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_296;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_296:
          v202 = 60;
          goto LABEL_337;
        case 0x11u:
          v116 = 0;
          v117 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x400000u;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            v120 = v119 + 1;
            if (v119 == -1 || v120 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
              *(_QWORD *)(a2 + v118) = v120;
              v20 |= (unint64_t)(v121 & 0x7F) << v116;
              if (v121 < 0)
              {
                v116 += 7;
                v15 = v117++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_300;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_300:
          v202 = 120;
          goto LABEL_337;
        case 0x12u:
          v122 = 0;
          v123 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x40000u;
          while (2)
          {
            v124 = *v3;
            v125 = *(_QWORD *)(a2 + v124);
            v126 = v125 + 1;
            if (v125 == -1 || v126 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v127 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v125);
              *(_QWORD *)(a2 + v124) = v126;
              v20 |= (unint64_t)(v127 & 0x7F) << v122;
              if (v127 < 0)
              {
                v122 += 7;
                v15 = v123++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_304;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_304:
          v202 = 104;
          goto LABEL_337;
        case 0x13u:
          v128 = 0;
          v129 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x20000000u;
          while (2)
          {
            v130 = *v3;
            v131 = *(_QWORD *)(a2 + v130);
            v132 = v131 + 1;
            if (v131 == -1 || v132 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v131);
              *(_QWORD *)(a2 + v130) = v132;
              v20 |= (unint64_t)(v133 & 0x7F) << v128;
              if (v133 < 0)
              {
                v128 += 7;
                v15 = v129++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_308;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_308:
          v202 = 148;
          goto LABEL_337;
        case 0x14u:
          v134 = 0;
          v135 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x200000u;
          while (2)
          {
            v136 = *v3;
            v137 = *(_QWORD *)(a2 + v136);
            v138 = v137 + 1;
            if (v137 == -1 || v138 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v137);
              *(_QWORD *)(a2 + v136) = v138;
              v20 |= (unint64_t)(v139 & 0x7F) << v134;
              if (v139 < 0)
              {
                v134 += 7;
                v15 = v135++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_312;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_312:
          v202 = 116;
          goto LABEL_337;
        case 0x15u:
          v140 = 0;
          v141 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x40u;
          while (2)
          {
            v142 = *v3;
            v143 = *(_QWORD *)(a2 + v142);
            v144 = v143 + 1;
            if (v143 == -1 || v144 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v143);
              *(_QWORD *)(a2 + v142) = v144;
              v20 |= (unint64_t)(v145 & 0x7F) << v140;
              if (v145 < 0)
              {
                v140 += 7;
                v15 = v141++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_316;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_316:
          v202 = 56;
          goto LABEL_337;
        case 0x16u:
          v146 = 0;
          v147 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x400u;
          while (2)
          {
            v148 = *v3;
            v149 = *(_QWORD *)(a2 + v148);
            v150 = v149 + 1;
            if (v149 == -1 || v150 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v151 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
              *(_QWORD *)(a2 + v148) = v150;
              v20 |= (unint64_t)(v151 & 0x7F) << v146;
              if (v151 < 0)
              {
                v146 += 7;
                v15 = v147++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_320;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_320:
          v202 = 72;
          goto LABEL_337;
        case 0x17u:
          v152 = 0;
          v153 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x800u;
          while (2)
          {
            v154 = *v3;
            v155 = *(_QWORD *)(a2 + v154);
            v156 = v155 + 1;
            if (v155 == -1 || v156 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v157 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v155);
              *(_QWORD *)(a2 + v154) = v156;
              v20 |= (unint64_t)(v157 & 0x7F) << v152;
              if (v157 < 0)
              {
                v152 += 7;
                v15 = v153++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_324;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_324:
          v202 = 76;
          goto LABEL_337;
        case 0x18u:
          *(_DWORD *)(a1 + 160) |= 1u;
          v158 = *v3;
          v159 = *(_QWORD *)(a2 + v158);
          if (v159 <= 0xFFFFFFFFFFFFFFF7 && v159 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v160 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v159);
            *(_QWORD *)(a2 + v158) = v159 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v160 = 0;
          }
          v204 = 8;
          goto LABEL_359;
        case 0x19u:
          v161 = 0;
          v162 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x800000u;
          while (2)
          {
            v163 = *v3;
            v164 = *(_QWORD *)(a2 + v163);
            v165 = v164 + 1;
            if (v164 == -1 || v165 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v166 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v164);
              *(_QWORD *)(a2 + v163) = v165;
              v20 |= (unint64_t)(v166 & 0x7F) << v161;
              if (v166 < 0)
              {
                v161 += 7;
                v15 = v162++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_328;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_328:
          v202 = 124;
          goto LABEL_337;
        case 0x1Au:
          *(_DWORD *)(a1 + 160) |= 0x10u;
          v167 = *v3;
          v168 = *(_QWORD *)(a2 + v167);
          if (v168 <= 0xFFFFFFFFFFFFFFF7 && v168 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v160 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v168);
            *(_QWORD *)(a2 + v167) = v168 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v160 = 0;
          }
          v204 = 40;
          goto LABEL_359;
        case 0x1Bu:
          *(_DWORD *)(a1 + 160) |= 0x20u;
          v169 = *v3;
          v170 = *(_QWORD *)(a2 + v169);
          if (v170 <= 0xFFFFFFFFFFFFFFF7 && v170 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v160 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v170);
            *(_QWORD *)(a2 + v169) = v170 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v160 = 0;
          }
          v204 = 48;
LABEL_359:
          *(_QWORD *)(a1 + v204) = v160;
          continue;
        case 0x1Cu:
          v171 = 0;
          v172 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x80000000;
          while (2)
          {
            v173 = *v3;
            v174 = *(_QWORD *)(a2 + v173);
            v175 = v174 + 1;
            if (v174 == -1 || v175 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v176 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v174);
              *(_QWORD *)(a2 + v173) = v175;
              v20 |= (unint64_t)(v176 & 0x7F) << v171;
              if (v176 < 0)
              {
                v171 += 7;
                v15 = v172++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_332;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_332:
          v202 = 156;
          goto LABEL_337;
        case 0x1Du:
          v177 = 0;
          v178 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 160) |= 0x20000u;
          while (2)
          {
            v179 = *v3;
            v180 = *(_QWORD *)(a2 + v179);
            v181 = v180 + 1;
            if (v180 == -1 || v181 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v182 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v180);
              *(_QWORD *)(a2 + v179) = v181;
              v20 |= (unint64_t)(v182 & 0x7F) << v177;
              if (v182 < 0)
              {
                v177 += 7;
                v15 = v178++ >= 9;
                if (v15)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_336;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_336:
          v202 = 100;
LABEL_337:
          *(_DWORD *)(a1 + v202) = v20;
          continue;
        case 0x1Eu:
          v183 = 0;
          v184 = 0;
          v185 = 0;
          *(_DWORD *)(a1 + 160) |= 2u;
          while (2)
          {
            v186 = *v3;
            v187 = *(_QWORD *)(a2 + v186);
            v188 = v187 + 1;
            if (v187 == -1 || v188 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v189 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v187);
              *(_QWORD *)(a2 + v186) = v188;
              v185 |= (unint64_t)(v189 & 0x7F) << v183;
              if (v189 < 0)
              {
                v183 += 7;
                v15 = v184++ >= 9;
                if (v15)
                {
                  v185 = 0;
                  goto LABEL_343;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v185 = 0;
LABEL_343:
          v203 = 16;
          goto LABEL_352;
        case 0x1Fu:
          v190 = 0;
          v191 = 0;
          v185 = 0;
          *(_DWORD *)(a1 + 160) |= 8u;
          while (2)
          {
            v192 = *v3;
            v193 = *(_QWORD *)(a2 + v192);
            v194 = v193 + 1;
            if (v193 == -1 || v194 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v195 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v193);
              *(_QWORD *)(a2 + v192) = v194;
              v185 |= (unint64_t)(v195 & 0x7F) << v190;
              if (v195 < 0)
              {
                v190 += 7;
                v15 = v191++ >= 9;
                if (v15)
                {
                  v185 = 0;
                  goto LABEL_347;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v185 = 0;
LABEL_347:
          v203 = 32;
          goto LABEL_352;
        case 0x20u:
          v196 = 0;
          v197 = 0;
          v185 = 0;
          *(_DWORD *)(a1 + 160) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v198 = *v3;
        v199 = *(_QWORD *)(a2 + v198);
        v200 = v199 + 1;
        if (v199 == -1 || v200 > *(_QWORD *)(a2 + *v4))
          break;
        v201 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v199);
        *(_QWORD *)(a2 + v198) = v200;
        v185 |= (unint64_t)(v201 & 0x7F) << v196;
        if ((v201 & 0x80) == 0)
          goto LABEL_349;
        v196 += 7;
        v15 = v197++ >= 9;
        if (v15)
        {
          v185 = 0;
          goto LABEL_351;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_349:
      if (*(_BYTE *)(a2 + *v5))
        v185 = 0;
LABEL_351:
      v203 = 24;
LABEL_352:
      *(_QWORD *)(a1 + v203) = v185;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiMetricWiFiTetheredDeviceOUIReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *Data;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_31;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_33:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3) == 1)
      {
        Data = (void *)PBReaderReadData();

        *(_QWORD *)(a1 + 16) = Data;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiMostUsedNetworksReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *Data;
  id v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  void *String;
  uint64_t v72;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v16 = v10++ >= 9;
        if (v16)
        {
          v11 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v11 = 0;
LABEL_14:
      if (v17 || (v11 & 7) == 4)
        break;
      switch((v11 >> 3))
      {
        case 1u:
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 64) |= 2u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)(a2 + v22);
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
              break;
            v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v23);
            *(_QWORD *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_77;
            v19 += 7;
            v16 = v20++ >= 9;
            if (v16)
            {
              LODWORD(v21) = 0;
              goto LABEL_79;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_77:
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v21) = 0;
LABEL_79:
          v72 = 16;
          goto LABEL_104;
        case 2u:
          v27 = 0;
          v28 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 64) |= 0x10u;
          while (2)
          {
            v29 = *v4;
            v30 = *(_QWORD *)(a2 + v29);
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v30);
              *(_QWORD *)(a2 + v29) = v31;
              v21 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v16 = v28++ >= 9;
                if (v16)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v21) = 0;
LABEL_83:
          v72 = 48;
          goto LABEL_104;
        case 3u:
          *(_BYTE *)(a1 + 64) |= 1u;
          v33 = *v4;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(_QWORD *)(a2 + *v5))
          {
            v35 = *(_QWORD *)(*(_QWORD *)(a2 + *v8) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v6) = 1;
            v35 = 0;
          }
          *(_QWORD *)(a1 + 8) = v35;
          continue;
        case 4u:
          v36 = v2;
          Data = (void *)PBReaderReadData();

          v38 = Data;
          v2 = v36;
          v39 = 24;
          goto LABEL_75;
        case 5u:
          v40 = 0;
          v41 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 64) |= 0x80u;
          while (2)
          {
            v42 = *v4;
            v43 = *(_QWORD *)(a2 + v42);
            v44 = v43 + 1;
            if (v43 == -1 || v44 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v43);
              *(_QWORD *)(a2 + v42) = v44;
              v21 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                v16 = v41++ >= 9;
                if (v16)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v21) = 0;
LABEL_87:
          v72 = 60;
          goto LABEL_104;
        case 6u:
          v46 = 0;
          v47 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 64) |= 8u;
          while (2)
          {
            v48 = *v4;
            v49 = *(_QWORD *)(a2 + v48);
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v49);
              *(_QWORD *)(a2 + v48) = v50;
              v21 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                v16 = v47++ >= 9;
                if (v16)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v21) = 0;
LABEL_91:
          v72 = 44;
          goto LABEL_104;
        case 7u:
          v52 = 0;
          v53 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 64) |= 0x40u;
          while (2)
          {
            v54 = *v4;
            v55 = *(_QWORD *)(a2 + v54);
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v55);
              *(_QWORD *)(a2 + v54) = v56;
              v21 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                v16 = v53++ >= 9;
                if (v16)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v21) = 0;
LABEL_95:
          v72 = 56;
          goto LABEL_104;
        case 8u:
          v58 = 0;
          v59 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 64) |= 0x20u;
          while (2)
          {
            v60 = *v4;
            v61 = *(_QWORD *)(a2 + v60);
            v62 = v61 + 1;
            if (v61 == -1 || v62 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v61);
              *(_QWORD *)(a2 + v60) = v62;
              v21 |= (unint64_t)(v63 & 0x7F) << v58;
              if (v63 < 0)
              {
                v58 += 7;
                v16 = v59++ >= 9;
                if (v16)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v21) = 0;
LABEL_99:
          v72 = 52;
          goto LABEL_104;
        case 9u:
          v64 = 0;
          v65 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 64) |= 4u;
          break;
        case 0xAu:
          v70 = v2;
          String = (void *)PBReaderReadString();

          v38 = String;
          v2 = v70;
          v39 = 32;
LABEL_75:
          *(_QWORD *)(a1 + v39) = v38;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v66 = *v4;
        v67 = *(_QWORD *)(a2 + v66);
        v68 = v67 + 1;
        if (v67 == -1 || v68 > *(_QWORD *)(a2 + *v5))
          break;
        v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v67);
        *(_QWORD *)(a2 + v66) = v68;
        v21 |= (unint64_t)(v69 & 0x7F) << v64;
        if ((v69 & 0x80) == 0)
          goto LABEL_101;
        v64 += 7;
        v16 = v65++ >= 9;
        if (v16)
        {
          LODWORD(v21) = 0;
          goto LABEL_103;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_101:
      if (*(_BYTE *)(a2 + *v6))
        LODWORD(v21) = 0;
LABEL_103:
      v72 = 40;
LABEL_104:
      *(_DWORD *)(a1 + v72) = v21;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL AWDWifiP2PAirplayHistogramBinReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDWifiP2PAirplayHistogramBin__count;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDWifiP2PAirplayHistogramBin__count;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDWifiP2PAirplayHistogramBin__count;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDWifiP2PAirplayHistogramBin__binStart;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDWifiP2PAirplayHistogramBin__binStart;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDWifiP2PAirplayHistogramBin__binStart;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 20) |= 1u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDWifiP2PAirplayHistogramBin__binEnd;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        v25 = &OBJC_IVAR___AWDWifiP2PAirplayHistogramBin__binEnd;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDWifiP2PAirplayHistogramBin__binEnd;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v20) = 0;
LABEL_50:
    *(_DWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiPowerStateReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_BYTE *)(a1 + 16) = v25 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int *v36;
  int *v37;
  int *v38;
  int *v39;
  int *v40;
  uint64_t v41;
  uint64_t result;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v8 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v11 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v12 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v13 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v14 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v15 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v16 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v17 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v18 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v19 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v20 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v21 += 7;
        v27 = v22++ >= 9;
        if (v27)
        {
          v23 = 0;
          v28 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_14:
      if (v28 || (v23 & 7) == 4)
        break;
      switch((v23 >> 3))
      {
        case 1u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 0x1000u;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_120;
            v30 += 7;
            v27 = v31++ >= 9;
            if (v27)
            {
              LODWORD(v32) = 0;
              goto LABEL_122;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_120:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_122:
          v109 = v8[333];
          goto LABEL_176;
        case 2u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[332]) |= 2u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                v27 = v44++ >= 9;
                if (v27)
                {
                  v45 = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v45 = 0;
LABEL_126:
          v110 = v10[334];
          goto LABEL_131;
        case 3u:
          v49 = 0;
          v50 = 0;
          v45 = 0;
          *(_WORD *)(a1 + v7[332]) |= 1u;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v52);
              *(_QWORD *)(a2 + v51) = v52 + 1;
              v45 |= (unint64_t)(v53 & 0x7F) << v49;
              if (v53 < 0)
              {
                v49 += 7;
                v27 = v50++ >= 9;
                if (v27)
                {
                  v45 = 0;
                  goto LABEL_130;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v45 = 0;
LABEL_130:
          v110 = v11[335];
LABEL_131:
          *(_QWORD *)(a1 + v110) = v45;
          continue;
        case 4u:
          v54 = 0;
          v55 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 0x10u;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v32 |= (unint64_t)(v58 & 0x7F) << v54;
              if (v58 < 0)
              {
                v54 += 7;
                v27 = v55++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_135;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_135:
          v109 = v12[336];
          goto LABEL_176;
        case 5u:
          v59 = 0;
          v60 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 8u;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v32 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                v27 = v60++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_139;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_139:
          v109 = v13[337];
          goto LABEL_176;
        case 6u:
          v64 = 0;
          v65 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 0x40u;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v32 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                v27 = v65++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_143;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_143:
          v109 = v14[338];
          goto LABEL_176;
        case 7u:
          v69 = 0;
          v70 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 0x20u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v32 |= (unint64_t)(v73 & 0x7F) << v69;
              if (v73 < 0)
              {
                v69 += 7;
                v27 = v70++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_147;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_147:
          v109 = v15[339];
          goto LABEL_176;
        case 8u:
          v74 = 0;
          v75 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 0x80u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v32 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v27 = v75++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_151;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_151:
          v109 = v16[340];
          goto LABEL_176;
        case 9u:
          v79 = 0;
          v80 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 0x2000u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v32 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v27 = v80++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_155;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_155:
          v109 = v17[341];
          goto LABEL_176;
        case 0xAu:
          v84 = 0;
          v85 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 0x800u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v32 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v27 = v85++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_159;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_159:
          v109 = v18[342];
          goto LABEL_176;
        case 0xBu:
          v89 = 0;
          v90 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 0x400u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v32 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v27 = v90++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_163;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_163:
          v109 = v19[343];
          goto LABEL_176;
        case 0xCu:
          v94 = 0;
          v95 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 0x100u;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v97);
              *(_QWORD *)(a2 + v96) = v97 + 1;
              v32 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                v27 = v95++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_167;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_167:
          v109 = v20[344];
          goto LABEL_176;
        case 0xDu:
          v99 = 0;
          v100 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 0x200u;
          while (2)
          {
            v101 = *v3;
            v102 = *(_QWORD *)(a2 + v101);
            if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v102);
              *(_QWORD *)(a2 + v101) = v102 + 1;
              v32 |= (unint64_t)(v103 & 0x7F) << v99;
              if (v103 < 0)
              {
                v99 += 7;
                v27 = v100++ >= 9;
                if (v27)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_171;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_171:
          v109 = 52;
          goto LABEL_176;
        case 0xEu:
          v104 = 0;
          v105 = 0;
          v32 = 0;
          *(_WORD *)(a1 + v7[332]) |= 4u;
          break;
        default:
          v36 = v8;
          v37 = v10;
          v38 = v7;
          v39 = v11;
          v40 = v12;
          v41 = a1;
          result = PBReaderSkipValueWithTag();
          v20 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v13 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          a1 = v41;
          v14 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v40;
          v15 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v11 = v39;
          v16 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v7 = v38;
          v18 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v10 = v37;
          v17 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v8 = v36;
          v19 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v106 = *v3;
        v107 = *(_QWORD *)(a2 + v106);
        if (v107 == -1 || v107 >= *(_QWORD *)(a2 + *v4))
          break;
        v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v107);
        *(_QWORD *)(a2 + v106) = v107 + 1;
        v32 |= (unint64_t)(v108 & 0x7F) << v104;
        if ((v108 & 0x80) == 0)
          goto LABEL_173;
        v104 += 7;
        v27 = v105++ >= 9;
        if (v27)
        {
          LODWORD(v32) = 0;
          goto LABEL_175;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_173:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v32) = 0;
LABEL_175:
      v109 = 24;
LABEL_176:
      *(_DWORD *)(a1 + v109) = v32;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWifiCallingCallEndReportReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  int v19;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int *v27;
  int *v28;
  int *v29;
  int *v30;
  void *String;
  id v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  char v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v8 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v9 = (int *)MEMORY[0x24BE7AF30];
    v10 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v11 = 0;
        v12 = 0;
        v13 = 0;
        while (1)
        {
          v14 = *v3;
          v15 = *(_QWORD *)(a2 + v14);
          if (v15 == -1 || v15 >= *(_QWORD *)(a2 + *v4))
            break;
          v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v15);
          *(_QWORD *)(a2 + v14) = v15 + 1;
          v13 |= (unint64_t)(v16 & 0x7F) << v11;
          if ((v16 & 0x80) == 0)
            goto LABEL_12;
          v11 += 7;
          v17 = v12++ >= 9;
          if (v17)
          {
            v13 = 0;
            v18 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v18 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v13 = 0;
LABEL_14:
        v19 = v13 & 7;
        if (!v18 && v19 != 4)
        {
          switch((v13 >> 3))
          {
            case 1u:
              v21 = 0;
              v22 = 0;
              v23 = 0;
              *(_WORD *)(a1 + v7[351]) |= 1u;
              while (1)
              {
                v24 = *v3;
                v25 = *(_QWORD *)(a2 + v24);
                if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
                  break;
                v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
                *(_QWORD *)(a2 + v24) = v25 + 1;
                v23 |= (unint64_t)(v26 & 0x7F) << v21;
                if ((v26 & 0x80) == 0)
                  goto LABEL_160;
                v21 += 7;
                v17 = v22++ >= 9;
                if (v17)
                {
                  v23 = 0;
                  goto LABEL_162;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_160:
              if (*(_BYTE *)(a2 + *v5))
                v23 = 0;
LABEL_162:
              *(_QWORD *)(a1 + v8[352]) = v23;
              goto LABEL_238;
            case 2u:
              v27 = v5;
              v28 = v10;
              v29 = v7;
              v30 = v8;
              String = (void *)PBReaderReadString();

              v32 = String;
              v8 = v30;
              v7 = v29;
              v10 = v28;
              v5 = v27;
              *(_QWORD *)(a1 + 112) = v32;
              goto LABEL_238;
            case 3u:
              if (v19 != 2)
              {
                v114 = 0;
                v115 = 0;
                v116 = 0;
                while (1)
                {
                  v117 = *v3;
                  v118 = *(_QWORD *)(a2 + v117);
                  if (v118 == -1 || v118 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_236;
                  v119 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v118);
                  *(_QWORD *)(a2 + v117) = v118 + 1;
                  v116 |= (unint64_t)(v119 & 0x7F) << v114;
                  if (v119 < 0)
                  {
                    v114 += 7;
                    v17 = v115++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_237;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v33 = 0;
                v34 = 0;
                v35 = 0;
                while (1)
                {
                  v36 = *v3;
                  v37 = *(_QWORD *)(a2 + v36);
                  if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v37);
                  *(_QWORD *)(a2 + v36) = v37 + 1;
                  v35 |= (unint64_t)(v38 & 0x7F) << v33;
                  if (v38 < 0)
                  {
                    v33 += 7;
                    v17 = v34++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_41;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
                PBRepeatedUInt32Add();
              }
              goto LABEL_81;
            case 4u:
              if (v19 != 2)
              {
                v120 = 0;
                v121 = 0;
                v122 = 0;
                while (1)
                {
                  v123 = *v3;
                  v124 = *(_QWORD *)(a2 + v123);
                  if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_236;
                  v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v124);
                  *(_QWORD *)(a2 + v123) = v124 + 1;
                  v122 |= (unint64_t)(v125 & 0x7F) << v120;
                  if (v125 < 0)
                  {
                    v120 += 7;
                    v17 = v121++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_237;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v39 = 0;
                v40 = 0;
                v41 = 0;
                while (1)
                {
                  v42 = *v3;
                  v43 = *(_QWORD *)(a2 + v42);
                  if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v43);
                  *(_QWORD *)(a2 + v42) = v43 + 1;
                  v41 |= (unint64_t)(v44 & 0x7F) << v39;
                  if (v44 < 0)
                  {
                    v39 += 7;
                    v17 = v40++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_54;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
                PBRepeatedUInt32Add();
              }
              goto LABEL_81;
            case 5u:
              if (v19 != 2)
              {
                v126 = 0;
                v127 = 0;
                v128 = 0;
                while (1)
                {
                  v129 = *v3;
                  v130 = *(_QWORD *)(a2 + v129);
                  if (v130 == -1 || v130 >= *(_QWORD *)(a2 + *v4))
                    goto LABEL_236;
                  v131 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v130);
                  *(_QWORD *)(a2 + v129) = v130 + 1;
                  v128 |= (unint64_t)(v131 & 0x7F) << v126;
                  if (v131 < 0)
                  {
                    v126 += 7;
                    v17 = v127++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_237;
                }
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v45 = 0;
                v46 = 0;
                v47 = 0;
                while (1)
                {
                  v48 = *v3;
                  v49 = *(_QWORD *)(a2 + v48);
                  if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v49);
                  *(_QWORD *)(a2 + v48) = v49 + 1;
                  v47 |= (unint64_t)(v50 & 0x7F) << v45;
                  if (v50 < 0)
                  {
                    v45 += 7;
                    v17 = v46++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_67;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_67:
                PBRepeatedUInt32Add();
              }
              goto LABEL_81;
            case 6u:
              if (v19 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v51 = 0;
                  v52 = 0;
                  v53 = 0;
                  while (1)
                  {
                    v54 = *v3;
                    v55 = *(_QWORD *)(a2 + v54);
                    if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v55);
                    *(_QWORD *)(a2 + v54) = v55 + 1;
                    v53 |= (unint64_t)(v56 & 0x7F) << v51;
                    if (v56 < 0)
                    {
                      v51 += 7;
                      v17 = v52++ >= 9;
                      if (!v17)
                        continue;
                    }
                    goto LABEL_80;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_80:
                  PBRepeatedUInt32Add();
                }
LABEL_81:
                PBReaderRecallMark();
              }
              else
              {
                v132 = 0;
                v133 = 0;
                v134 = 0;
                while (1)
                {
                  v135 = *v3;
                  v136 = *(_QWORD *)(a2 + v135);
                  if (v136 == -1 || v136 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v137 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v136);
                  *(_QWORD *)(a2 + v135) = v136 + 1;
                  v134 |= (unint64_t)(v137 & 0x7F) << v132;
                  if (v137 < 0)
                  {
                    v132 += 7;
                    v17 = v133++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_237;
                }
LABEL_236:
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_237:
                PBRepeatedUInt32Add();
              }
LABEL_238:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 7u:
              v57 = 0;
              v58 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 0x100u;
              while (2)
              {
                v60 = *v3;
                v61 = *(_QWORD *)(a2 + v60);
                if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v61);
                  *(_QWORD *)(a2 + v60) = v61 + 1;
                  v59 |= (unint64_t)(v62 & 0x7F) << v57;
                  if (v62 < 0)
                  {
                    v57 += 7;
                    v17 = v58++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_166;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_166:
              v113 = 148;
              goto LABEL_207;
            case 8u:
              v63 = 0;
              v64 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 0x40u;
              while (2)
              {
                v65 = *v3;
                v66 = *(_QWORD *)(a2 + v65);
                if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v66);
                  *(_QWORD *)(a2 + v65) = v66 + 1;
                  v59 |= (unint64_t)(v67 & 0x7F) << v63;
                  if (v67 < 0)
                  {
                    v63 += 7;
                    v17 = v64++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_170;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_170:
              v113 = 140;
              goto LABEL_207;
            case 9u:
              v68 = 0;
              v69 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 4u;
              while (2)
              {
                v70 = *v3;
                v71 = *(_QWORD *)(a2 + v70);
                if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v71);
                  *(_QWORD *)(a2 + v70) = v71 + 1;
                  v59 |= (unint64_t)(v72 & 0x7F) << v68;
                  if (v72 < 0)
                  {
                    v68 += 7;
                    v17 = v69++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_174;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_174:
              v113 = 124;
              goto LABEL_207;
            case 0xAu:
              v73 = 0;
              v74 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 0x10u;
              while (2)
              {
                v75 = *v3;
                v76 = *(_QWORD *)(a2 + v75);
                if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v76);
                  *(_QWORD *)(a2 + v75) = v76 + 1;
                  v59 |= (unint64_t)(v77 & 0x7F) << v73;
                  if (v77 < 0)
                  {
                    v73 += 7;
                    v17 = v74++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_178;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_178:
              v113 = 132;
              goto LABEL_207;
            case 0xBu:
              v78 = 0;
              v79 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 0x20u;
              while (2)
              {
                v80 = *v3;
                v81 = *(_QWORD *)(a2 + v80);
                if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v81);
                  *(_QWORD *)(a2 + v80) = v81 + 1;
                  v59 |= (unint64_t)(v82 & 0x7F) << v78;
                  if (v82 < 0)
                  {
                    v78 += 7;
                    v17 = v79++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_182;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_182:
              v113 = 136;
              goto LABEL_207;
            case 0xCu:
              v83 = 0;
              v84 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 8u;
              while (2)
              {
                v85 = *v3;
                v86 = *(_QWORD *)(a2 + v85);
                if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v86);
                  *(_QWORD *)(a2 + v85) = v86 + 1;
                  v59 |= (unint64_t)(v87 & 0x7F) << v83;
                  if (v87 < 0)
                  {
                    v83 += 7;
                    v17 = v84++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_186;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_186:
              v113 = 128;
              goto LABEL_207;
            case 0xDu:
              v88 = 0;
              v89 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 0x80u;
              while (2)
              {
                v90 = *v3;
                v91 = *(_QWORD *)(a2 + v90);
                if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v91);
                  *(_QWORD *)(a2 + v90) = v91 + 1;
                  v59 |= (unint64_t)(v92 & 0x7F) << v88;
                  if (v92 < 0)
                  {
                    v88 += 7;
                    v17 = v89++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_190;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_190:
              v113 = 144;
              goto LABEL_207;
            case 0xEu:
              v93 = 0;
              v94 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 0x800u;
              while (2)
              {
                v95 = *v3;
                v96 = *(_QWORD *)(a2 + v95);
                if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v96);
                  *(_QWORD *)(a2 + v95) = v96 + 1;
                  v59 |= (unint64_t)(v97 & 0x7F) << v93;
                  if (v97 < 0)
                  {
                    v93 += 7;
                    v17 = v94++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_194;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_194:
              v113 = 160;
              goto LABEL_207;
            case 0xFu:
              v98 = 0;
              v99 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 0x400u;
              while (2)
              {
                v100 = *v3;
                v101 = *(_QWORD *)(a2 + v100);
                if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v101);
                  *(_QWORD *)(a2 + v100) = v101 + 1;
                  v59 |= (unint64_t)(v102 & 0x7F) << v98;
                  if (v102 < 0)
                  {
                    v98 += 7;
                    v17 = v99++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_198;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_198:
              v113 = 156;
              goto LABEL_207;
            case 0x10u:
              v103 = 0;
              v104 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 0x200u;
              while (2)
              {
                v105 = *v3;
                v106 = *(_QWORD *)(a2 + v105);
                if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v106);
                  *(_QWORD *)(a2 + v105) = v106 + 1;
                  v59 |= (unint64_t)(v107 & 0x7F) << v103;
                  if (v107 < 0)
                  {
                    v103 += 7;
                    v17 = v104++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_202;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_202:
              v113 = 152;
              goto LABEL_207;
            case 0x11u:
              v108 = 0;
              v109 = 0;
              v59 = 0;
              *(_WORD *)(a1 + v7[351]) |= 2u;
              while (2)
              {
                v110 = *v3;
                v111 = *(_QWORD *)(a2 + v110);
                if (v111 == -1 || v111 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v112 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v111);
                  *(_QWORD *)(a2 + v110) = v111 + 1;
                  v59 |= (unint64_t)(v112 & 0x7F) << v108;
                  if (v112 < 0)
                  {
                    v108 += 7;
                    v17 = v109++ >= 9;
                    if (v17)
                    {
                      LODWORD(v59) = 0;
                      goto LABEL_206;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v59) = 0;
LABEL_206:
              v113 = 120;
LABEL_207:
              *(_DWORD *)(a1 + v113) = v59;
              goto LABEL_238;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_238;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDThroughputEvaluationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  void *String;
  id v132;
  uint64_t v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  char v152;
  unsigned int v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  char v157;
  unsigned int v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  char v173;
  unsigned int v174;
  uint64_t v175;
  unint64_t v176;
  char v177;
  char v178;
  unsigned int v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  char v183;
  unsigned int v184;
  uint64_t v185;
  unint64_t v186;
  char v187;
  char v188;
  unsigned int v189;
  uint64_t v190;
  unint64_t v191;
  char v192;
  char v193;
  unsigned int v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  char v198;
  unsigned int v199;
  uint64_t v200;
  unint64_t v201;
  char v202;
  char v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  char v208;
  char v209;
  unsigned int v210;
  uint64_t v211;
  unint64_t v212;
  char v213;
  char v214;
  unsigned int v215;
  uint64_t v216;
  unint64_t v217;
  char v218;
  char v219;
  unsigned int v220;
  uint64_t v221;
  unint64_t v222;
  char v223;
  char v224;
  unsigned int v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  char v229;
  unsigned int v230;
  uint64_t v231;
  unint64_t v232;
  char v233;
  char v234;
  unsigned int v235;
  uint64_t v236;
  unint64_t v237;
  char v238;
  char v239;
  unsigned int v240;
  uint64_t v241;
  unint64_t v242;
  char v243;
  char v244;
  unsigned int v245;
  uint64_t v246;
  unint64_t v247;
  char v248;
  char v249;
  unsigned int v250;
  uint64_t v251;
  unint64_t v252;
  char v253;
  char v254;
  unsigned int v255;
  uint64_t v256;
  unint64_t v257;
  char v258;
  char v259;
  unsigned int v260;
  uint64_t v261;
  unint64_t v262;
  char v263;
  char v264;
  unsigned int v265;
  uint64_t v266;
  unint64_t v267;
  char v268;
  char v269;
  unsigned int v270;
  uint64_t v271;
  unint64_t v272;
  char v273;
  char v274;
  unsigned int v275;
  uint64_t v276;
  unint64_t v277;
  char v278;
  char v279;
  unsigned int v280;
  uint64_t v281;
  unint64_t v282;
  char v283;
  char v284;
  unsigned int v285;
  uint64_t v286;
  unint64_t v287;
  char v288;
  char v289;
  unsigned int v290;
  uint64_t v291;
  unint64_t v292;
  char v293;
  char v294;
  unsigned int v295;
  uint64_t v296;
  unint64_t v297;
  char v298;
  char v299;
  unsigned int v300;
  uint64_t v301;
  unint64_t v302;
  char v303;
  char v304;
  unsigned int v305;
  uint64_t v306;
  unint64_t v307;
  char v308;
  char v309;
  unsigned int v310;
  uint64_t v311;
  unint64_t v312;
  char v313;
  char v314;
  unsigned int v315;
  uint64_t v316;
  unint64_t v317;
  char v318;
  char v319;
  unsigned int v320;
  uint64_t v321;
  unint64_t v322;
  char v323;
  void *v324;
  char v325;
  unsigned int v326;
  uint64_t v327;
  unint64_t v328;
  char v329;
  char v330;
  unsigned int v331;
  uint64_t v332;
  unint64_t v333;
  char v334;
  char v335;
  unsigned int v336;
  uint64_t v337;
  unint64_t v338;
  char v339;
  char v340;
  unsigned int v341;
  uint64_t v342;
  unint64_t v343;
  char v344;
  char v345;
  unsigned int v346;
  uint64_t v347;
  unint64_t v348;
  char v349;
  char v350;
  unsigned int v351;
  uint64_t v352;
  unint64_t v353;
  char v354;
  char v355;
  unsigned int v356;
  uint64_t v357;
  unint64_t v358;
  char v359;
  char v360;
  unsigned int v361;
  uint64_t v362;
  unint64_t v363;
  char v364;
  char v365;
  unsigned int v366;
  uint64_t v367;
  unint64_t v368;
  char v369;
  char v370;
  unsigned int v371;
  uint64_t v372;
  unint64_t v373;
  char v374;
  char v375;
  unsigned int v376;
  uint64_t v377;
  unint64_t v378;
  char v379;
  char v380;
  unsigned int v381;
  uint64_t v382;
  unint64_t v383;
  char v384;
  char v385;
  unsigned int v386;
  uint64_t v387;
  unint64_t v388;
  char v389;
  char v390;
  unsigned int v391;
  uint64_t v392;
  unint64_t v393;
  char v394;
  char v395;
  unsigned int v396;
  uint64_t v397;
  uint64_t v398;
  unint64_t v399;
  char v400;
  char v401;
  unsigned int v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  char v406;
  char v407;
  unsigned int v408;
  uint64_t v409;
  unint64_t v410;
  char v411;
  char v412;
  unsigned int v413;
  uint64_t v414;
  unint64_t v415;
  char v416;
  char v417;
  unsigned int v418;
  uint64_t v419;
  unint64_t v420;
  char v421;
  char v422;
  unsigned int v423;
  uint64_t v424;
  unint64_t v425;
  char v426;
  char v427;
  unsigned int v428;
  uint64_t v429;
  unint64_t v430;
  char v431;
  char v432;
  unsigned int v433;
  uint64_t v434;
  unint64_t v435;
  char v436;
  char v437;
  unsigned int v438;
  uint64_t v439;
  unint64_t v440;
  char v441;
  char v442;
  unsigned int v443;
  uint64_t v444;
  unint64_t v445;
  char v446;
  char v447;
  unsigned int v448;
  uint64_t v449;
  unint64_t v450;
  char v451;
  char v452;
  unsigned int v453;
  uint64_t v454;
  unint64_t v455;
  char v456;
  char v457;
  unsigned int v458;
  uint64_t v459;
  unint64_t v460;
  char v461;
  char v462;
  unsigned int v463;
  uint64_t v464;
  unint64_t v465;
  char v466;
  char v467;
  unsigned int v468;
  uint64_t v469;
  unint64_t v470;
  char v471;
  char v472;
  unsigned int v473;
  uint64_t v474;
  unint64_t v475;
  char v476;
  char v477;
  unsigned int v478;
  uint64_t v479;
  unint64_t v480;
  char v481;
  char v482;
  unsigned int v483;
  uint64_t v484;
  unint64_t v485;
  char v486;
  char v487;
  unsigned int v488;
  uint64_t v489;
  unint64_t v490;
  char v491;
  char v492;
  unsigned int v493;
  uint64_t v494;
  unint64_t v495;
  char v496;
  char v497;
  unsigned int v498;
  uint64_t v499;
  unint64_t v500;
  char v501;
  uint64_t v502;
  int v503;
  uint64_t v504;
  BOOL v505;
  uint64_t v506;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x200000000uLL;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_683;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_685;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_683:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_685:
          v502 = 152;
          goto LABEL_1060;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x100uLL;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_689;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_689:
          v502 = 52;
          goto LABEL_1060;
        case 3u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_QWORD *)(a1 + 400) |= 1uLL;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  v31 = 0;
                  goto LABEL_693;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_693:
          *(_QWORD *)(a1 + 8) = -(v31 & 1) ^ (v31 >> 1);
          continue;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x400000000000000uLL;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v19 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_697;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_697:
          v502 = 252;
          goto LABEL_1060;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x4000000000000000uLL;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v19 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_701;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_701:
          v502 = 268;
          goto LABEL_1060;
        case 6u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x200uLL;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v19 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v14 = v46++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_705;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_705:
          v502 = 56;
          goto LABEL_1060;
        case 7u:
          v50 = 0;
          v51 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x20uLL;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v19 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_709;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_709:
          v502 = 40;
          goto LABEL_1060;
        case 8u:
          v55 = 0;
          v56 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x800000000uLL;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v19 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_713;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_713:
          v502 = 160;
          goto LABEL_1060;
        case 9u:
          v60 = 0;
          v61 = 0;
          v62 = 0;
          *(_DWORD *)(a1 + 408) |= 0x200000u;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
              *(_QWORD *)(a2 + v63) = v64 + 1;
              v62 |= (unint64_t)(v65 & 0x7F) << v60;
              if (v65 < 0)
              {
                v60 += 7;
                v14 = v61++ >= 9;
                if (v14)
                {
                  LODWORD(v62) = 0;
                  goto LABEL_717;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v62) = 0;
LABEL_717:
          v503 = -(v62 & 1) ^ ((int)v62 >> 1);
          v504 = 368;
          goto LABEL_826;
        case 0xAu:
          v66 = 0;
          v67 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x1000000000000000uLL;
          while (2)
          {
            v68 = *v3;
            v69 = *(_QWORD *)(a2 + v68);
            if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
              *(_QWORD *)(a2 + v68) = v69 + 1;
              v19 |= (unint64_t)(v70 & 0x7F) << v66;
              if (v70 < 0)
              {
                v66 += 7;
                v14 = v67++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_721;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_721:
          v502 = 260;
          goto LABEL_1060;
        case 0xBu:
          v71 = 0;
          v72 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x2000000000000000uLL;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
              *(_QWORD *)(a2 + v73) = v74 + 1;
              v19 |= (unint64_t)(v75 & 0x7F) << v71;
              if (v75 < 0)
              {
                v71 += 7;
                v14 = v72++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_725;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_725:
          v502 = 264;
          goto LABEL_1060;
        case 0xCu:
          v76 = 0;
          v77 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x40000000000uLL;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
              *(_QWORD *)(a2 + v78) = v79 + 1;
              v19 |= (unint64_t)(v80 & 0x7F) << v76;
              if (v80 < 0)
              {
                v76 += 7;
                v14 = v77++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_729;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_729:
          v502 = 188;
          goto LABEL_1060;
        case 0xDu:
          v81 = 0;
          v82 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x200000000000000uLL;
          while (2)
          {
            v83 = *v3;
            v84 = *(_QWORD *)(a2 + v83);
            if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
              *(_QWORD *)(a2 + v83) = v84 + 1;
              v19 |= (unint64_t)(v85 & 0x7F) << v81;
              if (v85 < 0)
              {
                v81 += 7;
                v14 = v82++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_733;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_733:
          v502 = 248;
          goto LABEL_1060;
        case 0xEu:
          v86 = 0;
          v87 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x400000000uLL;
          while (2)
          {
            v88 = *v3;
            v89 = *(_QWORD *)(a2 + v88);
            if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
              *(_QWORD *)(a2 + v88) = v89 + 1;
              v19 |= (unint64_t)(v90 & 0x7F) << v86;
              if (v90 < 0)
              {
                v86 += 7;
                v14 = v87++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_737;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_737:
          v502 = 156;
          goto LABEL_1060;
        case 0xFu:
          v91 = 0;
          v92 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x100000000000000uLL;
          while (2)
          {
            v93 = *v3;
            v94 = *(_QWORD *)(a2 + v93);
            if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
              *(_QWORD *)(a2 + v93) = v94 + 1;
              v19 |= (unint64_t)(v95 & 0x7F) << v91;
              if (v95 < 0)
              {
                v91 += 7;
                v14 = v92++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_741;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_741:
          v502 = 244;
          goto LABEL_1060;
        case 0x10u:
          v96 = 0;
          v97 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x10uLL;
          while (2)
          {
            v98 = *v3;
            v99 = *(_QWORD *)(a2 + v98);
            if (v99 == -1 || v99 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v100 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
              *(_QWORD *)(a2 + v98) = v99 + 1;
              v19 |= (unint64_t)(v100 & 0x7F) << v96;
              if (v100 < 0)
              {
                v96 += 7;
                v14 = v97++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_745;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_745:
          v502 = 36;
          goto LABEL_1060;
        case 0x11u:
          v101 = 0;
          v102 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x2000000000uLL;
          while (2)
          {
            v103 = *v3;
            v104 = *(_QWORD *)(a2 + v103);
            if (v104 == -1 || v104 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
              *(_QWORD *)(a2 + v103) = v104 + 1;
              v19 |= (unint64_t)(v105 & 0x7F) << v101;
              if (v105 < 0)
              {
                v101 += 7;
                v14 = v102++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_749;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_749:
          v502 = 168;
          goto LABEL_1060;
        case 0x12u:
          v106 = 0;
          v107 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x8000000000uLL;
          while (2)
          {
            v108 = *v3;
            v109 = *(_QWORD *)(a2 + v108);
            if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
              *(_QWORD *)(a2 + v108) = v109 + 1;
              v19 |= (unint64_t)(v110 & 0x7F) << v106;
              if (v110 < 0)
              {
                v106 += 7;
                v14 = v107++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_753;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_753:
          v502 = 176;
          goto LABEL_1060;
        case 0x13u:
          v111 = 0;
          v112 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 8uLL;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
              *(_QWORD *)(a2 + v113) = v114 + 1;
              v19 |= (unint64_t)(v115 & 0x7F) << v111;
              if (v115 < 0)
              {
                v111 += 7;
                v14 = v112++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_757;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_757:
          v502 = 32;
          goto LABEL_1060;
        case 0x14u:
          v116 = 0;
          v117 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x1000000000uLL;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
              *(_QWORD *)(a2 + v118) = v119 + 1;
              v19 |= (unint64_t)(v120 & 0x7F) << v116;
              if (v120 < 0)
              {
                v116 += 7;
                v14 = v117++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_761;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_761:
          v502 = 164;
          goto LABEL_1060;
        case 0x15u:
          v121 = 0;
          v122 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x4000000000uLL;
          while (2)
          {
            v123 = *v3;
            v124 = *(_QWORD *)(a2 + v123);
            if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
              *(_QWORD *)(a2 + v123) = v124 + 1;
              v19 |= (unint64_t)(v125 & 0x7F) << v121;
              if (v125 < 0)
              {
                v121 += 7;
                v14 = v122++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_765;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_765:
          v502 = 172;
          goto LABEL_1060;
        case 0x16u:
          v126 = 0;
          v127 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x80000000000uLL;
          while (2)
          {
            v128 = *v3;
            v129 = *(_QWORD *)(a2 + v128);
            if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
              *(_QWORD *)(a2 + v128) = v129 + 1;
              v19 |= (unint64_t)(v130 & 0x7F) << v126;
              if (v130 < 0)
              {
                v126 += 7;
                v14 = v127++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_769;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_769:
          v502 = 192;
          goto LABEL_1060;
        case 0x17u:
          String = (void *)PBReaderReadString();

          v132 = String;
          v133 = 272;
          goto LABEL_436;
        case 0x18u:
          v134 = 0;
          v135 = 0;
          v136 = 0;
          *(_QWORD *)(a1 + 400) |= 0x100000uLL;
          while (2)
          {
            v137 = *v3;
            v138 = *(_QWORD *)(a2 + v137);
            if (v138 == -1 || v138 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
              *(_QWORD *)(a2 + v137) = v138 + 1;
              v136 |= (unint64_t)(v139 & 0x7F) << v134;
              if (v139 < 0)
              {
                v134 += 7;
                v14 = v135++ >= 9;
                if (v14)
                {
                  LODWORD(v136) = 0;
                  goto LABEL_773;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v136) = 0;
LABEL_773:
          v503 = -(v136 & 1) ^ ((int)v136 >> 1);
          v504 = 100;
          goto LABEL_826;
        case 0x19u:
          v140 = 0;
          v141 = 0;
          v142 = 0;
          *(_QWORD *)(a1 + 400) |= 0x200000uLL;
          while (2)
          {
            v143 = *v3;
            v144 = *(_QWORD *)(a2 + v143);
            if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
              *(_QWORD *)(a2 + v143) = v144 + 1;
              v142 |= (unint64_t)(v145 & 0x7F) << v140;
              if (v145 < 0)
              {
                v140 += 7;
                v14 = v141++ >= 9;
                if (v14)
                {
                  LODWORD(v142) = 0;
                  goto LABEL_777;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v142) = 0;
LABEL_777:
          v503 = -(v142 & 1) ^ ((int)v142 >> 1);
          v504 = 104;
          goto LABEL_826;
        case 0x1Au:
          v146 = 0;
          v147 = 0;
          v148 = 0;
          *(_QWORD *)(a1 + 400) |= 0x40uLL;
          while (2)
          {
            v149 = *v3;
            v150 = *(_QWORD *)(a2 + v149);
            if (v150 == -1 || v150 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v151 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v150);
              *(_QWORD *)(a2 + v149) = v150 + 1;
              v148 |= (unint64_t)(v151 & 0x7F) << v146;
              if (v151 < 0)
              {
                v146 += 7;
                v14 = v147++ >= 9;
                if (v14)
                {
                  LODWORD(v148) = 0;
                  goto LABEL_781;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v148) = 0;
LABEL_781:
          v503 = -(v148 & 1) ^ ((int)v148 >> 1);
          v504 = 44;
          goto LABEL_826;
        case 0x1Bu:
          v152 = 0;
          v153 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x200u;
          while (2)
          {
            v154 = *v3;
            v155 = *(_QWORD *)(a2 + v154);
            if (v155 == -1 || v155 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v156 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v155);
              *(_QWORD *)(a2 + v154) = v155 + 1;
              v19 |= (unint64_t)(v156 & 0x7F) << v152;
              if (v156 < 0)
              {
                v152 += 7;
                v14 = v153++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_785;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_785:
          v502 = 320;
          goto LABEL_1060;
        case 0x1Cu:
          v157 = 0;
          v158 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 4u;
          while (2)
          {
            v159 = *v3;
            v160 = *(_QWORD *)(a2 + v159);
            if (v160 == -1 || v160 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
              *(_QWORD *)(a2 + v159) = v160 + 1;
              v19 |= (unint64_t)(v161 & 0x7F) << v157;
              if (v161 < 0)
              {
                v157 += 7;
                v14 = v158++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_789;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_789:
          v502 = 292;
          goto LABEL_1060;
        case 0x1Du:
          v162 = 0;
          v163 = 0;
          v164 = 0;
          *(_QWORD *)(a1 + 400) |= 0x20000000000uLL;
          while (2)
          {
            v165 = *v3;
            v166 = *(_QWORD *)(a2 + v165);
            if (v166 == -1 || v166 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v167 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v166);
              *(_QWORD *)(a2 + v165) = v166 + 1;
              v164 |= (unint64_t)(v167 & 0x7F) << v162;
              if (v167 < 0)
              {
                v162 += 7;
                v14 = v163++ >= 9;
                if (v14)
                {
                  LODWORD(v164) = 0;
                  goto LABEL_793;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v164) = 0;
LABEL_793:
          v503 = -(v164 & 1) ^ ((int)v164 >> 1);
          v504 = 184;
          goto LABEL_826;
        case 0x1Eu:
          v168 = 0;
          v169 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x8000000u;
          while (2)
          {
            v170 = *v3;
            v171 = *(_QWORD *)(a2 + v170);
            if (v171 == -1 || v171 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v172 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v171);
              *(_QWORD *)(a2 + v170) = v171 + 1;
              v19 |= (unint64_t)(v172 & 0x7F) << v168;
              if (v172 < 0)
              {
                v168 += 7;
                v14 = v169++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_797;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_797:
          v502 = 392;
          goto LABEL_1060;
        case 0x1Fu:
          v173 = 0;
          v174 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 4uLL;
          while (2)
          {
            v175 = *v3;
            v176 = *(_QWORD *)(a2 + v175);
            if (v176 == -1 || v176 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v177 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v176);
              *(_QWORD *)(a2 + v175) = v176 + 1;
              v19 |= (unint64_t)(v177 & 0x7F) << v173;
              if (v177 < 0)
              {
                v173 += 7;
                v14 = v174++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_801;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_801:
          v502 = 20;
          goto LABEL_1060;
        case 0x20u:
          v178 = 0;
          v179 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 2uLL;
          while (2)
          {
            v180 = *v3;
            v181 = *(_QWORD *)(a2 + v180);
            if (v181 == -1 || v181 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v182 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v181);
              *(_QWORD *)(a2 + v180) = v181 + 1;
              v19 |= (unint64_t)(v182 & 0x7F) << v178;
              if (v182 < 0)
              {
                v178 += 7;
                v14 = v179++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_805;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_805:
          v502 = 16;
          goto LABEL_1060;
        case 0x21u:
          v183 = 0;
          v184 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x80000000uLL;
          while (2)
          {
            v185 = *v3;
            v186 = *(_QWORD *)(a2 + v185);
            if (v186 == -1 || v186 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v187 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v186);
              *(_QWORD *)(a2 + v185) = v186 + 1;
              v19 |= (unint64_t)(v187 & 0x7F) << v183;
              if (v187 < 0)
              {
                v183 += 7;
                v14 = v184++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_809;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_809:
          v502 = 144;
          goto LABEL_1060;
        case 0x22u:
          v188 = 0;
          v189 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x40000000uLL;
          while (2)
          {
            v190 = *v3;
            v191 = *(_QWORD *)(a2 + v190);
            if (v191 == -1 || v191 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v192 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v191);
              *(_QWORD *)(a2 + v190) = v191 + 1;
              v19 |= (unint64_t)(v192 & 0x7F) << v188;
              if (v192 < 0)
              {
                v188 += 7;
                v14 = v189++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_813;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_813:
          v502 = 140;
          goto LABEL_1060;
        case 0x23u:
          v193 = 0;
          v194 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x8000000000000uLL;
          while (2)
          {
            v195 = *v3;
            v196 = *(_QWORD *)(a2 + v195);
            if (v196 == -1 || v196 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v197 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v196);
              *(_QWORD *)(a2 + v195) = v196 + 1;
              v19 |= (unint64_t)(v197 & 0x7F) << v193;
              if (v197 < 0)
              {
                v193 += 7;
                v14 = v194++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_817;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_817:
          v502 = 224;
          goto LABEL_1060;
        case 0x24u:
          v198 = 0;
          v199 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x4000000000000uLL;
          while (2)
          {
            v200 = *v3;
            v201 = *(_QWORD *)(a2 + v200);
            if (v201 == -1 || v201 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v202 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v201);
              *(_QWORD *)(a2 + v200) = v201 + 1;
              v19 |= (unint64_t)(v202 & 0x7F) << v198;
              if (v202 < 0)
              {
                v198 += 7;
                v14 = v199++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_821;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_821:
          v502 = 220;
          goto LABEL_1060;
        case 0x25u:
          v203 = 0;
          v204 = 0;
          v205 = 0;
          *(_QWORD *)(a1 + 400) |= 0x10000000uLL;
          while (2)
          {
            v206 = *v3;
            v207 = *(_QWORD *)(a2 + v206);
            if (v207 == -1 || v207 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v208 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v207);
              *(_QWORD *)(a2 + v206) = v207 + 1;
              v205 |= (unint64_t)(v208 & 0x7F) << v203;
              if (v208 < 0)
              {
                v203 += 7;
                v14 = v204++ >= 9;
                if (v14)
                {
                  LODWORD(v205) = 0;
                  goto LABEL_825;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v205) = 0;
LABEL_825:
          v503 = -(v205 & 1) ^ ((int)v205 >> 1);
          v504 = 132;
LABEL_826:
          *(_DWORD *)(a1 + v504) = v503;
          continue;
        case 0x26u:
          v209 = 0;
          v210 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x400000000000uLL;
          while (2)
          {
            v211 = *v3;
            v212 = *(_QWORD *)(a2 + v211);
            if (v212 == -1 || v212 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v213 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v212);
              *(_QWORD *)(a2 + v211) = v212 + 1;
              v19 |= (unint64_t)(v213 & 0x7F) << v209;
              if (v213 < 0)
              {
                v209 += 7;
                v14 = v210++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_830;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_830:
          v502 = 204;
          goto LABEL_1060;
        case 0x27u:
          v214 = 0;
          v215 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x800000000000000uLL;
          while (2)
          {
            v216 = *v3;
            v217 = *(_QWORD *)(a2 + v216);
            if (v217 == -1 || v217 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v218 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v217);
              *(_QWORD *)(a2 + v216) = v217 + 1;
              v19 |= (unint64_t)(v218 & 0x7F) << v214;
              if (v218 < 0)
              {
                v214 += 7;
                v14 = v215++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_834;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_834:
          v502 = 256;
          goto LABEL_1060;
        case 0x28u:
          v219 = 0;
          v220 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x8000000uLL;
          while (2)
          {
            v221 = *v3;
            v222 = *(_QWORD *)(a2 + v221);
            if (v222 == -1 || v222 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v223 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v222);
              *(_QWORD *)(a2 + v221) = v222 + 1;
              v19 |= (unint64_t)(v223 & 0x7F) << v219;
              if (v223 < 0)
              {
                v219 += 7;
                v14 = v220++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_838;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_838:
          v502 = 128;
          goto LABEL_1060;
        case 0x29u:
          v224 = 0;
          v225 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x4000000uLL;
          while (2)
          {
            v226 = *v3;
            v227 = *(_QWORD *)(a2 + v226);
            if (v227 == -1 || v227 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v228 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v227);
              *(_QWORD *)(a2 + v226) = v227 + 1;
              v19 |= (unint64_t)(v228 & 0x7F) << v224;
              if (v228 < 0)
              {
                v224 += 7;
                v14 = v225++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_842;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_842:
          v502 = 124;
          goto LABEL_1060;
        case 0x2Au:
          v229 = 0;
          v230 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x800u;
          while (2)
          {
            v231 = *v3;
            v232 = *(_QWORD *)(a2 + v231);
            if (v232 == -1 || v232 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v233 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v232);
              *(_QWORD *)(a2 + v231) = v232 + 1;
              v19 |= (unint64_t)(v233 & 0x7F) << v229;
              if (v233 < 0)
              {
                v229 += 7;
                v14 = v230++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_846;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_846:
          v502 = 328;
          goto LABEL_1060;
        case 0x2Bu:
          v234 = 0;
          v235 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x400u;
          while (2)
          {
            v236 = *v3;
            v237 = *(_QWORD *)(a2 + v236);
            if (v237 == -1 || v237 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v238 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v237);
              *(_QWORD *)(a2 + v236) = v237 + 1;
              v19 |= (unint64_t)(v238 & 0x7F) << v234;
              if (v238 < 0)
              {
                v234 += 7;
                v14 = v235++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_850;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_850:
          v502 = 324;
          goto LABEL_1060;
        case 0x2Cu:
          v239 = 0;
          v240 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 8u;
          while (2)
          {
            v241 = *v3;
            v242 = *(_QWORD *)(a2 + v241);
            if (v242 == -1 || v242 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v243 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v242);
              *(_QWORD *)(a2 + v241) = v242 + 1;
              v19 |= (unint64_t)(v243 & 0x7F) << v239;
              if (v243 < 0)
              {
                v239 += 7;
                v14 = v240++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_854;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_854:
          v502 = 296;
          goto LABEL_1060;
        case 0x2Du:
          v244 = 0;
          v245 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x2000u;
          while (2)
          {
            v246 = *v3;
            v247 = *(_QWORD *)(a2 + v246);
            if (v247 == -1 || v247 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v248 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v247);
              *(_QWORD *)(a2 + v246) = v247 + 1;
              v19 |= (unint64_t)(v248 & 0x7F) << v244;
              if (v248 < 0)
              {
                v244 += 7;
                v14 = v245++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_858;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_858:
          v502 = 336;
          goto LABEL_1060;
        case 0x2Eu:
          v249 = 0;
          v250 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x1000u;
          while (2)
          {
            v251 = *v3;
            v252 = *(_QWORD *)(a2 + v251);
            if (v252 == -1 || v252 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v253 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v252);
              *(_QWORD *)(a2 + v251) = v252 + 1;
              v19 |= (unint64_t)(v253 & 0x7F) << v249;
              if (v253 < 0)
              {
                v249 += 7;
                v14 = v250++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_862;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_862:
          v502 = 332;
          goto LABEL_1060;
        case 0x2Fu:
          v254 = 0;
          v255 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x4000u;
          while (2)
          {
            v256 = *v3;
            v257 = *(_QWORD *)(a2 + v256);
            if (v257 == -1 || v257 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v258 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v257);
              *(_QWORD *)(a2 + v256) = v257 + 1;
              v19 |= (unint64_t)(v258 & 0x7F) << v254;
              if (v258 < 0)
              {
                v254 += 7;
                v14 = v255++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_866;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_866:
          v502 = 340;
          goto LABEL_1060;
        case 0x30u:
          v259 = 0;
          v260 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x8000u;
          while (2)
          {
            v261 = *v3;
            v262 = *(_QWORD *)(a2 + v261);
            if (v262 == -1 || v262 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v263 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v262);
              *(_QWORD *)(a2 + v261) = v262 + 1;
              v19 |= (unint64_t)(v263 & 0x7F) << v259;
              if (v263 < 0)
              {
                v259 += 7;
                v14 = v260++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_870;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_870:
          v502 = 344;
          goto LABEL_1060;
        case 0x31u:
          v264 = 0;
          v265 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x400000uLL;
          while (2)
          {
            v266 = *v3;
            v267 = *(_QWORD *)(a2 + v266);
            if (v267 == -1 || v267 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v268 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v267);
              *(_QWORD *)(a2 + v266) = v267 + 1;
              v19 |= (unint64_t)(v268 & 0x7F) << v264;
              if (v268 < 0)
              {
                v264 += 7;
                v14 = v265++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_874;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_874:
          v502 = 108;
          goto LABEL_1060;
        case 0x32u:
          v269 = 0;
          v270 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x800000uLL;
          while (2)
          {
            v271 = *v3;
            v272 = *(_QWORD *)(a2 + v271);
            if (v272 == -1 || v272 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v273 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v272);
              *(_QWORD *)(a2 + v271) = v272 + 1;
              v19 |= (unint64_t)(v273 & 0x7F) << v269;
              if (v273 < 0)
              {
                v269 += 7;
                v14 = v270++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_878;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_878:
          v502 = 112;
          goto LABEL_1060;
        case 0x33u:
          v274 = 0;
          v275 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x1000000uLL;
          while (2)
          {
            v276 = *v3;
            v277 = *(_QWORD *)(a2 + v276);
            if (v277 == -1 || v277 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v278 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v277);
              *(_QWORD *)(a2 + v276) = v277 + 1;
              v19 |= (unint64_t)(v278 & 0x7F) << v274;
              if (v278 < 0)
              {
                v274 += 7;
                v14 = v275++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_882;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_882:
          v502 = 116;
          goto LABEL_1060;
        case 0x34u:
          v279 = 0;
          v280 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x20000000uLL;
          while (2)
          {
            v281 = *v3;
            v282 = *(_QWORD *)(a2 + v281);
            if (v282 == -1 || v282 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v283 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v282);
              *(_QWORD *)(a2 + v281) = v282 + 1;
              v19 |= (unint64_t)(v283 & 0x7F) << v279;
              if (v283 < 0)
              {
                v279 += 7;
                v14 = v280++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_886;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_886:
          v502 = 136;
          goto LABEL_1060;
        case 0x35u:
          v284 = 0;
          v285 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 2u;
          while (2)
          {
            v286 = *v3;
            v287 = *(_QWORD *)(a2 + v286);
            if (v287 == -1 || v287 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v288 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v287);
              *(_QWORD *)(a2 + v286) = v287 + 1;
              v19 |= (unint64_t)(v288 & 0x7F) << v284;
              if (v288 < 0)
              {
                v284 += 7;
                v14 = v285++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_890;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_890:
          v502 = 288;
          goto LABEL_1060;
        case 0x36u:
          v289 = 0;
          v290 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x2000000000000uLL;
          while (2)
          {
            v291 = *v3;
            v292 = *(_QWORD *)(a2 + v291);
            if (v292 == -1 || v292 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v293 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v292);
              *(_QWORD *)(a2 + v291) = v292 + 1;
              v19 |= (unint64_t)(v293 & 0x7F) << v289;
              if (v293 < 0)
              {
                v289 += 7;
                v14 = v290++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_894;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_894:
          v502 = 216;
          goto LABEL_1060;
        case 0x37u:
          v294 = 0;
          v295 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x100000u;
          while (2)
          {
            v296 = *v3;
            v297 = *(_QWORD *)(a2 + v296);
            if (v297 == -1 || v297 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v298 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v297);
              *(_QWORD *)(a2 + v296) = v297 + 1;
              v19 |= (unint64_t)(v298 & 0x7F) << v294;
              if (v298 < 0)
              {
                v294 += 7;
                v14 = v295++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_898;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_898:
          v502 = 364;
          goto LABEL_1060;
        case 0x38u:
          v299 = 0;
          v300 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x80000u;
          while (2)
          {
            v301 = *v3;
            v302 = *(_QWORD *)(a2 + v301);
            if (v302 == -1 || v302 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v303 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v302);
              *(_QWORD *)(a2 + v301) = v302 + 1;
              v19 |= (unint64_t)(v303 & 0x7F) << v299;
              if (v303 < 0)
              {
                v299 += 7;
                v14 = v300++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_902;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_902:
          v502 = 360;
          goto LABEL_1060;
        case 0x39u:
          v304 = 0;
          v305 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x1000000000000uLL;
          while (2)
          {
            v306 = *v3;
            v307 = *(_QWORD *)(a2 + v306);
            if (v307 == -1 || v307 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v308 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v307);
              *(_QWORD *)(a2 + v306) = v307 + 1;
              v19 |= (unint64_t)(v308 & 0x7F) << v304;
              if (v308 < 0)
              {
                v304 += 7;
                v14 = v305++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_906;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_906:
          v502 = 212;
          goto LABEL_1060;
        case 0x3Au:
          v309 = 0;
          v310 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x10000uLL;
          while (2)
          {
            v311 = *v3;
            v312 = *(_QWORD *)(a2 + v311);
            if (v312 == -1 || v312 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v313 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v312);
              *(_QWORD *)(a2 + v311) = v312 + 1;
              v19 |= (unint64_t)(v313 & 0x7F) << v309;
              if (v313 < 0)
              {
                v309 += 7;
                v14 = v310++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_910;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_910:
          v502 = 84;
          goto LABEL_1060;
        case 0x3Bu:
          v314 = 0;
          v315 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x8000uLL;
          while (2)
          {
            v316 = *v3;
            v317 = *(_QWORD *)(a2 + v316);
            if (v317 == -1 || v317 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v318 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v317);
              *(_QWORD *)(a2 + v316) = v317 + 1;
              v19 |= (unint64_t)(v318 & 0x7F) << v314;
              if (v318 < 0)
              {
                v314 += 7;
                v14 = v315++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_914;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_914:
          v502 = 80;
          goto LABEL_1060;
        case 0x3Cu:
          v319 = 0;
          v320 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x2000uLL;
          while (2)
          {
            v321 = *v3;
            v322 = *(_QWORD *)(a2 + v321);
            if (v322 == -1 || v322 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v323 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v322);
              *(_QWORD *)(a2 + v321) = v322 + 1;
              v19 |= (unint64_t)(v323 & 0x7F) << v319;
              if (v323 < 0)
              {
                v319 += 7;
                v14 = v320++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_918;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_918:
          v502 = 72;
          goto LABEL_1060;
        case 0x3Du:
          v324 = (void *)PBReaderReadString();

          v132 = v324;
          v133 = 24;
LABEL_436:
          *(_QWORD *)(a1 + v133) = v132;
          continue;
        case 0x3Eu:
          v325 = 0;
          v326 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x10u;
          while (2)
          {
            v327 = *v3;
            v328 = *(_QWORD *)(a2 + v327);
            if (v328 == -1 || v328 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v329 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v328);
              *(_QWORD *)(a2 + v327) = v328 + 1;
              v19 |= (unint64_t)(v329 & 0x7F) << v325;
              if (v329 < 0)
              {
                v325 += 7;
                v14 = v326++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_922;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_922:
          v502 = 300;
          goto LABEL_1060;
        case 0x3Fu:
          v330 = 0;
          v331 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x20u;
          while (2)
          {
            v332 = *v3;
            v333 = *(_QWORD *)(a2 + v332);
            if (v333 == -1 || v333 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v334 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v333);
              *(_QWORD *)(a2 + v332) = v333 + 1;
              v19 |= (unint64_t)(v334 & 0x7F) << v330;
              if (v334 < 0)
              {
                v330 += 7;
                v14 = v331++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_926;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_926:
          v502 = 304;
          goto LABEL_1060;
        case 0x40u:
          v335 = 0;
          v336 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x40u;
          while (2)
          {
            v337 = *v3;
            v338 = *(_QWORD *)(a2 + v337);
            if (v338 == -1 || v338 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v339 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v338);
              *(_QWORD *)(a2 + v337) = v338 + 1;
              v19 |= (unint64_t)(v339 & 0x7F) << v335;
              if (v339 < 0)
              {
                v335 += 7;
                v14 = v336++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_930;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_930:
          v502 = 308;
          goto LABEL_1060;
        case 0x41u:
          v340 = 0;
          v341 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x8000000000000000;
          while (2)
          {
            v342 = *v3;
            v343 = *(_QWORD *)(a2 + v342);
            if (v343 == -1 || v343 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v344 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v343);
              *(_QWORD *)(a2 + v342) = v343 + 1;
              v19 |= (unint64_t)(v344 & 0x7F) << v340;
              if (v344 < 0)
              {
                v340 += 7;
                v14 = v341++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_934;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_934:
          v502 = 280;
          goto LABEL_1060;
        case 0x42u:
          v345 = 0;
          v346 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 1u;
          while (2)
          {
            v347 = *v3;
            v348 = *(_QWORD *)(a2 + v347);
            if (v348 == -1 || v348 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v349 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v348);
              *(_QWORD *)(a2 + v347) = v348 + 1;
              v19 |= (unint64_t)(v349 & 0x7F) << v345;
              if (v349 < 0)
              {
                v345 += 7;
                v14 = v346++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_938;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_938:
          v502 = 284;
          goto LABEL_1060;
        case 0x43u:
          v350 = 0;
          v351 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x400uLL;
          while (2)
          {
            v352 = *v3;
            v353 = *(_QWORD *)(a2 + v352);
            if (v353 == -1 || v353 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v354 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v353);
              *(_QWORD *)(a2 + v352) = v353 + 1;
              v19 |= (unint64_t)(v354 & 0x7F) << v350;
              if (v354 < 0)
              {
                v350 += 7;
                v14 = v351++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_942;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_942:
          v502 = 60;
          goto LABEL_1060;
        case 0x44u:
          v355 = 0;
          v356 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x1000uLL;
          while (2)
          {
            v357 = *v3;
            v358 = *(_QWORD *)(a2 + v357);
            if (v358 == -1 || v358 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v359 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v358);
              *(_QWORD *)(a2 + v357) = v358 + 1;
              v19 |= (unint64_t)(v359 & 0x7F) << v355;
              if (v359 < 0)
              {
                v355 += 7;
                v14 = v356++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_946;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_946:
          v502 = 68;
          goto LABEL_1060;
        case 0x45u:
          v360 = 0;
          v361 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x800uLL;
          while (2)
          {
            v362 = *v3;
            v363 = *(_QWORD *)(a2 + v362);
            if (v363 == -1 || v363 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v364 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v363);
              *(_QWORD *)(a2 + v362) = v363 + 1;
              v19 |= (unint64_t)(v364 & 0x7F) << v360;
              if (v364 < 0)
              {
                v360 += 7;
                v14 = v361++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_950;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_950:
          v502 = 64;
          goto LABEL_1060;
        case 0x46u:
          v365 = 0;
          v366 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x200000000000uLL;
          while (2)
          {
            v367 = *v3;
            v368 = *(_QWORD *)(a2 + v367);
            if (v368 == -1 || v368 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v369 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v368);
              *(_QWORD *)(a2 + v367) = v368 + 1;
              v19 |= (unint64_t)(v369 & 0x7F) << v365;
              if (v369 < 0)
              {
                v365 += 7;
                v14 = v366++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_954;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_954:
          v502 = 200;
          goto LABEL_1060;
        case 0x47u:
          v370 = 0;
          v371 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x800000000000uLL;
          while (2)
          {
            v372 = *v3;
            v373 = *(_QWORD *)(a2 + v372);
            if (v373 == -1 || v373 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v374 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v373);
              *(_QWORD *)(a2 + v372) = v373 + 1;
              v19 |= (unint64_t)(v374 & 0x7F) << v370;
              if (v374 < 0)
              {
                v370 += 7;
                v14 = v371++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_958;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_958:
          v502 = 208;
          goto LABEL_1060;
        case 0x48u:
          v375 = 0;
          v376 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x10000u;
          while (2)
          {
            v377 = *v3;
            v378 = *(_QWORD *)(a2 + v377);
            if (v378 == -1 || v378 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v379 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v378);
              *(_QWORD *)(a2 + v377) = v378 + 1;
              v19 |= (unint64_t)(v379 & 0x7F) << v375;
              if (v379 < 0)
              {
                v375 += 7;
                v14 = v376++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_962;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_962:
          v502 = 348;
          goto LABEL_1060;
        case 0x49u:
          v380 = 0;
          v381 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x20000u;
          while (2)
          {
            v382 = *v3;
            v383 = *(_QWORD *)(a2 + v382);
            if (v383 == -1 || v383 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v384 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v383);
              *(_QWORD *)(a2 + v382) = v383 + 1;
              v19 |= (unint64_t)(v384 & 0x7F) << v380;
              if (v384 < 0)
              {
                v380 += 7;
                v14 = v381++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_966;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_966:
          v502 = 352;
          goto LABEL_1060;
        case 0x4Au:
          v385 = 0;
          v386 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x40000u;
          while (2)
          {
            v387 = *v3;
            v388 = *(_QWORD *)(a2 + v387);
            if (v388 == -1 || v388 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v389 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v388);
              *(_QWORD *)(a2 + v387) = v388 + 1;
              v19 |= (unint64_t)(v389 & 0x7F) << v385;
              if (v389 < 0)
              {
                v385 += 7;
                v14 = v386++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_970;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_970:
          v502 = 356;
          goto LABEL_1060;
        case 0x4Bu:
          v390 = 0;
          v391 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x100000000uLL;
          while (2)
          {
            v392 = *v3;
            v393 = *(_QWORD *)(a2 + v392);
            if (v393 == -1 || v393 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v394 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v393);
              *(_QWORD *)(a2 + v392) = v393 + 1;
              v19 |= (unint64_t)(v394 & 0x7F) << v390;
              if (v394 < 0)
              {
                v390 += 7;
                v14 = v391++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_974;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_974:
          v502 = 148;
          goto LABEL_1060;
        case 0x4Cu:
          v395 = 0;
          v396 = 0;
          v397 = 0;
          *(_DWORD *)(a1 + 408) |= 0x10000000u;
          while (2)
          {
            v398 = *v3;
            v399 = *(_QWORD *)(a2 + v398);
            if (v399 == -1 || v399 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v400 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v399);
              *(_QWORD *)(a2 + v398) = v399 + 1;
              v397 |= (unint64_t)(v400 & 0x7F) << v395;
              if (v400 < 0)
              {
                v395 += 7;
                v14 = v396++ >= 9;
                if (v14)
                {
                  v397 = 0;
                  goto LABEL_978;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v397 = 0;
LABEL_978:
          v505 = v397 != 0;
          v506 = 396;
          goto LABEL_983;
        case 0x4Du:
          v401 = 0;
          v402 = 0;
          v403 = 0;
          *(_DWORD *)(a1 + 408) |= 0x20000000u;
          while (2)
          {
            v404 = *v3;
            v405 = *(_QWORD *)(a2 + v404);
            if (v405 == -1 || v405 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v406 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v405);
              *(_QWORD *)(a2 + v404) = v405 + 1;
              v403 |= (unint64_t)(v406 & 0x7F) << v401;
              if (v406 < 0)
              {
                v401 += 7;
                v14 = v402++ >= 9;
                if (v14)
                {
                  v403 = 0;
                  goto LABEL_982;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v403 = 0;
LABEL_982:
          v505 = v403 != 0;
          v506 = 397;
LABEL_983:
          *(_BYTE *)(a1 + v506) = v505;
          continue;
        case 0x4Eu:
          v407 = 0;
          v408 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x20000uLL;
          while (2)
          {
            v409 = *v3;
            v410 = *(_QWORD *)(a2 + v409);
            if (v410 == -1 || v410 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v411 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v410);
              *(_QWORD *)(a2 + v409) = v410 + 1;
              v19 |= (unint64_t)(v411 & 0x7F) << v407;
              if (v411 < 0)
              {
                v407 += 7;
                v14 = v408++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_987;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_987:
          v502 = 88;
          goto LABEL_1060;
        case 0x4Fu:
          v412 = 0;
          v413 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x40000uLL;
          while (2)
          {
            v414 = *v3;
            v415 = *(_QWORD *)(a2 + v414);
            if (v415 == -1 || v415 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v416 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v415);
              *(_QWORD *)(a2 + v414) = v415 + 1;
              v19 |= (unint64_t)(v416 & 0x7F) << v412;
              if (v416 < 0)
              {
                v412 += 7;
                v14 = v413++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_991;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_991:
          v502 = 92;
          goto LABEL_1060;
        case 0x50u:
          v417 = 0;
          v418 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x80000uLL;
          while (2)
          {
            v419 = *v3;
            v420 = *(_QWORD *)(a2 + v419);
            if (v420 == -1 || v420 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v421 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v420);
              *(_QWORD *)(a2 + v419) = v420 + 1;
              v19 |= (unint64_t)(v421 & 0x7F) << v417;
              if (v421 < 0)
              {
                v417 += 7;
                v14 = v418++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_995;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_995:
          v502 = 96;
          goto LABEL_1060;
        case 0x51u:
          v422 = 0;
          v423 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x4000uLL;
          while (2)
          {
            v424 = *v3;
            v425 = *(_QWORD *)(a2 + v424);
            if (v425 == -1 || v425 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v426 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v425);
              *(_QWORD *)(a2 + v424) = v425 + 1;
              v19 |= (unint64_t)(v426 & 0x7F) << v422;
              if (v426 < 0)
              {
                v422 += 7;
                v14 = v423++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_999;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_999:
          v502 = 76;
          goto LABEL_1060;
        case 0x52u:
          v427 = 0;
          v428 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x80000000000000uLL;
          while (2)
          {
            v429 = *v3;
            v430 = *(_QWORD *)(a2 + v429);
            if (v430 == -1 || v430 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v431 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v430);
              *(_QWORD *)(a2 + v429) = v430 + 1;
              v19 |= (unint64_t)(v431 & 0x7F) << v427;
              if (v431 < 0)
              {
                v427 += 7;
                v14 = v428++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1003;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1003:
          v502 = 240;
          goto LABEL_1060;
        case 0x53u:
          v432 = 0;
          v433 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x2000000u;
          while (2)
          {
            v434 = *v3;
            v435 = *(_QWORD *)(a2 + v434);
            if (v435 == -1 || v435 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v436 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v435);
              *(_QWORD *)(a2 + v434) = v435 + 1;
              v19 |= (unint64_t)(v436 & 0x7F) << v432;
              if (v436 < 0)
              {
                v432 += 7;
                v14 = v433++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1007;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1007:
          v502 = 384;
          goto LABEL_1060;
        case 0x54u:
          v437 = 0;
          v438 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x800000u;
          while (2)
          {
            v439 = *v3;
            v440 = *(_QWORD *)(a2 + v439);
            if (v440 == -1 || v440 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v441 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v440);
              *(_QWORD *)(a2 + v439) = v440 + 1;
              v19 |= (unint64_t)(v441 & 0x7F) << v437;
              if (v441 < 0)
              {
                v437 += 7;
                v14 = v438++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1011;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1011:
          v502 = 376;
          goto LABEL_1060;
        case 0x55u:
          v442 = 0;
          v443 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x4000000u;
          while (2)
          {
            v444 = *v3;
            v445 = *(_QWORD *)(a2 + v444);
            if (v445 == -1 || v445 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v446 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v445);
              *(_QWORD *)(a2 + v444) = v445 + 1;
              v19 |= (unint64_t)(v446 & 0x7F) << v442;
              if (v446 < 0)
              {
                v442 += 7;
                v14 = v443++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1015;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1015:
          v502 = 388;
          goto LABEL_1060;
        case 0x56u:
          v447 = 0;
          v448 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x400000u;
          while (2)
          {
            v449 = *v3;
            v450 = *(_QWORD *)(a2 + v449);
            if (v450 == -1 || v450 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v451 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v450);
              *(_QWORD *)(a2 + v449) = v450 + 1;
              v19 |= (unint64_t)(v451 & 0x7F) << v447;
              if (v451 < 0)
              {
                v447 += 7;
                v14 = v448++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1019;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1019:
          v502 = 372;
          goto LABEL_1060;
        case 0x57u:
          v452 = 0;
          v453 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x1000000u;
          while (2)
          {
            v454 = *v3;
            v455 = *(_QWORD *)(a2 + v454);
            if (v455 == -1 || v455 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v456 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v455);
              *(_QWORD *)(a2 + v454) = v455 + 1;
              v19 |= (unint64_t)(v456 & 0x7F) << v452;
              if (v456 < 0)
              {
                v452 += 7;
                v14 = v453++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1023;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1023:
          v502 = 380;
          goto LABEL_1060;
        case 0x58u:
          v457 = 0;
          v458 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x10000000000uLL;
          while (2)
          {
            v459 = *v3;
            v460 = *(_QWORD *)(a2 + v459);
            if (v460 == -1 || v460 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v461 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v460);
              *(_QWORD *)(a2 + v459) = v460 + 1;
              v19 |= (unint64_t)(v461 & 0x7F) << v457;
              if (v461 < 0)
              {
                v457 += 7;
                v14 = v458++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1027;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1027:
          v502 = 180;
          goto LABEL_1060;
        case 0x59u:
          v462 = 0;
          v463 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x80uLL;
          while (2)
          {
            v464 = *v3;
            v465 = *(_QWORD *)(a2 + v464);
            if (v465 == -1 || v465 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v466 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v465);
              *(_QWORD *)(a2 + v464) = v465 + 1;
              v19 |= (unint64_t)(v466 & 0x7F) << v462;
              if (v466 < 0)
              {
                v462 += 7;
                v14 = v463++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1031;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1031:
          v502 = 48;
          goto LABEL_1060;
        case 0x5Au:
          v467 = 0;
          v468 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x80u;
          while (2)
          {
            v469 = *v3;
            v470 = *(_QWORD *)(a2 + v469);
            if (v470 == -1 || v470 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v471 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v470);
              *(_QWORD *)(a2 + v469) = v470 + 1;
              v19 |= (unint64_t)(v471 & 0x7F) << v467;
              if (v471 < 0)
              {
                v467 += 7;
                v14 = v468++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1035;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1035:
          v502 = 312;
          goto LABEL_1060;
        case 0x5Bu:
          v472 = 0;
          v473 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x10000000000000uLL;
          while (2)
          {
            v474 = *v3;
            v475 = *(_QWORD *)(a2 + v474);
            if (v475 == -1 || v475 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v476 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v475);
              *(_QWORD *)(a2 + v474) = v475 + 1;
              v19 |= (unint64_t)(v476 & 0x7F) << v472;
              if (v476 < 0)
              {
                v472 += 7;
                v14 = v473++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1039;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1039:
          v502 = 228;
          goto LABEL_1060;
        case 0x5Cu:
          v477 = 0;
          v478 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x40000000000000uLL;
          while (2)
          {
            v479 = *v3;
            v480 = *(_QWORD *)(a2 + v479);
            if (v480 == -1 || v480 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v481 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v480);
              *(_QWORD *)(a2 + v479) = v480 + 1;
              v19 |= (unint64_t)(v481 & 0x7F) << v477;
              if (v481 < 0)
              {
                v477 += 7;
                v14 = v478++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1043;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1043:
          v502 = 236;
          goto LABEL_1060;
        case 0x5Du:
          v482 = 0;
          v483 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 408) |= 0x100u;
          while (2)
          {
            v484 = *v3;
            v485 = *(_QWORD *)(a2 + v484);
            if (v485 == -1 || v485 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v486 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v485);
              *(_QWORD *)(a2 + v484) = v485 + 1;
              v19 |= (unint64_t)(v486 & 0x7F) << v482;
              if (v486 < 0)
              {
                v482 += 7;
                v14 = v483++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1047;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1047:
          v502 = 316;
          goto LABEL_1060;
        case 0x5Eu:
          v487 = 0;
          v488 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x100000000000uLL;
          while (2)
          {
            v489 = *v3;
            v490 = *(_QWORD *)(a2 + v489);
            if (v490 == -1 || v490 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v491 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v490);
              *(_QWORD *)(a2 + v489) = v490 + 1;
              v19 |= (unint64_t)(v491 & 0x7F) << v487;
              if (v491 < 0)
              {
                v487 += 7;
                v14 = v488++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1051;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1051:
          v502 = 196;
          goto LABEL_1060;
        case 0x5Fu:
          v492 = 0;
          v493 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x20000000000000uLL;
          while (2)
          {
            v494 = *v3;
            v495 = *(_QWORD *)(a2 + v494);
            if (v495 == -1 || v495 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v496 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v495);
              *(_QWORD *)(a2 + v494) = v495 + 1;
              v19 |= (unint64_t)(v496 & 0x7F) << v492;
              if (v496 < 0)
              {
                v492 += 7;
                v14 = v493++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_1055;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_1055:
          v502 = 232;
          goto LABEL_1060;
        case 0x60u:
          v497 = 0;
          v498 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 400) |= 0x2000000uLL;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v499 = *v3;
        v500 = *(_QWORD *)(a2 + v499);
        if (v500 == -1 || v500 >= *(_QWORD *)(a2 + *v4))
          break;
        v501 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v500);
        *(_QWORD *)(a2 + v499) = v500 + 1;
        v19 |= (unint64_t)(v501 & 0x7F) << v497;
        if ((v501 & 0x80) == 0)
          goto LABEL_1057;
        v497 += 7;
        v14 = v498++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_1059;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_1057:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_1059:
      v502 = 120;
LABEL_1060:
      *(_DWORD *)(a1 + v502) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWRMAntSelPolicyStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_57;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_59;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_57:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_59:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_63:
          v47 = 16;
          goto LABEL_68;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_67:
          v47 = 20;
LABEL_68:
          *(_DWORD *)(a1 + v47) = v26;
          continue;
        case 4u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          *(_BYTE *)(a1 + 28) |= 0x10u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v37 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v37 = 0;
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v37 = 0;
LABEL_72:
          v48 = v37 != 0;
          v49 = 25;
          goto LABEL_77;
        case 5u:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v44 = *v3;
        v45 = *(_QWORD *)(a2 + v44);
        if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
          break;
        v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
        *(_QWORD *)(a2 + v44) = v45 + 1;
        v43 |= (unint64_t)(v46 & 0x7F) << v41;
        if ((v46 & 0x80) == 0)
          goto LABEL_74;
        v41 += 7;
        v14 = v42++ >= 9;
        if (v14)
        {
          v43 = 0;
          goto LABEL_76;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_74:
      if (*(_BYTE *)(a2 + *v5))
        v43 = 0;
LABEL_76:
      v48 = v43 != 0;
      v49 = 24;
LABEL_77:
      *(_BYTE *)(a1 + v49) = v48;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWRMFacetimeRecommendationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  void *String;
  id v104;
  uint64_t v105;
  void *v106;
  void *v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  char v123;
  unsigned int v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  BOOL v182;
  uint64_t v183;
  int v184;
  uint64_t v185;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 156) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_229;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_231;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_229:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_231:
          v180 = 8;
          goto LABEL_244;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_DWORD *)(a1 + 156) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_235;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_235:
          v19 = -(v26 & 1) ^ (v26 >> 1);
          v180 = 16;
          goto LABEL_244;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x400000u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_239;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_239:
          v181 = 140;
          goto LABEL_329;
        case 4u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_DWORD *)(a1 + 156) |= 4u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  v38 = 0;
                  goto LABEL_243;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v38 = 0;
LABEL_243:
          v19 = -(v38 & 1) ^ (v38 >> 1);
          v180 = 24;
LABEL_244:
          *(_QWORD *)(a1 + v180) = v19;
          continue;
        case 5u:
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_DWORD *)(a1 + 156) |= 0x2000000u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  v44 = 0;
                  goto LABEL_248;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v44 = 0;
LABEL_248:
          v182 = v44 != 0;
          v183 = 149;
          goto LABEL_347;
        case 6u:
          v48 = 0;
          v49 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x200000u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v32 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_252;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_252:
          v181 = 136;
          goto LABEL_329;
        case 7u:
          v53 = 0;
          v54 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x80000u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v32 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                v14 = v54++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_256;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_256:
          v181 = 128;
          goto LABEL_329;
        case 8u:
          v58 = 0;
          v59 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x800000u;
          while (2)
          {
            v60 = *v3;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
              *(_QWORD *)(a2 + v60) = v61 + 1;
              v32 |= (unint64_t)(v62 & 0x7F) << v58;
              if (v62 < 0)
              {
                v58 += 7;
                v14 = v59++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_260;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_260:
          v181 = 144;
          goto LABEL_329;
        case 9u:
          v63 = 0;
          v64 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x100000u;
          while (2)
          {
            v65 = *v3;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
              *(_QWORD *)(a2 + v65) = v66 + 1;
              v32 |= (unint64_t)(v67 & 0x7F) << v63;
              if (v67 < 0)
              {
                v63 += 7;
                v14 = v64++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_264;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_264:
          v181 = 132;
          goto LABEL_329;
        case 0xAu:
          v68 = 0;
          v69 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x4000u;
          while (2)
          {
            v70 = *v3;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
              *(_QWORD *)(a2 + v70) = v71 + 1;
              v32 |= (unint64_t)(v72 & 0x7F) << v68;
              if (v72 < 0)
              {
                v68 += 7;
                v14 = v69++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_268;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_268:
          v181 = 96;
          goto LABEL_329;
        case 0xBu:
          v73 = 0;
          v74 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x20u;
          while (2)
          {
            v75 = *v3;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
              *(_QWORD *)(a2 + v75) = v76 + 1;
              v32 |= (unint64_t)(v77 & 0x7F) << v73;
              if (v77 < 0)
              {
                v73 += 7;
                v14 = v74++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_272;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_272:
          v181 = 40;
          goto LABEL_329;
        case 0xCu:
          v78 = 0;
          v79 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x10000u;
          while (2)
          {
            v80 = *v3;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v81);
              *(_QWORD *)(a2 + v80) = v81 + 1;
              v32 |= (unint64_t)(v82 & 0x7F) << v78;
              if (v82 < 0)
              {
                v78 += 7;
                v14 = v79++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_276;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_276:
          v181 = 116;
          goto LABEL_329;
        case 0xDu:
          v83 = 0;
          v84 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x400u;
          while (2)
          {
            v85 = *v3;
            v86 = *(_QWORD *)(a2 + v85);
            if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v86);
              *(_QWORD *)(a2 + v85) = v86 + 1;
              v32 |= (unint64_t)(v87 & 0x7F) << v83;
              if (v87 < 0)
              {
                v83 += 7;
                v14 = v84++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_280;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_280:
          v181 = 60;
          goto LABEL_329;
        case 0xEu:
          v88 = 0;
          v89 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x10u;
          while (2)
          {
            v90 = *v3;
            v91 = *(_QWORD *)(a2 + v90);
            if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v91);
              *(_QWORD *)(a2 + v90) = v91 + 1;
              v32 |= (unint64_t)(v92 & 0x7F) << v88;
              if (v92 < 0)
              {
                v88 += 7;
                v14 = v89++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_284;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_284:
          v181 = 36;
          goto LABEL_329;
        case 0xFu:
          v93 = 0;
          v94 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x40000u;
          while (2)
          {
            v95 = *v3;
            v96 = *(_QWORD *)(a2 + v95);
            if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v96);
              *(_QWORD *)(a2 + v95) = v96 + 1;
              v32 |= (unint64_t)(v97 & 0x7F) << v93;
              if (v97 < 0)
              {
                v93 += 7;
                v14 = v94++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_288;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_288:
          v181 = 124;
          goto LABEL_329;
        case 0x10u:
          v98 = 0;
          v99 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x8000u;
          while (2)
          {
            v100 = *v3;
            v101 = *(_QWORD *)(a2 + v100);
            if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v101);
              *(_QWORD *)(a2 + v100) = v101 + 1;
              v32 |= (unint64_t)(v102 & 0x7F) << v98;
              if (v102 < 0)
              {
                v98 += 7;
                v14 = v99++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_292;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_292:
          v181 = 112;
          goto LABEL_329;
        case 0x11u:
          String = (void *)PBReaderReadString();

          v104 = String;
          v105 = 104;
          goto LABEL_136;
        case 0x12u:
          v106 = (void *)PBReaderReadString();

          v104 = v106;
          v105 = 80;
          goto LABEL_136;
        case 0x13u:
          v107 = (void *)PBReaderReadString();

          v104 = v107;
          v105 = 88;
LABEL_136:
          *(_QWORD *)(a1 + v105) = v104;
          continue;
        case 0x14u:
          v108 = 0;
          v109 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x1000u;
          while (2)
          {
            v110 = *v3;
            v111 = *(_QWORD *)(a2 + v110);
            if (v111 == -1 || v111 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v112 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v111);
              *(_QWORD *)(a2 + v110) = v111 + 1;
              v32 |= (unint64_t)(v112 & 0x7F) << v108;
              if (v112 < 0)
              {
                v108 += 7;
                v14 = v109++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_296;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_296:
          v181 = 68;
          goto LABEL_329;
        case 0x15u:
          v113 = 0;
          v114 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x800u;
          while (2)
          {
            v115 = *v3;
            v116 = *(_QWORD *)(a2 + v115);
            if (v116 == -1 || v116 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v117 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v116);
              *(_QWORD *)(a2 + v115) = v116 + 1;
              v32 |= (unint64_t)(v117 & 0x7F) << v113;
              if (v117 < 0)
              {
                v113 += 7;
                v14 = v114++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_300;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_300:
          v181 = 64;
          goto LABEL_329;
        case 0x16u:
          v118 = 0;
          v119 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x2000u;
          while (2)
          {
            v120 = *v3;
            v121 = *(_QWORD *)(a2 + v120);
            if (v121 == -1 || v121 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v122 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v121);
              *(_QWORD *)(a2 + v120) = v121 + 1;
              v32 |= (unint64_t)(v122 & 0x7F) << v118;
              if (v122 < 0)
              {
                v118 += 7;
                v14 = v119++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_304;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_304:
          v181 = 72;
          goto LABEL_329;
        case 0x17u:
          v123 = 0;
          v124 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x200u;
          while (2)
          {
            v125 = *v3;
            v126 = *(_QWORD *)(a2 + v125);
            if (v126 == -1 || v126 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v127 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v126);
              *(_QWORD *)(a2 + v125) = v126 + 1;
              v32 |= (unint64_t)(v127 & 0x7F) << v123;
              if (v127 < 0)
              {
                v123 += 7;
                v14 = v124++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_308;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_308:
          v181 = 56;
          goto LABEL_329;
        case 0x18u:
          v128 = 0;
          v129 = 0;
          v130 = 0;
          *(_DWORD *)(a1 + 156) |= 0x1000000u;
          while (2)
          {
            v131 = *v3;
            v132 = *(_QWORD *)(a2 + v131);
            if (v132 == -1 || v132 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v132);
              *(_QWORD *)(a2 + v131) = v132 + 1;
              v130 |= (unint64_t)(v133 & 0x7F) << v128;
              if (v133 < 0)
              {
                v128 += 7;
                v14 = v129++ >= 9;
                if (v14)
                {
                  v130 = 0;
                  goto LABEL_312;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v130 = 0;
LABEL_312:
          v182 = v130 != 0;
          v183 = 148;
          goto LABEL_347;
        case 0x19u:
          v134 = 0;
          v135 = 0;
          v136 = 0;
          *(_DWORD *)(a1 + 156) |= 0x10000000u;
          while (2)
          {
            v137 = *v3;
            v138 = *(_QWORD *)(a2 + v137);
            if (v138 == -1 || v138 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
              *(_QWORD *)(a2 + v137) = v138 + 1;
              v136 |= (unint64_t)(v139 & 0x7F) << v134;
              if (v139 < 0)
              {
                v134 += 7;
                v14 = v135++ >= 9;
                if (v14)
                {
                  v136 = 0;
                  goto LABEL_316;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v136 = 0;
LABEL_316:
          v182 = v136 != 0;
          v183 = 152;
          goto LABEL_347;
        case 0x1Au:
          v140 = 0;
          v141 = 0;
          v142 = 0;
          *(_DWORD *)(a1 + 156) |= 0x8000000u;
          while (2)
          {
            v143 = *v3;
            v144 = *(_QWORD *)(a2 + v143);
            if (v144 == -1 || v144 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
              *(_QWORD *)(a2 + v143) = v144 + 1;
              v142 |= (unint64_t)(v145 & 0x7F) << v140;
              if (v145 < 0)
              {
                v140 += 7;
                v14 = v141++ >= 9;
                if (v14)
                {
                  v142 = 0;
                  goto LABEL_320;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v142 = 0;
LABEL_320:
          v182 = v142 != 0;
          v183 = 151;
          goto LABEL_347;
        case 0x1Bu:
          v146 = 0;
          v147 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 0x20000u;
          while (2)
          {
            v148 = *v3;
            v149 = *(_QWORD *)(a2 + v148);
            if (v149 == -1 || v149 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
              *(_QWORD *)(a2 + v148) = v149 + 1;
              v32 |= (unint64_t)(v150 & 0x7F) << v146;
              if (v150 < 0)
              {
                v146 += 7;
                v14 = v147++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_324;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_324:
          v181 = 120;
          goto LABEL_329;
        case 0x1Cu:
          v151 = 0;
          v152 = 0;
          v32 = 0;
          *(_DWORD *)(a1 + 156) |= 8u;
          while (2)
          {
            v153 = *v3;
            v154 = *(_QWORD *)(a2 + v153);
            if (v154 == -1 || v154 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v155 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
              *(_QWORD *)(a2 + v153) = v154 + 1;
              v32 |= (unint64_t)(v155 & 0x7F) << v151;
              if (v155 < 0)
              {
                v151 += 7;
                v14 = v152++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_328;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_328:
          v181 = 32;
LABEL_329:
          *(_DWORD *)(a1 + v181) = v32;
          continue;
        case 0x1Du:
          v156 = 0;
          v157 = 0;
          v158 = 0;
          *(_DWORD *)(a1 + 156) |= 0x40u;
          while (2)
          {
            v159 = *v3;
            v160 = *(_QWORD *)(a2 + v159);
            if (v160 == -1 || v160 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
              *(_QWORD *)(a2 + v159) = v160 + 1;
              v158 |= (unint64_t)(v161 & 0x7F) << v156;
              if (v161 < 0)
              {
                v156 += 7;
                v14 = v157++ >= 9;
                if (v14)
                {
                  LODWORD(v158) = 0;
                  goto LABEL_333;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v158) = 0;
LABEL_333:
          v184 = -(v158 & 1) ^ ((int)v158 >> 1);
          v185 = 44;
          goto LABEL_342;
        case 0x1Eu:
          v162 = 0;
          v163 = 0;
          v164 = 0;
          *(_DWORD *)(a1 + 156) |= 0x80u;
          while (2)
          {
            v165 = *v3;
            v166 = *(_QWORD *)(a2 + v165);
            if (v166 == -1 || v166 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v167 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v166);
              *(_QWORD *)(a2 + v165) = v166 + 1;
              v164 |= (unint64_t)(v167 & 0x7F) << v162;
              if (v167 < 0)
              {
                v162 += 7;
                v14 = v163++ >= 9;
                if (v14)
                {
                  LODWORD(v164) = 0;
                  goto LABEL_337;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v164) = 0;
LABEL_337:
          v184 = -(v164 & 1) ^ ((int)v164 >> 1);
          v185 = 48;
          goto LABEL_342;
        case 0x1Fu:
          v168 = 0;
          v169 = 0;
          v170 = 0;
          *(_DWORD *)(a1 + 156) |= 0x100u;
          while (2)
          {
            v171 = *v3;
            v172 = *(_QWORD *)(a2 + v171);
            if (v172 == -1 || v172 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v173 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v172);
              *(_QWORD *)(a2 + v171) = v172 + 1;
              v170 |= (unint64_t)(v173 & 0x7F) << v168;
              if (v173 < 0)
              {
                v168 += 7;
                v14 = v169++ >= 9;
                if (v14)
                {
                  LODWORD(v170) = 0;
                  goto LABEL_341;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v170) = 0;
LABEL_341:
          v184 = -(v170 & 1) ^ ((int)v170 >> 1);
          v185 = 52;
LABEL_342:
          *(_DWORD *)(a1 + v185) = v184;
          continue;
        case 0x20u:
          v174 = 0;
          v175 = 0;
          v176 = 0;
          *(_DWORD *)(a1 + 156) |= 0x4000000u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v177 = *v3;
        v178 = *(_QWORD *)(a2 + v177);
        if (v178 == -1 || v178 >= *(_QWORD *)(a2 + *v4))
          break;
        v179 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v178);
        *(_QWORD *)(a2 + v177) = v178 + 1;
        v176 |= (unint64_t)(v179 & 0x7F) << v174;
        if ((v179 & 0x80) == 0)
          goto LABEL_344;
        v174 += 7;
        v14 = v175++ >= 9;
        if (v14)
        {
          v176 = 0;
          goto LABEL_346;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_344:
      if (*(_BYTE *)(a2 + *v5))
        v176 = 0;
LABEL_346:
      v182 = v176 != 0;
      v183 = 150;
LABEL_347:
      *(_BYTE *)(a1 + v183) = v182;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWRMLinkPrefChange1ReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t result;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  char v145;
  unsigned int v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  char v155;
  unsigned int v156;
  uint64_t v157;
  unint64_t v158;
  char v159;
  char v160;
  unsigned int v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  uint64_t v165;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 128) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_225;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_227;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_225:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_227:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v23 = 0;
          v24 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 2u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if (v28 < 0)
              {
                v23 += 7;
                v14 = v24++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_231;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_231:
          v165 = 16;
          goto LABEL_340;
        case 3u:
          v29 = 0;
          v30 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 8u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v25 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_235;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_235:
          v165 = 24;
          goto LABEL_340;
        case 4u:
          v34 = 0;
          v35 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 4u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v25 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_239;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_239:
          v165 = 20;
          goto LABEL_340;
        case 5u:
          v39 = 0;
          v40 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x20u;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v42 + 1;
              v25 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                v14 = v40++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_243;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_243:
          v165 = 32;
          goto LABEL_340;
        case 6u:
          v44 = 0;
          v45 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x40000u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v25 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                v14 = v45++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_247;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_247:
          v165 = 84;
          goto LABEL_340;
        case 0xAu:
          v50 = 0;
          v51 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x200u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v25 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_251;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_251:
          v165 = 48;
          goto LABEL_340;
        case 0xBu:
          v55 = 0;
          v56 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x80000u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v25 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_255;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_255:
          v165 = 88;
          goto LABEL_340;
        case 0xCu:
          v60 = 0;
          v61 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x100u;
          while (2)
          {
            v62 = *v3;
            v63 = *(_QWORD *)(a2 + v62);
            if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
              *(_QWORD *)(a2 + v62) = v63 + 1;
              v25 |= (unint64_t)(v64 & 0x7F) << v60;
              if (v64 < 0)
              {
                v60 += 7;
                v14 = v61++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_259;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_259:
          v165 = 44;
          goto LABEL_340;
        case 0xDu:
          v65 = 0;
          v66 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x20000u;
          while (2)
          {
            v67 = *v3;
            v68 = *(_QWORD *)(a2 + v67);
            if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
              *(_QWORD *)(a2 + v67) = v68 + 1;
              v25 |= (unint64_t)(v69 & 0x7F) << v65;
              if (v69 < 0)
              {
                v65 += 7;
                v14 = v66++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_263;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_263:
          v165 = 80;
          goto LABEL_340;
        case 0x14u:
          v70 = 0;
          v71 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x8000000u;
          while (2)
          {
            v72 = *v3;
            v73 = *(_QWORD *)(a2 + v72);
            if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
              *(_QWORD *)(a2 + v72) = v73 + 1;
              v25 |= (unint64_t)(v74 & 0x7F) << v70;
              if (v74 < 0)
              {
                v70 += 7;
                v14 = v71++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_267;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_267:
          v165 = 120;
          goto LABEL_340;
        case 0x15u:
          v75 = 0;
          v76 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x10000000u;
          while (2)
          {
            v77 = *v3;
            v78 = *(_QWORD *)(a2 + v77);
            if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
              *(_QWORD *)(a2 + v77) = v78 + 1;
              v25 |= (unint64_t)(v79 & 0x7F) << v75;
              if (v79 < 0)
              {
                v75 += 7;
                v14 = v76++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_271;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_271:
          v165 = 124;
          goto LABEL_340;
        case 0x16u:
          v80 = 0;
          v81 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x1000000u;
          while (2)
          {
            v82 = *v3;
            v83 = *(_QWORD *)(a2 + v82);
            if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
              *(_QWORD *)(a2 + v82) = v83 + 1;
              v25 |= (unint64_t)(v84 & 0x7F) << v80;
              if (v84 < 0)
              {
                v80 += 7;
                v14 = v81++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_275;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_275:
          v165 = 108;
          goto LABEL_340;
        case 0x17u:
          v85 = 0;
          v86 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x800000u;
          while (2)
          {
            v87 = *v3;
            v88 = *(_QWORD *)(a2 + v87);
            if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
              *(_QWORD *)(a2 + v87) = v88 + 1;
              v25 |= (unint64_t)(v89 & 0x7F) << v85;
              if (v89 < 0)
              {
                v85 += 7;
                v14 = v86++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_279;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_279:
          v165 = 104;
          goto LABEL_340;
        case 0x18u:
          v90 = 0;
          v91 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x400000u;
          while (2)
          {
            v92 = *v3;
            v93 = *(_QWORD *)(a2 + v92);
            if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
              *(_QWORD *)(a2 + v92) = v93 + 1;
              v25 |= (unint64_t)(v94 & 0x7F) << v90;
              if (v94 < 0)
              {
                v90 += 7;
                v14 = v91++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_283;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_283:
          v165 = 100;
          goto LABEL_340;
        case 0x19u:
          v95 = 0;
          v96 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x4000000u;
          while (2)
          {
            v97 = *v3;
            v98 = *(_QWORD *)(a2 + v97);
            if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v98);
              *(_QWORD *)(a2 + v97) = v98 + 1;
              v25 |= (unint64_t)(v99 & 0x7F) << v95;
              if (v99 < 0)
              {
                v95 += 7;
                v14 = v96++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_287;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_287:
          v165 = 116;
          goto LABEL_340;
        case 0x1Au:
          v100 = 0;
          v101 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x2000000u;
          while (2)
          {
            v102 = *v3;
            v103 = *(_QWORD *)(a2 + v102);
            if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
              *(_QWORD *)(a2 + v102) = v103 + 1;
              v25 |= (unint64_t)(v104 & 0x7F) << v100;
              if (v104 < 0)
              {
                v100 += 7;
                v14 = v101++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_291;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_291:
          v165 = 112;
          goto LABEL_340;
        case 0x1Bu:
          v105 = 0;
          v106 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x200000u;
          while (2)
          {
            v107 = *v3;
            v108 = *(_QWORD *)(a2 + v107);
            if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
              *(_QWORD *)(a2 + v107) = v108 + 1;
              v25 |= (unint64_t)(v109 & 0x7F) << v105;
              if (v109 < 0)
              {
                v105 += 7;
                v14 = v106++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_295;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_295:
          v165 = 96;
          goto LABEL_340;
        case 0x1Cu:
          v110 = 0;
          v111 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x100000u;
          while (2)
          {
            v112 = *v3;
            v113 = *(_QWORD *)(a2 + v112);
            if (v113 == -1 || v113 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v113);
              *(_QWORD *)(a2 + v112) = v113 + 1;
              v25 |= (unint64_t)(v114 & 0x7F) << v110;
              if (v114 < 0)
              {
                v110 += 7;
                v14 = v111++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_299;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_299:
          v165 = 92;
          goto LABEL_340;
        case 0x1Du:
          v115 = 0;
          v116 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x10u;
          while (2)
          {
            v117 = *v3;
            v118 = *(_QWORD *)(a2 + v117);
            if (v118 == -1 || v118 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v119 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v118);
              *(_QWORD *)(a2 + v117) = v118 + 1;
              v25 |= (unint64_t)(v119 & 0x7F) << v115;
              if (v119 < 0)
              {
                v115 += 7;
                v14 = v116++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_303;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_303:
          v165 = 28;
          goto LABEL_340;
        case 0x1Eu:
          v120 = 0;
          v121 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x80u;
          while (2)
          {
            v122 = *v3;
            v123 = *(_QWORD *)(a2 + v122);
            if (v123 == -1 || v123 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v124 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v123);
              *(_QWORD *)(a2 + v122) = v123 + 1;
              v25 |= (unint64_t)(v124 & 0x7F) << v120;
              if (v124 < 0)
              {
                v120 += 7;
                v14 = v121++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_307;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_307:
          v165 = 40;
          goto LABEL_340;
        case 0x1Fu:
          v125 = 0;
          v126 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x40u;
          while (2)
          {
            v127 = *v3;
            v128 = *(_QWORD *)(a2 + v127);
            if (v128 == -1 || v128 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v128);
              *(_QWORD *)(a2 + v127) = v128 + 1;
              v25 |= (unint64_t)(v129 & 0x7F) << v125;
              if (v129 < 0)
              {
                v125 += 7;
                v14 = v126++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_311;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_311:
          v165 = 36;
          goto LABEL_340;
        case 0x20u:
          v130 = 0;
          v131 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x10000u;
          while (2)
          {
            v132 = *v3;
            v133 = *(_QWORD *)(a2 + v132);
            if (v133 == -1 || v133 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v134 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v133);
              *(_QWORD *)(a2 + v132) = v133 + 1;
              v25 |= (unint64_t)(v134 & 0x7F) << v130;
              if (v134 < 0)
              {
                v130 += 7;
                v14 = v131++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_315;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_315:
          v165 = 76;
          goto LABEL_340;
        case 0x21u:
          v135 = 0;
          v136 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x400u;
          while (2)
          {
            v137 = *v3;
            v138 = *(_QWORD *)(a2 + v137);
            if (v138 == -1 || v138 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
              *(_QWORD *)(a2 + v137) = v138 + 1;
              v25 |= (unint64_t)(v139 & 0x7F) << v135;
              if (v139 < 0)
              {
                v135 += 7;
                v14 = v136++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_319;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_319:
          v165 = 52;
          goto LABEL_340;
        case 0x22u:
          v140 = 0;
          v141 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x800u;
          while (2)
          {
            v142 = *v3;
            v143 = *(_QWORD *)(a2 + v142);
            if (v143 == -1 || v143 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v144 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v143);
              *(_QWORD *)(a2 + v142) = v143 + 1;
              v25 |= (unint64_t)(v144 & 0x7F) << v140;
              if (v144 < 0)
              {
                v140 += 7;
                v14 = v141++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_323;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_323:
          v165 = 56;
          goto LABEL_340;
        case 0x23u:
          v145 = 0;
          v146 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x1000u;
          while (2)
          {
            v147 = *v3;
            v148 = *(_QWORD *)(a2 + v147);
            if (v148 == -1 || v148 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v149 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v148);
              *(_QWORD *)(a2 + v147) = v148 + 1;
              v25 |= (unint64_t)(v149 & 0x7F) << v145;
              if (v149 < 0)
              {
                v145 += 7;
                v14 = v146++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_327;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_327:
          v165 = 60;
          goto LABEL_340;
        case 0x24u:
          v150 = 0;
          v151 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x2000u;
          while (2)
          {
            v152 = *v3;
            v153 = *(_QWORD *)(a2 + v152);
            if (v153 == -1 || v153 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v154 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v153);
              *(_QWORD *)(a2 + v152) = v153 + 1;
              v25 |= (unint64_t)(v154 & 0x7F) << v150;
              if (v154 < 0)
              {
                v150 += 7;
                v14 = v151++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_331;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_331:
          v165 = 64;
          goto LABEL_340;
        case 0x25u:
          v155 = 0;
          v156 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x4000u;
          while (2)
          {
            v157 = *v3;
            v158 = *(_QWORD *)(a2 + v157);
            if (v158 == -1 || v158 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v159 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v158);
              *(_QWORD *)(a2 + v157) = v158 + 1;
              v25 |= (unint64_t)(v159 & 0x7F) << v155;
              if (v159 < 0)
              {
                v155 += 7;
                v14 = v156++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_335;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_335:
          v165 = 68;
          goto LABEL_340;
        case 0x26u:
          v160 = 0;
          v161 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 128) |= 0x8000u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v162 = *v3;
        v163 = *(_QWORD *)(a2 + v162);
        if (v163 == -1 || v163 >= *(_QWORD *)(a2 + *v4))
          break;
        v164 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v163);
        *(_QWORD *)(a2 + v162) = v163 + 1;
        v25 |= (unint64_t)(v164 & 0x7F) << v160;
        if ((v164 & 0x80) == 0)
          goto LABEL_337;
        v160 += 7;
        v14 = v161++ >= 9;
        if (v14)
        {
          LODWORD(v25) = 0;
          goto LABEL_339;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_337:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v25) = 0;
LABEL_339:
      v165 = 72;
LABEL_340:
      *(_DWORD *)(a1 + v165) = v25;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWRMLinkPrefChange2ReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t result;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  uint64_t v145;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 112) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_197;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_199;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_197:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_199:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v23 = 0;
          v24 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 2u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if (v28 < 0)
              {
                v23 += 7;
                v14 = v24++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_203;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_203:
          v145 = 16;
          goto LABEL_296;
        case 3u:
          v29 = 0;
          v30 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 8u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v25 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_207;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_207:
          v145 = 24;
          goto LABEL_296;
        case 4u:
          v34 = 0;
          v35 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 4u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v25 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_211;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_211:
          v145 = 20;
          goto LABEL_296;
        case 5u:
          v39 = 0;
          v40 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x200u;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v42 + 1;
              v25 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                v14 = v40++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_215;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_215:
          v145 = 48;
          goto LABEL_296;
        case 6u:
          v44 = 0;
          v45 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x400000u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v25 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                v14 = v45++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_219;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_219:
          v145 = 100;
          goto LABEL_296;
        case 0xAu:
          v50 = 0;
          v51 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x4000u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v25 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v14 = v51++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_223;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_223:
          v145 = 68;
          goto LABEL_296;
        case 0xBu:
          v55 = 0;
          v56 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x800000u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v25 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_227;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_227:
          v145 = 104;
          goto LABEL_296;
        case 0xCu:
          v60 = 0;
          v61 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x2000u;
          while (2)
          {
            v62 = *v3;
            v63 = *(_QWORD *)(a2 + v62);
            if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
              *(_QWORD *)(a2 + v62) = v63 + 1;
              v25 |= (unint64_t)(v64 & 0x7F) << v60;
              if (v64 < 0)
              {
                v60 += 7;
                v14 = v61++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_231;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_231:
          v145 = 64;
          goto LABEL_296;
        case 0xDu:
          v65 = 0;
          v66 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x200000u;
          while (2)
          {
            v67 = *v3;
            v68 = *(_QWORD *)(a2 + v67);
            if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
              *(_QWORD *)(a2 + v67) = v68 + 1;
              v25 |= (unint64_t)(v69 & 0x7F) << v65;
              if (v69 < 0)
              {
                v65 += 7;
                v14 = v66++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_235;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_235:
          v145 = 96;
          goto LABEL_296;
        case 0x14u:
          v70 = 0;
          v71 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x1000000u;
          while (2)
          {
            v72 = *v3;
            v73 = *(_QWORD *)(a2 + v72);
            if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
              *(_QWORD *)(a2 + v72) = v73 + 1;
              v25 |= (unint64_t)(v74 & 0x7F) << v70;
              if (v74 < 0)
              {
                v70 += 7;
                v14 = v71++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_239;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_239:
          v145 = 108;
          goto LABEL_296;
        case 0x15u:
          v75 = 0;
          v76 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x100u;
          while (2)
          {
            v77 = *v3;
            v78 = *(_QWORD *)(a2 + v77);
            if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
              *(_QWORD *)(a2 + v77) = v78 + 1;
              v25 |= (unint64_t)(v79 & 0x7F) << v75;
              if (v79 < 0)
              {
                v75 += 7;
                v14 = v76++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_243;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_243:
          v145 = 44;
          goto LABEL_296;
        case 0x16u:
          v80 = 0;
          v81 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x80u;
          while (2)
          {
            v82 = *v3;
            v83 = *(_QWORD *)(a2 + v82);
            if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
              *(_QWORD *)(a2 + v82) = v83 + 1;
              v25 |= (unint64_t)(v84 & 0x7F) << v80;
              if (v84 < 0)
              {
                v80 += 7;
                v14 = v81++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_247;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_247:
          v145 = 40;
          goto LABEL_296;
        case 0x17u:
          v85 = 0;
          v86 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x40u;
          while (2)
          {
            v87 = *v3;
            v88 = *(_QWORD *)(a2 + v87);
            if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
              *(_QWORD *)(a2 + v87) = v88 + 1;
              v25 |= (unint64_t)(v89 & 0x7F) << v85;
              if (v89 < 0)
              {
                v85 += 7;
                v14 = v86++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_251;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_251:
          v145 = 36;
          goto LABEL_296;
        case 0x18u:
          v90 = 0;
          v91 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x20u;
          while (2)
          {
            v92 = *v3;
            v93 = *(_QWORD *)(a2 + v92);
            if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
              *(_QWORD *)(a2 + v92) = v93 + 1;
              v25 |= (unint64_t)(v94 & 0x7F) << v90;
              if (v94 < 0)
              {
                v90 += 7;
                v14 = v91++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_255;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_255:
          v145 = 32;
          goto LABEL_296;
        case 0x19u:
          v95 = 0;
          v96 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x10u;
          while (2)
          {
            v97 = *v3;
            v98 = *(_QWORD *)(a2 + v97);
            if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v98);
              *(_QWORD *)(a2 + v97) = v98 + 1;
              v25 |= (unint64_t)(v99 & 0x7F) << v95;
              if (v99 < 0)
              {
                v95 += 7;
                v14 = v96++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_259;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_259:
          v145 = 28;
          goto LABEL_296;
        case 0x1Eu:
          v100 = 0;
          v101 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x800u;
          while (2)
          {
            v102 = *v3;
            v103 = *(_QWORD *)(a2 + v102);
            if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
              *(_QWORD *)(a2 + v102) = v103 + 1;
              v25 |= (unint64_t)(v104 & 0x7F) << v100;
              if (v104 < 0)
              {
                v100 += 7;
                v14 = v101++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_263;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_263:
          v145 = 56;
          goto LABEL_296;
        case 0x1Fu:
          v105 = 0;
          v106 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x400u;
          while (2)
          {
            v107 = *v3;
            v108 = *(_QWORD *)(a2 + v107);
            if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
              *(_QWORD *)(a2 + v107) = v108 + 1;
              v25 |= (unint64_t)(v109 & 0x7F) << v105;
              if (v109 < 0)
              {
                v105 += 7;
                v14 = v106++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_267;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_267:
          v145 = 52;
          goto LABEL_296;
        case 0x20u:
          v110 = 0;
          v111 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x1000u;
          while (2)
          {
            v112 = *v3;
            v113 = *(_QWORD *)(a2 + v112);
            if (v113 == -1 || v113 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v113);
              *(_QWORD *)(a2 + v112) = v113 + 1;
              v25 |= (unint64_t)(v114 & 0x7F) << v110;
              if (v114 < 0)
              {
                v110 += 7;
                v14 = v111++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_271;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_271:
          v145 = 60;
          goto LABEL_296;
        case 0x21u:
          v115 = 0;
          v116 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x8000u;
          while (2)
          {
            v117 = *v3;
            v118 = *(_QWORD *)(a2 + v117);
            if (v118 == -1 || v118 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v119 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v118);
              *(_QWORD *)(a2 + v117) = v118 + 1;
              v25 |= (unint64_t)(v119 & 0x7F) << v115;
              if (v119 < 0)
              {
                v115 += 7;
                v14 = v116++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_275;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_275:
          v145 = 72;
          goto LABEL_296;
        case 0x22u:
          v120 = 0;
          v121 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x10000u;
          while (2)
          {
            v122 = *v3;
            v123 = *(_QWORD *)(a2 + v122);
            if (v123 == -1 || v123 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v124 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v123);
              *(_QWORD *)(a2 + v122) = v123 + 1;
              v25 |= (unint64_t)(v124 & 0x7F) << v120;
              if (v124 < 0)
              {
                v120 += 7;
                v14 = v121++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_279;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_279:
          v145 = 76;
          goto LABEL_296;
        case 0x23u:
          v125 = 0;
          v126 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x20000u;
          while (2)
          {
            v127 = *v3;
            v128 = *(_QWORD *)(a2 + v127);
            if (v128 == -1 || v128 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v128);
              *(_QWORD *)(a2 + v127) = v128 + 1;
              v25 |= (unint64_t)(v129 & 0x7F) << v125;
              if (v129 < 0)
              {
                v125 += 7;
                v14 = v126++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_283;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_283:
          v145 = 80;
          goto LABEL_296;
        case 0x24u:
          v130 = 0;
          v131 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x40000u;
          while (2)
          {
            v132 = *v3;
            v133 = *(_QWORD *)(a2 + v132);
            if (v133 == -1 || v133 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v134 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v133);
              *(_QWORD *)(a2 + v132) = v133 + 1;
              v25 |= (unint64_t)(v134 & 0x7F) << v130;
              if (v134 < 0)
              {
                v130 += 7;
                v14 = v131++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_287;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_287:
          v145 = 84;
          goto LABEL_296;
        case 0x25u:
          v135 = 0;
          v136 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x80000u;
          while (2)
          {
            v137 = *v3;
            v138 = *(_QWORD *)(a2 + v137);
            if (v138 == -1 || v138 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
              *(_QWORD *)(a2 + v137) = v138 + 1;
              v25 |= (unint64_t)(v139 & 0x7F) << v135;
              if (v139 < 0)
              {
                v135 += 7;
                v14 = v136++ >= 9;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_291;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v25) = 0;
LABEL_291:
          v145 = 88;
          goto LABEL_296;
        case 0x26u:
          v140 = 0;
          v141 = 0;
          v25 = 0;
          *(_DWORD *)(a1 + 112) |= 0x100000u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v142 = *v3;
        v143 = *(_QWORD *)(a2 + v142);
        if (v143 == -1 || v143 >= *(_QWORD *)(a2 + *v4))
          break;
        v144 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v143);
        *(_QWORD *)(a2 + v142) = v143 + 1;
        v25 |= (unint64_t)(v144 & 0x7F) << v140;
        if ((v144 & 0x80) == 0)
          goto LABEL_293;
        v140 += 7;
        v14 = v141++ >= 9;
        if (v14)
        {
          LODWORD(v25) = 0;
          goto LABEL_295;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_293:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v25) = 0;
LABEL_295:
      v145 = 92;
LABEL_296:
      *(_DWORD *)(a1 + v145) = v25;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWRMLinkPrefChangeEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *String;
  id v56;
  uint64_t v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  char v112;
  unsigned int v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  char v127;
  unsigned int v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  char v132;
  unsigned int v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  char v137;
  unsigned int v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  char v142;
  unsigned int v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  char v147;
  unsigned int v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  char v152;
  unsigned int v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  char v157;
  unsigned int v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  char v167;
  unsigned int v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  char v172;
  unsigned int v173;
  uint64_t v174;
  unint64_t v175;
  char v176;
  char v177;
  unsigned int v178;
  uint64_t v179;
  unint64_t v180;
  char v181;
  char v182;
  unsigned int v183;
  uint64_t v184;
  unint64_t v185;
  char v186;
  char v187;
  unsigned int v188;
  uint64_t v189;
  unint64_t v190;
  char v191;
  void *v192;
  char v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  char v198;
  char v199;
  unsigned int v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  char v205;
  unsigned int v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  char v210;
  unsigned int v211;
  uint64_t v212;
  unint64_t v213;
  char v214;
  char v215;
  unsigned int v216;
  uint64_t v217;
  unint64_t v218;
  char v219;
  char v220;
  unsigned int v221;
  uint64_t v222;
  unint64_t v223;
  char v224;
  char v225;
  unsigned int v226;
  uint64_t v227;
  unint64_t v228;
  char v229;
  char v230;
  unsigned int v231;
  uint64_t v232;
  unint64_t v233;
  char v234;
  uint64_t v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  char v239;
  unsigned int v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  char v244;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_QWORD *)(a1 + 228) |= 2uLL;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)(a2 + v21);
                if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                  break;
                v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
                *(_QWORD *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0)
                  goto LABEL_318;
                v18 += 7;
                v14 = v19++ >= 9;
                if (v14)
                {
                  v20 = 0;
                  goto LABEL_320;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_318:
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_320:
              v235 = 40;
              goto LABEL_462;
            case 2u:
              v24 = 0;
              v25 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x800uLL;
              while (2)
              {
                v27 = *v3;
                v28 = *(_QWORD *)(a2 + v27);
                if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
                  *(_QWORD *)(a2 + v27) = v28 + 1;
                  v26 |= (unint64_t)(v29 & 0x7F) << v24;
                  if (v29 < 0)
                  {
                    v24 += 7;
                    v14 = v25++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_324;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_324:
              v236 = 100;
              goto LABEL_479;
            case 3u:
              v30 = 0;
              v31 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x2000000uLL;
              while (2)
              {
                v32 = *v3;
                v33 = *(_QWORD *)(a2 + v32);
                if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
                  *(_QWORD *)(a2 + v32) = v33 + 1;
                  v26 |= (unint64_t)(v34 & 0x7F) << v30;
                  if (v34 < 0)
                  {
                    v30 += 7;
                    v14 = v31++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_328;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_328:
              v236 = 168;
              goto LABEL_479;
            case 4u:
              v35 = 0;
              v36 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x200000000uLL;
              while (2)
              {
                v37 = *v3;
                v38 = *(_QWORD *)(a2 + v37);
                if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
                  *(_QWORD *)(a2 + v37) = v38 + 1;
                  v26 |= (unint64_t)(v39 & 0x7F) << v35;
                  if (v39 < 0)
                  {
                    v35 += 7;
                    v14 = v36++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_332;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_332:
              v236 = 200;
              goto LABEL_479;
            case 5u:
              v40 = 0;
              v41 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x4000uLL;
              while (2)
              {
                v42 = *v3;
                v43 = *(_QWORD *)(a2 + v42);
                if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
                  *(_QWORD *)(a2 + v42) = v43 + 1;
                  v26 |= (unint64_t)(v44 & 0x7F) << v40;
                  if (v44 < 0)
                  {
                    v40 += 7;
                    v14 = v41++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_336;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_336:
              v236 = 112;
              goto LABEL_479;
            case 6u:
              v45 = 0;
              v46 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x40uLL;
              while (2)
              {
                v47 = *v3;
                v48 = *(_QWORD *)(a2 + v47);
                if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
                  *(_QWORD *)(a2 + v47) = v48 + 1;
                  v26 |= (unint64_t)(v49 & 0x7F) << v45;
                  if (v49 < 0)
                  {
                    v45 += 7;
                    v14 = v46++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_340;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_340:
              v236 = 80;
              goto LABEL_479;
            case 7u:
              v50 = 0;
              v51 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x1000uLL;
              while (2)
              {
                v52 = *v3;
                v53 = *(_QWORD *)(a2 + v52);
                if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
                  *(_QWORD *)(a2 + v52) = v53 + 1;
                  v26 |= (unint64_t)(v54 & 0x7F) << v50;
                  if (v54 < 0)
                  {
                    v50 += 7;
                    v14 = v51++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_344;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_344:
              v236 = 104;
              goto LABEL_479;
            case 8u:
              String = (void *)PBReaderReadString();

              v56 = String;
              v57 = 64;
              goto LABEL_260;
            case 0xFu:
              v58 = 0;
              v59 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x100000uLL;
              while (2)
              {
                v60 = *v3;
                v61 = *(_QWORD *)(a2 + v60);
                if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
                  *(_QWORD *)(a2 + v60) = v61 + 1;
                  v26 |= (unint64_t)(v62 & 0x7F) << v58;
                  if (v62 < 0)
                  {
                    v58 += 7;
                    v14 = v59++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_348;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_348:
              v236 = 136;
              goto LABEL_479;
            case 0x10u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v63 = 0;
                  v64 = 0;
                  v65 = 0;
                  while (1)
                  {
                    v66 = *v3;
                    v67 = *(_QWORD *)(a2 + v66);
                    if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
                      break;
                    v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
                    *(_QWORD *)(a2 + v66) = v67 + 1;
                    v65 |= (unint64_t)(v68 & 0x7F) << v63;
                    if (v68 < 0)
                    {
                      v63 += 7;
                      v14 = v64++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_90;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_90:
                  PBRepeatedUInt32Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                v239 = 0;
                v240 = 0;
                v241 = 0;
                while (1)
                {
                  v242 = *v3;
                  v243 = *(_QWORD *)(a2 + v242);
                  if (v243 == -1 || v243 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v244 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v243);
                  *(_QWORD *)(a2 + v242) = v243 + 1;
                  v241 |= (unint64_t)(v244 & 0x7F) << v239;
                  if (v244 < 0)
                  {
                    v239 += 7;
                    v14 = v240++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_491;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_491:
                PBRepeatedUInt32Add();
              }
LABEL_480:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 0x16u:
              v69 = 0;
              v70 = 0;
              v71 = 0;
              *(_QWORD *)(a1 + 228) |= 4uLL;
              while (2)
              {
                v72 = *v3;
                v73 = *(_QWORD *)(a2 + v72);
                if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
                  *(_QWORD *)(a2 + v72) = v73 + 1;
                  v71 |= (unint64_t)(v74 & 0x7F) << v69;
                  if (v74 < 0)
                  {
                    v69 += 7;
                    v14 = v70++ >= 9;
                    if (v14)
                    {
                      v71 = 0;
                      goto LABEL_352;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v71 = 0;
LABEL_352:
              v20 = -(v71 & 1) ^ (v71 >> 1);
              v235 = 48;
              goto LABEL_462;
            case 0x17u:
              v75 = 0;
              v76 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x2000000000uLL;
              while (2)
              {
                v77 = *v3;
                v78 = *(_QWORD *)(a2 + v77);
                if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
                  *(_QWORD *)(a2 + v77) = v78 + 1;
                  v26 |= (unint64_t)(v79 & 0x7F) << v75;
                  if (v79 < 0)
                  {
                    v75 += 7;
                    v14 = v76++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_356;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_356:
              v236 = 216;
              goto LABEL_479;
            case 0x18u:
              v80 = 0;
              v81 = 0;
              v82 = 0;
              *(_QWORD *)(a1 + 228) |= 8uLL;
              while (2)
              {
                v83 = *v3;
                v84 = *(_QWORD *)(a2 + v83);
                if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
                  *(_QWORD *)(a2 + v83) = v84 + 1;
                  v82 |= (unint64_t)(v85 & 0x7F) << v80;
                  if (v85 < 0)
                  {
                    v80 += 7;
                    v14 = v81++ >= 9;
                    if (v14)
                    {
                      v82 = 0;
                      goto LABEL_360;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v82 = 0;
LABEL_360:
              v20 = -(v82 & 1) ^ (v82 >> 1);
              v235 = 56;
              goto LABEL_462;
            case 0x19u:
              v86 = 0;
              v87 = 0;
              v88 = 0;
              *(_QWORD *)(a1 + 228) |= 0x8000000000uLL;
              while (2)
              {
                v89 = *v3;
                v90 = *(_QWORD *)(a2 + v89);
                if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
                  *(_QWORD *)(a2 + v89) = v90 + 1;
                  v88 |= (unint64_t)(v91 & 0x7F) << v86;
                  if (v91 < 0)
                  {
                    v86 += 7;
                    v14 = v87++ >= 9;
                    if (v14)
                    {
                      v88 = 0;
                      goto LABEL_364;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v88 = 0;
LABEL_364:
              *(_BYTE *)(a1 + 224) = v88 != 0;
              goto LABEL_480;
            case 0x1Au:
              v92 = 0;
              v93 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x1000000000uLL;
              while (2)
              {
                v94 = *v3;
                v95 = *(_QWORD *)(a2 + v94);
                if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
                  *(_QWORD *)(a2 + v94) = v95 + 1;
                  v26 |= (unint64_t)(v96 & 0x7F) << v92;
                  if (v96 < 0)
                  {
                    v92 += 7;
                    v14 = v93++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_368;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_368:
              v236 = 212;
              goto LABEL_479;
            case 0x1Bu:
              v97 = 0;
              v98 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x400000000uLL;
              while (2)
              {
                v99 = *v3;
                v100 = *(_QWORD *)(a2 + v99);
                if (v100 == -1 || v100 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
                  *(_QWORD *)(a2 + v99) = v100 + 1;
                  v26 |= (unint64_t)(v101 & 0x7F) << v97;
                  if (v101 < 0)
                  {
                    v97 += 7;
                    v14 = v98++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_372;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_372:
              v236 = 204;
              goto LABEL_479;
            case 0x1Cu:
              v102 = 0;
              v103 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x4000000000uLL;
              while (2)
              {
                v104 = *v3;
                v105 = *(_QWORD *)(a2 + v104);
                if (v105 == -1 || v105 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v106 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v105);
                  *(_QWORD *)(a2 + v104) = v105 + 1;
                  v26 |= (unint64_t)(v106 & 0x7F) << v102;
                  if (v106 < 0)
                  {
                    v102 += 7;
                    v14 = v103++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_376;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_376:
              v236 = 220;
              goto LABEL_479;
            case 0x1Du:
              v107 = 0;
              v108 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x800000000uLL;
              while (2)
              {
                v109 = *v3;
                v110 = *(_QWORD *)(a2 + v109);
                if (v110 == -1 || v110 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v111 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v110);
                  *(_QWORD *)(a2 + v109) = v110 + 1;
                  v26 |= (unint64_t)(v111 & 0x7F) << v107;
                  if (v111 < 0)
                  {
                    v107 += 7;
                    v14 = v108++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_380;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_380:
              v236 = 208;
              goto LABEL_479;
            case 0x1Eu:
              v112 = 0;
              v113 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x1000000uLL;
              while (2)
              {
                v114 = *v3;
                v115 = *(_QWORD *)(a2 + v114);
                if (v115 == -1 || v115 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v115);
                  *(_QWORD *)(a2 + v114) = v115 + 1;
                  v26 |= (unint64_t)(v116 & 0x7F) << v112;
                  if (v116 < 0)
                  {
                    v112 += 7;
                    v14 = v113++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_384;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_384:
              v236 = 152;
              goto LABEL_479;
            case 0x1Fu:
              v117 = 0;
              v118 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x100uLL;
              while (2)
              {
                v119 = *v3;
                v120 = *(_QWORD *)(a2 + v119);
                if (v120 == -1 || v120 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v120);
                  *(_QWORD *)(a2 + v119) = v120 + 1;
                  v26 |= (unint64_t)(v121 & 0x7F) << v117;
                  if (v121 < 0)
                  {
                    v117 += 7;
                    v14 = v118++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_388;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_388:
              v236 = 88;
              goto LABEL_479;
            case 0x20u:
              v122 = 0;
              v123 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x10000000uLL;
              while (2)
              {
                v124 = *v3;
                v125 = *(_QWORD *)(a2 + v124);
                if (v125 == -1 || v125 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v126 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v125);
                  *(_QWORD *)(a2 + v124) = v125 + 1;
                  v26 |= (unint64_t)(v126 & 0x7F) << v122;
                  if (v126 < 0)
                  {
                    v122 += 7;
                    v14 = v123++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_392;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_392:
              v236 = 180;
              goto LABEL_479;
            case 0x21u:
              v127 = 0;
              v128 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x10uLL;
              while (2)
              {
                v129 = *v3;
                v130 = *(_QWORD *)(a2 + v129);
                if (v130 == -1 || v130 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v131 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v130);
                  *(_QWORD *)(a2 + v129) = v130 + 1;
                  v26 |= (unint64_t)(v131 & 0x7F) << v127;
                  if (v131 < 0)
                  {
                    v127 += 7;
                    v14 = v128++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_396;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_396:
              v236 = 72;
              goto LABEL_479;
            case 0x22u:
              v132 = 0;
              v133 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x80000uLL;
              while (2)
              {
                v134 = *v3;
                v135 = *(_QWORD *)(a2 + v134);
                if (v135 == -1 || v135 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v136 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v135);
                  *(_QWORD *)(a2 + v134) = v135 + 1;
                  v26 |= (unint64_t)(v136 & 0x7F) << v132;
                  if (v136 < 0)
                  {
                    v132 += 7;
                    v14 = v133++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_400;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_400:
              v236 = 132;
              goto LABEL_479;
            case 0x23u:
              v137 = 0;
              v138 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x40000uLL;
              while (2)
              {
                v139 = *v3;
                v140 = *(_QWORD *)(a2 + v139);
                if (v140 == -1 || v140 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v141 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v140);
                  *(_QWORD *)(a2 + v139) = v140 + 1;
                  v26 |= (unint64_t)(v141 & 0x7F) << v137;
                  if (v141 < 0)
                  {
                    v137 += 7;
                    v14 = v138++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_404;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_404:
              v236 = 128;
              goto LABEL_479;
            case 0x24u:
              v142 = 0;
              v143 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x400000uLL;
              while (2)
              {
                v144 = *v3;
                v145 = *(_QWORD *)(a2 + v144);
                if (v145 == -1 || v145 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v146 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v145);
                  *(_QWORD *)(a2 + v144) = v145 + 1;
                  v26 |= (unint64_t)(v146 & 0x7F) << v142;
                  if (v146 < 0)
                  {
                    v142 += 7;
                    v14 = v143++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_408;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_408:
              v236 = 144;
              goto LABEL_479;
            case 0x25u:
              v147 = 0;
              v148 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x800000uLL;
              while (2)
              {
                v149 = *v3;
                v150 = *(_QWORD *)(a2 + v149);
                if (v150 == -1 || v150 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v151 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v150);
                  *(_QWORD *)(a2 + v149) = v150 + 1;
                  v26 |= (unint64_t)(v151 & 0x7F) << v147;
                  if (v151 < 0)
                  {
                    v147 += 7;
                    v14 = v148++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_412;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_412:
              v236 = 148;
              goto LABEL_479;
            case 0x26u:
              v152 = 0;
              v153 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x10000uLL;
              while (2)
              {
                v154 = *v3;
                v155 = *(_QWORD *)(a2 + v154);
                if (v155 == -1 || v155 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v156 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v155);
                  *(_QWORD *)(a2 + v154) = v155 + 1;
                  v26 |= (unint64_t)(v156 & 0x7F) << v152;
                  if (v156 < 0)
                  {
                    v152 += 7;
                    v14 = v153++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_416;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_416:
              v236 = 120;
              goto LABEL_479;
            case 0x27u:
              v157 = 0;
              v158 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x20000uLL;
              while (2)
              {
                v159 = *v3;
                v160 = *(_QWORD *)(a2 + v159);
                if (v160 == -1 || v160 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
                  *(_QWORD *)(a2 + v159) = v160 + 1;
                  v26 |= (unint64_t)(v161 & 0x7F) << v157;
                  if (v161 < 0)
                  {
                    v157 += 7;
                    v14 = v158++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_420;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_420:
              v236 = 124;
              goto LABEL_479;
            case 0x28u:
              v162 = 0;
              v163 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x200000uLL;
              while (2)
              {
                v164 = *v3;
                v165 = *(_QWORD *)(a2 + v164);
                if (v165 == -1 || v165 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v166 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v165);
                  *(_QWORD *)(a2 + v164) = v165 + 1;
                  v26 |= (unint64_t)(v166 & 0x7F) << v162;
                  if (v166 < 0)
                  {
                    v162 += 7;
                    v14 = v163++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_424;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_424:
              v236 = 140;
              goto LABEL_479;
            case 0x29u:
              v167 = 0;
              v168 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x8000uLL;
              while (2)
              {
                v169 = *v3;
                v170 = *(_QWORD *)(a2 + v169);
                if (v170 == -1 || v170 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v171 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v170);
                  *(_QWORD *)(a2 + v169) = v170 + 1;
                  v26 |= (unint64_t)(v171 & 0x7F) << v167;
                  if (v171 < 0)
                  {
                    v167 += 7;
                    v14 = v168++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_428;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_428:
              v236 = 116;
              goto LABEL_479;
            case 0x2Bu:
              v172 = 0;
              v173 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x2000uLL;
              while (2)
              {
                v174 = *v3;
                v175 = *(_QWORD *)(a2 + v174);
                if (v175 == -1 || v175 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v176 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v175);
                  *(_QWORD *)(a2 + v174) = v175 + 1;
                  v26 |= (unint64_t)(v176 & 0x7F) << v172;
                  if (v176 < 0)
                  {
                    v172 += 7;
                    v14 = v173++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_432;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_432:
              v236 = 108;
              goto LABEL_479;
            case 0x2Cu:
              v177 = 0;
              v178 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x20uLL;
              while (2)
              {
                v179 = *v3;
                v180 = *(_QWORD *)(a2 + v179);
                if (v180 == -1 || v180 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v181 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v180);
                  *(_QWORD *)(a2 + v179) = v180 + 1;
                  v26 |= (unint64_t)(v181 & 0x7F) << v177;
                  if (v181 < 0)
                  {
                    v177 += 7;
                    v14 = v178++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_436;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_436:
              v236 = 76;
              goto LABEL_479;
            case 0x2Du:
              v182 = 0;
              v183 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x100000000uLL;
              while (2)
              {
                v184 = *v3;
                v185 = *(_QWORD *)(a2 + v184);
                if (v185 == -1 || v185 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v186 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v185);
                  *(_QWORD *)(a2 + v184) = v185 + 1;
                  v26 |= (unint64_t)(v186 & 0x7F) << v182;
                  if (v186 < 0)
                  {
                    v182 += 7;
                    v14 = v183++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_440;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_440:
              v236 = 196;
              goto LABEL_479;
            case 0x2Eu:
              v187 = 0;
              v188 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x8000000uLL;
              while (2)
              {
                v189 = *v3;
                v190 = *(_QWORD *)(a2 + v189);
                if (v190 == -1 || v190 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v191 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v190);
                  *(_QWORD *)(a2 + v189) = v190 + 1;
                  v26 |= (unint64_t)(v191 & 0x7F) << v187;
                  if (v191 < 0)
                  {
                    v187 += 7;
                    v14 = v188++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_444;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_444:
              v236 = 176;
              goto LABEL_479;
            case 0x2Fu:
              v192 = (void *)PBReaderReadString();

              v56 = v192;
              v57 = 160;
LABEL_260:
              *(_QWORD *)(a1 + v57) = v56;
              goto LABEL_480;
            case 0x30u:
              v193 = 0;
              v194 = 0;
              v195 = 0;
              *(_QWORD *)(a1 + 228) |= 0x200uLL;
              while (2)
              {
                v196 = *v3;
                v197 = *(_QWORD *)(a2 + v196);
                if (v197 == -1 || v197 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v198 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v197);
                  *(_QWORD *)(a2 + v196) = v197 + 1;
                  v195 |= (unint64_t)(v198 & 0x7F) << v193;
                  if (v198 < 0)
                  {
                    v193 += 7;
                    v14 = v194++ >= 9;
                    if (v14)
                    {
                      LODWORD(v195) = 0;
                      goto LABEL_448;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v195) = 0;
LABEL_448:
              v237 = -(v195 & 1) ^ ((int)v195 >> 1);
              v238 = 92;
              goto LABEL_453;
            case 0x31u:
              v199 = 0;
              v200 = 0;
              v201 = 0;
              *(_QWORD *)(a1 + 228) |= 0x400uLL;
              while (2)
              {
                v202 = *v3;
                v203 = *(_QWORD *)(a2 + v202);
                if (v203 == -1 || v203 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v204 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v203);
                  *(_QWORD *)(a2 + v202) = v203 + 1;
                  v201 |= (unint64_t)(v204 & 0x7F) << v199;
                  if (v204 < 0)
                  {
                    v199 += 7;
                    v14 = v200++ >= 9;
                    if (v14)
                    {
                      LODWORD(v201) = 0;
                      goto LABEL_452;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v201) = 0;
LABEL_452:
              v237 = -(v201 & 1) ^ ((int)v201 >> 1);
              v238 = 96;
LABEL_453:
              *(_DWORD *)(a1 + v238) = v237;
              goto LABEL_480;
            case 0x32u:
              v205 = 0;
              v206 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x80uLL;
              while (2)
              {
                v207 = *v3;
                v208 = *(_QWORD *)(a2 + v207);
                if (v208 == -1 || v208 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v209 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v208);
                  *(_QWORD *)(a2 + v207) = v208 + 1;
                  v26 |= (unint64_t)(v209 & 0x7F) << v205;
                  if (v209 < 0)
                  {
                    v205 += 7;
                    v14 = v206++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_457;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_457:
              v236 = 84;
              goto LABEL_479;
            case 0x33u:
              v210 = 0;
              v211 = 0;
              v20 = 0;
              *(_QWORD *)(a1 + 228) |= 1uLL;
              while (2)
              {
                v212 = *v3;
                v213 = *(_QWORD *)(a2 + v212);
                if (v213 == -1 || v213 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v214 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v213);
                  *(_QWORD *)(a2 + v212) = v213 + 1;
                  v20 |= (unint64_t)(v214 & 0x7F) << v210;
                  if (v214 < 0)
                  {
                    v210 += 7;
                    v14 = v211++ >= 9;
                    if (v14)
                    {
                      v20 = 0;
                      goto LABEL_461;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v20 = 0;
LABEL_461:
              v235 = 32;
LABEL_462:
              *(_QWORD *)(a1 + v235) = v20;
              goto LABEL_480;
            case 0x34u:
              v215 = 0;
              v216 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x20000000uLL;
              while (2)
              {
                v217 = *v3;
                v218 = *(_QWORD *)(a2 + v217);
                if (v218 == -1 || v218 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v219 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v218);
                  *(_QWORD *)(a2 + v217) = v218 + 1;
                  v26 |= (unint64_t)(v219 & 0x7F) << v215;
                  if (v219 < 0)
                  {
                    v215 += 7;
                    v14 = v216++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_466;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_466:
              v236 = 184;
              goto LABEL_479;
            case 0x35u:
              v220 = 0;
              v221 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x40000000uLL;
              while (2)
              {
                v222 = *v3;
                v223 = *(_QWORD *)(a2 + v222);
                if (v223 == -1 || v223 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v224 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v223);
                  *(_QWORD *)(a2 + v222) = v223 + 1;
                  v26 |= (unint64_t)(v224 & 0x7F) << v220;
                  if (v224 < 0)
                  {
                    v220 += 7;
                    v14 = v221++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_470;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_470:
              v236 = 188;
              goto LABEL_479;
            case 0x36u:
              v225 = 0;
              v226 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x80000000uLL;
              while (2)
              {
                v227 = *v3;
                v228 = *(_QWORD *)(a2 + v227);
                if (v228 == -1 || v228 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v229 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v228);
                  *(_QWORD *)(a2 + v227) = v228 + 1;
                  v26 |= (unint64_t)(v229 & 0x7F) << v225;
                  if (v229 < 0)
                  {
                    v225 += 7;
                    v14 = v226++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_474;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_474:
              v236 = 192;
              goto LABEL_479;
            case 0x37u:
              v230 = 0;
              v231 = 0;
              v26 = 0;
              *(_QWORD *)(a1 + 228) |= 0x4000000uLL;
              while (2)
              {
                v232 = *v3;
                v233 = *(_QWORD *)(a2 + v232);
                if (v233 == -1 || v233 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v234 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v233);
                  *(_QWORD *)(a2 + v232) = v233 + 1;
                  v26 |= (unint64_t)(v234 & 0x7F) << v230;
                  if (v234 < 0)
                  {
                    v230 += 7;
                    v14 = v231++ >= 9;
                    if (v14)
                    {
                      LODWORD(v26) = 0;
                      goto LABEL_478;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v26) = 0;
LABEL_478:
              v236 = 172;
LABEL_479:
              *(_DWORD *)(a1 + v236) = v26;
              goto LABEL_480;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_480;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWRMLinkPrefInitReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_51:
        v36 = 16;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_45;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_47;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_47:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v30 = 0;
        v31 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            break;
          v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
          *(_QWORD *)(a2 + v32) = v33 + 1;
          v26 |= (unint64_t)(v34 & 0x7F) << v30;
          if ((v34 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_55:
        v36 = 20;
      }
      *(_DWORD *)(a1 + v36) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWRMLinkStateChangeReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  void *String;
  id v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        if (v13 == -1 || v13 >= *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v15 = v10++ >= 9;
        if (v15)
        {
          v11 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v11 = 0;
LABEL_14:
      if (v16 || (v11 & 7) == 4)
        break;
      switch((v11 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_WORD *)(a1 + 96) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)(a2 + v21);
            if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v5))
              break;
            v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_123;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_125;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_123:
          if (*(_BYTE *)(a2 + *v6))
            v20 = 0;
LABEL_125:
          v99 = 16;
          goto LABEL_175;
        case 2u:
          v25 = v2;
          String = (void *)PBReaderReadString();

          v27 = String;
          v2 = v25;
          v28 = 32;
          goto LABEL_121;
        case 3u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_WORD *)(a1 + 96) |= 0x800u;
          while (2)
          {
            v32 = *v4;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v15 = v30++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_129;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_129:
          v100 = 72;
          goto LABEL_180;
        case 4u:
          v35 = 0;
          v36 = 0;
          v31 = 0;
          *(_WORD *)(a1 + 96) |= 0x40u;
          while (2)
          {
            v37 = *v4;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v31 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v15 = v36++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_133;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_133:
          v100 = 52;
          goto LABEL_180;
        case 5u:
          v40 = 0;
          v41 = 0;
          v31 = 0;
          *(_WORD *)(a1 + 96) |= 0x200u;
          while (2)
          {
            v42 = *v4;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v43);
              *(_QWORD *)(a2 + v42) = v43 + 1;
              v31 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                v15 = v41++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_137:
          v100 = 64;
          goto LABEL_180;
        case 6u:
          v45 = 0;
          v46 = 0;
          v31 = 0;
          *(_WORD *)(a1 + 96) |= 0x100u;
          while (2)
          {
            v47 = *v4;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v31 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                v15 = v46++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_141:
          v100 = 60;
          goto LABEL_180;
        case 7u:
          v50 = 0;
          v51 = 0;
          v31 = 0;
          *(_WORD *)(a1 + 96) |= 0x1000u;
          while (2)
          {
            v52 = *v4;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v31 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                v15 = v51++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_145:
          v100 = 88;
          goto LABEL_180;
        case 8u:
          v55 = 0;
          v56 = 0;
          v31 = 0;
          *(_WORD *)(a1 + 96) |= 8u;
          while (2)
          {
            v57 = *v4;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v31 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v15 = v56++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_149:
          v100 = 40;
          goto LABEL_180;
        case 9u:
          v60 = 0;
          v61 = 0;
          v31 = 0;
          *(_WORD *)(a1 + 96) |= 0x10u;
          while (2)
          {
            v62 = *v4;
            v63 = *(_QWORD *)(a2 + v62);
            if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v63);
              *(_QWORD *)(a2 + v62) = v63 + 1;
              v31 |= (unint64_t)(v64 & 0x7F) << v60;
              if (v64 < 0)
              {
                v60 += 7;
                v15 = v61++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_153:
          v100 = 44;
          goto LABEL_180;
        case 0xAu:
          v65 = 0;
          v66 = 0;
          v31 = 0;
          *(_WORD *)(a1 + 96) |= 0x20u;
          while (2)
          {
            v67 = *v4;
            v68 = *(_QWORD *)(a2 + v67);
            if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v68);
              *(_QWORD *)(a2 + v67) = v68 + 1;
              v31 |= (unint64_t)(v69 & 0x7F) << v65;
              if (v69 < 0)
              {
                v65 += 7;
                v15 = v66++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_157:
          v100 = 48;
          goto LABEL_180;
        case 0xBu:
          v70 = 0;
          v71 = 0;
          v72 = 0;
          *(_WORD *)(a1 + 96) |= 0x2000u;
          while (2)
          {
            v73 = *v4;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v74);
              *(_QWORD *)(a2 + v73) = v74 + 1;
              v72 |= (unint64_t)(v75 & 0x7F) << v70;
              if (v75 < 0)
              {
                v70 += 7;
                v15 = v71++ >= 9;
                if (v15)
                {
                  LODWORD(v72) = 0;
                  goto LABEL_161;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v72) = 0;
LABEL_161:
          v101 = -(v72 & 1) ^ ((int)v72 >> 1);
          v102 = 92;
          goto LABEL_166;
        case 0xCu:
          v76 = 0;
          v77 = 0;
          v78 = 0;
          *(_WORD *)(a1 + 96) |= 4u;
          while (2)
          {
            v79 = *v4;
            v80 = *(_QWORD *)(a2 + v79);
            if (v80 == -1 || v80 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v80);
              *(_QWORD *)(a2 + v79) = v80 + 1;
              v78 |= (unint64_t)(v81 & 0x7F) << v76;
              if (v81 < 0)
              {
                v76 += 7;
                v15 = v77++ >= 9;
                if (v15)
                {
                  LODWORD(v78) = 0;
                  goto LABEL_165;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v78) = 0;
LABEL_165:
          v101 = -(v78 & 1) ^ ((int)v78 >> 1);
          v102 = 24;
LABEL_166:
          *(_DWORD *)(a1 + v102) = v101;
          continue;
        case 0xDu:
          v82 = 0;
          v83 = 0;
          v31 = 0;
          *(_WORD *)(a1 + 96) |= 0x80u;
          while (2)
          {
            v84 = *v4;
            v85 = *(_QWORD *)(a2 + v84);
            if (v85 == -1 || v85 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v85);
              *(_QWORD *)(a2 + v84) = v85 + 1;
              v31 |= (unint64_t)(v86 & 0x7F) << v82;
              if (v86 < 0)
              {
                v82 += 7;
                v15 = v83++ >= 9;
                if (v15)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_170;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            LODWORD(v31) = 0;
LABEL_170:
          v100 = 56;
          goto LABEL_180;
        case 0xEu:
          v87 = 0;
          v88 = 0;
          v20 = 0;
          *(_WORD *)(a1 + 96) |= 1u;
          while (2)
          {
            v89 = *v4;
            v90 = *(_QWORD *)(a2 + v89);
            if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v90);
              *(_QWORD *)(a2 + v89) = v90 + 1;
              v20 |= (unint64_t)(v91 & 0x7F) << v87;
              if (v91 < 0)
              {
                v87 += 7;
                v15 = v88++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_174;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v20 = 0;
LABEL_174:
          v99 = 8;
LABEL_175:
          *(_QWORD *)(a1 + v99) = v20;
          continue;
        case 0xFu:
          v92 = 0;
          v93 = 0;
          v31 = 0;
          *(_WORD *)(a1 + 96) |= 0x400u;
          break;
        case 0x10u:
          v97 = v2;
          v98 = (void *)PBReaderReadString();

          v27 = v98;
          v2 = v97;
          v28 = 80;
LABEL_121:
          *(_QWORD *)(a1 + v28) = v27;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v94 = *v4;
        v95 = *(_QWORD *)(a2 + v94);
        if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v5))
          break;
        v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v95);
        *(_QWORD *)(a2 + v94) = v95 + 1;
        v31 |= (unint64_t)(v96 & 0x7F) << v92;
        if ((v96 & 0x80) == 0)
          goto LABEL_177;
        v92 += 7;
        v15 = v93++ >= 9;
        if (v15)
        {
          LODWORD(v31) = 0;
          goto LABEL_179;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_177:
      if (*(_BYTE *)(a2 + *v6))
        LODWORD(v31) = 0;
LABEL_179:
      v100 = 68;
LABEL_180:
      *(_DWORD *)(a1 + v100) = v31;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t AWDWRMStreamingReportReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  int *v76;
  int *v77;
  AWDThroughputEvaluation *v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
  v8 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
  v9 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    while (1)
    {
      v13 = *v3;
      v14 = *(_QWORD *)(a2 + v13);
      if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v4))
        break;
      v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
      *(_QWORD *)(a2 + v13) = v14 + 1;
      v12 |= (unint64_t)(v15 & 0x7F) << v10;
      if ((v15 & 0x80) == 0)
        goto LABEL_12;
      v10 += 7;
      v16 = v11++ >= 9;
      if (v16)
      {
        v12 = 0;
        v17 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v17 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v12 = 0;
LABEL_14:
    if (v17 || (v12 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v12 >> 3))
    {
      case 1u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_WORD *)&a1[v7[622]] |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_102;
          v19 += 7;
          v16 = v20++ >= 9;
          if (v16)
          {
            v21 = 0;
            goto LABEL_104;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_102:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_104:
        *(_QWORD *)&a1[v8[623]] = v21;
        goto LABEL_147;
      case 4u:
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_WORD *)&a1[v7[622]] |= 0x40u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              v16 = v27++ >= 9;
              if (v16)
              {
                LODWORD(v28) = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_108:
        v84 = 44;
        goto LABEL_146;
      case 5u:
        v32 = 0;
        v33 = 0;
        v28 = 0;
        *(_WORD *)&a1[v7[622]] |= 4u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v28 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              v16 = v33++ >= 9;
              if (v16)
              {
                LODWORD(v28) = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_112:
        v84 = 20;
        goto LABEL_146;
      case 6u:
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_WORD *)&a1[v7[622]] |= 0x80u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              v16 = v38++ >= 9;
              if (v16)
              {
                v39 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v39 = 0;
LABEL_116:
        v85 = v39 != 0;
        v86 = 48;
        goto LABEL_133;
      case 7u:
        v43 = 0;
        v44 = 0;
        v28 = 0;
        *(_WORD *)&a1[v7[622]] |= 0x20u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v28 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v16 = v44++ >= 9;
              if (v16)
              {
                LODWORD(v28) = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_120:
        v84 = 40;
        goto LABEL_146;
      case 9u:
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)&a1[v7[622]] |= 0x100u;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v52);
            *(_QWORD *)(a2 + v51) = v52 + 1;
            v50 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v16 = v49++ >= 9;
              if (v16)
              {
                v50 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v50 = 0;
LABEL_124:
        v85 = v50 != 0;
        v86 = 49;
        goto LABEL_133;
      case 0xAu:
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_WORD *)&a1[v7[622]] |= 0x400u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v56 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v16 = v55++ >= 9;
              if (v16)
              {
                v56 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v56 = 0;
LABEL_128:
        v85 = v56 != 0;
        v86 = 51;
        goto LABEL_133;
      case 0xBu:
        v60 = 0;
        v61 = 0;
        v62 = 0;
        *(_WORD *)&a1[v7[622]] |= 0x200u;
        while (2)
        {
          v63 = *v3;
          v64 = *(_QWORD *)(a2 + v63);
          if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v16 = v61++ >= 9;
              if (v16)
              {
                v62 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v62 = 0;
LABEL_132:
        v85 = v62 != 0;
        v86 = 50;
LABEL_133:
        a1[v86] = v85;
        goto LABEL_147;
      case 0xCu:
        v66 = 0;
        v67 = 0;
        v28 = 0;
        *(_WORD *)&a1[v7[622]] |= 8u;
        while (2)
        {
          v68 = *v3;
          v69 = *(_QWORD *)(a2 + v68);
          if (v69 == -1 || v69 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v69);
            *(_QWORD *)(a2 + v68) = v69 + 1;
            v28 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v66 += 7;
              v16 = v67++ >= 9;
              if (v16)
              {
                LODWORD(v28) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_137:
        v84 = 24;
        goto LABEL_146;
      case 0xDu:
        v71 = 0;
        v72 = 0;
        v28 = 0;
        *(_WORD *)&a1[v7[622]] |= 0x10u;
        while (2)
        {
          v73 = *v3;
          v74 = *(_QWORD *)(a2 + v73);
          if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v28 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v71 += 7;
              v16 = v72++ >= 9;
              if (v16)
              {
                LODWORD(v28) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_141:
        v84 = 28;
        goto LABEL_146;
      case 0x10u:
        v76 = v7;
        v77 = v8;
        v78 = objc_alloc_init(AWDThroughputEvaluation);
        objc_msgSend(a1, "addInstValues:", v78);

        if (PBReaderPlaceMark() && (AWDThroughputEvaluationReadFrom((uint64_t)v78, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          v8 = v77;
          v7 = v76;
LABEL_147:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0x11u:
        v79 = 0;
        v80 = 0;
        v28 = 0;
        *(_WORD *)&a1[v7[622]] |= 2u;
        while (2)
        {
          v81 = *v3;
          v82 = *(_QWORD *)(a2 + v81);
          if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v82);
            *(_QWORD *)(a2 + v81) = v82 + 1;
            v28 |= (unint64_t)(v83 & 0x7F) << v79;
            if (v83 < 0)
            {
              v79 += 7;
              v16 = v80++ >= 9;
              if (v16)
              {
                LODWORD(v28) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_145:
        v84 = 16;
LABEL_146:
        *(_DWORD *)&a1[v84] = v28;
        goto LABEL_147;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_147;
    }
  }
}

uint64_t AWDWRMULCACoexStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  int *v34;
  int *v35;
  int *v36;
  int *v37;
  int *v38;
  uint64_t v39;
  uint64_t result;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v8 = (int *)MEMORY[0x24BE7AF30];
    v9 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v10 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v11 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v12 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v13 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v14 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v15 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v16 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v17 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    v18 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      while (1)
      {
        v22 = *v3;
        v23 = *(_QWORD *)(a2 + v22);
        if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
          break;
        v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v23);
        *(_QWORD *)(a2 + v22) = v23 + 1;
        v21 |= (unint64_t)(v24 & 0x7F) << v19;
        if ((v24 & 0x80) == 0)
          goto LABEL_12;
        v19 += 7;
        v25 = v20++ >= 9;
        if (v25)
        {
          v21 = 0;
          v26 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v26 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v21 = 0;
LABEL_14:
      if (v26 || (v21 & 7) == 4)
        break;
      switch((v21 >> 3))
      {
        case 1u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_WORD *)(a1 + v7[635]) |= 1u;
          while (1)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
              break;
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
              goto LABEL_92;
            v28 += 7;
            v25 = v29++ >= 9;
            if (v25)
            {
              v30 = 0;
              goto LABEL_94;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_92:
          if (*(_BYTE *)(a2 + *v5))
            v30 = 0;
LABEL_94:
          *(_QWORD *)(a1 + v9[636]) = v30;
          continue;
        case 2u:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v7[635]) |= 0x200u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                v25 = v42++ >= 9;
                if (v25)
                {
                  v43 = 0;
                  goto LABEL_98;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v43 = 0;
LABEL_98:
          *(_BYTE *)(a1 + v10[637]) = v43 != 0;
          continue;
        case 3u:
          v47 = 0;
          v48 = 0;
          v49 = 0;
          *(_WORD *)(a1 + v7[635]) |= 0x100u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v49 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                v25 = v48++ >= 9;
                if (v25)
                {
                  LODWORD(v49) = 0;
                  goto LABEL_102;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v49) = 0;
LABEL_102:
          v88 = v11[638];
          goto LABEL_131;
        case 4u:
          v53 = 0;
          v54 = 0;
          v49 = 0;
          *(_WORD *)(a1 + v7[635]) |= 0x40u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v49 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                v25 = v54++ >= 9;
                if (v25)
                {
                  LODWORD(v49) = 0;
                  goto LABEL_106;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v49) = 0;
LABEL_106:
          v88 = v12[639];
          goto LABEL_131;
        case 5u:
          v58 = 0;
          v59 = 0;
          v49 = 0;
          *(_WORD *)(a1 + v7[635]) |= 0x80u;
          while (2)
          {
            v60 = *v3;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v61);
              *(_QWORD *)(a2 + v60) = v61 + 1;
              v49 |= (unint64_t)(v62 & 0x7F) << v58;
              if (v62 < 0)
              {
                v58 += 7;
                v25 = v59++ >= 9;
                if (v25)
                {
                  LODWORD(v49) = 0;
                  goto LABEL_110;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v49) = 0;
LABEL_110:
          v88 = v13[640];
          goto LABEL_131;
        case 6u:
          v63 = 0;
          v64 = 0;
          v49 = 0;
          *(_WORD *)(a1 + v7[635]) |= 0x20u;
          while (2)
          {
            v65 = *v3;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v66);
              *(_QWORD *)(a2 + v65) = v66 + 1;
              v49 |= (unint64_t)(v67 & 0x7F) << v63;
              if (v67 < 0)
              {
                v63 += 7;
                v25 = v64++ >= 9;
                if (v25)
                {
                  LODWORD(v49) = 0;
                  goto LABEL_114;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v49) = 0;
LABEL_114:
          v88 = v14[641];
          goto LABEL_131;
        case 7u:
          v68 = 0;
          v69 = 0;
          v49 = 0;
          *(_WORD *)(a1 + v7[635]) |= 0x10u;
          while (2)
          {
            v70 = *v3;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v71);
              *(_QWORD *)(a2 + v70) = v71 + 1;
              v49 |= (unint64_t)(v72 & 0x7F) << v68;
              if (v72 < 0)
              {
                v68 += 7;
                v25 = v69++ >= 9;
                if (v25)
                {
                  LODWORD(v49) = 0;
                  goto LABEL_118;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v49) = 0;
LABEL_118:
          v88 = v15[642];
          goto LABEL_131;
        case 8u:
          v73 = 0;
          v74 = 0;
          v49 = 0;
          *(_WORD *)(a1 + v7[635]) |= 4u;
          while (2)
          {
            v75 = *v3;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v76);
              *(_QWORD *)(a2 + v75) = v76 + 1;
              v49 |= (unint64_t)(v77 & 0x7F) << v73;
              if (v77 < 0)
              {
                v73 += 7;
                v25 = v74++ >= 9;
                if (v25)
                {
                  LODWORD(v49) = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v49) = 0;
LABEL_122:
          v88 = v16[643];
          goto LABEL_131;
        case 9u:
          v78 = 0;
          v79 = 0;
          v49 = 0;
          *(_WORD *)(a1 + v7[635]) |= 8u;
          while (2)
          {
            v80 = *v3;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v81);
              *(_QWORD *)(a2 + v80) = v81 + 1;
              v49 |= (unint64_t)(v82 & 0x7F) << v78;
              if (v82 < 0)
              {
                v78 += 7;
                v25 = v79++ >= 9;
                if (v25)
                {
                  LODWORD(v49) = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v49) = 0;
LABEL_126:
          v88 = v17[644];
          goto LABEL_131;
        case 0xAu:
          v83 = 0;
          v84 = 0;
          v49 = 0;
          *(_WORD *)(a1 + v7[635]) |= 2u;
          break;
        default:
          v34 = v9;
          v35 = v10;
          v36 = v7;
          v37 = v11;
          v38 = v12;
          v39 = a1;
          result = PBReaderSkipValueWithTag();
          v13 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          a1 = v39;
          v14 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v5 = (int *)MEMORY[0x24BE7AF48];
          v12 = v38;
          v15 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v11 = v37;
          v16 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v7 = v36;
          v18 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v10 = v35;
          v17 = &OBJC_IVAR___AWDWiFiNWActivityTraffic__value;
          v9 = v34;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v85 = *v3;
        v86 = *(_QWORD *)(a2 + v85);
        if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v4))
          break;
        v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v86);
        *(_QWORD *)(a2 + v85) = v86 + 1;
        v49 |= (unint64_t)(v87 & 0x7F) << v83;
        if ((v87 & 0x80) == 0)
          goto LABEL_128;
        v83 += 7;
        v25 = v84++ >= 9;
        if (v25)
        {
          LODWORD(v49) = 0;
          goto LABEL_130;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_128:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v49) = 0;
LABEL_130:
      v88 = v18[645];
LABEL_131:
      *(_DWORD *)(a1 + v88) = v49;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWRMWiFiCallingEndReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  char v147;
  unsigned int v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  void *String;
  id v153;
  uint64_t v154;
  char v155;
  unsigned int v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  void *v161;
  char v162;
  unsigned int v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  char v167;
  unsigned int v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  void *v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  unint64_t v183;
  char v184;
  char v185;
  unsigned int v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  char v190;
  unsigned int v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  char v195;
  char v196;
  unsigned int v197;
  uint64_t v198;
  unint64_t v199;
  char v200;
  char v201;
  unsigned int v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  char v206;
  char v207;
  unsigned int v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  char v212;
  uint64_t v213;
  uint64_t v214;
  BOOL v215;
  uint64_t v216;
  int v217;
  uint64_t v218;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 172) |= 8uLL;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_264;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_266;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_264:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_266:
          v213 = 32;
          goto LABEL_402;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_QWORD *)(a1 + 172) |= 0x10uLL;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_270;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_270:
          v19 = -(v26 & 1) ^ (v26 >> 1);
          v213 = 40;
          goto LABEL_402;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x1000000uLL;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_274;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_274:
          v214 = 156;
          goto LABEL_392;
        case 4u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_QWORD *)(a1 + 172) |= 0x20uLL;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  v38 = 0;
                  goto LABEL_278;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v38 = 0;
LABEL_278:
          v19 = -(v38 & 1) ^ (v38 >> 1);
          v213 = 48;
          goto LABEL_402;
        case 5u:
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_QWORD *)(a1 + 172) |= 0x100000000uLL;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  v44 = 0;
                  goto LABEL_282;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v44 = 0;
LABEL_282:
          v215 = v44 != 0;
          v216 = 167;
          goto LABEL_387;
        case 6u:
          v48 = 0;
          v49 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x200uLL;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v32 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_286;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_286:
          v214 = 68;
          goto LABEL_392;
        case 7u:
          v53 = 0;
          v54 = 0;
          v55 = 0;
          *(_QWORD *)(a1 + 172) |= 0x4000000uLL;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                v14 = v54++ >= 9;
                if (v14)
                {
                  v55 = 0;
                  goto LABEL_290;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v55 = 0;
LABEL_290:
          v215 = v55 != 0;
          v216 = 161;
          goto LABEL_387;
        case 8u:
          v59 = 0;
          v60 = 0;
          v61 = 0;
          *(_QWORD *)(a1 + 172) |= 0x80000000uLL;
          while (2)
          {
            v62 = *v3;
            v63 = *(_QWORD *)(a2 + v62);
            if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
              *(_QWORD *)(a2 + v62) = v63 + 1;
              v61 |= (unint64_t)(v64 & 0x7F) << v59;
              if (v64 < 0)
              {
                v59 += 7;
                v14 = v60++ >= 9;
                if (v14)
                {
                  v61 = 0;
                  goto LABEL_294;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v61 = 0;
LABEL_294:
          v215 = v61 != 0;
          v216 = 166;
          goto LABEL_387;
        case 9u:
          v65 = 0;
          v66 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x800000uLL;
          while (2)
          {
            v67 = *v3;
            v68 = *(_QWORD *)(a2 + v67);
            if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
              *(_QWORD *)(a2 + v67) = v68 + 1;
              v32 |= (unint64_t)(v69 & 0x7F) << v65;
              if (v69 < 0)
              {
                v65 += 7;
                v14 = v66++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_298;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_298:
          v214 = 152;
          goto LABEL_392;
        case 0xAu:
          v70 = 0;
          v71 = 0;
          v72 = 0;
          *(_QWORD *)(a1 + 172) |= 0x800uLL;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
              *(_QWORD *)(a2 + v73) = v74 + 1;
              v72 |= (unint64_t)(v75 & 0x7F) << v70;
              if (v75 < 0)
              {
                v70 += 7;
                v14 = v71++ >= 9;
                if (v14)
                {
                  LODWORD(v72) = 0;
                  goto LABEL_302;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v72) = 0;
LABEL_302:
          v217 = -(v72 & 1) ^ ((int)v72 >> 1);
          v218 = 92;
          goto LABEL_397;
        case 0xBu:
          v76 = 0;
          v77 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x2000uLL;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
              *(_QWORD *)(a2 + v78) = v79 + 1;
              v32 |= (unint64_t)(v80 & 0x7F) << v76;
              if (v80 < 0)
              {
                v76 += 7;
                v14 = v77++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_306;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_306:
          v214 = 100;
          goto LABEL_392;
        case 0xCu:
          v81 = 0;
          v82 = 0;
          v83 = 0;
          *(_QWORD *)(a1 + 172) |= 0x40000000uLL;
          while (2)
          {
            v84 = *v3;
            v85 = *(_QWORD *)(a2 + v84);
            if (v85 == -1 || v85 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v85);
              *(_QWORD *)(a2 + v84) = v85 + 1;
              v83 |= (unint64_t)(v86 & 0x7F) << v81;
              if (v86 < 0)
              {
                v81 += 7;
                v14 = v82++ >= 9;
                if (v14)
                {
                  v83 = 0;
                  goto LABEL_310;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v83 = 0;
LABEL_310:
          v215 = v83 != 0;
          v216 = 165;
          goto LABEL_387;
        case 0xDu:
          v87 = 0;
          v88 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x100uLL;
          while (2)
          {
            v89 = *v3;
            v90 = *(_QWORD *)(a2 + v89);
            if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
              *(_QWORD *)(a2 + v89) = v90 + 1;
              v32 |= (unint64_t)(v91 & 0x7F) << v87;
              if (v91 < 0)
              {
                v87 += 7;
                v14 = v88++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_314;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_314:
          v214 = 64;
          goto LABEL_392;
        case 0xEu:
          v92 = 0;
          v93 = 0;
          v94 = 0;
          *(_QWORD *)(a1 + 172) |= 0x4000uLL;
          while (2)
          {
            v95 = *v3;
            v96 = *(_QWORD *)(a2 + v95);
            if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v96);
              *(_QWORD *)(a2 + v95) = v96 + 1;
              v94 |= (unint64_t)(v97 & 0x7F) << v92;
              if (v97 < 0)
              {
                v92 += 7;
                v14 = v93++ >= 9;
                if (v14)
                {
                  LODWORD(v94) = 0;
                  goto LABEL_318;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v94) = 0;
LABEL_318:
          v217 = -(v94 & 1) ^ ((int)v94 >> 1);
          v218 = 104;
          goto LABEL_397;
        case 0xFu:
          v98 = 0;
          v99 = 0;
          v100 = 0;
          *(_QWORD *)(a1 + 172) |= 0x1000uLL;
          while (2)
          {
            v101 = *v3;
            v102 = *(_QWORD *)(a2 + v101);
            if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v102);
              *(_QWORD *)(a2 + v101) = v102 + 1;
              v100 |= (unint64_t)(v103 & 0x7F) << v98;
              if (v103 < 0)
              {
                v98 += 7;
                v14 = v99++ >= 9;
                if (v14)
                {
                  LODWORD(v100) = 0;
                  goto LABEL_322;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v100) = 0;
LABEL_322:
          v217 = -(v100 & 1) ^ ((int)v100 >> 1);
          v218 = 96;
          goto LABEL_397;
        case 0x10u:
          v104 = 0;
          v105 = 0;
          v106 = 0;
          *(_QWORD *)(a1 + 172) |= 2uLL;
          while (2)
          {
            v107 = *v3;
            v108 = *(_QWORD *)(a2 + v107);
            if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
              *(_QWORD *)(a2 + v107) = v108 + 1;
              v106 |= (unint64_t)(v109 & 0x7F) << v104;
              if (v109 < 0)
              {
                v104 += 7;
                v14 = v105++ >= 9;
                if (v14)
                {
                  v106 = 0;
                  goto LABEL_326;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v106 = 0;
LABEL_326:
          v19 = -(v106 & 1) ^ (v106 >> 1);
          v213 = 16;
          goto LABEL_402;
        case 0x11u:
          v110 = 0;
          v111 = 0;
          v112 = 0;
          *(_QWORD *)(a1 + 172) |= 1uLL;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
              *(_QWORD *)(a2 + v113) = v114 + 1;
              v112 |= (unint64_t)(v115 & 0x7F) << v110;
              if (v115 < 0)
              {
                v110 += 7;
                v14 = v111++ >= 9;
                if (v14)
                {
                  v112 = 0;
                  goto LABEL_330;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v112 = 0;
LABEL_330:
          v19 = -(v112 & 1) ^ (v112 >> 1);
          v213 = 8;
          goto LABEL_402;
        case 0x12u:
          v116 = 0;
          v117 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x400000uLL;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
              *(_QWORD *)(a2 + v118) = v119 + 1;
              v32 |= (unint64_t)(v120 & 0x7F) << v116;
              if (v120 < 0)
              {
                v116 += 7;
                v14 = v117++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_334;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_334:
          v214 = 136;
          goto LABEL_392;
        case 0x13u:
          v121 = 0;
          v122 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x20000uLL;
          while (2)
          {
            v123 = *v3;
            v124 = *(_QWORD *)(a2 + v123);
            if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
              *(_QWORD *)(a2 + v123) = v124 + 1;
              v32 |= (unint64_t)(v125 & 0x7F) << v121;
              if (v125 < 0)
              {
                v121 += 7;
                v14 = v122++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_338;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_338:
          v214 = 116;
          goto LABEL_392;
        case 0x14u:
          v126 = 0;
          v127 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x8000uLL;
          while (2)
          {
            v128 = *v3;
            v129 = *(_QWORD *)(a2 + v128);
            if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
              *(_QWORD *)(a2 + v128) = v129 + 1;
              v32 |= (unint64_t)(v130 & 0x7F) << v126;
              if (v130 < 0)
              {
                v126 += 7;
                v14 = v127++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_342;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_342:
          v214 = 108;
          goto LABEL_392;
        case 0x15u:
          v131 = 0;
          v132 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x40000uLL;
          while (2)
          {
            v133 = *v3;
            v134 = *(_QWORD *)(a2 + v133);
            if (v134 == -1 || v134 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v135 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
              *(_QWORD *)(a2 + v133) = v134 + 1;
              v32 |= (unint64_t)(v135 & 0x7F) << v131;
              if (v135 < 0)
              {
                v131 += 7;
                v14 = v132++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_346;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_346:
          v214 = 120;
          goto LABEL_392;
        case 0x16u:
          v136 = 0;
          v137 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x10000uLL;
          while (2)
          {
            v138 = *v3;
            v139 = *(_QWORD *)(a2 + v138);
            if (v139 == -1 || v139 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
              *(_QWORD *)(a2 + v138) = v139 + 1;
              v32 |= (unint64_t)(v140 & 0x7F) << v136;
              if (v140 < 0)
              {
                v136 += 7;
                v14 = v137++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_350;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_350:
          v214 = 112;
          goto LABEL_392;
        case 0x17u:
          v141 = 0;
          v142 = 0;
          v143 = 0;
          *(_QWORD *)(a1 + 172) |= 0x8000000uLL;
          while (2)
          {
            v144 = *v3;
            v145 = *(_QWORD *)(a2 + v144);
            if (v145 == -1 || v145 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v146 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v145);
              *(_QWORD *)(a2 + v144) = v145 + 1;
              v143 |= (unint64_t)(v146 & 0x7F) << v141;
              if (v146 < 0)
              {
                v141 += 7;
                v14 = v142++ >= 9;
                if (v14)
                {
                  v143 = 0;
                  goto LABEL_354;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v143 = 0;
LABEL_354:
          v215 = v143 != 0;
          v216 = 162;
          goto LABEL_387;
        case 0x18u:
          v147 = 0;
          v148 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x400uLL;
          while (2)
          {
            v149 = *v3;
            v150 = *(_QWORD *)(a2 + v149);
            if (v150 == -1 || v150 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v151 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v150);
              *(_QWORD *)(a2 + v149) = v150 + 1;
              v32 |= (unint64_t)(v151 & 0x7F) << v147;
              if (v151 < 0)
              {
                v147 += 7;
                v14 = v148++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_358;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_358:
          v214 = 88;
          goto LABEL_392;
        case 0x19u:
          String = (void *)PBReaderReadString();

          v153 = String;
          v154 = 144;
          goto LABEL_213;
        case 0x1Au:
          v155 = 0;
          v156 = 0;
          v157 = 0;
          *(_QWORD *)(a1 + 172) |= 0x20000000uLL;
          while (2)
          {
            v158 = *v3;
            v159 = *(_QWORD *)(a2 + v158);
            if (v159 == -1 || v159 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v160 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v159);
              *(_QWORD *)(a2 + v158) = v159 + 1;
              v157 |= (unint64_t)(v160 & 0x7F) << v155;
              if (v160 < 0)
              {
                v155 += 7;
                v14 = v156++ >= 9;
                if (v14)
                {
                  v157 = 0;
                  goto LABEL_362;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v157 = 0;
LABEL_362:
          v215 = v157 != 0;
          v216 = 164;
          goto LABEL_387;
        case 0x1Bu:
          v161 = (void *)PBReaderReadString();

          v153 = v161;
          v154 = 80;
          goto LABEL_213;
        case 0x1Cu:
          v162 = 0;
          v163 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x200000uLL;
          while (2)
          {
            v164 = *v3;
            v165 = *(_QWORD *)(a2 + v164);
            if (v165 == -1 || v165 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v166 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v165);
              *(_QWORD *)(a2 + v164) = v165 + 1;
              v32 |= (unint64_t)(v166 & 0x7F) << v162;
              if (v166 < 0)
              {
                v162 += 7;
                v14 = v163++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_366;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_366:
          v214 = 132;
          goto LABEL_392;
        case 0x1Du:
          v167 = 0;
          v168 = 0;
          v169 = 0;
          *(_QWORD *)(a1 + 172) |= 0x10000000uLL;
          while (2)
          {
            v170 = *v3;
            v171 = *(_QWORD *)(a2 + v170);
            if (v171 == -1 || v171 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v172 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v171);
              *(_QWORD *)(a2 + v170) = v171 + 1;
              v169 |= (unint64_t)(v172 & 0x7F) << v167;
              if (v172 < 0)
              {
                v167 += 7;
                v14 = v168++ >= 9;
                if (v14)
                {
                  v169 = 0;
                  goto LABEL_370;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v169 = 0;
LABEL_370:
          v215 = v169 != 0;
          v216 = 163;
          goto LABEL_387;
        case 0x1Eu:
          v173 = (void *)PBReaderReadString();

          v153 = v173;
          v154 = 72;
LABEL_213:
          *(_QWORD *)(a1 + v154) = v153;
          continue;
        case 0x1Fu:
          v174 = 0;
          v175 = 0;
          v176 = 0;
          *(_QWORD *)(a1 + 172) |= 0x2000000uLL;
          while (2)
          {
            v177 = *v3;
            v178 = *(_QWORD *)(a2 + v177);
            if (v178 == -1 || v178 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v179 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v178);
              *(_QWORD *)(a2 + v177) = v178 + 1;
              v176 |= (unint64_t)(v179 & 0x7F) << v174;
              if (v179 < 0)
              {
                v174 += 7;
                v14 = v175++ >= 9;
                if (v14)
                {
                  v176 = 0;
                  goto LABEL_374;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v176 = 0;
LABEL_374:
          v215 = v176 != 0;
          v216 = 160;
          goto LABEL_387;
        case 0x20u:
          v180 = 0;
          v181 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x80uLL;
          while (2)
          {
            v182 = *v3;
            v183 = *(_QWORD *)(a2 + v182);
            if (v183 == -1 || v183 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v184 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v183);
              *(_QWORD *)(a2 + v182) = v183 + 1;
              v32 |= (unint64_t)(v184 & 0x7F) << v180;
              if (v184 < 0)
              {
                v180 += 7;
                v14 = v181++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_378;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_378:
          v214 = 60;
          goto LABEL_392;
        case 0x21u:
          v185 = 0;
          v186 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x40uLL;
          while (2)
          {
            v187 = *v3;
            v188 = *(_QWORD *)(a2 + v187);
            if (v188 == -1 || v188 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v189 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v188);
              *(_QWORD *)(a2 + v187) = v188 + 1;
              v32 |= (unint64_t)(v189 & 0x7F) << v185;
              if (v189 < 0)
              {
                v185 += 7;
                v14 = v186++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_382;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_382:
          v214 = 56;
          goto LABEL_392;
        case 0x22u:
          v190 = 0;
          v191 = 0;
          v192 = 0;
          *(_QWORD *)(a1 + 172) |= 0x200000000uLL;
          while (2)
          {
            v193 = *v3;
            v194 = *(_QWORD *)(a2 + v193);
            if (v194 == -1 || v194 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v195 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v194);
              *(_QWORD *)(a2 + v193) = v194 + 1;
              v192 |= (unint64_t)(v195 & 0x7F) << v190;
              if (v195 < 0)
              {
                v190 += 7;
                v14 = v191++ >= 9;
                if (v14)
                {
                  v192 = 0;
                  goto LABEL_386;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v192 = 0;
LABEL_386:
          v215 = v192 != 0;
          v216 = 168;
LABEL_387:
          *(_BYTE *)(a1 + v216) = v215;
          continue;
        case 0x23u:
          v196 = 0;
          v197 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 172) |= 0x80000uLL;
          while (2)
          {
            v198 = *v3;
            v199 = *(_QWORD *)(a2 + v198);
            if (v199 == -1 || v199 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v200 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v199);
              *(_QWORD *)(a2 + v198) = v199 + 1;
              v32 |= (unint64_t)(v200 & 0x7F) << v196;
              if (v200 < 0)
              {
                v196 += 7;
                v14 = v197++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_391;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_391:
          v214 = 124;
LABEL_392:
          *(_DWORD *)(a1 + v214) = v32;
          continue;
        case 0x24u:
          v201 = 0;
          v202 = 0;
          v203 = 0;
          *(_QWORD *)(a1 + 172) |= 0x100000uLL;
          while (2)
          {
            v204 = *v3;
            v205 = *(_QWORD *)(a2 + v204);
            if (v205 == -1 || v205 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v206 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v205);
              *(_QWORD *)(a2 + v204) = v205 + 1;
              v203 |= (unint64_t)(v206 & 0x7F) << v201;
              if (v206 < 0)
              {
                v201 += 7;
                v14 = v202++ >= 9;
                if (v14)
                {
                  LODWORD(v203) = 0;
                  goto LABEL_396;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v203) = 0;
LABEL_396:
          v217 = -(v203 & 1) ^ ((int)v203 >> 1);
          v218 = 128;
LABEL_397:
          *(_DWORD *)(a1 + v218) = v217;
          continue;
        case 0x25u:
          v207 = 0;
          v208 = 0;
          v209 = 0;
          *(_QWORD *)(a1 + 172) |= 4uLL;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v210 = *v3;
        v211 = *(_QWORD *)(a2 + v210);
        if (v211 == -1 || v211 >= *(_QWORD *)(a2 + *v4))
          break;
        v212 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v211);
        *(_QWORD *)(a2 + v210) = v211 + 1;
        v209 |= (unint64_t)(v212 & 0x7F) << v207;
        if ((v212 & 0x80) == 0)
          goto LABEL_399;
        v207 += 7;
        v14 = v208++ >= 9;
        if (v14)
        {
          v209 = 0;
          goto LABEL_401;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_399:
      if (*(_BYTE *)(a2 + *v5))
        v209 = 0;
LABEL_401:
      v19 = -(v209 & 1) ^ (v209 >> 1);
      v213 = 24;
LABEL_402:
      *(_QWORD *)(a1 + v213) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDWRMWiFiCell5GDataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  void *String;
  char v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  char v139;
  unsigned int v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  char v154;
  unsigned int v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  char v159;
  unsigned int v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  char v164;
  unsigned int v165;
  uint64_t v166;
  unint64_t v167;
  char v168;
  char v169;
  unsigned int v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  char v179;
  unsigned int v180;
  uint64_t v181;
  unint64_t v182;
  char v183;
  char v184;
  unsigned int v185;
  uint64_t v186;
  unint64_t v187;
  char v188;
  char v189;
  unsigned int v190;
  uint64_t v191;
  unint64_t v192;
  char v193;
  char v194;
  unsigned int v195;
  uint64_t v196;
  unint64_t v197;
  char v198;
  char v199;
  unsigned int v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  char v205;
  unsigned int v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  char v210;
  unsigned int v211;
  uint64_t v212;
  unint64_t v213;
  char v214;
  char v215;
  unsigned int v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  char v220;
  char v221;
  unsigned int v222;
  uint64_t v223;
  unint64_t v224;
  char v225;
  char v226;
  unsigned int v227;
  uint64_t v228;
  unint64_t v229;
  char v230;
  char v231;
  unsigned int v232;
  uint64_t v233;
  unint64_t v234;
  char v235;
  char v236;
  unsigned int v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  char v241;
  unsigned int v242;
  uint64_t v243;
  unint64_t v244;
  char v245;
  char v246;
  unsigned int v247;
  uint64_t v248;
  unint64_t v249;
  char v250;
  char v251;
  unsigned int v252;
  uint64_t v253;
  unint64_t v254;
  char v255;
  char v256;
  unsigned int v257;
  uint64_t v258;
  unint64_t v259;
  char v260;
  char v261;
  unsigned int v262;
  uint64_t v263;
  unint64_t v264;
  char v265;
  char v266;
  unsigned int v267;
  uint64_t v268;
  unint64_t v269;
  char v270;
  char v271;
  unsigned int v272;
  uint64_t v273;
  unint64_t v274;
  char v275;
  char v276;
  unsigned int v277;
  uint64_t v278;
  unint64_t v279;
  char v280;
  char v281;
  unsigned int v282;
  uint64_t v283;
  unint64_t v284;
  char v285;
  int v286;
  uint64_t v287;
  uint64_t v288;
  BOOL v289;
  uint64_t v290;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_QWORD *)(a1 + 224) |= 1uLL;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_380;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_382;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_380:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_382:
          *(_QWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_QWORD *)(a1 + 224) |= 0x8000000000uLL;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_386;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_386:
          v286 = -(v26 & 1) ^ ((int)v26 >> 1);
          v287 = 180;
          goto LABEL_463;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x20000000000uLL;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_390;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_390:
          v288 = 188;
          goto LABEL_585;
        case 4u:
          v36 = 0;
          v37 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x80000000000uLL;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v32 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_394;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_394:
          v288 = 196;
          goto LABEL_585;
        case 5u:
          v41 = 0;
          v42 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x10000000000uLL;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v32 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_398;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_398:
          v288 = 184;
          goto LABEL_585;
        case 6u:
          v46 = 0;
          v47 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x400000000uLL;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
              *(_QWORD *)(a2 + v48) = v49 + 1;
              v32 |= (unint64_t)(v50 & 0x7F) << v46;
              if (v50 < 0)
              {
                v46 += 7;
                v14 = v47++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_402;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_402:
          v288 = 160;
          goto LABEL_585;
        case 7u:
          v51 = 0;
          v52 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x1000000000uLL;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
              *(_QWORD *)(a2 + v53) = v54 + 1;
              v32 |= (unint64_t)(v55 & 0x7F) << v51;
              if (v55 < 0)
              {
                v51 += 7;
                v14 = v52++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_406;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_406:
          v288 = 168;
          goto LABEL_585;
        case 8u:
          v56 = 0;
          v57 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x40000000000uLL;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
              *(_QWORD *)(a2 + v58) = v59 + 1;
              v32 |= (unint64_t)(v60 & 0x7F) << v56;
              if (v60 < 0)
              {
                v56 += 7;
                v14 = v57++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_410;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_410:
          v288 = 192;
          goto LABEL_585;
        case 9u:
          v61 = 0;
          v62 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x200000000uLL;
          while (2)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
              *(_QWORD *)(a2 + v63) = v64 + 1;
              v32 |= (unint64_t)(v65 & 0x7F) << v61;
              if (v65 < 0)
              {
                v61 += 7;
                v14 = v62++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_414;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_414:
          v288 = 156;
          goto LABEL_585;
        case 0xAu:
          v66 = 0;
          v67 = 0;
          v68 = 0;
          *(_QWORD *)(a1 + 224) |= 0x800000000000uLL;
          while (2)
          {
            v69 = *v3;
            v70 = *(_QWORD *)(a2 + v69);
            if (v70 == -1 || v70 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v70);
              *(_QWORD *)(a2 + v69) = v70 + 1;
              v68 |= (unint64_t)(v71 & 0x7F) << v66;
              if (v71 < 0)
              {
                v66 += 7;
                v14 = v67++ >= 9;
                if (v14)
                {
                  LODWORD(v68) = 0;
                  goto LABEL_418;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v68) = 0;
LABEL_418:
          v286 = -(v68 & 1) ^ ((int)v68 >> 1);
          v287 = 212;
          goto LABEL_463;
        case 0xBu:
          v72 = 0;
          v73 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x200000000000uLL;
          while (2)
          {
            v74 = *v3;
            v75 = *(_QWORD *)(a2 + v74);
            if (v75 == -1 || v75 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v76 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v75);
              *(_QWORD *)(a2 + v74) = v75 + 1;
              v32 |= (unint64_t)(v76 & 0x7F) << v72;
              if (v76 < 0)
              {
                v72 += 7;
                v14 = v73++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_422;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_422:
          v288 = 204;
          goto LABEL_585;
        case 0xCu:
          v77 = 0;
          v78 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x400000000000uLL;
          while (2)
          {
            v79 = *v3;
            v80 = *(_QWORD *)(a2 + v79);
            if (v80 == -1 || v80 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v80);
              *(_QWORD *)(a2 + v79) = v80 + 1;
              v32 |= (unint64_t)(v81 & 0x7F) << v77;
              if (v81 < 0)
              {
                v77 += 7;
                v14 = v78++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_426;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_426:
          v288 = 208;
          goto LABEL_585;
        case 0xDu:
          v82 = 0;
          v83 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x100000000000uLL;
          while (2)
          {
            v84 = *v3;
            v85 = *(_QWORD *)(a2 + v84);
            if (v85 == -1 || v85 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v85);
              *(_QWORD *)(a2 + v84) = v85 + 1;
              v32 |= (unint64_t)(v86 & 0x7F) << v82;
              if (v86 < 0)
              {
                v82 += 7;
                v14 = v83++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_430;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_430:
          v288 = 200;
          goto LABEL_585;
        case 0xEu:
          v87 = 0;
          v88 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x800000000uLL;
          while (2)
          {
            v89 = *v3;
            v90 = *(_QWORD *)(a2 + v89);
            if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
              *(_QWORD *)(a2 + v89) = v90 + 1;
              v32 |= (unint64_t)(v91 & 0x7F) << v87;
              if (v91 < 0)
              {
                v87 += 7;
                v14 = v88++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_434;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_434:
          v288 = 164;
          goto LABEL_585;
        case 0xFu:
          v92 = 0;
          v93 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x1000000000000uLL;
          while (2)
          {
            v94 = *v3;
            v95 = *(_QWORD *)(a2 + v94);
            if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
              *(_QWORD *)(a2 + v94) = v95 + 1;
              v32 |= (unint64_t)(v96 & 0x7F) << v92;
              if (v96 < 0)
              {
                v92 += 7;
                v14 = v93++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_438;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_438:
          v288 = 216;
          goto LABEL_585;
        case 0x10u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 88) = String;
          continue;
        case 0x11u:
          v98 = 0;
          v99 = 0;
          v100 = 0;
          *(_QWORD *)(a1 + 224) |= 0x80uLL;
          while (2)
          {
            v101 = *v3;
            v102 = *(_QWORD *)(a2 + v101);
            if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v102);
              *(_QWORD *)(a2 + v101) = v102 + 1;
              v100 |= (unint64_t)(v103 & 0x7F) << v98;
              if (v103 < 0)
              {
                v98 += 7;
                v14 = v99++ >= 9;
                if (v14)
                {
                  LODWORD(v100) = 0;
                  goto LABEL_442;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v100) = 0;
LABEL_442:
          v286 = -(v100 & 1) ^ ((int)v100 >> 1);
          v287 = 40;
          goto LABEL_463;
        case 0x12u:
          v104 = 0;
          v105 = 0;
          v106 = 0;
          *(_QWORD *)(a1 + 224) |= 0x200uLL;
          while (2)
          {
            v107 = *v3;
            v108 = *(_QWORD *)(a2 + v107);
            if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
              *(_QWORD *)(a2 + v107) = v108 + 1;
              v106 |= (unint64_t)(v109 & 0x7F) << v104;
              if (v109 < 0)
              {
                v104 += 7;
                v14 = v105++ >= 9;
                if (v14)
                {
                  LODWORD(v106) = 0;
                  goto LABEL_446;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v106) = 0;
LABEL_446:
          v286 = -(v106 & 1) ^ ((int)v106 >> 1);
          v287 = 48;
          goto LABEL_463;
        case 0x13u:
          v110 = 0;
          v111 = 0;
          v112 = 0;
          *(_QWORD *)(a1 + 224) |= 0x100uLL;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
              *(_QWORD *)(a2 + v113) = v114 + 1;
              v112 |= (unint64_t)(v115 & 0x7F) << v110;
              if (v115 < 0)
              {
                v110 += 7;
                v14 = v111++ >= 9;
                if (v14)
                {
                  LODWORD(v112) = 0;
                  goto LABEL_450;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v112) = 0;
LABEL_450:
          v286 = -(v112 & 1) ^ ((int)v112 >> 1);
          v287 = 44;
          goto LABEL_463;
        case 0x14u:
          v116 = 0;
          v117 = 0;
          v118 = 0;
          *(_QWORD *)(a1 + 224) |= 0x4000uLL;
          while (2)
          {
            v119 = *v3;
            v120 = *(_QWORD *)(a2 + v119);
            if (v120 == -1 || v120 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v120);
              *(_QWORD *)(a2 + v119) = v120 + 1;
              v118 |= (unint64_t)(v121 & 0x7F) << v116;
              if (v121 < 0)
              {
                v116 += 7;
                v14 = v117++ >= 9;
                if (v14)
                {
                  LODWORD(v118) = 0;
                  goto LABEL_454;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v118) = 0;
LABEL_454:
          v286 = -(v118 & 1) ^ ((int)v118 >> 1);
          v287 = 68;
          goto LABEL_463;
        case 0x15u:
          v122 = 0;
          v123 = 0;
          v124 = 0;
          *(_QWORD *)(a1 + 224) |= 0x8000uLL;
          while (2)
          {
            v125 = *v3;
            v126 = *(_QWORD *)(a2 + v125);
            if (v126 == -1 || v126 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v127 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v126);
              *(_QWORD *)(a2 + v125) = v126 + 1;
              v124 |= (unint64_t)(v127 & 0x7F) << v122;
              if (v127 < 0)
              {
                v122 += 7;
                v14 = v123++ >= 9;
                if (v14)
                {
                  LODWORD(v124) = 0;
                  goto LABEL_458;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v124) = 0;
LABEL_458:
          v286 = -(v124 & 1) ^ ((int)v124 >> 1);
          v287 = 72;
          goto LABEL_463;
        case 0x16u:
          v128 = 0;
          v129 = 0;
          v130 = 0;
          *(_QWORD *)(a1 + 224) |= 0x10000uLL;
          while (2)
          {
            v131 = *v3;
            v132 = *(_QWORD *)(a2 + v131);
            if (v132 == -1 || v132 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v132);
              *(_QWORD *)(a2 + v131) = v132 + 1;
              v130 |= (unint64_t)(v133 & 0x7F) << v128;
              if (v133 < 0)
              {
                v128 += 7;
                v14 = v129++ >= 9;
                if (v14)
                {
                  LODWORD(v130) = 0;
                  goto LABEL_462;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v130) = 0;
LABEL_462:
          v286 = -(v130 & 1) ^ ((int)v130 >> 1);
          v287 = 76;
LABEL_463:
          *(_DWORD *)(a1 + v287) = v286;
          continue;
        case 0x17u:
          v134 = 0;
          v135 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 4uLL;
          while (2)
          {
            v136 = *v3;
            v137 = *(_QWORD *)(a2 + v136);
            if (v137 == -1 || v137 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v138 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v137);
              *(_QWORD *)(a2 + v136) = v137 + 1;
              v32 |= (unint64_t)(v138 & 0x7F) << v134;
              if (v138 < 0)
              {
                v134 += 7;
                v14 = v135++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_467;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_467:
          v288 = 20;
          goto LABEL_585;
        case 0x18u:
          v139 = 0;
          v140 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x40000uLL;
          while (2)
          {
            v141 = *v3;
            v142 = *(_QWORD *)(a2 + v141);
            if (v142 == -1 || v142 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v142);
              *(_QWORD *)(a2 + v141) = v142 + 1;
              v32 |= (unint64_t)(v143 & 0x7F) << v139;
              if (v143 < 0)
              {
                v139 += 7;
                v14 = v140++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_471;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_471:
          v288 = 96;
          goto LABEL_585;
        case 0x19u:
          v144 = 0;
          v145 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x2000uLL;
          while (2)
          {
            v146 = *v3;
            v147 = *(_QWORD *)(a2 + v146);
            if (v147 == -1 || v147 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v148 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v147);
              *(_QWORD *)(a2 + v146) = v147 + 1;
              v32 |= (unint64_t)(v148 & 0x7F) << v144;
              if (v148 < 0)
              {
                v144 += 7;
                v14 = v145++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_475;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_475:
          v288 = 64;
          goto LABEL_585;
        case 0x1Au:
          v149 = 0;
          v150 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x40uLL;
          while (2)
          {
            v151 = *v3;
            v152 = *(_QWORD *)(a2 + v151);
            if (v152 == -1 || v152 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v152);
              *(_QWORD *)(a2 + v151) = v152 + 1;
              v32 |= (unint64_t)(v153 & 0x7F) << v149;
              if (v153 < 0)
              {
                v149 += 7;
                v14 = v150++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_479;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_479:
          v288 = 36;
          goto LABEL_585;
        case 0x1Bu:
          v154 = 0;
          v155 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x1000uLL;
          while (2)
          {
            v156 = *v3;
            v157 = *(_QWORD *)(a2 + v156);
            if (v157 == -1 || v157 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v158 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v157);
              *(_QWORD *)(a2 + v156) = v157 + 1;
              v32 |= (unint64_t)(v158 & 0x7F) << v154;
              if (v158 < 0)
              {
                v154 += 7;
                v14 = v155++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_483;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_483:
          v288 = 60;
          goto LABEL_585;
        case 0x1Cu:
          v159 = 0;
          v160 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x20000uLL;
          while (2)
          {
            v161 = *v3;
            v162 = *(_QWORD *)(a2 + v161);
            if (v162 == -1 || v162 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v163 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v162);
              *(_QWORD *)(a2 + v161) = v162 + 1;
              v32 |= (unint64_t)(v163 & 0x7F) << v159;
              if (v163 < 0)
              {
                v159 += 7;
                v14 = v160++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_487;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_487:
          v288 = 80;
          goto LABEL_585;
        case 0x1Du:
          v164 = 0;
          v165 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 8uLL;
          while (2)
          {
            v166 = *v3;
            v167 = *(_QWORD *)(a2 + v166);
            if (v167 == -1 || v167 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v168 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v167);
              *(_QWORD *)(a2 + v166) = v167 + 1;
              v32 |= (unint64_t)(v168 & 0x7F) << v164;
              if (v168 < 0)
              {
                v164 += 7;
                v14 = v165++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_491;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_491:
          v288 = 24;
          goto LABEL_585;
        case 0x1Eu:
          v169 = 0;
          v170 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x100000uLL;
          while (2)
          {
            v171 = *v3;
            v172 = *(_QWORD *)(a2 + v171);
            if (v172 == -1 || v172 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v173 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v172);
              *(_QWORD *)(a2 + v171) = v172 + 1;
              v32 |= (unint64_t)(v173 & 0x7F) << v169;
              if (v173 < 0)
              {
                v169 += 7;
                v14 = v170++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_495;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_495:
          v288 = 104;
          goto LABEL_585;
        case 0x1Fu:
          v174 = 0;
          v175 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x400uLL;
          while (2)
          {
            v176 = *v3;
            v177 = *(_QWORD *)(a2 + v176);
            if (v177 == -1 || v177 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v178 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v177);
              *(_QWORD *)(a2 + v176) = v177 + 1;
              v32 |= (unint64_t)(v178 & 0x7F) << v174;
              if (v178 < 0)
              {
                v174 += 7;
                v14 = v175++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_499;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_499:
          v288 = 52;
          goto LABEL_585;
        case 0x20u:
          v179 = 0;
          v180 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x800uLL;
          while (2)
          {
            v181 = *v3;
            v182 = *(_QWORD *)(a2 + v181);
            if (v182 == -1 || v182 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v183 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v182);
              *(_QWORD *)(a2 + v181) = v182 + 1;
              v32 |= (unint64_t)(v183 & 0x7F) << v179;
              if (v183 < 0)
              {
                v179 += 7;
                v14 = v180++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_503;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_503:
          v288 = 56;
          goto LABEL_585;
        case 0x21u:
          v184 = 0;
          v185 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x20uLL;
          while (2)
          {
            v186 = *v3;
            v187 = *(_QWORD *)(a2 + v186);
            if (v187 == -1 || v187 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v188 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v187);
              *(_QWORD *)(a2 + v186) = v187 + 1;
              v32 |= (unint64_t)(v188 & 0x7F) << v184;
              if (v188 < 0)
              {
                v184 += 7;
                v14 = v185++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_507;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_507:
          v288 = 32;
          goto LABEL_585;
        case 0x22u:
          v189 = 0;
          v190 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x10uLL;
          while (2)
          {
            v191 = *v3;
            v192 = *(_QWORD *)(a2 + v191);
            if (v192 == -1 || v192 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v193 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v192);
              *(_QWORD *)(a2 + v191) = v192 + 1;
              v32 |= (unint64_t)(v193 & 0x7F) << v189;
              if (v193 < 0)
              {
                v189 += 7;
                v14 = v190++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_511;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_511:
          v288 = 28;
          goto LABEL_585;
        case 0x23u:
          v194 = 0;
          v195 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x8000000uLL;
          while (2)
          {
            v196 = *v3;
            v197 = *(_QWORD *)(a2 + v196);
            if (v197 == -1 || v197 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v198 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v197);
              *(_QWORD *)(a2 + v196) = v197 + 1;
              v32 |= (unint64_t)(v198 & 0x7F) << v194;
              if (v198 < 0)
              {
                v194 += 7;
                v14 = v195++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_515;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_515:
          v288 = 132;
          goto LABEL_585;
        case 0x24u:
          v199 = 0;
          v200 = 0;
          v201 = 0;
          *(_QWORD *)(a1 + 224) |= 0x2000000000000uLL;
          while (2)
          {
            v202 = *v3;
            v203 = *(_QWORD *)(a2 + v202);
            if (v203 == -1 || v203 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v204 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v203);
              *(_QWORD *)(a2 + v202) = v203 + 1;
              v201 |= (unint64_t)(v204 & 0x7F) << v199;
              if (v204 < 0)
              {
                v199 += 7;
                v14 = v200++ >= 9;
                if (v14)
                {
                  v201 = 0;
                  goto LABEL_519;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v201 = 0;
LABEL_519:
          v289 = v201 != 0;
          v290 = 220;
          goto LABEL_532;
        case 0x25u:
          v205 = 0;
          v206 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x800000uLL;
          while (2)
          {
            v207 = *v3;
            v208 = *(_QWORD *)(a2 + v207);
            if (v208 == -1 || v208 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v209 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v208);
              *(_QWORD *)(a2 + v207) = v208 + 1;
              v32 |= (unint64_t)(v209 & 0x7F) << v205;
              if (v209 < 0)
              {
                v205 += 7;
                v14 = v206++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_523;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_523:
          v288 = 116;
          goto LABEL_585;
        case 0x26u:
          v210 = 0;
          v211 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x1000000uLL;
          while (2)
          {
            v212 = *v3;
            v213 = *(_QWORD *)(a2 + v212);
            if (v213 == -1 || v213 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v214 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v213);
              *(_QWORD *)(a2 + v212) = v213 + 1;
              v32 |= (unint64_t)(v214 & 0x7F) << v210;
              if (v214 < 0)
              {
                v210 += 7;
                v14 = v211++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_527;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_527:
          v288 = 120;
          goto LABEL_585;
        case 0x27u:
          v215 = 0;
          v216 = 0;
          v217 = 0;
          *(_QWORD *)(a1 + 224) |= 0x4000000000000uLL;
          while (2)
          {
            v218 = *v3;
            v219 = *(_QWORD *)(a2 + v218);
            if (v219 == -1 || v219 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v220 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v219);
              *(_QWORD *)(a2 + v218) = v219 + 1;
              v217 |= (unint64_t)(v220 & 0x7F) << v215;
              if (v220 < 0)
              {
                v215 += 7;
                v14 = v216++ >= 9;
                if (v14)
                {
                  v217 = 0;
                  goto LABEL_531;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v217 = 0;
LABEL_531:
          v289 = v217 != 0;
          v290 = 221;
LABEL_532:
          *(_BYTE *)(a1 + v290) = v289;
          continue;
        case 0x28u:
          v221 = 0;
          v222 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x100000000uLL;
          while (2)
          {
            v223 = *v3;
            v224 = *(_QWORD *)(a2 + v223);
            if (v224 == -1 || v224 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v225 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v224);
              *(_QWORD *)(a2 + v223) = v224 + 1;
              v32 |= (unint64_t)(v225 & 0x7F) << v221;
              if (v225 < 0)
              {
                v221 += 7;
                v14 = v222++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_536;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_536:
          v288 = 152;
          goto LABEL_585;
        case 0x29u:
          v226 = 0;
          v227 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x80000000uLL;
          while (2)
          {
            v228 = *v3;
            v229 = *(_QWORD *)(a2 + v228);
            if (v229 == -1 || v229 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v230 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v229);
              *(_QWORD *)(a2 + v228) = v229 + 1;
              v32 |= (unint64_t)(v230 & 0x7F) << v226;
              if (v230 < 0)
              {
                v226 += 7;
                v14 = v227++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_540;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_540:
          v288 = 148;
          goto LABEL_585;
        case 0x2Au:
          v231 = 0;
          v232 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x40000000uLL;
          while (2)
          {
            v233 = *v3;
            v234 = *(_QWORD *)(a2 + v233);
            if (v234 == -1 || v234 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v235 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v234);
              *(_QWORD *)(a2 + v233) = v234 + 1;
              v32 |= (unint64_t)(v235 & 0x7F) << v231;
              if (v235 < 0)
              {
                v231 += 7;
                v14 = v232++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_544;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_544:
          v288 = 144;
          goto LABEL_585;
        case 0x2Bu:
          v236 = 0;
          v237 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x4000000000uLL;
          while (2)
          {
            v238 = *v3;
            v239 = *(_QWORD *)(a2 + v238);
            if (v239 == -1 || v239 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v240 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v239);
              *(_QWORD *)(a2 + v238) = v239 + 1;
              v32 |= (unint64_t)(v240 & 0x7F) << v236;
              if (v240 < 0)
              {
                v236 += 7;
                v14 = v237++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_548;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_548:
          v288 = 176;
          goto LABEL_585;
        case 0x2Cu:
          v241 = 0;
          v242 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x2000000000uLL;
          while (2)
          {
            v243 = *v3;
            v244 = *(_QWORD *)(a2 + v243);
            if (v244 == -1 || v244 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v245 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v244);
              *(_QWORD *)(a2 + v243) = v244 + 1;
              v32 |= (unint64_t)(v245 & 0x7F) << v241;
              if (v245 < 0)
              {
                v241 += 7;
                v14 = v242++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_552;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_552:
          v288 = 172;
          goto LABEL_585;
        case 0x2Du:
          v246 = 0;
          v247 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x400000uLL;
          while (2)
          {
            v248 = *v3;
            v249 = *(_QWORD *)(a2 + v248);
            if (v249 == -1 || v249 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v250 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v249);
              *(_QWORD *)(a2 + v248) = v249 + 1;
              v32 |= (unint64_t)(v250 & 0x7F) << v246;
              if (v250 < 0)
              {
                v246 += 7;
                v14 = v247++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_556;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_556:
          v288 = 112;
          goto LABEL_585;
        case 0x2Eu:
          v251 = 0;
          v252 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x200000uLL;
          while (2)
          {
            v253 = *v3;
            v254 = *(_QWORD *)(a2 + v253);
            if (v254 == -1 || v254 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v255 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v254);
              *(_QWORD *)(a2 + v253) = v254 + 1;
              v32 |= (unint64_t)(v255 & 0x7F) << v251;
              if (v255 < 0)
              {
                v251 += 7;
                v14 = v252++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_560;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_560:
          v288 = 108;
          goto LABEL_585;
        case 0x2Fu:
          v256 = 0;
          v257 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x2000000uLL;
          while (2)
          {
            v258 = *v3;
            v259 = *(_QWORD *)(a2 + v258);
            if (v259 == -1 || v259 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v260 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v259);
              *(_QWORD *)(a2 + v258) = v259 + 1;
              v32 |= (unint64_t)(v260 & 0x7F) << v256;
              if (v260 < 0)
              {
                v256 += 7;
                v14 = v257++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_564;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_564:
          v288 = 124;
          goto LABEL_585;
        case 0x30u:
          v261 = 0;
          v262 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x4000000uLL;
          while (2)
          {
            v263 = *v3;
            v264 = *(_QWORD *)(a2 + v263);
            if (v264 == -1 || v264 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v265 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v264);
              *(_QWORD *)(a2 + v263) = v264 + 1;
              v32 |= (unint64_t)(v265 & 0x7F) << v261;
              if (v265 < 0)
              {
                v261 += 7;
                v14 = v262++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_568;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_568:
          v288 = 128;
          goto LABEL_585;
        case 0x31u:
          v266 = 0;
          v267 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x20000000uLL;
          while (2)
          {
            v268 = *v3;
            v269 = *(_QWORD *)(a2 + v268);
            if (v269 == -1 || v269 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v270 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v269);
              *(_QWORD *)(a2 + v268) = v269 + 1;
              v32 |= (unint64_t)(v270 & 0x7F) << v266;
              if (v270 < 0)
              {
                v266 += 7;
                v14 = v267++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_572;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_572:
          v288 = 140;
          goto LABEL_585;
        case 0x32u:
          v271 = 0;
          v272 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 2uLL;
          while (2)
          {
            v273 = *v3;
            v274 = *(_QWORD *)(a2 + v273);
            if (v274 == -1 || v274 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v275 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v274);
              *(_QWORD *)(a2 + v273) = v274 + 1;
              v32 |= (unint64_t)(v275 & 0x7F) << v271;
              if (v275 < 0)
              {
                v271 += 7;
                v14 = v272++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_576;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_576:
          v288 = 16;
          goto LABEL_585;
        case 0x33u:
          v276 = 0;
          v277 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x80000uLL;
          while (2)
          {
            v278 = *v3;
            v279 = *(_QWORD *)(a2 + v278);
            if (v279 == -1 || v279 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v280 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v279);
              *(_QWORD *)(a2 + v278) = v279 + 1;
              v32 |= (unint64_t)(v280 & 0x7F) << v276;
              if (v280 < 0)
              {
                v276 += 7;
                v14 = v277++ >= 9;
                if (v14)
                {
                  LODWORD(v32) = 0;
                  goto LABEL_580;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v32) = 0;
LABEL_580:
          v288 = 100;
          goto LABEL_585;
        case 0x34u:
          v281 = 0;
          v282 = 0;
          v32 = 0;
          *(_QWORD *)(a1 + 224) |= 0x10000000uLL;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v283 = *v3;
        v284 = *(_QWORD *)(a2 + v283);
        if (v284 == -1 || v284 >= *(_QWORD *)(a2 + *v4))
          break;
        v285 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v284);
        *(_QWORD *)(a2 + v283) = v284 + 1;
        v32 |= (unint64_t)(v285 & 0x7F) << v281;
        if ((v285 & 0x80) == 0)
          goto LABEL_582;
        v281 += 7;
        v14 = v282++ >= 9;
        if (v14)
        {
          LODWORD(v32) = 0;
          goto LABEL_584;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_582:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v32) = 0;
LABEL_584:
      v288 = 136;
LABEL_585:
      *(_DWORD *)(a1 + v288) = v32;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t PBDataWriterPlaceMark()
{
  return MEMORY[0x24BE7AF70]();
}

uint64_t PBDataWriterRecallMark()
{
  return MEMORY[0x24BE7AF78]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x24BE7AF80]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x24BE7AF88]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x24BE7AF90]();
}

uint64_t PBDataWriterWriteFloatField()
{
  return MEMORY[0x24BE7AFA0]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x24BE7AFA8]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x24BE7AFB0]();
}

uint64_t PBDataWriterWriteSint32Field()
{
  return MEMORY[0x24BE7AFC8]();
}

uint64_t PBDataWriterWriteSint64Field()
{
  return MEMORY[0x24BE7AFD0]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x24BE7AFD8]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x24BE7AFE8]();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return MEMORY[0x24BE7AFF0]();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return MEMORY[0x24BE7B008]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x24BE7B018]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x24BE7B028]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x24BE7B030]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x24BE7B038]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x24BE7B048]();
}

uint64_t PBRepeatedInt32Add()
{
  return MEMORY[0x24BE7B0C8]();
}

uint64_t PBRepeatedInt32Clear()
{
  return MEMORY[0x24BE7B0D0]();
}

uint64_t PBRepeatedInt32Copy()
{
  return MEMORY[0x24BE7B0D8]();
}

uint64_t PBRepeatedInt32Hash()
{
  return MEMORY[0x24BE7B0E0]();
}

uint64_t PBRepeatedInt32IsEqual()
{
  return MEMORY[0x24BE7B0E8]();
}

uint64_t PBRepeatedInt32NSArray()
{
  return MEMORY[0x24BE7B0F0]();
}

uint64_t PBRepeatedInt32Set()
{
  return MEMORY[0x24BE7B0F8]();
}

uint64_t PBRepeatedInt64Add()
{
  return MEMORY[0x24BE7B100]();
}

uint64_t PBRepeatedInt64Clear()
{
  return MEMORY[0x24BE7B108]();
}

uint64_t PBRepeatedInt64Copy()
{
  return MEMORY[0x24BE7B110]();
}

uint64_t PBRepeatedInt64Hash()
{
  return MEMORY[0x24BE7B118]();
}

uint64_t PBRepeatedInt64IsEqual()
{
  return MEMORY[0x24BE7B120]();
}

uint64_t PBRepeatedInt64NSArray()
{
  return MEMORY[0x24BE7B128]();
}

uint64_t PBRepeatedInt64Set()
{
  return MEMORY[0x24BE7B130]();
}

uint64_t PBRepeatedUInt32Add()
{
  return MEMORY[0x24BE7B138]();
}

uint64_t PBRepeatedUInt32Clear()
{
  return MEMORY[0x24BE7B148]();
}

uint64_t PBRepeatedUInt32Copy()
{
  return MEMORY[0x24BE7B160]();
}

uint64_t PBRepeatedUInt32Hash()
{
  return MEMORY[0x24BE7B170]();
}

uint64_t PBRepeatedUInt32IsEqual()
{
  return MEMORY[0x24BE7B178]();
}

uint64_t PBRepeatedUInt32NSArray()
{
  return MEMORY[0x24BE7B190]();
}

uint64_t PBRepeatedUInt32Set()
{
  return MEMORY[0x24BE7B198]();
}

uint64_t PBRepeatedUInt64Add()
{
  return MEMORY[0x24BE7B1A8]();
}

uint64_t PBRepeatedUInt64Clear()
{
  return MEMORY[0x24BE7B1B0]();
}

uint64_t PBRepeatedUInt64Copy()
{
  return MEMORY[0x24BE7B1B8]();
}

uint64_t PBRepeatedUInt64Hash()
{
  return MEMORY[0x24BE7B1C0]();
}

uint64_t PBRepeatedUInt64IsEqual()
{
  return MEMORY[0x24BE7B1C8]();
}

uint64_t PBRepeatedUInt64NSArray()
{
  return MEMORY[0x24BE7B1D0]();
}

uint64_t PBRepeatedUInt64Set()
{
  return MEMORY[0x24BE7B1D8]();
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAE3F0](__x, __y);
  return result;
}

float fmodf(float a1, float a2)
{
  float result;

  MEMORY[0x24BDAE3F8](a1, a2);
  return result;
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD3F0](self, _cmd, newValue, offset);
}

