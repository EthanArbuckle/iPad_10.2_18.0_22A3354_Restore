uint64_t awd::metrics::protobuf_ShutdownFile_Location_2eproto(awd::metrics *this)
{
  uint64_t result;

  if (awd::metrics::LocationServicesState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationServicesState::default_instance_ + 8))(awd::metrics::LocationServicesState::default_instance_);
  if (awd::metrics::LocationServicesApproval::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationServicesApproval::default_instance_ + 8))(awd::metrics::LocationServicesApproval::default_instance_);
  if (awd::metrics::LocationUpdateSession::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationUpdateSession::default_instance_ + 8))(awd::metrics::LocationUpdateSession::default_instance_);
  if (awd::metrics::LocationMonitorSession::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMonitorSession::default_instance_ + 8))(awd::metrics::LocationMonitorSession::default_instance_);
  if (awd::metrics::LocationMonitorTrigger::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMonitorTrigger::default_instance_ + 8))(awd::metrics::LocationMonitorTrigger::default_instance_);
  if (awd::metrics::LocationNetworkQueries::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationNetworkQueries::default_instance_ + 8))(awd::metrics::LocationNetworkQueries::default_instance_);
  if (awd::metrics::LocationWifiUsage::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationWifiUsage::default_instance_ + 8))(awd::metrics::LocationWifiUsage::default_instance_);
  if (awd::metrics::LocationEmergencySession::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationEmergencySession::default_instance_ + 8))(awd::metrics::LocationEmergencySession::default_instance_);
  if (awd::metrics::LocationEmergencySessionStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationEmergencySessionStatistics::default_instance_
                                    + 8))(awd::metrics::LocationEmergencySessionStatistics::default_instance_);
  if (awd::metrics::LocationMapMatching::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMapMatching::default_instance_ + 8))(awd::metrics::LocationMapMatching::default_instance_);
  if (awd::metrics::LocationRealTimeHarvest::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationRealTimeHarvest::default_instance_ + 8))(awd::metrics::LocationRealTimeHarvest::default_instance_);
  if (awd::metrics::LocationSecondaryDeviceRequest::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationSecondaryDeviceRequest::default_instance_ + 8))(awd::metrics::LocationSecondaryDeviceRequest::default_instance_);
  if (awd::metrics::CompassSession::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::CompassSession::default_instance_ + 8))(awd::metrics::CompassSession::default_instance_);
  if (awd::metrics::CompassSession_Rotation::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::CompassSession_Rotation::default_instance_ + 8))(awd::metrics::CompassSession_Rotation::default_instance_);
  if (awd::metrics::LocationCompassSaturations::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationCompassSaturations::default_instance_ + 8))(awd::metrics::LocationCompassSaturations::default_instance_);
  if (awd::metrics::MotionState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionState::default_instance_ + 8))(awd::metrics::MotionState::default_instance_);
  if (awd::metrics::MotionTrigger::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionTrigger::default_instance_ + 8))(awd::metrics::MotionTrigger::default_instance_);
  if (awd::metrics::MotionGyroMiniCal::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionGyroMiniCal::default_instance_ + 8))(awd::metrics::MotionGyroMiniCal::default_instance_);
  if (awd::metrics::MotionDropDetection::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionDropDetection::default_instance_ + 8))(awd::metrics::MotionDropDetection::default_instance_);
  if (awd::metrics::MotionPedometerCalibration::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionPedometerCalibration::default_instance_ + 8))(awd::metrics::MotionPedometerCalibration::default_instance_);
  if (awd::metrics::MotionGyroBiasEstimation::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionGyroBiasEstimation::default_instance_ + 8))(awd::metrics::MotionGyroBiasEstimation::default_instance_);
  if (awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_ + 8))(awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_);
  if (awd::metrics::MotionFitnessSession::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionFitnessSession::default_instance_ + 8))(awd::metrics::MotionFitnessSession::default_instance_);
  if (awd::metrics::MotionFitnessAllDay::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionFitnessAllDay::default_instance_ + 8))(awd::metrics::MotionFitnessAllDay::default_instance_);
  if (awd::metrics::MotionPressureTemperature::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionPressureTemperature::default_instance_ + 8))(awd::metrics::MotionPressureTemperature::default_instance_);
  if (awd::metrics::MotionElevationAllDay::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionElevationAllDay::default_instance_ + 8))(awd::metrics::MotionElevationAllDay::default_instance_);
  if (awd::metrics::MotionPressureStats::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionPressureStats::default_instance_ + 8))(awd::metrics::MotionPressureStats::default_instance_);
  if (awd::metrics::MotionNoGPSRunAllDay::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionNoGPSRunAllDay::default_instance_ + 8))(awd::metrics::MotionNoGPSRunAllDay::default_instance_);
  if (awd::metrics::MotionFitnessDaily::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionFitnessDaily::default_instance_ + 8))(awd::metrics::MotionFitnessDaily::default_instance_);
  if (awd::metrics::MotionFitnessPedometer::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionFitnessPedometer::default_instance_ + 8))(awd::metrics::MotionFitnessPedometer::default_instance_);
  if (awd::metrics::MotionFitnessStrideCalibration::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionFitnessStrideCalibration::default_instance_ + 8))(awd::metrics::MotionFitnessStrideCalibration::default_instance_);
  if (awd::metrics::MotionFitnessAccelSampleRate::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionFitnessAccelSampleRate::default_instance_ + 8))(awd::metrics::MotionFitnessAccelSampleRate::default_instance_);
  if (awd::metrics::MotionBarometerCalibration::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionBarometerCalibration::default_instance_ + 8))(awd::metrics::MotionBarometerCalibration::default_instance_);
  if (awd::metrics::MotionGyroDaily::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionGyroDaily::default_instance_ + 8))(awd::metrics::MotionGyroDaily::default_instance_);
  if (awd::metrics::MotionSOSEvent::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::MotionSOSEvent::default_instance_ + 8))(awd::metrics::MotionSOSEvent::default_instance_);
  if (awd::metrics::LocationBatteryState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationBatteryState::default_instance_ + 8))(awd::metrics::LocationBatteryState::default_instance_);
  if (awd::metrics::LocationNavigationSession::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationNavigationSession::default_instance_ + 8))(awd::metrics::LocationNavigationSession::default_instance_);
  if (awd::metrics::LocationMainHarvesterMetrics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMainHarvesterMetrics::default_instance_ + 8))(awd::metrics::LocationMainHarvesterMetrics::default_instance_);
  if (awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_ + 8))(awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_);
  if (awd::metrics::LocationSubHarvesterMetrics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationSubHarvesterMetrics::default_instance_ + 8))(awd::metrics::LocationSubHarvesterMetrics::default_instance_);
  if (awd::metrics::LocationBeaconMonitorSession::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationBeaconMonitorSession::default_instance_ + 8))(awd::metrics::LocationBeaconMonitorSession::default_instance_);
  if (awd::metrics::LocationBeaconMonitorTrigger::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationBeaconMonitorTrigger::default_instance_ + 8))(awd::metrics::LocationBeaconMonitorTrigger::default_instance_);
  if (awd::metrics::LocationBeaconRangingSession::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationBeaconRangingSession::default_instance_ + 8))(awd::metrics::LocationBeaconRangingSession::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics::default_instance_ + 8))(awd::metrics::LocationGPSSessionStatistics::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_);
  if (awd::metrics::LocationCellTileUsage::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationCellTileUsage::default_instance_ + 8))(awd::metrics::LocationCellTileUsage::default_instance_);
  if (awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_ + 8))(awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_);
  if (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_
                                    + 8))(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_);
  if (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_
                                    + 8))(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_);
  if (awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_
                                    + 8))(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_);
  if (awd::metrics::LocationVisibilityAssertion::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationVisibilityAssertion::default_instance_ + 8))(awd::metrics::LocationVisibilityAssertion::default_instance_);
  if (awd::metrics::LocationPhoneNumberAvailability::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationPhoneNumberAvailability::default_instance_ + 8))(awd::metrics::LocationPhoneNumberAvailability::default_instance_);
  if (awd::metrics::LocationMobileAssetStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMobileAssetStatistics::default_instance_ + 8))(awd::metrics::LocationMobileAssetStatistics::default_instance_);
  if (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_
                                    + 8))(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_);
  if (awd::metrics::LocationEmergencyPOIStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationEmergencyPOIStatistics::default_instance_ + 8))(awd::metrics::LocationEmergencyPOIStatistics::default_instance_);
  if (awd::metrics::LocationAccessory::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory::default_instance_ + 8))(awd::metrics::LocationAccessory::default_instance_);
  if (awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_);
  if (awd::metrics::LocationAccessory_Statistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_Statistics::default_instance_ + 8))(awd::metrics::LocationAccessory_Statistics::default_instance_);
  if (awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_PerformanceStats::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_PerformanceStats::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_PerformanceStats::default_instance_);
  if (awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_);
  if (awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_MessageHistogram::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_MessageHistogram::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_MessageHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_MessageStats::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_MessageStats::default_instance_ + 8))(awd::metrics::LocationAccessory_MessageStats::default_instance_);
  if (awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_);
  if (awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_);
  if (awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_
                                    + 8))(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_PASCDStats::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_PASCDStats::default_instance_ + 8))(awd::metrics::LocationAccessory_PASCDStats::default_instance_);
  if (awd::metrics::LocationAccessory_Coordinate::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationAccessory_Coordinate::default_instance_ + 8))(awd::metrics::LocationAccessory_Coordinate::default_instance_);
  result = awd::metrics::BaroAltitudeCalibrationInfo::default_instance_;
  if (awd::metrics::BaroAltitudeCalibrationInfo::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)awd::metrics::BaroAltitudeCalibrationInfo::default_instance_
                                              + 8))(awd::metrics::BaroAltitudeCalibrationInfo::default_instance_);
  return result;
}

void awd::metrics::protobuf_AddDesc_Location_2eproto(awd::metrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  awd::metrics::LocationGPSSessionStatistics *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  awd::metrics::LocationAccessory *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  awd::metrics *inited;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  awd::metrics *v109;
  void (*v110)(void);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  if ((awd::metrics::protobuf_AddDesc_Location_2eproto(void)::already_here & 1) != 0)
    return;
  awd::metrics::protobuf_AddDesc_Location_2eproto(void)::already_here = 1;
  wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"codegen/cpp/Location.pb.cc", a4);
  v4 = operator new();
  *(_QWORD *)v4 = &off_24D98E060;
  *(_QWORD *)(v4 + 8) = 0;
  v5 = MEMORY[0x24BEDD958];
  *(_QWORD *)(v4 + 16) = MEMORY[0x24BEDD958];
  *(_BYTE *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 28) = 0;
  *(_DWORD *)(v4 + 36) = 0;
  awd::metrics::LocationServicesState::default_instance_ = v4;
  v6 = operator new();
  *(_QWORD *)v6 = &off_24D98E0D8;
  *(_QWORD *)(v6 + 8) = 0;
  *(_BYTE *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v5;
  *(_QWORD *)(v6 + 36) = 0;
  *(_DWORD *)(v6 + 44) = 0;
  awd::metrics::LocationServicesApproval::default_instance_ = v6;
  v7 = operator new();
  *(_QWORD *)v7 = &off_24D98E150;
  *(_QWORD *)(v7 + 8) = 0;
  *(_QWORD *)(v7 + 16) = v5;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_QWORD *)(v7 + 88) = 0;
  *(_QWORD *)(v7 + 96) = v5;
  *(_QWORD *)(v7 + 104) = v5;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = v5;
  *(_BYTE *)(v7 + 128) = 0;
  *(_QWORD *)(v7 + 132) = 0;
  awd::metrics::LocationUpdateSession::default_instance_ = v7;
  v8 = operator new();
  *(_QWORD *)v8 = &off_24D98E1C8;
  *(_QWORD *)(v8 + 8) = 0;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = 0;
  *(_OWORD *)(v8 + 32) = 0u;
  awd::metrics::LocationMonitorSession::default_instance_ = v8;
  v9 = operator new();
  *(_QWORD *)v9 = &off_24D98E240;
  *(_QWORD *)(v9 + 8) = 0;
  *(_QWORD *)(v9 + 60) = 0;
  *(_QWORD *)(v9 + 16) = v5;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 31) = 0;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_DWORD *)(v9 + 56) = 0;
  awd::metrics::LocationMonitorTrigger::default_instance_ = v9;
  v10 = operator new();
  *(_QWORD *)v10 = &off_24D98E2B8;
  *(_QWORD *)(v10 + 8) = 0;
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 72) = 0;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  awd::metrics::LocationNetworkQueries::default_instance_ = v10;
  v11 = operator new();
  *(_QWORD *)v11 = &off_24D98E330;
  *(_QWORD *)(v11 + 8) = 0;
  *(_QWORD *)(v11 + 16) = v5;
  *(_QWORD *)(v11 + 44) = 0;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_DWORD *)(v11 + 40) = 0;
  awd::metrics::LocationWifiUsage::default_instance_ = v11;
  v12 = operator new();
  *(_QWORD *)v12 = &off_24D98E3A8;
  *(_QWORD *)(v12 + 8) = 0;
  *(_QWORD *)(v12 + 16) = v5;
  *(_QWORD *)(v12 + 40) = 0;
  *(_OWORD *)(v12 + 24) = 0u;
  awd::metrics::LocationEmergencySession::default_instance_ = v12;
  v13 = operator new();
  *(_DWORD *)(v13 + 468) = 0;
  *(_QWORD *)v13 = &off_24D98E420;
  *(_QWORD *)(v13 + 8) = 0;
  *(_QWORD *)(v13 + 16) = v5;
  *(_OWORD *)(v13 + 40) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_OWORD *)(v13 + 72) = 0u;
  *(_OWORD *)(v13 + 88) = 0u;
  *(_OWORD *)(v13 + 104) = 0u;
  *(_OWORD *)(v13 + 120) = 0u;
  *(_OWORD *)(v13 + 136) = 0u;
  *(_OWORD *)(v13 + 152) = 0u;
  *(_OWORD *)(v13 + 168) = 0u;
  *(_OWORD *)(v13 + 184) = 0u;
  *(_OWORD *)(v13 + 200) = 0u;
  *(_OWORD *)(v13 + 216) = 0u;
  *(_OWORD *)(v13 + 232) = 0u;
  *(_OWORD *)(v13 + 248) = 0u;
  *(_QWORD *)(v13 + 280) = v5;
  *(_QWORD *)(v13 + 288) = v5;
  *(_QWORD *)(v13 + 408) = v5;
  *(_QWORD *)(v13 + 424) = v5;
  *(_QWORD *)(v13 + 416) = 0;
  awd::metrics::LocationEmergencySessionStatistics::default_instance_ = v13;
  *(_OWORD *)(v13 + 432) = 0u;
  *(_OWORD *)(v13 + 448) = 0u;
  *(_DWORD *)(v13 + 464) = 0;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 264) = 0u;
  *(_OWORD *)(v13 + 296) = 0u;
  *(_OWORD *)(v13 + 312) = 0u;
  *(_OWORD *)(v13 + 328) = 0u;
  *(_DWORD *)(v13 + 343) = 0;
  *(_OWORD *)(v13 + 348) = 0u;
  *(_OWORD *)(v13 + 364) = 0u;
  *(_OWORD *)(v13 + 380) = 0u;
  *(_OWORD *)(v13 + 392) = 0u;
  *(_OWORD *)(v13 + 472) = 0u;
  v14 = operator new();
  *(_QWORD *)v14 = &off_24D98E498;
  *(_QWORD *)(v14 + 8) = 0;
  *(_QWORD *)(v14 + 16) = v5;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_DWORD *)(v14 + 40) = 0;
  awd::metrics::LocationMapMatching::default_instance_ = v14;
  v15 = operator new();
  *(_QWORD *)v15 = &off_24D98E510;
  *(_OWORD *)(v15 + 8) = 0u;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  awd::metrics::LocationRealTimeHarvest::default_instance_ = v15;
  v16 = operator new();
  *(_QWORD *)v16 = &off_24D98E588;
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 40) = 0u;
  awd::metrics::LocationSecondaryDeviceRequest::default_instance_ = v16;
  v17 = operator new();
  *(_QWORD *)v17 = &off_24D98E678;
  *(_QWORD *)(v17 + 8) = 0;
  *(_QWORD *)(v17 + 16) = v5;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  *(_OWORD *)(v17 + 88) = 0u;
  *(_OWORD *)(v17 + 104) = 0u;
  *(_OWORD *)(v17 + 120) = 0u;
  *(_QWORD *)(v17 + 136) = 0xFFFFFFFF00000000;
  *(_QWORD *)(v17 + 144) = 0;
  *(_OWORD *)(v17 + 204) = 0u;
  *(_OWORD *)(v17 + 152) = 0u;
  *(_OWORD *)(v17 + 168) = 0u;
  *(_OWORD *)(v17 + 184) = 0u;
  *(_BYTE *)(v17 + 200) = 0;
  awd::metrics::CompassSession::default_instance_ = v17;
  v18 = operator new();
  *(_QWORD *)v18 = &off_24D98E600;
  *(_OWORD *)(v18 + 8) = 0u;
  *(_DWORD *)(v18 + 24) = 0;
  awd::metrics::CompassSession_Rotation::default_instance_ = v18;
  v19 = operator new();
  *(_QWORD *)v19 = &off_24D98E6F0;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  *(_OWORD *)(v19 + 40) = 0u;
  *(_QWORD *)(v19 + 56) = 0;
  awd::metrics::LocationCompassSaturations::default_instance_ = v19;
  v20 = operator new();
  *(_QWORD *)v20 = &off_24D98E768;
  *(_QWORD *)(v20 + 8) = 0;
  *(_QWORD *)(v20 + 16) = v5;
  *(_DWORD *)(v20 + 24) = 0;
  *(_BYTE *)(v20 + 28) = 0;
  *(_QWORD *)(v20 + 32) = 0;
  awd::metrics::MotionState::default_instance_ = v20;
  v21 = operator new();
  *(_OWORD *)(v21 + 40) = 0u;
  *(_DWORD *)(v21 + 56) = 0;
  *(_QWORD *)v21 = &off_24D98E7E0;
  *(_QWORD *)(v21 + 8) = 0;
  *(_QWORD *)(v21 + 16) = v5;
  *(_QWORD *)(v21 + 64) = 0;
  *(_OWORD *)(v21 + 24) = 0u;
  awd::metrics::MotionTrigger::default_instance_ = v21;
  v22 = operator new();
  *(_QWORD *)v22 = &off_24D98E858;
  *(_QWORD *)(v22 + 8) = 0;
  *(_OWORD *)(v22 + 16) = 0u;
  awd::metrics::MotionGyroMiniCal::default_instance_ = v22;
  v23 = operator new();
  *(_QWORD *)v23 = &off_24D98E8D0;
  *(_OWORD *)(v23 + 8) = 0u;
  *(_OWORD *)(v23 + 24) = 0u;
  *(_DWORD *)(v23 + 40) = 0;
  awd::metrics::MotionDropDetection::default_instance_ = v23;
  v24 = operator new();
  *(_QWORD *)v24 = &off_24D98E948;
  *(_OWORD *)(v24 + 8) = 0u;
  *(_OWORD *)(v24 + 24) = 0u;
  *(_OWORD *)(v24 + 36) = 0u;
  awd::metrics::MotionPedometerCalibration::default_instance_ = v24;
  v25 = operator new();
  *(_QWORD *)v25 = &off_24D98EA38;
  *(_QWORD *)(v25 + 52) = 0;
  *(_OWORD *)(v25 + 60) = 0u;
  *(_DWORD *)(v25 + 76) = 0;
  *(_OWORD *)(v25 + 8) = 0u;
  *(_OWORD *)(v25 + 24) = 0u;
  *(_QWORD *)(v25 + 40) = 0;
  awd::metrics::MotionGyroBiasEstimation::default_instance_ = v25;
  v26 = operator new();
  *(_QWORD *)v26 = &off_24D98E9C0;
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_ = v26;
  v27 = operator new();
  *(_DWORD *)(v27 + 448) = 0;
  *(_QWORD *)v27 = &off_24D98EAB0;
  *(_QWORD *)(v27 + 8) = 0;
  *(_BYTE *)(v27 + 52) = 0;
  *(_QWORD *)(v27 + 24) = v5;
  *(_QWORD *)(v27 + 16) = 0;
  *(_OWORD *)(v27 + 452) = 0u;
  *(_OWORD *)(v27 + 32) = 0u;
  *(_DWORD *)(v27 + 48) = 0;
  *(_OWORD *)(v27 + 53) = 0u;
  *(_OWORD *)(v27 + 69) = 0u;
  *(_OWORD *)(v27 + 85) = 0u;
  *(_OWORD *)(v27 + 101) = 0u;
  *(_OWORD *)(v27 + 117) = 0u;
  *(_OWORD *)(v27 + 133) = 0u;
  *(_OWORD *)(v27 + 149) = 0u;
  *(_OWORD *)(v27 + 165) = 0u;
  *(_OWORD *)(v27 + 181) = 0u;
  *(_OWORD *)(v27 + 197) = 0u;
  *(_OWORD *)(v27 + 213) = 0u;
  *(_OWORD *)(v27 + 224) = 0u;
  *(_OWORD *)(v27 + 240) = 0u;
  *(_OWORD *)(v27 + 365) = 0u;
  *(_OWORD *)(v27 + 336) = 0u;
  *(_OWORD *)(v27 + 352) = 0u;
  *(_OWORD *)(v27 + 304) = 0u;
  *(_OWORD *)(v27 + 320) = 0u;
  *(_OWORD *)(v27 + 272) = 0u;
  *(_OWORD *)(v27 + 288) = 0u;
  *(_OWORD *)(v27 + 256) = 0u;
  *(_OWORD *)(v27 + 384) = 0u;
  *(_OWORD *)(v27 + 400) = 0u;
  *(_OWORD *)(v27 + 416) = 0u;
  *(_OWORD *)(v27 + 432) = 0u;
  awd::metrics::MotionFitnessSession::default_instance_ = v27;
  v28 = (_OWORD *)operator new();
  *(_QWORD *)v28 = &off_24D98EB28;
  v28[17] = 0u;
  *(_OWORD *)((char *)v28 + 296) = 0u;
  *(_OWORD *)((char *)v28 + 360) = 0u;
  *(_OWORD *)((char *)v28 + 792) = 0u;
  *(_OWORD *)((char *)v28 + 88) = 0u;
  *(_OWORD *)((char *)v28 + 104) = 0u;
  *(_OWORD *)((char *)v28 + 120) = 0u;
  *(_OWORD *)((char *)v28 + 136) = 0u;
  *(_OWORD *)((char *)v28 + 152) = 0u;
  *(_OWORD *)((char *)v28 + 168) = 0u;
  v28[13] = 0u;
  v28[14] = 0u;
  v28[12] = 0u;
  v28[31] = 0u;
  v28[32] = 0u;
  v28[47] = 0u;
  v28[48] = 0u;
  v28[45] = 0u;
  v28[46] = 0u;
  v28[43] = 0u;
  v28[44] = 0u;
  v28[41] = 0u;
  v28[42] = 0u;
  v28[40] = 0u;
  awd::metrics::MotionFitnessAllDay::SharedCtor((awd::metrics::MotionFitnessAllDay *)v28);
  awd::metrics::MotionFitnessAllDay::default_instance_ = (uint64_t)v28;
  v29 = operator new();
  *(_QWORD *)v29 = &off_24D98EBA0;
  *(_OWORD *)(v29 + 8) = 0u;
  *(_OWORD *)(v29 + 24) = 0u;
  *(_OWORD *)(v29 + 40) = 0u;
  *(_OWORD *)(v29 + 56) = 0u;
  *(_OWORD *)(v29 + 72) = 0u;
  *(_OWORD *)(v29 + 88) = 0u;
  *(_QWORD *)(v29 + 104) = 0;
  awd::metrics::MotionPressureTemperature::default_instance_ = v29;
  v30 = operator new();
  *(_QWORD *)v30 = &off_24D98EC18;
  *(_QWORD *)(v30 + 160) = 0;
  *(_QWORD *)(v30 + 168) = 0;
  *(_QWORD *)(v30 + 184) = 0;
  *(_QWORD *)(v30 + 192) = 0;
  *(_QWORD *)(v30 + 208) = 0;
  *(_QWORD *)(v30 + 216) = 0;
  *(_QWORD *)(v30 + 232) = 0;
  *(_QWORD *)(v30 + 240) = 0;
  *(_QWORD *)(v30 + 256) = 0;
  *(_QWORD *)(v30 + 264) = 0;
  *(_QWORD *)(v30 + 280) = 0;
  *(_QWORD *)(v30 + 288) = 0;
  *(_QWORD *)(v30 + 304) = 0;
  *(_QWORD *)(v30 + 312) = 0;
  *(_OWORD *)(v30 + 8) = 0u;
  *(_OWORD *)(v30 + 24) = 0u;
  *(_OWORD *)(v30 + 40) = 0u;
  *(_QWORD *)(v30 + 56) = 0;
  *(_OWORD *)(v30 + 136) = 0u;
  *(_OWORD *)(v30 + 120) = 0u;
  *(_OWORD *)(v30 + 104) = 0u;
  *(_OWORD *)(v30 + 88) = 0u;
  *(_OWORD *)(v30 + 72) = 0u;
  *(_QWORD *)(v30 + 64) = 255;
  *(_DWORD *)(v30 + 324) = 0;
  *(_QWORD *)(v30 + 328) = 0;
  awd::metrics::MotionElevationAllDay::default_instance_ = v30;
  v31 = operator new();
  *(_QWORD *)v31 = &off_24D98EC90;
  *(_QWORD *)(v31 + 152) = 0;
  *(_OWORD *)(v31 + 8) = 0u;
  *(_OWORD *)(v31 + 24) = 0u;
  *(_OWORD *)(v31 + 40) = 0u;
  *(_OWORD *)(v31 + 56) = 0u;
  *(_OWORD *)(v31 + 72) = 0u;
  *(_OWORD *)(v31 + 88) = 0u;
  *(_OWORD *)(v31 + 104) = 0u;
  *(_OWORD *)(v31 + 120) = 0u;
  *(_OWORD *)(v31 + 132) = 0u;
  awd::metrics::MotionPressureStats::default_instance_ = v31;
  v32 = operator new();
  *(_QWORD *)v32 = &off_24D98ED08;
  *(_QWORD *)(v32 + 8) = 0;
  *(_BYTE *)(v32 + 16) = 0;
  *(_QWORD *)(v32 + 20) = 0;
  awd::metrics::MotionNoGPSRunAllDay::default_instance_ = v32;
  v33 = operator new();
  *(_QWORD *)v33 = &off_24D98ED80;
  *(_QWORD *)(v33 + 8) = 0;
  *(_DWORD *)(v33 + 32) = 0;
  *(_QWORD *)(v33 + 16) = v5;
  *(_QWORD *)(v33 + 24) = v5;
  *(_QWORD *)(v33 + 96) = 0;
  *(_OWORD *)(v33 + 36) = 0u;
  *(_QWORD *)(v33 + 52) = 0;
  *(_WORD *)(v33 + 60) = 0;
  *(_OWORD *)(v33 + 64) = 0u;
  *(_OWORD *)(v33 + 80) = 0u;
  awd::metrics::MotionFitnessDaily::default_instance_ = v33;
  v34 = operator new();
  *(_QWORD *)v34 = &off_24D98EDF8;
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  *(_OWORD *)(v34 + 40) = 0u;
  *(_OWORD *)(v34 + 56) = 0u;
  *(_OWORD *)(v34 + 72) = 0u;
  *(_QWORD *)(v34 + 88) = 0;
  awd::metrics::MotionFitnessPedometer::default_instance_ = v34;
  v35 = operator new();
  *(_QWORD *)v35 = &off_24D98EE70;
  *(_OWORD *)(v35 + 8) = 0u;
  *(_OWORD *)(v35 + 24) = 0u;
  *(_OWORD *)(v35 + 40) = 0u;
  awd::metrics::MotionFitnessStrideCalibration::default_instance_ = v35;
  v36 = (_QWORD *)operator new();
  *v36 = &off_24D98EEE8;
  v36[1] = 0;
  v36[2] = 0;
  v36[3] = 0;
  awd::metrics::MotionFitnessAccelSampleRate::default_instance_ = (uint64_t)v36;
  v37 = operator new();
  *(_QWORD *)v37 = &off_24D98EF60;
  *(_OWORD *)(v37 + 8) = 0u;
  *(_OWORD *)(v37 + 24) = 0u;
  awd::metrics::MotionBarometerCalibration::default_instance_ = v37;
  v38 = operator new();
  *(_QWORD *)v38 = &off_24D98EFD8;
  *(_QWORD *)(v38 + 8) = 0;
  *(_QWORD *)(v38 + 16) = 0;
  *(_QWORD *)(v38 + 24) = 0;
  *(_DWORD *)(v38 + 32) = 0;
  awd::metrics::MotionGyroDaily::default_instance_ = v38;
  v39 = operator new();
  *(_QWORD *)v39 = &off_24D98F050;
  *(_OWORD *)(v39 + 8) = 0u;
  *(_OWORD *)(v39 + 24) = 0u;
  *(_OWORD *)(v39 + 40) = 0u;
  awd::metrics::MotionSOSEvent::default_instance_ = v39;
  v40 = operator new();
  *(_QWORD *)(v40 + 28) = 0;
  *(_QWORD *)v40 = &off_24D98F0C8;
  *(_QWORD *)(v40 + 8) = 0;
  *(_QWORD *)(v40 + 16) = 0;
  *(_BYTE *)(v40 + 24) = 0;
  awd::metrics::LocationBatteryState::default_instance_ = v40;
  v41 = operator new();
  *(_QWORD *)(v41 + 64) = 0;
  *(_QWORD *)(v41 + 72) = 0;
  *(_DWORD *)(v41 + 80) = 0;
  *(_QWORD *)v41 = &off_24D98F140;
  *(_QWORD *)(v41 + 8) = 0;
  *(_QWORD *)(v41 + 16) = v5;
  *(_BYTE *)(v41 + 88) = 0;
  *(_QWORD *)(v41 + 92) = 0;
  *(_OWORD *)(v41 + 24) = 0u;
  *(_OWORD *)(v41 + 40) = 0u;
  *(_QWORD *)(v41 + 56) = 0;
  awd::metrics::LocationNavigationSession::default_instance_ = v41;
  v42 = operator new();
  *(_QWORD *)v42 = &off_24D98F1B8;
  *(_QWORD *)(v42 + 8) = 0;
  *(_QWORD *)(v42 + 16) = v5;
  *(_QWORD *)(v42 + 68) = 0;
  *(_OWORD *)(v42 + 24) = 0u;
  *(_OWORD *)(v42 + 40) = 0u;
  *(_OWORD *)(v42 + 52) = 0u;
  awd::metrics::LocationMainHarvesterMetrics::default_instance_ = v42;
  v43 = operator new();
  *(_QWORD *)v43 = &off_24D98F230;
  *(_BYTE *)(v43 + 8) = 0;
  *(_QWORD *)(v43 + 12) = 0;
  *(_QWORD *)(v43 + 20) = 0;
  awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_ = v43;
  v44 = operator new();
  *(_QWORD *)(v44 + 64) = 0;
  *(_QWORD *)(v44 + 72) = 0;
  *(_DWORD *)(v44 + 80) = 0;
  *(_QWORD *)v44 = &off_24D98F2A8;
  *(_QWORD *)(v44 + 8) = 0;
  *(_QWORD *)(v44 + 16) = v5;
  *(_QWORD *)(v44 + 88) = 0;
  *(_OWORD *)(v44 + 24) = 0u;
  *(_OWORD *)(v44 + 40) = 0u;
  *(_QWORD *)(v44 + 56) = 0;
  awd::metrics::LocationSubHarvesterMetrics::default_instance_ = v44;
  v45 = operator new();
  *(_QWORD *)v45 = &off_24D98F320;
  *(_QWORD *)(v45 + 8) = 0;
  *(_QWORD *)(v45 + 16) = v5;
  *(_QWORD *)(v45 + 24) = v5;
  *(_QWORD *)(v45 + 64) = 0;
  *(_OWORD *)(v45 + 32) = 0u;
  *(_OWORD *)(v45 + 48) = 0u;
  awd::metrics::LocationBeaconMonitorSession::default_instance_ = v45;
  v46 = (_QWORD *)operator new();
  *v46 = &off_24D98F398;
  v46[1] = 0;
  v46[2] = v5;
  v46[3] = v5;
  v46[6] = 0;
  v46[4] = 0;
  v46[5] = 0;
  awd::metrics::LocationBeaconMonitorTrigger::default_instance_ = (uint64_t)v46;
  v47 = (_QWORD *)operator new();
  *v47 = &off_24D98F410;
  v47[1] = 0;
  v47[6] = 0;
  v47[7] = 0;
  v47[2] = v5;
  v47[3] = 0;
  v47[4] = 0;
  v47[5] = 0;
  awd::metrics::LocationBeaconRangingSession::default_instance_ = (uint64_t)v47;
  v48 = (awd::metrics::LocationGPSSessionStatistics *)operator new();
  awd::metrics::LocationGPSSessionStatistics::LocationGPSSessionStatistics(v48);
  awd::metrics::LocationGPSSessionStatistics::default_instance_ = v49;
  v50 = operator new();
  *(_QWORD *)v50 = &off_24D98F488;
  *(_QWORD *)(v50 + 8) = 0;
  *(_QWORD *)(v50 + 16) = 0;
  *(_DWORD *)(v50 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_ = v50;
  v51 = operator new();
  *(_QWORD *)v51 = &off_24D98F500;
  *(_QWORD *)(v51 + 8) = 0;
  *(_QWORD *)(v51 + 16) = 0;
  *(_DWORD *)(v51 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_ = v51;
  v52 = operator new();
  *(_QWORD *)v52 = &off_24D98F578;
  *(_QWORD *)(v52 + 8) = 0;
  *(_QWORD *)(v52 + 16) = 0;
  *(_DWORD *)(v52 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_ = v52;
  v53 = operator new();
  *(_QWORD *)v53 = &off_24D98F5F0;
  *(_QWORD *)(v53 + 8) = 0;
  *(_QWORD *)(v53 + 16) = 0;
  *(_DWORD *)(v53 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_ = v53;
  v54 = operator new();
  *(_QWORD *)v54 = &off_24D98F668;
  *(_QWORD *)(v54 + 8) = 0;
  *(_QWORD *)(v54 + 16) = 0;
  *(_DWORD *)(v54 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_ = v54;
  v55 = operator new();
  *(_QWORD *)v55 = &off_24D98F6E0;
  *(_QWORD *)(v55 + 8) = 0;
  *(_QWORD *)(v55 + 16) = 0;
  *(_DWORD *)(v55 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_ = v55;
  v56 = operator new();
  *(_QWORD *)v56 = &off_24D98F758;
  *(_QWORD *)(v56 + 8) = 0;
  *(_QWORD *)(v56 + 16) = 0;
  *(_DWORD *)(v56 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_ = v56;
  v57 = operator new();
  *(_QWORD *)v57 = &off_24D98F7D0;
  *(_QWORD *)(v57 + 8) = 0;
  *(_QWORD *)(v57 + 16) = 0;
  *(_DWORD *)(v57 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_ = v57;
  v58 = (_QWORD *)operator new();
  *v58 = &off_24D98F848;
  v58[1] = v5;
  v58[2] = 0;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_ = (uint64_t)v58;
  v59 = operator new();
  *(_QWORD *)v59 = &off_24D98F8C0;
  *(_QWORD *)(v59 + 8) = 0;
  *(_QWORD *)(v59 + 16) = 0;
  *(_DWORD *)(v59 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_ = v59;
  v60 = operator new();
  *(_QWORD *)v60 = &off_24D98F938;
  *(_QWORD *)(v60 + 8) = 0;
  *(_QWORD *)(v60 + 16) = 0;
  *(_DWORD *)(v60 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_ = v60;
  v61 = operator new();
  *(_QWORD *)v61 = &off_24D98F9B0;
  *(_QWORD *)(v61 + 8) = 0;
  *(_QWORD *)(v61 + 16) = 0;
  *(_DWORD *)(v61 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_ = v61;
  v62 = operator new();
  *(_QWORD *)v62 = &off_24D98FA28;
  *(_QWORD *)(v62 + 8) = 0;
  *(_QWORD *)(v62 + 16) = 0;
  *(_DWORD *)(v62 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_ = v62;
  v63 = operator new();
  *(_QWORD *)v63 = &off_24D98FAA0;
  *(_OWORD *)(v63 + 8) = 0u;
  *(_OWORD *)(v63 + 24) = 0u;
  *(_OWORD *)(v63 + 40) = 0u;
  *(_OWORD *)(v63 + 56) = 0u;
  *(_DWORD *)(v63 + 72) = 0;
  awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_ = v63;
  v64 = (_QWORD *)operator new();
  *v64 = &off_24D98FB18;
  v64[1] = 0;
  v64[2] = 0;
  v64[3] = 0;
  awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_ = (uint64_t)v64;
  v65 = operator new();
  *(_QWORD *)v65 = &off_24D98FB90;
  *(_QWORD *)(v65 + 8) = 0;
  *(_QWORD *)(v65 + 16) = 0;
  *(_DWORD *)(v65 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_ = v65;
  v66 = operator new();
  *(_QWORD *)v66 = &off_24D98FC08;
  *(_QWORD *)(v66 + 8) = 0;
  *(_QWORD *)(v66 + 16) = 0;
  *(_DWORD *)(v66 + 24) = 0;
  awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_ = v66;
  v67 = (_QWORD *)operator new();
  *v67 = &off_24D98FC80;
  v67[1] = 0;
  v67[2] = 0;
  awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_ = (uint64_t)v67;
  v68 = operator new();
  *(_QWORD *)v68 = &off_24D98FCF8;
  *(_QWORD *)(v68 + 8) = 0;
  *(_QWORD *)(v68 + 16) = 0;
  *(_DWORD *)(v68 + 24) = 0;
  *(_QWORD *)(v68 + 32) = 0;
  *(_DWORD *)(v68 + 40) = 0;
  awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_ = v68;
  v69 = operator new();
  *(_QWORD *)v69 = &off_24D98FDE8;
  *(_OWORD *)(v69 + 8) = 0u;
  *(_OWORD *)(v69 + 24) = 0u;
  *(_OWORD *)(v69 + 40) = 0u;
  *(_QWORD *)(v69 + 56) = 0;
  awd::metrics::LocationCellTileUsage::default_instance_ = v69;
  v70 = (_QWORD *)operator new();
  *v70 = &off_24D98FFC8;
  v70[1] = 0;
  v70[2] = v5;
  v70[3] = 0;
  v70[4] = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_ = (uint64_t)v70;
  v71 = operator new();
  *(_QWORD *)v71 = &off_24D98FE60;
  *(_QWORD *)(v71 + 8) = v5;
  *(_QWORD *)(v71 + 24) = 0;
  *(_QWORD *)(v71 + 16) = v5;
  *(_DWORD *)(v71 + 32) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_ = v71;
  v72 = operator new();
  *(_QWORD *)v72 = &off_24D98FED8;
  *(_QWORD *)(v72 + 16) = 0;
  *(_DWORD *)(v72 + 8) = 0;
  *(_DWORD *)(v72 + 11) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_ = v72;
  v73 = operator new();
  *(_QWORD *)v73 = &off_24D98FF50;
  *(_QWORD *)(v73 + 8) = 0;
  *(_QWORD *)(v73 + 16) = 0;
  *(_DWORD *)(v73 + 24) = 0;
  *(_QWORD *)(v73 + 32) = 0;
  *(_QWORD *)(v73 + 40) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_ = v73;
  v74 = operator new();
  *(_QWORD *)v74 = &off_24D990040;
  *(_QWORD *)(v74 + 8) = 0;
  *(_QWORD *)(v74 + 44) = 0;
  *(_QWORD *)(v74 + 16) = v5;
  *(_QWORD *)(v74 + 24) = 0;
  *(_QWORD *)(v74 + 32) = 0;
  *(_DWORD *)(v74 + 40) = 0;
  awd::metrics::LocationVisibilityAssertion::default_instance_ = v74;
  v75 = operator new();
  *(_QWORD *)v75 = &off_24D9900B8;
  *(_QWORD *)(v75 + 8) = 0;
  *(_OWORD *)(v75 + 40) = 0u;
  *(_DWORD *)(v75 + 56) = 0;
  *(_QWORD *)(v75 + 16) = v5;
  *(_QWORD *)(v75 + 24) = 0;
  *(_QWORD *)(v75 + 29) = 0;
  awd::metrics::LocationPhoneNumberAvailability::default_instance_ = v75;
  v76 = operator new();
  *(_QWORD *)v76 = &off_24D9901A8;
  *(_QWORD *)(v76 + 8) = 0;
  *(_QWORD *)(v76 + 16) = v5;
  *(_QWORD *)(v76 + 104) = 0;
  *(_OWORD *)(v76 + 24) = 0u;
  *(_OWORD *)(v76 + 40) = 0u;
  *(_OWORD *)(v76 + 54) = 0u;
  *(_OWORD *)(v76 + 72) = 0u;
  *(_OWORD *)(v76 + 88) = 0u;
  awd::metrics::LocationMobileAssetStatistics::default_instance_ = v76;
  v77 = operator new();
  *(_QWORD *)v77 = &off_24D990130;
  *(_QWORD *)(v77 + 8) = v5;
  *(_QWORD *)(v77 + 36) = 0;
  *(_QWORD *)(v77 + 16) = 0;
  *(_QWORD *)(v77 + 24) = 0;
  *(_BYTE *)(v77 + 32) = 0;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_ = v77;
  v78 = operator new();
  *(_QWORD *)v78 = &off_24D990220;
  *(_QWORD *)(v78 + 8) = 0;
  *(_QWORD *)(v78 + 16) = v5;
  *(_QWORD *)(v78 + 108) = 0;
  *(_OWORD *)(v78 + 24) = 0u;
  *(_OWORD *)(v78 + 40) = 0u;
  *(_OWORD *)(v78 + 56) = 0u;
  *(_OWORD *)(v78 + 72) = 0u;
  *(_OWORD *)(v78 + 88) = 0u;
  *(_DWORD *)(v78 + 104) = 0;
  awd::metrics::LocationEmergencyPOIStatistics::default_instance_ = v78;
  v79 = (awd::metrics::LocationAccessory *)operator new();
  awd::metrics::LocationAccessory::LocationAccessory(v79);
  awd::metrics::LocationAccessory::default_instance_ = v80;
  v81 = (_QWORD *)operator new();
  *v81 = &off_24D990298;
  v81[1] = 0;
  v81[2] = 0;
  awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_ = (uint64_t)v81;
  v82 = operator new();
  *(_QWORD *)v82 = &off_24D990310;
  *(_QWORD *)(v82 + 8) = 0;
  *(_QWORD *)(v82 + 16) = 0;
  *(_DWORD *)(v82 + 24) = 0;
  *(_QWORD *)(v82 + 32) = 0;
  *(_DWORD *)(v82 + 40) = 0;
  awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_ = v82;
  v83 = operator new();
  *(_QWORD *)v83 = &off_24D990388;
  *(_OWORD *)(v83 + 8) = 0u;
  *(_OWORD *)(v83 + 24) = 0u;
  awd::metrics::LocationAccessory_Statistics::default_instance_ = v83;
  v84 = (_QWORD *)operator new();
  *v84 = &off_24D990400;
  v84[1] = 0;
  v84[2] = 0;
  awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_ = (uint64_t)v84;
  v85 = operator new();
  *(_QWORD *)v85 = &off_24D990478;
  *(_QWORD *)(v85 + 8) = 0;
  *(_QWORD *)(v85 + 16) = 0;
  *(_DWORD *)(v85 + 24) = 0;
  *(_QWORD *)(v85 + 32) = 0;
  *(_QWORD *)(v85 + 40) = 0;
  *(_DWORD *)(v85 + 48) = 0;
  *(_QWORD *)(v85 + 56) = 0;
  *(_QWORD *)(v85 + 64) = 0;
  *(_DWORD *)(v85 + 72) = 0;
  *(_QWORD *)(v85 + 80) = 0;
  *(_QWORD *)(v85 + 88) = 0;
  *(_DWORD *)(v85 + 96) = 0;
  awd::metrics::LocationAccessory_PerformanceStats::default_instance_ = v85;
  v86 = (_QWORD *)operator new();
  *v86 = &off_24D9904F0;
  v86[1] = 0;
  v86[2] = 0;
  awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_ = (uint64_t)v86;
  v87 = operator new();
  *(_QWORD *)v87 = &off_24D990568;
  *(_QWORD *)(v87 + 8) = 0;
  *(_QWORD *)(v87 + 16) = 0;
  *(_DWORD *)(v87 + 24) = 0;
  *(_QWORD *)(v87 + 32) = 0;
  *(_QWORD *)(v87 + 40) = 0;
  *(_DWORD *)(v87 + 48) = 0;
  *(_QWORD *)(v87 + 56) = 0;
  *(_QWORD *)(v87 + 64) = 0;
  *(_DWORD *)(v87 + 72) = 0;
  awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_ = v87;
  v88 = (_QWORD *)operator new();
  *v88 = &off_24D9905E0;
  v88[1] = 0;
  v88[2] = 0;
  awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_ = (uint64_t)v88;
  v89 = operator new();
  *(_QWORD *)v89 = &off_24D990658;
  *(_QWORD *)(v89 + 8) = v5;
  *(_QWORD *)(v89 + 16) = 0;
  *(_DWORD *)(v89 + 24) = 0;
  awd::metrics::LocationAccessory_MessageHistogram::default_instance_ = v89;
  v90 = operator new();
  *(_QWORD *)v90 = &off_24D9906D0;
  *(_QWORD *)(v90 + 48) = 0;
  *(_QWORD *)(v90 + 56) = 0;
  *(_OWORD *)(v90 + 8) = 0u;
  *(_OWORD *)(v90 + 24) = 0u;
  *(_DWORD *)(v90 + 40) = 0;
  awd::metrics::LocationAccessory_MessageStats::default_instance_ = v90;
  v91 = (_QWORD *)operator new();
  *v91 = &off_24D990748;
  v91[1] = 0;
  v91[2] = 0;
  awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_ = (uint64_t)v91;
  v92 = operator new();
  *(_QWORD *)v92 = &off_24D9907C0;
  *(_QWORD *)(v92 + 8) = v5;
  *(_QWORD *)(v92 + 16) = 0;
  *(_DWORD *)(v92 + 24) = 0;
  awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_ = v92;
  v93 = (_QWORD *)operator new();
  *v93 = &off_24D990838;
  v93[1] = 0;
  v93[2] = 0;
  awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_ = (uint64_t)v93;
  v94 = operator new();
  *(_QWORD *)v94 = &off_24D9908B0;
  *(_QWORD *)(v94 + 8) = 0;
  *(_QWORD *)(v94 + 16) = 0;
  *(_DWORD *)(v94 + 24) = 0;
  *(_QWORD *)(v94 + 32) = 0;
  *(_QWORD *)(v94 + 40) = 0;
  *(_DWORD *)(v94 + 48) = 0;
  *(_QWORD *)(v94 + 56) = 0;
  *(_QWORD *)(v94 + 64) = 0;
  *(_QWORD *)(v94 + 72) = 0;
  *(_DWORD *)(v94 + 80) = 0;
  awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_ = v94;
  v95 = (_QWORD *)operator new();
  *v95 = &off_24D990928;
  v95[1] = 0;
  v95[2] = 0;
  awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_ = (uint64_t)v95;
  v96 = (_QWORD *)operator new();
  *v96 = &off_24D9909A0;
  v96[1] = 0;
  v96[2] = 0;
  awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_ = (uint64_t)v96;
  v97 = operator new();
  *(_QWORD *)v97 = &off_24D990A18;
  *(_QWORD *)(v97 + 8) = 0;
  *(_QWORD *)(v97 + 16) = 0;
  *(_DWORD *)(v97 + 24) = 0;
  *(_QWORD *)(v97 + 32) = 0;
  *(_QWORD *)(v97 + 40) = 0;
  *(_DWORD *)(v97 + 48) = 0;
  *(_QWORD *)(v97 + 56) = 0;
  *(_QWORD *)(v97 + 64) = 0;
  *(_DWORD *)(v97 + 72) = 0;
  awd::metrics::LocationAccessory_PASCDStats::default_instance_ = v97;
  v98 = (_QWORD *)operator new();
  *v98 = &off_24D990A90;
  v98[1] = 0;
  v98[2] = 0;
  v98[3] = 0;
  awd::metrics::LocationAccessory_Coordinate::default_instance_ = (uint64_t)v98;
  v99 = operator new();
  *(_QWORD *)v99 = &off_24D990B80;
  *(_QWORD *)(v99 + 8) = 0;
  *(_QWORD *)(v99 + 16) = v5;
  *(_QWORD *)(v99 + 56) = 0;
  *(_OWORD *)(v99 + 24) = 0u;
  *(_OWORD *)(v99 + 40) = 0u;
  awd::metrics::BaroAltitudeCalibrationInfo::default_instance_ = v99;
  inited = (awd::metrics *)awd::metrics::CompassSession::InitAsDefaultInstance((_QWORD *)awd::metrics::CompassSession::default_instance_);
  v101 = awd::metrics::MotionGyroBiasEstimation::default_instance_;
  v102 = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
  if (awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_)
  {
    *(_QWORD *)(awd::metrics::MotionGyroBiasEstimation::default_instance_ + 16) = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
  }
  else
  {
    inited = (awd::metrics *)awd::metrics::protobuf_AddDesc_Location_2eproto(inited);
    v102 = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
    *(_QWORD *)(v101 + 16) = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
    if (!v102)
    {
      inited = (awd::metrics *)awd::metrics::protobuf_AddDesc_Location_2eproto(inited);
      v102 = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
    }
  }
  *(_QWORD *)(v101 + 24) = v102;
  v103 = awd::metrics::LocationGPSSessionStatistics::default_instance_;
  v104 = awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_)
  {
    inited = (awd::metrics *)awd::metrics::protobuf_AddDesc_Location_2eproto(inited);
    v104 = awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_;
  }
  *(_QWORD *)(v103 + 912) = v104;
  v105 = awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_)
  {
    inited = (awd::metrics *)awd::metrics::protobuf_AddDesc_Location_2eproto(inited);
    v105 = awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_;
  }
  *(_QWORD *)(v103 + 1072) = v105;
  v106 = awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_;
  v107 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_)
  {
    inited = (awd::metrics *)awd::metrics::protobuf_AddDesc_Location_2eproto(inited);
    v107 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_;
  }
  *(_QWORD *)(v106 + 24) = v107;
  v108 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(inited);
    v108 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_;
  }
  *(_QWORD *)(v107 + 32) = v108;
  awd::metrics::LocationMobileAssetStatistics::InitAsDefaultInstance((_QWORD *)awd::metrics::LocationMobileAssetStatistics::default_instance_);
  v109 = (awd::metrics *)awd::metrics::LocationAccessory::InitAsDefaultInstance((_QWORD *)awd::metrics::LocationAccessory::default_instance_);
  v111 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  v112 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    *(_QWORD *)(awd::metrics::LocationAccessory_PerformanceStats::default_instance_ + 80) = awd::metrics::LocationAccessory_Statistics::default_instance_;
    *(_QWORD *)(awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_ + 56) = v112;
LABEL_18:
    v114 = awd::metrics::LocationAccessory_MessageStats::default_instance_;
    goto LABEL_19;
  }
  v109 = (awd::metrics *)awd::metrics::protobuf_AddDesc_Location_2eproto(v109);
  v112 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  *(_QWORD *)(v111 + 80) = awd::metrics::LocationAccessory_Statistics::default_instance_;
  v113 = awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_;
  if (v112)
  {
    *(_QWORD *)(awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_ + 56) = v112;
    goto LABEL_18;
  }
  v109 = (awd::metrics *)awd::metrics::protobuf_AddDesc_Location_2eproto(v109);
  v112 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  *(_QWORD *)(v113 + 56) = awd::metrics::LocationAccessory_Statistics::default_instance_;
  v114 = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  if (!v112)
  {
    v109 = (awd::metrics *)awd::metrics::protobuf_AddDesc_Location_2eproto(v109);
    v112 = awd::metrics::LocationAccessory_Statistics::default_instance_;
    *(_QWORD *)(v114 + 16) = awd::metrics::LocationAccessory_Statistics::default_instance_;
    if (!v112)
    {
      v109 = (awd::metrics *)awd::metrics::protobuf_AddDesc_Location_2eproto(v109);
      v112 = awd::metrics::LocationAccessory_Statistics::default_instance_;
    }
    goto LABEL_20;
  }
LABEL_19:
  *(_QWORD *)(v114 + 16) = v112;
LABEL_20:
  *(_QWORD *)(v114 + 48) = v112;
  v115 = awd::metrics::LocationAccessory_PASCDStats::default_instance_;
  v116 = awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(v109);
    v116 = awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_;
  }
  *(_QWORD *)(v115 + 56) = v116;
  wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)awd::metrics::protobuf_ShutdownFile_Location_2eproto, v110);
}

uint64_t awd::metrics::LocationServicesState::LocationServicesState(uint64_t this)
{
  *(_QWORD *)this = &off_24D98E060;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = MEMORY[0x24BEDD958];
  *(_BYTE *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24D98E060;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = MEMORY[0x24BEDD958];
  *(_BYTE *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t awd::metrics::LocationServicesApproval::LocationServicesApproval(uint64_t this)
{
  uint64_t v1;

  *(_QWORD *)this = &off_24D98E0D8;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_BYTE *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = v1;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 36) = 0;
  return this;
}

{
  uint64_t v1;

  *(_QWORD *)this = &off_24D98E0D8;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_BYTE *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = v1;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 36) = 0;
  return this;
}

double awd::metrics::LocationUpdateSession::LocationUpdateSession(awd::metrics::LocationUpdateSession *this)
{
  uint64_t v1;
  double result;

  *(_QWORD *)this = &off_24D98E150;
  *((_QWORD *)this + 1) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = v1;
  *((_QWORD *)this + 13) = v1;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 15) = v1;
  *((_BYTE *)this + 128) = 0;
  *((_DWORD *)this + 33) = 0;
  *((_DWORD *)this + 34) = 0;
  return result;
}

{
  uint64_t v1;
  double result;

  *(_QWORD *)this = &off_24D98E150;
  *((_QWORD *)this + 1) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = v1;
  *((_QWORD *)this + 13) = v1;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 15) = v1;
  *((_BYTE *)this + 128) = 0;
  *((_DWORD *)this + 33) = 0;
  *((_DWORD *)this + 34) = 0;
  return result;
}

_QWORD *awd::metrics::LocationMonitorSession::LocationMonitorSession(_QWORD *this)
{
  uint64_t v1;

  *this = &off_24D98E1C8;
  this[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  this[5] = 0;
  this[6] = 0;
  this[2] = v1;
  this[3] = 0;
  this[4] = 0;
  return this;
}

{
  uint64_t v1;

  *this = &off_24D98E1C8;
  this[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  this[5] = 0;
  this[6] = 0;
  this[2] = v1;
  this[3] = 0;
  this[4] = 0;
  return this;
}

uint64_t awd::metrics::LocationMonitorTrigger::LocationMonitorTrigger(uint64_t this)
{
  uint64_t v1;

  *(_QWORD *)this = &off_24D98E240;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_DWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 31) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  return this;
}

{
  uint64_t v1;

  *(_QWORD *)this = &off_24D98E240;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_DWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 31) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  return this;
}

double awd::metrics::LocationNetworkQueries::LocationNetworkQueries(awd::metrics::LocationNetworkQueries *this)
{
  double result;

  *(_QWORD *)this = &off_24D98E2B8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 9) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98E2B8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 9) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

uint64_t awd::metrics::LocationWifiUsage::LocationWifiUsage(uint64_t this)
{
  uint64_t v1;

  *(_QWORD *)this = &off_24D98E330;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

{
  uint64_t v1;

  *(_QWORD *)this = &off_24D98E330;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

_QWORD *awd::metrics::LocationEmergencySession::LocationEmergencySession(_QWORD *this)
{
  uint64_t v1;

  *this = &off_24D98E3A8;
  this[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  this[4] = 0;
  this[5] = 0;
  this[2] = v1;
  this[3] = 0;
  return this;
}

{
  uint64_t v1;

  *this = &off_24D98E3A8;
  this[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  this[4] = 0;
  this[5] = 0;
  this[2] = v1;
  this[3] = 0;
  return this;
}

double awd::metrics::LocationEmergencySessionStatistics::LocationEmergencySessionStatistics(awd::metrics::LocationEmergencySessionStatistics *this)
{
  uint64_t v1;
  double result;

  *((_DWORD *)this + 117) = 0;
  *(_QWORD *)this = &off_24D98E420;
  *((_QWORD *)this + 1) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((_QWORD *)this + 35) = v1;
  *((_QWORD *)this + 36) = v1;
  *((_QWORD *)this + 51) = v1;
  *((_QWORD *)this + 52) = 0;
  *((_QWORD *)this + 53) = v1;
  *((_QWORD *)this + 59) = 0;
  *((_QWORD *)this + 60) = 0;
  *((_DWORD *)this + 116) = 0;
  *((_OWORD *)this + 27) = 0u;
  *((_OWORD *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_DWORD *)((char *)this + 343) = 0;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 364) = 0u;
  *(_OWORD *)((char *)this + 380) = 0u;
  *(_OWORD *)((char *)this + 348) = 0u;
  return result;
}

{
  uint64_t v1;
  double result;

  *((_DWORD *)this + 117) = 0;
  *(_QWORD *)this = &off_24D98E420;
  *((_QWORD *)this + 1) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((_QWORD *)this + 35) = v1;
  *((_QWORD *)this + 36) = v1;
  *((_QWORD *)this + 51) = v1;
  *((_QWORD *)this + 52) = 0;
  *((_QWORD *)this + 53) = v1;
  *((_QWORD *)this + 59) = 0;
  *((_QWORD *)this + 60) = 0;
  *((_DWORD *)this + 116) = 0;
  *((_OWORD *)this + 27) = 0u;
  *((_OWORD *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_DWORD *)((char *)this + 343) = 0;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 364) = 0u;
  *(_OWORD *)((char *)this + 380) = 0u;
  *(_OWORD *)((char *)this + 348) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMapMatching::LocationMapMatching(uint64_t this)
{
  *(_QWORD *)this = &off_24D98E498;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24D98E498;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

double awd::metrics::LocationRealTimeHarvest::LocationRealTimeHarvest(awd::metrics::LocationRealTimeHarvest *this)
{
  double result;

  *(_QWORD *)this = &off_24D98E510;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98E510;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double awd::metrics::LocationSecondaryDeviceRequest::LocationSecondaryDeviceRequest(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  double result;

  *(_QWORD *)this = &off_24D98E588;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98E588;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double awd::metrics::CompassSession::CompassSession(awd::metrics::CompassSession *this)
{
  double result;

  *(_QWORD *)this = &off_24D98E678;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_QWORD *)this + 17) = 0xFFFFFFFF00000000;
  *((_QWORD *)this + 18) = 0;
  *(_QWORD *)((char *)this + 212) = 0;
  *(_QWORD *)((char *)this + 204) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((_BYTE *)this + 200) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98E678;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_QWORD *)this + 17) = 0xFFFFFFFF00000000;
  *((_QWORD *)this + 18) = 0;
  *(_QWORD *)((char *)this + 212) = 0;
  *(_QWORD *)((char *)this + 204) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((_BYTE *)this + 200) = 0;
  return result;
}

uint64_t awd::metrics::CompassSession_Rotation::CompassSession_Rotation(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98E600;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98E600;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double awd::metrics::LocationCompassSaturations::LocationCompassSaturations(awd::metrics::LocationCompassSaturations *this)
{
  double result;

  *(_QWORD *)this = &off_24D98E6F0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98E6F0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

uint64_t awd::metrics::MotionState::MotionState(uint64_t this)
{
  *(_QWORD *)this = &off_24D98E768;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = MEMORY[0x24BEDD958];
  *(_DWORD *)(this + 24) = 0;
  *(_BYTE *)(this + 28) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24D98E768;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = MEMORY[0x24BEDD958];
  *(_DWORD *)(this + 24) = 0;
  *(_BYTE *)(this + 28) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::MotionTrigger::MotionTrigger(uint64_t this)
{
  uint64_t v1;

  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)this = &off_24D98E7E0;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

{
  uint64_t v1;

  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)this = &off_24D98E7E0;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

_QWORD *awd::metrics::MotionGyroMiniCal::MotionGyroMiniCal(_QWORD *this)
{
  *this = &off_24D98E858;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_24D98E858;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double awd::metrics::MotionDropDetection::MotionDropDetection(awd::metrics::MotionDropDetection *this)
{
  double result;

  *(_QWORD *)this = &off_24D98E8D0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98E8D0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double awd::metrics::MotionPedometerCalibration::MotionPedometerCalibration(awd::metrics::MotionPedometerCalibration *this)
{
  double result;

  *(_QWORD *)this = &off_24D98E948;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98E948;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double awd::metrics::MotionGyroBiasEstimation::MotionGyroBiasEstimation(awd::metrics::MotionGyroBiasEstimation *this)
{
  double result;

  *(_QWORD *)this = &off_24D98EA38;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 68) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98EA38;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 68) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

double awd::metrics::MotionGyroBiasEstimation_EndCount::MotionGyroBiasEstimation_EndCount(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  double result;

  *(_QWORD *)this = &off_24D98E9C0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98E9C0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double awd::metrics::MotionFitnessSession::MotionFitnessSession(awd::metrics::MotionFitnessSession *this)
{
  uint64_t v1;
  double result;

  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 31) = 0;
  *((_DWORD *)this + 112) = 0;
  *(_QWORD *)this = &off_24D98EAB0;
  *((_QWORD *)this + 1) = 0;
  *((_BYTE *)this + 52) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = v1;
  *(_QWORD *)((char *)this + 460) = 0;
  *(_QWORD *)((char *)this + 452) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 53) = 0u;
  *(_OWORD *)((char *)this + 69) = 0u;
  *(_OWORD *)((char *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 101) = 0u;
  *(_OWORD *)((char *)this + 117) = 0u;
  *(_OWORD *)((char *)this + 133) = 0u;
  *(_OWORD *)((char *)this + 149) = 0u;
  *(_OWORD *)((char *)this + 165) = 0u;
  *(_OWORD *)((char *)this + 181) = 0u;
  *(_OWORD *)((char *)this + 197) = 0u;
  *(_OWORD *)((char *)this + 213) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 365) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  return result;
}

{
  uint64_t v1;
  double result;

  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 31) = 0;
  *((_DWORD *)this + 112) = 0;
  *(_QWORD *)this = &off_24D98EAB0;
  *((_QWORD *)this + 1) = 0;
  *((_BYTE *)this + 52) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = v1;
  *(_QWORD *)((char *)this + 460) = 0;
  *(_QWORD *)((char *)this + 452) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 53) = 0u;
  *(_OWORD *)((char *)this + 69) = 0u;
  *(_OWORD *)((char *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 101) = 0u;
  *(_OWORD *)((char *)this + 117) = 0u;
  *(_OWORD *)((char *)this + 133) = 0u;
  *(_OWORD *)((char *)this + 149) = 0u;
  *(_OWORD *)((char *)this + 165) = 0u;
  *(_OWORD *)((char *)this + 181) = 0u;
  *(_OWORD *)((char *)this + 197) = 0u;
  *(_OWORD *)((char *)this + 213) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 365) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  return result;
}

awd::metrics::MotionFitnessAllDay *awd::metrics::MotionFitnessAllDay::MotionFitnessAllDay(awd::metrics::MotionFitnessAllDay *this)
{
  *(_QWORD *)this = &off_24D98EB28;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *(_OWORD *)((char *)this + 792) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 31) = 0u;
  *((_OWORD *)this + 32) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 45) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((_OWORD *)this + 43) = 0u;
  *((_OWORD *)this + 44) = 0u;
  *((_OWORD *)this + 41) = 0u;
  *((_OWORD *)this + 42) = 0u;
  *((_OWORD *)this + 40) = 0u;
  awd::metrics::MotionFitnessAllDay::SharedCtor(this);
  return this;
}

{
  *(_QWORD *)this = &off_24D98EB28;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *(_OWORD *)((char *)this + 792) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 31) = 0u;
  *((_OWORD *)this + 32) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 45) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((_OWORD *)this + 43) = 0u;
  *((_OWORD *)this + 44) = 0u;
  *((_OWORD *)this + 41) = 0u;
  *((_OWORD *)this + 42) = 0u;
  *((_OWORD *)this + 40) = 0u;
  awd::metrics::MotionFitnessAllDay::SharedCtor(this);
  return this;
}

double awd::metrics::MotionPressureTemperature::MotionPressureTemperature(awd::metrics::MotionPressureTemperature *this)
{
  double result;

  *(_QWORD *)this = &off_24D98EBA0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98EBA0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  return result;
}

double awd::metrics::MotionElevationAllDay::MotionElevationAllDay(awd::metrics::MotionElevationAllDay *this)
{
  double result;

  *(_QWORD *)this = &off_24D98EC18;
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 21) = 0;
  *((_QWORD *)this + 23) = 0;
  *((_QWORD *)this + 24) = 0;
  *((_QWORD *)this + 26) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 32) = 0;
  *((_QWORD *)this + 33) = 0;
  *((_QWORD *)this + 35) = 0;
  *((_QWORD *)this + 36) = 0;
  *((_QWORD *)this + 38) = 0;
  *((_QWORD *)this + 39) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_QWORD *)&result = 255;
  *((_QWORD *)this + 8) = 255;
  *((_DWORD *)this + 81) = 0;
  *((_QWORD *)this + 41) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98EC18;
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 21) = 0;
  *((_QWORD *)this + 23) = 0;
  *((_QWORD *)this + 24) = 0;
  *((_QWORD *)this + 26) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 32) = 0;
  *((_QWORD *)this + 33) = 0;
  *((_QWORD *)this + 35) = 0;
  *((_QWORD *)this + 36) = 0;
  *((_QWORD *)this + 38) = 0;
  *((_QWORD *)this + 39) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_QWORD *)&result = 255;
  *((_QWORD *)this + 8) = 255;
  *((_DWORD *)this + 81) = 0;
  *((_QWORD *)this + 41) = 0;
  return result;
}

double awd::metrics::MotionPressureStats::MotionPressureStats(awd::metrics::MotionPressureStats *this)
{
  double result;

  *(_QWORD *)this = &off_24D98EC90;
  *((_QWORD *)this + 19) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 132) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98EC90;
  *((_QWORD *)this + 19) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 132) = 0u;
  return result;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::MotionNoGPSRunAllDay(uint64_t this)
{
  *(_QWORD *)this = &off_24D98ED08;
  *(_QWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 16) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24D98ED08;
  *(_QWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 16) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double awd::metrics::MotionFitnessDaily::MotionFitnessDaily(awd::metrics::MotionFitnessDaily *this)
{
  uint64_t v1;
  double result;

  *(_QWORD *)this = &off_24D98ED80;
  *((_QWORD *)this + 1) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_QWORD *)this + 3) = v1;
  *((_QWORD *)this + 12) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 44) = 0;
  *((_WORD *)this + 30) = 0;
  result = 0.0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

{
  uint64_t v1;
  double result;

  *(_QWORD *)this = &off_24D98ED80;
  *((_QWORD *)this + 1) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_QWORD *)this + 3) = v1;
  *((_QWORD *)this + 12) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 44) = 0;
  *((_WORD *)this + 30) = 0;
  result = 0.0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

double awd::metrics::MotionFitnessPedometer::MotionFitnessPedometer(awd::metrics::MotionFitnessPedometer *this)
{
  double result;

  *(_QWORD *)this = &off_24D98EDF8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98EDF8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  return result;
}

double awd::metrics::MotionFitnessStrideCalibration::MotionFitnessStrideCalibration(awd::metrics::MotionFitnessStrideCalibration *this)
{
  double result;

  *(_QWORD *)this = &off_24D98EE70;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98EE70;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

_QWORD *awd::metrics::MotionFitnessAccelSampleRate::MotionFitnessAccelSampleRate(_QWORD *this)
{
  *this = &off_24D98EEE8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_24D98EEE8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double awd::metrics::MotionBarometerCalibration::MotionBarometerCalibration(awd::metrics::MotionBarometerCalibration *this)
{
  double result;

  *(_QWORD *)this = &off_24D98EF60;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98EF60;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

uint64_t awd::metrics::MotionGyroDaily::MotionGyroDaily(uint64_t this)
{
  *(_QWORD *)this = &off_24D98EFD8;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24D98EFD8;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double awd::metrics::MotionSOSEvent::MotionSOSEvent(awd::metrics::MotionSOSEvent *this)
{
  double result;

  *(_QWORD *)this = &off_24D98F050;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98F050;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

uint64_t awd::metrics::LocationBatteryState::LocationBatteryState(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F0C8;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F0C8;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

double awd::metrics::LocationNavigationSession::LocationNavigationSession(awd::metrics::LocationNavigationSession *this)
{
  double result;

  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(_QWORD *)this = &off_24D98F140;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_BYTE *)this + 88) = 0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(_QWORD *)this = &off_24D98F140;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_BYTE *)this + 88) = 0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double awd::metrics::LocationMainHarvesterMetrics::LocationMainHarvesterMetrics(awd::metrics::LocationMainHarvesterMetrics *this)
{
  double result;

  *(_QWORD *)this = &off_24D98F1B8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98F1B8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::LocationSubHarvesterUploadAttempt(uint64_t this)
{
  *(_QWORD *)this = &off_24D98F230;
  *(_BYTE *)(this + 8) = 0;
  *(_QWORD *)(this + 20) = 0;
  *(_QWORD *)(this + 12) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24D98F230;
  *(_BYTE *)(this + 8) = 0;
  *(_QWORD *)(this + 20) = 0;
  *(_QWORD *)(this + 12) = 0;
  return this;
}

double awd::metrics::LocationSubHarvesterMetrics::LocationSubHarvesterMetrics(awd::metrics::LocationSubHarvesterMetrics *this)
{
  double result;

  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(_QWORD *)this = &off_24D98F2A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(_QWORD *)this = &off_24D98F2A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double awd::metrics::LocationBeaconMonitorSession::LocationBeaconMonitorSession(awd::metrics::LocationBeaconMonitorSession *this)
{
  uint64_t v1;
  double result;

  *(_QWORD *)this = &off_24D98F320;
  *((_QWORD *)this + 1) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = v1;
  *((_QWORD *)this + 8) = 0;
  result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

{
  uint64_t v1;
  double result;

  *(_QWORD *)this = &off_24D98F320;
  *((_QWORD *)this + 1) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = v1;
  *((_QWORD *)this + 8) = 0;
  result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

_QWORD *awd::metrics::LocationBeaconMonitorTrigger::LocationBeaconMonitorTrigger(_QWORD *this)
{
  uint64_t v1;

  *this = &off_24D98F398;
  this[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  this[2] = MEMORY[0x24BEDD958];
  this[3] = v1;
  this[5] = 0;
  this[6] = 0;
  this[4] = 0;
  return this;
}

{
  uint64_t v1;

  *this = &off_24D98F398;
  this[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  this[2] = MEMORY[0x24BEDD958];
  this[3] = v1;
  this[5] = 0;
  this[6] = 0;
  this[4] = 0;
  return this;
}

_QWORD *awd::metrics::LocationBeaconRangingSession::LocationBeaconRangingSession(_QWORD *this)
{
  uint64_t v1;

  *this = &off_24D98F410;
  this[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  this[6] = 0;
  this[7] = 0;
  this[4] = 0;
  this[5] = 0;
  this[2] = v1;
  this[3] = 0;
  return this;
}

{
  uint64_t v1;

  *this = &off_24D98F410;
  this[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  this[6] = 0;
  this[7] = 0;
  this[4] = 0;
  this[5] = 0;
  this[2] = v1;
  this[3] = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::LocationGPSSessionStatistics_UncertaintyRangeData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F488;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F488;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::LocationGPSSessionStatistics_SatelliteCNORangeData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F500;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F500;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::LocationGPSSessionStatistics_SatelliteCountRangeData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F578;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F578;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::LocationGPSSessionStatistics_MotionActivityData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F5F0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F5F0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::LocationGPSSessionStatistics_SignalEnvironmentData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F668;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F668;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::LocationGPSSessionStatistics_MountedStateData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F6E0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F6E0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::LocationGPSSessionStatistics_MovingStateData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F758;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F758;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::LocationGPSSessionStatistics_PowerStateData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F7D0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F7D0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_ChecksumData::LocationGPSSessionStatistics_ChecksumData(_QWORD *this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *this = &off_24D98F848;
  this[1] = v1;
  this[2] = 0;
  return this;
}

{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *this = &off_24D98F848;
  this[1] = v1;
  this[2] = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::LocationGPSSessionStatistics_DeviceOrientationData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F8C0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F8C0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::LocationGPSSessionStatistics_PowerMeasurementData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F938;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F938;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::LocationGPSSessionStatistics_ChargerTypeData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F9B0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98F9B0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::LocationGPSSessionStatistics_ThermalLevelData(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98FA28;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98FA28;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  double result;

  *(_QWORD *)this = &off_24D98FAA0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98FAA0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo(_QWORD *this)
{
  *this = &off_24D98FB18;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_24D98FB18;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::LocationGPSSessionStatistics_NSForceOffReason(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98FB90;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98FB90;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::LocationGPSSessionStatistics_NSOnOffState(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98FC08;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98FC08;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::LocationGPSSessionStatistics_JammingMetricBucket(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D98FC80;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D98FC80;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::LocationGPSSessionStatistics_JammingMetricDataPerSignal(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98FCF8;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98FCF8;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

double awd::metrics::LocationCellTileUsage::LocationCellTileUsage(awd::metrics::LocationCellTileUsage *this)
{
  double result;

  *(_QWORD *)this = &off_24D98FDE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D98FDE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

_QWORD *awd::metrics::LocationGnssSWRecoveryStatistics::LocationGnssSWRecoveryStatistics(_QWORD *this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *this = &off_24D98FFC8;
  this[1] = 0;
  this[2] = v1;
  this[3] = 0;
  this[4] = 0;
  return this;
}

{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *this = &off_24D98FFC8;
  this[1] = 0;
  this[2] = v1;
  this[3] = 0;
  this[4] = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D98FE60;
  *(_QWORD *)(this + 8) = v1;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D98FE60;
  *(_QWORD *)(this + 8) = v1;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus(uint64_t this)
{
  *(_QWORD *)this = &off_24D98FED8;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 11) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24D98FED8;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 11) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98FF50;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D98FF50;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationVisibilityAssertion::LocationVisibilityAssertion(uint64_t this)
{
  uint64_t v1;

  *(_QWORD *)this = &off_24D990040;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

{
  uint64_t v1;

  *(_QWORD *)this = &off_24D990040;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::LocationPhoneNumberAvailability(uint64_t this)
{
  uint64_t v1;

  *(_QWORD *)this = &off_24D9900B8;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 29) = 0;
  return this;
}

{
  uint64_t v1;

  *(_QWORD *)this = &off_24D9900B8;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 29) = 0;
  return this;
}

double awd::metrics::LocationMobileAssetStatistics::LocationMobileAssetStatistics(awd::metrics::LocationMobileAssetStatistics *this)
{
  double result;

  *(_QWORD *)this = &off_24D9901A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 13) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 54) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D9901A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 13) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 54) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::LocationMobileAssetStatistics_CarrierSettingsStatus(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D990130;
  *(_QWORD *)(this + 8) = v1;
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_BYTE *)(this + 32) = 0;
  return this;
}

{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D990130;
  *(_QWORD *)(this + 8) = v1;
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_BYTE *)(this + 32) = 0;
  return this;
}

double awd::metrics::LocationEmergencyPOIStatistics::LocationEmergencyPOIStatistics(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D990220;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_DWORD *)this + 28) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  return result;
}

{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D990220;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_DWORD *)this + 28) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  return result;
}

_QWORD *awd::metrics::LocationAccessory_ChargingTypeHistogram::LocationAccessory_ChargingTypeHistogram(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D990298;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D990298;
  return this;
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::LocationAccessory_DeviceChargingStats(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D990310;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D990310;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

double awd::metrics::LocationAccessory_Statistics::LocationAccessory_Statistics(awd::metrics::LocationAccessory_Statistics *this)
{
  double result;

  *(_QWORD *)this = &off_24D990388;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D990388;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

_QWORD *awd::metrics::LocationAccessory_PerfRangeHistogram::LocationAccessory_PerfRangeHistogram(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D990400;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D990400;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::LocationAccessory_PerformanceStats(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D990478;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(_QWORD *)(this + 80) = 0;
  *(_QWORD *)(this + 88) = 0;
  *(_DWORD *)(this + 96) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D990478;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(_QWORD *)(this + 80) = 0;
  *(_QWORD *)(this + 88) = 0;
  *(_DWORD *)(this + 96) = 0;
  return this;
}

_QWORD *awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::LocationAccessory_SpeedPerfRangeHistogram(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D9904F0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D9904F0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::LocationAccessory_SpeedPerformanceStats(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D990568;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D990568;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

_QWORD *awd::metrics::LocationAccessory_LatencyRangeHistogram::LocationAccessory_LatencyRangeHistogram(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D9905E0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D9905E0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::LocationAccessory_MessageHistogram(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D990658;
  *(_QWORD *)(this + 8) = v1;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D990658;
  *(_QWORD *)(this + 8) = v1;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double awd::metrics::LocationAccessory_MessageStats::LocationAccessory_MessageStats(awd::metrics::LocationAccessory_MessageStats *this)
{
  double result;

  *(_QWORD *)this = &off_24D9906D0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D9906D0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

_QWORD *awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::LocationAccessory_NMEAScreeningLocTypeHistogram(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D990748;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D990748;
  return this;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::LocationAccessory_LocationAppRunningTime(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D9907C0;
  *(_QWORD *)(this + 8) = v1;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D9907C0;
  *(_QWORD *)(this + 8) = v1;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

_QWORD *awd::metrics::LocationAccessory_NavDynamicsHistogram::LocationAccessory_NavDynamicsHistogram(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D990838;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D990838;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::LocationAccessory_PASCDRavenUsageStats(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D9908B0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 72) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_DWORD *)(this + 80) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D9908B0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 72) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_DWORD *)(this + 80) = 0;
  return this;
}

_QWORD *awd::metrics::LocationAccessory_PASCDTransmissionHistogram::LocationAccessory_PASCDTransmissionHistogram(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D990928;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D990928;
  return this;
}

_QWORD *awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::LocationAccessory_PASCDSampleSizeHistogram(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D9909A0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D9909A0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::LocationAccessory_PASCDStats(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D990A18;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D990A18;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

_QWORD *awd::metrics::LocationAccessory_Coordinate::LocationAccessory_Coordinate(_QWORD *this)
{
  *this = &off_24D990A90;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_24D990A90;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double awd::metrics::BaroAltitudeCalibrationInfo::BaroAltitudeCalibrationInfo(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  double result;

  *(_QWORD *)this = &off_24D990B80;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D990B80;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

_QWORD *awd::metrics::CompassSession::InitAsDefaultInstance(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = this;
  v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  if (awd::metrics::CompassSession_Rotation::default_instance_)
  {
    this[7] = awd::metrics::CompassSession_Rotation::default_instance_;
LABEL_4:
    v1[8] = v2;
LABEL_5:
    v1[9] = v2;
LABEL_6:
    v1[10] = v2;
LABEL_7:
    v1[11] = v2;
    goto LABEL_8;
  }
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  v1[7] = awd::metrics::CompassSession_Rotation::default_instance_;
  if (v2)
    goto LABEL_4;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  v1[8] = awd::metrics::CompassSession_Rotation::default_instance_;
  if (v2)
    goto LABEL_5;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  v1[9] = awd::metrics::CompassSession_Rotation::default_instance_;
  if (v2)
    goto LABEL_6;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  v1[10] = awd::metrics::CompassSession_Rotation::default_instance_;
  if (v2)
    goto LABEL_7;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  v1[11] = awd::metrics::CompassSession_Rotation::default_instance_;
  if (!v2)
  {
    this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  }
LABEL_8:
  v1[12] = v2;
  return this;
}

void awd::metrics::MotionGyroBiasEstimation::InitAsDefaultInstance(awd::metrics::MotionGyroBiasEstimation *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;
  awd::metrics *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;

  v5 = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
  if (awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_)
  {
    *((_QWORD *)this + 2) = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
  }
  else
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
    *((_QWORD *)this + 2) = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
    if (!v5)
    {
      awd::metrics::protobuf_AddDesc_Location_2eproto(v6, v7, v8, v9);
      v5 = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
    }
  }
  *((_QWORD *)this + 3) = v5;
}

void awd::metrics::LocationGPSSessionStatistics::InitAsDefaultInstance(awd::metrics::LocationGPSSessionStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_;
  }
  *((_QWORD *)this + 114) = v5;
  v6 = awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    v6 = awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_;
  }
  *((_QWORD *)this + 134) = v6;
}

void awd::metrics::LocationGnssSWRecoveryStatistics::InitAsDefaultInstance(awd::metrics::LocationGnssSWRecoveryStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;

  v5 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_;
  }
  *((_QWORD *)this + 3) = v5;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::InitAsDefaultInstance(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;

  v5 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_;
  }
  *((_QWORD *)this + 4) = v5;
}

_QWORD *awd::metrics::LocationMobileAssetStatistics::InitAsDefaultInstance(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = this;
  v2 = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  if (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_)
  {
    this[9] = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
LABEL_4:
    v1[10] = v2;
LABEL_5:
    v1[11] = v2;
    goto LABEL_6;
  }
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  v1[9] = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  if (v2)
    goto LABEL_4;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  v1[10] = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  if (v2)
    goto LABEL_5;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  v1[11] = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  if (!v2)
  {
    this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    v2 = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  }
LABEL_6:
  v1[12] = v2;
  return this;
}

_QWORD *awd::metrics::LocationAccessory::InitAsDefaultInstance(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = this;
  v2 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  if (awd::metrics::LocationAccessory_PerformanceStats::default_instance_)
  {
    this[10] = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
LABEL_4:
    v1[11] = v2;
LABEL_5:
    v1[12] = v2;
    goto LABEL_6;
  }
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  v1[10] = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  if (v2)
    goto LABEL_4;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  v1[11] = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  if (v2)
    goto LABEL_5;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  v1[12] = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  if (!v2)
  {
    this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    v2 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  }
LABEL_6:
  v1[13] = v2;
  v3 = awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_;
  if (!awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_)
  {
    this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    v3 = awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_;
  }
  v1[14] = v3;
  v4 = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  if (awd::metrics::LocationAccessory_MessageStats::default_instance_)
  {
    v1[16] = awd::metrics::LocationAccessory_MessageStats::default_instance_;
LABEL_11:
    v1[17] = v4;
    goto LABEL_12;
  }
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v4 = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  v1[16] = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  if (v4)
    goto LABEL_11;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  v4 = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  v1[17] = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  if (!v4)
  {
    this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    v4 = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  }
LABEL_12:
  v1[18] = v4;
  v5 = awd::metrics::LocationAccessory_PASCDStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDStats::default_instance_)
  {
    this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    v5 = awd::metrics::LocationAccessory_PASCDStats::default_instance_;
  }
  v1[19] = v5;
  v6 = awd::metrics::LocationAccessory_Coordinate::default_instance_;
  if (!awd::metrics::LocationAccessory_Coordinate::default_instance_)
  {
    this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    v6 = awd::metrics::LocationAccessory_Coordinate::default_instance_;
  }
  v1[20] = v6;
  v7 = awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_;
  if (!awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_)
  {
    this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    v7 = awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_;
  }
  v1[34] = v7;
  v8 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    v1[35] = awd::metrics::LocationAccessory_Statistics::default_instance_;
  }
  else
  {
    this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    v8 = awd::metrics::LocationAccessory_Statistics::default_instance_;
    v1[35] = awd::metrics::LocationAccessory_Statistics::default_instance_;
    if (!v8)
    {
      this = (_QWORD *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
      v8 = awd::metrics::LocationAccessory_Statistics::default_instance_;
    }
  }
  v1[36] = v8;
  return this;
}

void awd::metrics::LocationAccessory_PerformanceStats::InitAsDefaultInstance(awd::metrics::LocationAccessory_PerformanceStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;

  v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (!awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  }
  *((_QWORD *)this + 10) = v5;
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::InitAsDefaultInstance(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;

  v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (!awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  }
  *((_QWORD *)this + 7) = v5;
}

void awd::metrics::LocationAccessory_MessageStats::InitAsDefaultInstance(awd::metrics::LocationAccessory_MessageStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;
  awd::metrics *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;

  v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    *((_QWORD *)this + 2) = awd::metrics::LocationAccessory_Statistics::default_instance_;
  }
  else
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
    *((_QWORD *)this + 2) = awd::metrics::LocationAccessory_Statistics::default_instance_;
    if (!v5)
    {
      awd::metrics::protobuf_AddDesc_Location_2eproto(v6, v7, v8, v9);
      v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
    }
  }
  *((_QWORD *)this + 6) = v5;
}

void awd::metrics::LocationAccessory_PASCDStats::InitAsDefaultInstance(awd::metrics::LocationAccessory_PASCDStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;

  v5 = awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_;
  }
  *((_QWORD *)this + 7) = v5;
}

BOOL awd::metrics::LocationAuthorizationState_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationSubHarvesterIdentifier_IsValid(awd::metrics *this)
{
  return this < 0xE;
}

uint64_t awd::metrics::LocationServicesState::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_BYTE *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

awd::metrics::LocationServicesState *awd::metrics::LocationServicesState::LocationServicesState(awd::metrics::LocationServicesState *this, const awd::metrics::LocationServicesState *a2)
{
  uint64_t v3;

  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D98E060;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_BYTE *)this + 24) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 7) = 0;
  awd::metrics::LocationServicesState::MergeFrom(this, a2);
  return this;
}

void sub_2189CA04C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationServicesState::MergeFrom(awd::metrics::LocationServicesState *this, const awd::metrics::LocationServicesState *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  const std::string *v7;
  std::string *v8;
  char v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    v8 = (std::string *)*((_QWORD *)this + 2);
    if (v8 == (std::string *)MEMORY[0x24BEDD958])
    {
      v8 = (std::string *)operator new();
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v8;
    }
    std::string::operator=(v8, v7);
    v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_14:
    v9 = *((_BYTE *)a2 + 24);
    *((_DWORD *)this + 9) |= 4u;
    *((_BYTE *)this + 24) = v9;
    if ((*((_DWORD *)a2 + 9) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 9) |= 8u;
    *((_DWORD *)this + 7) = v5;
  }
}

void sub_2189CA194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationServicesState::~LocationServicesState(awd::metrics::LocationServicesState *this)
{
  *(_QWORD *)this = &off_24D98E060;
  awd::metrics::LocationServicesState::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E060;
  awd::metrics::LocationServicesState::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E060;
  awd::metrics::LocationServicesState::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationServicesState::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

uint64_t awd::metrics::LocationServicesState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::LocationServicesState::default_instance(awd::metrics::LocationServicesState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationServicesState::default_instance_;
  if (!awd::metrics::LocationServicesState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationServicesState::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationServicesState::New(awd::metrics::LocationServicesState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_24D98E060;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = MEMORY[0x24BEDD958];
  *(_BYTE *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t awd::metrics::LocationServicesState::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 36);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_BYTE *)(this + 24) = 0;
    *(_DWORD *)(this + 28) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::LocationServicesState::MergePartialFromCodedStream(awd::metrics::LocationServicesState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  char *v12;
  int v13;
  unint64_t v14;
  char *v15;
  unsigned int v16;
  _BYTE *v17;
  _QWORD *v18;
  _BYTE *v19;
  unsigned int v20;
  unsigned __int8 *v21;
  uint64_t result;
  unsigned int v23;
  unsigned int v24;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = MEMORY[0x24BEDD958];
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
LABEL_24:
          *((_DWORD *)this + 9) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 16)
          {
            v12 = v11 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_27:
        v23 = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!(_DWORD)result)
            return result;
          v16 = v23;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v12;
          v17 = v12 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_BYTE *)this + 24) = v16 != 0;
        v13 = *((_DWORD *)this + 9) | 4;
        *((_DWORD *)this + 9) = v13;
        if ((unint64_t)v17 >= v9 || *v17 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_35:
        *((_DWORD *)this + 9) = v13 | 2;
        if (*((_QWORD *)this + 2) == v5)
        {
          v18 = (_QWORD *)operator new();
          v18[1] = 0;
          v18[2] = 0;
          *v18 = 0;
          *((_QWORD *)this + 2) = v18;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v19 >= v14 || *v19 != 32)
          continue;
        v15 = v19 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_41:
        v24 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v20 = v24;
          v21 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v20 = *v15;
          v21 = (unsigned __int8 *)(v15 + 1);
          *((_QWORD *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 7) = v20;
        *((_DWORD *)this + 9) |= 8u;
        if (v21 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_18;
        v13 = *((_DWORD *)this + 9);
        goto LABEL_35;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_41;
      default:
        v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationServicesState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if ((*(_DWORD *)(v5 + 36) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationServicesState::ByteSize(awd::metrics::LocationServicesState *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_26;
  }
  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 1))
                + 1;
    v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0)
      goto LABEL_16;
LABEL_7:
    v4 = *((_QWORD *)this + 2);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 8);
    if ((v5 & 0x80u) == 0)
      v8 = *(unsigned __int8 *)(v4 + 23);
    else
      v8 = v7;
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v7 = *(_QWORD *)(v4 + 8);
      v2 = *((_DWORD *)this + 9);
      v6 = *(_BYTE *)(v4 + 23);
    }
    else
    {
      v9 = 1;
    }
    if (v6 < 0)
      v5 = v7;
    LODWORD(v3) = v3 + v9 + v5 + 1;
    goto LABEL_16;
  }
  LODWORD(v3) = 0;
  if ((*((_BYTE *)this + 36) & 2) != 0)
    goto LABEL_7;
LABEL_16:
  if ((v2 & 4) != 0)
    v3 = (v3 + 2);
  else
    v3 = v3;
  if ((v2 & 8) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    }
    else
    {
      v11 = 2;
    }
    v3 = (v11 + v3);
  }
LABEL_26:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void awd::metrics::LocationServicesState::CheckTypeAndMergeFrom(awd::metrics::LocationServicesState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationServicesState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationServicesState::CopyFrom(awd::metrics::LocationServicesState *this, const awd::metrics::LocationServicesState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationServicesState *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationServicesState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationServicesState::IsInitialized(awd::metrics::LocationServicesState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationServicesState::Swap(uint64_t this, awd::metrics::LocationServicesState *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationServicesState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LOBYTE(v2) = *(_BYTE *)(this + 24);
    *(_BYTE *)(this + 24) = *((_BYTE *)a2 + 24);
    *((_BYTE *)a2 + 24) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationServicesState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationServicesState");
}

uint64_t awd::metrics::LocationServicesApproval::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_BYTE *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = v1;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 36) = 0;
  return this;
}

awd::metrics::LocationServicesApproval *awd::metrics::LocationServicesApproval::LocationServicesApproval(awd::metrics::LocationServicesApproval *this, const awd::metrics::LocationServicesApproval *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_24D98E0D8;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_BYTE *)this + 32) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_QWORD *)this + 3) = v3;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 9) = 0;
  awd::metrics::LocationServicesApproval::MergeFrom(this, a2);
  return this;
}

void sub_2189CA978(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationServicesApproval::MergeFrom(awd::metrics::LocationServicesApproval *this, const awd::metrics::LocationServicesApproval *a2)
{
  int v4;
  uint64_t v5;
  std::string *v6;
  int v7;
  const std::string *v8;
  std::string *v9;
  char v10;
  const std::string *v11;
  std::string *v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 44);
  if (!(_BYTE)v4)
    return;
  if ((*((_BYTE *)a2 + 44) & 1) != 0)
  {
    v5 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 11) |= 1u;
    *((_QWORD *)this + 1) = v5;
    v4 = *((_DWORD *)a2 + 11);
  }
  v6 = (std::string *)MEMORY[0x24BEDD958];
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0)
      goto LABEL_8;
LABEL_15:
    v10 = *((_BYTE *)a2 + 32);
    *((_DWORD *)this + 11) |= 4u;
    *((_BYTE *)this + 32) = v10;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_9:
      if ((v4 & 0x10) == 0)
        return;
      goto LABEL_10;
    }
    goto LABEL_16;
  }
  v8 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 11) |= 2u;
  v9 = (std::string *)*((_QWORD *)this + 2);
  if (v9 == v6)
  {
    v9 = (std::string *)operator new();
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v9;
  }
  std::string::operator=(v9, v8);
  v4 = *((_DWORD *)a2 + 11);
  if ((v4 & 4) != 0)
    goto LABEL_15;
LABEL_8:
  if ((v4 & 8) == 0)
    goto LABEL_9;
LABEL_16:
  v11 = (const std::string *)*((_QWORD *)a2 + 3);
  *((_DWORD *)this + 11) |= 8u;
  v12 = (std::string *)*((_QWORD *)this + 3);
  if (v12 == v6)
  {
    v12 = (std::string *)operator new();
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 3) = v12;
  }
  std::string::operator=(v12, v11);
  if ((*((_DWORD *)a2 + 11) & 0x10) != 0)
  {
LABEL_10:
    v7 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 11) |= 0x10u;
    *((_DWORD *)this + 9) = v7;
  }
}

void sub_2189CAB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationServicesApproval::~LocationServicesApproval(awd::metrics::LocationServicesApproval *this)
{
  *(_QWORD *)this = &off_24D98E0D8;
  awd::metrics::LocationServicesApproval::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E0D8;
  awd::metrics::LocationServicesApproval::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E0D8;
  awd::metrics::LocationServicesApproval::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationServicesApproval::SharedDtor(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = this;
  v2 = *(_QWORD *)(this + 16);
  v3 = MEMORY[0x24BEDD958];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  v5 = *(_QWORD *)(v1 + 24);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationServicesApproval::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationServicesApproval::default_instance(awd::metrics::LocationServicesApproval *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationServicesApproval::default_instance_;
  if (!awd::metrics::LocationServicesApproval::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationServicesApproval::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationServicesApproval::New(awd::metrics::LocationServicesApproval *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  *(_QWORD *)result = &off_24D98E0D8;
  *(_QWORD *)(result + 8) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_BYTE *)(result + 32) = 0;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v2;
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t awd::metrics::LocationServicesApproval::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_BYTE *)(this + 44);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    v2 = MEMORY[0x24BEDD958];
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *(_BYTE *)(this + 32) = 0;
    if ((*(_BYTE *)(this + 44) & 8) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 36) = 0;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationServicesApproval::MergePartialFromCodedStream(awd::metrics::LocationServicesApproval *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  uint64_t v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  int v13;
  unint64_t v14;
  char *v15;
  int v16;
  unint64_t v17;
  char *v18;
  _QWORD *v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE *v22;
  _QWORD *v23;
  _BYTE *v24;
  unsigned __int8 *v25;
  uint64_t result;
  unsigned int v27;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 36);
  v6 = MEMORY[0x24BEDD958];
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
LABEL_26:
          v13 = *((_DWORD *)this + 11) | 1;
          *((_DWORD *)this + 11) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((_QWORD *)a2 + 1) = v12 + 1;
            goto LABEL_29;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_20;
        v13 = *((_DWORD *)this + 11);
LABEL_29:
        *((_DWORD *)this + 11) = v13 | 2;
        if (*((_QWORD *)this + 2) == v6)
        {
          v19 = (_QWORD *)operator new();
          v19[1] = 0;
          v19[2] = 0;
          *v19 = 0;
          *((_QWORD *)this + 2) = v19;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v20 >= v14 || *v20 != 24)
          continue;
        v15 = v20 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_35:
        v27 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
          if (!(_DWORD)result)
            return result;
          v21 = v27;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v21 = *v15;
          v22 = v15 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_BYTE *)this + 32) = v21 != 0;
        v16 = *((_DWORD *)this + 11) | 4;
        *((_DWORD *)this + 11) = v16;
        if ((unint64_t)v22 >= v14 || *v22 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_43:
        *((_DWORD *)this + 11) = v16 | 8;
        if (*((_QWORD *)this + 3) == v6)
        {
          v23 = (_QWORD *)operator new();
          v23[1] = 0;
          v23[2] = 0;
          *v23 = 0;
          *((_QWORD *)this + 3) = v23;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v17 || *v24 != 40)
          continue;
        v18 = v24 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_49:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v25 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v17 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v18;
          v25 = (unsigned __int8 *)(v18 + 1);
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 11) |= 0x10u;
        if (v25 != (unsigned __int8 *)v17 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_35;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_20;
        v16 = *((_DWORD *)this + 11);
        goto LABEL_43;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_49;
      default:
        v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationServicesApproval::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if ((*(_DWORD *)(v5 + 44) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationServicesApproval::ByteSize(awd::metrics::LocationServicesApproval *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_34;
  }
  if ((*((_BYTE *)this + 44) & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((*((_BYTE *)this + 44) & 2) == 0)
      goto LABEL_16;
LABEL_7:
    v4 = *((_QWORD *)this + 2);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 8);
    if ((v5 & 0x80u) == 0)
      v8 = *(unsigned __int8 *)(v4 + 23);
    else
      v8 = v7;
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v7 = *(_QWORD *)(v4 + 8);
      v2 = *((_DWORD *)this + 11);
      v6 = *(_BYTE *)(v4 + 23);
    }
    else
    {
      v9 = 1;
    }
    if (v6 < 0)
      v5 = v7;
    LODWORD(v3) = v3 + v9 + v5 + 1;
    goto LABEL_16;
  }
  LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                            + 1))
              + 1;
  v2 = *((_DWORD *)this + 11);
  if ((v2 & 2) != 0)
    goto LABEL_7;
LABEL_16:
  if ((v2 & 4) != 0)
    v3 = (v3 + 2);
  else
    v3 = v3;
  if ((v2 & 8) != 0)
  {
    v10 = *((_QWORD *)this + 3);
    v11 = *(unsigned __int8 *)(v10 + 23);
    v12 = v11;
    v13 = *(_QWORD *)(v10 + 8);
    if ((v11 & 0x80u) == 0)
      v14 = *(unsigned __int8 *)(v10 + 23);
    else
      v14 = v13;
    if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14);
      v11 = *(unsigned __int8 *)(v10 + 23);
      v13 = *(_QWORD *)(v10 + 8);
      v2 = *((_DWORD *)this + 11);
      v12 = *(_BYTE *)(v10 + 23);
    }
    else
    {
      v15 = 1;
    }
    if (v12 < 0)
      v11 = v13;
    v3 = (v3 + v15 + v11 + 1);
  }
  if ((v2 & 0x10) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v16 >= 0x80)
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    else
      v17 = 2;
    v3 = (v17 + v3);
  }
LABEL_34:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void awd::metrics::LocationServicesApproval::CheckTypeAndMergeFrom(awd::metrics::LocationServicesApproval *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationServicesApproval::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationServicesApproval::CopyFrom(awd::metrics::LocationServicesApproval *this, const awd::metrics::LocationServicesApproval *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationServicesApproval *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationServicesApproval::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationServicesApproval::IsInitialized(awd::metrics::LocationServicesApproval *this)
{
  return 1;
}

uint64_t awd::metrics::LocationServicesApproval::Swap(uint64_t this, awd::metrics::LocationServicesApproval *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (awd::metrics::LocationServicesApproval *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LOBYTE(v2) = *(_BYTE *)(this + 32);
    *(_BYTE *)(this + 32) = *((_BYTE *)a2 + 32);
    *((_BYTE *)a2 + 32) = v2;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationServicesApproval::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationServicesApproval");
}

double awd::metrics::LocationUpdateSession::SharedCtor(awd::metrics::LocationUpdateSession *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 12) = v1;
  *((_QWORD *)this + 13) = v1;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 15) = v1;
  *((_BYTE *)this + 128) = 0;
  *((_DWORD *)this + 33) = 0;
  *((_DWORD *)this + 34) = 0;
  return result;
}

awd::metrics::LocationUpdateSession *awd::metrics::LocationUpdateSession::LocationUpdateSession(awd::metrics::LocationUpdateSession *this, const awd::metrics::LocationUpdateSession *a2)
{
  uint64_t v3;

  *((_QWORD *)this + 10) = 0;
  *(_QWORD *)this = &off_24D98E150;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 9) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = v3;
  *((_QWORD *)this + 13) = v3;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 15) = v3;
  *((_BYTE *)this + 128) = 0;
  *((_DWORD *)this + 33) = 0;
  *((_DWORD *)this + 34) = 0;
  awd::metrics::LocationUpdateSession::MergeFrom(this, a2);
  return this;
}

void sub_2189CB4A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = v2;
  if (*v3)
    MEMORY[0x219A1DC64](*v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationUpdateSession::MergeFrom(awd::metrics::LocationUpdateSession *this, const awd::metrics::LocationUpdateSession *a2)
{
  int v4;
  unsigned int v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  const std::string *v11;
  std::string *v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  int v19;
  int v20;
  int v21;
  char v22;
  int v23;
  char v24;
  char v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  const std::string *v31;
  std::string *v32;
  const std::string *v33;
  std::string *v34;
  const std::string *v35;
  std::string *v36;
  char v37;
  char v38;
  char v39;
  _BYTE v40[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v40);
  }
  v4 = *((_DWORD *)a2 + 22);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((_DWORD *)this + 20, *((_DWORD *)this + 22) + v4);
    memcpy((void *)(*((_QWORD *)this + 10) + 4 * *((int *)this + 22)), *((const void **)a2 + 10), 4 * *((int *)a2 + 22));
    *((_DWORD *)this + 22) += *((_DWORD *)a2 + 22);
  }
  v5 = *((_DWORD *)a2 + 34);
  if (!(_BYTE)v5)
    goto LABEL_15;
  if ((v5 & 1) != 0)
  {
    v10 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 34) |= 1u;
    *((_QWORD *)this + 1) = v10;
    v5 = *((_DWORD *)a2 + 34);
    if ((v5 & 2) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0)
        goto LABEL_9;
      goto LABEL_48;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_8;
  }
  v11 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 34) |= 2u;
  v12 = (std::string *)*((_QWORD *)this + 2);
  if (v12 == (std::string *)MEMORY[0x24BEDD958])
  {
    v12 = (std::string *)operator new();
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v12;
  }
  std::string::operator=(v12, v11);
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0)
      goto LABEL_10;
    goto LABEL_49;
  }
LABEL_48:
  v13 = *((_QWORD *)a2 + 3);
  *((_DWORD *)this + 34) |= 4u;
  *((_QWORD *)this + 3) = v13;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_50;
  }
LABEL_49:
  v14 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 34) |= 8u;
  *((_DWORD *)this + 8) = v14;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0)
      goto LABEL_12;
LABEL_51:
    v16 = *((_BYTE *)a2 + 40);
    *((_DWORD *)this + 34) |= 0x20u;
    *((_BYTE *)this + 40) = v16;
    v5 = *((_DWORD *)a2 + 34);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0)
        goto LABEL_15;
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_50:
  v15 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 34) |= 0x10u;
  *((_DWORD *)this + 9) = v15;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x20) != 0)
    goto LABEL_51;
LABEL_12:
  if ((v5 & 0x40) == 0)
    goto LABEL_13;
LABEL_52:
  v17 = *((_BYTE *)a2 + 41);
  *((_DWORD *)this + 34) |= 0x40u;
  *((_BYTE *)this + 41) = v17;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    v6 = *((_BYTE *)a2 + 42);
    *((_DWORD *)this + 34) |= 0x80u;
    *((_BYTE *)this + 42) = v6;
    v5 = *((_DWORD *)a2 + 34);
  }
LABEL_15:
  if ((v5 & 0xFF00) == 0)
    goto LABEL_25;
  if ((v5 & 0x100) != 0)
  {
    v18 = *((_BYTE *)a2 + 43);
    *((_DWORD *)this + 34) |= 0x100u;
    *((_BYTE *)this + 43) = v18;
    v5 = *((_DWORD *)a2 + 34);
    if ((v5 & 0x200) == 0)
    {
LABEL_18:
      if ((v5 & 0x400) == 0)
        goto LABEL_19;
      goto LABEL_56;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  v19 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 34) |= 0x200u;
  *((_DWORD *)this + 11) = v19;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x400) == 0)
  {
LABEL_19:
    if ((v5 & 0x800) == 0)
      goto LABEL_20;
    goto LABEL_57;
  }
LABEL_56:
  v20 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 34) |= 0x400u;
  *((_DWORD *)this + 12) = v20;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x800) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0)
      goto LABEL_21;
    goto LABEL_58;
  }
LABEL_57:
  v21 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 34) |= 0x800u;
  *((_DWORD *)this + 13) = v21;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x1000) == 0)
  {
LABEL_21:
    if ((v5 & 0x2000) == 0)
      goto LABEL_22;
    goto LABEL_59;
  }
LABEL_58:
  v22 = *((_BYTE *)a2 + 60);
  *((_DWORD *)this + 34) |= 0x1000u;
  *((_BYTE *)this + 60) = v22;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x2000) == 0)
  {
LABEL_22:
    if ((v5 & 0x4000) == 0)
      goto LABEL_23;
    goto LABEL_60;
  }
LABEL_59:
  v23 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 34) |= 0x2000u;
  *((_DWORD *)this + 14) = v23;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x4000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000) == 0)
      goto LABEL_25;
    goto LABEL_24;
  }
LABEL_60:
  v24 = *((_BYTE *)a2 + 61);
  *((_DWORD *)this + 34) |= 0x4000u;
  *((_BYTE *)this + 61) = v24;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x8000) != 0)
  {
LABEL_24:
    v7 = *((_BYTE *)a2 + 62);
    *((_DWORD *)this + 34) |= 0x8000u;
    *((_BYTE *)this + 62) = v7;
    v5 = *((_DWORD *)a2 + 34);
  }
LABEL_25:
  if ((v5 & 0xFF0000) == 0)
    goto LABEL_34;
  if ((v5 & 0x10000) != 0)
  {
    v25 = *((_BYTE *)a2 + 63);
    *((_DWORD *)this + 34) |= 0x10000u;
    *((_BYTE *)this + 63) = v25;
    v5 = *((_DWORD *)a2 + 34);
    if ((v5 & 0x20000) == 0)
    {
LABEL_28:
      if ((v5 & 0x40000) == 0)
        goto LABEL_29;
      goto LABEL_64;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_28;
  }
  v26 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 34) |= 0x20000u;
  *((_DWORD *)this + 16) = v26;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x40000) == 0)
  {
LABEL_29:
    if ((v5 & 0x80000) == 0)
      goto LABEL_30;
    goto LABEL_65;
  }
LABEL_64:
  v27 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 34) |= 0x40000u;
  *((_DWORD *)this + 17) = v27;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x80000) == 0)
  {
LABEL_30:
    if ((v5 & 0x100000) == 0)
      goto LABEL_31;
    goto LABEL_66;
  }
LABEL_65:
  v28 = *((_DWORD *)a2 + 18);
  *((_DWORD *)this + 34) |= 0x80000u;
  *((_DWORD *)this + 18) = v28;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x100000) == 0)
  {
LABEL_31:
    if ((v5 & 0x200000) == 0)
      goto LABEL_32;
    goto LABEL_67;
  }
LABEL_66:
  v29 = *((_DWORD *)a2 + 19);
  *((_DWORD *)this + 34) |= 0x100000u;
  *((_DWORD *)this + 19) = v29;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x200000) == 0)
  {
LABEL_32:
    if ((v5 & 0x400000) == 0)
      goto LABEL_34;
    goto LABEL_33;
  }
LABEL_67:
  v30 = *((_DWORD *)a2 + 28);
  *((_DWORD *)this + 34) |= 0x200000u;
  *((_DWORD *)this + 28) = v30;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x400000) != 0)
  {
LABEL_33:
    v8 = *((_BYTE *)a2 + 116);
    *((_DWORD *)this + 34) |= 0x400000u;
    *((_BYTE *)this + 116) = v8;
    v5 = *((_DWORD *)a2 + 34);
  }
LABEL_34:
  if (!HIBYTE(v5))
    return;
  if ((v5 & 0x1000000) != 0)
  {
    v31 = (const std::string *)*((_QWORD *)a2 + 12);
    *((_DWORD *)this + 34) |= 0x1000000u;
    v32 = (std::string *)*((_QWORD *)this + 12);
    if (v32 == (std::string *)MEMORY[0x24BEDD958])
    {
      v32 = (std::string *)operator new();
      v32->__r_.__value_.__l.__size_ = 0;
      v32->__r_.__value_.__r.__words[2] = 0;
      v32->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 12) = v32;
    }
    std::string::operator=(v32, v31);
    v5 = *((_DWORD *)a2 + 34);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_37:
      if ((v5 & 0x4000000) == 0)
        goto LABEL_38;
      goto LABEL_75;
    }
  }
  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_37;
  }
  v33 = (const std::string *)*((_QWORD *)a2 + 13);
  *((_DWORD *)this + 34) |= 0x2000000u;
  v34 = (std::string *)*((_QWORD *)this + 13);
  if (v34 == (std::string *)MEMORY[0x24BEDD958])
  {
    v34 = (std::string *)operator new();
    v34->__r_.__value_.__l.__size_ = 0;
    v34->__r_.__value_.__r.__words[2] = 0;
    v34->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 13) = v34;
  }
  std::string::operator=(v34, v33);
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x8000000) == 0)
      goto LABEL_39;
    goto LABEL_78;
  }
LABEL_75:
  v35 = (const std::string *)*((_QWORD *)a2 + 15);
  *((_DWORD *)this + 34) |= 0x4000000u;
  v36 = (std::string *)*((_QWORD *)this + 15);
  if (v36 == (std::string *)MEMORY[0x24BEDD958])
  {
    v36 = (std::string *)operator new();
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 15) = v36;
  }
  std::string::operator=(v36, v35);
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x10000000) == 0)
      goto LABEL_40;
    goto LABEL_79;
  }
LABEL_78:
  v37 = *((_BYTE *)a2 + 117);
  *((_DWORD *)this + 34) |= 0x8000000u;
  *((_BYTE *)this + 117) = v37;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x20000000) == 0)
      goto LABEL_41;
    goto LABEL_80;
  }
LABEL_79:
  v38 = *((_BYTE *)a2 + 118);
  *((_DWORD *)this + 34) |= 0x10000000u;
  *((_BYTE *)this + 118) = v38;
  v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x40000000) == 0)
      return;
    goto LABEL_42;
  }
LABEL_80:
  v39 = *((_BYTE *)a2 + 119);
  *((_DWORD *)this + 34) |= 0x20000000u;
  *((_BYTE *)this + 119) = v39;
  if ((*((_DWORD *)a2 + 34) & 0x40000000) == 0)
    return;
LABEL_42:
  v9 = *((_BYTE *)a2 + 128);
  *((_DWORD *)this + 34) |= 0x40000000u;
  *((_BYTE *)this + 128) = v9;
}

void sub_2189CBA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationUpdateSession::~LocationUpdateSession(awd::metrics::LocationUpdateSession *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D98E150;
  awd::metrics::LocationUpdateSession::SharedDtor(this);
  v2 = *((_QWORD *)this + 10);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationUpdateSession::~LocationUpdateSession(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationUpdateSession::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;

  v1 = this;
  v2 = this[2];
  v3 = MEMORY[0x24BEDD958];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  v5 = v1[12];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v5, 0x1012C40EC159624);
  }
  v7 = v1[13];
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v7, 0x1012C40EC159624);
  }
  v9 = v1[15];
  if (v9 != v3 && v9 != 0)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationUpdateSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 132) = a2;
  return this;
}

uint64_t awd::metrics::LocationUpdateSession::default_instance(awd::metrics::LocationUpdateSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationUpdateSession::default_instance_;
  if (!awd::metrics::LocationUpdateSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationUpdateSession::default_instance_;
  }
  return result;
}

double awd::metrics::LocationUpdateSession::New(awd::metrics::LocationUpdateSession *this)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98E150;
  *(_QWORD *)(v1 + 8) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 80) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v2;
  *(_QWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = v2;
  *(_BYTE *)(v1 + 128) = 0;
  *(_DWORD *)(v1 + 132) = 0;
  *(_DWORD *)(v1 + 136) = 0;
  return result;
}

uint64_t awd::metrics::LocationUpdateSession::Clear(uint64_t this)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_DWORD *)(this + 136);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_DWORD *)(this + 39) = 0;
    v1 = *(_DWORD *)(this + 136);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 51) = 0;
    *(_QWORD *)(this + 43) = 0;
    *(_DWORD *)(this + 59) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 112) = 0;
    *(_BYTE *)(this + 116) = 0;
    *(_QWORD *)(this + 71) = 0;
    *(_QWORD *)(this + 63) = 0;
    *(_BYTE *)(this + 79) = 0;
  }
  if (HIBYTE(v1))
  {
    if ((v1 & 0x1000000) != 0)
    {
      v3 = *(_QWORD *)(this + 96);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 139) & 2) != 0)
    {
      v4 = *(_QWORD *)(this + 104);
      if (v4 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 139) & 4) != 0)
    {
      v5 = *(_QWORD *)(this + 120);
      if (v5 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    *(_WORD *)(this + 117) = 0;
    *(_BYTE *)(this + 119) = 0;
    *(_BYTE *)(this + 128) = 0;
  }
  *(_DWORD *)(this + 88) = 0;
  *(_DWORD *)(this + 136) = 0;
  return this;
}

uint64_t awd::metrics::LocationUpdateSession::MergePartialFromCodedStream(awd::metrics::LocationUpdateSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  int v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  char *v36;
  unint64_t v37;
  unsigned __int8 *v38;
  unsigned __int8 *v39;
  unsigned __int8 *v40;
  char *v41;
  _BYTE *v42;
  unsigned int v43;
  _BYTE *v44;
  unsigned int v45;
  _BYTE *v46;
  unsigned int v47;
  _BYTE *v48;
  unsigned int v49;
  _BYTE *v50;
  unsigned int v51;
  _BYTE *v52;
  unsigned int v53;
  _BYTE *v54;
  unsigned int v55;
  _BYTE *v56;
  _QWORD *v57;
  _BYTE *v58;
  unsigned int v59;
  _BYTE *v60;
  unsigned int v61;
  _BYTE *v62;
  unsigned int v63;
  _BYTE *v64;
  unsigned int v65;
  unsigned __int8 *v66;
  unsigned int v67;
  unsigned __int8 *v68;
  unsigned int v69;
  unsigned __int8 *v70;
  unsigned int v71;
  unsigned __int8 *v72;
  unsigned int v73;
  unsigned __int8 *v74;
  unsigned int v75;
  unsigned __int8 *v76;
  unsigned int v77;
  unsigned __int8 *v78;
  unsigned int v79;
  unsigned __int8 *v80;
  unsigned int v81;
  unsigned __int8 *v82;
  unsigned int v83;
  unsigned __int8 *v84;
  unsigned int v85;
  int v86;
  uint64_t v87;
  int v88;
  int v89;
  unsigned __int8 *v90;
  unint64_t v91;
  unsigned int v92;
  int v93;
  uint64_t v94;
  int v95;
  _QWORD *v96;
  unsigned __int8 *v97;
  _QWORD *v98;
  unsigned __int8 *v99;
  _QWORD *v100;
  unsigned __int8 *v101;
  unsigned int v102;
  unsigned __int8 *v103;
  unsigned int v104;
  unsigned __int8 *v105;
  unsigned int v106;
  unsigned __int8 *v107;
  unsigned int v108;
  unsigned __int8 *v109;
  uint64_t result;
  unsigned int v111[12];

  v4 = (_DWORD *)((char *)this + 80);
  v5 = (unint64_t *)((char *)this + 8);
  v6 = (unint64_t *)((char *)this + 24);
LABEL_2:
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 34) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_84;
        }
        continue;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_84:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v42 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v13;
          v42 = v13 + 1;
          *((_QWORD *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 34) |= 4u;
        if ((unint64_t)v42 >= v10 || *v42 != 24)
          continue;
        v14 = v42 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_92:
        v111[0] = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v43 = v111[0];
          v44 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v43 = *v14;
          v44 = v14 + 1;
          *((_QWORD *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 8) = v43;
        *((_DWORD *)this + 34) |= 8u;
        if ((unint64_t)v44 >= v10 || *v44 != 32)
          continue;
        v15 = v44 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_100:
        v111[0] = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v45 = v111[0];
          v46 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v45 = *v15;
          v46 = v15 + 1;
          *((_QWORD *)a2 + 1) = v46;
        }
        *((_BYTE *)this + 40) = v45 != 0;
        *((_DWORD *)this + 34) |= 0x20u;
        if ((unint64_t)v46 >= v10 || *v46 != 40)
          continue;
        v16 = v46 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_108:
        v111[0] = 0;
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v47 = v111[0];
          v48 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v47 = *v16;
          v48 = v16 + 1;
          *((_QWORD *)a2 + 1) = v48;
        }
        *((_BYTE *)this + 41) = v47 != 0;
        *((_DWORD *)this + 34) |= 0x40u;
        if ((unint64_t)v48 >= v10 || *v48 != 48)
          continue;
        v17 = v48 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_116:
        v111[0] = 0;
        if ((unint64_t)v17 >= v10 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v49 = v111[0];
          v50 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v49 = *v17;
          v50 = v17 + 1;
          *((_QWORD *)a2 + 1) = v50;
        }
        *((_BYTE *)this + 42) = v49 != 0;
        *((_DWORD *)this + 34) |= 0x80u;
        if ((unint64_t)v50 >= v10 || *v50 != 56)
          continue;
        v18 = v50 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_124:
        v111[0] = 0;
        if ((unint64_t)v18 >= v10 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v51 = v111[0];
          v52 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v51 = *v18;
          v52 = v18 + 1;
          *((_QWORD *)a2 + 1) = v52;
        }
        *((_BYTE *)this + 43) = v51 != 0;
        *((_DWORD *)this + 34) |= 0x100u;
        if ((unint64_t)v52 >= v10 || *v52 != 64)
          continue;
        v19 = v52 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_132:
        v111[0] = 0;
        if ((unint64_t)v19 >= v10 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v53 = v111[0];
          v54 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v53 = *v19;
          v54 = v19 + 1;
          *((_QWORD *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 11) = v53;
        *((_DWORD *)this + 34) |= 0x200u;
        if ((unint64_t)v54 >= v10 || *v54 != 72)
          continue;
        v20 = v54 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_140:
        v111[0] = 0;
        if ((unint64_t)v20 >= v10 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v55 = v111[0];
          v56 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v55 = *v20;
          v56 = v20 + 1;
          *((_QWORD *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 12) = v55;
        v21 = *((_DWORD *)this + 34) | 0x400;
        *((_DWORD *)this + 34) = v21;
        if ((unint64_t)v56 >= v10 || *v56 != 82)
          continue;
        *((_QWORD *)a2 + 1) = v56 + 1;
LABEL_148:
        *((_DWORD *)this + 34) = v21 | 2;
        if (*((_QWORD *)this + 2) == MEMORY[0x24BEDD958])
        {
          v57 = (_QWORD *)operator new();
          v57[1] = 0;
          v57[2] = 0;
          *v57 = 0;
          *((_QWORD *)this + 2) = v57;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v58 = (_BYTE *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v58 >= v22 || *v58 != 96)
          continue;
        v23 = v58 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_154:
        v111[0] = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v59 = v111[0];
          v60 = (_BYTE *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v59 = *v23;
          v60 = v23 + 1;
          *((_QWORD *)a2 + 1) = v60;
        }
        *((_DWORD *)this + 9) = v59;
        *((_DWORD *)this + 34) |= 0x10u;
        if ((unint64_t)v60 >= v22 || *v60 != 104)
          continue;
        v24 = v60 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_162:
        v111[0] = 0;
        if ((unint64_t)v24 >= v22 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v61 = v111[0];
          v62 = (_BYTE *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v61 = *v24;
          v62 = v24 + 1;
          *((_QWORD *)a2 + 1) = v62;
        }
        *((_DWORD *)this + 13) = v61;
        *((_DWORD *)this + 34) |= 0x800u;
        if ((unint64_t)v62 >= v22 || *v62 != 112)
          continue;
        v25 = v62 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_170:
        v111[0] = 0;
        if ((unint64_t)v25 >= v22 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v63 = v111[0];
          v64 = (_BYTE *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v63 = *v25;
          v64 = v25 + 1;
          *((_QWORD *)a2 + 1) = v64;
        }
        *((_BYTE *)this + 60) = v63 != 0;
        *((_DWORD *)this + 34) |= 0x1000u;
        if ((unint64_t)v64 >= v22 || *v64 != 120)
          continue;
        v26 = v64 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_178:
        v111[0] = 0;
        if ((unint64_t)v26 >= v22 || (char)*v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v65 = v111[0];
          v66 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v65 = *v26;
          v66 = v26 + 1;
          *((_QWORD *)a2 + 1) = v66;
        }
        *((_DWORD *)this + 14) = v65;
        *((_DWORD *)this + 34) |= 0x2000u;
        if ((int)v22 - (int)v66 < 2 || *v66 != 128 || v66[1] != 1)
          continue;
        v27 = v66 + 2;
        *((_QWORD *)a2 + 1) = v27;
LABEL_187:
        v111[0] = 0;
        if ((unint64_t)v27 >= v22 || (char)*v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v67 = v111[0];
          v68 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v67 = *v27;
          v68 = v27 + 1;
          *((_QWORD *)a2 + 1) = v68;
        }
        *((_BYTE *)this + 61) = v67 != 0;
        *((_DWORD *)this + 34) |= 0x4000u;
        if ((int)v22 - (int)v68 < 2 || *v68 != 136 || v68[1] != 1)
          continue;
        v28 = v68 + 2;
        *((_QWORD *)a2 + 1) = v28;
LABEL_196:
        v111[0] = 0;
        if ((unint64_t)v28 >= v22 || (char)*v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v69 = v111[0];
          v70 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v69 = *v28;
          v70 = v28 + 1;
          *((_QWORD *)a2 + 1) = v70;
        }
        *((_BYTE *)this + 62) = v69 != 0;
        *((_DWORD *)this + 34) |= 0x8000u;
        if ((int)v22 - (int)v70 < 2 || *v70 != 144 || v70[1] != 1)
          continue;
        v29 = v70 + 2;
        *((_QWORD *)a2 + 1) = v29;
LABEL_205:
        v111[0] = 0;
        if ((unint64_t)v29 >= v22 || (char)*v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v71 = v111[0];
          v72 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v71 = *v29;
          v72 = v29 + 1;
          *((_QWORD *)a2 + 1) = v72;
        }
        *((_BYTE *)this + 63) = v71 != 0;
        *((_DWORD *)this + 34) |= 0x10000u;
        if ((int)v22 - (int)v72 < 2 || *v72 != 152 || v72[1] != 1)
          continue;
        v30 = v72 + 2;
        *((_QWORD *)a2 + 1) = v30;
LABEL_214:
        v111[0] = 0;
        if ((unint64_t)v30 >= v22 || (char)*v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v73 = v111[0];
          v74 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v73 = *v30;
          v74 = v30 + 1;
          *((_QWORD *)a2 + 1) = v74;
        }
        *((_DWORD *)this + 16) = v73;
        *((_DWORD *)this + 34) |= 0x20000u;
        if ((int)v22 - (int)v74 < 2 || *v74 != 160 || v74[1] != 1)
          continue;
        v31 = v74 + 2;
        *((_QWORD *)a2 + 1) = v31;
LABEL_223:
        v111[0] = 0;
        if ((unint64_t)v31 >= v22 || (char)*v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v75 = v111[0];
          v76 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v75 = *v31;
          v76 = v31 + 1;
          *((_QWORD *)a2 + 1) = v76;
        }
        *((_DWORD *)this + 17) = v75;
        *((_DWORD *)this + 34) |= 0x40000u;
        if ((int)v22 - (int)v76 < 2 || *v76 != 168 || v76[1] != 1)
          continue;
        v32 = v76 + 2;
        *((_QWORD *)a2 + 1) = v32;
LABEL_232:
        v111[0] = 0;
        if ((unint64_t)v32 >= v22 || (char)*v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v77 = v111[0];
          v78 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v77 = *v32;
          v78 = v32 + 1;
          *((_QWORD *)a2 + 1) = v78;
        }
        *((_DWORD *)this + 18) = v77;
        *((_DWORD *)this + 34) |= 0x80000u;
        if ((int)v22 - (int)v78 < 2 || *v78 != 176 || v78[1] != 1)
          continue;
        v33 = v78 + 2;
        *((_QWORD *)a2 + 1) = v33;
LABEL_241:
        v111[0] = 0;
        if ((unint64_t)v33 >= v22 || (char)*v33 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v79 = v111[0];
          v80 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v79 = *v33;
          v80 = v33 + 1;
          *((_QWORD *)a2 + 1) = v80;
        }
        *((_DWORD *)this + 19) = v79;
        *((_DWORD *)this + 34) |= 0x100000u;
        if ((int)v22 - (int)v80 < 2 || *v80 != 184 || v80[1] != 1)
          continue;
        v34 = v80 + 2;
        *((_QWORD *)a2 + 1) = v34;
LABEL_250:
        v111[0] = 0;
        if ((unint64_t)v34 >= v22 || (char)*v34 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v81 = v111[0];
          v82 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v81 = *v34;
          v82 = v34 + 1;
          *((_QWORD *)a2 + 1) = v82;
        }
        *((_DWORD *)this + 28) = v81;
        *((_DWORD *)this + 34) |= 0x200000u;
        if ((int)v22 - (int)v82 < 2 || *v82 != 192 || v82[1] != 1)
          continue;
        v35 = v82 + 2;
        *((_QWORD *)a2 + 1) = v35;
LABEL_259:
        v111[0] = 0;
        if ((unint64_t)v35 >= v22 || (char)*v35 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
          if (!(_DWORD)result)
            return result;
          v83 = v111[0];
          v84 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v83 = *v35;
          v84 = v35 + 1;
          *((_QWORD *)a2 + 1) = v84;
        }
        *((_BYTE *)this + 116) = v83 != 0;
        *((_DWORD *)this + 34) |= 0x400000u;
        if ((int)v22 - (int)v84 >= 2 && *v84 == 200 && v84[1] == 1)
          goto LABEL_267;
        continue;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_92;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_100;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_108;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_116;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_124;
      case 8u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_132;
      case 9u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_140;
      case 0xAu:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_73;
        v21 = *((_DWORD *)this + 34);
        goto LABEL_148;
      case 0xCu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_154;
      case 0xDu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_162;
      case 0xEu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_170;
      case 0xFu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v26 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_178;
      case 0x10u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_187;
      case 0x11u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v28 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_196;
      case 0x12u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v29 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_205;
      case 0x13u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_214;
      case 0x14u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_223;
      case 0x15u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_232;
      case 0x16u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v33 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_241;
      case 0x17u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v34 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_250;
      case 0x18u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v35 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_259;
      case 0x19u:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, v4);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v84 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
            v22 = *((_QWORD *)a2 + 2);
            if ((int)v22 - (int)v84 <= 1)
              goto LABEL_2;
            v95 = *v84;
            if (v95 == 210)
              break;
            if (v95 != 200 || v84[1] != 1)
              goto LABEL_2;
LABEL_267:
            v36 = (char *)(v84 + 2);
            *((_QWORD *)a2 + 1) = v36;
LABEL_268:
            v111[0] = 0;
            if ((unint64_t)v36 >= v22 || *v36 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
              if (!(_DWORD)result)
                return result;
              v85 = v111[0];
            }
            else
            {
              v85 = *v36;
              *((_QWORD *)a2 + 1) = v36 + 1;
            }
            v86 = *((_DWORD *)this + 22);
            if (v86 == *((_DWORD *)this + 23))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(v4, v86 + 1);
              v86 = *((_DWORD *)this + 22);
            }
            v87 = *((_QWORD *)this + 10);
            *((_DWORD *)this + 22) = v86 + 1;
            *(_DWORD *)(v87 + 4 * v86) = v85;
            v88 = *((_DWORD *)this + 23) - *((_DWORD *)this + 22);
            if (v88 >= 1)
            {
              v89 = v88 + 1;
              do
              {
                v90 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v91 = *((_QWORD *)a2 + 2);
                if ((int)v91 - (int)v90 < 2 || *v90 != 200 || v90[1] != 1)
                  break;
                *((_QWORD *)a2 + 1) = v90 + 2;
                v111[0] = 0;
                if ((unint64_t)(v90 + 2) >= v91 || (char)v90[2] < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
                  if (!(_DWORD)result)
                    return result;
                  v92 = v111[0];
                }
                else
                {
                  v92 = v90[2];
                  *((_QWORD *)a2 + 1) = v90 + 3;
                }
                v93 = *((_DWORD *)this + 22);
                if (v93 >= *((_DWORD *)this + 23))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v111);
                  v93 = *((_DWORD *)this + 22);
                }
                v94 = *((_QWORD *)this + 10);
                *((_DWORD *)this + 22) = v93 + 1;
                *(_DWORD *)(v94 + 4 * v93) = v92;
                --v89;
              }
              while (v89 > 1);
            }
          }
          if (v84[1] == 1)
          {
            *((_QWORD *)a2 + 1) = v84 + 2;
LABEL_295:
            *((_DWORD *)this + 34) |= 0x1000000u;
            if (*((_QWORD *)this + 12) == MEMORY[0x24BEDD958])
            {
              v96 = (_QWORD *)operator new();
              v96[1] = 0;
              v96[2] = 0;
              *v96 = 0;
              *((_QWORD *)this + 12) = v96;
            }
            result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
            if (!(_DWORD)result)
              return result;
            v97 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
            if (*((_DWORD *)a2 + 4) - (int)v97 >= 2 && *v97 == 218 && v97[1] == 1)
            {
              *((_QWORD *)a2 + 1) = v97 + 2;
LABEL_302:
              *((_DWORD *)this + 34) |= 0x2000000u;
              if (*((_QWORD *)this + 13) == MEMORY[0x24BEDD958])
              {
                v98 = (_QWORD *)operator new();
                v98[1] = 0;
                v98[2] = 0;
                *v98 = 0;
                *((_QWORD *)this + 13) = v98;
              }
              result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
              if (!(_DWORD)result)
                return result;
              v99 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              if (*((_DWORD *)a2 + 4) - (int)v99 >= 2 && *v99 == 226 && v99[1] == 1)
              {
                *((_QWORD *)a2 + 1) = v99 + 2;
LABEL_309:
                *((_DWORD *)this + 34) |= 0x4000000u;
                if (*((_QWORD *)this + 15) == MEMORY[0x24BEDD958])
                {
                  v100 = (_QWORD *)operator new();
                  v100[1] = 0;
                  v100[2] = 0;
                  *v100 = 0;
                  *((_QWORD *)this + 15) = v100;
                }
                result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                if (!(_DWORD)result)
                  return result;
                v101 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v37 = *((_QWORD *)a2 + 2);
                if ((int)v37 - (int)v101 >= 2 && *v101 == 232 && v101[1] == 1)
                {
                  v38 = v101 + 2;
                  *((_QWORD *)a2 + 1) = v38;
LABEL_316:
                  v111[0] = 0;
                  if ((unint64_t)v38 >= v37 || (char)*v38 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
                    if (!(_DWORD)result)
                      return result;
                    v102 = v111[0];
                    v103 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                    v37 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    v102 = *v38;
                    v103 = v38 + 1;
                    *((_QWORD *)a2 + 1) = v103;
                  }
                  *((_BYTE *)this + 117) = v102 != 0;
                  *((_DWORD *)this + 34) |= 0x8000000u;
                  if ((int)v37 - (int)v103 >= 2 && *v103 == 240 && v103[1] == 1)
                  {
                    v39 = v103 + 2;
                    *((_QWORD *)a2 + 1) = v39;
LABEL_325:
                    v111[0] = 0;
                    if ((unint64_t)v39 >= v37 || (char)*v39 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
                      if (!(_DWORD)result)
                        return result;
                      v104 = v111[0];
                      v105 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                      v37 = *((_QWORD *)a2 + 2);
                    }
                    else
                    {
                      v104 = *v39;
                      v105 = v39 + 1;
                      *((_QWORD *)a2 + 1) = v105;
                    }
                    *((_BYTE *)this + 118) = v104 != 0;
                    *((_DWORD *)this + 34) |= 0x10000000u;
                    if ((int)v37 - (int)v105 >= 2 && *v105 == 248 && v105[1] == 1)
                    {
                      v40 = v105 + 2;
                      *((_QWORD *)a2 + 1) = v40;
LABEL_334:
                      v111[0] = 0;
                      if ((unint64_t)v40 >= v37 || (char)*v40 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
                        if (!(_DWORD)result)
                          return result;
                        v106 = v111[0];
                        v107 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                        v37 = *((_QWORD *)a2 + 2);
                      }
                      else
                      {
                        v106 = *v40;
                        v107 = v40 + 1;
                        *((_QWORD *)a2 + 1) = v107;
                      }
                      *((_BYTE *)this + 119) = v106 != 0;
                      *((_DWORD *)this + 34) |= 0x20000000u;
                      if ((int)v37 - (int)v107 >= 2 && *v107 == 128 && v107[1] == 2)
                      {
                        v41 = (char *)(v107 + 2);
                        *((_QWORD *)a2 + 1) = v41;
LABEL_343:
                        v111[0] = 0;
                        if ((unint64_t)v41 >= v37 || *v41 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v111);
                          if (!(_DWORD)result)
                            return result;
                          v108 = v111[0];
                          v109 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                          v37 = *((_QWORD *)a2 + 2);
                        }
                        else
                        {
                          v108 = *v41;
                          v109 = (unsigned __int8 *)(v41 + 1);
                          *((_QWORD *)a2 + 1) = v109;
                        }
                        *((_BYTE *)this + 128) = v108 != 0;
                        *((_DWORD *)this + 34) |= 0x40000000u;
                        if (v109 == (unsigned __int8 *)v37
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          result = 1;
                          *((_BYTE *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v36 = (char *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
          goto LABEL_268;
        }
LABEL_73:
        if (v9 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      case 0x1Au:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_295;
        goto LABEL_73;
      case 0x1Bu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_302;
        goto LABEL_73;
      case 0x1Cu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_309;
        goto LABEL_73;
      case 0x1Du:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v37 = *((_QWORD *)a2 + 2);
        goto LABEL_316;
      case 0x1Eu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v39 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v37 = *((_QWORD *)a2 + 2);
        goto LABEL_325;
      case 0x1Fu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v40 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v37 = *((_QWORD *)a2 + 2);
        goto LABEL_334;
      case 0x20u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v41 = (char *)*((_QWORD *)a2 + 1);
        v37 = *((_QWORD *)a2 + 2);
        goto LABEL_343;
      default:
        v9 = TagFallback & 7;
        goto LABEL_73;
    }
  }
}

void sub_2189CD048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  uint64_t result;
  char *v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;

  v10 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v10 = *v4;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v11 = 0;
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!(_DWORD)result)
          return result;
        v7 = v11;
      }
      else
      {
        v7 = *v6;
        *((_QWORD *)this + 1) = v6 + 1;
      }
      v8 = a2[2];
      if (v8 == a2[3])
      {
        wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(a2, v8 + 1);
        v8 = a2[2];
      }
      v9 = *(_QWORD *)a2;
      a2[2] = v8 + 1;
      *(_DWORD *)(v9 + 4 * v8) = v7;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t awd::metrics::LocationUpdateSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 136);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 136);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0)
        goto LABEL_4;
      goto LABEL_38;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0)
      goto LABEL_5;
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 0x40) == 0)
      goto LABEL_6;
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x40) == 0)
  {
LABEL_6:
    if ((v6 & 0x80) == 0)
      goto LABEL_7;
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 41), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x80) == 0)
  {
LABEL_7:
    if ((v6 & 0x100) == 0)
      goto LABEL_8;
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 42), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x100) == 0)
  {
LABEL_8:
    if ((v6 & 0x200) == 0)
      goto LABEL_9;
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 43), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x200) == 0)
  {
LABEL_9:
    if ((v6 & 0x400) == 0)
      goto LABEL_10;
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x400) == 0)
  {
LABEL_10:
    if ((v6 & 2) == 0)
      goto LABEL_11;
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 2) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0)
      goto LABEL_12;
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x10) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_48;
  }
LABEL_47:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_49;
  }
LABEL_48:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 61), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 62), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned __int8 *)(v5 + 63), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_55;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_56;
  }
LABEL_55:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_57;
  }
LABEL_56:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_25;
    goto LABEL_24;
  }
LABEL_57:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned int *)(v5 + 112), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 136) & 0x400000) != 0)
LABEL_24:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned __int8 *)(v5 + 116), (uint64_t)a2, a4);
LABEL_25:
  if (*(int *)(v5 + 88) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(unsigned int *)(*(_QWORD *)(v5 + 80) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 88));
  }
  v8 = *(_DWORD *)(v5 + 136);
  if ((v8 & 0x1000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    v8 = *(_DWORD *)(v5 + 136);
    if ((v8 & 0x2000000) == 0)
    {
LABEL_30:
      if ((v8 & 0x4000000) == 0)
        goto LABEL_31;
      goto LABEL_61;
    }
  }
  else if ((v8 & 0x2000000) == 0)
  {
    goto LABEL_30;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v8 = *(_DWORD *)(v5 + 136);
  if ((v8 & 0x4000000) == 0)
  {
LABEL_31:
    if ((v8 & 0x8000000) == 0)
      goto LABEL_32;
    goto LABEL_62;
  }
LABEL_61:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v8 = *(_DWORD *)(v5 + 136);
  if ((v8 & 0x8000000) == 0)
  {
LABEL_32:
    if ((v8 & 0x10000000) == 0)
      goto LABEL_33;
    goto LABEL_63;
  }
LABEL_62:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned __int8 *)(v5 + 117), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 136);
  if ((v8 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v8 & 0x20000000) == 0)
      goto LABEL_34;
    goto LABEL_64;
  }
LABEL_63:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned __int8 *)(v5 + 118), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 136);
  if ((v8 & 0x20000000) == 0)
  {
LABEL_34:
    if ((v8 & 0x40000000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned __int8 *)(v5 + 128), (uint64_t)a2, a4);
  }
LABEL_64:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned __int8 *)(v5 + 119), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 136) & 0x40000000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned __int8 *)(v5 + 128), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationUpdateSession::ByteSize(awd::metrics::LocationUpdateSession *this)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  uint64_t v35;
  int v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v57;
  int v58;
  uint64_t result;

  v2 = *((_DWORD *)this + 34);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_40;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 34);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v2 = *((_DWORD *)this + 34);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v3 += v10 + v6 + 1;
LABEL_16:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_18;
LABEL_21:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v11 & 0x80000000) != 0)
    {
      v12 = 10;
    }
    else if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      v2 = *((_DWORD *)this + 34);
    }
    else
    {
      v12 = 1;
    }
    v3 += v12 + 1;
    if ((v2 & 0x10) == 0)
      goto LABEL_33;
    goto LABEL_27;
  }
  v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 3))
      + 1;
  v2 = *((_DWORD *)this + 34);
  if ((v2 & 8) != 0)
    goto LABEL_21;
LABEL_18:
  if ((v2 & 0x10) != 0)
  {
LABEL_27:
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v13 & 0x80000000) != 0)
    {
      v14 = 10;
    }
    else if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      v2 = *((_DWORD *)this + 34);
    }
    else
    {
      v14 = 1;
    }
    v3 += v14 + 1;
  }
LABEL_33:
  v15 = v3 + 2;
  if ((v2 & 0x20) == 0)
    v15 = v3;
  if ((v2 & 0x40) != 0)
    v15 += 2;
  if ((v2 & 0x80) != 0)
    v4 = v15 + 2;
  else
    v4 = v15;
LABEL_40:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_79;
  if ((v2 & 0x100) != 0)
    v4 += 2;
  if ((v2 & 0x200) == 0)
  {
    if ((v2 & 0x400) == 0)
      goto LABEL_45;
LABEL_53:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v18 & 0x80000000) != 0)
    {
      v19 = 10;
    }
    else if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      v2 = *((_DWORD *)this + 34);
    }
    else
    {
      v19 = 1;
    }
    v4 += v19 + 1;
    if ((v2 & 0x800) == 0)
      goto LABEL_65;
    goto LABEL_59;
  }
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if ((v16 & 0x80000000) != 0)
  {
    v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = *((_DWORD *)this + 34);
  }
  else
  {
    v17 = 1;
  }
  v4 += v17 + 1;
  if ((v2 & 0x400) != 0)
    goto LABEL_53;
LABEL_45:
  if ((v2 & 0x800) != 0)
  {
LABEL_59:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v2 = *((_DWORD *)this + 34);
    }
    else
    {
      v21 = 1;
    }
    v4 += v21 + 1;
  }
LABEL_65:
  if ((v2 & 0x1000) != 0)
    v4 += 2;
  if ((v2 & 0x2000) != 0)
  {
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v22 & 0x80000000) != 0)
    {
      v23 = 10;
    }
    else if (v22 >= 0x80)
    {
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      v2 = *((_DWORD *)this + 34);
    }
    else
    {
      v23 = 1;
    }
    v4 += v23 + 1;
  }
  v24 = v4 + 3;
  if ((v2 & 0x4000) == 0)
    v24 = v4;
  if ((v2 & 0x8000) != 0)
    v4 = v24 + 3;
  else
    v4 = v24;
LABEL_79:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_120;
  if ((v2 & 0x10000) != 0)
    v4 += 3;
  if ((v2 & 0x20000) != 0)
  {
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v25 & 0x80000000) != 0)
    {
      v26 = 10;
    }
    else if (v25 >= 0x80)
    {
      v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      v2 = *((_DWORD *)this + 34);
    }
    else
    {
      v26 = 1;
    }
    v4 += v26 + 2;
    if ((v2 & 0x40000) == 0)
    {
LABEL_84:
      if ((v2 & 0x80000) == 0)
        goto LABEL_85;
      goto LABEL_100;
    }
  }
  else if ((v2 & 0x40000) == 0)
  {
    goto LABEL_84;
  }
  v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if ((v27 & 0x80000000) != 0)
  {
    v28 = 10;
  }
  else if (v27 >= 0x80)
  {
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
    v2 = *((_DWORD *)this + 34);
  }
  else
  {
    v28 = 1;
  }
  v4 += v28 + 2;
  if ((v2 & 0x80000) == 0)
  {
LABEL_85:
    if ((v2 & 0x100000) == 0)
      goto LABEL_86;
    goto LABEL_106;
  }
LABEL_100:
  v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
  if ((v29 & 0x80000000) != 0)
  {
    v30 = 10;
  }
  else if (v29 >= 0x80)
  {
    v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    v2 = *((_DWORD *)this + 34);
  }
  else
  {
    v30 = 1;
  }
  v4 += v30 + 2;
  if ((v2 & 0x100000) == 0)
  {
LABEL_86:
    if ((v2 & 0x200000) == 0)
      goto LABEL_118;
    goto LABEL_112;
  }
LABEL_106:
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if ((v31 & 0x80000000) != 0)
  {
    v32 = 12;
  }
  else if (v31 >= 0x80)
  {
    v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31) + 2;
    v2 = *((_DWORD *)this + 34);
  }
  else
  {
    v32 = 3;
  }
  v4 += v32;
  if ((v2 & 0x200000) != 0)
  {
LABEL_112:
    v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 28);
    if ((v33 & 0x80000000) != 0)
    {
      v34 = 12;
    }
    else if (v33 >= 0x80)
    {
      v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33) + 2;
      v2 = *((_DWORD *)this + 34);
    }
    else
    {
      v34 = 3;
    }
    v4 += v34;
  }
LABEL_118:
  if ((v2 & 0x400000) != 0)
    v4 += 3;
LABEL_120:
  if (!HIBYTE(v2))
    goto LABEL_161;
  if ((v2 & 0x1000000) == 0)
  {
    if ((v2 & 0x2000000) == 0)
      goto LABEL_123;
LABEL_134:
    v41 = *((_QWORD *)this + 13);
    v42 = *(unsigned __int8 *)(v41 + 23);
    v43 = v42;
    v44 = *(_QWORD *)(v41 + 8);
    if ((v42 & 0x80u) == 0)
      v45 = *(unsigned __int8 *)(v41 + 23);
    else
      v45 = v44;
    if (v45 >= 0x80)
    {
      v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v45);
      v42 = *(unsigned __int8 *)(v41 + 23);
      v44 = *(_QWORD *)(v41 + 8);
      v2 = *((_DWORD *)this + 34);
      v43 = *(_BYTE *)(v41 + 23);
    }
    else
    {
      v46 = 1;
    }
    if (v43 < 0)
      v42 = v44;
    v4 += v46 + v42 + 2;
    if ((v2 & 0x4000000) == 0)
      goto LABEL_152;
    goto LABEL_143;
  }
  v35 = *((_QWORD *)this + 12);
  v36 = *(unsigned __int8 *)(v35 + 23);
  v37 = v36;
  v38 = *(_QWORD *)(v35 + 8);
  if ((v36 & 0x80u) == 0)
    v39 = *(unsigned __int8 *)(v35 + 23);
  else
    v39 = v38;
  if (v39 >= 0x80)
  {
    v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39);
    v36 = *(unsigned __int8 *)(v35 + 23);
    v38 = *(_QWORD *)(v35 + 8);
    v2 = *((_DWORD *)this + 34);
    v37 = *(_BYTE *)(v35 + 23);
  }
  else
  {
    v40 = 1;
  }
  if (v37 < 0)
    v36 = v38;
  v4 += v40 + v36 + 2;
  if ((v2 & 0x2000000) != 0)
    goto LABEL_134;
LABEL_123:
  if ((v2 & 0x4000000) != 0)
  {
LABEL_143:
    v47 = *((_QWORD *)this + 15);
    v48 = *(unsigned __int8 *)(v47 + 23);
    v49 = v48;
    v50 = *(_QWORD *)(v47 + 8);
    if ((v48 & 0x80u) == 0)
      v51 = *(unsigned __int8 *)(v47 + 23);
    else
      v51 = v50;
    if (v51 >= 0x80)
    {
      v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v51);
      v48 = *(unsigned __int8 *)(v47 + 23);
      v50 = *(_QWORD *)(v47 + 8);
      v2 = *((_DWORD *)this + 34);
      v49 = *(_BYTE *)(v47 + 23);
    }
    else
    {
      v52 = 1;
    }
    if (v49 < 0)
      v48 = v50;
    v4 += v52 + v48 + 2;
  }
LABEL_152:
  v53 = v4 + 3;
  if ((v2 & 0x8000000) == 0)
    v53 = v4;
  if ((v2 & 0x10000000) != 0)
    v53 += 3;
  if ((v2 & 0x20000000) != 0)
    v53 += 3;
  if ((v2 & 0x40000000) != 0)
    v4 = v53 + 3;
  else
    v4 = v53;
LABEL_161:
  v54 = *((_DWORD *)this + 22);
  if (v54 < 1)
  {
    v56 = 0;
  }
  else
  {
    v55 = 0;
    v56 = 0;
    do
    {
      v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 10)
                                                                                             + 4 * v55);
      if ((v57 & 0x80000000) != 0)
      {
        v58 = 10;
      }
      else if (v57 >= 0x80)
      {
        v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57);
        v54 = *((_DWORD *)this + 22);
      }
      else
      {
        v58 = 1;
      }
      v56 += v58;
      ++v55;
    }
    while (v55 < v54);
  }
  result = (v56 + v4 + 2 * v54);
  *((_DWORD *)this + 33) = result;
  return result;
}

void awd::metrics::LocationUpdateSession::CheckTypeAndMergeFrom(awd::metrics::LocationUpdateSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationUpdateSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationUpdateSession::CopyFrom(awd::metrics::LocationUpdateSession *this, const awd::metrics::LocationUpdateSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationUpdateSession *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationUpdateSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationUpdateSession::IsInitialized(awd::metrics::LocationUpdateSession *this)
{
  return 1;
}

double awd::metrics::LocationUpdateSession::Swap(awd::metrics::LocationUpdateSession *this, awd::metrics::LocationUpdateSession *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    LODWORD(v5) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    LODWORD(v5) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 40);
    *((_BYTE *)this + 40) = *((_BYTE *)a2 + 40);
    *((_BYTE *)a2 + 40) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 41);
    *((_BYTE *)this + 41) = *((_BYTE *)a2 + 41);
    *((_BYTE *)a2 + 41) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 42);
    *((_BYTE *)this + 42) = *((_BYTE *)a2 + 42);
    *((_BYTE *)a2 + 42) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 43);
    *((_BYTE *)this + 43) = *((_BYTE *)a2 + 43);
    *((_BYTE *)a2 + 43) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 60);
    *((_BYTE *)this + 60) = *((_BYTE *)a2 + 60);
    *((_BYTE *)a2 + 60) = v5;
    LODWORD(v5) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 61);
    *((_BYTE *)this + 61) = *((_BYTE *)a2 + 61);
    *((_BYTE *)a2 + 61) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 62);
    *((_BYTE *)this + 62) = *((_BYTE *)a2 + 62);
    *((_BYTE *)a2 + 62) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 63);
    *((_BYTE *)this + 63) = *((_BYTE *)a2 + 63);
    *((_BYTE *)a2 + 63) = v5;
    LODWORD(v5) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v5;
    LODWORD(v5) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    LODWORD(v5) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v5;
    LODWORD(v5) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v5;
    LODWORD(v5) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 116);
    *((_BYTE *)this + 116) = *((_BYTE *)a2 + 116);
    *((_BYTE *)a2 + 116) = v5;
    v6 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    result = *((double *)a2 + 11);
    *((_QWORD *)a2 + 10) = v6;
    v8 = *((_QWORD *)this + 11);
    *((double *)this + 11) = result;
    *((_QWORD *)a2 + 11) = v8;
    v9 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v9;
    v10 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v10;
    v11 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 15) = v11;
    LOBYTE(v11) = *((_BYTE *)this + 117);
    *((_BYTE *)this + 117) = *((_BYTE *)a2 + 117);
    *((_BYTE *)a2 + 117) = v11;
    LOBYTE(v11) = *((_BYTE *)this + 118);
    *((_BYTE *)this + 118) = *((_BYTE *)a2 + 118);
    *((_BYTE *)a2 + 118) = v11;
    LOBYTE(v11) = *((_BYTE *)this + 119);
    *((_BYTE *)this + 119) = *((_BYTE *)a2 + 119);
    *((_BYTE *)a2 + 119) = v11;
    LOBYTE(v11) = *((_BYTE *)this + 128);
    *((_BYTE *)this + 128) = *((_BYTE *)a2 + 128);
    *((_BYTE *)a2 + 128) = v11;
    LODWORD(v11) = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v11;
    LODWORD(v11) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v11;
  }
  return result;
}

_QWORD *awd::metrics::LocationUpdateSession::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationUpdateSession");
}

_QWORD *awd::metrics::LocationMonitorSession::SharedCtor(_QWORD *this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  this[1] = 0;
  this[2] = v1;
  this[5] = 0;
  this[6] = 0;
  this[3] = 0;
  this[4] = 0;
  return this;
}

awd::metrics::LocationMonitorSession *awd::metrics::LocationMonitorSession::LocationMonitorSession(awd::metrics::LocationMonitorSession *this, const awd::metrics::LocationMonitorSession *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_24D98E1C8;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  awd::metrics::LocationMonitorSession::MergeFrom(this, a2);
  return this;
}

void sub_2189CDDBC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMonitorSession::MergeFrom(awd::metrics::LocationMonitorSession *this, const awd::metrics::LocationMonitorSession *a2)
{
  int v4;
  char v5;
  char v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  char v15;
  char v16;
  _BYTE v17[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  v4 = *((_DWORD *)a2 + 13);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 13) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 13) |= 2u;
  v9 = (std::string *)*((_QWORD *)this + 2);
  if (v9 == (std::string *)MEMORY[0x24BEDD958])
  {
    v9 = (std::string *)operator new();
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v9;
  }
  std::string::operator=(v9, v8);
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 13) |= 4u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 13) |= 8u;
  *((_DWORD *)this + 7) = v11;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_26:
    v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 9) = v13;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 13) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x20) != 0)
    goto LABEL_26;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_27:
  v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 13) |= 0x40u;
  *((_DWORD *)this + 10) = v14;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_BYTE *)a2 + 44);
    *((_DWORD *)this + 13) |= 0x80u;
    *((_BYTE *)this + 44) = v5;
    v4 = *((_DWORD *)a2 + 13);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v15 = *((_BYTE *)a2 + 45);
    *((_DWORD *)this + 13) |= 0x100u;
    *((_BYTE *)this + 45) = v15;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        return;
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v16 = *((_BYTE *)a2 + 46);
  *((_DWORD *)this + 13) |= 0x200u;
  *((_BYTE *)this + 46) = v16;
  if ((*((_DWORD *)a2 + 13) & 0x400) == 0)
    return;
LABEL_17:
  v6 = *((_BYTE *)a2 + 47);
  *((_DWORD *)this + 13) |= 0x400u;
  *((_BYTE *)this + 47) = v6;
}

void sub_2189CDFF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMonitorSession::~LocationMonitorSession(awd::metrics::LocationMonitorSession *this)
{
  *(_QWORD *)this = &off_24D98E1C8;
  awd::metrics::LocationMonitorSession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E1C8;
  awd::metrics::LocationMonitorSession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E1C8;
  awd::metrics::LocationMonitorSession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMonitorSession::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationMonitorSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationMonitorSession::default_instance(awd::metrics::LocationMonitorSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMonitorSession::default_instance_;
  if (!awd::metrics::LocationMonitorSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMonitorSession::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationMonitorSession::New(awd::metrics::LocationMonitorSession *this)
{
  _QWORD *result;
  uint64_t v2;

  result = (_QWORD *)operator new();
  *result = &off_24D98E1C8;
  result[1] = 0;
  v2 = MEMORY[0x24BEDD958];
  result[5] = 0;
  result[6] = 0;
  result[2] = v2;
  result[3] = 0;
  result[4] = 0;
  return result;
}

uint64_t awd::metrics::LocationMonitorSession::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 52);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 37) = 0;
    v1 = *(_DWORD *)(this + 52);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_WORD *)(this + 45) = 0;
    *(_BYTE *)(this + 47) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationMonitorSession::MergePartialFromCodedStream(awd::metrics::LocationMonitorSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  char *v12;
  char *v13;
  char *v14;
  int v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  unsigned int v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  unsigned int v27;
  _BYTE *v28;
  _QWORD *v29;
  _BYTE *v30;
  unsigned int v31;
  _BYTE *v32;
  unsigned int v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  unsigned int v37;
  _BYTE *v38;
  unsigned int v39;
  _BYTE *v40;
  unsigned int v41;
  unsigned __int8 *v42;
  uint64_t result;
  unsigned int v44;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = MEMORY[0x24BEDD958];
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
LABEL_38:
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 16)
          {
            v12 = v11 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_41;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_41:
        v44 = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v23 = v44;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v23 = *v12;
          v24 = v12 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 6) = v23;
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v24 >= v9 || *v24 != 24)
          continue;
        v13 = v24 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_49:
        v44 = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v25 = v44;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v25 = *v13;
          v26 = v13 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 9) = v25;
        *((_DWORD *)this + 13) |= 0x20u;
        if ((unint64_t)v26 >= v9 || *v26 != 32)
          continue;
        v14 = v26 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_57:
        v44 = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v27 = v44;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v27 = *v14;
          v28 = v14 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_BYTE *)this + 44) = v27 != 0;
        v15 = *((_DWORD *)this + 13) | 0x80;
        *((_DWORD *)this + 13) = v15;
        if ((unint64_t)v28 >= v9 || *v28 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_65:
        *((_DWORD *)this + 13) = v15 | 2;
        if (*((_QWORD *)this + 2) == v5)
        {
          v29 = (_QWORD *)operator new();
          v29[1] = 0;
          v29[2] = 0;
          *v29 = 0;
          *((_QWORD *)this + 2) = v29;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v30 >= v16 || *v30 != 48)
          continue;
        v17 = v30 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_71:
        v44 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v31 = v44;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v31 = *v17;
          v32 = v17 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 7) = v31;
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v32 >= v16 || *v32 != 56)
          continue;
        v18 = v32 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_79:
        v44 = 0;
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v33 = v44;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v33 = *v18;
          v34 = v18 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 8) = v33;
        *((_DWORD *)this + 13) |= 0x10u;
        if ((unint64_t)v34 >= v16 || *v34 != 64)
          continue;
        v19 = v34 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_87:
        v44 = 0;
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v35 = v44;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v35 = *v19;
          v36 = v19 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 10) = v35;
        *((_DWORD *)this + 13) |= 0x40u;
        if ((unint64_t)v36 >= v16 || *v36 != 72)
          continue;
        v20 = v36 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_95:
        v44 = 0;
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v37 = v44;
          v38 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v37 = *v20;
          v38 = v20 + 1;
          *((_QWORD *)a2 + 1) = v38;
        }
        *((_BYTE *)this + 45) = v37 != 0;
        *((_DWORD *)this + 13) |= 0x100u;
        if ((unint64_t)v38 >= v16 || *v38 != 80)
          continue;
        v21 = v38 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_103:
        v44 = 0;
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v39 = v44;
          v40 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v39 = *v21;
          v40 = v21 + 1;
          *((_QWORD *)a2 + 1) = v40;
        }
        *((_BYTE *)this + 46) = v39 != 0;
        *((_DWORD *)this + 13) |= 0x200u;
        if ((unint64_t)v40 >= v16 || *v40 != 88)
          continue;
        v22 = v40 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_111:
        v44 = 0;
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v41 = v44;
          v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v41 = *v22;
          v42 = (unsigned __int8 *)(v22 + 1);
          *((_QWORD *)a2 + 1) = v42;
        }
        *((_BYTE *)this + 47) = v41 != 0;
        *((_DWORD *)this + 13) |= 0x400u;
        if (v42 != (unsigned __int8 *)v16 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_49;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_57;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_32;
        v15 = *((_DWORD *)this + 13);
        goto LABEL_65;
      case 6u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_71;
      case 7u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      case 8u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_87;
      case 9u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_95;
      case 0xAu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_103;
      case 0xBu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_111;
      default:
        v8 = TagFallback & 7;
LABEL_32:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMonitorSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_4:
    if ((v6 & 0x80) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x80) == 0)
  {
LABEL_5:
    if ((v6 & 2) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 2) == 0)
  {
LABEL_6:
    if ((v6 & 8) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_7:
    if ((v6 & 0x10) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_8:
    if ((v6 & 0x40) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 45), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 47), (uint64_t)a2, a4);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 46), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 47), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMonitorSession::ByteSize(awd::metrics::LocationMonitorSession *this)
{
  int v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  unsigned int v21;
  uint64_t result;

  v2 = *((_DWORD *)this + 13);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_54;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 13);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v2 = *((_DWORD *)this + 13);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v3 += v10 + v6 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v11 & 0x80000000) != 0)
    {
      v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
      v2 = *((_DWORD *)this + 13);
    }
    else
    {
      v12 = 2;
    }
    v3 += v12;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_34;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v13 & 0x80000000) != 0)
  {
    v14 = 11;
  }
  else if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v14 = 2;
  }
  v3 += v14;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_40;
  }
LABEL_34:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v15 & 0x80000000) != 0)
  {
    v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v16 = 2;
  }
  v3 += v16;
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_52;
    goto LABEL_46;
  }
LABEL_40:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v17 & 0x80000000) != 0)
  {
    v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v18 = 2;
  }
  v3 += v18;
  if ((v2 & 0x40) != 0)
  {
LABEL_46:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v19 & 0x80000000) != 0)
    {
      v20 = 11;
    }
    else if (v19 >= 0x80)
    {
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19) + 1;
      v2 = *((_DWORD *)this + 13);
    }
    else
    {
      v20 = 2;
    }
    v3 += v20;
  }
LABEL_52:
  v4 = v3 + 2;
  if ((v2 & 0x80) == 0)
    v4 = v3;
LABEL_54:
  v21 = v4 + 2;
  if ((v2 & 0x100) == 0)
    v21 = v4;
  if ((v2 & 0x200) != 0)
    v21 += 2;
  if ((v2 & 0x400) != 0)
    v21 += 2;
  if ((v2 & 0xFF00) != 0)
    result = v21;
  else
    result = v4;
  *((_DWORD *)this + 12) = result;
  return result;
}

void awd::metrics::LocationMonitorSession::CheckTypeAndMergeFrom(awd::metrics::LocationMonitorSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMonitorSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMonitorSession::CopyFrom(awd::metrics::LocationMonitorSession *this, const awd::metrics::LocationMonitorSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMonitorSession *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMonitorSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMonitorSession::IsInitialized(awd::metrics::LocationMonitorSession *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMonitorSession::Swap(uint64_t this, awd::metrics::LocationMonitorSession *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationMonitorSession *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 44);
    *(_BYTE *)(this + 44) = *((_BYTE *)a2 + 44);
    *((_BYTE *)a2 + 44) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 45);
    *(_BYTE *)(this + 45) = *((_BYTE *)a2 + 45);
    *((_BYTE *)a2 + 45) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 46);
    *(_BYTE *)(this + 46) = *((_BYTE *)a2 + 46);
    *((_BYTE *)a2 + 46) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 47);
    *(_BYTE *)(this + 47) = *((_BYTE *)a2 + 47);
    *((_BYTE *)a2 + 47) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationMonitorSession::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMonitorSession");
}

uint64_t awd::metrics::LocationMonitorTrigger::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_DWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 31) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  return this;
}

awd::metrics::LocationMonitorTrigger *awd::metrics::LocationMonitorTrigger::LocationMonitorTrigger(awd::metrics::LocationMonitorTrigger *this, const awd::metrics::LocationMonitorTrigger *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_24D98E240;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)((char *)this + 31) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  awd::metrics::LocationMonitorTrigger::MergeFrom(this, a2);
  return this;
}

void sub_2189CED8C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMonitorTrigger::MergeFrom(awd::metrics::LocationMonitorTrigger *this, const awd::metrics::LocationMonitorTrigger *a2)
{
  int v4;
  char v5;
  int v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  int v10;
  int v11;
  int v12;
  char v13;
  char v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _BYTE v19[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v4 = *((_DWORD *)a2 + 16);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 16) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 16) |= 2u;
  v9 = (std::string *)*((_QWORD *)this + 2);
  if (v9 == (std::string *)MEMORY[0x24BEDD958])
  {
    v9 = (std::string *)operator new();
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v9;
  }
  std::string::operator=(v9, v8);
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 16) |= 4u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 16) |= 8u;
  *((_DWORD *)this + 7) = v11;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_28:
    v13 = *((_BYTE *)a2 + 36);
    *((_DWORD *)this + 16) |= 0x20u;
    *((_BYTE *)this + 36) = v13;
    v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 16) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x20) != 0)
    goto LABEL_28;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_29:
  v14 = *((_BYTE *)a2 + 37);
  *((_DWORD *)this + 16) |= 0x40u;
  *((_BYTE *)this + 37) = v14;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_BYTE *)a2 + 38);
    *((_DWORD *)this + 16) |= 0x80u;
    *((_BYTE *)this + 38) = v5;
    v4 = *((_DWORD *)a2 + 16);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v15 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 16) |= 0x100u;
    *((_DWORD *)this + 10) = v15;
    v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_33;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v16 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 16) |= 0x200u;
  *((_DWORD *)this + 11) = v16;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_34;
  }
LABEL_33:
  v17 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 16) |= 0x400u;
  *((_DWORD *)this + 12) = v17;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      return;
    goto LABEL_19;
  }
LABEL_34:
  v18 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 16) |= 0x800u;
  *((_DWORD *)this + 13) = v18;
  if ((*((_DWORD *)a2 + 16) & 0x1000) == 0)
    return;
LABEL_19:
  v6 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 16) |= 0x1000u;
  *((_DWORD *)this + 14) = v6;
}

void sub_2189CF000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMonitorTrigger::~LocationMonitorTrigger(awd::metrics::LocationMonitorTrigger *this)
{
  *(_QWORD *)this = &off_24D98E240;
  awd::metrics::LocationMonitorTrigger::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E240;
  awd::metrics::LocationMonitorTrigger::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E240;
  awd::metrics::LocationMonitorTrigger::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMonitorTrigger::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationMonitorTrigger::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 60) = a2;
  return this;
}

uint64_t awd::metrics::LocationMonitorTrigger::default_instance(awd::metrics::LocationMonitorTrigger *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMonitorTrigger::default_instance_;
  if (!awd::metrics::LocationMonitorTrigger::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMonitorTrigger::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationMonitorTrigger::New(awd::metrics::LocationMonitorTrigger *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  *(_QWORD *)result = &off_24D98E240;
  *(_QWORD *)(result + 8) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_DWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 31) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  return result;
}

uint64_t awd::metrics::LocationMonitorTrigger::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 64);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 31) = 0;
    *(_QWORD *)(this + 24) = 0;
    v1 = *(_DWORD *)(this + 64);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 48) = 0;
    *(_DWORD *)(this + 56) = 0;
  }
  *(_DWORD *)(this + 64) = 0;
  return this;
}

uint64_t awd::metrics::LocationMonitorTrigger::MergePartialFromCodedStream(awd::metrics::LocationMonitorTrigger *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  uint64_t v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  int v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  _QWORD *v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;
  _BYTE *v39;
  unsigned int v40;
  _BYTE *v41;
  unsigned int v42;
  _BYTE *v43;
  unsigned int v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  unsigned __int8 *v48;
  uint64_t result;
  unsigned int v50;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 56);
  v6 = MEMORY[0x24BEDD958];
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
LABEL_42:
          v13 = *((_DWORD *)this + 16) | 1;
          *((_DWORD *)this + 16) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((_QWORD *)a2 + 1) = v12 + 1;
            goto LABEL_45;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_42;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_36;
        v13 = *((_DWORD *)this + 16);
LABEL_45:
        *((_DWORD *)this + 16) = v13 | 2;
        if (*((_QWORD *)this + 2) == v6)
        {
          v26 = (_QWORD *)operator new();
          v26[1] = 0;
          v26[2] = 0;
          *v26 = 0;
          *((_QWORD *)this + 2) = v26;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v27 >= v14 || *v27 != 24)
          continue;
        v15 = v27 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_51:
        v50 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
          if (!(_DWORD)result)
            return result;
          v28 = v50;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v28 = *v15;
          v29 = v15 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 6) = v28;
        *((_DWORD *)this + 16) |= 4u;
        if ((unint64_t)v29 >= v14 || *v29 != 32)
          continue;
        v16 = v29 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_59:
        v50 = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
          if (!(_DWORD)result)
            return result;
          v30 = v50;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v30 = *v16;
          v31 = v16 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 7) = v30;
        *((_DWORD *)this + 16) |= 8u;
        if ((unint64_t)v31 >= v14 || *v31 != 40)
          continue;
        v17 = v31 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_67:
        v50 = 0;
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
          if (!(_DWORD)result)
            return result;
          v32 = v50;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v32 = *v17;
          v33 = v17 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 8) = v32;
        *((_DWORD *)this + 16) |= 0x10u;
        if ((unint64_t)v33 >= v14 || *v33 != 48)
          continue;
        v18 = v33 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_75:
        v50 = 0;
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
          if (!(_DWORD)result)
            return result;
          v34 = v50;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v34 = *v18;
          v35 = v18 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_BYTE *)this + 36) = v34 != 0;
        *((_DWORD *)this + 16) |= 0x20u;
        if ((unint64_t)v35 >= v14 || *v35 != 56)
          continue;
        v19 = v35 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_83:
        v50 = 0;
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
          if (!(_DWORD)result)
            return result;
          v36 = v50;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v36 = *v19;
          v37 = v19 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_BYTE *)this + 37) = v36 != 0;
        *((_DWORD *)this + 16) |= 0x40u;
        if ((unint64_t)v37 >= v14 || *v37 != 64)
          continue;
        v20 = v37 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_91:
        v50 = 0;
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
          if (!(_DWORD)result)
            return result;
          v38 = v50;
          v39 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v38 = *v20;
          v39 = v20 + 1;
          *((_QWORD *)a2 + 1) = v39;
        }
        *((_BYTE *)this + 38) = v38 != 0;
        *((_DWORD *)this + 16) |= 0x80u;
        if ((unint64_t)v39 >= v14 || *v39 != 80)
          continue;
        v21 = v39 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_99:
        v50 = 0;
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
          if (!(_DWORD)result)
            return result;
          v40 = v50;
          v41 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v40 = *v21;
          v41 = v21 + 1;
          *((_QWORD *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 10) = v40;
        *((_DWORD *)this + 16) |= 0x100u;
        if ((unint64_t)v41 >= v14 || *v41 != 88)
          continue;
        v22 = v41 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_107:
        v50 = 0;
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
          if (!(_DWORD)result)
            return result;
          v42 = v50;
          v43 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v42 = *v22;
          v43 = v22 + 1;
          *((_QWORD *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 11) = v42;
        *((_DWORD *)this + 16) |= 0x200u;
        if ((unint64_t)v43 >= v14 || *v43 != 96)
          continue;
        v23 = v43 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_115:
        v50 = 0;
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
          if (!(_DWORD)result)
            return result;
          v44 = v50;
          v45 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v44 = *v23;
          v45 = v23 + 1;
          *((_QWORD *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 12) = v44;
        *((_DWORD *)this + 16) |= 0x400u;
        if ((unint64_t)v45 >= v14 || *v45 != 104)
          continue;
        v24 = v45 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_123:
        v50 = 0;
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
          if (!(_DWORD)result)
            return result;
          v46 = v50;
          v47 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v46 = *v24;
          v47 = v24 + 1;
          *((_QWORD *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 13) = v46;
        *((_DWORD *)this + 16) |= 0x800u;
        if ((unint64_t)v47 >= v14 || *v47 != 112)
          continue;
        v25 = v47 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_131:
        if ((unint64_t)v25 >= v14 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v48 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v25;
          v48 = (unsigned __int8 *)(v25 + 1);
          *((_QWORD *)a2 + 1) = v48;
        }
        *((_DWORD *)this + 16) |= 0x1000u;
        if (v48 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_59;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_67;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      case 8u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_91;
      case 0xAu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_99;
      case 0xBu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_107;
      case 0xCu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_115;
      case 0xDu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_123;
      case 0xEu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_131;
      default:
        v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMonitorTrigger::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 64);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 37), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 38), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 0x1000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMonitorTrigger::ByteSize(awd::metrics::LocationMonitorTrigger *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  unsigned int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;

  v2 = *((_DWORD *)this + 16);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_45;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 16);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v2 = *((_DWORD *)this + 16);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v3 += v10 + v6 + 1;
LABEL_16:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_18;
LABEL_26:
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v13 & 0x80000000) != 0)
    {
      v14 = 10;
    }
    else if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v14 = 1;
    }
    v3 += v14 + 1;
    if ((v2 & 0x10) == 0)
      goto LABEL_38;
    goto LABEL_32;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v11 & 0x80000000) != 0)
  {
    v12 = 10;
  }
  else if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v12 = 1;
  }
  v3 += v12 + 1;
  if ((v2 & 8) != 0)
    goto LABEL_26;
LABEL_18:
  if ((v2 & 0x10) != 0)
  {
LABEL_32:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v15 & 0x80000000) != 0)
    {
      v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v16 = 2;
    }
    v3 += v16;
  }
LABEL_38:
  v17 = v3 + 2;
  if ((v2 & 0x20) == 0)
    v17 = v3;
  if ((v2 & 0x40) != 0)
    v17 += 2;
  if ((v2 & 0x80) != 0)
    v4 = v17 + 2;
  else
    v4 = v17;
LABEL_45:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_80;
  if ((v2 & 0x100) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v18 & 0x80000000) != 0)
    {
      v19 = 11;
    }
    else if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v19 = 2;
    }
    v4 = (v19 + v4);
    if ((v2 & 0x200) == 0)
    {
LABEL_48:
      if ((v2 & 0x400) == 0)
        goto LABEL_49;
      goto LABEL_64;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if ((v20 & 0x80000000) != 0)
  {
    v21 = 11;
  }
  else if (v20 >= 0x80)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v21 = 2;
  }
  v4 = (v21 + v4);
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0)
      goto LABEL_50;
    goto LABEL_70;
  }
LABEL_64:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if ((v22 & 0x80000000) != 0)
  {
    v23 = 11;
  }
  else if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v23 = 2;
  }
  v4 = (v23 + v4);
  if ((v2 & 0x800) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000) == 0)
      goto LABEL_80;
    goto LABEL_76;
  }
LABEL_70:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v24 & 0x80000000) != 0)
  {
    v25 = 11;
  }
  else if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v25 = 2;
  }
  v4 = (v25 + v4);
  if ((v2 & 0x1000) != 0)
  {
LABEL_76:
    v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v26 >= 0x80)
      v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    else
      v27 = 2;
    v4 = (v27 + v4);
  }
LABEL_80:
  *((_DWORD *)this + 15) = v4;
  return v4;
}

void awd::metrics::LocationMonitorTrigger::CheckTypeAndMergeFrom(awd::metrics::LocationMonitorTrigger *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMonitorTrigger::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMonitorTrigger::CopyFrom(awd::metrics::LocationMonitorTrigger *this, const awd::metrics::LocationMonitorTrigger *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMonitorTrigger *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMonitorTrigger::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMonitorTrigger::IsInitialized(awd::metrics::LocationMonitorTrigger *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMonitorTrigger::Swap(uint64_t this, awd::metrics::LocationMonitorTrigger *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationMonitorTrigger *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 36);
    *(_BYTE *)(this + 36) = *((_BYTE *)a2 + 36);
    *((_BYTE *)a2 + 36) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 37);
    *(_BYTE *)(this + 37) = *((_BYTE *)a2 + 37);
    *((_BYTE *)a2 + 37) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 38);
    *(_BYTE *)(this + 38) = *((_BYTE *)a2 + 38);
    *((_BYTE *)a2 + 38) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationMonitorTrigger::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMonitorTrigger");
}

double awd::metrics::LocationNetworkQueries::SharedCtor(awd::metrics::LocationNetworkQueries *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_QWORD *)this + 9) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

awd::metrics::LocationNetworkQueries *awd::metrics::LocationNetworkQueries::LocationNetworkQueries(awd::metrics::LocationNetworkQueries *this, const awd::metrics::LocationNetworkQueries *a2)
{
  *(_QWORD *)this = &off_24D98E2B8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 9) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  awd::metrics::LocationNetworkQueries::MergeFrom(this, a2);
  return this;
}

void sub_2189CFF78(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationNetworkQueries::MergeFrom(awd::metrics::LocationNetworkQueries *this, const awd::metrics::LocationNetworkQueries *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  _BYTE v20[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v4 = *((_DWORD *)a2 + 19);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 19) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 19);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_26;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 19) |= 2u;
  v9 = (std::string *)*((_QWORD *)this + 2);
  if (v9 == (std::string *)MEMORY[0x24BEDD958])
  {
    v9 = (std::string *)operator new();
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v9;
  }
  std::string::operator=(v9, v8);
  v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_27;
  }
LABEL_26:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 19) |= 4u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_28;
  }
LABEL_27:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 19) |= 8u;
  *((_DWORD *)this + 7) = v11;
  v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_29:
    v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 19) |= 0x20u;
    *((_DWORD *)this + 9) = v13;
    v4 = *((_DWORD *)a2 + 19);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_28:
  v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 19) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x20) != 0)
    goto LABEL_29;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_30:
  v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 19) |= 0x40u;
  *((_DWORD *)this + 10) = v14;
  v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 19) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    v4 = *((_DWORD *)a2 + 19);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v15 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 19) |= 0x100u;
    *((_DWORD *)this + 12) = v15;
    v4 = *((_DWORD *)a2 + 19);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_34;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v16 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 19) |= 0x200u;
  *((_DWORD *)this + 13) = v16;
  v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_35;
  }
LABEL_34:
  v17 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 19) |= 0x400u;
  *((_DWORD *)this + 14) = v17;
  v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_36;
  }
LABEL_35:
  v18 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 19) |= 0x800u;
  *((_DWORD *)this + 15) = v18;
  v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      return;
    goto LABEL_20;
  }
LABEL_36:
  v19 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 19) |= 0x1000u;
  *((_DWORD *)this + 16) = v19;
  if ((*((_DWORD *)a2 + 19) & 0x2000) == 0)
    return;
LABEL_20:
  v6 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 19) |= 0x2000u;
  *((_DWORD *)this + 17) = v6;
}

void sub_2189D020C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationNetworkQueries::~LocationNetworkQueries(awd::metrics::LocationNetworkQueries *this)
{
  *(_QWORD *)this = &off_24D98E2B8;
  awd::metrics::LocationNetworkQueries::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E2B8;
  awd::metrics::LocationNetworkQueries::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E2B8;
  awd::metrics::LocationNetworkQueries::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationNetworkQueries::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationNetworkQueries::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

uint64_t awd::metrics::LocationNetworkQueries::default_instance(awd::metrics::LocationNetworkQueries *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationNetworkQueries::default_instance_;
  if (!awd::metrics::LocationNetworkQueries::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationNetworkQueries::default_instance_;
  }
  return result;
}

double awd::metrics::LocationNetworkQueries::New(awd::metrics::LocationNetworkQueries *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98E2B8;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 72) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  return result;
}

uint64_t awd::metrics::LocationNetworkQueries::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 76);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 40) = 0;
    v1 = *(_DWORD *)(this + 76);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 64) = 0;
  }
  *(_DWORD *)(this + 76) = 0;
  return this;
}

uint64_t awd::metrics::LocationNetworkQueries::MergePartialFromCodedStream(awd::metrics::LocationNetworkQueries *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  int v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  _QWORD *v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;
  _BYTE *v39;
  unsigned int v40;
  _BYTE *v41;
  unsigned int v42;
  _BYTE *v43;
  unsigned int v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  unsigned int v48;
  _BYTE *v49;
  unsigned int v50;
  unsigned __int8 *v51;
  uint64_t result;
  unsigned int v53;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = MEMORY[0x24BEDD958];
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
LABEL_44:
          v12 = *((_DWORD *)this + 19) | 1;
          *((_DWORD *)this + 19) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((_QWORD *)a2 + 1) = v11 + 1;
            goto LABEL_47;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          goto LABEL_44;
        }
        break;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_38;
        v12 = *((_DWORD *)this + 19);
LABEL_47:
        *((_DWORD *)this + 19) = v12 | 2;
        if (*((_QWORD *)this + 2) == v5)
        {
          v26 = (_QWORD *)operator new();
          v26[1] = 0;
          v26[2] = 0;
          *v26 = 0;
          *((_QWORD *)this + 2) = v26;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v27 >= v13 || *v27 != 24)
          continue;
        v14 = v27 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_53:
        v53 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v28 = v53;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v28 = *v14;
          v29 = v14 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 6) = v28;
        *((_DWORD *)this + 19) |= 4u;
        if ((unint64_t)v29 >= v13 || *v29 != 32)
          continue;
        v15 = v29 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_61:
        v53 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v30 = v53;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v30 = *v15;
          v31 = v15 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 7) = v30;
        *((_DWORD *)this + 19) |= 8u;
        if ((unint64_t)v31 >= v13 || *v31 != 40)
          continue;
        v16 = v31 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_69:
        v53 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v32 = v53;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v32 = *v16;
          v33 = v16 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 8) = v32;
        *((_DWORD *)this + 19) |= 0x10u;
        if ((unint64_t)v33 >= v13 || *v33 != 48)
          continue;
        v17 = v33 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_77:
        v53 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v34 = v53;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v34 = *v17;
          v35 = v17 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 9) = v34;
        *((_DWORD *)this + 19) |= 0x20u;
        if ((unint64_t)v35 >= v13 || *v35 != 56)
          continue;
        v18 = v35 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_85:
        v53 = 0;
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v36 = v53;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v36 = *v18;
          v37 = v18 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 10) = v36;
        *((_DWORD *)this + 19) |= 0x40u;
        if ((unint64_t)v37 >= v13 || *v37 != 64)
          continue;
        v19 = v37 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_93:
        v53 = 0;
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v38 = v53;
          v39 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v38 = *v19;
          v39 = v19 + 1;
          *((_QWORD *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 11) = v38;
        *((_DWORD *)this + 19) |= 0x80u;
        if ((unint64_t)v39 >= v13 || *v39 != 72)
          continue;
        v20 = v39 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_101:
        v53 = 0;
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v40 = v53;
          v41 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v40 = *v20;
          v41 = v20 + 1;
          *((_QWORD *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 12) = v40;
        *((_DWORD *)this + 19) |= 0x100u;
        if ((unint64_t)v41 >= v13 || *v41 != 80)
          continue;
        v21 = v41 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_109:
        v53 = 0;
        if ((unint64_t)v21 >= v13 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v42 = v53;
          v43 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v42 = *v21;
          v43 = v21 + 1;
          *((_QWORD *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 13) = v42;
        *((_DWORD *)this + 19) |= 0x200u;
        if ((unint64_t)v43 >= v13 || *v43 != 88)
          continue;
        v22 = v43 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_117:
        v53 = 0;
        if ((unint64_t)v22 >= v13 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v44 = v53;
          v45 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v44 = *v22;
          v45 = v22 + 1;
          *((_QWORD *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 14) = v44;
        *((_DWORD *)this + 19) |= 0x400u;
        if ((unint64_t)v45 >= v13 || *v45 != 96)
          continue;
        v23 = v45 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_125:
        v53 = 0;
        if ((unint64_t)v23 >= v13 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v46 = v53;
          v47 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v46 = *v23;
          v47 = v23 + 1;
          *((_QWORD *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 15) = v46;
        *((_DWORD *)this + 19) |= 0x800u;
        if ((unint64_t)v47 >= v13 || *v47 != 104)
          continue;
        v24 = v47 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_133:
        v53 = 0;
        if ((unint64_t)v24 >= v13 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v48 = v53;
          v49 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v48 = *v24;
          v49 = v24 + 1;
          *((_QWORD *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 16) = v48;
        *((_DWORD *)this + 19) |= 0x1000u;
        if ((unint64_t)v49 >= v13 || *v49 != 112)
          continue;
        v25 = v49 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_141:
        v53 = 0;
        if ((unint64_t)v25 >= v13 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!(_DWORD)result)
            return result;
          v50 = v53;
          v51 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v50 = *v25;
          v51 = (unsigned __int8 *)(v25 + 1);
          *((_QWORD *)a2 + 1) = v51;
        }
        *((_DWORD *)this + 17) = v50;
        *((_DWORD *)this + 19) |= 0x2000u;
        if (v51 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_69;
      case 6u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_77;
      case 7u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_85;
      case 8u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_93;
      case 9u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_101;
      case 0xAu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_109;
      case 0xBu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_117;
      case 0xCu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_125;
      case 0xDu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_133;
      case 0xEu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_141;
      default:
        v8 = TagFallback & 7;
LABEL_38:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationNetworkQueries::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 76);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[19];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = v5[19];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], (uint64_t)a2, a4);
  v6 = v5[19];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], (uint64_t)a2, a4);
  v6 = v5[19];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[8], (uint64_t)a2, a4);
  v6 = v5[19];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[9], (uint64_t)a2, a4);
  v6 = v5[19];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[10], (uint64_t)a2, a4);
  v6 = v5[19];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[11], (uint64_t)a2, a4);
  v6 = v5[19];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[12], (uint64_t)a2, a4);
  v6 = v5[19];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[13], (uint64_t)a2, a4);
  v6 = v5[19];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[14], (uint64_t)a2, a4);
  v6 = v5[19];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[15], (uint64_t)a2, a4);
  v6 = v5[19];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[17], (uint64_t)a2, a4);
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[16], (uint64_t)a2, a4);
  if ((v5[19] & 0x2000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[17], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationNetworkQueries::ByteSize(awd::metrics::LocationNetworkQueries *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;

  v2 = *((_DWORD *)this + 19);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_59;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 19);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 19);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      v2 = *((_DWORD *)this + 19);
    }
    else
    {
      v11 = 1;
    }
    v3 = (v3 + v11 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v13 = 1;
  }
  v3 = (v3 + v13 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_41;
  }
LABEL_35:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 10;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v15 = 1;
  }
  v3 = (v3 + v15 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_21;
    goto LABEL_47;
  }
LABEL_41:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v16 & 0x80000000) != 0)
  {
    v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v17 = 1;
  }
  v3 = (v3 + v17 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0)
      goto LABEL_59;
    goto LABEL_53;
  }
LABEL_47:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v18 & 0x80000000) != 0)
  {
    v19 = 10;
  }
  else if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v19 = 1;
  }
  v3 = (v3 + v19 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_53:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v2 = *((_DWORD *)this + 19);
    }
    else
    {
      v21 = 1;
    }
    v3 = (v3 + v21 + 1);
  }
LABEL_59:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_103;
  if ((v2 & 0x100) != 0)
  {
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v22 & 0x80000000) != 0)
    {
      v23 = 11;
    }
    else if (v22 >= 0x80)
    {
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
      v2 = *((_DWORD *)this + 19);
    }
    else
    {
      v23 = 2;
    }
    v3 = (v23 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_62:
      if ((v2 & 0x400) == 0)
        goto LABEL_63;
      goto LABEL_79;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_62;
  }
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v24 & 0x80000000) != 0)
  {
    v25 = 11;
  }
  else if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v25 = 2;
  }
  v3 = (v25 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_63:
    if ((v2 & 0x800) == 0)
      goto LABEL_64;
    goto LABEL_85;
  }
LABEL_79:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v26 & 0x80000000) != 0)
  {
    v27 = 11;
  }
  else if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v27 = 2;
  }
  v3 = (v27 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_64:
    if ((v2 & 0x1000) == 0)
      goto LABEL_65;
    goto LABEL_91;
  }
LABEL_85:
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v28 & 0x80000000) != 0)
  {
    v29 = 11;
  }
  else if (v28 >= 0x80)
  {
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v29 = 2;
  }
  v3 = (v29 + v3);
  if ((v2 & 0x1000) == 0)
  {
LABEL_65:
    if ((v2 & 0x2000) == 0)
      goto LABEL_103;
    goto LABEL_97;
  }
LABEL_91:
  v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v30 & 0x80000000) != 0)
  {
    v31 = 11;
  }
  else if (v30 >= 0x80)
  {
    v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v31 = 2;
  }
  v3 = (v31 + v3);
  if ((v2 & 0x2000) != 0)
  {
LABEL_97:
    v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if ((v32 & 0x80000000) != 0)
    {
      v33 = 11;
    }
    else if (v32 >= 0x80)
    {
      v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 1;
    }
    else
    {
      v33 = 2;
    }
    v3 = (v33 + v3);
  }
LABEL_103:
  *((_DWORD *)this + 18) = v3;
  return v3;
}

void awd::metrics::LocationNetworkQueries::CheckTypeAndMergeFrom(awd::metrics::LocationNetworkQueries *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationNetworkQueries::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationNetworkQueries::CopyFrom(awd::metrics::LocationNetworkQueries *this, const awd::metrics::LocationNetworkQueries *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationNetworkQueries *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationNetworkQueries::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationNetworkQueries::IsInitialized(awd::metrics::LocationNetworkQueries *this)
{
  return 1;
}

uint64_t awd::metrics::LocationNetworkQueries::Swap(uint64_t this, awd::metrics::LocationNetworkQueries *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationNetworkQueries *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 76);
    *(_DWORD *)(this + 76) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationNetworkQueries::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationNetworkQueries");
}

uint64_t awd::metrics::LocationWifiUsage::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationWifiUsage *awd::metrics::LocationWifiUsage::LocationWifiUsage(awd::metrics::LocationWifiUsage *this, const awd::metrics::LocationWifiUsage *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_24D98E330;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_QWORD *)this + 5) = 0;
  awd::metrics::LocationWifiUsage::MergeFrom(this, a2);
  return this;
}

void sub_2189D12C8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiUsage::MergeFrom(awd::metrics::LocationWifiUsage *this, const awd::metrics::LocationWifiUsage *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  const std::string *v7;
  std::string *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_17;
      }
    }
    else if ((*((_BYTE *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 12) |= 2u;
    v8 = (std::string *)*((_QWORD *)this + 2);
    if (v8 == (std::string *)MEMORY[0x24BEDD958])
    {
      v8 = (std::string *)operator new();
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v8;
    }
    std::string::operator=(v8, v7);
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_18;
    }
LABEL_17:
    v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 12) |= 4u;
    *((_DWORD *)this + 6) = v9;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_19;
    }
LABEL_18:
    v10 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 12) |= 8u;
    *((_DWORD *)this + 7) = v10;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_20;
    }
LABEL_19:
    v11 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 12) |= 0x10u;
    *((_DWORD *)this + 8) = v11;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        return;
      goto LABEL_11;
    }
LABEL_20:
    v12 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 12) |= 0x20u;
    *((_DWORD *)this + 9) = v12;
    if ((*((_DWORD *)a2 + 12) & 0x40) == 0)
      return;
LABEL_11:
    v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 12) |= 0x40u;
    *((_DWORD *)this + 10) = v5;
  }
}

void sub_2189D1470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiUsage::~LocationWifiUsage(awd::metrics::LocationWifiUsage *this)
{
  *(_QWORD *)this = &off_24D98E330;
  awd::metrics::LocationWifiUsage::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E330;
  awd::metrics::LocationWifiUsage::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E330;
  awd::metrics::LocationWifiUsage::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationWifiUsage::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationWifiUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationWifiUsage::default_instance(awd::metrics::LocationWifiUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationWifiUsage::default_instance_;
  if (!awd::metrics::LocationWifiUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationWifiUsage::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationWifiUsage::New(awd::metrics::LocationWifiUsage *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  *(_QWORD *)result = &off_24D98E330;
  *(_QWORD *)(result + 8) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationWifiUsage::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 48);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_DWORD *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationWifiUsage::MergePartialFromCodedStream(awd::metrics::LocationWifiUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  int v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE *v22;
  unsigned int v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  unsigned int v27;
  _BYTE *v28;
  unsigned int v29;
  unsigned __int8 *v30;
  uint64_t result;
  unsigned int v32;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = MEMORY[0x24BEDD958];
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
LABEL_30:
          v12 = *((_DWORD *)this + 12) | 1;
          *((_DWORD *)this + 12) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((_QWORD *)a2 + 1) = v11 + 1;
            goto LABEL_33;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          goto LABEL_30;
        }
        break;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_24;
        v12 = *((_DWORD *)this + 12);
LABEL_33:
        *((_DWORD *)this + 12) = v12 | 2;
        if (*((_QWORD *)this + 2) == v5)
        {
          v19 = (_QWORD *)operator new();
          v19[1] = 0;
          v19[2] = 0;
          *v19 = 0;
          *((_QWORD *)this + 2) = v19;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v20 >= v13 || *v20 != 24)
          continue;
        v14 = v20 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_39:
        v32 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!(_DWORD)result)
            return result;
          v21 = v32;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v21 = *v14;
          v22 = v14 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 6) = v21;
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v22 >= v13 || *v22 != 32)
          continue;
        v15 = v22 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_47:
        v32 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!(_DWORD)result)
            return result;
          v23 = v32;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v23 = *v15;
          v24 = v15 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 7) = v23;
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v24 >= v13 || *v24 != 40)
          continue;
        v16 = v24 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_55:
        v32 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!(_DWORD)result)
            return result;
          v25 = v32;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v25 = *v16;
          v26 = v16 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 8) = v25;
        *((_DWORD *)this + 12) |= 0x10u;
        if ((unint64_t)v26 >= v13 || *v26 != 48)
          continue;
        v17 = v26 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_63:
        v32 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!(_DWORD)result)
            return result;
          v27 = v32;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v27 = *v17;
          v28 = v17 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 9) = v27;
        *((_DWORD *)this + 12) |= 0x20u;
        if ((unint64_t)v28 >= v13 || *v28 != 56)
          continue;
        v18 = v28 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_71:
        v32 = 0;
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!(_DWORD)result)
            return result;
          v29 = v32;
          v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v29 = *v18;
          v30 = (unsigned __int8 *)(v18 + 1);
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 10) = v29;
        *((_DWORD *)this + 12) |= 0x40u;
        if (v30 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_39;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_47;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_55;
      case 6u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_63;
      case 7u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_71;
      default:
        v8 = TagFallback & 7;
LABEL_24:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationWifiUsage::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[12];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = v5[12];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], (uint64_t)a2, a4);
  v6 = v5[12];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], (uint64_t)a2, a4);
  v6 = v5[12];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[8], (uint64_t)a2, a4);
  v6 = v5[12];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[10], (uint64_t)a2, a4);
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[9], (uint64_t)a2, a4);
  if ((v5[12] & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[10], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationWifiUsage::ByteSize(awd::metrics::LocationWifiUsage *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;

  LOBYTE(v2) = *((_BYTE *)this + 48);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_52;
  }
  if ((*((_BYTE *)this + 48) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 12);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 48) & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 12);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v11 = 2;
    }
    v3 = (v11 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_34;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 12);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_40;
  }
LABEL_34:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 12);
  }
  else
  {
    v15 = 2;
  }
  v3 = (v15 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_52;
    goto LABEL_46;
  }
LABEL_40:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v16 & 0x80000000) != 0)
  {
    v17 = 11;
  }
  else if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *((_DWORD *)this + 12);
  }
  else
  {
    v17 = 2;
  }
  v3 = (v17 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_46:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v18 & 0x80000000) != 0)
    {
      v19 = 11;
    }
    else if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    }
    else
    {
      v19 = 2;
    }
    v3 = (v19 + v3);
  }
LABEL_52:
  *((_DWORD *)this + 11) = v3;
  return v3;
}

void awd::metrics::LocationWifiUsage::CheckTypeAndMergeFrom(awd::metrics::LocationWifiUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationWifiUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationWifiUsage::CopyFrom(awd::metrics::LocationWifiUsage *this, const awd::metrics::LocationWifiUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationWifiUsage *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationWifiUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationWifiUsage::IsInitialized(awd::metrics::LocationWifiUsage *this)
{
  return 1;
}

uint64_t awd::metrics::LocationWifiUsage::Swap(uint64_t this, awd::metrics::LocationWifiUsage *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationWifiUsage *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationWifiUsage::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationWifiUsage");
}

_QWORD *awd::metrics::LocationEmergencySession::SharedCtor(_QWORD *this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  this[1] = 0;
  this[2] = v1;
  this[4] = 0;
  this[5] = 0;
  this[3] = 0;
  return this;
}

awd::metrics::LocationEmergencySession *awd::metrics::LocationEmergencySession::LocationEmergencySession(awd::metrics::LocationEmergencySession *this, const awd::metrics::LocationEmergencySession *a2)
{
  uint64_t v3;

  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D98E3A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_QWORD *)this + 3) = 0;
  awd::metrics::LocationEmergencySession::MergeFrom(this, a2);
  return this;
}

void sub_2189D1EE8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencySession::MergeFrom(awd::metrics::LocationEmergencySession *this, const awd::metrics::LocationEmergencySession *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  const std::string *v7;
  std::string *v8;
  int v9;
  int v10;
  int v11;
  _BYTE v12[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 11);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_16;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    v8 = (std::string *)*((_QWORD *)this + 2);
    if (v8 == (std::string *)MEMORY[0x24BEDD958])
    {
      v8 = (std::string *)operator new();
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v8;
    }
    std::string::operator=(v8, v7);
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_17;
    }
LABEL_16:
    v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 11) |= 4u;
    *((_DWORD *)this + 6) = v9;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_18;
    }
LABEL_17:
    v10 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 11) |= 8u;
    *((_DWORD *)this + 7) = v10;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        return;
      goto LABEL_10;
    }
LABEL_18:
    v11 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 11) |= 0x10u;
    *((_DWORD *)this + 8) = v11;
    if ((*((_DWORD *)a2 + 11) & 0x20) == 0)
      return;
LABEL_10:
    v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 11) |= 0x20u;
    *((_DWORD *)this + 9) = v5;
  }
}

void sub_2189D2070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencySession::~LocationEmergencySession(awd::metrics::LocationEmergencySession *this)
{
  *(_QWORD *)this = &off_24D98E3A8;
  awd::metrics::LocationEmergencySession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E3A8;
  awd::metrics::LocationEmergencySession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E3A8;
  awd::metrics::LocationEmergencySession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationEmergencySession::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationEmergencySession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationEmergencySession::default_instance(awd::metrics::LocationEmergencySession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationEmergencySession::default_instance_;
  if (!awd::metrics::LocationEmergencySession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationEmergencySession::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationEmergencySession::New(awd::metrics::LocationEmergencySession *this)
{
  _QWORD *result;
  uint64_t v2;

  result = (_QWORD *)operator new();
  *result = &off_24D98E3A8;
  result[1] = 0;
  v2 = MEMORY[0x24BEDD958];
  result[4] = 0;
  result[5] = 0;
  result[2] = v2;
  result[3] = 0;
  return result;
}

uint64_t awd::metrics::LocationEmergencySession::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 44);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationEmergencySession::MergePartialFromCodedStream(awd::metrics::LocationEmergencySession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  int v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  _QWORD *v18;
  _BYTE *v19;
  unsigned int v20;
  _BYTE *v21;
  unsigned int v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  unsigned __int8 *v27;
  uint64_t result;
  unsigned int v29;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = MEMORY[0x24BEDD958];
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
LABEL_28:
          v12 = *((_DWORD *)this + 11) | 1;
          *((_DWORD *)this + 11) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((_QWORD *)a2 + 1) = v11 + 1;
            goto LABEL_31;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_22;
        v12 = *((_DWORD *)this + 11);
LABEL_31:
        *((_DWORD *)this + 11) = v12 | 2;
        if (*((_QWORD *)this + 2) == v5)
        {
          v18 = (_QWORD *)operator new();
          v18[1] = 0;
          v18[2] = 0;
          *v18 = 0;
          *((_QWORD *)this + 2) = v18;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v19 >= v13 || *v19 != 24)
          continue;
        v14 = v19 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_37:
        v29 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
          if (!(_DWORD)result)
            return result;
          v20 = v29;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v20 = *v14;
          v21 = v14 + 1;
          *((_QWORD *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 6) = v20;
        *((_DWORD *)this + 11) |= 4u;
        if ((unint64_t)v21 >= v13 || *v21 != 32)
          continue;
        v15 = v21 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_45:
        v29 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
          if (!(_DWORD)result)
            return result;
          v22 = v29;
          v23 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v22 = *v15;
          v23 = v15 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 7) = v22;
        *((_DWORD *)this + 11) |= 8u;
        if ((unint64_t)v23 >= v13 || *v23 != 40)
          continue;
        v16 = v23 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_53:
        v29 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
          if (!(_DWORD)result)
            return result;
          v24 = v29;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v24 = *v16;
          v25 = v16 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 8) = v24;
        *((_DWORD *)this + 11) |= 0x10u;
        if ((unint64_t)v25 >= v13 || *v25 != 48)
          continue;
        v17 = v25 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_61:
        v29 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
          if (!(_DWORD)result)
            return result;
          v26 = v29;
          v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v26 = *v17;
          v27 = (unsigned __int8 *)(v17 + 1);
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 9) = v26;
        *((_DWORD *)this + 11) |= 0x20u;
        if (v27 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_37;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      case 6u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      default:
        v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationEmergencySession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[9], (uint64_t)a2, a4);
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[8], (uint64_t)a2, a4);
  if ((v5[11] & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[9], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationEmergencySession::ByteSize(awd::metrics::LocationEmergencySession *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_45;
  }
  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 11);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 44) & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 11);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 11);
    }
    else
    {
      v11 = 2;
    }
    v3 = (v11 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_45;
    goto LABEL_39;
  }
LABEL_33:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v15 = 2;
  }
  v3 = (v15 + v3);
  if ((v2 & 0x20) != 0)
  {
LABEL_39:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v16 & 0x80000000) != 0)
    {
      v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    }
    else
    {
      v17 = 2;
    }
    v3 = (v17 + v3);
  }
LABEL_45:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void awd::metrics::LocationEmergencySession::CheckTypeAndMergeFrom(awd::metrics::LocationEmergencySession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationEmergencySession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationEmergencySession::CopyFrom(awd::metrics::LocationEmergencySession *this, const awd::metrics::LocationEmergencySession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationEmergencySession *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationEmergencySession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationEmergencySession::IsInitialized(awd::metrics::LocationEmergencySession *this)
{
  return 1;
}

uint64_t awd::metrics::LocationEmergencySession::Swap(uint64_t this, awd::metrics::LocationEmergencySession *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationEmergencySession *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationEmergencySession::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationEmergencySession");
}

BOOL awd::metrics::LocationEmergencySessionStatistics_PositionMethod_IsValid(awd::metrics *this)
{
  return this < 0xB;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_PositionSession_IsValid(awd::metrics *this)
{
  return this < 0xA;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_PositionProtocol_IsValid(awd::metrics *this)
{
  return this < 9;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_RadioAccessTechnology_IsValid(awd::metrics *this)
{
  return this < 0xD;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_PositionReport_IsValid(awd::metrics *this)
{
  return this < 4;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_SessionErrorCode_IsValid(awd::metrics *this)
{
  return this < 0x24;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_HELOUsage_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_TandemCapability_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_PhoneNumberAvailability_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_CommunicationType_IsValid(awd::metrics *this)
{
  return this < 3;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics_GnssSignalEnvironmentType_IsValid(awd::metrics *this)
{
  return (this < 8) & (0xDFu >> (char)this);
}

BOOL awd::metrics::LocationEmergencySessionStatistics_AbortCauseType_IsValid(awd::metrics *this)
{
  return this < 0xC;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_DiscardedPosMsgType_IsValid(awd::metrics *this)
{
  return this < 8;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_CallMode_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_CallTriggerType_IsValid(awd::metrics *this)
{
  return this < 9;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(awd::metrics *this)
{
  return this < 4;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::SharedCtor(awd::metrics::LocationEmergencySessionStatistics *this)
{
  uint64_t result;
  uint64_t v2;

  *(_OWORD *)((char *)this + 24) = 0u;
  result = (uint64_t)this + 24;
  *(_DWORD *)(result + 444) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)(result - 16) = 0;
  *(_QWORD *)(result - 8) = v2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_OWORD *)(result + 128) = 0u;
  *(_OWORD *)(result + 144) = 0u;
  *(_OWORD *)(result + 160) = 0u;
  *(_OWORD *)(result + 176) = 0u;
  *(_OWORD *)(result + 192) = 0u;
  *(_OWORD *)(result + 208) = 0u;
  *(_OWORD *)(result + 224) = 0u;
  *(_OWORD *)(result + 240) = 0u;
  *(_QWORD *)(result + 256) = v2;
  *(_QWORD *)(result + 264) = v2;
  *(_OWORD *)(result + 272) = 0u;
  *(_OWORD *)(result + 288) = 0u;
  *(_OWORD *)(result + 304) = 0u;
  *(_DWORD *)(result + 319) = 0;
  *(_OWORD *)(result + 368) = 0u;
  *(_OWORD *)(result + 340) = 0u;
  *(_OWORD *)(result + 356) = 0u;
  *(_OWORD *)(result + 324) = 0u;
  *(_QWORD *)(result + 384) = v2;
  *(_QWORD *)(result + 392) = 0;
  *(_QWORD *)(result + 400) = v2;
  *(_QWORD *)(result + 448) = 0;
  *(_QWORD *)(result + 456) = 0;
  *(_DWORD *)(result + 440) = 0;
  *(_OWORD *)(result + 424) = 0u;
  *(_OWORD *)(result + 408) = 0u;
  return result;
}

awd::metrics::LocationEmergencySessionStatistics *awd::metrics::LocationEmergencySessionStatistics::LocationEmergencySessionStatistics(awd::metrics::LocationEmergencySessionStatistics *this, const awd::metrics::LocationEmergencySessionStatistics *a2)
{
  uint64_t v3;

  *((_DWORD *)this + 117) = 0;
  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D98E420;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v3;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *((_QWORD *)this + 35) = v3;
  *((_QWORD *)this + 36) = v3;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_DWORD *)((char *)this + 343) = 0;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 364) = 0u;
  *(_OWORD *)((char *)this + 380) = 0u;
  *(_OWORD *)((char *)this + 348) = 0u;
  *((_QWORD *)this + 51) = v3;
  *((_QWORD *)this + 52) = 0;
  *((_QWORD *)this + 53) = v3;
  *((_QWORD *)this + 59) = 0;
  *((_QWORD *)this + 60) = 0;
  *((_DWORD *)this + 116) = 0;
  *((_OWORD *)this + 27) = 0u;
  *((_OWORD *)this + 28) = 0u;
  awd::metrics::LocationEmergencySessionStatistics::MergeFrom(this, a2);
  return this;
}

void sub_2189D2C34(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencySessionStatistics::MergeFrom(awd::metrics::LocationEmergencySessionStatistics *this, const awd::metrics::LocationEmergencySessionStatistics *a2)
{
  unsigned int v4;
  uint64_t v5;
  const std::string *v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  char v23;
  char v24;
  unsigned int v25;
  unsigned int v26;
  char v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  char v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  char v43;
  char v44;
  int v45;
  int v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  char v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  char v64;
  char v65;
  char v66;
  uint64_t v67;
  int v68;
  const std::string *v69;
  std::string *v70;
  const std::string *v71;
  std::string *v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  char v99;
  char v100;
  char v101;
  int v102;
  int v103;
  int v104;
  int v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  const std::string *v122;
  std::string *v123;
  const std::string *v124;
  std::string *v125;
  _BYTE v126[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v126);
  }
  v4 = *((_DWORD *)a2 + 118);
  if ((_BYTE)v4)
  {
    if ((v4 & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 118) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 118);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_17;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    v6 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 118) |= 2u;
    v7 = (std::string *)*((_QWORD *)this + 2);
    if (v7 == (std::string *)MEMORY[0x24BEDD958])
    {
      v7 = (std::string *)operator new();
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v7;
    }
    std::string::operator=(v7, v6);
    v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_18;
    }
LABEL_17:
    v8 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 118) |= 4u;
    *((_QWORD *)this + 3) = v8;
    v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_19;
    }
LABEL_18:
    v9 = *((_QWORD *)a2 + 4);
    *((_DWORD *)this + 118) |= 8u;
    *((_QWORD *)this + 4) = v9;
    v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_20;
    }
LABEL_19:
    v10 = *((_QWORD *)a2 + 5);
    *((_DWORD *)this + 118) |= 0x10u;
    *((_QWORD *)this + 5) = v10;
    v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_21;
    }
LABEL_20:
    v11 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 118) |= 0x20u;
    *((_DWORD *)this + 12) = v11;
    v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_24;
      goto LABEL_22;
    }
LABEL_21:
    v12 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 118) |= 0x40u;
    *((_DWORD *)this + 13) = v12;
    v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x80) == 0)
      goto LABEL_24;
LABEL_22:
    v13 = *((_DWORD *)a2 + 14);
    if (v13 >= 0xB)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 118) |= 0x80u;
    *((_DWORD *)this + 14) = v13;
    v4 = *((_DWORD *)a2 + 118);
  }
LABEL_24:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_40;
  if ((v4 & 0x100) != 0)
  {
    v14 = *((_DWORD *)a2 + 15);
    if (v14 >= 0xA)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 118) |= 0x100u;
    *((_DWORD *)this + 15) = v14;
    v4 = *((_DWORD *)a2 + 118);
  }
  if ((v4 & 0x200) != 0)
  {
    v15 = *((_DWORD *)a2 + 16);
    if (v15 >= 9)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 118) |= 0x200u;
    *((_DWORD *)this + 16) = v15;
    v4 = *((_DWORD *)a2 + 118);
  }
  if ((v4 & 0x400) != 0)
  {
    v16 = *((_DWORD *)a2 + 17);
    if (v16 >= 0xD)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 118) |= 0x400u;
    *((_DWORD *)this + 17) = v16;
    v4 = *((_DWORD *)a2 + 118);
  }
  if ((v4 & 0x800) != 0)
  {
    v30 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 118) |= 0x800u;
    *((_DWORD *)this + 18) = v30;
    v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x1000) == 0)
    {
LABEL_36:
      if ((v4 & 0x2000) == 0)
        goto LABEL_37;
      goto LABEL_95;
    }
  }
  else if ((v4 & 0x1000) == 0)
  {
    goto LABEL_36;
  }
  v31 = *((_DWORD *)a2 + 19);
  *((_DWORD *)this + 118) |= 0x1000u;
  *((_DWORD *)this + 19) = v31;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x2000) == 0)
  {
LABEL_37:
    if ((v4 & 0x4000) == 0)
      goto LABEL_38;
    goto LABEL_96;
  }
LABEL_95:
  v32 = *((_DWORD *)a2 + 20);
  *((_DWORD *)this + 118) |= 0x2000u;
  *((_DWORD *)this + 20) = v32;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x4000) == 0)
  {
LABEL_38:
    if ((v4 & 0x8000) == 0)
      goto LABEL_40;
    goto LABEL_39;
  }
LABEL_96:
  v33 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 118) |= 0x4000u;
  *((_DWORD *)this + 21) = v33;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x8000) != 0)
  {
LABEL_39:
    v17 = *((_QWORD *)a2 + 11);
    *((_DWORD *)this + 118) |= 0x8000u;
    *((_QWORD *)this + 11) = v17;
    v4 = *((_DWORD *)a2 + 118);
  }
LABEL_40:
  if ((v4 & 0xFF0000) == 0)
    goto LABEL_61;
  if ((v4 & 0x10000) != 0)
  {
    v18 = *((_QWORD *)a2 + 12);
    *((_DWORD *)this + 118) |= 0x10000u;
    *((_QWORD *)this + 12) = v18;
    v4 = *((_DWORD *)a2 + 118);
  }
  if ((v4 & 0x20000) != 0)
  {
    v19 = *((_DWORD *)a2 + 26);
    if (v19 >= 4)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 118) |= 0x20000u;
    *((_DWORD *)this + 26) = v19;
    v4 = *((_DWORD *)a2 + 118);
  }
  if ((v4 & 0x40000) != 0)
  {
    v20 = *((_DWORD *)a2 + 27);
    *((_DWORD *)this + 118) |= 0x40000u;
    *((_DWORD *)this + 27) = v20;
    v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x80000) == 0)
    {
LABEL_48:
      if ((v4 & 0x100000) == 0)
        goto LABEL_49;
      goto LABEL_55;
    }
  }
  else if ((v4 & 0x80000) == 0)
  {
    goto LABEL_48;
  }
  v21 = *((_DWORD *)a2 + 28);
  *((_DWORD *)this + 118) |= 0x80000u;
  *((_DWORD *)this + 28) = v21;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x100000) == 0)
  {
LABEL_49:
    if ((v4 & 0x200000) == 0)
      goto LABEL_50;
    goto LABEL_57;
  }
LABEL_55:
  v22 = *((_DWORD *)a2 + 29);
  if (v22 >= 0x24)
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
  *((_DWORD *)this + 118) |= 0x100000u;
  *((_DWORD *)this + 29) = v22;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x200000) == 0)
  {
LABEL_50:
    if ((v4 & 0x400000) == 0)
      goto LABEL_51;
    goto LABEL_58;
  }
LABEL_57:
  v23 = *((_BYTE *)a2 + 132);
  *((_DWORD *)this + 118) |= 0x200000u;
  *((_BYTE *)this + 132) = v23;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x400000) == 0)
  {
LABEL_51:
    if ((v4 & 0x800000) == 0)
      goto LABEL_61;
    goto LABEL_59;
  }
LABEL_58:
  v24 = *((_BYTE *)a2 + 133);
  *((_DWORD *)this + 118) |= 0x400000u;
  *((_BYTE *)this + 133) = v24;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x800000) == 0)
    goto LABEL_61;
LABEL_59:
  v25 = *((_DWORD *)a2 + 32);
  if (v25 >= 3)
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
  *((_DWORD *)this + 118) |= 0x800000u;
  *((_DWORD *)this + 32) = v25;
  v4 = *((_DWORD *)a2 + 118);
LABEL_61:
  if (!HIBYTE(v4))
    goto LABEL_70;
  if ((v4 & 0x1000000) != 0)
  {
    v60 = *((_QWORD *)a2 + 15);
    *((_DWORD *)this + 118) |= 0x1000000u;
    *((_QWORD *)this + 15) = v60;
    v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_64:
      if ((v4 & 0x4000000) == 0)
        goto LABEL_65;
      goto LABEL_154;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_64;
  }
  v61 = *((_QWORD *)a2 + 17);
  *((_DWORD *)this + 118) |= 0x2000000u;
  *((_QWORD *)this + 17) = v61;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_65:
    if ((v4 & 0x8000000) == 0)
      goto LABEL_66;
    goto LABEL_155;
  }
LABEL_154:
  v62 = *((_DWORD *)a2 + 36);
  *((_DWORD *)this + 118) |= 0x4000000u;
  *((_DWORD *)this + 36) = v62;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_66:
    if ((v4 & 0x10000000) == 0)
      goto LABEL_67;
    goto LABEL_156;
  }
LABEL_155:
  v63 = *((_DWORD *)a2 + 37);
  *((_DWORD *)this + 118) |= 0x8000000u;
  *((_DWORD *)this + 37) = v63;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_67:
    if ((v4 & 0x20000000) == 0)
      goto LABEL_68;
    goto LABEL_157;
  }
LABEL_156:
  v64 = *((_BYTE *)a2 + 134);
  *((_DWORD *)this + 118) |= 0x10000000u;
  *((_BYTE *)this + 134) = v64;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_68:
    if ((v4 & 0x40000000) == 0)
      goto LABEL_69;
LABEL_158:
    v66 = *((_BYTE *)a2 + 164);
    *((_DWORD *)this + 118) |= 0x40000000u;
    *((_BYTE *)this + 164) = v66;
    if ((*((_DWORD *)a2 + 118) & 0x80000000) == 0)
      goto LABEL_70;
    goto LABEL_159;
  }
LABEL_157:
  v65 = *((_BYTE *)a2 + 135);
  *((_DWORD *)this + 118) |= 0x20000000u;
  *((_BYTE *)this + 135) = v65;
  v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x40000000) != 0)
    goto LABEL_158;
LABEL_69:
  if ((v4 & 0x80000000) == 0)
    goto LABEL_70;
LABEL_159:
  v67 = *((_QWORD *)a2 + 19);
  *((_DWORD *)this + 118) |= 0x80000000;
  *((_QWORD *)this + 19) = v67;
LABEL_70:
  v26 = *((_DWORD *)a2 + 119);
  if (!(_BYTE)v26)
    goto LABEL_83;
  if ((v26 & 1) != 0)
  {
    v27 = *((_BYTE *)a2 + 165);
    *((_DWORD *)this + 119) |= 1u;
    *((_BYTE *)this + 165) = v27;
    v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 2) != 0)
  {
    v28 = *((_DWORD *)a2 + 40);
    if (v28 >= 5)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 119) |= 2u;
    *((_DWORD *)this + 40) = v28;
    v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 4) != 0)
  {
    v42 = *((_DWORD *)a2 + 42);
    *((_DWORD *)this + 119) |= 4u;
    *((_DWORD *)this + 42) = v42;
    v26 = *((_DWORD *)a2 + 119);
    if ((v26 & 8) == 0)
    {
LABEL_78:
      if ((v26 & 0x10) == 0)
        goto LABEL_79;
      goto LABEL_119;
    }
  }
  else if ((v26 & 8) == 0)
  {
    goto LABEL_78;
  }
  v43 = *((_BYTE *)a2 + 166);
  *((_DWORD *)this + 119) |= 8u;
  *((_BYTE *)this + 166) = v43;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x10) == 0)
  {
LABEL_79:
    if ((v26 & 0x20) == 0)
      goto LABEL_80;
    goto LABEL_120;
  }
LABEL_119:
  v44 = *((_BYTE *)a2 + 167);
  *((_DWORD *)this + 119) |= 0x10u;
  *((_BYTE *)this + 167) = v44;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x20) == 0)
  {
LABEL_80:
    if ((v26 & 0x40) == 0)
      goto LABEL_81;
    goto LABEL_121;
  }
LABEL_120:
  v45 = *((_DWORD *)a2 + 43);
  *((_DWORD *)this + 119) |= 0x20u;
  *((_DWORD *)this + 43) = v45;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x40) == 0)
  {
LABEL_81:
    if ((v26 & 0x80) == 0)
      goto LABEL_83;
    goto LABEL_82;
  }
LABEL_121:
  v46 = *((_DWORD *)a2 + 44);
  *((_DWORD *)this + 119) |= 0x40u;
  *((_DWORD *)this + 44) = v46;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x80) != 0)
  {
LABEL_82:
    v29 = *((_DWORD *)a2 + 45);
    *((_DWORD *)this + 119) |= 0x80u;
    *((_DWORD *)this + 45) = v29;
    v26 = *((_DWORD *)a2 + 119);
  }
LABEL_83:
  if ((v26 & 0xFF00) == 0)
    goto LABEL_107;
  if ((v26 & 0x100) != 0)
  {
    v34 = *((_BYTE *)a2 + 212);
    *((_DWORD *)this + 119) |= 0x100u;
    *((_BYTE *)this + 212) = v34;
    v26 = *((_DWORD *)a2 + 119);
    if ((v26 & 0x200) == 0)
    {
LABEL_86:
      if ((v26 & 0x400) == 0)
        goto LABEL_87;
      goto LABEL_100;
    }
  }
  else if ((v26 & 0x200) == 0)
  {
    goto LABEL_86;
  }
  v35 = *((_DWORD *)a2 + 46);
  *((_DWORD *)this + 119) |= 0x200u;
  *((_DWORD *)this + 46) = v35;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x400) == 0)
  {
LABEL_87:
    if ((v26 & 0x800) == 0)
      goto LABEL_88;
    goto LABEL_101;
  }
LABEL_100:
  v36 = *((_DWORD *)a2 + 47);
  *((_DWORD *)this + 119) |= 0x400u;
  *((_DWORD *)this + 47) = v36;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x800) == 0)
  {
LABEL_88:
    if ((v26 & 0x1000) == 0)
      goto LABEL_89;
    goto LABEL_102;
  }
LABEL_101:
  v37 = *((_DWORD *)a2 + 48);
  *((_DWORD *)this + 119) |= 0x800u;
  *((_DWORD *)this + 48) = v37;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x1000) == 0)
  {
LABEL_89:
    if ((v26 & 0x2000) == 0)
      goto LABEL_90;
    goto LABEL_103;
  }
LABEL_102:
  v38 = *((_DWORD *)a2 + 49);
  *((_DWORD *)this + 119) |= 0x1000u;
  *((_DWORD *)this + 49) = v38;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x2000) == 0)
  {
LABEL_90:
    if ((v26 & 0x4000) == 0)
      goto LABEL_91;
    goto LABEL_104;
  }
LABEL_103:
  v39 = *((_DWORD *)a2 + 50);
  *((_DWORD *)this + 119) |= 0x2000u;
  *((_DWORD *)this + 50) = v39;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x4000) == 0)
  {
LABEL_91:
    if ((v26 & 0x8000) == 0)
      goto LABEL_107;
    goto LABEL_105;
  }
LABEL_104:
  v40 = *((_DWORD *)a2 + 51);
  *((_DWORD *)this + 119) |= 0x4000u;
  *((_DWORD *)this + 51) = v40;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x8000) == 0)
    goto LABEL_107;
LABEL_105:
  v41 = *((_DWORD *)a2 + 52);
  if (v41 >= 5)
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
  *((_DWORD *)this + 119) |= 0x8000u;
  *((_DWORD *)this + 52) = v41;
  v26 = *((_DWORD *)a2 + 119);
LABEL_107:
  if ((v26 & 0xFF0000) == 0)
    goto LABEL_132;
  if ((v26 & 0x10000) != 0)
  {
    v47 = *((_BYTE *)a2 + 213);
    *((_DWORD *)this + 119) |= 0x10000u;
    *((_BYTE *)this + 213) = v47;
    v26 = *((_DWORD *)a2 + 119);
    if ((v26 & 0x20000) == 0)
    {
LABEL_110:
      if ((v26 & 0x40000) == 0)
        goto LABEL_111;
      goto LABEL_125;
    }
  }
  else if ((v26 & 0x20000) == 0)
  {
    goto LABEL_110;
  }
  v48 = *((_BYTE *)a2 + 214);
  *((_DWORD *)this + 119) |= 0x20000u;
  *((_BYTE *)this + 214) = v48;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x40000) == 0)
  {
LABEL_111:
    if ((v26 & 0x80000) == 0)
      goto LABEL_112;
    goto LABEL_126;
  }
LABEL_125:
  v49 = *((_QWORD *)a2 + 27);
  *((_DWORD *)this + 119) |= 0x40000u;
  *((_QWORD *)this + 27) = v49;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x80000) == 0)
  {
LABEL_112:
    if ((v26 & 0x100000) == 0)
      goto LABEL_113;
    goto LABEL_127;
  }
LABEL_126:
  v50 = *((_QWORD *)a2 + 28);
  *((_DWORD *)this + 119) |= 0x80000u;
  *((_QWORD *)this + 28) = v50;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x100000) == 0)
  {
LABEL_113:
    if ((v26 & 0x200000) == 0)
      goto LABEL_114;
    goto LABEL_128;
  }
LABEL_127:
  v51 = *((_QWORD *)a2 + 29);
  *((_DWORD *)this + 119) |= 0x100000u;
  *((_QWORD *)this + 29) = v51;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x200000) == 0)
  {
LABEL_114:
    if ((v26 & 0x400000) == 0)
      goto LABEL_115;
    goto LABEL_129;
  }
LABEL_128:
  v52 = *((_QWORD *)a2 + 30);
  *((_DWORD *)this + 119) |= 0x200000u;
  *((_QWORD *)this + 30) = v52;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x400000) == 0)
  {
LABEL_115:
    if ((v26 & 0x800000) == 0)
      goto LABEL_132;
    goto LABEL_130;
  }
LABEL_129:
  v53 = *((_QWORD *)a2 + 31);
  *((_DWORD *)this + 119) |= 0x400000u;
  *((_QWORD *)this + 31) = v53;
  v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x800000) == 0)
    goto LABEL_132;
LABEL_130:
  v54 = *((_DWORD *)a2 + 64);
  if (v54 >= 3)
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
  *((_DWORD *)this + 119) |= 0x800000u;
  *((_DWORD *)this + 64) = v54;
  v26 = *((_DWORD *)a2 + 119);
LABEL_132:
  if (!HIBYTE(v26))
    goto LABEL_167;
  if ((v26 & 0x1000000) != 0)
  {
    v55 = *((_DWORD *)a2 + 65);
    if (v55 >= 5 && v55 - 6 >= 2)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 119) |= 0x1000000u;
    *((_DWORD *)this + 65) = v55;
    v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 0x2000000) != 0)
  {
    v56 = *((_BYTE *)a2 + 215);
    *((_DWORD *)this + 119) |= 0x2000000u;
    *((_BYTE *)this + 215) = v56;
    v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 0x4000000) != 0)
  {
    v57 = *((_DWORD *)a2 + 66);
    if (v57 >= 0xC)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 119) |= 0x4000000u;
    *((_DWORD *)this + 66) = v57;
    v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 0x8000000) != 0)
  {
    v58 = *((_DWORD *)a2 + 67);
    if (v58 >= 0xA)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 119) |= 0x8000000u;
    *((_DWORD *)this + 67) = v58;
    v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 0x10000000) != 0)
  {
    v59 = *((_DWORD *)a2 + 68);
    if (v59 >= 3)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 119) |= 0x10000000u;
    *((_DWORD *)this + 68) = v59;
    v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 0x20000000) != 0)
  {
    v68 = *((_DWORD *)a2 + 69);
    *((_DWORD *)this + 119) |= 0x20000000u;
    *((_DWORD *)this + 69) = v68;
    v26 = *((_DWORD *)a2 + 119);
    if ((v26 & 0x40000000) == 0)
    {
LABEL_150:
      if ((v26 & 0x80000000) == 0)
        goto LABEL_167;
      goto LABEL_164;
    }
  }
  else if ((v26 & 0x40000000) == 0)
  {
    goto LABEL_150;
  }
  v69 = (const std::string *)*((_QWORD *)a2 + 35);
  *((_DWORD *)this + 119) |= 0x40000000u;
  v70 = (std::string *)*((_QWORD *)this + 35);
  if (v70 == (std::string *)MEMORY[0x24BEDD958])
  {
    v70 = (std::string *)operator new();
    v70->__r_.__value_.__l.__size_ = 0;
    v70->__r_.__value_.__r.__words[2] = 0;
    v70->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 35) = v70;
  }
  std::string::operator=(v70, v69);
  if ((*((_DWORD *)a2 + 119) & 0x80000000) != 0)
  {
LABEL_164:
    v71 = (const std::string *)*((_QWORD *)a2 + 36);
    *((_DWORD *)this + 119) |= 0x80000000;
    v72 = (std::string *)*((_QWORD *)this + 36);
    if (v72 == (std::string *)MEMORY[0x24BEDD958])
    {
      v72 = (std::string *)operator new();
      v72->__r_.__value_.__l.__size_ = 0;
      v72->__r_.__value_.__r.__words[2] = 0;
      v72->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 36) = v72;
    }
    std::string::operator=(v72, v71);
  }
LABEL_167:
  v73 = *((_DWORD *)a2 + 120);
  if (!(_BYTE)v73)
    goto LABEL_177;
  if ((v73 & 1) != 0)
  {
    v97 = *((_DWORD *)a2 + 74);
    *((_DWORD *)this + 120) |= 1u;
    *((_DWORD *)this + 74) = v97;
    v73 = *((_DWORD *)a2 + 120);
    if ((v73 & 2) == 0)
    {
LABEL_170:
      if ((v73 & 4) == 0)
        goto LABEL_171;
      goto LABEL_260;
    }
  }
  else if ((v73 & 2) == 0)
  {
    goto LABEL_170;
  }
  v98 = *((_DWORD *)a2 + 75);
  *((_DWORD *)this + 120) |= 2u;
  *((_DWORD *)this + 75) = v98;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 4) == 0)
  {
LABEL_171:
    if ((v73 & 8) == 0)
      goto LABEL_172;
    goto LABEL_261;
  }
LABEL_260:
  v99 = *((_BYTE *)a2 + 304);
  *((_DWORD *)this + 120) |= 4u;
  *((_BYTE *)this + 304) = v99;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 8) == 0)
  {
LABEL_172:
    if ((v73 & 0x10) == 0)
      goto LABEL_173;
    goto LABEL_262;
  }
LABEL_261:
  v100 = *((_BYTE *)a2 + 305);
  *((_DWORD *)this + 120) |= 8u;
  *((_BYTE *)this + 305) = v100;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x10) == 0)
  {
LABEL_173:
    if ((v73 & 0x20) == 0)
      goto LABEL_174;
    goto LABEL_263;
  }
LABEL_262:
  v101 = *((_BYTE *)a2 + 306);
  *((_DWORD *)this + 120) |= 0x10u;
  *((_BYTE *)this + 306) = v101;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x20) == 0)
  {
LABEL_174:
    if ((v73 & 0x40) == 0)
      goto LABEL_175;
    goto LABEL_264;
  }
LABEL_263:
  v102 = *((_DWORD *)a2 + 77);
  *((_DWORD *)this + 120) |= 0x20u;
  *((_DWORD *)this + 77) = v102;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x40) == 0)
  {
LABEL_175:
    if ((v73 & 0x80) == 0)
      goto LABEL_177;
    goto LABEL_176;
  }
LABEL_264:
  v103 = *((_DWORD *)a2 + 78);
  *((_DWORD *)this + 120) |= 0x40u;
  *((_DWORD *)this + 78) = v103;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x80) != 0)
  {
LABEL_176:
    v74 = *((_DWORD *)a2 + 79);
    *((_DWORD *)this + 120) |= 0x80u;
    *((_DWORD *)this + 79) = v74;
    v73 = *((_DWORD *)a2 + 120);
  }
LABEL_177:
  if ((v73 & 0xFF00) == 0)
    goto LABEL_187;
  if ((v73 & 0x100) != 0)
  {
    v104 = *((_DWORD *)a2 + 80);
    *((_DWORD *)this + 120) |= 0x100u;
    *((_DWORD *)this + 80) = v104;
    v73 = *((_DWORD *)a2 + 120);
    if ((v73 & 0x200) == 0)
    {
LABEL_180:
      if ((v73 & 0x400) == 0)
        goto LABEL_181;
      goto LABEL_268;
    }
  }
  else if ((v73 & 0x200) == 0)
  {
    goto LABEL_180;
  }
  v105 = *((_DWORD *)a2 + 81);
  *((_DWORD *)this + 120) |= 0x200u;
  *((_DWORD *)this + 81) = v105;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x400) == 0)
  {
LABEL_181:
    if ((v73 & 0x800) == 0)
      goto LABEL_182;
    goto LABEL_269;
  }
LABEL_268:
  v106 = *((_BYTE *)a2 + 307);
  *((_DWORD *)this + 120) |= 0x400u;
  *((_BYTE *)this + 307) = v106;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x800) == 0)
  {
LABEL_182:
    if ((v73 & 0x1000) == 0)
      goto LABEL_183;
    goto LABEL_270;
  }
LABEL_269:
  v107 = *((_BYTE *)a2 + 328);
  *((_DWORD *)this + 120) |= 0x800u;
  *((_BYTE *)this + 328) = v107;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x1000) == 0)
  {
LABEL_183:
    if ((v73 & 0x2000) == 0)
      goto LABEL_184;
    goto LABEL_271;
  }
LABEL_270:
  v108 = *((_BYTE *)a2 + 329);
  *((_DWORD *)this + 120) |= 0x1000u;
  *((_BYTE *)this + 329) = v108;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x2000) == 0)
  {
LABEL_184:
    if ((v73 & 0x4000) == 0)
      goto LABEL_185;
    goto LABEL_272;
  }
LABEL_271:
  v109 = *((_BYTE *)a2 + 330);
  *((_DWORD *)this + 120) |= 0x2000u;
  *((_BYTE *)this + 330) = v109;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x4000) == 0)
  {
LABEL_185:
    if ((v73 & 0x8000) == 0)
      goto LABEL_187;
    goto LABEL_186;
  }
LABEL_272:
  v110 = *((_BYTE *)a2 + 331);
  *((_DWORD *)this + 120) |= 0x4000u;
  *((_BYTE *)this + 331) = v110;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x8000) != 0)
  {
LABEL_186:
    v75 = *((_DWORD *)a2 + 83);
    *((_DWORD *)this + 120) |= 0x8000u;
    *((_DWORD *)this + 83) = v75;
    v73 = *((_DWORD *)a2 + 120);
  }
LABEL_187:
  if ((v73 & 0xFF0000) == 0)
    goto LABEL_201;
  if ((v73 & 0x10000) != 0)
  {
    v76 = *((_DWORD *)a2 + 84);
    *((_DWORD *)this + 120) |= 0x10000u;
    *((_DWORD *)this + 84) = v76;
    v73 = *((_DWORD *)a2 + 120);
  }
  if ((v73 & 0x20000) != 0)
  {
    v77 = *((_DWORD *)a2 + 85);
    if (v77 >= 8)
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    *((_DWORD *)this + 120) |= 0x20000u;
    *((_DWORD *)this + 85) = v77;
    v73 = *((_DWORD *)a2 + 120);
  }
  if ((v73 & 0x40000) != 0)
  {
    v111 = *((_BYTE *)a2 + 344);
    *((_DWORD *)this + 120) |= 0x40000u;
    *((_BYTE *)this + 344) = v111;
    v73 = *((_DWORD *)a2 + 120);
    if ((v73 & 0x80000) == 0)
    {
LABEL_195:
      if ((v73 & 0x100000) == 0)
        goto LABEL_196;
      goto LABEL_276;
    }
  }
  else if ((v73 & 0x80000) == 0)
  {
    goto LABEL_195;
  }
  v112 = *((_BYTE *)a2 + 345);
  *((_DWORD *)this + 120) |= 0x80000u;
  *((_BYTE *)this + 345) = v112;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x100000) == 0)
  {
LABEL_196:
    if ((v73 & 0x200000) == 0)
      goto LABEL_197;
    goto LABEL_277;
  }
LABEL_276:
  v113 = *((_BYTE *)a2 + 346);
  *((_DWORD *)this + 120) |= 0x100000u;
  *((_BYTE *)this + 346) = v113;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x200000) == 0)
  {
LABEL_197:
    if ((v73 & 0x400000) == 0)
      goto LABEL_199;
    goto LABEL_198;
  }
LABEL_277:
  v114 = *((_DWORD *)a2 + 87);
  if (v114 >= 3)
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
  *((_DWORD *)this + 120) |= 0x200000u;
  *((_DWORD *)this + 87) = v114;
  v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x400000) == 0)
    goto LABEL_199;
LABEL_198:
  v78 = *((_DWORD *)a2 + 88);
  *((_DWORD *)this + 120) |= 0x400000u;
  *((_DWORD *)this + 88) = v78;
  v73 = *((_DWORD *)a2 + 120);
LABEL_199:
  if ((v73 & 0x800000) != 0)
  {
    v79 = *((_DWORD *)a2 + 89);
    *((_DWORD *)this + 120) |= 0x800000u;
    *((_DWORD *)this + 89) = v79;
    v73 = *((_DWORD *)a2 + 120);
  }
LABEL_201:
  if (HIBYTE(v73))
  {
    if ((v73 & 0x1000000) != 0)
    {
      v80 = *((_DWORD *)a2 + 90);
      *((_DWORD *)this + 120) |= 0x1000000u;
      *((_DWORD *)this + 90) = v80;
      v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x2000000) != 0)
    {
      v81 = *((_DWORD *)a2 + 91);
      if (v81 >= 9)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 120) |= 0x2000000u;
      *((_DWORD *)this + 91) = v81;
      v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x4000000) != 0)
    {
      v82 = *((_DWORD *)a2 + 92);
      if (v82 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 120) |= 0x4000000u;
      *((_DWORD *)this + 92) = v82;
      v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x8000000) != 0)
    {
      v83 = *((_DWORD *)a2 + 93);
      if (v83 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 120) |= 0x8000000u;
      *((_DWORD *)this + 93) = v83;
      v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x10000000) != 0)
    {
      v84 = *((_DWORD *)a2 + 94);
      if (v84 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 120) |= 0x10000000u;
      *((_DWORD *)this + 94) = v84;
      v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x20000000) != 0)
    {
      v85 = *((_DWORD *)a2 + 95);
      if (v85 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 120) |= 0x20000000u;
      *((_DWORD *)this + 95) = v85;
      v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x40000000) != 0)
    {
      v86 = *((_DWORD *)a2 + 96);
      if (v86 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 120) |= 0x40000000u;
      *((_DWORD *)this + 96) = v86;
      v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x80000000) != 0)
    {
      v87 = *((_DWORD *)a2 + 97);
      if (v87 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 120) |= 0x80000000;
      *((_DWORD *)this + 97) = v87;
    }
  }
  v88 = *((_DWORD *)a2 + 121);
  if ((_BYTE)v88)
  {
    if ((v88 & 1) != 0)
    {
      v89 = *((_DWORD *)a2 + 98);
      if (v89 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 121) |= 1u;
      *((_DWORD *)this + 98) = v89;
      v88 = *((_DWORD *)a2 + 121);
    }
    if ((v88 & 2) != 0)
    {
      v90 = *((_DWORD *)a2 + 99);
      if (v90 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 121) |= 2u;
      *((_DWORD *)this + 99) = v90;
      v88 = *((_DWORD *)a2 + 121);
    }
    if ((v88 & 4) != 0)
    {
      v91 = *((_DWORD *)a2 + 100);
      if (v91 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 121) |= 4u;
      *((_DWORD *)this + 100) = v91;
      v88 = *((_DWORD *)a2 + 121);
    }
    if ((v88 & 8) != 0)
    {
      v92 = *((_DWORD *)a2 + 101);
      if (v92 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 121) |= 8u;
      *((_DWORD *)this + 101) = v92;
      v88 = *((_DWORD *)a2 + 121);
    }
    if ((v88 & 0x10) != 0)
    {
      v93 = *((_DWORD *)a2 + 104);
      if (v93 >= 4)
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      *((_DWORD *)this + 121) |= 0x10u;
      *((_DWORD *)this + 104) = v93;
      v88 = *((_DWORD *)a2 + 121);
    }
    if ((v88 & 0x20) != 0)
    {
      v122 = (const std::string *)*((_QWORD *)a2 + 51);
      *((_DWORD *)this + 121) |= 0x20u;
      v123 = (std::string *)*((_QWORD *)this + 51);
      if (v123 == (std::string *)MEMORY[0x24BEDD958])
      {
        v123 = (std::string *)operator new();
        v123->__r_.__value_.__l.__size_ = 0;
        v123->__r_.__value_.__r.__words[2] = 0;
        v123->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 51) = v123;
      }
      std::string::operator=(v123, v122);
      v88 = *((_DWORD *)a2 + 121);
      if ((v88 & 0x40) == 0)
      {
LABEL_243:
        if ((v88 & 0x80) == 0)
          goto LABEL_245;
        goto LABEL_244;
      }
    }
    else if ((v88 & 0x40) == 0)
    {
      goto LABEL_243;
    }
    v124 = (const std::string *)*((_QWORD *)a2 + 53);
    *((_DWORD *)this + 121) |= 0x40u;
    v125 = (std::string *)*((_QWORD *)this + 53);
    if (v125 == (std::string *)MEMORY[0x24BEDD958])
    {
      v125 = (std::string *)operator new();
      v125->__r_.__value_.__l.__size_ = 0;
      v125->__r_.__value_.__r.__words[2] = 0;
      v125->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 53) = v125;
    }
    std::string::operator=(v125, v124);
    v88 = *((_DWORD *)a2 + 121);
    if ((v88 & 0x80) != 0)
    {
LABEL_244:
      v94 = *((_DWORD *)a2 + 105);
      *((_DWORD *)this + 121) |= 0x80u;
      *((_DWORD *)this + 105) = v94;
      v88 = *((_DWORD *)a2 + 121);
    }
  }
LABEL_245:
  if ((v88 & 0xFF00) == 0)
    goto LABEL_255;
  if ((v88 & 0x100) != 0)
  {
    v115 = *((_DWORD *)a2 + 108);
    *((_DWORD *)this + 121) |= 0x100u;
    *((_DWORD *)this + 108) = v115;
    v88 = *((_DWORD *)a2 + 121);
    if ((v88 & 0x200) == 0)
    {
LABEL_248:
      if ((v88 & 0x400) == 0)
        goto LABEL_249;
      goto LABEL_282;
    }
  }
  else if ((v88 & 0x200) == 0)
  {
    goto LABEL_248;
  }
  v116 = *((_DWORD *)a2 + 109);
  *((_DWORD *)this + 121) |= 0x200u;
  *((_DWORD *)this + 109) = v116;
  v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x400) == 0)
  {
LABEL_249:
    if ((v88 & 0x800) == 0)
      goto LABEL_250;
    goto LABEL_283;
  }
LABEL_282:
  v117 = *((_DWORD *)a2 + 110);
  *((_DWORD *)this + 121) |= 0x400u;
  *((_DWORD *)this + 110) = v117;
  v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x800) == 0)
  {
LABEL_250:
    if ((v88 & 0x1000) == 0)
      goto LABEL_251;
    goto LABEL_284;
  }
LABEL_283:
  v118 = *((_DWORD *)a2 + 111);
  *((_DWORD *)this + 121) |= 0x800u;
  *((_DWORD *)this + 111) = v118;
  v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x1000) == 0)
  {
LABEL_251:
    if ((v88 & 0x2000) == 0)
      goto LABEL_252;
    goto LABEL_285;
  }
LABEL_284:
  v119 = *((_DWORD *)a2 + 112);
  *((_DWORD *)this + 121) |= 0x1000u;
  *((_DWORD *)this + 112) = v119;
  v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x2000) == 0)
  {
LABEL_252:
    if ((v88 & 0x4000) == 0)
      goto LABEL_253;
    goto LABEL_286;
  }
LABEL_285:
  v120 = *((_DWORD *)a2 + 113);
  *((_DWORD *)this + 121) |= 0x2000u;
  *((_DWORD *)this + 113) = v120;
  v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x4000) == 0)
  {
LABEL_253:
    if ((v88 & 0x8000) == 0)
      goto LABEL_255;
    goto LABEL_254;
  }
LABEL_286:
  v121 = *((_DWORD *)a2 + 114);
  *((_DWORD *)this + 121) |= 0x4000u;
  *((_DWORD *)this + 114) = v121;
  v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x8000) != 0)
  {
LABEL_254:
    v95 = *((_DWORD *)a2 + 115);
    *((_DWORD *)this + 121) |= 0x8000u;
    *((_DWORD *)this + 115) = v95;
    v88 = *((_DWORD *)a2 + 121);
  }
LABEL_255:
  if ((v88 & 0x10000) != 0)
  {
    v96 = *((_DWORD *)a2 + 116);
    *((_DWORD *)this + 121) |= 0x10000u;
    *((_DWORD *)this + 116) = v96;
  }
}

void sub_2189D3D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencySessionStatistics::~LocationEmergencySessionStatistics(awd::metrics::LocationEmergencySessionStatistics *this)
{
  *(_QWORD *)this = &off_24D98E420;
  awd::metrics::LocationEmergencySessionStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E420;
  awd::metrics::LocationEmergencySessionStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E420;
  awd::metrics::LocationEmergencySessionStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationEmergencySessionStatistics::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;

  v1 = this;
  v2 = this[2];
  v3 = MEMORY[0x24BEDD958];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  v5 = v1[35];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v5, 0x1012C40EC159624);
  }
  v7 = v1[36];
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v7, 0x1012C40EC159624);
  }
  v9 = v1[51];
  if (v9 != v3 && v9 != 0)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v9, 0x1012C40EC159624);
  }
  v11 = v1[53];
  if (v11 != v3 && v11)
  {
    if (*(char *)(v11 + 23) < 0)
      operator delete(*(void **)v11);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 468) = a2;
  return this;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::default_instance(awd::metrics::LocationEmergencySessionStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationEmergencySessionStatistics::default_instance_;
  if (!awd::metrics::LocationEmergencySessionStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationEmergencySessionStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationEmergencySessionStatistics::New(awd::metrics::LocationEmergencySessionStatistics *this)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = operator new();
  *(_DWORD *)(v1 + 468) = 0;
  *(_QWORD *)v1 = &off_24D98E420;
  *(_QWORD *)(v1 + 8) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEDD958];
  result = 0.0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_OWORD *)(v1 + 248) = 0u;
  *(_QWORD *)(v1 + 280) = v2;
  *(_QWORD *)(v1 + 288) = v2;
  *(_QWORD *)(v1 + 408) = v2;
  *(_QWORD *)(v1 + 416) = 0;
  *(_QWORD *)(v1 + 424) = v2;
  *(_QWORD *)(v1 + 472) = 0;
  *(_QWORD *)(v1 + 480) = 0;
  *(_DWORD *)(v1 + 464) = 0;
  *(_OWORD *)(v1 + 432) = 0u;
  *(_OWORD *)(v1 + 448) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  *(_OWORD *)(v1 + 296) = 0u;
  *(_OWORD *)(v1 + 312) = 0u;
  *(_OWORD *)(v1 + 328) = 0u;
  *(_DWORD *)(v1 + 343) = 0;
  *(_OWORD *)(v1 + 392) = 0u;
  *(_OWORD *)(v1 + 364) = 0u;
  *(_OWORD *)(v1 + 380) = 0u;
  *(_OWORD *)(v1 + 348) = 0u;
  return result;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::Clear(uint64_t this)
{
  unsigned int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_DWORD *)(this + 472);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 56) = 0;
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    v1 = *(_DWORD *)(this + 472);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 92) = 0;
    *(_OWORD *)(this + 76) = 0u;
    *(_OWORD *)(this + 60) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_WORD *)(this + 132) = 0;
    *(_DWORD *)(this + 128) = 0;
    *(_QWORD *)(this + 104) = 0;
    *(_QWORD *)(this + 112) = 0;
    *(_QWORD *)(this + 96) = 0;
  }
  if (HIBYTE(v1))
  {
    *(_QWORD *)(this + 120) = 0;
    *(_BYTE *)(this + 164) = 0;
    *(_QWORD *)(this + 134) = 0;
    *(_QWORD *)(this + 150) = 0;
    *(_QWORD *)(this + 142) = 0;
    *(_WORD *)(this + 158) = 0;
  }
  v3 = *(_DWORD *)(this + 476);
  if ((_BYTE)v3)
  {
    *(_DWORD *)(this + 160) = 0;
    *(_QWORD *)(this + 173) = 0;
    *(_QWORD *)(this + 165) = 0;
    *(_DWORD *)(this + 180) = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 184) = 0;
    *(_QWORD *)(this + 192) = 0;
    *(_QWORD *)(this + 205) = 0;
    *(_QWORD *)(this + 200) = 0;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *(_WORD *)(this + 213) = 0;
    *(_OWORD *)(this + 216) = 0u;
    *(_OWORD *)(this + 232) = 0u;
    *(_OWORD *)(this + 244) = 0u;
  }
  if (HIBYTE(v3))
  {
    *(_BYTE *)(this + 215) = 0;
    *(_DWORD *)(this + 276) = 0;
    *(_QWORD *)(this + 268) = 0;
    *(_QWORD *)(this + 260) = 0;
    if ((v3 & 0x40000000) != 0)
    {
      v4 = *(_QWORD *)(this + 280);
      if (v4 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_DWORD *)(this + 476) & 0x80000000) != 0)
    {
      v8 = *(_QWORD *)(this + 288);
      if (v8 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(_BYTE **)v8 = 0;
          *(_QWORD *)(v8 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v8 = 0;
          *(_BYTE *)(v8 + 23) = 0;
        }
      }
    }
  }
  v5 = *(_DWORD *)(this + 480);
  if ((_BYTE)v5)
  {
    *(_DWORD *)(this + 308) = 0;
    *(_QWORD *)(this + 312) = 0;
    *(_QWORD *)(this + 296) = 0;
    *(_DWORD *)(this + 303) = 0;
  }
  if ((v5 & 0xFF00) != 0)
  {
    *(_BYTE *)(this + 307) = 0;
    *(_QWORD *)(this + 320) = 0;
    *(_QWORD *)(this + 328) = 0;
  }
  if ((v5 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 348) = 0;
    *(_QWORD *)(this + 352) = 0;
    *(_QWORD *)(this + 336) = 0;
    *(_DWORD *)(this + 343) = 0;
  }
  if (HIBYTE(v5))
  {
    *(_OWORD *)(this + 360) = 0u;
    *(_OWORD *)(this + 376) = 0u;
  }
  v6 = *(_DWORD *)(this + 484);
  if ((_BYTE)v6)
  {
    *(_DWORD *)(this + 416) = 0;
    *(_QWORD *)(this + 392) = 0;
    *(_QWORD *)(this + 400) = 0;
    if ((v6 & 0x20) != 0)
    {
      v7 = *(_QWORD *)(this + 408);
      if (v7 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 484) & 0x40) != 0)
    {
      v9 = *(_QWORD *)(this + 424);
      if (v9 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v9 + 23) < 0)
        {
          **(_BYTE **)v9 = 0;
          *(_QWORD *)(v9 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v9 = 0;
          *(_BYTE *)(v9 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 420) = 0;
    v6 = *(_DWORD *)(this + 484);
  }
  if ((v6 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 432) = 0u;
    *(_OWORD *)(this + 448) = 0u;
  }
  if ((v6 & 0xFF0000) != 0)
    *(_DWORD *)(this + 464) = 0;
  *(_QWORD *)(this + 472) = 0;
  *(_QWORD *)(this + 480) = 0;
  return this;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::MergePartialFromCodedStream(awd::metrics::LocationEmergencySessionStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v3;
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  uint64_t v7;

  v3 = (unint64_t *)((char *)a2 + 8);
  v4 = (unint64_t *)((char *)a2 + 16);
  while (1)
  {
    v5 = (char *)*v3;
    if (*v3 >= *v4 || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    v7 = (TagFallback >> 3) - 1;
    if (v7 <= 0x71)
      __asm { BR              X9 }
    if ((TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::set_envtype(uint64_t result, unsigned int a2)
{
  if (a2 >= 5 && a2 - 6 >= 2)
    awd::metrics::LocationEmergencySessionStatistics::set_envtype();
  *(_DWORD *)(result + 476) |= 0x1000000u;
  *(_DWORD *)(result + 260) = a2;
  return result;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 472);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 472);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_117;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_118;
  }
LABEL_117:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_119;
  }
LABEL_118:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_120;
  }
LABEL_119:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_121;
  }
LABEL_120:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_122;
  }
LABEL_121:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_123;
  }
LABEL_122:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_124;
  }
LABEL_123:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_125;
  }
LABEL_124:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_126;
  }
LABEL_125:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_127;
  }
LABEL_126:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_128;
  }
LABEL_127:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_129;
  }
LABEL_128:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 80), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_130;
  }
LABEL_129:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_131;
  }
LABEL_130:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(_QWORD *)(v5 + 88), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_132;
  }
LABEL_131:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(double *)(v5 + 96), a3);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_133;
  }
LABEL_132:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 104), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_134;
  }
LABEL_133:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(float *)(v5 + 108), a3);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_135;
  }
LABEL_134:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *(float *)(v5 + 112), a3);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_136;
  }
LABEL_135:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 116), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_137;
  }
LABEL_136:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned __int8 *)(v5 + 132), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_138;
  }
LABEL_137:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned __int8 *)(v5 + 133), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_139;
  }
LABEL_138:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(unsigned int *)(v5 + 128), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_140;
  }
LABEL_139:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(double *)(v5 + 120), a3);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_141;
  }
LABEL_140:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (uint64_t)a2, *(double *)(v5 + 136), a3);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_142;
  }
LABEL_141:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(unsigned int *)(v5 + 144), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_143;
  }
LABEL_142:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned int *)(v5 + 148), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_144;
  }
LABEL_143:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned __int8 *)(v5 + 134), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_32;
LABEL_145:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned __int8 *)(v5 + 164), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 472) & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_146;
  }
LABEL_144:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned __int8 *)(v5 + 135), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x40000000) != 0)
    goto LABEL_145;
LABEL_32:
  if ((v6 & 0x80000000) == 0)
    goto LABEL_33;
LABEL_146:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, *(_QWORD *)(v5 + 152), (uint64_t)a2, a4);
LABEL_33:
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(unsigned __int8 *)(v5 + 165), (uint64_t)a2, a4);
    v7 = *(_DWORD *)(v5 + 476);
    if ((v7 & 2) == 0)
    {
LABEL_35:
      if ((v7 & 4) == 0)
        goto LABEL_36;
      goto LABEL_149;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_35;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned int *)(v5 + 160), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 4) == 0)
  {
LABEL_36:
    if ((v7 & 8) == 0)
      goto LABEL_37;
    goto LABEL_150;
  }
LABEL_149:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(unsigned int *)(v5 + 168), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 8) == 0)
  {
LABEL_37:
    if ((v7 & 0x10) == 0)
      goto LABEL_38;
    goto LABEL_151;
  }
LABEL_150:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(unsigned __int8 *)(v5 + 166), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x10) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0)
      goto LABEL_39;
    goto LABEL_152;
  }
LABEL_151:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, *(unsigned __int8 *)(v5 + 167), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v7 & 0x40) == 0)
      goto LABEL_40;
    goto LABEL_153;
  }
LABEL_152:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(unsigned int *)(v5 + 172), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x40) == 0)
  {
LABEL_40:
    if ((v7 & 0x80) == 0)
      goto LABEL_41;
    goto LABEL_154;
  }
LABEL_153:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(unsigned int *)(v5 + 176), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x80) == 0)
  {
LABEL_41:
    if ((v7 & 0x100) == 0)
      goto LABEL_42;
    goto LABEL_155;
  }
LABEL_154:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(unsigned int *)(v5 + 180), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x100) == 0)
  {
LABEL_42:
    if ((v7 & 0x200) == 0)
      goto LABEL_43;
    goto LABEL_156;
  }
LABEL_155:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(unsigned __int8 *)(v5 + 212), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x200) == 0)
  {
LABEL_43:
    if ((v7 & 0x400) == 0)
      goto LABEL_44;
    goto LABEL_157;
  }
LABEL_156:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, *(unsigned int *)(v5 + 184), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x400) == 0)
  {
LABEL_44:
    if ((v7 & 0x800) == 0)
      goto LABEL_45;
    goto LABEL_158;
  }
LABEL_157:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, *(unsigned int *)(v5 + 188), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x800) == 0)
  {
LABEL_45:
    if ((v7 & 0x1000) == 0)
      goto LABEL_46;
    goto LABEL_159;
  }
LABEL_158:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, *(unsigned int *)(v5 + 192), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x1000) == 0)
  {
LABEL_46:
    if ((v7 & 0x2000) == 0)
      goto LABEL_47;
    goto LABEL_160;
  }
LABEL_159:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, *(unsigned int *)(v5 + 196), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x2000) == 0)
  {
LABEL_47:
    if ((v7 & 0x4000) == 0)
      goto LABEL_48;
    goto LABEL_161;
  }
LABEL_160:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, *(unsigned int *)(v5 + 200), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x4000) == 0)
  {
LABEL_48:
    if ((v7 & 0x8000) == 0)
      goto LABEL_49;
    goto LABEL_162;
  }
LABEL_161:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, *(unsigned int *)(v5 + 204), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x8000) == 0)
  {
LABEL_49:
    if ((v7 & 0x10000) == 0)
      goto LABEL_50;
    goto LABEL_163;
  }
LABEL_162:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x31, *(unsigned int *)(v5 + 208), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x10000) == 0)
  {
LABEL_50:
    if ((v7 & 0x20000) == 0)
      goto LABEL_51;
    goto LABEL_164;
  }
LABEL_163:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, *(unsigned __int8 *)(v5 + 213), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x20000) == 0)
  {
LABEL_51:
    if ((v7 & 0x40000) == 0)
      goto LABEL_52;
    goto LABEL_165;
  }
LABEL_164:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, *(unsigned __int8 *)(v5 + 214), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x40000) == 0)
  {
LABEL_52:
    if ((v7 & 0x80000) == 0)
      goto LABEL_53;
    goto LABEL_166;
  }
LABEL_165:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, (uint64_t)a2, *(double *)(v5 + 216), a3);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x80000) == 0)
  {
LABEL_53:
    if ((v7 & 0x100000) == 0)
      goto LABEL_54;
    goto LABEL_167;
  }
LABEL_166:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, (uint64_t)a2, *(double *)(v5 + 224), a3);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x100000) == 0)
  {
LABEL_54:
    if ((v7 & 0x200000) == 0)
      goto LABEL_55;
    goto LABEL_168;
  }
LABEL_167:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, (uint64_t)a2, *(double *)(v5 + 232), a3);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x200000) == 0)
  {
LABEL_55:
    if ((v7 & 0x400000) == 0)
      goto LABEL_56;
    goto LABEL_169;
  }
LABEL_168:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, (uint64_t)a2, *(double *)(v5 + 240), a3);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x400000) == 0)
  {
LABEL_56:
    if ((v7 & 0x800000) == 0)
      goto LABEL_57;
    goto LABEL_170;
  }
LABEL_169:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, (uint64_t)a2, *(double *)(v5 + 248), a3);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x800000) == 0)
  {
LABEL_57:
    if ((v7 & 0x1000000) == 0)
      goto LABEL_58;
    goto LABEL_171;
  }
LABEL_170:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x39, *(unsigned int *)(v5 + 256), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_58:
    if ((v7 & 0x2000000) == 0)
      goto LABEL_59;
    goto LABEL_172;
  }
LABEL_171:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3A, *(unsigned int *)(v5 + 260), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_59:
    if ((v7 & 0x4000000) == 0)
      goto LABEL_60;
    goto LABEL_173;
  }
LABEL_172:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3B, *(unsigned __int8 *)(v5 + 215), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_60:
    if ((v7 & 0x8000000) == 0)
      goto LABEL_61;
    goto LABEL_174;
  }
LABEL_173:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, *(unsigned int *)(v5 + 264), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x8000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x10000000) == 0)
      goto LABEL_62;
    goto LABEL_175;
  }
LABEL_174:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(unsigned int *)(v5 + 268), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x10000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x20000000) == 0)
      goto LABEL_63;
    goto LABEL_176;
  }
LABEL_175:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, *(unsigned int *)(v5 + 272), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x20000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x40000000) == 0)
      goto LABEL_64;
LABEL_177:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    if ((*(_DWORD *)(v5 + 476) & 0x80000000) == 0)
      goto LABEL_65;
    goto LABEL_178;
  }
LABEL_176:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, *(unsigned int *)(v5 + 276), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x40000000) != 0)
    goto LABEL_177;
LABEL_64:
  if ((v7 & 0x80000000) == 0)
    goto LABEL_65;
LABEL_178:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
LABEL_65:
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, *(unsigned int *)(v5 + 296), (uint64_t)a2, a4);
    v8 = *(_DWORD *)(v5 + 480);
    if ((v8 & 2) == 0)
    {
LABEL_67:
      if ((v8 & 4) == 0)
        goto LABEL_68;
      goto LABEL_181;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_67;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, *(unsigned int *)(v5 + 300), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 4) == 0)
  {
LABEL_68:
    if ((v8 & 8) == 0)
      goto LABEL_69;
    goto LABEL_182;
  }
LABEL_181:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x44, *(unsigned __int8 *)(v5 + 304), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 8) == 0)
  {
LABEL_69:
    if ((v8 & 0x10) == 0)
      goto LABEL_70;
    goto LABEL_183;
  }
LABEL_182:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x45, *(unsigned __int8 *)(v5 + 305), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x10) == 0)
  {
LABEL_70:
    if ((v8 & 0x20) == 0)
      goto LABEL_71;
    goto LABEL_184;
  }
LABEL_183:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(unsigned __int8 *)(v5 + 306), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x20) == 0)
  {
LABEL_71:
    if ((v8 & 0x40) == 0)
      goto LABEL_72;
    goto LABEL_185;
  }
LABEL_184:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, *(unsigned int *)(v5 + 308), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x40) == 0)
  {
LABEL_72:
    if ((v8 & 0x80) == 0)
      goto LABEL_73;
    goto LABEL_186;
  }
LABEL_185:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(unsigned int *)(v5 + 312), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x80) == 0)
  {
LABEL_73:
    if ((v8 & 0x100) == 0)
      goto LABEL_74;
    goto LABEL_187;
  }
LABEL_186:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(unsigned int *)(v5 + 316), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x100) == 0)
  {
LABEL_74:
    if ((v8 & 0x200) == 0)
      goto LABEL_75;
    goto LABEL_188;
  }
LABEL_187:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(unsigned int *)(v5 + 320), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x200) == 0)
  {
LABEL_75:
    if ((v8 & 0x400) == 0)
      goto LABEL_76;
    goto LABEL_189;
  }
LABEL_188:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(unsigned int *)(v5 + 324), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x400) == 0)
  {
LABEL_76:
    if ((v8 & 0x800) == 0)
      goto LABEL_77;
    goto LABEL_190;
  }
LABEL_189:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, *(unsigned __int8 *)(v5 + 307), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x800) == 0)
  {
LABEL_77:
    if ((v8 & 0x1000) == 0)
      goto LABEL_78;
    goto LABEL_191;
  }
LABEL_190:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, *(unsigned __int8 *)(v5 + 328), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x1000) == 0)
  {
LABEL_78:
    if ((v8 & 0x2000) == 0)
      goto LABEL_79;
    goto LABEL_192;
  }
LABEL_191:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4E, *(unsigned __int8 *)(v5 + 329), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x2000) == 0)
  {
LABEL_79:
    if ((v8 & 0x4000) == 0)
      goto LABEL_80;
    goto LABEL_193;
  }
LABEL_192:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4F, *(unsigned __int8 *)(v5 + 330), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x4000) == 0)
  {
LABEL_80:
    if ((v8 & 0x8000) == 0)
      goto LABEL_81;
    goto LABEL_194;
  }
LABEL_193:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, *(unsigned __int8 *)(v5 + 331), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x8000) == 0)
  {
LABEL_81:
    if ((v8 & 0x10000) == 0)
      goto LABEL_82;
    goto LABEL_195;
  }
LABEL_194:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x51, *(unsigned int *)(v5 + 332), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x10000) == 0)
  {
LABEL_82:
    if ((v8 & 0x20000) == 0)
      goto LABEL_83;
    goto LABEL_196;
  }
LABEL_195:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x52, *(unsigned int *)(v5 + 336), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x20000) == 0)
  {
LABEL_83:
    if ((v8 & 0x40000) == 0)
      goto LABEL_84;
    goto LABEL_197;
  }
LABEL_196:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x53, *(unsigned int *)(v5 + 340), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x40000) == 0)
  {
LABEL_84:
    if ((v8 & 0x80000) == 0)
      goto LABEL_85;
    goto LABEL_198;
  }
LABEL_197:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x54, *(unsigned __int8 *)(v5 + 344), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x80000) == 0)
  {
LABEL_85:
    if ((v8 & 0x100000) == 0)
      goto LABEL_86;
    goto LABEL_199;
  }
LABEL_198:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x55, *(unsigned __int8 *)(v5 + 345), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x100000) == 0)
  {
LABEL_86:
    if ((v8 & 0x200000) == 0)
      goto LABEL_87;
    goto LABEL_200;
  }
LABEL_199:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x56, *(unsigned __int8 *)(v5 + 346), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x200000) == 0)
  {
LABEL_87:
    if ((v8 & 0x400000) == 0)
      goto LABEL_88;
    goto LABEL_201;
  }
LABEL_200:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x57, *(unsigned int *)(v5 + 348), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x400000) == 0)
  {
LABEL_88:
    if ((v8 & 0x800000) == 0)
      goto LABEL_89;
    goto LABEL_202;
  }
LABEL_201:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x58, *(unsigned int *)(v5 + 352), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x800000) == 0)
  {
LABEL_89:
    if ((v8 & 0x1000000) == 0)
      goto LABEL_90;
    goto LABEL_203;
  }
LABEL_202:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x59, *(unsigned int *)(v5 + 356), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x1000000) == 0)
  {
LABEL_90:
    if ((v8 & 0x2000000) == 0)
      goto LABEL_91;
    goto LABEL_204;
  }
LABEL_203:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5A, *(unsigned int *)(v5 + 360), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x2000000) == 0)
  {
LABEL_91:
    if ((v8 & 0x4000000) == 0)
      goto LABEL_92;
    goto LABEL_205;
  }
LABEL_204:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5B, *(unsigned int *)(v5 + 364), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x4000000) == 0)
  {
LABEL_92:
    if ((v8 & 0x8000000) == 0)
      goto LABEL_93;
    goto LABEL_206;
  }
LABEL_205:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5C, *(unsigned int *)(v5 + 368), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x8000000) == 0)
  {
LABEL_93:
    if ((v8 & 0x10000000) == 0)
      goto LABEL_94;
    goto LABEL_207;
  }
LABEL_206:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5D, *(unsigned int *)(v5 + 372), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x10000000) == 0)
  {
LABEL_94:
    if ((v8 & 0x20000000) == 0)
      goto LABEL_95;
    goto LABEL_208;
  }
LABEL_207:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5E, *(unsigned int *)(v5 + 376), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x20000000) == 0)
  {
LABEL_95:
    if ((v8 & 0x40000000) == 0)
      goto LABEL_96;
LABEL_209:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x60, *(unsigned int *)(v5 + 384), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 480) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_210;
  }
LABEL_208:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5F, *(unsigned int *)(v5 + 380), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x40000000) != 0)
    goto LABEL_209;
LABEL_96:
  if ((v8 & 0x80000000) == 0)
    goto LABEL_97;
LABEL_210:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x61, *(unsigned int *)(v5 + 388), (uint64_t)a2, a4);
LABEL_97:
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x62, *(unsigned int *)(v5 + 392), (uint64_t)a2, a4);
    v9 = *(_DWORD *)(v5 + 484);
    if ((v9 & 2) == 0)
    {
LABEL_99:
      if ((v9 & 4) == 0)
        goto LABEL_100;
      goto LABEL_213;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_99;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x63, *(unsigned int *)(v5 + 396), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 4) == 0)
  {
LABEL_100:
    if ((v9 & 8) == 0)
      goto LABEL_101;
    goto LABEL_214;
  }
LABEL_213:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x64, *(unsigned int *)(v5 + 400), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 8) == 0)
  {
LABEL_101:
    if ((v9 & 0x10) == 0)
      goto LABEL_102;
    goto LABEL_215;
  }
LABEL_214:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x65, *(unsigned int *)(v5 + 404), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x10) == 0)
  {
LABEL_102:
    if ((v9 & 0x20) == 0)
      goto LABEL_103;
    goto LABEL_216;
  }
LABEL_215:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x66, *(unsigned int *)(v5 + 416), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x20) == 0)
  {
LABEL_103:
    if ((v9 & 0x40) == 0)
      goto LABEL_104;
    goto LABEL_217;
  }
LABEL_216:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x40) == 0)
  {
LABEL_104:
    if ((v9 & 0x80) == 0)
      goto LABEL_105;
    goto LABEL_218;
  }
LABEL_217:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x80) == 0)
  {
LABEL_105:
    if ((v9 & 0x100) == 0)
      goto LABEL_106;
    goto LABEL_219;
  }
LABEL_218:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x69, *(unsigned int *)(v5 + 420), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x100) == 0)
  {
LABEL_106:
    if ((v9 & 0x200) == 0)
      goto LABEL_107;
    goto LABEL_220;
  }
LABEL_219:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6A, *(unsigned int *)(v5 + 432), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x200) == 0)
  {
LABEL_107:
    if ((v9 & 0x400) == 0)
      goto LABEL_108;
    goto LABEL_221;
  }
LABEL_220:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6B, *(unsigned int *)(v5 + 436), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x400) == 0)
  {
LABEL_108:
    if ((v9 & 0x800) == 0)
      goto LABEL_109;
    goto LABEL_222;
  }
LABEL_221:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6C, *(unsigned int *)(v5 + 440), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x800) == 0)
  {
LABEL_109:
    if ((v9 & 0x1000) == 0)
      goto LABEL_110;
    goto LABEL_223;
  }
LABEL_222:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6D, *(unsigned int *)(v5 + 444), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x1000) == 0)
  {
LABEL_110:
    if ((v9 & 0x2000) == 0)
      goto LABEL_111;
    goto LABEL_224;
  }
LABEL_223:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6E, *(unsigned int *)(v5 + 448), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x2000) == 0)
  {
LABEL_111:
    if ((v9 & 0x4000) == 0)
      goto LABEL_112;
    goto LABEL_225;
  }
LABEL_224:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6F, *(unsigned int *)(v5 + 452), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x4000) == 0)
  {
LABEL_112:
    if ((v9 & 0x8000) == 0)
      goto LABEL_113;
    goto LABEL_226;
  }
LABEL_225:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x70, *(unsigned int *)(v5 + 456), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x8000) == 0)
  {
LABEL_113:
    if ((v9 & 0x10000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x72, *(unsigned int *)(v5 + 464), (uint64_t)a2, a4);
  }
LABEL_226:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x71, *(unsigned int *)(v5 + 460), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 484) & 0x10000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x72, *(unsigned int *)(v5 + 464), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::ByteSize(awd::metrics::LocationEmergencySessionStatistics *this)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  unsigned int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v39;
  int v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  int v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v51;
  int v52;
  unsigned int v53;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v54;
  int v55;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v56;
  int v57;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v58;
  int v59;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v60;
  int v61;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v62;
  int v63;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v64;
  int v65;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v66;
  int v67;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v68;
  int v69;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v70;
  int v71;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v72;
  int v73;
  unsigned int v74;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v75;
  int v76;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v77;
  int v78;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v79;
  int v80;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v81;
  int v82;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v83;
  int v84;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v85;
  int v86;
  uint64_t v87;
  int v88;
  char v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  uint64_t v93;
  int v94;
  char v95;
  uint64_t v96;
  unint64_t v97;
  int v98;
  unsigned int v99;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v100;
  int v101;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v102;
  int v103;
  unsigned int v104;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v105;
  int v106;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v107;
  int v108;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v109;
  int v110;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v111;
  int v112;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v113;
  int v114;
  unsigned int v115;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v116;
  int v117;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v118;
  int v119;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v120;
  int v121;
  unsigned int v122;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v123;
  int v124;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v125;
  int v126;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v127;
  int v128;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v129;
  int v130;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v131;
  int v132;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v133;
  int v134;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v135;
  int v136;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v137;
  int v138;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v139;
  int v140;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v141;
  int v142;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v143;
  int v144;
  int v145;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v146;
  int v147;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v148;
  int v149;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v150;
  int v151;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v152;
  int v153;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v154;
  int v155;
  uint64_t v156;
  int v157;
  char v158;
  uint64_t v159;
  unint64_t v160;
  int v161;
  uint64_t v162;
  int v163;
  char v164;
  uint64_t v165;
  unint64_t v166;
  int v167;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v168;
  int v169;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v170;
  int v171;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v172;
  int v173;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v174;
  int v175;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v176;
  int v177;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v178;
  int v179;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v180;
  int v181;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v182;
  int v183;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v184;
  int v185;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v186;
  int v187;

  v2 = *((_DWORD *)this + 118);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_43;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 118);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v2 = *((_DWORD *)this + 118);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v3 += v10 + v6 + 1;
LABEL_16:
  v11 = v3 + 9;
  if ((v2 & 4) == 0)
    v11 = v3;
  if ((v2 & 8) != 0)
    v11 += 9;
  if ((v2 & 0x10) != 0)
    v4 = v11 + 9;
  else
    v4 = v11;
  if ((v2 & 0x20) != 0)
  {
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v12 & 0x80000000) != 0)
    {
      v13 = 10;
    }
    else if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
      v2 = *((_DWORD *)this + 118);
    }
    else
    {
      v13 = 1;
    }
    v4 = (v4 + v13 + 1);
    if ((v2 & 0x40) == 0)
    {
LABEL_25:
      if ((v2 & 0x80) == 0)
        goto LABEL_43;
      goto LABEL_37;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_25;
  }
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 118);
  }
  else
  {
    v15 = 1;
  }
  v4 = (v4 + v15 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_37:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v16 & 0x80000000) != 0)
    {
      v17 = 10;
    }
    else if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      v2 = *((_DWORD *)this + 118);
    }
    else
    {
      v17 = 1;
    }
    v4 = (v4 + v17 + 1);
  }
LABEL_43:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_53;
  if ((v2 & 0x100) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v2 = *((_DWORD *)this + 118);
    }
    else
    {
      v21 = 1;
    }
    v4 = (v4 + v21 + 1);
    if ((v2 & 0x200) == 0)
    {
LABEL_46:
      if ((v2 & 0x400) == 0)
        goto LABEL_47;
      goto LABEL_97;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_46;
  }
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v26 & 0x80000000) != 0)
  {
    v27 = 10;
  }
  else if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
    v2 = *((_DWORD *)this + 118);
  }
  else
  {
    v27 = 1;
  }
  v4 = (v4 + v27 + 1);
  if ((v2 & 0x400) == 0)
  {
LABEL_47:
    if ((v2 & 0x800) == 0)
      goto LABEL_48;
    goto LABEL_115;
  }
LABEL_97:
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if ((v31 & 0x80000000) != 0)
  {
    v32 = 10;
  }
  else if (v31 >= 0x80)
  {
    v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
    v2 = *((_DWORD *)this + 118);
  }
  else
  {
    v32 = 1;
  }
  v4 = (v4 + v32 + 1);
  if ((v2 & 0x800) == 0)
  {
LABEL_48:
    if ((v2 & 0x1000) == 0)
      goto LABEL_49;
    goto LABEL_121;
  }
LABEL_115:
  v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
  if ((v37 & 0x80000000) != 0)
  {
    v38 = 10;
  }
  else if (v37 >= 0x80)
  {
    v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
    v2 = *((_DWORD *)this + 118);
  }
  else
  {
    v38 = 1;
  }
  v4 = (v4 + v38 + 1);
  if ((v2 & 0x1000) == 0)
  {
LABEL_49:
    if ((v2 & 0x2000) == 0)
      goto LABEL_50;
    goto LABEL_127;
  }
LABEL_121:
  v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if ((v39 & 0x80000000) != 0)
  {
    v40 = 10;
  }
  else if (v39 >= 0x80)
  {
    v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
    v2 = *((_DWORD *)this + 118);
  }
  else
  {
    v40 = 1;
  }
  v4 = (v4 + v40 + 1);
  if ((v2 & 0x2000) == 0)
  {
LABEL_50:
    if ((v2 & 0x4000) == 0)
      goto LABEL_51;
    goto LABEL_133;
  }
LABEL_127:
  v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if ((v41 & 0x80000000) != 0)
  {
    v42 = 10;
  }
  else if (v41 >= 0x80)
  {
    v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
    v2 = *((_DWORD *)this + 118);
  }
  else
  {
    v42 = 1;
  }
  v4 = (v4 + v42 + 1);
  if ((v2 & 0x4000) == 0)
  {
LABEL_51:
    if ((v2 & 0x8000) == 0)
      goto LABEL_53;
    goto LABEL_52;
  }
LABEL_133:
  v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
  if ((v43 & 0x80000000) != 0)
  {
    v44 = 10;
  }
  else if (v43 >= 0x80)
  {
    v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
    v2 = *((_DWORD *)this + 118);
  }
  else
  {
    v44 = 1;
  }
  v4 = (v4 + v44 + 2);
  if ((v2 & 0x8000) != 0)
  {
LABEL_52:
    v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 11))
       + 2;
    v2 = *((_DWORD *)this + 118);
  }
LABEL_53:
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
      LODWORD(v4) = v4 + 10;
    if ((v2 & 0x20000) != 0)
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
      if ((v18 & 0x80000000) != 0)
      {
        v19 = 10;
      }
      else if (v18 >= 0x80)
      {
        v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
        v2 = *((_DWORD *)this + 118);
      }
      else
      {
        v19 = 1;
      }
      LODWORD(v4) = v4 + v19 + 2;
    }
    v22 = v4 + 6;
    if ((v2 & 0x40000) == 0)
      v22 = v4;
    if ((v2 & 0x80000) != 0)
      v23 = v22 + 6;
    else
      v23 = v22;
    if ((v2 & 0x100000) != 0)
    {
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 29);
      if ((v24 & 0x80000000) != 0)
      {
        v25 = 10;
      }
      else if (v24 >= 0x80)
      {
        v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
        v2 = *((_DWORD *)this + 118);
      }
      else
      {
        v25 = 1;
      }
      v23 += v25 + 2;
    }
    v28 = v23 + 3;
    if ((v2 & 0x200000) == 0)
      v28 = v23;
    if ((v2 & 0x400000) != 0)
      v4 = v28 + 3;
    else
      v4 = v28;
    if ((v2 & 0x800000) != 0)
    {
      v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
      if ((v29 & 0x80000000) != 0)
      {
        v30 = 10;
      }
      else if (v29 >= 0x80)
      {
        v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
        v2 = *((_DWORD *)this + 118);
      }
      else
      {
        v30 = 1;
      }
      v4 = (v4 + v30 + 2);
    }
  }
  if (HIBYTE(v2))
  {
    v33 = v4 + 10;
    if ((v2 & 0x1000000) == 0)
      v33 = v4;
    if ((v2 & 0x2000000) != 0)
      v34 = v33 + 10;
    else
      v34 = v33;
    if ((v2 & 0x4000000) != 0)
    {
      v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 36);
      if ((v35 & 0x80000000) != 0)
      {
        v36 = 10;
      }
      else if (v35 >= 0x80)
      {
        v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
        v2 = *((_DWORD *)this + 118);
      }
      else
      {
        v36 = 1;
      }
      v34 += v36 + 2;
    }
    if ((v2 & 0x8000000) != 0)
    {
      v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 37);
      if ((v45 & 0x80000000) != 0)
      {
        v46 = 10;
      }
      else if (v45 >= 0x80)
      {
        v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
        v2 = *((_DWORD *)this + 118);
      }
      else
      {
        v46 = 1;
      }
      v34 += v46 + 2;
    }
    v47 = v34 + 3;
    if ((v2 & 0x10000000) == 0)
      v47 = v34;
    if ((v2 & 0x20000000) != 0)
      v47 += 3;
    if ((v2 & 0x40000000) != 0)
      v4 = v47 + 3;
    else
      v4 = v47;
    if ((v2 & 0x80000000) != 0)
      v4 = v4
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 19))
         + 2;
  }
  v48 = *((_DWORD *)this + 119);
  if ((_BYTE)v48)
  {
    if ((v48 & 1) != 0)
      LODWORD(v4) = v4 + 3;
    if ((v48 & 2) != 0)
    {
      v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
      if ((v49 & 0x80000000) != 0)
      {
        v50 = 10;
      }
      else if (v49 >= 0x80)
      {
        v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
        v48 = *((_DWORD *)this + 119);
      }
      else
      {
        v50 = 1;
      }
      LODWORD(v4) = v4 + v50 + 2;
    }
    if ((v48 & 4) != 0)
    {
      v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 42);
      if (v51 >= 0x80)
      {
        v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
        v48 = *((_DWORD *)this + 119);
      }
      else
      {
        v52 = 1;
      }
      LODWORD(v4) = v4 + v52 + 2;
    }
    v53 = v4 + 3;
    if ((v48 & 8) == 0)
      v53 = v4;
    if ((v48 & 0x10) != 0)
      v4 = v53 + 3;
    else
      v4 = v53;
    if ((v48 & 0x20) != 0)
    {
      v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 43);
      if ((v54 & 0x80000000) != 0)
      {
        v55 = 10;
      }
      else if (v54 >= 0x80)
      {
        v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v54);
        v48 = *((_DWORD *)this + 119);
      }
      else
      {
        v55 = 1;
      }
      v4 = (v4 + v55 + 2);
      if ((v48 & 0x40) == 0)
      {
LABEL_181:
        if ((v48 & 0x80) == 0)
          goto LABEL_199;
        goto LABEL_195;
      }
    }
    else if ((v48 & 0x40) == 0)
    {
      goto LABEL_181;
    }
    v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 44);
    if ((v56 & 0x80000000) != 0)
    {
      v57 = 10;
    }
    else if (v56 >= 0x80)
    {
      v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56);
      v48 = *((_DWORD *)this + 119);
    }
    else
    {
      v57 = 1;
    }
    v4 = (v4 + v57 + 2);
    if ((v48 & 0x80) != 0)
    {
LABEL_195:
      v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 45);
      if (v58 >= 0x80)
      {
        v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58);
        v48 = *((_DWORD *)this + 119);
      }
      else
      {
        v59 = 1;
      }
      v4 = (v4 + v59 + 2);
    }
  }
LABEL_199:
  if ((v48 & 0xFF00) == 0)
    goto LABEL_251;
  if ((v48 & 0x100) != 0)
    v4 = (v4 + 3);
  else
    v4 = v4;
  if ((v48 & 0x200) != 0)
  {
    v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 46);
    if (v60 >= 0x80)
    {
      v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60);
      v48 = *((_DWORD *)this + 119);
    }
    else
    {
      v61 = 1;
    }
    v4 = (v4 + v61 + 2);
    if ((v48 & 0x400) == 0)
    {
LABEL_205:
      if ((v48 & 0x800) == 0)
        goto LABEL_206;
      goto LABEL_221;
    }
  }
  else if ((v48 & 0x400) == 0)
  {
    goto LABEL_205;
  }
  v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 47);
  if ((v62 & 0x80000000) != 0)
  {
    v63 = 10;
  }
  else if (v62 >= 0x80)
  {
    v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62);
    v48 = *((_DWORD *)this + 119);
  }
  else
  {
    v63 = 1;
  }
  v4 = (v4 + v63 + 2);
  if ((v48 & 0x800) == 0)
  {
LABEL_206:
    if ((v48 & 0x1000) == 0)
      goto LABEL_207;
    goto LABEL_227;
  }
LABEL_221:
  v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 48);
  if ((v64 & 0x80000000) != 0)
  {
    v65 = 10;
  }
  else if (v64 >= 0x80)
  {
    v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64);
    v48 = *((_DWORD *)this + 119);
  }
  else
  {
    v65 = 1;
  }
  v4 = (v4 + v65 + 2);
  if ((v48 & 0x1000) == 0)
  {
LABEL_207:
    if ((v48 & 0x2000) == 0)
      goto LABEL_208;
    goto LABEL_233;
  }
LABEL_227:
  v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 49);
  if ((v66 & 0x80000000) != 0)
  {
    v67 = 10;
  }
  else if (v66 >= 0x80)
  {
    v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66);
    v48 = *((_DWORD *)this + 119);
  }
  else
  {
    v67 = 1;
  }
  v4 = (v4 + v67 + 2);
  if ((v48 & 0x2000) == 0)
  {
LABEL_208:
    if ((v48 & 0x4000) == 0)
      goto LABEL_209;
    goto LABEL_239;
  }
LABEL_233:
  v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 50);
  if ((v68 & 0x80000000) != 0)
  {
    v69 = 10;
  }
  else if (v68 >= 0x80)
  {
    v69 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68);
    v48 = *((_DWORD *)this + 119);
  }
  else
  {
    v69 = 1;
  }
  v4 = (v4 + v69 + 2);
  if ((v48 & 0x4000) == 0)
  {
LABEL_209:
    if ((v48 & 0x8000) == 0)
      goto LABEL_251;
    goto LABEL_245;
  }
LABEL_239:
  v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 51);
  if ((v70 & 0x80000000) != 0)
  {
    v71 = 10;
  }
  else if (v70 >= 0x80)
  {
    v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70);
    v48 = *((_DWORD *)this + 119);
  }
  else
  {
    v71 = 1;
  }
  v4 = (v4 + v71 + 2);
  if ((v48 & 0x8000) != 0)
  {
LABEL_245:
    v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 52);
    if ((v72 & 0x80000000) != 0)
    {
      v73 = 10;
    }
    else if (v72 >= 0x80)
    {
      v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72);
      v48 = *((_DWORD *)this + 119);
    }
    else
    {
      v73 = 1;
    }
    v4 = (v4 + v73 + 2);
  }
LABEL_251:
  if ((v48 & 0xFF0000) != 0)
  {
    v74 = v4 + 3;
    if ((v48 & 0x10000) == 0)
      v74 = v4;
    if ((v48 & 0x20000) != 0)
      v74 += 3;
    if ((v48 & 0x40000) != 0)
      v74 += 10;
    if ((v48 & 0x80000) != 0)
      v74 += 10;
    if ((v48 & 0x100000) != 0)
      v74 += 10;
    if ((v48 & 0x200000) != 0)
      v74 += 10;
    if ((v48 & 0x400000) != 0)
      v4 = v74 + 10;
    else
      v4 = v74;
    if ((v48 & 0x800000) != 0)
    {
      v75 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 64);
      if ((v75 & 0x80000000) != 0)
      {
        v76 = 10;
      }
      else if (v75 >= 0x80)
      {
        v76 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v75);
        v48 = *((_DWORD *)this + 119);
      }
      else
      {
        v76 = 1;
      }
      v4 = (v4 + v76 + 2);
    }
  }
  if (!HIBYTE(v48))
    goto LABEL_334;
  if ((v48 & 0x1000000) != 0)
  {
    v77 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 65);
    if ((v77 & 0x80000000) != 0)
    {
      v78 = 10;
    }
    else if (v77 >= 0x80)
    {
      v78 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v77);
      v48 = *((_DWORD *)this + 119);
    }
    else
    {
      v78 = 1;
    }
    LODWORD(v4) = v4 + v78 + 2;
  }
  if ((v48 & 0x2000000) != 0)
    v4 = (v4 + 3);
  else
    v4 = v4;
  if ((v48 & 0x4000000) != 0)
  {
    v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 66);
    if ((v79 & 0x80000000) != 0)
    {
      v80 = 10;
    }
    else if (v79 >= 0x80)
    {
      v80 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v79);
      v48 = *((_DWORD *)this + 119);
    }
    else
    {
      v80 = 1;
    }
    v4 = (v4 + v80 + 2);
    if ((v48 & 0x8000000) == 0)
    {
LABEL_287:
      if ((v48 & 0x10000000) == 0)
        goto LABEL_288;
      goto LABEL_304;
    }
  }
  else if ((v48 & 0x8000000) == 0)
  {
    goto LABEL_287;
  }
  v81 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 67);
  if ((v81 & 0x80000000) != 0)
  {
    v82 = 10;
  }
  else if (v81 >= 0x80)
  {
    v82 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v81);
    v48 = *((_DWORD *)this + 119);
  }
  else
  {
    v82 = 1;
  }
  v4 = (v4 + v82 + 2);
  if ((v48 & 0x10000000) == 0)
  {
LABEL_288:
    if ((v48 & 0x20000000) == 0)
      goto LABEL_289;
LABEL_310:
    v85 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 69);
    if ((v85 & 0x80000000) != 0)
    {
      v86 = 10;
    }
    else if (v85 >= 0x80)
    {
      v86 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v85);
      v48 = *((_DWORD *)this + 119);
    }
    else
    {
      v86 = 1;
    }
    v4 = (v4 + v86 + 2);
    if ((v48 & 0x40000000) == 0)
    {
LABEL_290:
      if ((v48 & 0x80000000) == 0)
        goto LABEL_334;
      goto LABEL_325;
    }
    goto LABEL_316;
  }
LABEL_304:
  v83 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 68);
  if ((v83 & 0x80000000) != 0)
  {
    v84 = 10;
  }
  else if (v83 >= 0x80)
  {
    v84 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v83);
    v48 = *((_DWORD *)this + 119);
  }
  else
  {
    v84 = 1;
  }
  v4 = (v4 + v84 + 2);
  if ((v48 & 0x20000000) != 0)
    goto LABEL_310;
LABEL_289:
  if ((v48 & 0x40000000) == 0)
    goto LABEL_290;
LABEL_316:
  v87 = *((_QWORD *)this + 35);
  v88 = *(unsigned __int8 *)(v87 + 23);
  v89 = v88;
  v90 = *(_QWORD *)(v87 + 8);
  if ((v88 & 0x80u) == 0)
    v91 = *(unsigned __int8 *)(v87 + 23);
  else
    v91 = v90;
  if (v91 >= 0x80)
  {
    v92 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v91);
    v88 = *(unsigned __int8 *)(v87 + 23);
    v90 = *(_QWORD *)(v87 + 8);
    v48 = *((_DWORD *)this + 119);
    v89 = *(_BYTE *)(v87 + 23);
  }
  else
  {
    v92 = 1;
  }
  if (v89 < 0)
    v88 = v90;
  v4 = (v4 + v92 + v88 + 2);
  if ((v48 & 0x80000000) != 0)
  {
LABEL_325:
    v93 = *((_QWORD *)this + 36);
    v94 = *(unsigned __int8 *)(v93 + 23);
    v95 = v94;
    v96 = *(_QWORD *)(v93 + 8);
    if ((v94 & 0x80u) == 0)
      v97 = *(unsigned __int8 *)(v93 + 23);
    else
      v97 = v96;
    if (v97 >= 0x80)
    {
      v98 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v97);
      v94 = *(unsigned __int8 *)(v93 + 23);
      v96 = *(_QWORD *)(v93 + 8);
      v95 = *(_BYTE *)(v93 + 23);
    }
    else
    {
      v98 = 1;
    }
    if (v95 < 0)
      v94 = v96;
    v4 = (v4 + v98 + v94 + 2);
  }
LABEL_334:
  v99 = *((_DWORD *)this + 120);
  if (!(_BYTE)v99)
    goto LABEL_374;
  if ((v99 & 1) != 0)
  {
    v100 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 74);
    if (v100 >= 0x80)
    {
      v101 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v100);
      v99 = *((_DWORD *)this + 120);
    }
    else
    {
      v101 = 1;
    }
    LODWORD(v4) = v4 + v101 + 2;
  }
  if ((v99 & 2) != 0)
  {
    v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 75);
    if (v102 >= 0x80)
    {
      v103 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v102);
      v99 = *((_DWORD *)this + 120);
    }
    else
    {
      v103 = 1;
    }
    LODWORD(v4) = v4 + v103 + 2;
  }
  v104 = v4 + 3;
  if ((v99 & 4) == 0)
    v104 = v4;
  if ((v99 & 8) != 0)
    v104 += 3;
  if ((v99 & 0x10) != 0)
    v4 = v104 + 3;
  else
    v4 = v104;
  if ((v99 & 0x20) != 0)
  {
    v105 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 77);
    if ((v105 & 0x80000000) != 0)
    {
      v106 = 10;
    }
    else if (v105 >= 0x80)
    {
      v106 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v105);
      v99 = *((_DWORD *)this + 120);
    }
    else
    {
      v106 = 1;
    }
    v4 = (v4 + v106 + 2);
    if ((v99 & 0x40) == 0)
    {
LABEL_354:
      if ((v99 & 0x80) == 0)
        goto LABEL_374;
      goto LABEL_368;
    }
  }
  else if ((v99 & 0x40) == 0)
  {
    goto LABEL_354;
  }
  v107 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 78);
  if ((v107 & 0x80000000) != 0)
  {
    v108 = 10;
  }
  else if (v107 >= 0x80)
  {
    v108 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v107);
    v99 = *((_DWORD *)this + 120);
  }
  else
  {
    v108 = 1;
  }
  v4 = (v4 + v108 + 2);
  if ((v99 & 0x80) != 0)
  {
LABEL_368:
    v109 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 79);
    if ((v109 & 0x80000000) != 0)
    {
      v110 = 10;
    }
    else if (v109 >= 0x80)
    {
      v110 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v109);
      v99 = *((_DWORD *)this + 120);
    }
    else
    {
      v110 = 1;
    }
    v4 = (v4 + v110 + 2);
  }
LABEL_374:
  if ((v99 & 0xFF00) != 0)
  {
    if ((v99 & 0x100) != 0)
    {
      v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 80);
      if (v111 >= 0x80)
      {
        v112 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v111);
        v99 = *((_DWORD *)this + 120);
      }
      else
      {
        v112 = 1;
      }
      LODWORD(v4) = v4 + v112 + 2;
    }
    if ((v99 & 0x200) != 0)
    {
      v113 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 81);
      if (v113 >= 0x80)
      {
        v114 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v113);
        v99 = *((_DWORD *)this + 120);
      }
      else
      {
        v114 = 1;
      }
      LODWORD(v4) = v4 + v114 + 2;
    }
    v115 = v4 + 3;
    if ((v99 & 0x400) == 0)
      v115 = v4;
    if ((v99 & 0x800) != 0)
      v115 += 3;
    if ((v99 & 0x1000) != 0)
      v115 += 3;
    if ((v99 & 0x2000) != 0)
      v115 += 3;
    if ((v99 & 0x4000) != 0)
      v4 = v115 + 3;
    else
      v4 = v115;
    if ((v99 & 0x8000) != 0)
    {
      v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 83);
      if ((v116 & 0x80000000) != 0)
      {
        v117 = 10;
      }
      else if (v116 >= 0x80)
      {
        v117 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v116);
        v99 = *((_DWORD *)this + 120);
      }
      else
      {
        v117 = 1;
      }
      v4 = (v4 + v117 + 2);
    }
  }
  if ((v99 & 0xFF0000) != 0)
  {
    if ((v99 & 0x10000) != 0)
    {
      v118 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 84);
      if ((v118 & 0x80000000) != 0)
      {
        v119 = 10;
      }
      else if (v118 >= 0x80)
      {
        v119 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v118);
        v99 = *((_DWORD *)this + 120);
      }
      else
      {
        v119 = 1;
      }
      LODWORD(v4) = v4 + v119 + 2;
    }
    if ((v99 & 0x20000) != 0)
    {
      v120 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 85);
      if ((v120 & 0x80000000) != 0)
      {
        v121 = 10;
      }
      else if (v120 >= 0x80)
      {
        v121 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v120);
        v99 = *((_DWORD *)this + 120);
      }
      else
      {
        v121 = 1;
      }
      LODWORD(v4) = v4 + v121 + 2;
    }
    v122 = v4 + 3;
    if ((v99 & 0x40000) == 0)
      v122 = v4;
    if ((v99 & 0x80000) != 0)
      v122 += 3;
    if ((v99 & 0x100000) != 0)
      v4 = v122 + 3;
    else
      v4 = v122;
    if ((v99 & 0x200000) != 0)
    {
      v123 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 87);
      if ((v123 & 0x80000000) != 0)
      {
        v124 = 10;
      }
      else if (v123 >= 0x80)
      {
        v124 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v123);
        v99 = *((_DWORD *)this + 120);
      }
      else
      {
        v124 = 1;
      }
      v4 = (v4 + v124 + 2);
      if ((v99 & 0x400000) == 0)
      {
LABEL_427:
        if ((v99 & 0x800000) == 0)
          goto LABEL_445;
        goto LABEL_439;
      }
    }
    else if ((v99 & 0x400000) == 0)
    {
      goto LABEL_427;
    }
    v125 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 88);
    if (v125 >= 0x80)
    {
      v126 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v125);
      v99 = *((_DWORD *)this + 120);
    }
    else
    {
      v126 = 1;
    }
    v4 = (v4 + v126 + 2);
    if ((v99 & 0x800000) != 0)
    {
LABEL_439:
      v127 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 89);
      if ((v127 & 0x80000000) != 0)
      {
        v128 = 10;
      }
      else if (v127 >= 0x80)
      {
        v128 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v127);
        v99 = *((_DWORD *)this + 120);
      }
      else
      {
        v128 = 1;
      }
      v4 = (v4 + v128 + 2);
    }
  }
LABEL_445:
  if (!HIBYTE(v99))
    goto LABEL_503;
  if ((v99 & 0x1000000) != 0)
  {
    v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 90);
    if ((v129 & 0x80000000) != 0)
    {
      v130 = 10;
    }
    else if (v129 >= 0x80)
    {
      v130 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v129);
      v99 = *((_DWORD *)this + 120);
    }
    else
    {
      v130 = 1;
    }
    v4 = (v4 + v130 + 2);
    if ((v99 & 0x2000000) == 0)
    {
LABEL_448:
      if ((v99 & 0x4000000) == 0)
        goto LABEL_449;
      goto LABEL_467;
    }
  }
  else if ((v99 & 0x2000000) == 0)
  {
    goto LABEL_448;
  }
  v131 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 91);
  if ((v131 & 0x80000000) != 0)
  {
    v132 = 10;
  }
  else if (v131 >= 0x80)
  {
    v132 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v131);
    v99 = *((_DWORD *)this + 120);
  }
  else
  {
    v132 = 1;
  }
  v4 = (v4 + v132 + 2);
  if ((v99 & 0x4000000) == 0)
  {
LABEL_449:
    if ((v99 & 0x8000000) == 0)
      goto LABEL_450;
    goto LABEL_473;
  }
LABEL_467:
  v133 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 92);
  if ((v133 & 0x80000000) != 0)
  {
    v134 = 10;
  }
  else if (v133 >= 0x80)
  {
    v134 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v133);
    v99 = *((_DWORD *)this + 120);
  }
  else
  {
    v134 = 1;
  }
  v4 = (v4 + v134 + 2);
  if ((v99 & 0x8000000) == 0)
  {
LABEL_450:
    if ((v99 & 0x10000000) == 0)
      goto LABEL_451;
    goto LABEL_479;
  }
LABEL_473:
  v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 93);
  if ((v135 & 0x80000000) != 0)
  {
    v136 = 10;
  }
  else if (v135 >= 0x80)
  {
    v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v135);
    v99 = *((_DWORD *)this + 120);
  }
  else
  {
    v136 = 1;
  }
  v4 = (v4 + v136 + 2);
  if ((v99 & 0x10000000) == 0)
  {
LABEL_451:
    if ((v99 & 0x20000000) == 0)
      goto LABEL_452;
    goto LABEL_485;
  }
LABEL_479:
  v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 94);
  if ((v137 & 0x80000000) != 0)
  {
    v138 = 10;
  }
  else if (v137 >= 0x80)
  {
    v138 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v137);
    v99 = *((_DWORD *)this + 120);
  }
  else
  {
    v138 = 1;
  }
  v4 = (v4 + v138 + 2);
  if ((v99 & 0x20000000) == 0)
  {
LABEL_452:
    if ((v99 & 0x40000000) == 0)
      goto LABEL_453;
    goto LABEL_491;
  }
LABEL_485:
  v139 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 95);
  if ((v139 & 0x80000000) != 0)
  {
    v140 = 10;
  }
  else if (v139 >= 0x80)
  {
    v140 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v139);
    v99 = *((_DWORD *)this + 120);
  }
  else
  {
    v140 = 1;
  }
  v4 = (v4 + v140 + 2);
  if ((v99 & 0x40000000) == 0)
  {
LABEL_453:
    if ((v99 & 0x80000000) == 0)
      goto LABEL_503;
    goto LABEL_497;
  }
LABEL_491:
  v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 96);
  if ((v141 & 0x80000000) != 0)
  {
    v142 = 10;
  }
  else if (v141 >= 0x80)
  {
    v142 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v141);
    v99 = *((_DWORD *)this + 120);
  }
  else
  {
    v142 = 1;
  }
  v4 = (v4 + v142 + 2);
  if ((v99 & 0x80000000) != 0)
  {
LABEL_497:
    v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 97);
    if ((v143 & 0x80000000) != 0)
    {
      v144 = 10;
    }
    else if (v143 >= 0x80)
    {
      v144 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v143);
    }
    else
    {
      v144 = 1;
    }
    v4 = (v4 + v144 + 2);
  }
LABEL_503:
  v145 = *((_DWORD *)this + 121);
  if (!(_BYTE)v145)
    goto LABEL_567;
  if ((v145 & 1) != 0)
  {
    v146 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 98);
    if ((v146 & 0x80000000) != 0)
    {
      v147 = 10;
    }
    else if (v146 >= 0x80)
    {
      v147 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v146);
      v145 = *((_DWORD *)this + 121);
    }
    else
    {
      v147 = 1;
    }
    v4 = (v4 + v147 + 2);
    if ((v145 & 2) == 0)
    {
LABEL_506:
      if ((v145 & 4) == 0)
        goto LABEL_507;
      goto LABEL_525;
    }
  }
  else if ((v145 & 2) == 0)
  {
    goto LABEL_506;
  }
  v148 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 99);
  if ((v148 & 0x80000000) != 0)
  {
    v149 = 10;
  }
  else if (v148 >= 0x80)
  {
    v149 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v148);
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v149 = 1;
  }
  v4 = (v4 + v149 + 2);
  if ((v145 & 4) == 0)
  {
LABEL_507:
    if ((v145 & 8) == 0)
      goto LABEL_508;
    goto LABEL_531;
  }
LABEL_525:
  v150 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 100);
  if ((v150 & 0x80000000) != 0)
  {
    v151 = 10;
  }
  else if (v150 >= 0x80)
  {
    v151 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v150);
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v151 = 1;
  }
  v4 = (v4 + v151 + 2);
  if ((v145 & 8) == 0)
  {
LABEL_508:
    if ((v145 & 0x10) == 0)
      goto LABEL_509;
    goto LABEL_537;
  }
LABEL_531:
  v152 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 101);
  if ((v152 & 0x80000000) != 0)
  {
    v153 = 10;
  }
  else if (v152 >= 0x80)
  {
    v153 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v152);
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v153 = 1;
  }
  v4 = (v4 + v153 + 2);
  if ((v145 & 0x10) == 0)
  {
LABEL_509:
    if ((v145 & 0x20) == 0)
      goto LABEL_510;
    goto LABEL_543;
  }
LABEL_537:
  v154 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 104);
  if ((v154 & 0x80000000) != 0)
  {
    v155 = 10;
  }
  else if (v154 >= 0x80)
  {
    v155 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v154);
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v155 = 1;
  }
  v4 = (v4 + v155 + 2);
  if ((v145 & 0x20) == 0)
  {
LABEL_510:
    if ((v145 & 0x40) == 0)
      goto LABEL_511;
    goto LABEL_552;
  }
LABEL_543:
  v156 = *((_QWORD *)this + 51);
  v157 = *(unsigned __int8 *)(v156 + 23);
  v158 = v157;
  v159 = *(_QWORD *)(v156 + 8);
  if ((v157 & 0x80u) == 0)
    v160 = *(unsigned __int8 *)(v156 + 23);
  else
    v160 = v159;
  if (v160 >= 0x80)
  {
    v161 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v160);
    v157 = *(unsigned __int8 *)(v156 + 23);
    v159 = *(_QWORD *)(v156 + 8);
    v145 = *((_DWORD *)this + 121);
    v158 = *(_BYTE *)(v156 + 23);
  }
  else
  {
    v161 = 1;
  }
  if (v158 < 0)
    v157 = v159;
  v4 = (v4 + v161 + v157 + 2);
  if ((v145 & 0x40) == 0)
  {
LABEL_511:
    if ((v145 & 0x80) == 0)
      goto LABEL_567;
    goto LABEL_561;
  }
LABEL_552:
  v162 = *((_QWORD *)this + 53);
  v163 = *(unsigned __int8 *)(v162 + 23);
  v164 = v163;
  v165 = *(_QWORD *)(v162 + 8);
  if ((v163 & 0x80u) == 0)
    v166 = *(unsigned __int8 *)(v162 + 23);
  else
    v166 = v165;
  if (v166 >= 0x80)
  {
    v167 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v166);
    v163 = *(unsigned __int8 *)(v162 + 23);
    v165 = *(_QWORD *)(v162 + 8);
    v145 = *((_DWORD *)this + 121);
    v164 = *(_BYTE *)(v162 + 23);
  }
  else
  {
    v167 = 1;
  }
  if (v164 < 0)
    v163 = v165;
  v4 = (v4 + v167 + v163 + 2);
  if ((v145 & 0x80) != 0)
  {
LABEL_561:
    v168 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 105);
    if ((v168 & 0x80000000) != 0)
    {
      v169 = 10;
    }
    else if (v168 >= 0x80)
    {
      v169 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v168);
      v145 = *((_DWORD *)this + 121);
    }
    else
    {
      v169 = 1;
    }
    v4 = (v4 + v169 + 2);
  }
LABEL_567:
  if ((v145 & 0xFF00) == 0)
    goto LABEL_576;
  if ((v145 & 0x100) != 0)
  {
    v170 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 108);
    if ((v170 & 0x80000000) != 0)
    {
      v171 = 10;
    }
    else if (v170 >= 0x80)
    {
      v171 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v170);
      v145 = *((_DWORD *)this + 121);
    }
    else
    {
      v171 = 1;
    }
    v4 = (v4 + v171 + 2);
    if ((v145 & 0x200) == 0)
    {
LABEL_570:
      if ((v145 & 0x400) == 0)
        goto LABEL_571;
      goto LABEL_590;
    }
  }
  else if ((v145 & 0x200) == 0)
  {
    goto LABEL_570;
  }
  v172 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 109);
  if ((v172 & 0x80000000) != 0)
  {
    v173 = 10;
  }
  else if (v172 >= 0x80)
  {
    v173 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v172);
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v173 = 1;
  }
  v4 = (v4 + v173 + 2);
  if ((v145 & 0x400) == 0)
  {
LABEL_571:
    if ((v145 & 0x800) == 0)
      goto LABEL_572;
    goto LABEL_596;
  }
LABEL_590:
  v174 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 110);
  if ((v174 & 0x80000000) != 0)
  {
    v175 = 10;
  }
  else if (v174 >= 0x80)
  {
    v175 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v174);
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v175 = 1;
  }
  v4 = (v4 + v175 + 2);
  if ((v145 & 0x800) == 0)
  {
LABEL_572:
    if ((v145 & 0x1000) == 0)
      goto LABEL_573;
    goto LABEL_602;
  }
LABEL_596:
  v176 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 111);
  if ((v176 & 0x80000000) != 0)
  {
    v177 = 12;
  }
  else if (v176 >= 0x80)
  {
    v177 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v176) + 2;
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v177 = 3;
  }
  v4 = (v177 + v4);
  if ((v145 & 0x1000) == 0)
  {
LABEL_573:
    if ((v145 & 0x2000) == 0)
      goto LABEL_574;
    goto LABEL_608;
  }
LABEL_602:
  v178 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 112);
  if ((v178 & 0x80000000) != 0)
  {
    v179 = 12;
  }
  else if (v178 >= 0x80)
  {
    v179 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v178) + 2;
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v179 = 3;
  }
  v4 = (v179 + v4);
  if ((v145 & 0x2000) == 0)
  {
LABEL_574:
    if ((v145 & 0x4000) == 0)
      goto LABEL_575;
    goto LABEL_614;
  }
LABEL_608:
  v180 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 113);
  if ((v180 & 0x80000000) != 0)
  {
    v181 = 12;
  }
  else if (v180 >= 0x80)
  {
    v181 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v180) + 2;
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v181 = 3;
  }
  v4 = (v181 + v4);
  if ((v145 & 0x4000) == 0)
  {
LABEL_575:
    if ((v145 & 0x8000) == 0)
      goto LABEL_576;
    goto LABEL_620;
  }
LABEL_614:
  v182 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 114);
  if ((v182 & 0x80000000) != 0)
  {
    v183 = 12;
  }
  else if (v182 >= 0x80)
  {
    v183 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v182) + 2;
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v183 = 3;
  }
  v4 = (v183 + v4);
  if ((v145 & 0x8000) == 0)
  {
LABEL_576:
    if ((v145 & 0x10000) == 0)
      goto LABEL_632;
    goto LABEL_626;
  }
LABEL_620:
  v184 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 115);
  if ((v184 & 0x80000000) != 0)
  {
    v185 = 12;
  }
  else if (v184 >= 0x80)
  {
    v185 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v184) + 2;
    v145 = *((_DWORD *)this + 121);
  }
  else
  {
    v185 = 3;
  }
  v4 = (v185 + v4);
  if ((v145 & 0x10000) != 0)
  {
LABEL_626:
    v186 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 116);
    if ((v186 & 0x80000000) != 0)
    {
      v187 = 12;
    }
    else if (v186 >= 0x80)
    {
      v187 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v186) + 2;
    }
    else
    {
      v187 = 3;
    }
    v4 = (v187 + v4);
  }
LABEL_632:
  *((_DWORD *)this + 117) = v4;
  return v4;
}

void awd::metrics::LocationEmergencySessionStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationEmergencySessionStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationEmergencySessionStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationEmergencySessionStatistics::CopyFrom(awd::metrics::LocationEmergencySessionStatistics *this, const awd::metrics::LocationEmergencySessionStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationEmergencySessionStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::IsInitialized(awd::metrics::LocationEmergencySessionStatistics *this)
{
  return 1;
}

double awd::metrics::LocationEmergencySessionStatistics::Swap(awd::metrics::LocationEmergencySessionStatistics *this, awd::metrics::LocationEmergencySessionStatistics *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    v6 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v6;
    v7 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v7;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v2;
    LODWORD(v2) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
    LODWORD(v2) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v2;
    LODWORD(v2) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v2;
    LODWORD(v2) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v2;
    v8 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v8;
    v9 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v9;
    LODWORD(v8) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v8;
    LODWORD(v9) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v9;
    LODWORD(v9) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v9;
    LODWORD(v8) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v8;
    LOBYTE(v8) = *((_BYTE *)this + 132);
    *((_BYTE *)this + 132) = *((_BYTE *)a2 + 132);
    *((_BYTE *)a2 + 132) = v8;
    LOBYTE(v8) = *((_BYTE *)this + 133);
    *((_BYTE *)this + 133) = *((_BYTE *)a2 + 133);
    *((_BYTE *)a2 + 133) = v8;
    LODWORD(v8) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v8;
    v10 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 15) = v10;
    v11 = *((_QWORD *)this + 17);
    *((_QWORD *)this + 17) = *((_QWORD *)a2 + 17);
    *((_QWORD *)a2 + 17) = v11;
    LODWORD(v8) = *((_DWORD *)this + 36);
    *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
    *((_DWORD *)a2 + 36) = v8;
    LODWORD(v8) = *((_DWORD *)this + 37);
    *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
    *((_DWORD *)a2 + 37) = v8;
    LOBYTE(v8) = *((_BYTE *)this + 134);
    *((_BYTE *)this + 134) = *((_BYTE *)a2 + 134);
    *((_BYTE *)a2 + 134) = v8;
    LOBYTE(v8) = *((_BYTE *)this + 135);
    *((_BYTE *)this + 135) = *((_BYTE *)a2 + 135);
    *((_BYTE *)a2 + 135) = v8;
    LOBYTE(v8) = *((_BYTE *)this + 164);
    *((_BYTE *)this + 164) = *((_BYTE *)a2 + 164);
    *((_BYTE *)a2 + 164) = v8;
    v12 = *((_QWORD *)this + 19);
    *((_QWORD *)this + 19) = *((_QWORD *)a2 + 19);
    *((_QWORD *)a2 + 19) = v12;
    LOBYTE(v12) = *((_BYTE *)this + 165);
    *((_BYTE *)this + 165) = *((_BYTE *)a2 + 165);
    *((_BYTE *)a2 + 165) = v12;
    LODWORD(v12) = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v12;
    LODWORD(v12) = *((_DWORD *)this + 42);
    *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v12;
    LOBYTE(v12) = *((_BYTE *)this + 166);
    *((_BYTE *)this + 166) = *((_BYTE *)a2 + 166);
    *((_BYTE *)a2 + 166) = v12;
    LOBYTE(v12) = *((_BYTE *)this + 167);
    *((_BYTE *)this + 167) = *((_BYTE *)a2 + 167);
    *((_BYTE *)a2 + 167) = v12;
    LODWORD(v12) = *((_DWORD *)this + 43);
    *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
    *((_DWORD *)a2 + 43) = v12;
    LODWORD(v12) = *((_DWORD *)this + 44);
    *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
    *((_DWORD *)a2 + 44) = v12;
    LODWORD(v12) = *((_DWORD *)this + 45);
    *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
    *((_DWORD *)a2 + 45) = v12;
    LOBYTE(v12) = *((_BYTE *)this + 212);
    *((_BYTE *)this + 212) = *((_BYTE *)a2 + 212);
    *((_BYTE *)a2 + 212) = v12;
    LODWORD(v12) = *((_DWORD *)this + 46);
    *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
    *((_DWORD *)a2 + 46) = v12;
    LODWORD(v12) = *((_DWORD *)this + 47);
    *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
    *((_DWORD *)a2 + 47) = v12;
    LODWORD(v12) = *((_DWORD *)this + 48);
    *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
    *((_DWORD *)a2 + 48) = v12;
    LODWORD(v12) = *((_DWORD *)this + 49);
    *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
    *((_DWORD *)a2 + 49) = v12;
    LODWORD(v12) = *((_DWORD *)this + 50);
    *((_DWORD *)this + 50) = *((_DWORD *)a2 + 50);
    *((_DWORD *)a2 + 50) = v12;
    LODWORD(v12) = *((_DWORD *)this + 51);
    *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
    *((_DWORD *)a2 + 51) = v12;
    LODWORD(v12) = *((_DWORD *)this + 52);
    *((_DWORD *)this + 52) = *((_DWORD *)a2 + 52);
    *((_DWORD *)a2 + 52) = v12;
    LOBYTE(v12) = *((_BYTE *)this + 213);
    *((_BYTE *)this + 213) = *((_BYTE *)a2 + 213);
    *((_BYTE *)a2 + 213) = v12;
    LOBYTE(v12) = *((_BYTE *)this + 214);
    *((_BYTE *)this + 214) = *((_BYTE *)a2 + 214);
    *((_BYTE *)a2 + 214) = v12;
    v13 = *((_QWORD *)this + 27);
    *((_QWORD *)this + 27) = *((_QWORD *)a2 + 27);
    *((_QWORD *)a2 + 27) = v13;
    v14 = *((_QWORD *)this + 28);
    *((_QWORD *)this + 28) = *((_QWORD *)a2 + 28);
    *((_QWORD *)a2 + 28) = v14;
    v15 = *((_QWORD *)this + 29);
    *((_QWORD *)this + 29) = *((_QWORD *)a2 + 29);
    *((_QWORD *)a2 + 29) = v15;
    v16 = *((_QWORD *)this + 30);
    *((_QWORD *)this + 30) = *((_QWORD *)a2 + 30);
    *((_QWORD *)a2 + 30) = v16;
    result = *((double *)this + 31);
    *((_QWORD *)this + 31) = *((_QWORD *)a2 + 31);
    *((double *)a2 + 31) = result;
    LODWORD(v12) = *((_DWORD *)this + 64);
    *((_DWORD *)this + 64) = *((_DWORD *)a2 + 64);
    *((_DWORD *)a2 + 64) = v12;
    LODWORD(v12) = *((_DWORD *)this + 65);
    *((_DWORD *)this + 65) = *((_DWORD *)a2 + 65);
    *((_DWORD *)a2 + 65) = v12;
    LOBYTE(v12) = *((_BYTE *)this + 215);
    *((_BYTE *)this + 215) = *((_BYTE *)a2 + 215);
    *((_BYTE *)a2 + 215) = v12;
    LODWORD(v12) = *((_DWORD *)this + 66);
    *((_DWORD *)this + 66) = *((_DWORD *)a2 + 66);
    *((_DWORD *)a2 + 66) = v12;
    LODWORD(v12) = *((_DWORD *)this + 67);
    *((_DWORD *)this + 67) = *((_DWORD *)a2 + 67);
    *((_DWORD *)a2 + 67) = v12;
    LODWORD(v12) = *((_DWORD *)this + 68);
    *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
    *((_DWORD *)a2 + 68) = v12;
    LODWORD(v12) = *((_DWORD *)this + 69);
    *((_DWORD *)this + 69) = *((_DWORD *)a2 + 69);
    *((_DWORD *)a2 + 69) = v12;
    v18 = *((_QWORD *)this + 35);
    *((_QWORD *)this + 35) = *((_QWORD *)a2 + 35);
    *((_QWORD *)a2 + 35) = v18;
    v19 = *((_QWORD *)this + 36);
    *((_QWORD *)this + 36) = *((_QWORD *)a2 + 36);
    *((_QWORD *)a2 + 36) = v19;
    LODWORD(v19) = *((_DWORD *)this + 74);
    *((_DWORD *)this + 74) = *((_DWORD *)a2 + 74);
    *((_DWORD *)a2 + 74) = v19;
    LODWORD(v19) = *((_DWORD *)this + 75);
    *((_DWORD *)this + 75) = *((_DWORD *)a2 + 75);
    *((_DWORD *)a2 + 75) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 304);
    *((_BYTE *)this + 304) = *((_BYTE *)a2 + 304);
    *((_BYTE *)a2 + 304) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 305);
    *((_BYTE *)this + 305) = *((_BYTE *)a2 + 305);
    *((_BYTE *)a2 + 305) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 306);
    *((_BYTE *)this + 306) = *((_BYTE *)a2 + 306);
    *((_BYTE *)a2 + 306) = v19;
    LODWORD(v19) = *((_DWORD *)this + 77);
    *((_DWORD *)this + 77) = *((_DWORD *)a2 + 77);
    *((_DWORD *)a2 + 77) = v19;
    LODWORD(v19) = *((_DWORD *)this + 78);
    *((_DWORD *)this + 78) = *((_DWORD *)a2 + 78);
    *((_DWORD *)a2 + 78) = v19;
    LODWORD(v19) = *((_DWORD *)this + 79);
    *((_DWORD *)this + 79) = *((_DWORD *)a2 + 79);
    *((_DWORD *)a2 + 79) = v19;
    LODWORD(v19) = *((_DWORD *)this + 80);
    *((_DWORD *)this + 80) = *((_DWORD *)a2 + 80);
    *((_DWORD *)a2 + 80) = v19;
    LODWORD(v19) = *((_DWORD *)this + 81);
    *((_DWORD *)this + 81) = *((_DWORD *)a2 + 81);
    *((_DWORD *)a2 + 81) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 307);
    *((_BYTE *)this + 307) = *((_BYTE *)a2 + 307);
    *((_BYTE *)a2 + 307) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 328);
    *((_BYTE *)this + 328) = *((_BYTE *)a2 + 328);
    *((_BYTE *)a2 + 328) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 329);
    *((_BYTE *)this + 329) = *((_BYTE *)a2 + 329);
    *((_BYTE *)a2 + 329) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 330);
    *((_BYTE *)this + 330) = *((_BYTE *)a2 + 330);
    *((_BYTE *)a2 + 330) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 331);
    *((_BYTE *)this + 331) = *((_BYTE *)a2 + 331);
    *((_BYTE *)a2 + 331) = v19;
    LODWORD(v19) = *((_DWORD *)this + 83);
    *((_DWORD *)this + 83) = *((_DWORD *)a2 + 83);
    *((_DWORD *)a2 + 83) = v19;
    LODWORD(v19) = *((_DWORD *)this + 84);
    *((_DWORD *)this + 84) = *((_DWORD *)a2 + 84);
    *((_DWORD *)a2 + 84) = v19;
    LODWORD(v19) = *((_DWORD *)this + 85);
    *((_DWORD *)this + 85) = *((_DWORD *)a2 + 85);
    *((_DWORD *)a2 + 85) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 344);
    *((_BYTE *)this + 344) = *((_BYTE *)a2 + 344);
    *((_BYTE *)a2 + 344) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 345);
    *((_BYTE *)this + 345) = *((_BYTE *)a2 + 345);
    *((_BYTE *)a2 + 345) = v19;
    LOBYTE(v19) = *((_BYTE *)this + 346);
    *((_BYTE *)this + 346) = *((_BYTE *)a2 + 346);
    *((_BYTE *)a2 + 346) = v19;
    LODWORD(v19) = *((_DWORD *)this + 87);
    *((_DWORD *)this + 87) = *((_DWORD *)a2 + 87);
    *((_DWORD *)a2 + 87) = v19;
    LODWORD(v19) = *((_DWORD *)this + 88);
    *((_DWORD *)this + 88) = *((_DWORD *)a2 + 88);
    *((_DWORD *)a2 + 88) = v19;
    LODWORD(v19) = *((_DWORD *)this + 89);
    *((_DWORD *)this + 89) = *((_DWORD *)a2 + 89);
    *((_DWORD *)a2 + 89) = v19;
    LODWORD(v19) = *((_DWORD *)this + 90);
    *((_DWORD *)this + 90) = *((_DWORD *)a2 + 90);
    *((_DWORD *)a2 + 90) = v19;
    LODWORD(v19) = *((_DWORD *)this + 91);
    *((_DWORD *)this + 91) = *((_DWORD *)a2 + 91);
    *((_DWORD *)a2 + 91) = v19;
    LODWORD(v19) = *((_DWORD *)this + 92);
    *((_DWORD *)this + 92) = *((_DWORD *)a2 + 92);
    *((_DWORD *)a2 + 92) = v19;
    LODWORD(v19) = *((_DWORD *)this + 93);
    *((_DWORD *)this + 93) = *((_DWORD *)a2 + 93);
    *((_DWORD *)a2 + 93) = v19;
    LODWORD(v19) = *((_DWORD *)this + 94);
    *((_DWORD *)this + 94) = *((_DWORD *)a2 + 94);
    *((_DWORD *)a2 + 94) = v19;
    LODWORD(v19) = *((_DWORD *)this + 95);
    *((_DWORD *)this + 95) = *((_DWORD *)a2 + 95);
    *((_DWORD *)a2 + 95) = v19;
    LODWORD(v19) = *((_DWORD *)this + 96);
    *((_DWORD *)this + 96) = *((_DWORD *)a2 + 96);
    *((_DWORD *)a2 + 96) = v19;
    LODWORD(v19) = *((_DWORD *)this + 97);
    *((_DWORD *)this + 97) = *((_DWORD *)a2 + 97);
    *((_DWORD *)a2 + 97) = v19;
    LODWORD(v19) = *((_DWORD *)this + 98);
    *((_DWORD *)this + 98) = *((_DWORD *)a2 + 98);
    *((_DWORD *)a2 + 98) = v19;
    LODWORD(v19) = *((_DWORD *)this + 99);
    *((_DWORD *)this + 99) = *((_DWORD *)a2 + 99);
    *((_DWORD *)a2 + 99) = v19;
    LODWORD(v19) = *((_DWORD *)this + 100);
    *((_DWORD *)this + 100) = *((_DWORD *)a2 + 100);
    *((_DWORD *)a2 + 100) = v19;
    LODWORD(v19) = *((_DWORD *)this + 101);
    *((_DWORD *)this + 101) = *((_DWORD *)a2 + 101);
    *((_DWORD *)a2 + 101) = v19;
    LODWORD(v19) = *((_DWORD *)this + 104);
    *((_DWORD *)this + 104) = *((_DWORD *)a2 + 104);
    *((_DWORD *)a2 + 104) = v19;
    v20 = *((_QWORD *)this + 51);
    *((_QWORD *)this + 51) = *((_QWORD *)a2 + 51);
    *((_QWORD *)a2 + 51) = v20;
    v21 = *((_QWORD *)this + 53);
    *((_QWORD *)this + 53) = *((_QWORD *)a2 + 53);
    *((_QWORD *)a2 + 53) = v21;
    LODWORD(v21) = *((_DWORD *)this + 105);
    *((_DWORD *)this + 105) = *((_DWORD *)a2 + 105);
    *((_DWORD *)a2 + 105) = v21;
    LODWORD(v21) = *((_DWORD *)this + 108);
    *((_DWORD *)this + 108) = *((_DWORD *)a2 + 108);
    *((_DWORD *)a2 + 108) = v21;
    LODWORD(v21) = *((_DWORD *)this + 109);
    *((_DWORD *)this + 109) = *((_DWORD *)a2 + 109);
    *((_DWORD *)a2 + 109) = v21;
    LODWORD(v21) = *((_DWORD *)this + 110);
    *((_DWORD *)this + 110) = *((_DWORD *)a2 + 110);
    *((_DWORD *)a2 + 110) = v21;
    LODWORD(v21) = *((_DWORD *)this + 111);
    *((_DWORD *)this + 111) = *((_DWORD *)a2 + 111);
    *((_DWORD *)a2 + 111) = v21;
    LODWORD(v21) = *((_DWORD *)this + 112);
    *((_DWORD *)this + 112) = *((_DWORD *)a2 + 112);
    *((_DWORD *)a2 + 112) = v21;
    LODWORD(v21) = *((_DWORD *)this + 113);
    *((_DWORD *)this + 113) = *((_DWORD *)a2 + 113);
    *((_DWORD *)a2 + 113) = v21;
    LODWORD(v21) = *((_DWORD *)this + 114);
    *((_DWORD *)this + 114) = *((_DWORD *)a2 + 114);
    *((_DWORD *)a2 + 114) = v21;
    LODWORD(v21) = *((_DWORD *)this + 115);
    *((_DWORD *)this + 115) = *((_DWORD *)a2 + 115);
    *((_DWORD *)a2 + 115) = v21;
    LODWORD(v21) = *((_DWORD *)this + 116);
    *((_DWORD *)this + 116) = *((_DWORD *)a2 + 116);
    *((_DWORD *)a2 + 116) = v21;
    LODWORD(v21) = *((_DWORD *)this + 118);
    *((_DWORD *)this + 118) = *((_DWORD *)a2 + 118);
    *((_DWORD *)a2 + 118) = v21;
    LODWORD(v21) = *((_DWORD *)this + 119);
    *((_DWORD *)this + 119) = *((_DWORD *)a2 + 119);
    *((_DWORD *)a2 + 119) = v21;
    LODWORD(v21) = *((_DWORD *)this + 120);
    *((_DWORD *)this + 120) = *((_DWORD *)a2 + 120);
    *((_DWORD *)a2 + 120) = v21;
    LODWORD(v21) = *((_DWORD *)this + 121);
    *((_DWORD *)this + 121) = *((_DWORD *)a2 + 121);
    *((_DWORD *)a2 + 121) = v21;
    LODWORD(v21) = *((_DWORD *)this + 117);
    *((_DWORD *)this + 117) = *((_DWORD *)a2 + 117);
    *((_DWORD *)a2 + 117) = v21;
  }
  return result;
}

_QWORD *awd::metrics::LocationEmergencySessionStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationEmergencySessionStatistics");
}

uint64_t awd::metrics::LocationMapMatching::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationMapMatching *awd::metrics::LocationMapMatching::LocationMapMatching(awd::metrics::LocationMapMatching *this, const awd::metrics::LocationMapMatching *a2)
{
  *(_QWORD *)this = &off_24D98E498;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::LocationMapMatching::MergeFrom(this, a2);
  return this;
}

void sub_2189DAAB4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMapMatching::MergeFrom(awd::metrics::LocationMapMatching *this, const awd::metrics::LocationMapMatching *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  const std::string *v7;
  std::string *v8;
  int v9;
  int v10;
  _BYTE v11[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_15;
      }
    }
    else if ((*((_BYTE *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 10) |= 2u;
    v8 = (std::string *)*((_QWORD *)this + 2);
    if (v8 == (std::string *)MEMORY[0x24BEDD958])
    {
      v8 = (std::string *)operator new();
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v8;
    }
    std::string::operator=(v8, v7);
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 10) |= 4u;
    *((_DWORD *)this + 6) = v9;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_16:
    v10 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 10) |= 8u;
    *((_DWORD *)this + 7) = v10;
    if ((*((_DWORD *)a2 + 10) & 0x10) == 0)
      return;
LABEL_9:
    v5 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 0x10u;
    *((_DWORD *)this + 8) = v5;
  }
}

void sub_2189DAC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMapMatching::~LocationMapMatching(awd::metrics::LocationMapMatching *this)
{
  *(_QWORD *)this = &off_24D98E498;
  awd::metrics::LocationMapMatching::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E498;
  awd::metrics::LocationMapMatching::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E498;
  awd::metrics::LocationMapMatching::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMapMatching::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationMapMatching::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationMapMatching::default_instance(awd::metrics::LocationMapMatching *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMapMatching::default_instance_;
  if (!awd::metrics::LocationMapMatching::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMapMatching::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationMapMatching::New(awd::metrics::LocationMapMatching *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_24D98E498;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = MEMORY[0x24BEDD958];
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationMapMatching::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 40);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_DWORD *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationMapMatching::MergePartialFromCodedStream(awd::metrics::LocationMapMatching *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  int v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  _QWORD *v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE *v22;
  unsigned int v23;
  unsigned __int8 *v24;
  uint64_t result;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = MEMORY[0x24BEDD958];
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
LABEL_26:
          v12 = *((_DWORD *)this + 10) | 1;
          *((_DWORD *)this + 10) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((_QWORD *)a2 + 1) = v11 + 1;
            goto LABEL_29;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
        v12 = *((_DWORD *)this + 10);
LABEL_29:
        *((_DWORD *)this + 10) = v12 | 2;
        if (*((_QWORD *)this + 2) == v5)
        {
          v17 = (_QWORD *)operator new();
          v17[1] = 0;
          v17[2] = 0;
          *v17 = 0;
          *((_QWORD *)this + 2) = v17;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v18 >= v13 || *v18 != 24)
          continue;
        v14 = v18 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_35:
        v28 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!(_DWORD)result)
            return result;
          v19 = v28;
          v20 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v19 = *v14;
          v20 = v14 + 1;
          *((_QWORD *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 6) = v19;
        *((_DWORD *)this + 10) |= 4u;
        if ((unint64_t)v20 >= v13 || *v20 != 32)
          continue;
        v15 = v20 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_43:
        v27 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
          if (!(_DWORD)result)
            return result;
          v21 = v27;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v21 = *v15;
          v22 = v15 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 7) = v21;
        *((_DWORD *)this + 10) |= 8u;
        if ((unint64_t)v22 >= v13 || *v22 != 40)
          continue;
        v16 = v22 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_51:
        v26 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!(_DWORD)result)
            return result;
          v23 = v26;
          v24 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v23 = *v16;
          v24 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 8) = v23;
        *((_DWORD *)this + 10) |= 0x10u;
        if (v24 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_35;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_43;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      default:
        v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMapMatching::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], (uint64_t)a2, a4);
  v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[8], (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], (uint64_t)a2, a4);
  if ((v5[10] & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[8], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMapMatching::ByteSize(awd::metrics::LocationMapMatching *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_38;
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 10);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 10);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v11 = 2;
    }
    v3 = (v11 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_38;
      goto LABEL_32;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 10);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x10) != 0)
  {
LABEL_32:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v14 & 0x80000000) != 0)
    {
      v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    }
    else
    {
      v15 = 2;
    }
    v3 = (v15 + v3);
  }
LABEL_38:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void awd::metrics::LocationMapMatching::CheckTypeAndMergeFrom(awd::metrics::LocationMapMatching *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMapMatching::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMapMatching::CopyFrom(awd::metrics::LocationMapMatching *this, const awd::metrics::LocationMapMatching *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMapMatching *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMapMatching::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMapMatching::IsInitialized(awd::metrics::LocationMapMatching *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMapMatching::Swap(uint64_t this, awd::metrics::LocationMapMatching *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationMapMatching *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationMapMatching::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMapMatching");
}

double awd::metrics::LocationRealTimeHarvest::SharedCtor(awd::metrics::LocationRealTimeHarvest *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationRealTimeHarvest *awd::metrics::LocationRealTimeHarvest::LocationRealTimeHarvest(awd::metrics::LocationRealTimeHarvest *this, const awd::metrics::LocationRealTimeHarvest *a2)
{
  *(_QWORD *)this = &off_24D98E510;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::LocationRealTimeHarvest::MergeFrom(this, a2);
  return this;
}

void sub_2189DB4D4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationRealTimeHarvest::MergeFrom(awd::metrics::LocationRealTimeHarvest *this, const awd::metrics::LocationRealTimeHarvest *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 13);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 13) |= 2u;
    *((_QWORD *)this + 2) = v7;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    v8 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 13) |= 4u;
    *((_QWORD *)this + 3) = v8;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_14:
    v9 = *((_QWORD *)a2 + 4);
    *((_DWORD *)this + 13) |= 8u;
    *((_QWORD *)this + 4) = v9;
    if ((*((_DWORD *)a2 + 13) & 0x10) == 0)
      return;
LABEL_9:
    v5 = *((_QWORD *)a2 + 5);
    *((_DWORD *)this + 13) |= 0x10u;
    *((_QWORD *)this + 5) = v5;
  }
}

void sub_2189DB5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationRealTimeHarvest::~LocationRealTimeHarvest(awd::metrics::LocationRealTimeHarvest *this)
{
  *(_QWORD *)this = &off_24D98E510;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E510;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E510;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationRealTimeHarvest::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationRealTimeHarvest::default_instance(awd::metrics::LocationRealTimeHarvest *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationRealTimeHarvest::default_instance_;
  if (!awd::metrics::LocationRealTimeHarvest::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationRealTimeHarvest::default_instance_;
  }
  return result;
}

double awd::metrics::LocationRealTimeHarvest::New(awd::metrics::LocationRealTimeHarvest *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98E510;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t awd::metrics::LocationRealTimeHarvest::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 52))
  {
    *(_QWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationRealTimeHarvest::MergePartialFromCodedStream(awd::metrics::LocationRealTimeHarvest *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  unint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  unsigned __int8 *v22;
  uint64_t result;
  unint64_t v24;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 32);
  v6 = (unint64_t *)((char *)this + 40);
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
LABEL_26:
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            v13 = v12 + 1;
            *((_QWORD *)a2 + 1) = v13;
            goto LABEL_29;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_29:
        v24 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v17 = v24;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v17 = *v13;
          v18 = v13 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_QWORD *)this + 2) = v17;
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v18 >= v10 || *v18 != 24)
          continue;
        v14 = v18 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_37:
        v24 = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v19 = v24;
          v20 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v19 = *v14;
          v20 = v14 + 1;
          *((_QWORD *)a2 + 1) = v20;
        }
        *((_QWORD *)this + 3) = v19;
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v20 >= v10 || *v20 != 32)
          continue;
        v15 = v20 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_45:
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v15;
          v21 = v15 + 1;
          *((_QWORD *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v21 >= v10 || *v21 != 40)
          continue;
        v16 = v21 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_53:
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v22 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v16;
          v22 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if (v22 != (unsigned __int8 *)v10 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_37;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      default:
        v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationRealTimeHarvest::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationRealTimeHarvest::ByteSize(awd::metrics::LocationRealTimeHarvest *this)
{
  int v2;
  uint64_t v3;

  LOBYTE(v2) = *((_BYTE *)this + 52);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_12;
  }
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 13);
    if ((v2 & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 52) & 2) != 0)
  {
LABEL_7:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    v2 = *((_DWORD *)this + 13);
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_10;
LABEL_14:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4))
       + 1;
    if ((*((_DWORD *)this + 13) & 0x10) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 3))
     + 1;
  v2 = *((_DWORD *)this + 13);
  if ((v2 & 8) != 0)
    goto LABEL_14;
LABEL_10:
  if ((v2 & 0x10) != 0)
LABEL_11:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 5))
       + 1;
LABEL_12:
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void awd::metrics::LocationRealTimeHarvest::CheckTypeAndMergeFrom(awd::metrics::LocationRealTimeHarvest *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationRealTimeHarvest::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationRealTimeHarvest::CopyFrom(awd::metrics::LocationRealTimeHarvest *this, const awd::metrics::LocationRealTimeHarvest *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationRealTimeHarvest *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationRealTimeHarvest::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationRealTimeHarvest::IsInitialized(awd::metrics::LocationRealTimeHarvest *this)
{
  return 1;
}

uint64_t awd::metrics::LocationRealTimeHarvest::Swap(uint64_t this, awd::metrics::LocationRealTimeHarvest *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 != (awd::metrics::LocationRealTimeHarvest *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v6;
  }
  return this;
}

_QWORD *awd::metrics::LocationRealTimeHarvest::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationRealTimeHarvest");
}

double awd::metrics::LocationSecondaryDeviceRequest::SharedCtor(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationSecondaryDeviceRequest *awd::metrics::LocationSecondaryDeviceRequest::LocationSecondaryDeviceRequest(awd::metrics::LocationSecondaryDeviceRequest *this, const awd::metrics::LocationSecondaryDeviceRequest *a2)
{
  *(_QWORD *)this = &off_24D98E588;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::LocationSecondaryDeviceRequest::MergeFrom(this, a2);
  return this;
}

void sub_2189DBD28(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSecondaryDeviceRequest::MergeFrom(awd::metrics::LocationSecondaryDeviceRequest *this, const awd::metrics::LocationSecondaryDeviceRequest *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  _BYTE v14[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  v4 = *((_DWORD *)a2 + 13);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 13) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 13) |= 2u;
  *((_DWORD *)this + 4) = v8;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 13) |= 4u;
  *((_DWORD *)this + 5) = v9;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 13) |= 8u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_21:
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 13) |= 0x10u;
  *((_DWORD *)this + 7) = v11;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x20) != 0)
    goto LABEL_21;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_22:
  v13 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 13) |= 0x40u;
  *((_DWORD *)this + 9) = v13;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 13) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    v4 = *((_DWORD *)a2 + 13);
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    v6 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 13) |= 0x100u;
    *((_DWORD *)this + 11) = v6;
  }
}

void sub_2189DBECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSecondaryDeviceRequest::~LocationSecondaryDeviceRequest(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  *(_QWORD *)this = &off_24D98E588;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E588;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E588;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::default_instance(awd::metrics::LocationSecondaryDeviceRequest *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationSecondaryDeviceRequest::default_instance_;
  if (!awd::metrics::LocationSecondaryDeviceRequest::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationSecondaryDeviceRequest::default_instance_;
  }
  return result;
}

double awd::metrics::LocationSecondaryDeviceRequest::New(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98E588;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 52);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
    *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::MergePartialFromCodedStream(awd::metrics::LocationSecondaryDeviceRequest *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  unsigned __int8 *v32;
  uint64_t result;
  unint64_t *v34;
  unsigned int *v35;

  v34 = (unint64_t *)((char *)this + 8);
  v35 = (unsigned int *)((char *)this + 16);
  v4 = (unsigned int *)((char *)this + 20);
  v5 = (unsigned int *)((char *)this + 24);
  v6 = (unsigned int *)((char *)this + 28);
  v7 = (unsigned int *)((char *)this + 32);
  v8 = (unsigned int *)((char *)this + 36);
  v9 = (unsigned int *)((char *)this + 40);
  v10 = (unsigned int *)((char *)this + 44);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v34 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_34:
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_37;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v34);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_37:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v35 = *v17;
          v25 = v17 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v25 >= v14 || *v25 != 24)
          continue;
        v18 = v25 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v18;
          v26 = v18 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v26 >= v14 || *v26 != 32)
          continue;
        v19 = v26 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v19;
          v27 = v19 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v27 >= v14 || *v27 != 40)
          continue;
        v20 = v27 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_61:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v20;
          v28 = v20 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if ((unint64_t)v28 >= v14 || *v28 != 48)
          continue;
        v21 = v28 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_69:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v21;
          v29 = v21 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 13) |= 0x20u;
        if ((unint64_t)v29 >= v14 || *v29 != 56)
          continue;
        v22 = v29 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_77:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v22;
          v30 = v22 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 13) |= 0x40u;
        if ((unint64_t)v30 >= v14 || *v30 != 64)
          continue;
        v23 = v30 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_85:
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v23;
          v31 = v23 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 13) |= 0x80u;
        if ((unint64_t)v31 >= v14 || *v31 != 72)
          continue;
        v24 = v31 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_93:
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v24;
          v32 = (unsigned __int8 *)(v24 + 1);
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 13) |= 0x100u;
        if (v32 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_69;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_77;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_85;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_93;
      default:
        v13 = TagFallback & 7;
LABEL_28:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[13];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  v6 = v5[13];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  v6 = v5[13];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  v6 = v5[13];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  v6 = v5[13];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  v6 = v5[13];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  v6 = v5[13];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[11], (uint64_t)a2, a4);
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[10], (uint64_t)a2, a4);
  if ((v5[13] & 0x100) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[11], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::ByteSize(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;

  v2 = *((_DWORD *)this + 13);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    if ((v2 & 0x100) == 0)
      goto LABEL_48;
    goto LABEL_44;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 13);
    if ((v2 & 2) == 0)
      goto LABEL_12;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_12;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v5 = 2;
  }
  v3 = (v5 + v3);
LABEL_12:
  if ((v2 & 4) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      v2 = *((_DWORD *)this + 13);
    }
    else
    {
      v7 = 2;
    }
    v3 = (v7 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0)
        goto LABEL_15;
      goto LABEL_28;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v9 = 2;
  }
  v3 = (v9 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0)
      goto LABEL_16;
    goto LABEL_32;
  }
LABEL_28:
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v11 = 2;
  }
  v3 = (v11 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0)
      goto LABEL_17;
    goto LABEL_36;
  }
LABEL_32:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0)
      goto LABEL_18;
    goto LABEL_40;
  }
LABEL_36:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v15 = 2;
  }
  v3 = (v15 + v3);
  if ((v2 & 0x80) == 0)
  {
LABEL_18:
    if ((v2 & 0x100) == 0)
      goto LABEL_48;
    goto LABEL_44;
  }
LABEL_40:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v17 = 2;
  }
  v3 = (v17 + v3);
  if ((v2 & 0x100) != 0)
  {
LABEL_44:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v18 >= 0x80)
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    else
      v19 = 2;
    v3 = (v19 + v3);
  }
LABEL_48:
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void awd::metrics::LocationSecondaryDeviceRequest::CheckTypeAndMergeFrom(awd::metrics::LocationSecondaryDeviceRequest *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationSecondaryDeviceRequest::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationSecondaryDeviceRequest::CopyFrom(awd::metrics::LocationSecondaryDeviceRequest *this, const awd::metrics::LocationSecondaryDeviceRequest *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationSecondaryDeviceRequest *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationSecondaryDeviceRequest::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::IsInitialized(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  return 1;
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::Swap(uint64_t this, awd::metrics::LocationSecondaryDeviceRequest *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::LocationSecondaryDeviceRequest *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationSecondaryDeviceRequest::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationSecondaryDeviceRequest");
}

BOOL awd::metrics::CompassSession_CalibrationLevel_IsValid(awd::metrics *this)
{
  return ((_DWORD)this + 1) < 8;
}

BOOL awd::metrics::CompassSession_CoverState_IsValid(awd::metrics *this)
{
  return this < 3;
}

uint64_t awd::metrics::CompassSession_Rotation::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::CompassSession_Rotation *awd::metrics::CompassSession_Rotation::CompassSession_Rotation(awd::metrics::CompassSession_Rotation *this, const awd::metrics::CompassSession_Rotation *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98E600;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::CompassSession_Rotation::MergeFrom(this, a2);
  return this;
}

void sub_2189DC99C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::CompassSession_Rotation::MergeFrom(awd::metrics::CompassSession_Rotation *this, const awd::metrics::CompassSession_Rotation *a2)
{
  float result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      result = *((float *)a2 + 2);
      *((_DWORD *)this + 6) |= 1u;
      *((float *)this + 2) = result;
      v5 = *((_DWORD *)a2 + 6);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((float *)a2 + 3);
    *((_DWORD *)this + 6) |= 2u;
    *((float *)this + 3) = result;
    if ((*((_DWORD *)a2 + 6) & 4) == 0)
      return result;
LABEL_7:
    result = *((float *)a2 + 4);
    *((_DWORD *)this + 6) |= 4u;
    *((float *)this + 4) = result;
  }
  return result;
}

void sub_2189DCA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::CompassSession_Rotation::~CompassSession_Rotation(awd::metrics::CompassSession_Rotation *this)
{
  *(_QWORD *)this = &off_24D98E600;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E600;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E600;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::CompassSession_Rotation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::CompassSession_Rotation::default_instance(awd::metrics::CompassSession_Rotation *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::CompassSession_Rotation::default_instance_;
  if (!awd::metrics::CompassSession_Rotation::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::CompassSession_Rotation::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::CompassSession_Rotation::New(awd::metrics::CompassSession_Rotation *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98E600;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::CompassSession_Rotation::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream(awd::metrics::CompassSession_Rotation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_27;
        v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v13) & 1) == 0)
          return 0;
        *((_DWORD *)this + 2) = v13;
        *((_DWORD *)this + 6) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 21)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v12) & 1) == 0)
            return 0;
          *((_DWORD *)this + 3) = v12;
          *((_DWORD *)this + 6) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 29)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 5)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_DWORD *)this + 4) = v11;
    *((_DWORD *)this + 6) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t awd::metrics::CompassSession_Rotation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 24);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v4 + 16), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v4 + 12), a3);
  if ((*(_DWORD *)(v4 + 24) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v4 + 16), a3);
  return this;
}

uint64_t awd::metrics::CompassSession_Rotation::ByteSize(awd::metrics::CompassSession_Rotation *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 24);
  if (*((_BYTE *)this + 24))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0)
      v2 += 5;
    if ((v1 & 4) != 0)
      v1 = v2 + 5;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

float awd::metrics::CompassSession_Rotation::CheckTypeAndMergeFrom(awd::metrics::CompassSession_Rotation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::CompassSession_Rotation::MergeFrom(this, lpsrc);
}

float awd::metrics::CompassSession_Rotation::CopyFrom(awd::metrics::CompassSession_Rotation *this, const awd::metrics::CompassSession_Rotation *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::CompassSession_Rotation *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::CompassSession_Rotation::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::CompassSession_Rotation::IsInitialized(awd::metrics::CompassSession_Rotation *this)
{
  return 1;
}

float awd::metrics::CompassSession_Rotation::Swap(awd::metrics::CompassSession_Rotation *this, awd::metrics::CompassSession_Rotation *a2)
{
  int v2;
  int v3;
  float result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    result = *((float *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((float *)a2 + 4) = result;
    v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
    v6 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v6;
  }
  return result;
}

_QWORD *awd::metrics::CompassSession_Rotation::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.CompassSession.Rotation");
}

double awd::metrics::CompassSession::SharedCtor(awd::metrics::CompassSession *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_QWORD *)this + 17) = 0xFFFFFFFF00000000;
  *((_QWORD *)this + 18) = 0;
  *(_QWORD *)((char *)this + 212) = 0;
  *(_QWORD *)((char *)this + 204) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((_BYTE *)this + 200) = 0;
  return result;
}

awd::metrics::CompassSession *awd::metrics::CompassSession::CompassSession(awd::metrics::CompassSession *this, const awd::metrics::CompassSession *a2)
{
  *(_QWORD *)this = &off_24D98E678;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_QWORD *)this + 17) = 0xFFFFFFFF00000000;
  *((_QWORD *)this + 18) = 0;
  *(_QWORD *)((char *)this + 212) = 0;
  *(_QWORD *)((char *)this + 204) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((_BYTE *)this + 200) = 0;
  awd::metrics::CompassSession::MergeFrom(this, a2);
  return this;
}

void sub_2189DD014(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::CompassSession::MergeFrom(awd::metrics::CompassSession *this, const awd::metrics::CompassSession *a2)
{
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  const std::string *v14;
  std::string *v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  const awd::metrics::CompassSession_Rotation *v23;
  uint64_t v24;
  const awd::metrics::CompassSession_Rotation *v25;
  uint64_t v26;
  const awd::metrics::CompassSession_Rotation *v27;
  uint64_t v28;
  const awd::metrics::CompassSession_Rotation *v29;
  uint64_t v30;
  const awd::metrics::CompassSession_Rotation *v31;
  uint64_t v32;
  const awd::metrics::CompassSession_Rotation *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  char v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  _BYTE v52[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
  }
  v4 = *((_DWORD *)a2 + 53);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v13 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 53) |= 1u;
    *((_QWORD *)this + 1) = v13;
    v4 = *((_DWORD *)a2 + 53);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_61;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v14 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 53) |= 2u;
  v15 = (std::string *)*((_QWORD *)this + 2);
  if (v15 == (std::string *)MEMORY[0x24BEDD958])
  {
    v15 = (std::string *)operator new();
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v15;
  }
  std::string::operator=(v15, v14);
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_62;
  }
LABEL_61:
  v16 = *((_QWORD *)a2 + 3);
  *((_DWORD *)this + 53) |= 4u;
  *((_QWORD *)this + 3) = v16;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_63;
  }
LABEL_62:
  v17 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 53) |= 8u;
  *((_DWORD *)this + 8) = v17;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_64:
    v19 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 53) |= 0x20u;
    *((_DWORD *)this + 10) = v19;
    v4 = *((_DWORD *)a2 + 53);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_65;
  }
LABEL_63:
  v18 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 53) |= 0x10u;
  *((_DWORD *)this + 9) = v18;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x20) != 0)
    goto LABEL_64;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_65:
  v20 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 53) |= 0x40u;
  *((_DWORD *)this + 11) = v20;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 53) |= 0x80u;
    *((_DWORD *)this + 12) = v5;
    v4 = *((_DWORD *)a2 + 53);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_23;
  if ((v4 & 0x100) != 0)
  {
    v21 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 53) |= 0x100u;
    *((_DWORD *)this + 13) = v21;
    v4 = *((_DWORD *)a2 + 53);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_73;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  *((_DWORD *)this + 53) |= 0x200u;
  v22 = *((_QWORD *)this + 7);
  if (!v22)
  {
    v22 = operator new();
    *(_QWORD *)(v22 + 8) = 0;
    *(_QWORD *)(v22 + 16) = 0;
    *(_QWORD *)v22 = &off_24D98E600;
    *(_DWORD *)(v22 + 24) = 0;
    *((_QWORD *)this + 7) = v22;
  }
  v23 = (const awd::metrics::CompassSession_Rotation *)*((_QWORD *)a2 + 7);
  if (!v23)
    v23 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 56);
  awd::metrics::CompassSession_Rotation::MergeFrom((awd::metrics::CompassSession_Rotation *)v22, v23);
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_78;
  }
LABEL_73:
  *((_DWORD *)this + 53) |= 0x400u;
  v24 = *((_QWORD *)this + 8);
  if (!v24)
  {
    v24 = operator new();
    *(_QWORD *)(v24 + 8) = 0;
    *(_QWORD *)(v24 + 16) = 0;
    *(_QWORD *)v24 = &off_24D98E600;
    *(_DWORD *)(v24 + 24) = 0;
    *((_QWORD *)this + 8) = v24;
  }
  v25 = (const awd::metrics::CompassSession_Rotation *)*((_QWORD *)a2 + 8);
  if (!v25)
    v25 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 64);
  awd::metrics::CompassSession_Rotation::MergeFrom((awd::metrics::CompassSession_Rotation *)v24, v25);
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_83;
  }
LABEL_78:
  *((_DWORD *)this + 53) |= 0x800u;
  v26 = *((_QWORD *)this + 9);
  if (!v26)
  {
    v26 = operator new();
    *(_QWORD *)(v26 + 8) = 0;
    *(_QWORD *)(v26 + 16) = 0;
    *(_QWORD *)v26 = &off_24D98E600;
    *(_DWORD *)(v26 + 24) = 0;
    *((_QWORD *)this + 9) = v26;
  }
  v27 = (const awd::metrics::CompassSession_Rotation *)*((_QWORD *)a2 + 9);
  if (!v27)
    v27 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 72);
  awd::metrics::CompassSession_Rotation::MergeFrom((awd::metrics::CompassSession_Rotation *)v26, v27);
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_88;
  }
LABEL_83:
  *((_DWORD *)this + 53) |= 0x1000u;
  v28 = *((_QWORD *)this + 10);
  if (!v28)
  {
    v28 = operator new();
    *(_QWORD *)(v28 + 8) = 0;
    *(_QWORD *)(v28 + 16) = 0;
    *(_QWORD *)v28 = &off_24D98E600;
    *(_DWORD *)(v28 + 24) = 0;
    *((_QWORD *)this + 10) = v28;
  }
  v29 = (const awd::metrics::CompassSession_Rotation *)*((_QWORD *)a2 + 10);
  if (!v29)
    v29 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 80);
  awd::metrics::CompassSession_Rotation::MergeFrom((awd::metrics::CompassSession_Rotation *)v28, v29);
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_93;
  }
LABEL_88:
  *((_DWORD *)this + 53) |= 0x2000u;
  v30 = *((_QWORD *)this + 11);
  if (!v30)
  {
    v30 = operator new();
    *(_QWORD *)(v30 + 8) = 0;
    *(_QWORD *)(v30 + 16) = 0;
    *(_QWORD *)v30 = &off_24D98E600;
    *(_DWORD *)(v30 + 24) = 0;
    *((_QWORD *)this + 11) = v30;
  }
  v31 = (const awd::metrics::CompassSession_Rotation *)*((_QWORD *)a2 + 11);
  if (!v31)
    v31 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 88);
  awd::metrics::CompassSession_Rotation::MergeFrom((awd::metrics::CompassSession_Rotation *)v30, v31);
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
LABEL_93:
  *((_DWORD *)this + 53) |= 0x4000u;
  v32 = *((_QWORD *)this + 12);
  if (!v32)
  {
    v32 = operator new();
    *(_QWORD *)(v32 + 8) = 0;
    *(_QWORD *)(v32 + 16) = 0;
    *(_QWORD *)v32 = &off_24D98E600;
    *(_DWORD *)(v32 + 24) = 0;
    *((_QWORD *)this + 12) = v32;
  }
  v33 = (const awd::metrics::CompassSession_Rotation *)*((_QWORD *)a2 + 12);
  if (!v33)
    v33 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 96);
  awd::metrics::CompassSession_Rotation::MergeFrom((awd::metrics::CompassSession_Rotation *)v32, v33);
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    v6 = *((_DWORD *)a2 + 26);
    *((_DWORD *)this + 53) |= 0x8000u;
    *((_DWORD *)this + 26) = v6;
    v4 = *((_DWORD *)a2 + 53);
  }
LABEL_23:
  if ((v4 & 0xFF0000) == 0)
    goto LABEL_33;
  if ((v4 & 0x10000) != 0)
  {
    v34 = *((_DWORD *)a2 + 27);
    *((_DWORD *)this + 53) |= 0x10000u;
    *((_DWORD *)this + 27) = v34;
    v4 = *((_DWORD *)a2 + 53);
    if ((v4 & 0x20000) == 0)
    {
LABEL_26:
      if ((v4 & 0x40000) == 0)
        goto LABEL_27;
      goto LABEL_101;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  v35 = *((_DWORD *)a2 + 28);
  *((_DWORD *)this + 53) |= 0x20000u;
  *((_DWORD *)this + 28) = v35;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x40000) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0)
      goto LABEL_28;
    goto LABEL_102;
  }
LABEL_101:
  v36 = *((_DWORD *)a2 + 29);
  *((_DWORD *)this + 53) |= 0x40000u;
  *((_DWORD *)this + 29) = v36;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x80000) == 0)
  {
LABEL_28:
    if ((v4 & 0x100000) == 0)
      goto LABEL_29;
    goto LABEL_103;
  }
LABEL_102:
  v37 = *((_DWORD *)a2 + 30);
  *((_DWORD *)this + 53) |= 0x80000u;
  *((_DWORD *)this + 30) = v37;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x100000) == 0)
  {
LABEL_29:
    if ((v4 & 0x200000) == 0)
      goto LABEL_30;
    goto LABEL_104;
  }
LABEL_103:
  v38 = *((_DWORD *)a2 + 31);
  *((_DWORD *)this + 53) |= 0x100000u;
  *((_DWORD *)this + 31) = v38;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x200000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000) == 0)
      goto LABEL_31;
    goto LABEL_105;
  }
LABEL_104:
  v39 = *((_DWORD *)a2 + 34);
  *((_DWORD *)this + 53) |= 0x200000u;
  *((_DWORD *)this + 34) = v39;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x400000) == 0)
  {
LABEL_31:
    if ((v4 & 0x800000) == 0)
      goto LABEL_33;
    goto LABEL_32;
  }
LABEL_105:
  v40 = *((_QWORD *)a2 + 16);
  *((_DWORD *)this + 53) |= 0x400000u;
  *((_QWORD *)this + 16) = v40;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x800000) != 0)
  {
LABEL_32:
    v7 = *((_QWORD *)a2 + 18);
    *((_DWORD *)this + 53) |= 0x800000u;
    *((_QWORD *)this + 18) = v7;
    v4 = *((_DWORD *)a2 + 53);
  }
LABEL_33:
  if (!HIBYTE(v4))
    goto LABEL_44;
  if ((v4 & 0x1000000) != 0)
  {
    v8 = *((_DWORD *)a2 + 35);
    if ((v8 + 1) >= 8)
      awd::metrics::CompassSession::MergeFrom();
    *((_DWORD *)this + 53) |= 0x1000000u;
    *((_DWORD *)this + 35) = v8;
    v4 = *((_DWORD *)a2 + 53);
  }
  if ((v4 & 0x2000000) != 0)
  {
    v45 = *((_DWORD *)a2 + 38);
    *((_DWORD *)this + 53) |= 0x2000000u;
    *((_DWORD *)this + 38) = v45;
    v4 = *((_DWORD *)a2 + 53);
    if ((v4 & 0x4000000) == 0)
    {
LABEL_39:
      if ((v4 & 0x8000000) == 0)
        goto LABEL_40;
      goto LABEL_114;
    }
  }
  else if ((v4 & 0x4000000) == 0)
  {
    goto LABEL_39;
  }
  v46 = *((_DWORD *)a2 + 39);
  *((_DWORD *)this + 53) |= 0x4000000u;
  *((_DWORD *)this + 39) = v46;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x10000000) == 0)
      goto LABEL_41;
    goto LABEL_115;
  }
LABEL_114:
  v47 = *((_DWORD *)a2 + 40);
  *((_DWORD *)this + 53) |= 0x8000000u;
  *((_DWORD *)this + 40) = v47;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_41:
    if ((v4 & 0x20000000) == 0)
      goto LABEL_42;
    goto LABEL_116;
  }
LABEL_115:
  v48 = *((_DWORD *)a2 + 41);
  *((_DWORD *)this + 53) |= 0x10000000u;
  *((_DWORD *)this + 41) = v48;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_42:
    if ((v4 & 0x40000000) == 0)
      goto LABEL_43;
LABEL_117:
    v50 = *((_DWORD *)a2 + 43);
    *((_DWORD *)this + 53) |= 0x40000000u;
    *((_DWORD *)this + 43) = v50;
    if ((*((_DWORD *)a2 + 53) & 0x80000000) == 0)
      goto LABEL_44;
    goto LABEL_118;
  }
LABEL_116:
  v49 = *((_DWORD *)a2 + 42);
  *((_DWORD *)this + 53) |= 0x20000000u;
  *((_DWORD *)this + 42) = v49;
  v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x40000000) != 0)
    goto LABEL_117;
LABEL_43:
  if ((v4 & 0x80000000) == 0)
    goto LABEL_44;
LABEL_118:
  v51 = *((_DWORD *)a2 + 44);
  *((_DWORD *)this + 53) |= 0x80000000;
  *((_DWORD *)this + 44) = v51;
LABEL_44:
  LOBYTE(v9) = *((_BYTE *)a2 + 216);
  if (!(_BYTE)v9)
    return;
  if ((*((_BYTE *)a2 + 216) & 1) != 0)
  {
    v10 = *((_DWORD *)a2 + 45);
    *((_DWORD *)this + 54) |= 1u;
    *((_DWORD *)this + 45) = v10;
    v9 = *((_DWORD *)a2 + 54);
  }
  if ((v9 & 2) != 0)
  {
    v11 = *((_DWORD *)a2 + 46);
    if (v11 >= 3)
      awd::metrics::CompassSession::MergeFrom();
    *((_DWORD *)this + 54) |= 2u;
    *((_DWORD *)this + 46) = v11;
    v9 = *((_DWORD *)a2 + 54);
  }
  if ((v9 & 4) != 0)
  {
    v41 = *((_DWORD *)a2 + 47);
    *((_DWORD *)this + 54) |= 4u;
    *((_DWORD *)this + 47) = v41;
    v9 = *((_DWORD *)a2 + 54);
    if ((v9 & 8) == 0)
    {
LABEL_52:
      if ((v9 & 0x10) == 0)
        goto LABEL_53;
      goto LABEL_109;
    }
  }
  else if ((v9 & 8) == 0)
  {
    goto LABEL_52;
  }
  v42 = *((_DWORD *)a2 + 48);
  *((_DWORD *)this + 54) |= 8u;
  *((_DWORD *)this + 48) = v42;
  v9 = *((_DWORD *)a2 + 54);
  if ((v9 & 0x10) == 0)
  {
LABEL_53:
    if ((v9 & 0x20) == 0)
      goto LABEL_54;
    goto LABEL_110;
  }
LABEL_109:
  v43 = *((_DWORD *)a2 + 49);
  *((_DWORD *)this + 54) |= 0x10u;
  *((_DWORD *)this + 49) = v43;
  v9 = *((_DWORD *)a2 + 54);
  if ((v9 & 0x20) == 0)
  {
LABEL_54:
    if ((v9 & 0x40) == 0)
      return;
    goto LABEL_55;
  }
LABEL_110:
  v44 = *((_BYTE *)a2 + 200);
  *((_DWORD *)this + 54) |= 0x20u;
  *((_BYTE *)this + 200) = v44;
  if ((*((_DWORD *)a2 + 54) & 0x40) != 0)
  {
LABEL_55:
    v12 = *((_DWORD *)a2 + 51);
    *((_DWORD *)this + 54) |= 0x40u;
    *((_DWORD *)this + 51) = v12;
  }
}

void sub_2189DD79C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::CompassSession::~CompassSession(awd::metrics::CompassSession *this)
{
  *(_QWORD *)this = &off_24D98E678;
  awd::metrics::CompassSession::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E678;
  awd::metrics::CompassSession::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E678;
  awd::metrics::CompassSession::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::CompassSession::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = this;
  v2 = this[2];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  if ((_QWORD *)awd::metrics::CompassSession::default_instance_ != v1)
  {
    v4 = v1[7];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = v1[8];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = v1[9];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = v1[10];
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = v1[11];
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    this = (_QWORD *)v1[12];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::CompassSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 208) = a2;
  return this;
}

uint64_t awd::metrics::CompassSession::default_instance(awd::metrics::CompassSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::CompassSession::default_instance_;
  if (!awd::metrics::CompassSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::CompassSession::default_instance_;
  }
  return result;
}

double awd::metrics::CompassSession::New(awd::metrics::CompassSession *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98E678;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEDD958];
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_QWORD *)(v1 + 136) = 0xFFFFFFFF00000000;
  *(_QWORD *)(v1 + 144) = 0;
  *(_QWORD *)(v1 + 212) = 0;
  *(_QWORD *)(v1 + 204) = 0;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_BYTE *)(v1 + 200) = 0;
  return result;
}

uint64_t awd::metrics::CompassSession::Clear(uint64_t this)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_DWORD *)(this + 212);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_DWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 40) = 0;
    v1 = *(_DWORD *)(this + 212);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 52) = 0;
    if ((v1 & 0x200) != 0)
    {
      v3 = *(_QWORD *)(this + 56);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v1 = *(_DWORD *)(this + 212);
      }
    }
    if ((v1 & 0x400) != 0)
    {
      v4 = *(_QWORD *)(this + 64);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 24))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        v1 = *(_DWORD *)(this + 212);
      }
    }
    if ((v1 & 0x800) != 0)
    {
      v5 = *(_QWORD *)(this + 72);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 24))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_DWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        v1 = *(_DWORD *)(this + 212);
      }
    }
    if ((v1 & 0x1000) != 0)
    {
      v6 = *(_QWORD *)(this + 80);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 24))
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_DWORD *)(v6 + 16) = 0;
        }
        *(_DWORD *)(v6 + 24) = 0;
        v1 = *(_DWORD *)(this + 212);
      }
    }
    if ((v1 & 0x2000) != 0)
    {
      v7 = *(_QWORD *)(this + 88);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 24))
        {
          *(_QWORD *)(v7 + 8) = 0;
          *(_DWORD *)(v7 + 16) = 0;
        }
        *(_DWORD *)(v7 + 24) = 0;
        v1 = *(_DWORD *)(this + 212);
      }
    }
    if ((v1 & 0x4000) != 0)
    {
      v8 = *(_QWORD *)(this + 96);
      if (v8)
      {
        if (*(_BYTE *)(v8 + 24))
        {
          *(_QWORD *)(v8 + 8) = 0;
          *(_DWORD *)(v8 + 16) = 0;
        }
        *(_DWORD *)(v8 + 24) = 0;
        v1 = *(_DWORD *)(this + 212);
      }
    }
    *(_DWORD *)(this + 104) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_QWORD *)(this + 144) = 0;
    *(_OWORD *)(this + 108) = 0u;
    *(_OWORD *)(this + 124) = 0u;
  }
  if (HIBYTE(v1))
  {
    *(_DWORD *)(this + 140) = -1;
    *(_QWORD *)(this + 160) = 0;
    *(_QWORD *)(this + 168) = 0;
    *(_QWORD *)(this + 152) = 0;
    *(_DWORD *)(this + 176) = 0;
  }
  if (*(_BYTE *)(this + 216))
  {
    *(_DWORD *)(this + 204) = 0;
    *(_QWORD *)(this + 188) = 0;
    *(_QWORD *)(this + 180) = 0;
    *(_QWORD *)(this + 193) = 0;
  }
  *(_QWORD *)(this + 212) = 0;
  return this;
}

uint64_t awd::metrics::CompassSession::MergePartialFromCodedStream(awd::metrics::CompassSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;
  unint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  int v24;
  unint64_t v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  char *v28;
  unint64_t v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  unint64_t v37;
  unsigned __int8 *v38;
  char *v39;
  unsigned int v40;
  unint64_t v41;
  unsigned __int8 *v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  unsigned __int8 *v45;
  uint64_t result;
  unsigned __int8 *v47;
  unsigned int v48;
  unsigned __int8 *v49;
  unsigned __int8 *v50;
  unsigned __int8 *v51;
  unsigned int v52;
  unsigned __int8 *v53;
  _BYTE *v54;
  unsigned int v55;
  _BYTE *v56;
  unsigned int v57;
  _BYTE *v58;
  _QWORD *v59;
  _BYTE *v60;
  unsigned int v61;
  _BYTE *v62;
  unsigned int v63;
  _BYTE *v64;
  unsigned int v65;
  _BYTE *v66;
  unsigned int v67;
  _BYTE *v68;
  uint64_t v69;
  char *v70;
  int v71;
  int v72;
  int v73;
  BOOL v74;
  int v75;
  _BYTE *v76;
  uint64_t v77;
  char *v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned __int8 *v83;
  uint64_t v84;
  char *v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned __int8 *v90;
  uint64_t v91;
  char *v92;
  int v93;
  int v94;
  int v95;
  int v96;
  unsigned __int8 *v97;
  uint64_t v98;
  char *v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned __int8 *v104;
  uint64_t v105;
  char *v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned __int8 *v111;
  unsigned __int8 *v112;
  unsigned __int8 *v113;
  unsigned __int8 *v114;
  unsigned __int8 *v115;
  unsigned __int8 *v116;
  unsigned __int8 *v117;
  unsigned __int8 *v118;
  unsigned __int8 *v119;
  unsigned __int8 *v120;
  unsigned int v121;
  unsigned __int8 *v122;
  unsigned __int8 *v123;
  unsigned __int8 *v124;
  unsigned __int8 *v125;
  unsigned __int8 *v126;
  unsigned __int8 *v127;
  unsigned __int8 *v128;
  unsigned __int8 *v129;
  unint64_t *v130;
  unsigned int *v131;
  unsigned int *v132;
  unsigned int *v133;
  unsigned int *v134;
  unsigned int *v135;
  unsigned int *v136;
  unint64_t *v137;
  unsigned int v138;

  v4 = (unint64_t *)((char *)this + 24);
  v5 = (unint64_t *)((char *)this + 128);
  v136 = (unsigned int *)((char *)this + 152);
  v137 = (unint64_t *)((char *)this + 144);
  v134 = (unsigned int *)((char *)this + 160);
  v135 = (unsigned int *)((char *)this + 156);
  v132 = (unsigned int *)((char *)this + 168);
  v133 = (unsigned int *)((char *)this + 164);
  v130 = (unint64_t *)((char *)this + 8);
  v131 = (unsigned int *)((char *)this + 172);
  v6 = (unsigned int *)((char *)this + 176);
  v7 = (unsigned int *)((char *)this + 192);
  v8 = (unsigned int *)((char *)this + 196);
  while (2)
  {
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v130);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v130 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 53) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)a2 + 1) = v15;
          goto LABEL_152;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
LABEL_152:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v54 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v15;
          v54 = v15 + 1;
          *((_QWORD *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 53) |= 4u;
        if ((unint64_t)v54 >= v12 || *v54 != 56)
          continue;
        v16 = v54 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_160:
        v138 = 0;
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138);
          if (!(_DWORD)result)
            return result;
          v55 = v138;
          v56 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v55 = *v16;
          v56 = v16 + 1;
          *((_QWORD *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 8) = v55;
        *((_DWORD *)this + 53) |= 8u;
        if ((unint64_t)v56 >= v12 || *v56 != 64)
          continue;
        v17 = v56 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_168:
        v138 = 0;
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138);
          if (!(_DWORD)result)
            return result;
          v57 = v138;
          v58 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v57 = *v17;
          v58 = v17 + 1;
          *((_QWORD *)a2 + 1) = v58;
        }
        *((_DWORD *)this + 10) = v57;
        v18 = *((_DWORD *)this + 53) | 0x20;
        *((_DWORD *)this + 53) = v18;
        if ((unint64_t)v58 >= v12 || *v58 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v58 + 1;
LABEL_176:
        *((_DWORD *)this + 53) = v18 | 2;
        if (*((_QWORD *)this + 2) == MEMORY[0x24BEDD958])
        {
          v59 = (_QWORD *)operator new();
          v59[1] = 0;
          v59[2] = 0;
          *v59 = 0;
          *((_QWORD *)this + 2) = v59;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v60 = (_BYTE *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v60 >= v19 || *v60 != 80)
          continue;
        v20 = v60 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_182:
        v138 = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138);
          if (!(_DWORD)result)
            return result;
          v61 = v138;
          v62 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v61 = *v20;
          v62 = v20 + 1;
          *((_QWORD *)a2 + 1) = v62;
        }
        *((_DWORD *)this + 9) = v61;
        *((_DWORD *)this + 53) |= 0x10u;
        if ((unint64_t)v62 >= v19 || *v62 != 88)
          continue;
        v21 = v62 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_190:
        v138 = 0;
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138);
          if (!(_DWORD)result)
            return result;
          v63 = v138;
          v64 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v63 = *v21;
          v64 = v21 + 1;
          *((_QWORD *)a2 + 1) = v64;
        }
        *((_DWORD *)this + 11) = v63;
        *((_DWORD *)this + 53) |= 0x40u;
        if ((unint64_t)v64 >= v19 || *v64 != 96)
          continue;
        v22 = v64 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_198:
        v138 = 0;
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138);
          if (!(_DWORD)result)
            return result;
          v65 = v138;
          v66 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v65 = *v22;
          v66 = v22 + 1;
          *((_QWORD *)a2 + 1) = v66;
        }
        *((_DWORD *)this + 12) = v65;
        *((_DWORD *)this + 53) |= 0x80u;
        if ((unint64_t)v66 >= v19 || *v66 != 104)
          continue;
        v23 = v66 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_206:
        v138 = 0;
        if ((unint64_t)v23 >= v19 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138);
          if (!(_DWORD)result)
            return result;
          v67 = v138;
          v68 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v67 = *v23;
          v68 = v23 + 1;
          *((_QWORD *)a2 + 1) = v68;
        }
        *((_DWORD *)this + 13) = v67;
        v24 = *((_DWORD *)this + 53) | 0x100;
        *((_DWORD *)this + 53) = v24;
        if ((unint64_t)v68 >= v19 || *v68 != 114)
          continue;
        *((_QWORD *)a2 + 1) = v68 + 1;
LABEL_214:
        *((_DWORD *)this + 53) = v24 | 0x200;
        v69 = *((_QWORD *)this + 7);
        if (!v69)
        {
          v69 = operator new();
          *(_QWORD *)(v69 + 8) = 0;
          *(_QWORD *)(v69 + 16) = 0;
          *(_QWORD *)v69 = &off_24D98E600;
          *(_DWORD *)(v69 + 24) = 0;
          *((_QWORD *)this + 7) = v69;
        }
        v138 = 0;
        v70 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v70 >= *((_QWORD *)a2 + 2) || *v70 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
        }
        else
        {
          v138 = *v70;
          *((_QWORD *)a2 + 1) = v70 + 1;
        }
        v71 = *((_DWORD *)a2 + 14);
        v72 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v71 + 1;
        if (v71 >= v72)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream((awd::metrics::CompassSession_Rotation *)v69, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v73 = *((_DWORD *)a2 + 14);
        v74 = __OFSUB__(v73, 1);
        v75 = v73 - 1;
        if (v75 < 0 == v74)
          *((_DWORD *)a2 + 14) = v75;
        v76 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v76 >= *((_QWORD *)a2 + 2) || *v76 != 122)
          continue;
        *((_QWORD *)a2 + 1) = v76 + 1;
LABEL_228:
        *((_DWORD *)this + 53) |= 0x400u;
        v77 = *((_QWORD *)this + 8);
        if (!v77)
        {
          v77 = operator new();
          *(_QWORD *)(v77 + 8) = 0;
          *(_QWORD *)(v77 + 16) = 0;
          *(_QWORD *)v77 = &off_24D98E600;
          *(_DWORD *)(v77 + 24) = 0;
          *((_QWORD *)this + 8) = v77;
        }
        v138 = 0;
        v78 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v78 >= *((_QWORD *)a2 + 2) || *v78 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
        }
        else
        {
          v138 = *v78;
          *((_QWORD *)a2 + 1) = v78 + 1;
        }
        v79 = *((_DWORD *)a2 + 14);
        v80 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v79 + 1;
        if (v79 >= v80)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream((awd::metrics::CompassSession_Rotation *)v77, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v81 = *((_DWORD *)a2 + 14);
        v74 = __OFSUB__(v81, 1);
        v82 = v81 - 1;
        if (v82 < 0 == v74)
          *((_DWORD *)a2 + 14) = v82;
        v83 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v83 <= 1 || *v83 != 130 || v83[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v83 + 2;
LABEL_243:
        *((_DWORD *)this + 53) |= 0x800u;
        v84 = *((_QWORD *)this + 9);
        if (!v84)
        {
          v84 = operator new();
          *(_QWORD *)(v84 + 8) = 0;
          *(_QWORD *)(v84 + 16) = 0;
          *(_QWORD *)v84 = &off_24D98E600;
          *(_DWORD *)(v84 + 24) = 0;
          *((_QWORD *)this + 9) = v84;
        }
        v138 = 0;
        v85 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v85 >= *((_QWORD *)a2 + 2) || *v85 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
        }
        else
        {
          v138 = *v85;
          *((_QWORD *)a2 + 1) = v85 + 1;
        }
        v86 = *((_DWORD *)a2 + 14);
        v87 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v86 + 1;
        if (v86 >= v87)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream((awd::metrics::CompassSession_Rotation *)v84, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v88 = *((_DWORD *)a2 + 14);
        v74 = __OFSUB__(v88, 1);
        v89 = v88 - 1;
        if (v89 < 0 == v74)
          *((_DWORD *)a2 + 14) = v89;
        v90 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v90 <= 1 || *v90 != 138 || v90[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v90 + 2;
LABEL_258:
        *((_DWORD *)this + 53) |= 0x1000u;
        v91 = *((_QWORD *)this + 10);
        if (!v91)
        {
          v91 = operator new();
          *(_QWORD *)(v91 + 8) = 0;
          *(_QWORD *)(v91 + 16) = 0;
          *(_QWORD *)v91 = &off_24D98E600;
          *(_DWORD *)(v91 + 24) = 0;
          *((_QWORD *)this + 10) = v91;
        }
        v138 = 0;
        v92 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v92 >= *((_QWORD *)a2 + 2) || *v92 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
        }
        else
        {
          v138 = *v92;
          *((_QWORD *)a2 + 1) = v92 + 1;
        }
        v93 = *((_DWORD *)a2 + 14);
        v94 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v93 + 1;
        if (v93 >= v94)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream((awd::metrics::CompassSession_Rotation *)v91, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v95 = *((_DWORD *)a2 + 14);
        v74 = __OFSUB__(v95, 1);
        v96 = v95 - 1;
        if (v96 < 0 == v74)
          *((_DWORD *)a2 + 14) = v96;
        v97 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v97 <= 1 || *v97 != 146 || v97[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v97 + 2;
LABEL_273:
        *((_DWORD *)this + 53) |= 0x2000u;
        v98 = *((_QWORD *)this + 11);
        if (!v98)
        {
          v98 = operator new();
          *(_QWORD *)(v98 + 8) = 0;
          *(_QWORD *)(v98 + 16) = 0;
          *(_QWORD *)v98 = &off_24D98E600;
          *(_DWORD *)(v98 + 24) = 0;
          *((_QWORD *)this + 11) = v98;
        }
        v138 = 0;
        v99 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v99 >= *((_QWORD *)a2 + 2) || *v99 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
        }
        else
        {
          v138 = *v99;
          *((_QWORD *)a2 + 1) = v99 + 1;
        }
        v100 = *((_DWORD *)a2 + 14);
        v101 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v100 + 1;
        if (v100 >= v101)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream((awd::metrics::CompassSession_Rotation *)v98, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v102 = *((_DWORD *)a2 + 14);
        v74 = __OFSUB__(v102, 1);
        v103 = v102 - 1;
        if (v103 < 0 == v74)
          *((_DWORD *)a2 + 14) = v103;
        v104 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v104 <= 1 || *v104 != 154 || v104[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v104 + 2;
LABEL_288:
        *((_DWORD *)this + 53) |= 0x4000u;
        v105 = *((_QWORD *)this + 12);
        if (!v105)
        {
          v105 = operator new();
          *(_QWORD *)(v105 + 8) = 0;
          *(_QWORD *)(v105 + 16) = 0;
          *(_QWORD *)v105 = &off_24D98E600;
          *(_DWORD *)(v105 + 24) = 0;
          *((_QWORD *)this + 12) = v105;
        }
        v138 = 0;
        v106 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v106 >= *((_QWORD *)a2 + 2) || *v106 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
        }
        else
        {
          v138 = *v106;
          *((_QWORD *)a2 + 1) = v106 + 1;
        }
        v107 = *((_DWORD *)a2 + 14);
        v108 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v107 + 1;
        if (v107 >= v108)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream((awd::metrics::CompassSession_Rotation *)v105, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v109 = *((_DWORD *)a2 + 14);
        v74 = __OFSUB__(v109, 1);
        v110 = v109 - 1;
        if (v110 < 0 == v74)
          *((_DWORD *)a2 + 14) = v110;
        v111 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v111 <= 1 || *v111 != 165 || v111[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v111 + 2;
LABEL_303:
        v138 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v138) & 1) == 0)
          return 0;
        *((_DWORD *)this + 26) = v138;
        *((_DWORD *)this + 53) |= 0x8000u;
        v112 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v112 < 2 || *v112 != 173 || v112[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v112 + 2;
LABEL_308:
        v138 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v138) & 1) == 0)
          return 0;
        *((_DWORD *)this + 27) = v138;
        *((_DWORD *)this + 53) |= 0x10000u;
        v113 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v113 < 2 || *v113 != 181 || v113[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v113 + 2;
LABEL_313:
        v138 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v138) & 1) == 0)
          return 0;
        *((_DWORD *)this + 28) = v138;
        *((_DWORD *)this + 53) |= 0x20000u;
        v114 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v114 < 2 || *v114 != 189 || v114[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v114 + 2;
LABEL_318:
        v138 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v138) & 1) == 0)
          return 0;
        *((_DWORD *)this + 29) = v138;
        *((_DWORD *)this + 53) |= 0x40000u;
        v115 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v115 < 2 || *v115 != 197 || v115[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v115 + 2;
LABEL_323:
        v138 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v138) & 1) == 0)
          return 0;
        *((_DWORD *)this + 30) = v138;
        *((_DWORD *)this + 53) |= 0x80000u;
        v116 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v116 < 2 || *v116 != 205 || v116[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v116 + 2;
LABEL_328:
        v138 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v138) & 1) == 0)
          return 0;
        *((_DWORD *)this + 31) = v138;
        *((_DWORD *)this + 53) |= 0x100000u;
        v117 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v117 < 2 || *v117 != 213 || v117[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v117 + 2;
LABEL_333:
        v138 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v138) & 1) == 0)
          return 0;
        *((_DWORD *)this + 34) = v138;
        *((_DWORD *)this + 53) |= 0x200000u;
        v118 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        if ((int)v25 - (int)v118 < 2 || *v118 != 216 || v118[1] != 1)
          continue;
        v26 = v118 + 2;
        *((_QWORD *)a2 + 1) = v26;
LABEL_338:
        if ((unint64_t)v26 >= v25 || (char)*v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v119 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v25 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v26;
          v119 = v26 + 1;
          *((_QWORD *)a2 + 1) = v119;
        }
        *((_DWORD *)this + 53) |= 0x400000u;
        if ((int)v25 - (int)v119 < 2 || *v119 != 224 || v119[1] != 1)
          continue;
        v27 = v119 + 2;
        *((_QWORD *)a2 + 1) = v27;
LABEL_347:
        if ((unint64_t)v27 >= v25 || (char)*v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v137);
          if (!(_DWORD)result)
            return result;
          v120 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v25 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v137 = *v27;
          v120 = v27 + 1;
          *((_QWORD *)a2 + 1) = v120;
        }
        *((_DWORD *)this + 53) |= 0x800000u;
        if ((int)v25 - (int)v120 < 2 || *v120 != 232 || v120[1] != 1)
          continue;
        v28 = (char *)(v120 + 2);
        *((_QWORD *)a2 + 1) = v28;
LABEL_356:
        v138 = 0;
        if ((unint64_t)v28 >= v25 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138);
          if (!(_DWORD)result)
            return result;
          v121 = v138;
        }
        else
        {
          v121 = *v28;
          *((_QWORD *)a2 + 1) = v28 + 1;
        }
        if (v121 + 1 <= 7)
        {
          *((_DWORD *)this + 53) |= 0x1000000u;
          *((_DWORD *)this + 35) = v121;
        }
        v122 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        if ((int)v29 - (int)v122 < 2 || *v122 != 240 || v122[1] != 1)
          continue;
        v30 = v122 + 2;
        *((_QWORD *)a2 + 1) = v30;
LABEL_367:
        if ((unint64_t)v30 >= v29 || (char)*v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v136);
          if (!(_DWORD)result)
            return result;
          v123 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v29 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v136 = *v30;
          v123 = v30 + 1;
          *((_QWORD *)a2 + 1) = v123;
        }
        *((_DWORD *)this + 53) |= 0x2000000u;
        if ((int)v29 - (int)v123 < 2 || *v123 != 248 || v123[1] != 1)
          continue;
        v31 = v123 + 2;
        *((_QWORD *)a2 + 1) = v31;
LABEL_376:
        if ((unint64_t)v31 >= v29 || (char)*v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v135);
          if (!(_DWORD)result)
            return result;
          v124 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v29 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v135 = *v31;
          v124 = v31 + 1;
          *((_QWORD *)a2 + 1) = v124;
        }
        *((_DWORD *)this + 53) |= 0x4000000u;
        if ((int)v29 - (int)v124 < 2 || *v124 != 128 || v124[1] != 2)
          continue;
        v32 = v124 + 2;
        *((_QWORD *)a2 + 1) = v32;
LABEL_385:
        if ((unint64_t)v32 >= v29 || (char)*v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v134);
          if (!(_DWORD)result)
            return result;
          v125 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v29 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v134 = *v32;
          v125 = v32 + 1;
          *((_QWORD *)a2 + 1) = v125;
        }
        *((_DWORD *)this + 53) |= 0x8000000u;
        if ((int)v29 - (int)v125 < 2 || *v125 != 136 || v125[1] != 2)
          continue;
        v33 = v125 + 2;
        *((_QWORD *)a2 + 1) = v33;
LABEL_394:
        if ((unint64_t)v33 >= v29 || (char)*v33 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v133);
          if (!(_DWORD)result)
            return result;
          v126 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v29 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v133 = *v33;
          v126 = v33 + 1;
          *((_QWORD *)a2 + 1) = v126;
        }
        *((_DWORD *)this + 53) |= 0x10000000u;
        if ((int)v29 - (int)v126 < 2 || *v126 != 144 || v126[1] != 2)
          continue;
        v34 = v126 + 2;
        *((_QWORD *)a2 + 1) = v34;
LABEL_403:
        if ((unint64_t)v34 >= v29 || (char)*v34 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v132);
          if (!(_DWORD)result)
            return result;
          v127 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v29 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v132 = *v34;
          v127 = v34 + 1;
          *((_QWORD *)a2 + 1) = v127;
        }
        *((_DWORD *)this + 53) |= 0x20000000u;
        if ((int)v29 - (int)v127 < 2 || *v127 != 152 || v127[1] != 2)
          continue;
        v35 = v127 + 2;
        *((_QWORD *)a2 + 1) = v35;
LABEL_412:
        if ((unint64_t)v35 >= v29 || (char)*v35 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v131);
          if (!(_DWORD)result)
            return result;
          v128 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v29 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v131 = *v35;
          v128 = v35 + 1;
          *((_QWORD *)a2 + 1) = v128;
        }
        *((_DWORD *)this + 53) |= 0x40000000u;
        if ((int)v29 - (int)v128 < 2 || *v128 != 160 || v128[1] != 2)
          continue;
        v36 = v128 + 2;
        *((_QWORD *)a2 + 1) = v36;
LABEL_421:
        if ((unint64_t)v36 >= v29 || (char)*v36 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v129 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v29 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v36;
          v129 = v36 + 1;
          *((_QWORD *)a2 + 1) = v129;
        }
        *((_DWORD *)this + 53) |= 0x80000000;
        if ((int)v29 - (int)v129 < 2 || *v129 != 173 || v129[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v129 + 2;
LABEL_76:
        v138 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v138) & 1) == 0)
          return 0;
        *((_DWORD *)this + 45) = v138;
        *((_DWORD *)this + 54) |= 1u;
        v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v37 = *((_QWORD *)a2 + 2);
        if ((int)v37 - (int)v38 < 2 || *v38 != 176 || v38[1] != 2)
          continue;
        v39 = (char *)(v38 + 2);
        *((_QWORD *)a2 + 1) = v39;
LABEL_83:
        v138 = 0;
        if ((unint64_t)v39 >= v37 || *v39 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138);
          if (!(_DWORD)result)
            return result;
          v40 = v138;
        }
        else
        {
          v40 = *v39;
          *((_QWORD *)a2 + 1) = v39 + 1;
        }
        if (v40 <= 2)
        {
          *((_DWORD *)this + 54) |= 2u;
          *((_DWORD *)this + 46) = v40;
        }
        v47 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v41 = *((_QWORD *)a2 + 2);
        if ((int)v41 - (int)v47 < 2 || *v47 != 184 || v47[1] != 2)
          continue;
        v42 = v47 + 2;
        *((_QWORD *)a2 + 1) = v42;
LABEL_111:
        v138 = 0;
        if ((unint64_t)v42 >= v41 || (char)*v42 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138);
          if (!(_DWORD)result)
            return result;
          v48 = v138;
          v49 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v41 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v48 = *v42;
          v49 = v42 + 1;
          *((_QWORD *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 47) = v48;
        *((_DWORD *)this + 54) |= 4u;
        if ((int)v41 - (int)v49 < 2 || *v49 != 192 || v49[1] != 2)
          continue;
        v43 = v49 + 2;
        *((_QWORD *)a2 + 1) = v43;
LABEL_120:
        if ((unint64_t)v43 >= v41 || (char)*v43 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v50 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v41 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v43;
          v50 = v43 + 1;
          *((_QWORD *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 54) |= 8u;
        if ((int)v41 - (int)v50 < 2 || *v50 != 200 || v50[1] != 2)
          continue;
        v44 = v50 + 2;
        *((_QWORD *)a2 + 1) = v44;
LABEL_129:
        if ((unint64_t)v44 >= v41 || (char)*v44 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v51 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v41 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v44;
          v51 = v44 + 1;
          *((_QWORD *)a2 + 1) = v51;
        }
        *((_DWORD *)this + 54) |= 0x10u;
        if ((int)v41 - (int)v51 < 2 || *v51 != 208 || v51[1] != 2)
          continue;
        v45 = v51 + 2;
        *((_QWORD *)a2 + 1) = v45;
LABEL_138:
        v138 = 0;
        if ((unint64_t)v45 >= v41 || (char)*v45 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138);
          if (!(_DWORD)result)
            return result;
          v52 = v138;
          v53 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v41 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v52 = *v45;
          v53 = v45 + 1;
          *((_QWORD *)a2 + 1) = v53;
        }
        *((_BYTE *)this + 200) = v52 != 0;
        *((_DWORD *)this + 54) |= 0x20u;
        if ((int)v41 - (int)v53 < 2 || *v53 != 221 || v53[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v53 + 2;
LABEL_95:
        v138 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v138) & 1) != 0)
        {
          *((_DWORD *)this + 51) = v138;
          *((_DWORD *)this + 54) |= 0x40u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_160;
      case 8u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_168;
      case 9u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_100;
        v18 = *((_DWORD *)this + 53);
        goto LABEL_176;
      case 0xAu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_182;
      case 0xBu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_190;
      case 0xCu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_198;
      case 0xDu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_206;
      case 0xEu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_100;
        v24 = *((_DWORD *)this + 53);
        goto LABEL_214;
      case 0xFu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_228;
        goto LABEL_100;
      case 0x10u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_243;
        goto LABEL_100;
      case 0x11u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_258;
        goto LABEL_100;
      case 0x12u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_273;
        goto LABEL_100;
      case 0x13u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_288;
        goto LABEL_100;
      case 0x14u:
        v11 = TagFallback & 7;
        if (v11 == 5)
          goto LABEL_303;
        goto LABEL_100;
      case 0x15u:
        v11 = TagFallback & 7;
        if (v11 == 5)
          goto LABEL_308;
        goto LABEL_100;
      case 0x16u:
        v11 = TagFallback & 7;
        if (v11 == 5)
          goto LABEL_313;
        goto LABEL_100;
      case 0x17u:
        v11 = TagFallback & 7;
        if (v11 == 5)
          goto LABEL_318;
        goto LABEL_100;
      case 0x18u:
        v11 = TagFallback & 7;
        if (v11 == 5)
          goto LABEL_323;
        goto LABEL_100;
      case 0x19u:
        v11 = TagFallback & 7;
        if (v11 == 5)
          goto LABEL_328;
        goto LABEL_100;
      case 0x1Au:
        v11 = TagFallback & 7;
        if (v11 == 5)
          goto LABEL_333;
        goto LABEL_100;
      case 0x1Bu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v26 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_338;
      case 0x1Cu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_347;
      case 0x1Du:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v28 = (char *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_356;
      case 0x1Eu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        goto LABEL_367;
      case 0x1Fu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        goto LABEL_376;
      case 0x20u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        goto LABEL_385;
      case 0x21u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v33 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        goto LABEL_394;
      case 0x22u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v34 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        goto LABEL_403;
      case 0x23u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v35 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        goto LABEL_412;
      case 0x24u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v36 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        goto LABEL_421;
      case 0x25u:
        v11 = TagFallback & 7;
        if (v11 == 5)
          goto LABEL_76;
        goto LABEL_100;
      case 0x26u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v39 = (char *)*((_QWORD *)a2 + 1);
        v37 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      case 0x27u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v41 = *((_QWORD *)a2 + 2);
        goto LABEL_111;
      case 0x28u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v43 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v41 = *((_QWORD *)a2 + 2);
        goto LABEL_120;
      case 0x29u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v44 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v41 = *((_QWORD *)a2 + 2);
        goto LABEL_129;
      case 0x2Au:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_100;
        v45 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v41 = *((_QWORD *)a2 + 2);
        goto LABEL_138;
      case 0x2Bu:
        v11 = TagFallback & 7;
        if (v11 == 5)
          goto LABEL_95;
        goto LABEL_100;
      default:
        v11 = TagFallback & 7;
LABEL_100:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::CompassSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = this;
  v6 = *(_DWORD *)(this + 212);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 212);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0)
        goto LABEL_4;
      goto LABEL_43;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0)
      goto LABEL_5;
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 2) == 0)
      goto LABEL_6;
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 2) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x10) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_48;
  }
LABEL_47:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_49;
  }
LABEL_48:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_53;
  }
LABEL_50:
  v8 = *(_QWORD *)(v5 + 56);
  if (!v8)
    v8 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 56);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_56;
  }
LABEL_53:
  v9 = *(_QWORD *)(v5 + 64);
  if (!v9)
    v9 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 64);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_59;
  }
LABEL_56:
  v10 = *(_QWORD *)(v5 + 72);
  if (!v10)
    v10 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 72);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_62;
  }
LABEL_59:
  v11 = *(_QWORD *)(v5 + 80);
  if (!v11)
    v11 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 80);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_65;
  }
LABEL_62:
  v12 = *(_QWORD *)(v5 + 88);
  if (!v12)
    v12 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 88);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_68;
  }
LABEL_65:
  v13 = *(_QWORD *)(v5 + 96);
  if (!v13)
    v13 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 96);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_69;
  }
LABEL_68:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(float *)(v5 + 104), a3);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_70;
  }
LABEL_69:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *(float *)(v5 + 108), a3);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_71;
  }
LABEL_70:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (uint64_t)a2, *(float *)(v5 + 112), a3);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_72;
  }
LABEL_71:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (uint64_t)a2, *(float *)(v5 + 116), a3);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_73;
  }
LABEL_72:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, (uint64_t)a2, *(float *)(v5 + 120), a3);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_74;
  }
LABEL_73:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (uint64_t)a2, *(float *)(v5 + 124), a3);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_75;
  }
LABEL_74:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(float *)(v5 + 136), a3);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_76;
  }
LABEL_75:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, *(_QWORD *)(v5 + 128), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_77;
  }
LABEL_76:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(_QWORD *)(v5 + 144), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_78;
  }
LABEL_77:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned int *)(v5 + 140), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_79;
  }
LABEL_78:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned int *)(v5 + 152), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_80;
  }
LABEL_79:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned int *)(v5 + 156), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_81;
  }
LABEL_80:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned int *)(v5 + 160), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_82;
  }
LABEL_81:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, *(unsigned int *)(v5 + 164), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_32;
LABEL_83:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned int *)(v5 + 172), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 212) & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_84;
  }
LABEL_82:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(unsigned int *)(v5 + 168), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x40000000) != 0)
    goto LABEL_83;
LABEL_32:
  if ((v6 & 0x80000000) == 0)
    goto LABEL_33;
LABEL_84:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(unsigned int *)(v5 + 176), (uint64_t)a2, a4);
LABEL_33:
  v7 = *(_DWORD *)(v5 + 216);
  if ((v7 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, (uint64_t)a2, *(float *)(v5 + 180), a3);
    v7 = *(_DWORD *)(v5 + 216);
    if ((v7 & 2) == 0)
    {
LABEL_35:
      if ((v7 & 4) == 0)
        goto LABEL_36;
      goto LABEL_87;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_35;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, *(unsigned int *)(v5 + 184), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 216);
  if ((v7 & 4) == 0)
  {
LABEL_36:
    if ((v7 & 8) == 0)
      goto LABEL_37;
    goto LABEL_88;
  }
LABEL_87:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(unsigned int *)(v5 + 188), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 216);
  if ((v7 & 8) == 0)
  {
LABEL_37:
    if ((v7 & 0x10) == 0)
      goto LABEL_38;
    goto LABEL_89;
  }
LABEL_88:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(unsigned int *)(v5 + 192), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 216);
  if ((v7 & 0x10) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0)
      goto LABEL_39;
    goto LABEL_90;
  }
LABEL_89:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(unsigned int *)(v5 + 196), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 216);
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v7 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, (uint64_t)a2, *(float *)(v5 + 204), a3);
  }
LABEL_90:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(unsigned __int8 *)(v5 + 200), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 216) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, (uint64_t)a2, *(float *)(v5 + 204), a3);
  return this;
}

uint64_t awd::metrics::CompassSession::ByteSize(awd::metrics::CompassSession *this)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  unsigned int v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  int v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v47;
  int v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v51;
  int v52;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v53;
  int v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  int v56;
  int v57;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v58;
  int v59;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v60;
  int v61;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v62;
  int v63;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v64;
  int v65;
  unsigned int v66;

  v2 = *((_DWORD *)this + 53);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_54;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 53);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 53);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
    v2 = *((_DWORD *)this + 53);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v10 & 0x80000000) != 0)
  {
    v11 = 10;
  }
  else if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    v2 = *((_DWORD *)this + 53);
  }
  else
  {
    v11 = 1;
  }
  v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_36;
  }
LABEL_30:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = *((_DWORD *)this + 53);
  }
  else
  {
    v13 = 1;
  }
  v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_21;
    goto LABEL_42;
  }
LABEL_36:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 10;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 53);
  }
  else
  {
    v15 = 1;
  }
  v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0)
      goto LABEL_54;
    goto LABEL_48;
  }
LABEL_42:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if ((v16 & 0x80000000) != 0)
  {
    v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = *((_DWORD *)this + 53);
  }
  else
  {
    v17 = 1;
  }
  v3 = (v3 + v17 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_48:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v18 & 0x80000000) != 0)
    {
      v19 = 10;
    }
    else if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      v2 = *((_DWORD *)this + 53);
    }
    else
    {
      v19 = 1;
    }
    v3 = (v3 + v19 + 1);
  }
LABEL_54:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_126;
  if ((v2 & 0x100) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v2 = *((_DWORD *)this + 53);
    }
    else
    {
      v21 = 1;
    }
    LODWORD(v3) = v3 + v21 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_57:
      if ((v2 & 0x400) == 0)
        goto LABEL_58;
      goto LABEL_78;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_57;
  }
  v22 = *((_QWORD *)this + 7);
  if (!v22)
    v22 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 56);
  v23 = *(unsigned __int8 *)(v22 + 24);
  if (*(_BYTE *)(v22 + 24))
  {
    v24 = (v23 << 31 >> 31) & 5;
    if ((v23 & 2) != 0)
      v24 += 5;
    if ((v23 & 4) != 0)
      v23 = v24 + 5;
    else
      v23 = v24;
  }
  *(_DWORD *)(v22 + 20) = v23;
  LODWORD(v3) = v3 + v23 + 2;
  v2 = *((_DWORD *)this + 53);
  if ((v2 & 0x400) == 0)
  {
LABEL_58:
    if ((v2 & 0x800) == 0)
      goto LABEL_59;
    goto LABEL_87;
  }
LABEL_78:
  v25 = *((_QWORD *)this + 8);
  if (!v25)
    v25 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 64);
  v26 = *(unsigned __int8 *)(v25 + 24);
  if (*(_BYTE *)(v25 + 24))
  {
    v27 = (v26 << 31 >> 31) & 5;
    if ((v26 & 2) != 0)
      v27 += 5;
    if ((v26 & 4) != 0)
      v26 = v27 + 5;
    else
      v26 = v27;
  }
  *(_DWORD *)(v25 + 20) = v26;
  LODWORD(v3) = v3 + v26 + 2;
  v2 = *((_DWORD *)this + 53);
  if ((v2 & 0x800) == 0)
  {
LABEL_59:
    if ((v2 & 0x1000) == 0)
      goto LABEL_60;
    goto LABEL_96;
  }
LABEL_87:
  v28 = *((_QWORD *)this + 9);
  if (!v28)
    v28 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 72);
  v29 = *(unsigned __int8 *)(v28 + 24);
  if (*(_BYTE *)(v28 + 24))
  {
    v30 = (v29 << 31 >> 31) & 5;
    if ((v29 & 2) != 0)
      v30 += 5;
    if ((v29 & 4) != 0)
      v29 = v30 + 5;
    else
      v29 = v30;
  }
  *(_DWORD *)(v28 + 20) = v29;
  LODWORD(v3) = v3 + v29 + 3;
  v2 = *((_DWORD *)this + 53);
  if ((v2 & 0x1000) == 0)
  {
LABEL_60:
    if ((v2 & 0x2000) == 0)
      goto LABEL_61;
LABEL_105:
    v34 = *((_QWORD *)this + 11);
    if (!v34)
      v34 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 88);
    v35 = *(unsigned __int8 *)(v34 + 24);
    if (*(_BYTE *)(v34 + 24))
    {
      v36 = (v35 << 31 >> 31) & 5;
      if ((v35 & 2) != 0)
        v36 += 5;
      if ((v35 & 4) != 0)
        v35 = v36 + 5;
      else
        v35 = v36;
    }
    *(_DWORD *)(v34 + 20) = v35;
    LODWORD(v3) = v3 + v35 + 3;
    v2 = *((_DWORD *)this + 53);
    if ((v2 & 0x4000) == 0)
      goto LABEL_123;
    goto LABEL_114;
  }
LABEL_96:
  v31 = *((_QWORD *)this + 10);
  if (!v31)
    v31 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 80);
  v32 = *(unsigned __int8 *)(v31 + 24);
  if (*(_BYTE *)(v31 + 24))
  {
    v33 = (v32 << 31 >> 31) & 5;
    if ((v32 & 2) != 0)
      v33 += 5;
    if ((v32 & 4) != 0)
      v32 = v33 + 5;
    else
      v32 = v33;
  }
  *(_DWORD *)(v31 + 20) = v32;
  LODWORD(v3) = v3 + v32 + 3;
  v2 = *((_DWORD *)this + 53);
  if ((v2 & 0x2000) != 0)
    goto LABEL_105;
LABEL_61:
  if ((v2 & 0x4000) != 0)
  {
LABEL_114:
    v37 = *((_QWORD *)this + 12);
    if (!v37)
      v37 = *(_QWORD *)(awd::metrics::CompassSession::default_instance_ + 96);
    v38 = *(unsigned __int8 *)(v37 + 24);
    if (*(_BYTE *)(v37 + 24))
    {
      v39 = (v38 << 31 >> 31) & 5;
      if ((v38 & 2) != 0)
        v39 += 5;
      if ((v38 & 4) != 0)
        v38 = v39 + 5;
      else
        v38 = v39;
    }
    *(_DWORD *)(v37 + 20) = v38;
    LODWORD(v3) = v3 + v38 + 3;
    v2 = *((_DWORD *)this + 53);
  }
LABEL_123:
  if ((v2 & 0x8000) != 0)
    v3 = (v3 + 6);
  else
    v3 = v3;
LABEL_126:
  if ((v2 & 0xFF0000) != 0)
  {
    v40 = v3 + 6;
    if ((v2 & 0x10000) == 0)
      v40 = v3;
    if ((v2 & 0x20000) != 0)
      v40 += 6;
    if ((v2 & 0x40000) != 0)
      v40 += 6;
    if ((v2 & 0x80000) != 0)
      v40 += 6;
    if ((v2 & 0x100000) != 0)
      v40 += 6;
    if ((v2 & 0x200000) != 0)
      v3 = v40 + 6;
    else
      v3 = v40;
    if ((v2 & 0x400000) != 0)
    {
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 16))
         + 2;
      v2 = *((_DWORD *)this + 53);
    }
    if ((v2 & 0x800000) != 0)
    {
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 18))
         + 2;
      v2 = *((_DWORD *)this + 53);
    }
  }
  if (!HIBYTE(v2))
    goto LABEL_188;
  if ((v2 & 0x1000000) != 0)
  {
    v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 35);
    if ((v41 & 0x80000000) != 0)
    {
      v42 = 10;
    }
    else if (v41 >= 0x80)
    {
      v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
      v2 = *((_DWORD *)this + 53);
    }
    else
    {
      v42 = 1;
    }
    v3 = (v3 + v42 + 2);
    if ((v2 & 0x2000000) == 0)
    {
LABEL_147:
      if ((v2 & 0x4000000) == 0)
        goto LABEL_148;
      goto LABEL_164;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_147;
  }
  v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 38);
  if (v43 >= 0x80)
  {
    v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
    v2 = *((_DWORD *)this + 53);
  }
  else
  {
    v44 = 1;
  }
  v3 = (v3 + v44 + 2);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_148:
    if ((v2 & 0x8000000) == 0)
      goto LABEL_149;
    goto LABEL_168;
  }
LABEL_164:
  v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 39);
  if (v45 >= 0x80)
  {
    v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
    v2 = *((_DWORD *)this + 53);
  }
  else
  {
    v46 = 1;
  }
  v3 = (v3 + v46 + 2);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_149:
    if ((v2 & 0x10000000) == 0)
      goto LABEL_150;
    goto LABEL_172;
  }
LABEL_168:
  v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
  if (v47 >= 0x80)
  {
    v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
    v2 = *((_DWORD *)this + 53);
  }
  else
  {
    v48 = 1;
  }
  v3 = (v3 + v48 + 2);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_150:
    if ((v2 & 0x20000000) == 0)
      goto LABEL_151;
LABEL_176:
    v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 42);
    if (v51 >= 0x80)
    {
      v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51) + 2;
      v2 = *((_DWORD *)this + 53);
    }
    else
    {
      v52 = 3;
    }
    v3 = (v52 + v3);
    if ((v2 & 0x40000000) == 0)
    {
LABEL_152:
      if ((v2 & 0x80000000) == 0)
        goto LABEL_188;
      goto LABEL_184;
    }
    goto LABEL_180;
  }
LABEL_172:
  v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 41);
  if (v49 >= 0x80)
  {
    v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
    v2 = *((_DWORD *)this + 53);
  }
  else
  {
    v50 = 1;
  }
  v3 = (v3 + v50 + 2);
  if ((v2 & 0x20000000) != 0)
    goto LABEL_176;
LABEL_151:
  if ((v2 & 0x40000000) == 0)
    goto LABEL_152;
LABEL_180:
  v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 43);
  if (v53 >= 0x80)
  {
    v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53) + 2;
    v2 = *((_DWORD *)this + 53);
  }
  else
  {
    v54 = 3;
  }
  v3 = (v54 + v3);
  if ((v2 & 0x80000000) != 0)
  {
LABEL_184:
    v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 44);
    if (v55 >= 0x80)
      v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55) + 2;
    else
      v56 = 3;
    v3 = (v56 + v3);
  }
LABEL_188:
  LOBYTE(v57) = *((_BYTE *)this + 216);
  if (!(_BYTE)v57)
    goto LABEL_221;
  if ((*((_BYTE *)this + 216) & 1) != 0)
    LODWORD(v3) = v3 + 6;
  if ((*((_BYTE *)this + 216) & 2) != 0)
  {
    v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 46);
    if ((v58 & 0x80000000) != 0)
    {
      v59 = 12;
    }
    else if (v58 >= 0x80)
    {
      v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58) + 2;
      v57 = *((_DWORD *)this + 54);
    }
    else
    {
      v59 = 3;
    }
    LODWORD(v3) = v59 + v3;
    if ((v57 & 4) == 0)
    {
LABEL_193:
      if ((v57 & 8) == 0)
        goto LABEL_194;
      goto LABEL_208;
    }
  }
  else if ((*((_BYTE *)this + 216) & 4) == 0)
  {
    goto LABEL_193;
  }
  v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 47);
  if ((v60 & 0x80000000) != 0)
  {
    v61 = 12;
  }
  else if (v60 >= 0x80)
  {
    v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60) + 2;
    v57 = *((_DWORD *)this + 54);
  }
  else
  {
    v61 = 3;
  }
  LODWORD(v3) = v61 + v3;
  if ((v57 & 8) == 0)
  {
LABEL_194:
    if ((v57 & 0x10) == 0)
      goto LABEL_216;
    goto LABEL_212;
  }
LABEL_208:
  v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 48);
  if (v62 >= 0x80)
  {
    v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62) + 2;
    v57 = *((_DWORD *)this + 54);
  }
  else
  {
    v63 = 3;
  }
  LODWORD(v3) = v63 + v3;
  if ((v57 & 0x10) != 0)
  {
LABEL_212:
    v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 49);
    if (v64 >= 0x80)
    {
      v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64) + 2;
      v57 = *((_DWORD *)this + 54);
    }
    else
    {
      v65 = 3;
    }
    LODWORD(v3) = v65 + v3;
  }
LABEL_216:
  v66 = v3 + 3;
  if ((v57 & 0x20) == 0)
    v66 = v3;
  if ((v57 & 0x40) != 0)
    v3 = v66 + 6;
  else
    v3 = v66;
LABEL_221:
  *((_DWORD *)this + 52) = v3;
  return v3;
}

void awd::metrics::CompassSession::CheckTypeAndMergeFrom(awd::metrics::CompassSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::CompassSession::MergeFrom(this, lpsrc);
}

void awd::metrics::CompassSession::CopyFrom(awd::metrics::CompassSession *this, const awd::metrics::CompassSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::CompassSession *))(*(_QWORD *)this + 32))(this);
    awd::metrics::CompassSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::CompassSession::IsInitialized(awd::metrics::CompassSession *this)
{
  return 1;
}

float awd::metrics::CompassSession::Swap(awd::metrics::CompassSession *this, awd::metrics::CompassSession *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    LODWORD(v5) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    LODWORD(v5) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    v6 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v6;
    v7 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v7;
    v8 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v8;
    v9 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v9;
    v10 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v10;
    v11 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v11;
    v12 = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v12;
    v13 = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v13;
    v14 = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v14;
    v15 = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v15;
    v16 = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v16;
    v17 = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v17;
    v18 = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v18;
    v19 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v19;
    v20 = *((_QWORD *)this + 18);
    *((_QWORD *)this + 18) = *((_QWORD *)a2 + 18);
    *((_QWORD *)a2 + 18) = v20;
    LODWORD(v20) = *((_DWORD *)this + 35);
    *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
    *((_DWORD *)a2 + 35) = v20;
    LODWORD(v20) = *((_DWORD *)this + 38);
    *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
    *((_DWORD *)a2 + 38) = v20;
    LODWORD(v20) = *((_DWORD *)this + 39);
    *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
    *((_DWORD *)a2 + 39) = v20;
    LODWORD(v20) = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v20;
    LODWORD(v20) = *((_DWORD *)this + 41);
    *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
    *((_DWORD *)a2 + 41) = v20;
    LODWORD(v20) = *((_DWORD *)this + 42);
    *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v20;
    LODWORD(v20) = *((_DWORD *)this + 43);
    *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
    *((_DWORD *)a2 + 43) = v20;
    LODWORD(v20) = *((_DWORD *)this + 44);
    *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
    *((_DWORD *)a2 + 44) = v20;
    v21 = *((_DWORD *)this + 45);
    *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
    *((_DWORD *)a2 + 45) = v21;
    LODWORD(v20) = *((_DWORD *)this + 46);
    *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
    *((_DWORD *)a2 + 46) = v20;
    LODWORD(v20) = *((_DWORD *)this + 47);
    *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
    *((_DWORD *)a2 + 47) = v20;
    LODWORD(v20) = *((_DWORD *)this + 48);
    *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
    *((_DWORD *)a2 + 48) = v20;
    LODWORD(v20) = *((_DWORD *)this + 49);
    *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
    *((_DWORD *)a2 + 49) = v20;
    LOBYTE(v20) = *((_BYTE *)this + 200);
    *((_BYTE *)this + 200) = *((_BYTE *)a2 + 200);
    *((_BYTE *)a2 + 200) = v20;
    result = *((float *)this + 51);
    *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
    *((float *)a2 + 51) = result;
    LODWORD(v20) = *((_DWORD *)this + 53);
    *((_DWORD *)this + 53) = *((_DWORD *)a2 + 53);
    *((_DWORD *)a2 + 53) = v20;
    LODWORD(v20) = *((_DWORD *)this + 54);
    *((_DWORD *)this + 54) = *((_DWORD *)a2 + 54);
    *((_DWORD *)a2 + 54) = v20;
    LODWORD(v20) = *((_DWORD *)this + 52);
    *((_DWORD *)this + 52) = *((_DWORD *)a2 + 52);
    *((_DWORD *)a2 + 52) = v20;
  }
  return result;
}

_QWORD *awd::metrics::CompassSession::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.CompassSession");
}

double awd::metrics::LocationCompassSaturations::SharedCtor(awd::metrics::LocationCompassSaturations *this)
{
  double result;

  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationCompassSaturations *awd::metrics::LocationCompassSaturations::LocationCompassSaturations(awd::metrics::LocationCompassSaturations *this, const awd::metrics::LocationCompassSaturations *a2)
{
  *(_QWORD *)this = &off_24D98E6F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  awd::metrics::LocationCompassSaturations::MergeFrom(this, a2);
  return this;
}

void sub_2189E02E4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationCompassSaturations::MergeFrom(awd::metrics::LocationCompassSaturations *this, const awd::metrics::LocationCompassSaturations *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  _BYTE v14[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  v4 = *((_DWORD *)a2 + 15);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 15) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *((_QWORD *)a2 + 2);
  *((_DWORD *)this + 15) |= 2u;
  *((_QWORD *)this + 2) = v8;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  v9 = *((_QWORD *)a2 + 3);
  *((_DWORD *)this + 15) |= 4u;
  *((_QWORD *)this + 3) = v9;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  v10 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 15) |= 8u;
  *((_DWORD *)this + 8) = v10;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_21:
    v12 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 15) |= 0x20u;
    *((_DWORD *)this + 10) = v12;
    v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  v11 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 15) |= 0x10u;
  *((_DWORD *)this + 9) = v11;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x20) != 0)
    goto LABEL_21;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_22:
  v13 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 15) |= 0x40u;
  *((_DWORD *)this + 11) = v13;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 15) |= 0x80u;
    *((_DWORD *)this + 12) = v5;
    v4 = *((_DWORD *)a2 + 15);
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    v6 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 15) |= 0x100u;
    *((_DWORD *)this + 13) = v6;
  }
}

void sub_2189E0488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationCompassSaturations::~LocationCompassSaturations(awd::metrics::LocationCompassSaturations *this)
{
  *(_QWORD *)this = &off_24D98E6F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E6F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E6F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationCompassSaturations::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t awd::metrics::LocationCompassSaturations::default_instance(awd::metrics::LocationCompassSaturations *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationCompassSaturations::default_instance_;
  if (!awd::metrics::LocationCompassSaturations::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationCompassSaturations::default_instance_;
  }
  return result;
}

double awd::metrics::LocationCompassSaturations::New(awd::metrics::LocationCompassSaturations *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98E6F0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t awd::metrics::LocationCompassSaturations::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 60);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 36) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
    *(_DWORD *)(this + 52) = 0;
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t awd::metrics::LocationCompassSaturations::MergePartialFromCodedStream(awd::metrics::LocationCompassSaturations *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  unsigned int *v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  unint64_t v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  _BYTE *v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  unsigned int v27;
  _BYTE *v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  v6 = (unint64_t *)((char *)this + 24);
  v7 = (unsigned int *)((char *)this + 52);
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 15) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 16)
        {
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
          goto LABEL_37;
        }
        continue;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
LABEL_37:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v23 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v14;
          v23 = v14 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 15) |= 2u;
        if ((unint64_t)v23 >= v11 || *v23 != 24)
          continue;
        v15 = v23 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_45:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v15;
          v24 = v15 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 15) |= 4u;
        if ((unint64_t)v24 >= v11 || *v24 != 32)
          continue;
        v16 = v24 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_53:
        v35 = 0;
        if ((unint64_t)v16 >= v11 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
          if (!(_DWORD)result)
            return result;
          v25 = v35;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v25 = *v16;
          v26 = v16 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 8) = v25;
        *((_DWORD *)this + 15) |= 8u;
        if ((unint64_t)v26 >= v11 || *v26 != 40)
          continue;
        v17 = v26 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_61:
        v35 = 0;
        if ((unint64_t)v17 >= v11 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
          if (!(_DWORD)result)
            return result;
          v27 = v35;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v27 = *v17;
          v28 = v17 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 9) = v27;
        *((_DWORD *)this + 15) |= 0x10u;
        if ((unint64_t)v28 >= v11 || *v28 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_69:
        v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v35) & 1) != 0)
        {
          *((_DWORD *)this + 10) = v35;
          *((_DWORD *)this + 15) |= 0x20u;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v29 < v18 && *v29 == 56)
          {
            v19 = v29 + 1;
            *((_QWORD *)a2 + 1) = v19;
LABEL_73:
            v35 = 0;
            if ((unint64_t)v19 >= v18 || *v19 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
              if (!(_DWORD)result)
                return result;
              v30 = v35;
              v31 = (_BYTE *)*((_QWORD *)a2 + 1);
              v18 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v30 = *v19;
              v31 = v19 + 1;
              *((_QWORD *)a2 + 1) = v31;
            }
            *((_DWORD *)this + 11) = v30;
            *((_DWORD *)this + 15) |= 0x40u;
            if ((unint64_t)v31 < v18 && *v31 == 64)
            {
              v20 = v31 + 1;
              *((_QWORD *)a2 + 1) = v20;
LABEL_81:
              v35 = 0;
              if ((unint64_t)v20 >= v18 || *v20 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
                if (!(_DWORD)result)
                  return result;
                v32 = v35;
                v33 = (_BYTE *)*((_QWORD *)a2 + 1);
                v18 = *((_QWORD *)a2 + 2);
              }
              else
              {
                v32 = *v20;
                v33 = v20 + 1;
                *((_QWORD *)a2 + 1) = v33;
              }
              *((_DWORD *)this + 12) = v32;
              *((_DWORD *)this + 15) |= 0x80u;
              if ((unint64_t)v33 < v18 && *v33 == 72)
              {
                v21 = v33 + 1;
                *((_QWORD *)a2 + 1) = v21;
LABEL_89:
                if ((unint64_t)v21 >= v18 || *v21 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
                  if (!(_DWORD)result)
                    return result;
                  v34 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                  v18 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  *v7 = *v21;
                  v34 = (unsigned __int8 *)(v21 + 1);
                  *((_QWORD *)a2 + 1) = v34;
                }
                *((_DWORD *)this + 15) |= 0x100u;
                if (v34 == (unsigned __int8 *)v18
                  && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  result = 1;
                  *((_BYTE *)a2 + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      case 5u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      case 6u:
        v10 = TagFallback & 7;
        if (v10 == 5)
          goto LABEL_69;
        goto LABEL_28;
      case 7u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_73;
      case 8u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_81;
      case 9u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_89;
      default:
        v10 = TagFallback & 7;
LABEL_28:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationCompassSaturations::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x100) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationCompassSaturations::ByteSize(awd::metrics::LocationCompassSaturations *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;

  v2 = *((_DWORD *)this + 15);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    if ((v2 & 0x100) == 0)
      goto LABEL_49;
    goto LABEL_45;
  }
  if ((v2 & 1) != 0)
  {
    LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 1))
                + 1;
    v2 = *((_DWORD *)this + 15);
    if ((v2 & 2) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
  LODWORD(v3) = 0;
  if ((v2 & 2) != 0)
  {
LABEL_8:
    LODWORD(v3) = v3
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 2))
                + 1;
    v2 = *((_DWORD *)this + 15);
  }
LABEL_9:
  if ((v2 & 4) != 0)
  {
    LODWORD(v3) = v3
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 3))
                + 1;
    v2 = *((_DWORD *)this + 15);
    if ((v2 & 8) == 0)
    {
LABEL_11:
      if ((v2 & 0x10) == 0)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_11;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v5 = 2;
  }
  LODWORD(v3) = v5 + v3;
  if ((v2 & 0x10) != 0)
  {
LABEL_20:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      v2 = *((_DWORD *)this + 15);
    }
    else
    {
      v7 = 2;
    }
    LODWORD(v3) = v7 + v3;
  }
LABEL_26:
  if ((v2 & 0x20) != 0)
    v3 = (v3 + 5);
  else
    v3 = v3;
  if ((v2 & 0x40) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      v2 = *((_DWORD *)this + 15);
    }
    else
    {
      v9 = 2;
    }
    v3 = (v9 + v3);
    if ((v2 & 0x80) == 0)
    {
LABEL_31:
      if ((v2 & 0x100) == 0)
        goto LABEL_49;
      goto LABEL_45;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_31;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if ((v10 & 0x80000000) != 0)
  {
    v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v11 = 2;
  }
  v3 = (v11 + v3);
  if ((v2 & 0x100) != 0)
  {
LABEL_45:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if (v12 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    else
      v13 = 2;
    v3 = (v13 + v3);
  }
LABEL_49:
  *((_DWORD *)this + 14) = v3;
  return v3;
}

void awd::metrics::LocationCompassSaturations::CheckTypeAndMergeFrom(awd::metrics::LocationCompassSaturations *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationCompassSaturations::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationCompassSaturations::CopyFrom(awd::metrics::LocationCompassSaturations *this, const awd::metrics::LocationCompassSaturations *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationCompassSaturations *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationCompassSaturations::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationCompassSaturations::IsInitialized(awd::metrics::LocationCompassSaturations *this)
{
  return 1;
}

float awd::metrics::LocationCompassSaturations::Swap(awd::metrics::LocationCompassSaturations *this, awd::metrics::LocationCompassSaturations *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    result = *((float *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((float *)a2 + 10) = result;
    LODWORD(v4) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v4;
    LODWORD(v4) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v4;
    LODWORD(v4) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v4;
    LODWORD(v4) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
  }
  return result;
}

_QWORD *awd::metrics::LocationCompassSaturations::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationCompassSaturations");
}

uint64_t awd::metrics::MotionState::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_DWORD *)(this + 24) = 0;
  *(_BYTE *)(this + 28) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

awd::metrics::MotionState *awd::metrics::MotionState::MotionState(awd::metrics::MotionState *this, const awd::metrics::MotionState *a2)
{
  uint64_t v3;

  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D98E768;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_DWORD *)this + 6) = 0;
  *((_BYTE *)this + 28) = 0;
  *((_QWORD *)this + 4) = 0;
  awd::metrics::MotionState::MergeFrom(this, a2);
  return this;
}

void sub_2189E0F40(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionState::MergeFrom(awd::metrics::MotionState *this, const awd::metrics::MotionState *a2)
{
  int v4;
  char v5;
  uint64_t v6;
  const std::string *v7;
  std::string *v8;
  int v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    v8 = (std::string *)*((_QWORD *)this + 2);
    if (v8 == (std::string *)MEMORY[0x24BEDD958])
    {
      v8 = (std::string *)operator new();
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v8;
    }
    std::string::operator=(v8, v7);
    v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_14:
    v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 9) |= 4u;
    *((_DWORD *)this + 6) = v9;
    if ((*((_DWORD *)a2 + 9) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_BYTE *)a2 + 28);
    *((_DWORD *)this + 9) |= 8u;
    *((_BYTE *)this + 28) = v5;
  }
}

void sub_2189E1088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionState::~MotionState(awd::metrics::MotionState *this)
{
  *(_QWORD *)this = &off_24D98E768;
  awd::metrics::MotionState::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E768;
  awd::metrics::MotionState::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E768;
  awd::metrics::MotionState::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionState::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::MotionState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::MotionState::default_instance(awd::metrics::MotionState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionState::default_instance_;
  if (!awd::metrics::MotionState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionState::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::MotionState::New(awd::metrics::MotionState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_24D98E768;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = MEMORY[0x24BEDD958];
  *(_DWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 28) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t awd::metrics::MotionState::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 36);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 24) = 0;
    *(_BYTE *)(this + 28) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::MotionState::MergePartialFromCodedStream(awd::metrics::MotionState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  int v12;
  unint64_t v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  _BYTE *v17;
  unsigned int v18;
  _BYTE *v19;
  unsigned int v20;
  unsigned __int8 *v21;
  uint64_t result;
  unsigned int v23;
  unsigned int v24;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = MEMORY[0x24BEDD958];
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
LABEL_24:
          v12 = *((_DWORD *)this + 9) | 1;
          *((_DWORD *)this + 9) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((_QWORD *)a2 + 1) = v11 + 1;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_18;
        v12 = *((_DWORD *)this + 9);
LABEL_27:
        *((_DWORD *)this + 9) = v12 | 2;
        if (*((_QWORD *)this + 2) == v5)
        {
          v16 = (_QWORD *)operator new();
          v16[1] = 0;
          v16[2] = 0;
          *v16 = 0;
          *((_QWORD *)this + 2) = v16;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v17 >= v13 || *v17 != 24)
          continue;
        v14 = v17 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_33:
        v24 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v18 = v24;
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v14;
          v19 = v14 + 1;
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 6) = v18;
        *((_DWORD *)this + 9) |= 4u;
        if ((unint64_t)v19 >= v13 || *v19 != 32)
          continue;
        v15 = v19 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_41:
        v23 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!(_DWORD)result)
            return result;
          v20 = v23;
          v21 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v20 = *v15;
          v21 = (unsigned __int8 *)(v15 + 1);
          *((_QWORD *)a2 + 1) = v21;
        }
        *((_BYTE *)this + 28) = v20 != 0;
        *((_DWORD *)this + 9) |= 8u;
        if (v21 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_33;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_41;
      default:
        v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::MotionState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 28), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 28), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionState::ByteSize(awd::metrics::MotionState *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_26;
  }
  if ((*((_BYTE *)this + 36) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 36) & 2) == 0)
      goto LABEL_16;
LABEL_7:
    v5 = *((_QWORD *)this + 2);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v7 = v6;
    v8 = *(_QWORD *)(v5 + 8);
    if ((v6 & 0x80u) == 0)
      v9 = *(unsigned __int8 *)(v5 + 23);
    else
      v9 = v8;
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
      v6 = *(unsigned __int8 *)(v5 + 23);
      v8 = *(_QWORD *)(v5 + 8);
      v2 = *((_DWORD *)this + 9);
      v7 = *(_BYTE *)(v5 + 23);
    }
    else
    {
      v10 = 1;
    }
    if (v7 < 0)
      v6 = v8;
    v3 += v10 + v6 + 1;
    goto LABEL_16;
  }
  v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  v2 = *((_DWORD *)this + 9);
  if ((v2 & 2) != 0)
    goto LABEL_7;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v11 & 0x80000000) != 0)
    {
      v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
      v2 = *((_DWORD *)this + 9);
    }
    else
    {
      v12 = 2;
    }
    v3 += v12;
  }
  if ((v2 & 8) != 0)
    result = v3 + 2;
  else
    result = v3;
LABEL_26:
  *((_DWORD *)this + 8) = result;
  return result;
}

void awd::metrics::MotionState::CheckTypeAndMergeFrom(awd::metrics::MotionState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionState::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionState::CopyFrom(awd::metrics::MotionState *this, const awd::metrics::MotionState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionState *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionState::IsInitialized(awd::metrics::MotionState *this)
{
  return 1;
}

uint64_t awd::metrics::MotionState::Swap(uint64_t this, awd::metrics::MotionState *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::MotionState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 28);
    *(_BYTE *)(this + 28) = *((_BYTE *)a2 + 28);
    *((_BYTE *)a2 + 28) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return this;
}

_QWORD *awd::metrics::MotionState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionState");
}

_QWORD *awd::metrics::MotionTrigger::SharedCtor(_QWORD *this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  this[1] = 0;
  this[2] = v1;
  this[8] = 0;
  this[3] = 0;
  this[4] = 0;
  return this;
}

awd::metrics::MotionTrigger *awd::metrics::MotionTrigger::MotionTrigger(awd::metrics::MotionTrigger *this, const awd::metrics::MotionTrigger *a2)
{
  uint64_t v3;

  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D98E7E0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 2) = v3;
  awd::metrics::MotionTrigger::MergeFrom(this, a2);
  return this;
}

void sub_2189E186C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  int *v2;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionTrigger::MergeFrom(awd::metrics::MotionTrigger *this, const awd::metrics::MotionTrigger *a2)
{
  wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *result;
  uint64_t v5;
  const std::string *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  std::string *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const std::string *v16;
  std::string *v17;
  uint64_t v18;
  int v19;
  _BYTE v20[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::MotionTrigger *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const std::string **)(*((_QWORD *)a2 + 5) + 8 * v5);
      v7 = *((_DWORD *)this + 13);
      v8 = *((int *)this + 12);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 14))
        {
          result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::MotionTrigger *)((char *)this + 40));
          v7 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v7 + 1;
        v10 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New(result);
        v11 = *((_QWORD *)this + 5);
        v12 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 5);
        *((_DWORD *)this + 12) = v8 + 1;
        v10 = *(std::string **)(v9 + 8 * v8);
      }
      result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 12));
  }
  LOBYTE(v13) = *((_BYTE *)a2 + 68);
  if ((_BYTE)v13)
  {
    if ((*((_BYTE *)a2 + 68) & 1) != 0)
    {
      v15 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 17) |= 1u;
      *((_QWORD *)this + 1) = v15;
      v13 = *((_DWORD *)a2 + 17);
      if ((v13 & 2) == 0)
      {
LABEL_14:
        if ((v13 & 4) == 0)
          goto LABEL_15;
        goto LABEL_23;
      }
    }
    else if ((*((_BYTE *)a2 + 68) & 2) == 0)
    {
      goto LABEL_14;
    }
    v16 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 17) |= 2u;
    v17 = (std::string *)*((_QWORD *)this + 2);
    if (v17 == (std::string *)MEMORY[0x24BEDD958])
    {
      v17 = (std::string *)operator new();
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v17;
    }
    result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v17, v16);
    v13 = *((_DWORD *)a2 + 17);
    if ((v13 & 4) == 0)
    {
LABEL_15:
      if ((v13 & 8) == 0)
        goto LABEL_16;
      goto LABEL_24;
    }
LABEL_23:
    v18 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 17) |= 4u;
    *((_QWORD *)this + 3) = v18;
    v13 = *((_DWORD *)a2 + 17);
    if ((v13 & 8) == 0)
    {
LABEL_16:
      if ((v13 & 0x10) == 0)
        return result;
      goto LABEL_17;
    }
LABEL_24:
    v19 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 17) |= 8u;
    *((_DWORD *)this + 8) = v19;
    if ((*((_DWORD *)a2 + 17) & 0x10) == 0)
      return result;
LABEL_17:
    v14 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 17) |= 0x10u;
    *((_DWORD *)this + 9) = v14;
  }
  return result;
}

void sub_2189E1A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionTrigger::~MotionTrigger(awd::metrics::MotionTrigger *this)
{
  int *v2;

  *(_QWORD *)this = &off_24D98E7E0;
  v2 = (int *)((char *)this + 40);
  awd::metrics::MotionTrigger::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::MotionTrigger::~MotionTrigger(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionTrigger::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::MotionTrigger::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t awd::metrics::MotionTrigger::default_instance(awd::metrics::MotionTrigger *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionTrigger::default_instance_;
  if (!awd::metrics::MotionTrigger::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionTrigger::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::MotionTrigger::New(awd::metrics::MotionTrigger *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  *(_QWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_QWORD *)result = &off_24D98E7E0;
  *(_QWORD *)(result + 8) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::MotionTrigger::Clear(awd::metrics::MotionTrigger *this)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *((_BYTE *)this + 68);
  if (v2)
  {
    *((_QWORD *)this + 1) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *((_QWORD *)this + 2);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)this + 4) = 0;
  }
  result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + 17) = 0;
  return result;
}

uint64_t awd::metrics::MotionTrigger::MergePartialFromCodedStream(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  uint64_t v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v9;
  int v10;
  unint64_t v11;
  char *v12;
  _BYTE *v13;
  int v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  _BYTE *v20;
  _BYTE *v21;
  unsigned int v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  unsigned int v32;
  unsigned int v33;

  v3 = this;
  v4 = (unint64_t *)(this + 8);
  v5 = (unint64_t *)(this + 24);
  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(this + 40);
  v7 = MEMORY[0x24BEDD958];
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      v9 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)this;
      *((_DWORD *)a2 + 8) = this;
      if (!(_DWORD)this)
        return 1;
    }
    else
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)a2 + 8) = (_DWORD)v9;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)v9)
        return 1;
    }
    switch(v9 >> 3)
    {
      case 1u:
        v10 = v9 & 7;
        if ((v9 & 7) != 0)
          goto LABEL_22;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          *v4 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
LABEL_27:
          v14 = *(_DWORD *)(v3 + 68) | 1;
          *(_DWORD *)(v3 + 68) = v14;
          if ((unint64_t)v13 < v11 && *v13 == 18)
          {
            *((_QWORD *)a2 + 1) = v13 + 1;
            goto LABEL_30;
          }
          continue;
        }
        this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)this)
        {
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          goto LABEL_27;
        }
        break;
      case 2u:
        v10 = v9 & 7;
        if (v10 != 2)
          goto LABEL_22;
        v14 = *(_DWORD *)(v3 + 68);
LABEL_30:
        *(_DWORD *)(v3 + 68) = v14 | 2;
        if (*(_QWORD *)(v3 + 16) == v7)
        {
          v19 = (_QWORD *)operator new();
          v19[1] = 0;
          v19[2] = 0;
          *v19 = 0;
          *(_QWORD *)(v3 + 16) = v19;
        }
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)this)
          return this;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v20 >= v15 || *v20 != 24)
          continue;
        v16 = v20 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_36:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)this)
            return this;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v16;
          v21 = v16 + 1;
          *((_QWORD *)a2 + 1) = v21;
        }
        *(_DWORD *)(v3 + 68) |= 4u;
        if ((unint64_t)v21 >= v15 || *v21 != 32)
          continue;
        v17 = v21 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_44:
        v33 = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)this)
            return this;
          v22 = v33;
          v23 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v22 = *v17;
          v23 = v17 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *(_DWORD *)(v3 + 32) = v22;
        *(_DWORD *)(v3 + 68) |= 8u;
        if ((unint64_t)v23 >= v15 || *v23 != 40)
          continue;
        v18 = v23 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_52:
        v32 = 0;
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!(_DWORD)this)
            return this;
          v24 = v32;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v24 = *v18;
          v25 = v18 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *(_DWORD *)(v3 + 36) = v24;
        *(_DWORD *)(v3 + 68) |= 0x10u;
        if ((unint64_t)v25 >= v15 || *v25 != 50)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_60:
          v26 = *(_DWORD *)(v3 + 52);
          v27 = *(_DWORD *)(v3 + 48);
          if (v27 >= v26)
          {
            if (v26 == *(_DWORD *)(v3 + 56))
            {
              this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
              v26 = *(_DWORD *)(v3 + 52);
            }
            *(_DWORD *)(v3 + 52) = v26 + 1;
            v28 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)this);
            v29 = *(_QWORD *)(v3 + 40);
            v30 = *(int *)(v3 + 48);
            *(_DWORD *)(v3 + 48) = v30 + 1;
            *(_QWORD *)(v29 + 8 * v30) = v28;
          }
          else
          {
            *(_DWORD *)(v3 + 48) = v27 + 1;
          }
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!(_DWORD)this)
            return this;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v31 = (_BYTE *)*((_QWORD *)a2 + 2);
        }
        while (v25 < v31 && *v25 == 50);
        if (v25 != v31 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        this = 1;
        *((_BYTE *)a2 + 36) = 1;
        return this;
      case 3u:
        v10 = v9 & 7;
        if ((v9 & 7) != 0)
          goto LABEL_22;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_36;
      case 4u:
        v10 = v9 & 7;
        if ((v9 & 7) != 0)
          goto LABEL_22;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_44;
      case 5u:
        v10 = v9 & 7;
        if ((v9 & 7) != 0)
          goto LABEL_22;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_52;
      case 6u:
        v10 = v9 & 7;
        if (v10 != 2)
          goto LABEL_22;
        goto LABEL_60;
      default:
        v10 = v9 & 7;
LABEL_22:
        if (v10 == 4)
          return 1;
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, v9);
        if ((this & 1) != 0)
          continue;
        return 0;
    }
    return this;
  }
}

uint64_t awd::metrics::MotionTrigger::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 68);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x10) != 0)
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
LABEL_7:
  if (*(int *)(v5 + 48) >= 1)
  {
    v7 = 0;
    do
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v7;
    }
    while (v7 < *(int *)(v5 + 48));
  }
  return this;
}

uint64_t awd::metrics::MotionTrigger::ByteSize(awd::metrics::MotionTrigger *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  int v22;

  LOBYTE(v2) = *((_BYTE *)this + 68);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_33;
  }
  if ((*((_BYTE *)this + 68) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 17);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 68) & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 17);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 += v9 + v5 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 3))
        + 1;
    v2 = *((_DWORD *)this + 17);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_33;
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v10 & 0x80000000) != 0)
  {
    v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v11 = 2;
  }
  v3 += v11;
  if ((v2 & 0x10) != 0)
  {
LABEL_27:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v12 & 0x80000000) != 0)
    {
      v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    }
    else
    {
      v13 = 2;
    }
    v3 += v13;
  }
LABEL_33:
  v14 = *((_DWORD *)this + 12);
  v15 = (v14 + v3);
  if (v14 >= 1)
  {
    for (i = 0; i < v14; ++i)
    {
      v17 = *(_QWORD *)(*((_QWORD *)this + 5) + 8 * i);
      v18 = *(unsigned __int8 *)(v17 + 23);
      v19 = v18;
      v20 = *(_QWORD *)(v17 + 8);
      if ((v18 & 0x80u) == 0)
        v21 = *(unsigned __int8 *)(v17 + 23);
      else
        v21 = v20;
      if (v21 >= 0x80)
      {
        v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21);
        v18 = *(unsigned __int8 *)(v17 + 23);
        v20 = *(_QWORD *)(v17 + 8);
        v14 = *((_DWORD *)this + 12);
        v19 = *(_BYTE *)(v17 + 23);
      }
      else
      {
        v22 = 1;
      }
      if (v19 < 0)
        v18 = v20;
      v15 = (v22 + v15 + v18);
    }
  }
  *((_DWORD *)this + 16) = v15;
  return v15;
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionTrigger::CheckTypeAndMergeFrom(awd::metrics::MotionTrigger *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::MotionTrigger::MergeFrom(this, lpsrc);
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionTrigger::CopyFrom(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *this, const awd::metrics::MotionTrigger *a2)
{
  awd::metrics::MotionTrigger *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::MotionTrigger::MergeFrom(v3, a2);
  }
  return this;
}

uint64_t awd::metrics::MotionTrigger::IsInitialized(awd::metrics::MotionTrigger *this)
{
  return 1;
}

uint64_t awd::metrics::MotionTrigger::Swap(uint64_t this, awd::metrics::MotionTrigger *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  if (a2 != (awd::metrics::MotionTrigger *)this)
  {
    v3 = this;
    v4 = *(_QWORD *)(this + 8);
    v5 = *(_QWORD *)(this + 16);
    v6 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v6;
    *((_QWORD *)a2 + 1) = v4;
    *((_QWORD *)a2 + 2) = v5;
    v7 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v7;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v8 = *(_DWORD *)(v3 + 68);
    *(_DWORD *)(v3 + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
    v9 = *(_DWORD *)(v3 + 64);
    *(_DWORD *)(v3 + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v9;
  }
  return this;
}

_QWORD *awd::metrics::MotionTrigger::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionTrigger");
}

_QWORD *awd::metrics::MotionGyroMiniCal::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

awd::metrics::MotionGyroMiniCal *awd::metrics::MotionGyroMiniCal::MotionGyroMiniCal(awd::metrics::MotionGyroMiniCal *this, const awd::metrics::MotionGyroMiniCal *a2)
{
  *(_QWORD *)this = &off_24D98E858;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  awd::metrics::MotionGyroMiniCal::MergeFrom(this, a2);
  return this;
}

void sub_2189E2480(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroMiniCal::MergeFrom(awd::metrics::MotionGyroMiniCal *this, const awd::metrics::MotionGyroMiniCal *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((_QWORD *)this + 2) = v6;
    }
  }
}

void sub_2189E253C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroMiniCal::~MotionGyroMiniCal(awd::metrics::MotionGyroMiniCal *this)
{
  *(_QWORD *)this = &off_24D98E858;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E858;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E858;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionGyroMiniCal::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t awd::metrics::MotionGyroMiniCal::default_instance(awd::metrics::MotionGyroMiniCal *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionGyroMiniCal::default_instance_;
  if (!awd::metrics::MotionGyroMiniCal::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionGyroMiniCal::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::MotionGyroMiniCal::New(awd::metrics::MotionGyroMiniCal *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_24D98E858;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t awd::metrics::MotionGyroMiniCal::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t awd::metrics::MotionGyroMiniCal::MergePartialFromCodedStream(awd::metrics::MotionGyroMiniCal *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v11 = (char *)*((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (!(_DWORD)result)
          return result;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v4 = *v11;
        v12 = v11 + 1;
        *((_QWORD *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 7) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        v10 = v12 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v10;
          v13 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 7) |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::MotionGyroMiniCal::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionGyroMiniCal::ByteSize(awd::metrics::MotionGyroMiniCal *this)
{
  uint64_t v2;

  if (*((_BYTE *)this + 28))
  {
    if ((*((_BYTE *)this + 28) & 1) == 0)
    {
      v2 = 0;
      if ((*((_BYTE *)this + 28) & 2) == 0)
        goto LABEL_8;
      goto LABEL_7;
    }
    v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    if ((*((_DWORD *)this + 7) & 2) != 0)
LABEL_7:
      v2 = v2
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
         + 1;
  }
  else
  {
    v2 = 0;
  }
LABEL_8:
  *((_DWORD *)this + 6) = v2;
  return v2;
}

void awd::metrics::MotionGyroMiniCal::CheckTypeAndMergeFrom(awd::metrics::MotionGyroMiniCal *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionGyroMiniCal::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionGyroMiniCal::CopyFrom(awd::metrics::MotionGyroMiniCal *this, const awd::metrics::MotionGyroMiniCal *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionGyroMiniCal *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionGyroMiniCal::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionGyroMiniCal::IsInitialized(awd::metrics::MotionGyroMiniCal *this)
{
  return 1;
}

uint64_t awd::metrics::MotionGyroMiniCal::Swap(uint64_t this, awd::metrics::MotionGyroMiniCal *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (awd::metrics::MotionGyroMiniCal *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
  }
  return this;
}

_QWORD *awd::metrics::MotionGyroMiniCal::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionGyroMiniCal");
}

double awd::metrics::MotionDropDetection::SharedCtor(awd::metrics::MotionDropDetection *this)
{
  double result;

  *((_DWORD *)this + 10) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionDropDetection *awd::metrics::MotionDropDetection::MotionDropDetection(awd::metrics::MotionDropDetection *this, const awd::metrics::MotionDropDetection *a2)
{
  *(_QWORD *)this = &off_24D98E8D0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::MotionDropDetection::MergeFrom(this, a2);
  return this;
}

void sub_2189E29EC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::MotionDropDetection::MergeFrom(awd::metrics::MotionDropDetection *this, const awd::metrics::MotionDropDetection *a2)
{
  float result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 10);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 10) |= 2u;
    *((_QWORD *)this + 2) = v7;
    v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    result = *((float *)a2 + 6);
    *((_DWORD *)this + 10) |= 4u;
    *((float *)this + 6) = result;
    v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return result;
      goto LABEL_9;
    }
LABEL_14:
    result = *((float *)a2 + 7);
    *((_DWORD *)this + 10) |= 8u;
    *((float *)this + 7) = result;
    if ((*((_DWORD *)a2 + 10) & 0x10) == 0)
      return result;
LABEL_9:
    result = *((float *)a2 + 8);
    *((_DWORD *)this + 10) |= 0x10u;
    *((float *)this + 8) = result;
  }
  return result;
}

void sub_2189E2B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionDropDetection::~MotionDropDetection(awd::metrics::MotionDropDetection *this)
{
  *(_QWORD *)this = &off_24D98E8D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E8D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E8D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionDropDetection::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::MotionDropDetection::default_instance(awd::metrics::MotionDropDetection *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionDropDetection::default_instance_;
  if (!awd::metrics::MotionDropDetection::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionDropDetection::default_instance_;
  }
  return result;
}

double awd::metrics::MotionDropDetection::New(awd::metrics::MotionDropDetection *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98E8D0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t awd::metrics::MotionDropDetection::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 40))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::MotionDropDetection::MergePartialFromCodedStream(awd::metrics::MotionDropDetection *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t result;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 21)
        {
          *((_QWORD *)a2 + 1) = v11 + 1;
          goto LABEL_29;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 5)
          goto LABEL_20;
LABEL_29:
        v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v21) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v21;
        *((_DWORD *)this + 10) |= 4u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_33:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0)
          return 0;
        *((_DWORD *)this + 7) = v20;
        *((_DWORD *)this + 10) |= 8u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_37:
        v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v19) & 1) != 0)
        {
          *((_DWORD *)this + 8) = v19;
          *((_DWORD *)this + 10) |= 0x10u;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v17 < v12 && *v17 == 40)
          {
            v13 = v17 + 1;
            *((_QWORD *)a2 + 1) = v13;
LABEL_41:
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
              if (!(_DWORD)result)
                return result;
              v18 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v12 = *((_QWORD *)a2 + 2);
            }
            else
            {
              *v5 = *v13;
              v18 = (unsigned __int8 *)(v13 + 1);
              *((_QWORD *)a2 + 1) = v18;
            }
            *((_DWORD *)this + 10) |= 2u;
            if (v18 == (unsigned __int8 *)v12 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_33;
        goto LABEL_20;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_37;
        goto LABEL_20;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_41;
      default:
        v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::MotionDropDetection::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 2) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 40) & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionDropDetection::ByteSize(awd::metrics::MotionDropDetection *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  unsigned int v5;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_15;
  }
  if ((*((_BYTE *)this + 40) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  v2 = *((_DWORD *)this + 10);
  if ((v2 & 2) != 0)
  {
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 2))
        + 1;
    v2 = *((_DWORD *)this + 10);
  }
LABEL_8:
  v5 = v3 + 5;
  if ((v2 & 4) == 0)
    v5 = v3;
  if ((v2 & 8) != 0)
    v5 += 5;
  if ((v2 & 0x10) != 0)
    result = v5 + 5;
  else
    result = v5;
LABEL_15:
  *((_DWORD *)this + 9) = result;
  return result;
}

float awd::metrics::MotionDropDetection::CheckTypeAndMergeFrom(awd::metrics::MotionDropDetection *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::MotionDropDetection::MergeFrom(this, lpsrc);
}

float awd::metrics::MotionDropDetection::CopyFrom(awd::metrics::MotionDropDetection *this, const awd::metrics::MotionDropDetection *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionDropDetection *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::MotionDropDetection::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::MotionDropDetection::IsInitialized(awd::metrics::MotionDropDetection *this)
{
  return 1;
}

float awd::metrics::MotionDropDetection::Swap(awd::metrics::MotionDropDetection *this, awd::metrics::MotionDropDetection *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    result = *((float *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((float *)a2 + 8) = result;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
  }
  return result;
}

_QWORD *awd::metrics::MotionDropDetection::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionDropDetection");
}

double awd::metrics::MotionPedometerCalibration::SharedCtor(awd::metrics::MotionPedometerCalibration *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionPedometerCalibration *awd::metrics::MotionPedometerCalibration::MotionPedometerCalibration(awd::metrics::MotionPedometerCalibration *this, const awd::metrics::MotionPedometerCalibration *a2)
{
  *(_QWORD *)this = &off_24D98E948;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  awd::metrics::MotionPedometerCalibration::MergeFrom(this, a2);
  return this;
}

void sub_2189E31B0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::MotionPedometerCalibration::MergeFrom(awd::metrics::MotionPedometerCalibration *this, const awd::metrics::MotionPedometerCalibration *a2)
{
  float result;
  int v5;
  uint64_t v6;
  int v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 12);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_16;
      }
    }
    else if ((*((_BYTE *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 12) |= 2u;
    *((_DWORD *)this + 4) = v7;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_17;
    }
LABEL_16:
    result = *((float *)a2 + 5);
    *((_DWORD *)this + 12) |= 4u;
    *((float *)this + 5) = result;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_18;
    }
LABEL_17:
    result = *((float *)a2 + 6);
    *((_DWORD *)this + 12) |= 8u;
    *((float *)this + 6) = result;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_19;
    }
LABEL_18:
    result = *((float *)a2 + 7);
    *((_DWORD *)this + 12) |= 0x10u;
    *((float *)this + 7) = result;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_20;
    }
LABEL_19:
    result = *((float *)a2 + 8);
    *((_DWORD *)this + 12) |= 0x20u;
    *((float *)this + 8) = result;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        return result;
      goto LABEL_12;
    }
LABEL_20:
    result = *((float *)a2 + 9);
    *((_DWORD *)this + 12) |= 0x40u;
    *((float *)this + 9) = result;
    if ((*((_DWORD *)a2 + 12) & 0x80) == 0)
      return result;
LABEL_12:
    result = *((float *)a2 + 10);
    *((_DWORD *)this + 12) |= 0x80u;
    *((float *)this + 10) = result;
  }
  return result;
}

void sub_2189E3334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionPedometerCalibration::~MotionPedometerCalibration(awd::metrics::MotionPedometerCalibration *this)
{
  *(_QWORD *)this = &off_24D98E948;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E948;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E948;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionPedometerCalibration::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::MotionPedometerCalibration::default_instance(awd::metrics::MotionPedometerCalibration *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionPedometerCalibration::default_instance_;
  if (!awd::metrics::MotionPedometerCalibration::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionPedometerCalibration::default_instance_;
  }
  return result;
}

double awd::metrics::MotionPedometerCalibration::New(awd::metrics::MotionPedometerCalibration *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98E948;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t awd::metrics::MotionPedometerCalibration::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 48))
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t awd::metrics::MotionPedometerCalibration::MergePartialFromCodedStream(awd::metrics::MotionPedometerCalibration *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  char *v12;
  uint64_t result;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  unsigned int v20;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 16);
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 12) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
          goto LABEL_34;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_34:
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 12) |= 2u;
        if ((unint64_t)v14 >= v9 || *v14 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_42:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v20;
        *((_DWORD *)this + 12) |= 4u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_46:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v20;
        *((_DWORD *)this + 12) |= 8u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_50:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0)
          return 0;
        *((_DWORD *)this + 7) = v20;
        *((_DWORD *)this + 12) |= 0x10u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_54:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0)
          return 0;
        *((_DWORD *)this + 8) = v20;
        *((_DWORD *)this + 12) |= 0x20u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 61)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_58:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0)
          return 0;
        *((_DWORD *)this + 9) = v20;
        *((_DWORD *)this + 12) |= 0x40u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 69)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_62:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) != 0)
        {
          *((_DWORD *)this + 10) = v20;
          *((_DWORD *)this + 12) |= 0x80u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_42;
        goto LABEL_26;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_46;
        goto LABEL_26;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_50;
        goto LABEL_26;
      case 6u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_54;
        goto LABEL_26;
      case 7u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_58;
        goto LABEL_26;
      case 8u:
        v8 = TagFallback & 7;
        if (v8 != 5)
          goto LABEL_26;
        goto LABEL_62;
      default:
        v8 = TagFallback & 7;
LABEL_26:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::MotionPedometerCalibration::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 40), a3);
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 36), a3);
  if ((*(_DWORD *)(v5 + 48) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 40), a3);
  return this;
}

uint64_t awd::metrics::MotionPedometerCalibration::ByteSize(awd::metrics::MotionPedometerCalibration *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  unsigned int v7;

  LOBYTE(v2) = *((_BYTE *)this + 48);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_24;
  }
  if ((*((_BYTE *)this + 48) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 48) & 2) == 0)
      goto LABEL_11;
LABEL_7:
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v6 = 2;
    }
    v3 += v6;
    goto LABEL_11;
  }
  v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  v2 = *((_DWORD *)this + 12);
  if ((v2 & 2) != 0)
    goto LABEL_7;
LABEL_11:
  v7 = v3 + 5;
  if ((v2 & 4) == 0)
    v7 = v3;
  if ((v2 & 8) != 0)
    v7 += 5;
  if ((v2 & 0x10) != 0)
    v7 += 5;
  if ((v2 & 0x20) != 0)
    v7 += 5;
  if ((v2 & 0x40) != 0)
    v7 += 5;
  if ((v2 & 0x80) != 0)
    result = v7 + 5;
  else
    result = v7;
LABEL_24:
  *((_DWORD *)this + 11) = result;
  return result;
}

float awd::metrics::MotionPedometerCalibration::CheckTypeAndMergeFrom(awd::metrics::MotionPedometerCalibration *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::MotionPedometerCalibration::MergeFrom(this, lpsrc);
}

float awd::metrics::MotionPedometerCalibration::CopyFrom(awd::metrics::MotionPedometerCalibration *this, const awd::metrics::MotionPedometerCalibration *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionPedometerCalibration *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::MotionPedometerCalibration::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::MotionPedometerCalibration::IsInitialized(awd::metrics::MotionPedometerCalibration *this)
{
  return 1;
}

float awd::metrics::MotionPedometerCalibration::Swap(awd::metrics::MotionPedometerCalibration *this, awd::metrics::MotionPedometerCalibration *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
    v7 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v7;
    result = *((float *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((float *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
  }
  return result;
}

_QWORD *awd::metrics::MotionPedometerCalibration::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionPedometerCalibration");
}

double awd::metrics::MotionGyroBiasEstimation_EndCount::SharedCtor(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionGyroBiasEstimation_EndCount *awd::metrics::MotionGyroBiasEstimation_EndCount::MotionGyroBiasEstimation_EndCount(awd::metrics::MotionGyroBiasEstimation_EndCount *this, const awd::metrics::MotionGyroBiasEstimation_EndCount *a2)
{
  *(_QWORD *)this = &off_24D98E9C0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom(this, a2);
  return this;
}

void sub_2189E3B88(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom(awd::metrics::MotionGyroBiasEstimation_EndCount *this, const awd::metrics::MotionGyroBiasEstimation_EndCount *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  _BYTE v11[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 9) |= 1u;
      *((_DWORD *)this + 2) = v6;
      v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 9) |= 2u;
    *((_DWORD *)this + 3) = v7;
    v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_15;
    }
LABEL_14:
    v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 9) |= 4u;
    *((_DWORD *)this + 4) = v8;
    v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_16;
    }
LABEL_15:
    v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 9) |= 8u;
    *((_DWORD *)this + 5) = v9;
    v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        return;
      goto LABEL_10;
    }
LABEL_16:
    v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 9) |= 0x10u;
    *((_DWORD *)this + 6) = v10;
    if ((*((_DWORD *)a2 + 9) & 0x20) == 0)
      return;
LABEL_10:
    v5 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 9) |= 0x20u;
    *((_DWORD *)this + 7) = v5;
  }
}

void sub_2189E3CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::~MotionGyroBiasEstimation_EndCount(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  *(_QWORD *)this = &off_24D98E9C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E9C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98E9C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance(awd::metrics::MotionGyroBiasEstimation_EndCount *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
  if (!awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
  }
  return result;
}

double awd::metrics::MotionGyroBiasEstimation_EndCount::New(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98E9C0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::MergePartialFromCodedStream(awd::metrics::MotionGyroBiasEstimation_EndCount *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  uint64_t TagFallback;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  unsigned __int8 *v25;
  uint64_t result;

  v4 = (unsigned int *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 12);
  v6 = (unsigned int *)((char *)this + 16);
  v7 = (unsigned int *)((char *)this + 20);
  v8 = (unsigned int *)((char *)this + 24);
  v9 = (unsigned int *)((char *)this + 28);
  while (2)
  {
    v10 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v14 < v13 && (*v14 & 0x80000000) == 0)
        {
          *v4 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)a2 + 1) = v15;
LABEL_28:
          *((_DWORD *)this + 9) |= 1u;
          if ((unint64_t)v15 < v13 && *v15 == 16)
          {
            v16 = v15 + 1;
            *((_QWORD *)a2 + 1) = v16;
            goto LABEL_31;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
LABEL_31:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v16;
          v21 = v16 + 1;
          *((_QWORD *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 9) |= 2u;
        if ((unint64_t)v21 >= v13 || *v21 != 24)
          continue;
        v17 = v21 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_39:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v17;
          v22 = v17 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 9) |= 4u;
        if ((unint64_t)v22 >= v13 || *v22 != 32)
          continue;
        v18 = v22 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_47:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v23 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v18;
          v23 = v18 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 9) |= 8u;
        if ((unint64_t)v23 >= v13 || *v23 != 40)
          continue;
        v19 = v23 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_55:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v19;
          v24 = v19 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 9) |= 0x10u;
        if ((unint64_t)v24 >= v13 || *v24 != 48)
          continue;
        v20 = v24 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_63:
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v25 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v20;
          v25 = (unsigned __int8 *)(v20 + 1);
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 9) |= 0x20u;
        if (v25 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_39;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_47;
      case 5u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_55;
      case 6u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_63;
      default:
        v12 = TagFallback & 7;
LABEL_22:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *awd::metrics::MotionGyroBiasEstimation_EndCount::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = this;
  v6 = this[9];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  v6 = v5[9];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  v6 = v5[9];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return this;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], (uint64_t)a2, a4);
  }
LABEL_12:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], (uint64_t)a2, a4);
  if ((v5[9] & 0x20) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::ByteSize(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_35;
  }
  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 9);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 36) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 9);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *((_DWORD *)this + 9);
    }
    else
    {
      v8 = 2;
    }
    v3 = (v8 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    v2 = *((_DWORD *)this + 9);
  }
  else
  {
    v10 = 2;
  }
  v3 = (v10 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0)
      goto LABEL_35;
    goto LABEL_31;
  }
LABEL_27:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    v2 = *((_DWORD *)this + 9);
  }
  else
  {
    v12 = 2;
  }
  v3 = (v12 + v3);
  if ((v2 & 0x20) != 0)
  {
LABEL_31:
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if (v13 >= 0x80)
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
    else
      v14 = 2;
    v3 = (v14 + v3);
  }
LABEL_35:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::CheckTypeAndMergeFrom(awd::metrics::MotionGyroBiasEstimation_EndCount *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::CopyFrom(awd::metrics::MotionGyroBiasEstimation_EndCount *this, const awd::metrics::MotionGyroBiasEstimation_EndCount *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionGyroBiasEstimation_EndCount *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::IsInitialized(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  return 1;
}

awd::metrics::MotionGyroBiasEstimation_EndCount *awd::metrics::MotionGyroBiasEstimation_EndCount::Swap(awd::metrics::MotionGyroBiasEstimation_EndCount *this, awd::metrics::MotionGyroBiasEstimation_EndCount *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    v8 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v8;
    v9 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v9;
  }
  return this;
}

_QWORD *awd::metrics::MotionGyroBiasEstimation_EndCount::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionGyroBiasEstimation.EndCount");
}

uint64_t awd::metrics::MotionGyroBiasEstimation::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 52) = 0;
  *(_QWORD *)(this + 68) = 0;
  *(_QWORD *)(this + 60) = 0;
  *(_DWORD *)(this + 76) = 0;
  return this;
}

awd::metrics::MotionGyroBiasEstimation *awd::metrics::MotionGyroBiasEstimation::MotionGyroBiasEstimation(awd::metrics::MotionGyroBiasEstimation *this, const awd::metrics::MotionGyroBiasEstimation *a2)
{
  *(_QWORD *)this = &off_24D98EA38;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 68) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  awd::metrics::MotionGyroBiasEstimation::MergeFrom(this, a2);
  return this;
}

void sub_2189E4538(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t v3;

  v3 = *((_QWORD *)v1 + 4);
  if (v3)
    MEMORY[0x219A1DC64](v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroBiasEstimation::MergeFrom(awd::metrics::MotionGyroBiasEstimation *this, const awd::metrics::MotionGyroBiasEstimation *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  const awd::metrics::MotionGyroBiasEstimation_EndCount *v10;
  uint64_t v11;
  const awd::metrics::MotionGyroBiasEstimation_EndCount *v12;
  int v13;
  int v14;
  int v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = *((_DWORD *)a2 + 10);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 8, *((_DWORD *)this + 10) + v4);
    memcpy((void *)(*((_QWORD *)this + 4) + 4 * *((int *)this + 10)), *((const void **)a2 + 4), 4 * *((int *)a2 + 10));
    *((_DWORD *)this + 10) += *((_DWORD *)a2 + 10);
  }
  v5 = *((_DWORD *)a2 + 19);
  if (!(_BYTE)v5)
    goto LABEL_14;
  if ((v5 & 1) != 0)
  {
    v8 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 19) |= 1u;
    *((_QWORD *)this + 1) = v8;
    v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 2) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0)
        goto LABEL_9;
      goto LABEL_23;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_8;
  }
  *((_DWORD *)this + 19) |= 2u;
  v9 = *((_QWORD *)this + 2);
  if (!v9)
  {
    v9 = operator new();
    *(_QWORD *)v9 = &off_24D98E9C0;
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *((_QWORD *)this + 2) = v9;
  }
  v10 = (const awd::metrics::MotionGyroBiasEstimation_EndCount *)*((_QWORD *)a2 + 2);
  if (!v10)
    v10 = *(const awd::metrics::MotionGyroBiasEstimation_EndCount **)(awd::metrics::MotionGyroBiasEstimation::default_instance_
                                                                    + 16);
  awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom((awd::metrics::MotionGyroBiasEstimation_EndCount *)v9, v10);
  v5 = *((_DWORD *)a2 + 19);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 0x10) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_23:
  *((_DWORD *)this + 19) |= 4u;
  v11 = *((_QWORD *)this + 3);
  if (!v11)
  {
    v11 = operator new();
    *(_QWORD *)v11 = &off_24D98E9C0;
    *(_OWORD *)(v11 + 8) = 0u;
    *(_OWORD *)(v11 + 24) = 0u;
    *((_QWORD *)this + 3) = v11;
  }
  v12 = (const awd::metrics::MotionGyroBiasEstimation_EndCount *)*((_QWORD *)a2 + 3);
  if (!v12)
    v12 = *(const awd::metrics::MotionGyroBiasEstimation_EndCount **)(awd::metrics::MotionGyroBiasEstimation::default_instance_
                                                                    + 24);
  awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom((awd::metrics::MotionGyroBiasEstimation_EndCount *)v11, v12);
  v5 = *((_DWORD *)a2 + 19);
  if ((v5 & 0x10) == 0)
  {
LABEL_10:
    if ((v5 & 0x20) == 0)
      goto LABEL_11;
LABEL_29:
    v14 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 19) |= 0x20u;
    *((_DWORD *)this + 14) = v14;
    v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 0x40) == 0)
    {
LABEL_12:
      if ((v5 & 0x80) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_28:
  v13 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 19) |= 0x10u;
  *((_DWORD *)this + 13) = v13;
  v5 = *((_DWORD *)a2 + 19);
  if ((v5 & 0x20) != 0)
    goto LABEL_29;
LABEL_11:
  if ((v5 & 0x40) == 0)
    goto LABEL_12;
LABEL_30:
  v15 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 19) |= 0x40u;
  *((_DWORD *)this + 15) = v15;
  v5 = *((_DWORD *)a2 + 19);
  if ((v5 & 0x80) != 0)
  {
LABEL_13:
    v6 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 19) |= 0x80u;
    *((_DWORD *)this + 16) = v6;
    v5 = *((_DWORD *)a2 + 19);
  }
LABEL_14:
  if ((v5 & 0x100) != 0)
  {
    v7 = *((_DWORD *)a2 + 17);
    *((_DWORD *)this + 19) |= 0x100u;
    *((_DWORD *)this + 17) = v7;
  }
}

void sub_2189E47B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroBiasEstimation::~MotionGyroBiasEstimation(awd::metrics::MotionGyroBiasEstimation *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D98EA38;
  awd::metrics::MotionGyroBiasEstimation::SharedDtor(this);
  v2 = *((_QWORD *)this + 4);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::MotionGyroBiasEstimation::~MotionGyroBiasEstimation(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::MotionGyroBiasEstimation::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;

  if ((_QWORD *)awd::metrics::MotionGyroBiasEstimation::default_instance_ != this)
  {
    v1 = this;
    v2 = this[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    this = (_QWORD *)v1[3];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation::default_instance(awd::metrics::MotionGyroBiasEstimation *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionGyroBiasEstimation::default_instance_;
  if (!awd::metrics::MotionGyroBiasEstimation::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionGyroBiasEstimation::default_instance_;
  }
  return result;
}

double awd::metrics::MotionGyroBiasEstimation::New(awd::metrics::MotionGyroBiasEstimation *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98EA38;
  *(_QWORD *)(v1 + 52) = 0;
  *(_QWORD *)(v1 + 68) = 0;
  *(_QWORD *)(v1 + 60) = 0;
  *(_DWORD *)(v1 + 76) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t awd::metrics::MotionGyroBiasEstimation::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_DWORD *)(this + 76);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 76);
      }
    }
    if ((v1 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v1 = *(_DWORD *)(this + 76);
      }
    }
    *(_QWORD *)(this + 60) = 0;
    *(_QWORD *)(this + 52) = 0;
  }
  if ((v1 & 0xFF00) != 0)
    *(_DWORD *)(this + 68) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 76) = 0;
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation::MergePartialFromCodedStream(awd::metrics::MotionGyroBiasEstimation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  unint64_t *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  int v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  char *v26;
  int v27;
  int v28;
  int v29;
  BOOL v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  char *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _BYTE *v39;
  char *v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  unsigned int v48;
  _BYTE *v49;
  unsigned int v50;
  unsigned __int8 *v51;
  unsigned int v52;
  unsigned int v53;

  v4 = (_DWORD *)((char *)this + 32);
  v5 = (unint64_t *)((char *)this + 8);
  v6 = (unsigned int *)((char *)this + 52);
  v7 = (unsigned int *)((char *)this + 56);
  v8 = (unsigned int *)((char *)this + 60);
  while (2)
  {
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        v15 = *((_DWORD *)this + 19) | 1;
        *((_DWORD *)this + 19) = v15;
        if ((unint64_t)v14 < v12 && *v14 == 18)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
          goto LABEL_40;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_29;
        v15 = *((_DWORD *)this + 19);
LABEL_40:
        *((_DWORD *)this + 19) = v15 | 2;
        v25 = *((_QWORD *)this + 2);
        if (!v25)
        {
          v25 = operator new();
          *(_QWORD *)v25 = &off_24D98E9C0;
          *(_OWORD *)(v25 + 8) = 0u;
          *(_OWORD *)(v25 + 24) = 0u;
          *((_QWORD *)this + 2) = v25;
        }
        v53 = 0;
        v26 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))return 0;
        }
        else
        {
          v53 = *v26;
          *((_QWORD *)a2 + 1) = v26 + 1;
        }
        v27 = *((_DWORD *)a2 + 14);
        v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::MotionGyroBiasEstimation_EndCount::MergePartialFromCodedStream((awd::metrics::MotionGyroBiasEstimation_EndCount *)v25, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v29 = *((_DWORD *)a2 + 14);
        v30 = __OFSUB__(v29, 1);
        v31 = v29 - 1;
        if (v31 < 0 == v30)
          *((_DWORD *)a2 + 14) = v31;
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v32 + 1;
LABEL_54:
        *((_DWORD *)this + 19) |= 4u;
        v33 = *((_QWORD *)this + 3);
        if (!v33)
        {
          v33 = operator new();
          *(_QWORD *)v33 = &off_24D98E9C0;
          *(_OWORD *)(v33 + 8) = 0u;
          *(_OWORD *)(v33 + 24) = 0u;
          *((_QWORD *)this + 3) = v33;
        }
        v53 = 0;
        v34 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))return 0;
        }
        else
        {
          v53 = *v34;
          *((_QWORD *)a2 + 1) = v34 + 1;
        }
        v35 = *((_DWORD *)a2 + 14);
        v36 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v35 + 1;
        if (v35 >= v36)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::MotionGyroBiasEstimation_EndCount::MergePartialFromCodedStream((awd::metrics::MotionGyroBiasEstimation_EndCount *)v33, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v37 = *((_DWORD *)a2 + 14);
        v30 = __OFSUB__(v37, 1);
        v38 = v37 - 1;
        if (v38 < 0 == v30)
          *((_DWORD *)a2 + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v39 >= v17 || *v39 != 34)
          continue;
        v16 = v39 + 1;
        *((_QWORD *)a2 + 1) = v16;
        goto LABEL_68;
      case 3u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_54;
        goto LABEL_29;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(1, 0x22u, a2, v4);
          if (!(_DWORD)result)
            return result;
LABEL_82:
          v44 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v44 < v18 && *v44 == 40)
          {
            v19 = v44 + 1;
            *((_QWORD *)a2 + 1) = v19;
LABEL_85:
            if ((unint64_t)v19 >= v18 || *v19 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
              if (!(_DWORD)result)
                return result;
              v45 = (_BYTE *)*((_QWORD *)a2 + 1);
              v18 = *((_QWORD *)a2 + 2);
            }
            else
            {
              *v6 = *v19;
              v45 = v19 + 1;
              *((_QWORD *)a2 + 1) = v45;
            }
            *((_DWORD *)this + 19) |= 0x10u;
            if ((unint64_t)v45 < v18 && *v45 == 48)
            {
              v20 = v45 + 1;
              *((_QWORD *)a2 + 1) = v20;
LABEL_93:
              if ((unint64_t)v20 >= v18 || *v20 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
                if (!(_DWORD)result)
                  return result;
                v46 = (_BYTE *)*((_QWORD *)a2 + 1);
                v18 = *((_QWORD *)a2 + 2);
              }
              else
              {
                *v7 = *v20;
                v46 = v20 + 1;
                *((_QWORD *)a2 + 1) = v46;
              }
              *((_DWORD *)this + 19) |= 0x20u;
              if ((unint64_t)v46 < v18 && *v46 == 56)
              {
                v21 = v46 + 1;
                *((_QWORD *)a2 + 1) = v21;
LABEL_101:
                if ((unint64_t)v21 >= v18 || *v21 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
                  if (!(_DWORD)result)
                    return result;
                  v47 = (_BYTE *)*((_QWORD *)a2 + 1);
                  v18 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  *v8 = *v21;
                  v47 = v21 + 1;
                  *((_QWORD *)a2 + 1) = v47;
                }
                *((_DWORD *)this + 19) |= 0x40u;
                if ((unint64_t)v47 < v18 && *v47 == 64)
                {
                  v22 = v47 + 1;
                  *((_QWORD *)a2 + 1) = v22;
LABEL_109:
                  v53 = 0;
                  if ((unint64_t)v22 >= v18 || *v22 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
                    if (!(_DWORD)result)
                      return result;
                    v48 = v53;
                    v49 = (_BYTE *)*((_QWORD *)a2 + 1);
                    v18 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    v48 = *v22;
                    v49 = v22 + 1;
                    *((_QWORD *)a2 + 1) = v49;
                  }
                  *((_DWORD *)this + 16) = v48;
                  *((_DWORD *)this + 19) |= 0x80u;
                  if ((unint64_t)v49 < v18 && *v49 == 72)
                  {
                    v23 = v49 + 1;
                    *((_QWORD *)a2 + 1) = v23;
LABEL_117:
                    v53 = 0;
                    if ((unint64_t)v23 >= v18 || *v23 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
                      if (!(_DWORD)result)
                        return result;
                      v50 = v53;
                      v51 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                      v18 = *((_QWORD *)a2 + 2);
                    }
                    else
                    {
                      v50 = *v23;
                      v51 = (unsigned __int8 *)(v23 + 1);
                      *((_QWORD *)a2 + 1) = v51;
                    }
                    *((_DWORD *)this + 17) = v50;
                    *((_DWORD *)this + 19) |= 0x100u;
                    if (v51 == (unsigned __int8 *)v18
                      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                    {
                      *((_DWORD *)a2 + 8) = 0;
                      result = 1;
                      *((_BYTE *)a2 + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        if (v11 != 2)
        {
LABEL_29:
          if (v11 == 4)
            return 1;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        v16 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
LABEL_68:
        v53 = 0;
        if ((unint64_t)v16 < v17 && (*v16 & 0x80000000) == 0)
        {
          v53 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
          goto LABEL_72;
        }
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))
        {
LABEL_72:
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v52 = 0;
            v40 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0;
            }
            else
            {
              v52 = *v40;
              *((_QWORD *)a2 + 1) = v40 + 1;
            }
            v41 = *((_DWORD *)this + 10);
            if (v41 == *((_DWORD *)this + 11))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v4, v41 + 1);
              v41 = *((_DWORD *)this + 10);
            }
            v42 = v52;
            v43 = *((_QWORD *)this + 4);
            *((_DWORD *)this + 10) = v41 + 1;
            *(_DWORD *)(v43 + 4 * v41) = v42;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          goto LABEL_82;
        }
        return 0;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_85;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_93;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_101;
      case 8u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_109;
      case 9u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_117;
      default:
        v11 = TagFallback & 7;
        goto LABEL_29;
    }
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a4)
{
  char *v7;
  uint64_t result;
  int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  int v13;
  unint64_t v14;
  unsigned __int8 *v15;
  char *v16;
  unsigned __int8 *v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  _BYTE v22[48];

  v21 = 0;
  v7 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v21 = *v7;
    *((_QWORD *)this + 1) = v7 + 1;
  }
  v9 = a4[2];
  if (v9 == a4[3])
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(a4, v9 + 1);
    v9 = a4[2];
  }
  v10 = v21;
  v11 = *(_QWORD *)a4;
  a4[2] = v9 + 1;
  *(_DWORD *)(v11 + 4 * v9) = v10;
  v12 = a4[3] - a4[2];
  if (v12 >= 1)
  {
    v13 = v12 + 1;
    do
    {
      if (a2 > 0x7F)
      {
        if (a2 >> 14)
          return 1;
        v17 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((int)v14 - (int)v17 < 2 || (a2 & 0x7F | 0x80) != *v17 || v17[1] != (a2 >> 7))
          return 1;
        v16 = (char *)(v17 + 2);
      }
      else
      {
        v15 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != a2)
          return 1;
        v16 = (char *)(v15 + 1);
      }
      *((_QWORD *)this + 1) = v16;
      if ((unint64_t)v16 >= v14 || *v16 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v21 = *v16;
        *((_QWORD *)this + 1) = v16 + 1;
      }
      v18 = a4[2];
      if (v18 >= a4[3])
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
        v18 = a4[2];
      }
      v19 = v21;
      v20 = *(_QWORD *)a4;
      a4[2] = v18 + 1;
      *(_DWORD *)(v20 + 4 * v18) = v19;
      --v13;
    }
    while (v13 > 1);
  }
  return 1;
}

void sub_2189E5274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::MotionGyroBiasEstimation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 76);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_12;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(awd::metrics::MotionGyroBiasEstimation::default_instance_ + 16);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 4) != 0)
  {
LABEL_9:
    v8 = *(_QWORD *)(v5 + 24);
    if (!v8)
      v8 = *(_QWORD *)(awd::metrics::MotionGyroBiasEstimation::default_instance_ + 24);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  }
LABEL_12:
  if (*(int *)(v5 + 40) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 40) >= 1)
    {
      v9 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v9;
      }
      while (v9 < *(int *)(v5 + 40));
    }
  }
  v10 = *(_DWORD *)(v5 + 76);
  if ((v10 & 0x10) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
    v10 = *(_DWORD *)(v5 + 76);
    if ((v10 & 0x20) == 0)
    {
LABEL_18:
      if ((v10 & 0x40) == 0)
        goto LABEL_19;
      goto LABEL_24;
    }
  }
  else if ((v10 & 0x20) == 0)
  {
    goto LABEL_18;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 76);
  if ((v10 & 0x40) == 0)
  {
LABEL_19:
    if ((v10 & 0x80) == 0)
      goto LABEL_20;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 76);
  if ((v10 & 0x80) == 0)
  {
LABEL_20:
    if ((v10 & 0x100) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 0x100) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation::ByteSize(awd::metrics::MotionGyroBiasEstimation *this)
{
  int v2;
  int v3;
  awd::metrics::MotionGyroBiasEstimation_EndCount *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  awd::metrics::MotionGyroBiasEstimation_EndCount *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;
  uint64_t v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  uint64_t result;

  v2 = *((_DWORD *)this + 19);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    if ((v2 & 0x100) == 0)
      goto LABEL_51;
    goto LABEL_45;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 19);
    if ((v2 & 2) == 0)
      goto LABEL_14;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_14;
  }
  v4 = (awd::metrics::MotionGyroBiasEstimation_EndCount *)*((_QWORD *)this + 2);
  if (!v4)
    v4 = *(awd::metrics::MotionGyroBiasEstimation_EndCount **)(awd::metrics::MotionGyroBiasEstimation::default_instance_
                                                             + 16);
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::MotionGyroBiasEstimation_EndCount::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v7 = 1;
  v3 += v6 + v7 + 1;
  v2 = *((_DWORD *)this + 19);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v8 = (awd::metrics::MotionGyroBiasEstimation_EndCount *)*((_QWORD *)this + 3);
    if (!v8)
      v8 = *(awd::metrics::MotionGyroBiasEstimation_EndCount **)(awd::metrics::MotionGyroBiasEstimation::default_instance_
                                                               + 24);
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::MotionGyroBiasEstimation_EndCount::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 += v10 + v11 + 1;
    v2 = *((_DWORD *)this + 19);
    if ((v2 & 0x10) == 0)
    {
LABEL_16:
      if ((v2 & 0x20) == 0)
        goto LABEL_17;
      goto LABEL_31;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0)
      goto LABEL_18;
    goto LABEL_35;
  }
LABEL_31:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0)
      goto LABEL_19;
    goto LABEL_39;
  }
LABEL_35:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x80) == 0)
  {
LABEL_19:
    if ((v2 & 0x100) == 0)
      goto LABEL_51;
    goto LABEL_45;
  }
LABEL_39:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v18 & 0x80000000) != 0)
  {
    v19 = 11;
  }
  else if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    v2 = *((_DWORD *)this + 19);
  }
  else
  {
    v19 = 2;
  }
  v3 += v19;
  if ((v2 & 0x100) != 0)
  {
LABEL_45:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 11;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    }
    else
    {
      v21 = 2;
    }
    v3 += v21;
  }
LABEL_51:
  v22 = *((_DWORD *)this + 10);
  if (v22 < 1)
  {
    LODWORD(v24) = 0;
  }
  else
  {
    v23 = 0;
    LODWORD(v24) = 0;
    do
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 4)
                                                                                             + 4 * v23);
      if (v25 >= 0x80)
      {
        v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
        v22 = *((_DWORD *)this + 10);
      }
      else
      {
        v26 = 1;
      }
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v26 + (_DWORD)v24);
      ++v23;
    }
    while (v23 < v22);
    if ((int)v24 > 0)
    {
      if (v24 >= 0x80)
        v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
      else
        v27 = 2;
      v3 += v27;
    }
  }
  *((_DWORD *)this + 12) = (_DWORD)v24;
  result = (v3 + (_DWORD)v24);
  *((_DWORD *)this + 18) = result;
  return result;
}

void awd::metrics::MotionGyroBiasEstimation::CheckTypeAndMergeFrom(awd::metrics::MotionGyroBiasEstimation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionGyroBiasEstimation::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionGyroBiasEstimation::CopyFrom(awd::metrics::MotionGyroBiasEstimation *this, const awd::metrics::MotionGyroBiasEstimation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionGyroBiasEstimation *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionGyroBiasEstimation::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionGyroBiasEstimation::IsInitialized(awd::metrics::MotionGyroBiasEstimation *this)
{
  return 1;
}

double awd::metrics::MotionGyroBiasEstimation::Swap(awd::metrics::MotionGyroBiasEstimation *this, awd::metrics::MotionGyroBiasEstimation *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    v6 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    result = *((double *)a2 + 5);
    *((_QWORD *)a2 + 4) = v6;
    v8 = *((_QWORD *)this + 5);
    *((double *)this + 5) = result;
    *((_QWORD *)a2 + 5) = v8;
    LODWORD(v6) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v6;
    LODWORD(v6) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v6;
    LODWORD(v6) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v6;
    LODWORD(v6) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v6;
    LODWORD(v6) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v6;
    LODWORD(v6) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v6;
    LODWORD(v6) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v6;
  }
  return result;
}

_QWORD *awd::metrics::MotionGyroBiasEstimation::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionGyroBiasEstimation");
}

BOOL awd::metrics::MotionFitnessSession_WorkoutType_IsValid(awd::metrics *this)
{
  return this < 0x19;
}

BOOL awd::metrics::MotionFitnessSession_HRSource_IsValid(awd::metrics *this)
{
  return this < 2;
}

BOOL awd::metrics::MotionFitnessSession_StrideCalibrationStatus_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::MotionFitnessSession_MotionCalibrationStatus_IsValid(awd::metrics *this)
{
  return this < 5;
}

double awd::metrics::MotionFitnessSession::SharedCtor(awd::metrics::MotionFitnessSession *this)
{
  uint64_t v1;
  double result;

  *((_DWORD *)this + 112) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_BYTE *)this + 52) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = v1;
  *(_QWORD *)((char *)this + 460) = 0;
  *(_QWORD *)((char *)this + 452) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 53) = 0u;
  *(_OWORD *)((char *)this + 69) = 0u;
  *(_OWORD *)((char *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 101) = 0u;
  *(_OWORD *)((char *)this + 117) = 0u;
  *(_OWORD *)((char *)this + 133) = 0u;
  *(_OWORD *)((char *)this + 149) = 0u;
  *(_OWORD *)((char *)this + 165) = 0u;
  *(_OWORD *)((char *)this + 181) = 0u;
  *(_OWORD *)((char *)this + 197) = 0u;
  *(_OWORD *)((char *)this + 213) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 365) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  return result;
}

awd::metrics::MotionFitnessSession *awd::metrics::MotionFitnessSession::MotionFitnessSession(awd::metrics::MotionFitnessSession *this, const awd::metrics::MotionFitnessSession *a2)
{
  uint64_t v3;

  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 31) = 0;
  *((_DWORD *)this + 112) = 0;
  *(_QWORD *)this = &off_24D98EAB0;
  *((_QWORD *)this + 1) = 0;
  *((_BYTE *)this + 52) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = v3;
  *(_QWORD *)((char *)this + 460) = 0;
  *(_QWORD *)((char *)this + 452) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *(_OWORD *)((char *)this + 53) = 0u;
  *(_OWORD *)((char *)this + 69) = 0u;
  *(_OWORD *)((char *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 101) = 0u;
  *(_OWORD *)((char *)this + 117) = 0u;
  *(_OWORD *)((char *)this + 133) = 0u;
  *(_OWORD *)((char *)this + 149) = 0u;
  *(_OWORD *)((char *)this + 165) = 0u;
  *(_OWORD *)((char *)this + 181) = 0u;
  *(_OWORD *)((char *)this + 197) = 0u;
  *(_OWORD *)((char *)this + 213) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 365) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  awd::metrics::MotionFitnessSession::MergeFrom(this, a2);
  return this;
}

void sub_2189E59D8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = v2;
  if (*v3)
    MEMORY[0x219A1DC64](*v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessSession::MergeFrom(awd::metrics::MotionFitnessSession *this, const awd::metrics::MotionFitnessSession *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  char v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  char v14;
  char v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  char v27;
  const std::string *v28;
  std::string *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  char v40;
  int v41;
  int v42;
  char v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  char v90;
  int v91;
  int v92;
  int v93;
  int v94;
  uint64_t v95;
  int v96;
  int v97;
  int v98;
  int v99;
  char v100;
  char v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  _BYTE v116[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v116);
  }
  v4 = *((_DWORD *)a2 + 62);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 60, *((_DWORD *)this + 62) + v4);
    memcpy((void *)(*((_QWORD *)this + 30) + 4 * *((int *)this + 62)), *((const void **)a2 + 30), 4 * *((int *)a2 + 62));
    *((_DWORD *)this + 62) += *((_DWORD *)a2 + 62);
  }
  v5 = *((_DWORD *)a2 + 113);
  if (!(_BYTE)v5)
    goto LABEL_18;
  if ((v5 & 1) != 0)
  {
    v6 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 113) |= 1u;
    *((_QWORD *)this + 1) = v6;
    v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 2) != 0)
  {
    v7 = *((_DWORD *)a2 + 4);
    if (v7 >= 0x19)
      awd::metrics::MotionFitnessSession::MergeFrom();
    *((_DWORD *)this + 113) |= 2u;
    *((_DWORD *)this + 4) = v7;
    v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 4) != 0)
  {
    v27 = *((_BYTE *)a2 + 52);
    *((_DWORD *)this + 113) |= 4u;
    *((_BYTE *)this + 52) = v27;
    v5 = *((_DWORD *)a2 + 113);
    if ((v5 & 8) == 0)
    {
LABEL_13:
      if ((v5 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_142;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_13;
  }
  v28 = (const std::string *)*((_QWORD *)a2 + 3);
  *((_DWORD *)this + 113) |= 8u;
  v29 = (std::string *)*((_QWORD *)this + 3);
  if (v29 == (std::string *)MEMORY[0x24BEDD958])
  {
    v29 = (std::string *)operator new();
    v29->__r_.__value_.__l.__size_ = 0;
    v29->__r_.__value_.__r.__words[2] = 0;
    v29->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 3) = v29;
  }
  std::string::operator=(v29, v28);
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x10) == 0)
  {
LABEL_14:
    if ((v5 & 0x20) == 0)
      goto LABEL_15;
LABEL_143:
    v31 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 113) |= 0x20u;
    *((_DWORD *)this + 8) = v31;
    v5 = *((_DWORD *)a2 + 113);
    if ((v5 & 0x40) == 0)
    {
LABEL_16:
      if ((v5 & 0x80) == 0)
        goto LABEL_18;
      goto LABEL_17;
    }
    goto LABEL_144;
  }
LABEL_142:
  v30 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 113) |= 0x10u;
  *((_DWORD *)this + 5) = v30;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x20) != 0)
    goto LABEL_143;
LABEL_15:
  if ((v5 & 0x40) == 0)
    goto LABEL_16;
LABEL_144:
  v32 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 113) |= 0x40u;
  *((_DWORD *)this + 9) = v32;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x80) != 0)
  {
LABEL_17:
    v8 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 113) |= 0x80u;
    *((_DWORD *)this + 10) = v8;
    v5 = *((_DWORD *)a2 + 113);
  }
LABEL_18:
  if ((v5 & 0xFF00) == 0)
    goto LABEL_36;
  if ((v5 & 0x100) != 0)
  {
    v9 = *((_BYTE *)a2 + 53);
    *((_DWORD *)this + 113) |= 0x100u;
    *((_BYTE *)this + 53) = v9;
    v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x200) != 0)
  {
    v10 = *((_DWORD *)a2 + 11);
    if (v10 >= 2)
      awd::metrics::MotionFitnessSession::MergeFrom();
    *((_DWORD *)this + 113) |= 0x200u;
    *((_DWORD *)this + 11) = v10;
    v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x400) != 0)
  {
    v11 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 113) |= 0x400u;
    *((_DWORD *)this + 12) = v11;
    v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x800) != 0)
  {
    v12 = *((_DWORD *)a2 + 14);
    if (v12 >= 5)
      awd::metrics::MotionFitnessSession::MergeFrom();
    *((_DWORD *)this + 113) |= 0x800u;
    *((_DWORD *)this + 14) = v12;
    v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x1000) != 0)
  {
    v13 = *((_DWORD *)a2 + 15);
    if (v13 >= 5)
      awd::metrics::MotionFitnessSession::MergeFrom();
    *((_DWORD *)this + 113) |= 0x1000u;
    *((_DWORD *)this + 15) = v13;
    v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x2000) != 0)
  {
    v33 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 113) |= 0x2000u;
    *((_DWORD *)this + 16) = v33;
    v5 = *((_DWORD *)a2 + 113);
    if ((v5 & 0x4000) == 0)
    {
LABEL_34:
      if ((v5 & 0x8000) == 0)
        goto LABEL_36;
      goto LABEL_35;
    }
  }
  else if ((v5 & 0x4000) == 0)
  {
    goto LABEL_34;
  }
  v34 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 113) |= 0x4000u;
  *((_DWORD *)this + 17) = v34;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x8000) != 0)
  {
LABEL_35:
    v14 = *((_BYTE *)a2 + 54);
    *((_DWORD *)this + 113) |= 0x8000u;
    *((_BYTE *)this + 54) = v14;
    v5 = *((_DWORD *)a2 + 113);
  }
LABEL_36:
  if ((v5 & 0xFF0000) == 0)
    goto LABEL_51;
  if ((v5 & 0x10000) != 0)
  {
    v15 = *((_BYTE *)a2 + 55);
    *((_DWORD *)this + 113) |= 0x10000u;
    *((_BYTE *)this + 55) = v15;
    v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x20000) != 0)
  {
    v16 = *((_DWORD *)a2 + 18);
    if (v16 >= 5)
      awd::metrics::MotionFitnessSession::MergeFrom();
    *((_DWORD *)this + 113) |= 0x20000u;
    *((_DWORD *)this + 18) = v16;
    v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x40000) != 0)
  {
    v17 = *((_DWORD *)a2 + 19);
    if (v17 >= 5)
      awd::metrics::MotionFitnessSession::MergeFrom();
    *((_DWORD *)this + 113) |= 0x40000u;
    *((_DWORD *)this + 19) = v17;
    v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x80000) != 0)
  {
    v77 = *((_DWORD *)a2 + 20);
    *((_DWORD *)this + 113) |= 0x80000u;
    *((_DWORD *)this + 20) = v77;
    v5 = *((_DWORD *)a2 + 113);
    if ((v5 & 0x100000) == 0)
    {
LABEL_47:
      if ((v5 & 0x200000) == 0)
        goto LABEL_48;
      goto LABEL_199;
    }
  }
  else if ((v5 & 0x100000) == 0)
  {
    goto LABEL_47;
  }
  v78 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 113) |= 0x100000u;
  *((_DWORD *)this + 21) = v78;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x200000) == 0)
  {
LABEL_48:
    if ((v5 & 0x400000) == 0)
      goto LABEL_49;
    goto LABEL_200;
  }
LABEL_199:
  v79 = *((_DWORD *)a2 + 22);
  *((_DWORD *)this + 113) |= 0x200000u;
  *((_DWORD *)this + 22) = v79;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x400000) == 0)
  {
LABEL_49:
    if ((v5 & 0x800000) == 0)
      goto LABEL_51;
    goto LABEL_50;
  }
LABEL_200:
  v80 = *((_DWORD *)a2 + 23);
  *((_DWORD *)this + 113) |= 0x400000u;
  *((_DWORD *)this + 23) = v80;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x800000) != 0)
  {
LABEL_50:
    v18 = *((_DWORD *)a2 + 24);
    *((_DWORD *)this + 113) |= 0x800000u;
    *((_DWORD *)this + 24) = v18;
    v5 = *((_DWORD *)a2 + 113);
  }
LABEL_51:
  if (!HIBYTE(v5))
    goto LABEL_60;
  if ((v5 & 0x1000000) != 0)
  {
    v81 = *((_DWORD *)a2 + 25);
    *((_DWORD *)this + 113) |= 0x1000000u;
    *((_DWORD *)this + 25) = v81;
    v5 = *((_DWORD *)a2 + 113);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_54:
      if ((v5 & 0x4000000) == 0)
        goto LABEL_55;
      goto LABEL_204;
    }
  }
  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_54;
  }
  v82 = *((_DWORD *)a2 + 26);
  *((_DWORD *)this + 113) |= 0x2000000u;
  *((_DWORD *)this + 26) = v82;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_55:
    if ((v5 & 0x8000000) == 0)
      goto LABEL_56;
    goto LABEL_205;
  }
LABEL_204:
  v83 = *((_DWORD *)a2 + 27);
  *((_DWORD *)this + 113) |= 0x4000000u;
  *((_DWORD *)this + 27) = v83;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_56:
    if ((v5 & 0x10000000) == 0)
      goto LABEL_57;
    goto LABEL_206;
  }
LABEL_205:
  v84 = *((_DWORD *)a2 + 28);
  *((_DWORD *)this + 113) |= 0x8000000u;
  *((_DWORD *)this + 28) = v84;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_57:
    if ((v5 & 0x20000000) == 0)
      goto LABEL_58;
    goto LABEL_207;
  }
LABEL_206:
  v85 = *((_DWORD *)a2 + 29);
  *((_DWORD *)this + 113) |= 0x10000000u;
  *((_DWORD *)this + 29) = v85;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x40000000) == 0)
      goto LABEL_59;
LABEL_208:
    v87 = *((_DWORD *)a2 + 31);
    *((_DWORD *)this + 113) |= 0x40000000u;
    *((_DWORD *)this + 31) = v87;
    if ((*((_DWORD *)a2 + 113) & 0x80000000) == 0)
      goto LABEL_60;
    goto LABEL_209;
  }
LABEL_207:
  v86 = *((_DWORD *)a2 + 30);
  *((_DWORD *)this + 113) |= 0x20000000u;
  *((_DWORD *)this + 30) = v86;
  v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x40000000) != 0)
    goto LABEL_208;
LABEL_59:
  if ((v5 & 0x80000000) == 0)
    goto LABEL_60;
LABEL_209:
  v88 = *((_DWORD *)a2 + 32);
  *((_DWORD *)this + 113) |= 0x80000000;
  *((_DWORD *)this + 32) = v88;
LABEL_60:
  v19 = *((_DWORD *)a2 + 114);
  if (!(_BYTE)v19)
    goto LABEL_70;
  if ((v19 & 1) != 0)
  {
    v35 = *((_DWORD *)a2 + 33);
    *((_DWORD *)this + 114) |= 1u;
    *((_DWORD *)this + 33) = v35;
    v19 = *((_DWORD *)a2 + 114);
    if ((v19 & 2) == 0)
    {
LABEL_63:
      if ((v19 & 4) == 0)
        goto LABEL_64;
      goto LABEL_151;
    }
  }
  else if ((v19 & 2) == 0)
  {
    goto LABEL_63;
  }
  v36 = *((_DWORD *)a2 + 34);
  *((_DWORD *)this + 114) |= 2u;
  *((_DWORD *)this + 34) = v36;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 4) == 0)
  {
LABEL_64:
    if ((v19 & 8) == 0)
      goto LABEL_65;
    goto LABEL_152;
  }
LABEL_151:
  v37 = *((_DWORD *)a2 + 35);
  *((_DWORD *)this + 114) |= 4u;
  *((_DWORD *)this + 35) = v37;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 8) == 0)
  {
LABEL_65:
    if ((v19 & 0x10) == 0)
      goto LABEL_66;
    goto LABEL_153;
  }
LABEL_152:
  v38 = *((_DWORD *)a2 + 36);
  *((_DWORD *)this + 114) |= 8u;
  *((_DWORD *)this + 36) = v38;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x10) == 0)
  {
LABEL_66:
    if ((v19 & 0x20) == 0)
      goto LABEL_67;
    goto LABEL_154;
  }
LABEL_153:
  v39 = *((_DWORD *)a2 + 37);
  *((_DWORD *)this + 114) |= 0x10u;
  *((_DWORD *)this + 37) = v39;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x20) == 0)
  {
LABEL_67:
    if ((v19 & 0x40) == 0)
      goto LABEL_68;
    goto LABEL_155;
  }
LABEL_154:
  v40 = *((_BYTE *)a2 + 224);
  *((_DWORD *)this + 114) |= 0x20u;
  *((_BYTE *)this + 224) = v40;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x40) == 0)
  {
LABEL_68:
    if ((v19 & 0x80) == 0)
      goto LABEL_70;
    goto LABEL_69;
  }
LABEL_155:
  v41 = *((_DWORD *)a2 + 38);
  *((_DWORD *)this + 114) |= 0x40u;
  *((_DWORD *)this + 38) = v41;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x80) != 0)
  {
LABEL_69:
    v20 = *((_DWORD *)a2 + 39);
    *((_DWORD *)this + 114) |= 0x80u;
    *((_DWORD *)this + 39) = v20;
    v19 = *((_DWORD *)a2 + 114);
  }
LABEL_70:
  if ((v19 & 0xFF00) == 0)
    goto LABEL_80;
  if ((v19 & 0x100) != 0)
  {
    v42 = *((_DWORD *)a2 + 40);
    *((_DWORD *)this + 114) |= 0x100u;
    *((_DWORD *)this + 40) = v42;
    v19 = *((_DWORD *)a2 + 114);
    if ((v19 & 0x200) == 0)
    {
LABEL_73:
      if ((v19 & 0x400) == 0)
        goto LABEL_74;
      goto LABEL_159;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_73;
  }
  v43 = *((_BYTE *)a2 + 225);
  *((_DWORD *)this + 114) |= 0x200u;
  *((_BYTE *)this + 225) = v43;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x400) == 0)
  {
LABEL_74:
    if ((v19 & 0x800) == 0)
      goto LABEL_75;
    goto LABEL_160;
  }
LABEL_159:
  v44 = *((_DWORD *)a2 + 41);
  *((_DWORD *)this + 114) |= 0x400u;
  *((_DWORD *)this + 41) = v44;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x800) == 0)
  {
LABEL_75:
    if ((v19 & 0x1000) == 0)
      goto LABEL_76;
    goto LABEL_161;
  }
LABEL_160:
  v45 = *((_DWORD *)a2 + 42);
  *((_DWORD *)this + 114) |= 0x800u;
  *((_DWORD *)this + 42) = v45;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x1000) == 0)
  {
LABEL_76:
    if ((v19 & 0x2000) == 0)
      goto LABEL_77;
    goto LABEL_162;
  }
LABEL_161:
  v46 = *((_DWORD *)a2 + 43);
  *((_DWORD *)this + 114) |= 0x1000u;
  *((_DWORD *)this + 43) = v46;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x2000) == 0)
  {
LABEL_77:
    if ((v19 & 0x4000) == 0)
      goto LABEL_78;
    goto LABEL_163;
  }
LABEL_162:
  v47 = *((_DWORD *)a2 + 44);
  *((_DWORD *)this + 114) |= 0x2000u;
  *((_DWORD *)this + 44) = v47;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x4000) == 0)
  {
LABEL_78:
    if ((v19 & 0x8000) == 0)
      goto LABEL_80;
    goto LABEL_79;
  }
LABEL_163:
  v48 = *((_DWORD *)a2 + 45);
  *((_DWORD *)this + 114) |= 0x4000u;
  *((_DWORD *)this + 45) = v48;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x8000) != 0)
  {
LABEL_79:
    v21 = *((_DWORD *)a2 + 46);
    *((_DWORD *)this + 114) |= 0x8000u;
    *((_DWORD *)this + 46) = v21;
    v19 = *((_DWORD *)a2 + 114);
  }
LABEL_80:
  if ((v19 & 0xFF0000) == 0)
    goto LABEL_90;
  if ((v19 & 0x10000) != 0)
  {
    v49 = *((_DWORD *)a2 + 47);
    *((_DWORD *)this + 114) |= 0x10000u;
    *((_DWORD *)this + 47) = v49;
    v19 = *((_DWORD *)a2 + 114);
    if ((v19 & 0x20000) == 0)
    {
LABEL_83:
      if ((v19 & 0x40000) == 0)
        goto LABEL_84;
      goto LABEL_167;
    }
  }
  else if ((v19 & 0x20000) == 0)
  {
    goto LABEL_83;
  }
  v50 = *((_DWORD *)a2 + 48);
  *((_DWORD *)this + 114) |= 0x20000u;
  *((_DWORD *)this + 48) = v50;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x40000) == 0)
  {
LABEL_84:
    if ((v19 & 0x80000) == 0)
      goto LABEL_85;
    goto LABEL_168;
  }
LABEL_167:
  v51 = *((_DWORD *)a2 + 49);
  *((_DWORD *)this + 114) |= 0x40000u;
  *((_DWORD *)this + 49) = v51;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x80000) == 0)
  {
LABEL_85:
    if ((v19 & 0x100000) == 0)
      goto LABEL_86;
    goto LABEL_169;
  }
LABEL_168:
  v52 = *((_DWORD *)a2 + 50);
  *((_DWORD *)this + 114) |= 0x80000u;
  *((_DWORD *)this + 50) = v52;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x100000) == 0)
  {
LABEL_86:
    if ((v19 & 0x200000) == 0)
      goto LABEL_87;
    goto LABEL_170;
  }
LABEL_169:
  v53 = *((_DWORD *)a2 + 51);
  *((_DWORD *)this + 114) |= 0x100000u;
  *((_DWORD *)this + 51) = v53;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x200000) == 0)
  {
LABEL_87:
    if ((v19 & 0x400000) == 0)
      goto LABEL_88;
    goto LABEL_171;
  }
LABEL_170:
  v54 = *((_DWORD *)a2 + 52);
  *((_DWORD *)this + 114) |= 0x200000u;
  *((_DWORD *)this + 52) = v54;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x400000) == 0)
  {
LABEL_88:
    if ((v19 & 0x800000) == 0)
      goto LABEL_90;
    goto LABEL_89;
  }
LABEL_171:
  v55 = *((_DWORD *)a2 + 53);
  *((_DWORD *)this + 114) |= 0x400000u;
  *((_DWORD *)this + 53) = v55;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x800000) != 0)
  {
LABEL_89:
    v22 = *((_DWORD *)a2 + 54);
    *((_DWORD *)this + 114) |= 0x800000u;
    *((_DWORD *)this + 54) = v22;
    v19 = *((_DWORD *)a2 + 114);
  }
LABEL_90:
  if (!HIBYTE(v19))
    goto LABEL_98;
  if ((v19 & 0x1000000) != 0)
  {
    v89 = *((_DWORD *)a2 + 55);
    *((_DWORD *)this + 114) |= 0x1000000u;
    *((_DWORD *)this + 55) = v89;
    v19 = *((_DWORD *)a2 + 114);
    if ((v19 & 0x2000000) == 0)
    {
LABEL_93:
      if ((v19 & 0x4000000) == 0)
        goto LABEL_94;
      goto LABEL_212;
    }
  }
  else if ((v19 & 0x2000000) == 0)
  {
    goto LABEL_93;
  }
  v90 = *((_BYTE *)a2 + 226);
  *((_DWORD *)this + 114) |= 0x2000000u;
  *((_BYTE *)this + 226) = v90;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x4000000) == 0)
  {
LABEL_94:
    if ((v19 & 0x8000000) == 0)
      goto LABEL_95;
    goto LABEL_213;
  }
LABEL_212:
  v91 = *((_DWORD *)a2 + 57);
  *((_DWORD *)this + 114) |= 0x4000000u;
  *((_DWORD *)this + 57) = v91;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x8000000) == 0)
  {
LABEL_95:
    if ((v19 & 0x10000000) == 0)
      goto LABEL_96;
    goto LABEL_214;
  }
LABEL_213:
  v92 = *((_DWORD *)a2 + 58);
  *((_DWORD *)this + 114) |= 0x8000000u;
  *((_DWORD *)this + 58) = v92;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x10000000) == 0)
  {
LABEL_96:
    if ((v19 & 0x20000000) == 0)
      goto LABEL_97;
LABEL_215:
    v94 = *((_DWORD *)a2 + 64);
    *((_DWORD *)this + 114) |= 0x20000000u;
    *((_DWORD *)this + 64) = v94;
    if ((*((_DWORD *)a2 + 114) & 0x80000000) == 0)
      goto LABEL_98;
    goto LABEL_216;
  }
LABEL_214:
  v93 = *((_DWORD *)a2 + 59);
  *((_DWORD *)this + 114) |= 0x10000000u;
  *((_DWORD *)this + 59) = v93;
  v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x20000000) != 0)
    goto LABEL_215;
LABEL_97:
  if ((v19 & 0x80000000) == 0)
    goto LABEL_98;
LABEL_216:
  v95 = *((_QWORD *)a2 + 33);
  *((_DWORD *)this + 114) |= 0x80000000;
  *((_QWORD *)this + 33) = v95;
LABEL_98:
  v23 = *((_DWORD *)a2 + 115);
  if (!(_BYTE)v23)
    goto LABEL_108;
  if ((v23 & 1) != 0)
  {
    v56 = *((_DWORD *)a2 + 65);
    *((_DWORD *)this + 115) |= 1u;
    *((_DWORD *)this + 65) = v56;
    v23 = *((_DWORD *)a2 + 115);
    if ((v23 & 2) == 0)
    {
LABEL_101:
      if ((v23 & 4) == 0)
        goto LABEL_102;
      goto LABEL_175;
    }
  }
  else if ((v23 & 2) == 0)
  {
    goto LABEL_101;
  }
  v57 = *((_DWORD *)a2 + 68);
  *((_DWORD *)this + 115) |= 2u;
  *((_DWORD *)this + 68) = v57;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 4) == 0)
  {
LABEL_102:
    if ((v23 & 8) == 0)
      goto LABEL_103;
    goto LABEL_176;
  }
LABEL_175:
  v58 = *((_DWORD *)a2 + 69);
  *((_DWORD *)this + 115) |= 4u;
  *((_DWORD *)this + 69) = v58;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 8) == 0)
  {
LABEL_103:
    if ((v23 & 0x10) == 0)
      goto LABEL_104;
    goto LABEL_177;
  }
LABEL_176:
  v59 = *((_DWORD *)a2 + 70);
  *((_DWORD *)this + 115) |= 8u;
  *((_DWORD *)this + 70) = v59;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x10) == 0)
  {
LABEL_104:
    if ((v23 & 0x20) == 0)
      goto LABEL_105;
    goto LABEL_178;
  }
LABEL_177:
  v60 = *((_DWORD *)a2 + 71);
  *((_DWORD *)this + 115) |= 0x10u;
  *((_DWORD *)this + 71) = v60;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x20) == 0)
  {
LABEL_105:
    if ((v23 & 0x40) == 0)
      goto LABEL_106;
    goto LABEL_179;
  }
LABEL_178:
  v61 = *((_DWORD *)a2 + 72);
  *((_DWORD *)this + 115) |= 0x20u;
  *((_DWORD *)this + 72) = v61;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x40) == 0)
  {
LABEL_106:
    if ((v23 & 0x80) == 0)
      goto LABEL_108;
    goto LABEL_107;
  }
LABEL_179:
  v62 = *((_DWORD *)a2 + 73);
  *((_DWORD *)this + 115) |= 0x40u;
  *((_DWORD *)this + 73) = v62;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x80) != 0)
  {
LABEL_107:
    v24 = *((_DWORD *)a2 + 74);
    *((_DWORD *)this + 115) |= 0x80u;
    *((_DWORD *)this + 74) = v24;
    v23 = *((_DWORD *)a2 + 115);
  }
LABEL_108:
  if ((v23 & 0xFF00) == 0)
    goto LABEL_118;
  if ((v23 & 0x100) != 0)
  {
    v63 = *((_DWORD *)a2 + 75);
    *((_DWORD *)this + 115) |= 0x100u;
    *((_DWORD *)this + 75) = v63;
    v23 = *((_DWORD *)a2 + 115);
    if ((v23 & 0x200) == 0)
    {
LABEL_111:
      if ((v23 & 0x400) == 0)
        goto LABEL_112;
      goto LABEL_183;
    }
  }
  else if ((v23 & 0x200) == 0)
  {
    goto LABEL_111;
  }
  v64 = *((_DWORD *)a2 + 76);
  *((_DWORD *)this + 115) |= 0x200u;
  *((_DWORD *)this + 76) = v64;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x400) == 0)
  {
LABEL_112:
    if ((v23 & 0x800) == 0)
      goto LABEL_113;
    goto LABEL_184;
  }
LABEL_183:
  v65 = *((_DWORD *)a2 + 77);
  *((_DWORD *)this + 115) |= 0x400u;
  *((_DWORD *)this + 77) = v65;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x800) == 0)
  {
LABEL_113:
    if ((v23 & 0x1000) == 0)
      goto LABEL_114;
    goto LABEL_185;
  }
LABEL_184:
  v66 = *((_DWORD *)a2 + 78);
  *((_DWORD *)this + 115) |= 0x800u;
  *((_DWORD *)this + 78) = v66;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x1000) == 0)
  {
LABEL_114:
    if ((v23 & 0x2000) == 0)
      goto LABEL_115;
    goto LABEL_186;
  }
LABEL_185:
  v67 = *((_DWORD *)a2 + 79);
  *((_DWORD *)this + 115) |= 0x1000u;
  *((_DWORD *)this + 79) = v67;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x2000) == 0)
  {
LABEL_115:
    if ((v23 & 0x4000) == 0)
      goto LABEL_116;
    goto LABEL_187;
  }
LABEL_186:
  v68 = *((_DWORD *)a2 + 80);
  *((_DWORD *)this + 115) |= 0x2000u;
  *((_DWORD *)this + 80) = v68;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x4000) == 0)
  {
LABEL_116:
    if ((v23 & 0x8000) == 0)
      goto LABEL_118;
    goto LABEL_117;
  }
LABEL_187:
  v69 = *((_DWORD *)a2 + 81);
  *((_DWORD *)this + 115) |= 0x4000u;
  *((_DWORD *)this + 81) = v69;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x8000) != 0)
  {
LABEL_117:
    v25 = *((_DWORD *)a2 + 82);
    *((_DWORD *)this + 115) |= 0x8000u;
    *((_DWORD *)this + 82) = v25;
    v23 = *((_DWORD *)a2 + 115);
  }
LABEL_118:
  if ((v23 & 0xFF0000) == 0)
    goto LABEL_128;
  if ((v23 & 0x10000) != 0)
  {
    v70 = *((_DWORD *)a2 + 83);
    *((_DWORD *)this + 115) |= 0x10000u;
    *((_DWORD *)this + 83) = v70;
    v23 = *((_DWORD *)a2 + 115);
    if ((v23 & 0x20000) == 0)
    {
LABEL_121:
      if ((v23 & 0x40000) == 0)
        goto LABEL_122;
      goto LABEL_191;
    }
  }
  else if ((v23 & 0x20000) == 0)
  {
    goto LABEL_121;
  }
  v71 = *((_DWORD *)a2 + 84);
  *((_DWORD *)this + 115) |= 0x20000u;
  *((_DWORD *)this + 84) = v71;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x40000) == 0)
  {
LABEL_122:
    if ((v23 & 0x80000) == 0)
      goto LABEL_123;
    goto LABEL_192;
  }
LABEL_191:
  v72 = *((_DWORD *)a2 + 85);
  *((_DWORD *)this + 115) |= 0x40000u;
  *((_DWORD *)this + 85) = v72;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x80000) == 0)
  {
LABEL_123:
    if ((v23 & 0x100000) == 0)
      goto LABEL_124;
    goto LABEL_193;
  }
LABEL_192:
  v73 = *((_DWORD *)a2 + 86);
  *((_DWORD *)this + 115) |= 0x80000u;
  *((_DWORD *)this + 86) = v73;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x100000) == 0)
  {
LABEL_124:
    if ((v23 & 0x200000) == 0)
      goto LABEL_125;
    goto LABEL_194;
  }
LABEL_193:
  v74 = *((_DWORD *)a2 + 87);
  *((_DWORD *)this + 115) |= 0x100000u;
  *((_DWORD *)this + 87) = v74;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x200000) == 0)
  {
LABEL_125:
    if ((v23 & 0x400000) == 0)
      goto LABEL_126;
    goto LABEL_195;
  }
LABEL_194:
  v75 = *((_DWORD *)a2 + 88);
  *((_DWORD *)this + 115) |= 0x200000u;
  *((_DWORD *)this + 88) = v75;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x400000) == 0)
  {
LABEL_126:
    if ((v23 & 0x800000) == 0)
      goto LABEL_128;
    goto LABEL_127;
  }
LABEL_195:
  v76 = *((_DWORD *)a2 + 89);
  *((_DWORD *)this + 115) |= 0x400000u;
  *((_DWORD *)this + 89) = v76;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x800000) != 0)
  {
LABEL_127:
    v26 = *((_DWORD *)a2 + 90);
    *((_DWORD *)this + 115) |= 0x800000u;
    *((_DWORD *)this + 90) = v26;
    v23 = *((_DWORD *)a2 + 115);
  }
LABEL_128:
  if (!HIBYTE(v23))
    goto LABEL_227;
  if ((v23 & 0x1000000) != 0)
  {
    v96 = *((_DWORD *)a2 + 91);
    *((_DWORD *)this + 115) |= 0x1000000u;
    *((_DWORD *)this + 91) = v96;
    v23 = *((_DWORD *)a2 + 115);
    if ((v23 & 0x2000000) == 0)
    {
LABEL_131:
      if ((v23 & 0x4000000) == 0)
        goto LABEL_132;
      goto LABEL_219;
    }
  }
  else if ((v23 & 0x2000000) == 0)
  {
    goto LABEL_131;
  }
  v97 = *((_DWORD *)a2 + 92);
  *((_DWORD *)this + 115) |= 0x2000000u;
  *((_DWORD *)this + 92) = v97;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x4000000) == 0)
  {
LABEL_132:
    if ((v23 & 0x8000000) == 0)
      goto LABEL_133;
    goto LABEL_220;
  }
LABEL_219:
  v98 = *((_DWORD *)a2 + 93);
  *((_DWORD *)this + 115) |= 0x4000000u;
  *((_DWORD *)this + 93) = v98;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x8000000) == 0)
  {
LABEL_133:
    if ((v23 & 0x10000000) == 0)
      goto LABEL_134;
    goto LABEL_221;
  }
LABEL_220:
  v99 = *((_DWORD *)a2 + 94);
  *((_DWORD *)this + 115) |= 0x8000000u;
  *((_DWORD *)this + 94) = v99;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x10000000) == 0)
  {
LABEL_134:
    if ((v23 & 0x20000000) == 0)
      goto LABEL_135;
    goto LABEL_222;
  }
LABEL_221:
  v100 = *((_BYTE *)a2 + 227);
  *((_DWORD *)this + 115) |= 0x10000000u;
  *((_BYTE *)this + 227) = v100;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x20000000) == 0)
  {
LABEL_135:
    if ((v23 & 0x40000000) == 0)
      goto LABEL_136;
    goto LABEL_223;
  }
LABEL_222:
  v101 = *((_BYTE *)a2 + 380);
  *((_DWORD *)this + 115) |= 0x20000000u;
  *((_BYTE *)this + 380) = v101;
  v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x40000000) == 0)
  {
LABEL_136:
    if ((v23 & 0x80000000) == 0)
      goto LABEL_227;
    goto LABEL_225;
  }
LABEL_223:
  v102 = *((_DWORD *)a2 + 96);
  if (v102 >= 0x19)
    awd::metrics::MotionFitnessSession::MergeFrom();
  *((_DWORD *)this + 115) |= 0x40000000u;
  *((_DWORD *)this + 96) = v102;
  if ((*((_DWORD *)a2 + 115) & 0x80000000) != 0)
  {
LABEL_225:
    v103 = *((_DWORD *)a2 + 97);
    if (v103 >= 0x19)
      awd::metrics::MotionFitnessSession::MergeFrom();
    *((_DWORD *)this + 115) |= 0x80000000;
    *((_DWORD *)this + 97) = v103;
  }
LABEL_227:
  v104 = *((_DWORD *)a2 + 116);
  if (!(_BYTE)v104)
    goto LABEL_237;
  if ((v104 & 1) != 0)
  {
    v107 = *((_QWORD *)a2 + 49);
    *((_DWORD *)this + 116) |= 1u;
    *((_QWORD *)this + 49) = v107;
    v104 = *((_DWORD *)a2 + 116);
    if ((v104 & 2) == 0)
    {
LABEL_230:
      if ((v104 & 4) == 0)
        goto LABEL_231;
      goto LABEL_245;
    }
  }
  else if ((v104 & 2) == 0)
  {
    goto LABEL_230;
  }
  v108 = *((_QWORD *)a2 + 50);
  *((_DWORD *)this + 116) |= 2u;
  *((_QWORD *)this + 50) = v108;
  v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 4) == 0)
  {
LABEL_231:
    if ((v104 & 8) == 0)
      goto LABEL_232;
    goto LABEL_246;
  }
LABEL_245:
  v109 = *((_QWORD *)a2 + 51);
  *((_DWORD *)this + 116) |= 4u;
  *((_QWORD *)this + 51) = v109;
  v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 8) == 0)
  {
LABEL_232:
    if ((v104 & 0x10) == 0)
      goto LABEL_233;
    goto LABEL_247;
  }
LABEL_246:
  v110 = *((_DWORD *)a2 + 104);
  *((_DWORD *)this + 116) |= 8u;
  *((_DWORD *)this + 104) = v110;
  v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 0x10) == 0)
  {
LABEL_233:
    if ((v104 & 0x20) == 0)
      goto LABEL_234;
    goto LABEL_248;
  }
LABEL_247:
  v111 = *((_DWORD *)a2 + 105);
  *((_DWORD *)this + 116) |= 0x10u;
  *((_DWORD *)this + 105) = v111;
  v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 0x20) == 0)
  {
LABEL_234:
    if ((v104 & 0x40) == 0)
      goto LABEL_235;
    goto LABEL_249;
  }
LABEL_248:
  v112 = *((_DWORD *)a2 + 106);
  *((_DWORD *)this + 116) |= 0x20u;
  *((_DWORD *)this + 106) = v112;
  v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 0x40) == 0)
  {
LABEL_235:
    if ((v104 & 0x80) == 0)
      goto LABEL_237;
    goto LABEL_236;
  }
LABEL_249:
  v113 = *((_DWORD *)a2 + 107);
  *((_DWORD *)this + 116) |= 0x40u;
  *((_DWORD *)this + 107) = v113;
  v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 0x80) != 0)
  {
LABEL_236:
    v105 = *((_DWORD *)a2 + 108);
    *((_DWORD *)this + 116) |= 0x80u;
    *((_DWORD *)this + 108) = v105;
    v104 = *((_DWORD *)a2 + 116);
  }
LABEL_237:
  if ((v104 & 0xFF00) == 0)
    return;
  if ((v104 & 0x100) != 0)
  {
    v114 = *((_DWORD *)a2 + 109);
    *((_DWORD *)this + 116) |= 0x100u;
    *((_DWORD *)this + 109) = v114;
    v104 = *((_DWORD *)a2 + 116);
    if ((v104 & 0x200) == 0)
    {
LABEL_240:
      if ((v104 & 0x400) == 0)
        return;
      goto LABEL_241;
    }
  }
  else if ((v104 & 0x200) == 0)
  {
    goto LABEL_240;
  }
  v115 = *((_DWORD *)a2 + 110);
  *((_DWORD *)this + 116) |= 0x200u;
  *((_DWORD *)this + 110) = v115;
  if ((*((_DWORD *)a2 + 116) & 0x400) != 0)
  {
LABEL_241:
    v106 = *((_DWORD *)a2 + 111);
    *((_DWORD *)this + 116) |= 0x400u;
    *((_DWORD *)this + 111) = v106;
  }
}

void sub_2189E68E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessSession::~MotionFitnessSession(awd::metrics::MotionFitnessSession *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D98EAB0;
  awd::metrics::MotionFitnessSession::SharedDtor((uint64_t)this);
  v2 = *((_QWORD *)this + 30);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::MotionFitnessSession::~MotionFitnessSession(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionFitnessSession::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 24);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::MotionFitnessSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 448) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessSession::default_instance(awd::metrics::MotionFitnessSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionFitnessSession::default_instance_;
  if (!awd::metrics::MotionFitnessSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessSession::default_instance_;
  }
  return result;
}

double awd::metrics::MotionFitnessSession::New(awd::metrics::MotionFitnessSession *this)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = operator new();
  *(_QWORD *)(v1 + 240) = 0;
  *(_QWORD *)(v1 + 248) = 0;
  *(_DWORD *)(v1 + 448) = 0;
  *(_QWORD *)v1 = &off_24D98EAB0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 52) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 460) = 0;
  *(_QWORD *)(v1 + 452) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 53) = 0u;
  *(_OWORD *)(v1 + 69) = 0u;
  *(_OWORD *)(v1 + 85) = 0u;
  *(_OWORD *)(v1 + 101) = 0u;
  *(_OWORD *)(v1 + 117) = 0u;
  *(_OWORD *)(v1 + 133) = 0u;
  *(_OWORD *)(v1 + 149) = 0u;
  *(_OWORD *)(v1 + 165) = 0u;
  *(_OWORD *)(v1 + 181) = 0u;
  *(_OWORD *)(v1 + 197) = 0u;
  *(_OWORD *)(v1 + 213) = 0u;
  *(_OWORD *)(v1 + 224) = 0u;
  *(_OWORD *)(v1 + 365) = 0u;
  *(_OWORD *)(v1 + 336) = 0u;
  *(_OWORD *)(v1 + 352) = 0u;
  *(_OWORD *)(v1 + 304) = 0u;
  *(_OWORD *)(v1 + 320) = 0u;
  *(_OWORD *)(v1 + 272) = 0u;
  *(_OWORD *)(v1 + 288) = 0u;
  *(_OWORD *)(v1 + 256) = 0u;
  *(_OWORD *)(v1 + 384) = 0u;
  *(_OWORD *)(v1 + 400) = 0u;
  *(_OWORD *)(v1 + 416) = 0u;
  *(_OWORD *)(v1 + 432) = 0u;
  return result;
}

uint64_t awd::metrics::MotionFitnessSession::Clear(uint64_t this)
{
  unsigned int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  int v5;

  v1 = *(_DWORD *)(this + 452);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 16) = 0;
    *(_BYTE *)(this + 52) = 0;
    if ((v1 & 8) != 0)
    {
      v2 = *(_QWORD *)(this + 24);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 20) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_DWORD *)(this + 40) = 0;
    v1 = *(_DWORD *)(this + 452);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_WORD *)(this + 53) = 0;
    *(_DWORD *)(this + 44) = 0;
    *(_DWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 64) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_BYTE *)(this + 55) = 0;
    *(_QWORD *)(this + 80) = 0;
    *(_QWORD *)(this + 88) = 0;
    *(_QWORD *)(this + 72) = 0;
    *(_DWORD *)(this + 96) = 0;
  }
  if (HIBYTE(v1))
  {
    *(_OWORD *)(this + 116) = 0u;
    *(_OWORD *)(this + 100) = 0u;
  }
  v3 = *(_DWORD *)(this + 456);
  if ((_BYTE)v3)
  {
    *(_BYTE *)(this + 224) = 0;
    *(_QWORD *)(this + 132) = 0;
    *(_QWORD *)(this + 148) = 0;
    *(_QWORD *)(this + 140) = 0;
    *(_DWORD *)(this + 156) = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    *(_BYTE *)(this + 225) = 0;
    *(_QWORD *)(this + 168) = 0;
    *(_QWORD *)(this + 176) = 0;
    *(_QWORD *)(this + 160) = 0;
    *(_DWORD *)(this + 184) = 0;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *(_OWORD *)(this + 204) = 0u;
    *(_OWORD *)(this + 188) = 0u;
  }
  if (HIBYTE(v3))
  {
    *(_DWORD *)(this + 220) = 0;
    *(_BYTE *)(this + 226) = 0;
    *(_QWORD *)(this + 232) = 0;
    *(_DWORD *)(this + 228) = 0;
    *(_DWORD *)(this + 256) = 0;
    *(_QWORD *)(this + 264) = 0;
  }
  v4 = *(_DWORD *)(this + 460);
  if ((_BYTE)v4)
  {
    *(_DWORD *)(this + 260) = 0;
    *(_QWORD *)(this + 280) = 0;
    *(_QWORD *)(this + 288) = 0;
    *(_QWORD *)(this + 272) = 0;
    *(_DWORD *)(this + 296) = 0;
  }
  if ((v4 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 300) = 0u;
    *(_OWORD *)(this + 316) = 0u;
  }
  if ((v4 & 0xFF0000) != 0)
  {
    *(_OWORD *)(this + 332) = 0u;
    *(_OWORD *)(this + 348) = 0u;
  }
  if (HIBYTE(v4))
  {
    *(_BYTE *)(this + 227) = 0;
    *(_QWORD *)(this + 384) = 0;
    *(_BYTE *)(this + 380) = 0;
    *(_QWORD *)(this + 372) = 0;
    *(_QWORD *)(this + 364) = 0;
  }
  v5 = *(_DWORD *)(this + 464);
  if ((_BYTE)v5)
  {
    *(_OWORD *)(this + 420) = 0u;
    *(_OWORD *)(this + 392) = 0u;
    *(_OWORD *)(this + 408) = 0u;
  }
  if ((v5 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 436) = 0;
    *(_QWORD *)(this + 440) = 0;
  }
  *(_DWORD *)(this + 248) = 0;
  *(_QWORD *)(this + 452) = 0;
  *(_QWORD *)(this + 460) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessSession::MergePartialFromCodedStream(awd::metrics::MotionFitnessSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v3;
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  uint64_t v7;

  v3 = (unint64_t *)((char *)a2 + 8);
  v4 = (unint64_t *)((char *)a2 + 16);
  while (1)
  {
    v5 = (char *)*v3;
    if (*v3 >= *v4 || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    v7 = (TagFallback >> 3) - 1;
    if (v7 <= 0x6A)
      __asm { BR              X9 }
    if ((TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

void sub_2189EAAA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)(v1 - 136));
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  uint64_t result;
  char *v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;

  v11 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v11 = *v4;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v10 = 0;
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v10 = *v6;
        *((_QWORD *)this + 1) = v6 + 1;
      }
      v7 = a2[2];
      if (v7 == a2[3])
      {
        wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(a2, v7 + 1);
        v7 = a2[2];
      }
      v8 = v10;
      v9 = *(_QWORD *)a2;
      a2[2] = v7 + 1;
      *(_DWORD *)(v9 + 4 * v7) = v8;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t awd::metrics::MotionFitnessSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 452);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 452);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_115;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_116;
  }
LABEL_115:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_117;
  }
LABEL_116:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_118;
  }
LABEL_117:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_119;
  }
LABEL_118:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_120;
  }
LABEL_119:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_121;
  }
LABEL_120:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_122;
  }
LABEL_121:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 53), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_123;
  }
LABEL_122:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_124;
  }
LABEL_123:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_125;
  }
LABEL_124:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_126;
  }
LABEL_125:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_127;
  }
LABEL_126:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_128;
  }
LABEL_127:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_129;
  }
LABEL_128:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 54), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_130;
  }
LABEL_129:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 55), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_131;
  }
LABEL_130:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_132;
  }
LABEL_131:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_133;
  }
LABEL_132:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 80), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_134;
  }
LABEL_133:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_135;
  }
LABEL_134:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 88), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_136;
  }
LABEL_135:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned int *)(v5 + 92), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_137;
  }
LABEL_136:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_138;
  }
LABEL_137:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(unsigned int *)(v5 + 100), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_139;
  }
LABEL_138:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, *(unsigned int *)(v5 + 104), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_140;
  }
LABEL_139:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, *(unsigned int *)(v5 + 108), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_141;
  }
LABEL_140:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(unsigned int *)(v5 + 112), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_142;
  }
LABEL_141:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned int *)(v5 + 116), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_32;
LABEL_143:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, (uint64_t)a2, *(float *)(v5 + 124), a3);
    if ((*(_DWORD *)(v5 + 452) & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_144;
  }
LABEL_142:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned int *)(v5 + 120), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x40000000) != 0)
    goto LABEL_143;
LABEL_32:
  if ((v6 & 0x80000000) == 0)
    goto LABEL_33;
LABEL_144:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned int *)(v5 + 128), (uint64_t)a2, a4);
LABEL_33:
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, (uint64_t)a2, *(float *)(v5 + 132), a3);
    v7 = *(_DWORD *)(v5 + 456);
    if ((v7 & 2) == 0)
    {
LABEL_35:
      if ((v7 & 4) == 0)
        goto LABEL_36;
      goto LABEL_147;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_35;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, (uint64_t)a2, *(float *)(v5 + 136), a3);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 4) == 0)
  {
LABEL_36:
    if ((v7 & 8) == 0)
      goto LABEL_37;
    goto LABEL_148;
  }
LABEL_147:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned int *)(v5 + 140), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 8) == 0)
  {
LABEL_37:
    if ((v7 & 0x10) == 0)
      goto LABEL_38;
    goto LABEL_149;
  }
LABEL_148:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(unsigned int *)(v5 + 144), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x10) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0)
      goto LABEL_39;
    goto LABEL_150;
  }
LABEL_149:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(unsigned int *)(v5 + 148), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v7 & 0x40) == 0)
      goto LABEL_40;
    goto LABEL_151;
  }
LABEL_150:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, *(unsigned __int8 *)(v5 + 224), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x40) == 0)
  {
LABEL_40:
    if ((v7 & 0x80) == 0)
      goto LABEL_41;
    goto LABEL_152;
  }
LABEL_151:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(unsigned int *)(v5 + 152), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x80) == 0)
  {
LABEL_41:
    if ((v7 & 0x100) == 0)
      goto LABEL_42;
    goto LABEL_153;
  }
LABEL_152:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(unsigned int *)(v5 + 156), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x100) == 0)
  {
LABEL_42:
    if ((v7 & 0x200) == 0)
      goto LABEL_43;
    goto LABEL_154;
  }
LABEL_153:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(unsigned int *)(v5 + 160), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x200) == 0)
  {
LABEL_43:
    if ((v7 & 0x400) == 0)
      goto LABEL_44;
    goto LABEL_155;
  }
LABEL_154:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(unsigned __int8 *)(v5 + 225), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x400) == 0)
  {
LABEL_44:
    if ((v7 & 0x800) == 0)
      goto LABEL_45;
    goto LABEL_156;
  }
LABEL_155:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, *(unsigned int *)(v5 + 164), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x800) == 0)
  {
LABEL_45:
    if ((v7 & 0x1000) == 0)
      goto LABEL_46;
    goto LABEL_157;
  }
LABEL_156:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, *(unsigned int *)(v5 + 168), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x1000) == 0)
  {
LABEL_46:
    if ((v7 & 0x2000) == 0)
      goto LABEL_47;
    goto LABEL_158;
  }
LABEL_157:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, *(unsigned int *)(v5 + 172), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x2000) == 0)
  {
LABEL_47:
    if ((v7 & 0x4000) == 0)
      goto LABEL_48;
    goto LABEL_159;
  }
LABEL_158:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, (uint64_t)a2, *(float *)(v5 + 176), a3);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x4000) == 0)
  {
LABEL_48:
    if ((v7 & 0x8000) == 0)
      goto LABEL_49;
    goto LABEL_160;
  }
LABEL_159:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, *(unsigned int *)(v5 + 180), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x8000) == 0)
  {
LABEL_49:
    if ((v7 & 0x10000) == 0)
      goto LABEL_50;
    goto LABEL_161;
  }
LABEL_160:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, *(unsigned int *)(v5 + 184), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x10000) == 0)
  {
LABEL_50:
    if ((v7 & 0x20000) == 0)
      goto LABEL_51;
    goto LABEL_162;
  }
LABEL_161:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x31, *(unsigned int *)(v5 + 188), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x20000) == 0)
  {
LABEL_51:
    if ((v7 & 0x40000) == 0)
      goto LABEL_52;
    goto LABEL_163;
  }
LABEL_162:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, *(unsigned int *)(v5 + 192), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x40000) == 0)
  {
LABEL_52:
    if ((v7 & 0x80000) == 0)
      goto LABEL_53;
    goto LABEL_164;
  }
LABEL_163:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, *(unsigned int *)(v5 + 196), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x80000) == 0)
  {
LABEL_53:
    if ((v7 & 0x100000) == 0)
      goto LABEL_54;
    goto LABEL_165;
  }
LABEL_164:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, *(unsigned int *)(v5 + 200), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x100000) == 0)
  {
LABEL_54:
    if ((v7 & 0x200000) == 0)
      goto LABEL_55;
    goto LABEL_166;
  }
LABEL_165:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, *(unsigned int *)(v5 + 204), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x200000) == 0)
  {
LABEL_55:
    if ((v7 & 0x400000) == 0)
      goto LABEL_56;
    goto LABEL_167;
  }
LABEL_166:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, *(unsigned int *)(v5 + 208), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x400000) == 0)
  {
LABEL_56:
    if ((v7 & 0x800000) == 0)
      goto LABEL_57;
    goto LABEL_168;
  }
LABEL_167:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, *(unsigned int *)(v5 + 212), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x800000) == 0)
  {
LABEL_57:
    if ((v7 & 0x1000000) == 0)
      goto LABEL_58;
    goto LABEL_169;
  }
LABEL_168:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, *(unsigned int *)(v5 + 216), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_58:
    if ((v7 & 0x2000000) == 0)
      goto LABEL_59;
    goto LABEL_170;
  }
LABEL_169:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x39, *(unsigned int *)(v5 + 220), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_59:
    if ((v7 & 0x4000000) == 0)
      goto LABEL_60;
    goto LABEL_171;
  }
LABEL_170:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3A, *(unsigned __int8 *)(v5 + 226), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_60:
    if ((v7 & 0x8000000) == 0)
      goto LABEL_61;
    goto LABEL_172;
  }
LABEL_171:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3B, *(unsigned int *)(v5 + 228), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x8000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x10000000) == 0)
      goto LABEL_62;
    goto LABEL_173;
  }
LABEL_172:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, *(unsigned int *)(v5 + 232), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x10000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x20000000) == 0)
      goto LABEL_64;
    goto LABEL_63;
  }
LABEL_173:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(unsigned int *)(v5 + 236), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 456) & 0x20000000) != 0)
LABEL_63:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, *(unsigned int *)(v5 + 256), (uint64_t)a2, a4);
LABEL_64:
  if (*(int *)(v5 + 248) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, *(unsigned int *)(*(_QWORD *)(v5 + 240) + 4 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 248));
  }
  if ((*(_DWORD *)(v5 + 456) & 0x80000000) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x40, *(_QWORD *)(v5 + 264), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x41, *(unsigned int *)(v5 + 260), (uint64_t)a2, a4);
    v9 = *(_DWORD *)(v5 + 460);
    if ((v9 & 2) == 0)
    {
LABEL_71:
      if ((v9 & 4) == 0)
        goto LABEL_72;
      goto LABEL_177;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_71;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, *(unsigned int *)(v5 + 272), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 4) == 0)
  {
LABEL_72:
    if ((v9 & 8) == 0)
      goto LABEL_73;
    goto LABEL_178;
  }
LABEL_177:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, *(unsigned int *)(v5 + 276), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 8) == 0)
  {
LABEL_73:
    if ((v9 & 0x10) == 0)
      goto LABEL_74;
    goto LABEL_179;
  }
LABEL_178:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x44, *(unsigned int *)(v5 + 280), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x10) == 0)
  {
LABEL_74:
    if ((v9 & 0x20) == 0)
      goto LABEL_75;
    goto LABEL_180;
  }
LABEL_179:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x45, *(unsigned int *)(v5 + 284), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x20) == 0)
  {
LABEL_75:
    if ((v9 & 0x40) == 0)
      goto LABEL_76;
    goto LABEL_181;
  }
LABEL_180:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(unsigned int *)(v5 + 288), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x40) == 0)
  {
LABEL_76:
    if ((v9 & 0x80) == 0)
      goto LABEL_77;
    goto LABEL_182;
  }
LABEL_181:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, *(unsigned int *)(v5 + 292), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x80) == 0)
  {
LABEL_77:
    if ((v9 & 0x100) == 0)
      goto LABEL_78;
    goto LABEL_183;
  }
LABEL_182:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(unsigned int *)(v5 + 296), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x100) == 0)
  {
LABEL_78:
    if ((v9 & 0x200) == 0)
      goto LABEL_79;
    goto LABEL_184;
  }
LABEL_183:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(unsigned int *)(v5 + 300), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x200) == 0)
  {
LABEL_79:
    if ((v9 & 0x400) == 0)
      goto LABEL_80;
    goto LABEL_185;
  }
LABEL_184:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(unsigned int *)(v5 + 304), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x400) == 0)
  {
LABEL_80:
    if ((v9 & 0x800) == 0)
      goto LABEL_81;
    goto LABEL_186;
  }
LABEL_185:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(unsigned int *)(v5 + 308), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x800) == 0)
  {
LABEL_81:
    if ((v9 & 0x1000) == 0)
      goto LABEL_82;
    goto LABEL_187;
  }
LABEL_186:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, *(unsigned int *)(v5 + 312), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x1000) == 0)
  {
LABEL_82:
    if ((v9 & 0x2000) == 0)
      goto LABEL_83;
    goto LABEL_188;
  }
LABEL_187:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, *(unsigned int *)(v5 + 316), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x2000) == 0)
  {
LABEL_83:
    if ((v9 & 0x4000) == 0)
      goto LABEL_84;
    goto LABEL_189;
  }
LABEL_188:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4E, *(unsigned int *)(v5 + 320), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x4000) == 0)
  {
LABEL_84:
    if ((v9 & 0x8000) == 0)
      goto LABEL_85;
    goto LABEL_190;
  }
LABEL_189:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4F, *(unsigned int *)(v5 + 324), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x8000) == 0)
  {
LABEL_85:
    if ((v9 & 0x10000) == 0)
      goto LABEL_86;
    goto LABEL_191;
  }
LABEL_190:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, *(unsigned int *)(v5 + 328), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x10000) == 0)
  {
LABEL_86:
    if ((v9 & 0x20000) == 0)
      goto LABEL_87;
    goto LABEL_192;
  }
LABEL_191:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x51, *(unsigned int *)(v5 + 332), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x20000) == 0)
  {
LABEL_87:
    if ((v9 & 0x40000) == 0)
      goto LABEL_88;
    goto LABEL_193;
  }
LABEL_192:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x52, *(unsigned int *)(v5 + 336), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x40000) == 0)
  {
LABEL_88:
    if ((v9 & 0x80000) == 0)
      goto LABEL_89;
    goto LABEL_194;
  }
LABEL_193:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x53, *(unsigned int *)(v5 + 340), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x80000) == 0)
  {
LABEL_89:
    if ((v9 & 0x100000) == 0)
      goto LABEL_90;
    goto LABEL_195;
  }
LABEL_194:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x54, *(unsigned int *)(v5 + 344), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x100000) == 0)
  {
LABEL_90:
    if ((v9 & 0x200000) == 0)
      goto LABEL_91;
    goto LABEL_196;
  }
LABEL_195:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x55, *(unsigned int *)(v5 + 348), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x200000) == 0)
  {
LABEL_91:
    if ((v9 & 0x400000) == 0)
      goto LABEL_92;
    goto LABEL_197;
  }
LABEL_196:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x56, *(unsigned int *)(v5 + 352), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x400000) == 0)
  {
LABEL_92:
    if ((v9 & 0x800000) == 0)
      goto LABEL_93;
    goto LABEL_198;
  }
LABEL_197:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x57, *(unsigned int *)(v5 + 356), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x800000) == 0)
  {
LABEL_93:
    if ((v9 & 0x1000000) == 0)
      goto LABEL_94;
    goto LABEL_199;
  }
LABEL_198:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x58, *(unsigned int *)(v5 + 360), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x1000000) == 0)
  {
LABEL_94:
    if ((v9 & 0x2000000) == 0)
      goto LABEL_95;
    goto LABEL_200;
  }
LABEL_199:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x59, *(unsigned int *)(v5 + 364), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x2000000) == 0)
  {
LABEL_95:
    if ((v9 & 0x4000000) == 0)
      goto LABEL_96;
    goto LABEL_201;
  }
LABEL_200:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5A, *(unsigned int *)(v5 + 368), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x4000000) == 0)
  {
LABEL_96:
    if ((v9 & 0x8000000) == 0)
      goto LABEL_97;
    goto LABEL_202;
  }
LABEL_201:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5B, *(unsigned int *)(v5 + 372), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x8000000) == 0)
  {
LABEL_97:
    if ((v9 & 0x10000000) == 0)
      goto LABEL_98;
    goto LABEL_203;
  }
LABEL_202:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5C, *(unsigned int *)(v5 + 376), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x10000000) == 0)
  {
LABEL_98:
    if ((v9 & 0x20000000) == 0)
      goto LABEL_99;
    goto LABEL_204;
  }
LABEL_203:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5D, *(unsigned __int8 *)(v5 + 227), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x20000000) == 0)
  {
LABEL_99:
    if ((v9 & 0x40000000) == 0)
      goto LABEL_100;
LABEL_205:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5F, *(unsigned int *)(v5 + 384), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 460) & 0x80000000) == 0)
      goto LABEL_101;
    goto LABEL_206;
  }
LABEL_204:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5E, *(unsigned __int8 *)(v5 + 380), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x40000000) != 0)
    goto LABEL_205;
LABEL_100:
  if ((v9 & 0x80000000) == 0)
    goto LABEL_101;
LABEL_206:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x60, *(unsigned int *)(v5 + 388), (uint64_t)a2, a4);
LABEL_101:
  v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x61, *(_QWORD *)(v5 + 392), (uint64_t)a2, a4);
    v10 = *(_DWORD *)(v5 + 464);
    if ((v10 & 2) == 0)
    {
LABEL_103:
      if ((v10 & 4) == 0)
        goto LABEL_104;
      goto LABEL_209;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_103;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x62, *(_QWORD *)(v5 + 400), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 4) == 0)
  {
LABEL_104:
    if ((v10 & 8) == 0)
      goto LABEL_105;
    goto LABEL_210;
  }
LABEL_209:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x63, (uint64_t)a2, *(double *)(v5 + 408), a3);
  v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 8) == 0)
  {
LABEL_105:
    if ((v10 & 0x10) == 0)
      goto LABEL_106;
    goto LABEL_211;
  }
LABEL_210:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x64, *(unsigned int *)(v5 + 416), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x10) == 0)
  {
LABEL_106:
    if ((v10 & 0x20) == 0)
      goto LABEL_107;
    goto LABEL_212;
  }
LABEL_211:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x65, *(unsigned int *)(v5 + 420), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x20) == 0)
  {
LABEL_107:
    if ((v10 & 0x40) == 0)
      goto LABEL_108;
    goto LABEL_213;
  }
LABEL_212:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x66, *(unsigned int *)(v5 + 424), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x40) == 0)
  {
LABEL_108:
    if ((v10 & 0x80) == 0)
      goto LABEL_109;
    goto LABEL_214;
  }
LABEL_213:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x67, *(unsigned int *)(v5 + 428), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x80) == 0)
  {
LABEL_109:
    if ((v10 & 0x100) == 0)
      goto LABEL_110;
    goto LABEL_215;
  }
LABEL_214:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x68, *(unsigned int *)(v5 + 432), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x100) == 0)
  {
LABEL_110:
    if ((v10 & 0x200) == 0)
      goto LABEL_111;
    goto LABEL_216;
  }
LABEL_215:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x69, *(unsigned int *)(v5 + 436), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x200) == 0)
  {
LABEL_111:
    if ((v10 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6B, *(unsigned int *)(v5 + 444), (uint64_t)a2, a4);
  }
LABEL_216:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6A, *(unsigned int *)(v5 + 440), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 464) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6B, *(unsigned int *)(v5 + 444), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionFitnessSession::ByteSize(awd::metrics::MotionFitnessSession *this)
{
  unsigned int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  int v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  int v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  int v41;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v42;
  int v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  int v45;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v46;
  int v47;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v48;
  int v49;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v50;
  int v51;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v52;
  int v53;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v54;
  int v55;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v56;
  int v57;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v58;
  int v59;
  unsigned int v60;
  int v61;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v62;
  int v63;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v64;
  int v65;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v66;
  int v67;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v68;
  int v69;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v70;
  int v71;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v72;
  int v73;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v74;
  int v75;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v76;
  int v77;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v78;
  int v79;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v80;
  int v81;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v82;
  int v83;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v84;
  int v85;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v86;
  int v87;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v88;
  int v89;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v90;
  int v91;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v92;
  int v93;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v94;
  int v95;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v96;
  int v97;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v98;
  int v99;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v100;
  int v101;
  unsigned int v102;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v103;
  int v104;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v105;
  int v106;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v107;
  int v108;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v109;
  int v110;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v111;
  int v112;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v113;
  int v114;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v115;
  int v116;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v117;
  int v118;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v119;
  int v120;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v121;
  int v122;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v123;
  int v124;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v125;
  int v126;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v127;
  int v128;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v129;
  int v130;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v131;
  int v132;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v133;
  int v134;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v135;
  int v136;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v137;
  int v138;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v139;
  int v140;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v141;
  int v142;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v143;
  int v144;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v145;
  int v146;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v147;
  int v148;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v149;
  int v150;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v151;
  int v152;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v153;
  int v154;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v155;
  int v156;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v157;
  int v158;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v159;
  int v160;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v161;
  int v162;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v163;
  int v164;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v165;
  int v166;
  int v167;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v168;
  int v169;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v170;
  int v171;
  int v172;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v173;
  int v174;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v175;
  int v176;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v177;
  int v178;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v179;
  int v180;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v181;
  int v182;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v183;
  int v184;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v185;
  int v186;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v187;
  int v188;
  int v189;
  uint64_t v190;
  int v191;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v192;
  int v193;
  uint64_t result;

  v2 = *((_DWORD *)this + 113);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_48;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 113);
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v5 = 1;
  }
  v3 += v5 + 1;
LABEL_13:
  if ((v2 & 4) != 0)
    v3 += 2;
  if ((v2 & 8) != 0)
  {
    v6 = *((_QWORD *)this + 3);
    v7 = *(unsigned __int8 *)(v6 + 23);
    v8 = v7;
    v9 = *(_QWORD *)(v6 + 8);
    if ((v7 & 0x80u) == 0)
      v10 = *(unsigned __int8 *)(v6 + 23);
    else
      v10 = v9;
    if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10);
      v7 = *(unsigned __int8 *)(v6 + 23);
      v9 = *(_QWORD *)(v6 + 8);
      v2 = *((_DWORD *)this + 113);
      v8 = *(_BYTE *)(v6 + 23);
    }
    else
    {
      v11 = 1;
    }
    if (v8 < 0)
      v7 = v9;
    v3 += v11 + v7 + 1;
    if ((v2 & 0x10) == 0)
    {
LABEL_17:
      if ((v2 & 0x20) == 0)
        goto LABEL_18;
      goto LABEL_34;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_17;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v13 = 1;
  }
  v3 += v13 + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_38;
  }
LABEL_34:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v15 = 1;
  }
  v3 += v15 + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0)
      goto LABEL_48;
    goto LABEL_44;
  }
LABEL_38:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v16 & 0x80000000) != 0)
  {
    v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v17 = 1;
  }
  v3 += v17 + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_44:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      v2 = *((_DWORD *)this + 113);
    }
    else
    {
      v19 = 1;
    }
    v3 += v19 + 1;
  }
LABEL_48:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_90;
  if ((v2 & 0x100) != 0)
    v3 += 2;
  if ((v2 & 0x200) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v2 = *((_DWORD *)this + 113);
    }
    else
    {
      v21 = 1;
    }
    v3 += v21 + 1;
    if ((v2 & 0x400) == 0)
    {
LABEL_53:
      if ((v2 & 0x800) == 0)
        goto LABEL_54;
      goto LABEL_68;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_53;
  }
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v23 = 1;
  }
  v3 += v23 + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_54:
    if ((v2 & 0x1000) == 0)
      goto LABEL_55;
    goto LABEL_74;
  }
LABEL_68:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v24 & 0x80000000) != 0)
  {
    v25 = 10;
  }
  else if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v25 = 1;
  }
  v3 += v25 + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_55:
    if ((v2 & 0x2000) == 0)
      goto LABEL_56;
    goto LABEL_80;
  }
LABEL_74:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v26 & 0x80000000) != 0)
  {
    v27 = 10;
  }
  else if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v27 = 1;
  }
  v3 += v27 + 1;
  if ((v2 & 0x2000) == 0)
  {
LABEL_56:
    if ((v2 & 0x4000) == 0)
      goto LABEL_88;
    goto LABEL_84;
  }
LABEL_80:
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v28 >= 0x80)
  {
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v29 = 1;
  }
  v3 += v29 + 1;
  if ((v2 & 0x4000) != 0)
  {
LABEL_84:
    v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if (v30 >= 0x80)
    {
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30);
      v2 = *((_DWORD *)this + 113);
    }
    else
    {
      v31 = 1;
    }
    v3 += v31 + 1;
  }
LABEL_88:
  if ((v2 & 0x8000) != 0)
    v3 += 3;
LABEL_90:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_135;
  if ((v2 & 0x10000) != 0)
    v3 += 3;
  if ((v2 & 0x20000) != 0)
  {
    v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if ((v32 & 0x80000000) != 0)
    {
      v33 = 10;
    }
    else if (v32 >= 0x80)
    {
      v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
      v2 = *((_DWORD *)this + 113);
    }
    else
    {
      v33 = 1;
    }
    v3 += v33 + 2;
    if ((v2 & 0x40000) == 0)
    {
LABEL_95:
      if ((v2 & 0x80000) == 0)
        goto LABEL_96;
      goto LABEL_113;
    }
  }
  else if ((v2 & 0x40000) == 0)
  {
    goto LABEL_95;
  }
  v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if ((v34 & 0x80000000) != 0)
  {
    v35 = 10;
  }
  else if (v34 >= 0x80)
  {
    v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v35 = 1;
  }
  v3 += v35 + 2;
  if ((v2 & 0x80000) == 0)
  {
LABEL_96:
    if ((v2 & 0x100000) == 0)
      goto LABEL_97;
    goto LABEL_117;
  }
LABEL_113:
  v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if (v36 >= 0x80)
  {
    v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v37 = 1;
  }
  v3 += v37 + 2;
  if ((v2 & 0x100000) == 0)
  {
LABEL_97:
    if ((v2 & 0x200000) == 0)
      goto LABEL_98;
    goto LABEL_121;
  }
LABEL_117:
  v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
  if (v38 >= 0x80)
  {
    v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v39 = 1;
  }
  v3 += v39 + 2;
  if ((v2 & 0x200000) == 0)
  {
LABEL_98:
    if ((v2 & 0x400000) == 0)
      goto LABEL_99;
    goto LABEL_127;
  }
LABEL_121:
  v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
  if ((v40 & 0x80000000) != 0)
  {
    v41 = 10;
  }
  else if (v40 >= 0x80)
  {
    v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v41 = 1;
  }
  v3 += v41 + 2;
  if ((v2 & 0x400000) == 0)
  {
LABEL_99:
    if ((v2 & 0x800000) == 0)
      goto LABEL_135;
    goto LABEL_131;
  }
LABEL_127:
  v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 23);
  if (v42 >= 0x80)
  {
    v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v43 = 1;
  }
  v3 += v43 + 2;
  if ((v2 & 0x800000) != 0)
  {
LABEL_131:
    v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 24);
    if (v44 >= 0x80)
    {
      v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44);
      v2 = *((_DWORD *)this + 113);
    }
    else
    {
      v45 = 1;
    }
    v3 += v45 + 2;
  }
LABEL_135:
  if (!HIBYTE(v2))
    goto LABEL_174;
  if ((v2 & 0x1000000) != 0)
  {
    v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 25);
    if (v46 >= 0x80)
    {
      v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46);
      v2 = *((_DWORD *)this + 113);
    }
    else
    {
      v47 = 1;
    }
    v3 += v47 + 2;
    if ((v2 & 0x2000000) == 0)
    {
LABEL_138:
      if ((v2 & 0x4000000) == 0)
        goto LABEL_139;
      goto LABEL_151;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_138;
  }
  v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
  if (v48 >= 0x80)
  {
    v49 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v49 = 1;
  }
  v3 += v49 + 2;
  if ((v2 & 0x4000000) == 0)
  {
LABEL_139:
    if ((v2 & 0x8000000) == 0)
      goto LABEL_140;
    goto LABEL_155;
  }
LABEL_151:
  v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 27);
  if (v50 >= 0x80)
  {
    v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v51 = 1;
  }
  v3 += v51 + 2;
  if ((v2 & 0x8000000) == 0)
  {
LABEL_140:
    if ((v2 & 0x10000000) == 0)
      goto LABEL_141;
LABEL_159:
    v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 29);
    if (v54 >= 0x80)
    {
      v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v54);
      v2 = *((_DWORD *)this + 113);
    }
    else
    {
      v55 = 1;
    }
    v3 += v55 + 2;
    if ((v2 & 0x20000000) == 0)
      goto LABEL_167;
    goto LABEL_163;
  }
LABEL_155:
  v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 28);
  if (v52 >= 0x80)
  {
    v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
    v2 = *((_DWORD *)this + 113);
  }
  else
  {
    v53 = 1;
  }
  v3 += v53 + 2;
  if ((v2 & 0x10000000) != 0)
    goto LABEL_159;
LABEL_141:
  if ((v2 & 0x20000000) != 0)
  {
LABEL_163:
    v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
    if (v56 >= 0x80)
    {
      v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56);
      v2 = *((_DWORD *)this + 113);
    }
    else
    {
      v57 = 1;
    }
    v3 += v57 + 2;
  }
LABEL_167:
  if ((v2 & 0x40000000) != 0)
    v3 += 6;
  if ((v2 & 0x80000000) != 0)
  {
    v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
    if (v58 >= 0x80)
      v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58);
    else
      v59 = 1;
    v3 += v59 + 2;
  }
LABEL_174:
  v60 = *((_DWORD *)this + 114);
  if (!(_BYTE)v60)
    goto LABEL_208;
  v61 = v3 + 6;
  if ((v60 & 1) == 0)
    v61 = v3;
  if ((v60 & 2) != 0)
    v3 = v61 + 6;
  else
    v3 = v61;
  if ((v60 & 4) == 0)
  {
    if ((v60 & 8) == 0)
      goto LABEL_182;
LABEL_188:
    v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 36);
    if (v64 >= 0x80)
    {
      v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v65 = 1;
    }
    v3 += v65 + 2;
    if ((v60 & 0x10) == 0)
      goto LABEL_196;
    goto LABEL_192;
  }
  v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 35);
  if (v62 >= 0x80)
  {
    v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v63 = 1;
  }
  v3 += v63 + 2;
  if ((v60 & 8) != 0)
    goto LABEL_188;
LABEL_182:
  if ((v60 & 0x10) != 0)
  {
LABEL_192:
    v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 37);
    if (v66 >= 0x80)
    {
      v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v67 = 1;
    }
    v3 += v67 + 2;
  }
LABEL_196:
  if ((v60 & 0x20) != 0)
    v3 += 3;
  if ((v60 & 0x40) != 0)
  {
    v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 38);
    if (v68 >= 0x80)
    {
      v69 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v69 = 1;
    }
    v3 += v69 + 2;
  }
  if ((v60 & 0x80) != 0)
  {
    v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 39);
    if (v70 >= 0x80)
    {
      v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v71 = 1;
    }
    v3 += v71 + 2;
  }
LABEL_208:
  if ((v60 & 0xFF00) == 0)
    goto LABEL_244;
  if ((v60 & 0x100) != 0)
  {
    v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
    if (v72 >= 0x80)
    {
      v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v73 = 1;
    }
    v3 += v73 + 2;
  }
  if ((v60 & 0x200) != 0)
    v3 += 3;
  if ((v60 & 0x400) == 0)
  {
    if ((v60 & 0x800) == 0)
      goto LABEL_218;
LABEL_224:
    v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 42);
    if (v76 >= 0x80)
    {
      v77 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v76);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v77 = 1;
    }
    v3 += v77 + 2;
    if ((v60 & 0x1000) == 0)
      goto LABEL_232;
    goto LABEL_228;
  }
  v74 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 41);
  if (v74 >= 0x80)
  {
    v75 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v74);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v75 = 1;
  }
  v3 += v75 + 2;
  if ((v60 & 0x800) != 0)
    goto LABEL_224;
LABEL_218:
  if ((v60 & 0x1000) != 0)
  {
LABEL_228:
    v78 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 43);
    if (v78 >= 0x80)
    {
      v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v78);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v79 = 1;
    }
    v3 += v79 + 2;
  }
LABEL_232:
  if ((v60 & 0x2000) != 0)
    v3 += 6;
  if ((v60 & 0x4000) != 0)
  {
    v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 45);
    if (v80 >= 0x80)
    {
      v81 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v80);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v81 = 1;
    }
    v3 += v81 + 2;
  }
  if ((v60 & 0x8000) != 0)
  {
    v82 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 46);
    if (v82 >= 0x80)
    {
      v83 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v82);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v83 = 1;
    }
    v3 += v83 + 2;
  }
LABEL_244:
  if ((v60 & 0xFF0000) == 0)
    goto LABEL_286;
  if ((v60 & 0x10000) != 0)
  {
    v84 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 47);
    if (v84 >= 0x80)
    {
      v85 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v84);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v85 = 1;
    }
    v3 += v85 + 2;
    if ((v60 & 0x20000) == 0)
    {
LABEL_247:
      if ((v60 & 0x40000) == 0)
        goto LABEL_248;
      goto LABEL_262;
    }
  }
  else if ((v60 & 0x20000) == 0)
  {
    goto LABEL_247;
  }
  v86 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 48);
  if (v86 >= 0x80)
  {
    v87 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v86);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v87 = 1;
  }
  v3 += v87 + 2;
  if ((v60 & 0x40000) == 0)
  {
LABEL_248:
    if ((v60 & 0x80000) == 0)
      goto LABEL_249;
    goto LABEL_266;
  }
LABEL_262:
  v88 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 49);
  if (v88 >= 0x80)
  {
    v89 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v88);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v89 = 1;
  }
  v3 += v89 + 2;
  if ((v60 & 0x80000) == 0)
  {
LABEL_249:
    if ((v60 & 0x100000) == 0)
      goto LABEL_250;
    goto LABEL_270;
  }
LABEL_266:
  v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 50);
  if (v90 >= 0x80)
  {
    v91 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v90);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v91 = 1;
  }
  v3 += v91 + 2;
  if ((v60 & 0x100000) == 0)
  {
LABEL_250:
    if ((v60 & 0x200000) == 0)
      goto LABEL_251;
    goto LABEL_274;
  }
LABEL_270:
  v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 51);
  if (v92 >= 0x80)
  {
    v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v93 = 1;
  }
  v3 += v93 + 2;
  if ((v60 & 0x200000) == 0)
  {
LABEL_251:
    if ((v60 & 0x400000) == 0)
      goto LABEL_252;
    goto LABEL_278;
  }
LABEL_274:
  v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 52);
  if (v94 >= 0x80)
  {
    v95 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v94);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v95 = 1;
  }
  v3 += v95 + 2;
  if ((v60 & 0x400000) == 0)
  {
LABEL_252:
    if ((v60 & 0x800000) == 0)
      goto LABEL_286;
    goto LABEL_282;
  }
LABEL_278:
  v96 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 53);
  if (v96 >= 0x80)
  {
    v97 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v96);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v97 = 1;
  }
  v3 += v97 + 2;
  if ((v60 & 0x800000) != 0)
  {
LABEL_282:
    v98 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 54);
    if (v98 >= 0x80)
    {
      v99 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v98);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v99 = 1;
    }
    v3 += v99 + 2;
  }
LABEL_286:
  if (!HIBYTE(v60))
    goto LABEL_299;
  if ((v60 & 0x1000000) != 0)
  {
    v100 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 55);
    if (v100 >= 0x80)
    {
      v101 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v100);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v101 = 1;
    }
    v3 += v101 + 2;
  }
  if ((v60 & 0x2000000) != 0)
    v3 += 3;
  if ((v60 & 0x4000000) != 0)
  {
    v105 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 57);
    if (v105 >= 0x80)
    {
      v106 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v105);
      v60 = *((_DWORD *)this + 114);
    }
    else
    {
      v106 = 1;
    }
    v3 += v106 + 2;
    if ((v60 & 0x8000000) == 0)
    {
LABEL_296:
      if ((v60 & 0x10000000) == 0)
        goto LABEL_297;
      goto LABEL_370;
    }
  }
  else if ((v60 & 0x8000000) == 0)
  {
    goto LABEL_296;
  }
  v127 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 58);
  if (v127 >= 0x80)
  {
    v128 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v127);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v128 = 1;
  }
  v3 += v128 + 2;
  if ((v60 & 0x10000000) == 0)
  {
LABEL_297:
    if ((v60 & 0x20000000) == 0)
      goto LABEL_298;
    goto LABEL_374;
  }
LABEL_370:
  v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 59);
  if (v129 >= 0x80)
  {
    v130 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v129);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v130 = 1;
  }
  v3 += v130 + 2;
  if ((v60 & 0x20000000) == 0)
  {
LABEL_298:
    if ((v60 & 0x80000000) == 0)
      goto LABEL_299;
    goto LABEL_378;
  }
LABEL_374:
  v131 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 64);
  if (v131 >= 0x80)
  {
    v132 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v131);
    v60 = *((_DWORD *)this + 114);
  }
  else
  {
    v132 = 1;
  }
  v3 += v132 + 2;
  if ((v60 & 0x80000000) != 0)
LABEL_378:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 33))
        + 2;
LABEL_299:
  v102 = *((_DWORD *)this + 115);
  if (!(_BYTE)v102)
    goto LABEL_343;
  if ((v102 & 1) != 0)
  {
    v103 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 65);
    if (v103 >= 0x80)
    {
      v104 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v103);
      v102 = *((_DWORD *)this + 115);
    }
    else
    {
      v104 = 1;
    }
    v3 += v104 + 2;
    if ((v102 & 2) == 0)
    {
LABEL_302:
      if ((v102 & 4) == 0)
        goto LABEL_303;
      goto LABEL_319;
    }
  }
  else if ((v102 & 2) == 0)
  {
    goto LABEL_302;
  }
  v107 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 68);
  if (v107 >= 0x80)
  {
    v108 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v107);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v108 = 1;
  }
  v3 += v108 + 2;
  if ((v102 & 4) == 0)
  {
LABEL_303:
    if ((v102 & 8) == 0)
      goto LABEL_304;
    goto LABEL_323;
  }
LABEL_319:
  v109 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 69);
  if (v109 >= 0x80)
  {
    v110 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v109);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v110 = 1;
  }
  v3 += v110 + 2;
  if ((v102 & 8) == 0)
  {
LABEL_304:
    if ((v102 & 0x10) == 0)
      goto LABEL_305;
    goto LABEL_327;
  }
LABEL_323:
  v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 70);
  if (v111 >= 0x80)
  {
    v112 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v111);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v112 = 1;
  }
  v3 += v112 + 2;
  if ((v102 & 0x10) == 0)
  {
LABEL_305:
    if ((v102 & 0x20) == 0)
      goto LABEL_306;
    goto LABEL_331;
  }
LABEL_327:
  v113 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 71);
  if (v113 >= 0x80)
  {
    v114 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v113);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v114 = 1;
  }
  v3 += v114 + 2;
  if ((v102 & 0x20) == 0)
  {
LABEL_306:
    if ((v102 & 0x40) == 0)
      goto LABEL_307;
    goto LABEL_335;
  }
LABEL_331:
  v115 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 72);
  if (v115 >= 0x80)
  {
    v116 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v115);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v116 = 1;
  }
  v3 += v116 + 2;
  if ((v102 & 0x40) == 0)
  {
LABEL_307:
    if ((v102 & 0x80) == 0)
      goto LABEL_343;
    goto LABEL_339;
  }
LABEL_335:
  v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 73);
  if (v117 >= 0x80)
  {
    v118 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v117);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v118 = 1;
  }
  v3 += v118 + 2;
  if ((v102 & 0x80) != 0)
  {
LABEL_339:
    v119 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 74);
    if (v119 >= 0x80)
    {
      v120 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v119);
      v102 = *((_DWORD *)this + 115);
    }
    else
    {
      v120 = 1;
    }
    v3 += v120 + 2;
  }
LABEL_343:
  if ((v102 & 0xFF00) == 0)
    goto LABEL_406;
  if ((v102 & 0x100) != 0)
  {
    v121 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 75);
    if (v121 >= 0x80)
    {
      v122 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v121);
      v102 = *((_DWORD *)this + 115);
    }
    else
    {
      v122 = 1;
    }
    v3 += v122 + 2;
    if ((v102 & 0x200) == 0)
    {
LABEL_346:
      if ((v102 & 0x400) == 0)
        goto LABEL_347;
      goto LABEL_361;
    }
  }
  else if ((v102 & 0x200) == 0)
  {
    goto LABEL_346;
  }
  v123 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 76);
  if (v123 >= 0x80)
  {
    v124 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v123);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v124 = 1;
  }
  v3 += v124 + 2;
  if ((v102 & 0x400) == 0)
  {
LABEL_347:
    if ((v102 & 0x800) == 0)
      goto LABEL_348;
    goto LABEL_382;
  }
LABEL_361:
  v125 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 77);
  if ((v125 & 0x80000000) != 0)
  {
    v126 = 10;
  }
  else if (v125 >= 0x80)
  {
    v126 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v125);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v126 = 1;
  }
  v3 += v126 + 2;
  if ((v102 & 0x800) == 0)
  {
LABEL_348:
    if ((v102 & 0x1000) == 0)
      goto LABEL_349;
    goto LABEL_386;
  }
LABEL_382:
  v133 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 78);
  if (v133 >= 0x80)
  {
    v134 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v133);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v134 = 1;
  }
  v3 += v134 + 2;
  if ((v102 & 0x1000) == 0)
  {
LABEL_349:
    if ((v102 & 0x2000) == 0)
      goto LABEL_350;
    goto LABEL_392;
  }
LABEL_386:
  v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 79);
  if ((v135 & 0x80000000) != 0)
  {
    v136 = 10;
  }
  else if (v135 >= 0x80)
  {
    v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v135);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v136 = 1;
  }
  v3 += v136 + 2;
  if ((v102 & 0x2000) == 0)
  {
LABEL_350:
    if ((v102 & 0x4000) == 0)
      goto LABEL_351;
    goto LABEL_396;
  }
LABEL_392:
  v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 80);
  if (v137 >= 0x80)
  {
    v138 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v137);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v138 = 1;
  }
  v3 += v138 + 2;
  if ((v102 & 0x4000) == 0)
  {
LABEL_351:
    if ((v102 & 0x8000) == 0)
      goto LABEL_406;
    goto LABEL_402;
  }
LABEL_396:
  v139 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 81);
  if ((v139 & 0x80000000) != 0)
  {
    v140 = 10;
  }
  else if (v139 >= 0x80)
  {
    v140 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v139);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v140 = 1;
  }
  v3 += v140 + 2;
  if ((v102 & 0x8000) != 0)
  {
LABEL_402:
    v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 82);
    if (v141 >= 0x80)
    {
      v142 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v141);
      v102 = *((_DWORD *)this + 115);
    }
    else
    {
      v142 = 1;
    }
    v3 += v142 + 2;
  }
LABEL_406:
  if ((v102 & 0xFF0000) == 0)
    goto LABEL_448;
  if ((v102 & 0x10000) != 0)
  {
    v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 83);
    if (v143 >= 0x80)
    {
      v144 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v143);
      v102 = *((_DWORD *)this + 115);
    }
    else
    {
      v144 = 1;
    }
    v3 += v144 + 2;
    if ((v102 & 0x20000) == 0)
    {
LABEL_409:
      if ((v102 & 0x40000) == 0)
        goto LABEL_410;
      goto LABEL_424;
    }
  }
  else if ((v102 & 0x20000) == 0)
  {
    goto LABEL_409;
  }
  v145 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 84);
  if (v145 >= 0x80)
  {
    v146 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v145);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v146 = 1;
  }
  v3 += v146 + 2;
  if ((v102 & 0x40000) == 0)
  {
LABEL_410:
    if ((v102 & 0x80000) == 0)
      goto LABEL_411;
    goto LABEL_428;
  }
LABEL_424:
  v147 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 85);
  if (v147 >= 0x80)
  {
    v148 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v147);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v148 = 1;
  }
  v3 += v148 + 2;
  if ((v102 & 0x80000) == 0)
  {
LABEL_411:
    if ((v102 & 0x100000) == 0)
      goto LABEL_412;
    goto LABEL_432;
  }
LABEL_428:
  v149 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 86);
  if (v149 >= 0x80)
  {
    v150 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v149);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v150 = 1;
  }
  v3 += v150 + 2;
  if ((v102 & 0x100000) == 0)
  {
LABEL_412:
    if ((v102 & 0x200000) == 0)
      goto LABEL_413;
    goto LABEL_436;
  }
LABEL_432:
  v151 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 87);
  if (v151 >= 0x80)
  {
    v152 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v151);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v152 = 1;
  }
  v3 += v152 + 2;
  if ((v102 & 0x200000) == 0)
  {
LABEL_413:
    if ((v102 & 0x400000) == 0)
      goto LABEL_414;
    goto LABEL_440;
  }
LABEL_436:
  v153 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 88);
  if (v153 >= 0x80)
  {
    v154 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v153);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v154 = 1;
  }
  v3 += v154 + 2;
  if ((v102 & 0x400000) == 0)
  {
LABEL_414:
    if ((v102 & 0x800000) == 0)
      goto LABEL_448;
    goto LABEL_444;
  }
LABEL_440:
  v155 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 89);
  if (v155 >= 0x80)
  {
    v156 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v155);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v156 = 1;
  }
  v3 += v156 + 2;
  if ((v102 & 0x800000) != 0)
  {
LABEL_444:
    v157 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 90);
    if (v157 >= 0x80)
    {
      v158 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v157);
      v102 = *((_DWORD *)this + 115);
    }
    else
    {
      v158 = 1;
    }
    v3 += v158 + 2;
  }
LABEL_448:
  if (!HIBYTE(v102))
    goto LABEL_489;
  if ((v102 & 0x1000000) != 0)
  {
    v159 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 91);
    if (v159 >= 0x80)
    {
      v160 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v159);
      v102 = *((_DWORD *)this + 115);
    }
    else
    {
      v160 = 1;
    }
    v3 += v160 + 2;
    if ((v102 & 0x2000000) == 0)
    {
LABEL_451:
      if ((v102 & 0x4000000) == 0)
        goto LABEL_452;
LABEL_462:
      v163 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 93);
      if (v163 >= 0x80)
      {
        v164 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v163);
        v102 = *((_DWORD *)this + 115);
      }
      else
      {
        v164 = 1;
      }
      v3 += v164 + 2;
      if ((v102 & 0x8000000) == 0)
        goto LABEL_470;
      goto LABEL_466;
    }
  }
  else if ((v102 & 0x2000000) == 0)
  {
    goto LABEL_451;
  }
  v161 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 92);
  if (v161 >= 0x80)
  {
    v162 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v161);
    v102 = *((_DWORD *)this + 115);
  }
  else
  {
    v162 = 1;
  }
  v3 += v162 + 2;
  if ((v102 & 0x4000000) != 0)
    goto LABEL_462;
LABEL_452:
  if ((v102 & 0x8000000) != 0)
  {
LABEL_466:
    v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 94);
    if (v165 >= 0x80)
    {
      v166 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v165);
      v102 = *((_DWORD *)this + 115);
    }
    else
    {
      v166 = 1;
    }
    v3 += v166 + 2;
  }
LABEL_470:
  v167 = v3 + 3;
  if ((v102 & 0x10000000) == 0)
    v167 = v3;
  if ((v102 & 0x20000000) != 0)
    v3 = v167 + 3;
  else
    v3 = v167;
  if ((v102 & 0x40000000) != 0)
  {
    v168 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 96);
    if ((v168 & 0x80000000) != 0)
    {
      v169 = 10;
    }
    else if (v168 >= 0x80)
    {
      v169 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v168);
      v102 = *((_DWORD *)this + 115);
    }
    else
    {
      v169 = 1;
    }
    v3 += v169 + 2;
  }
  if ((v102 & 0x80000000) != 0)
  {
    v170 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 97);
    if ((v170 & 0x80000000) != 0)
    {
      v171 = 10;
    }
    else if (v170 >= 0x80)
    {
      v171 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v170);
    }
    else
    {
      v171 = 1;
    }
    v3 += v171 + 2;
  }
LABEL_489:
  v172 = *((_DWORD *)this + 116);
  if (!(_BYTE)v172)
    goto LABEL_526;
  if ((v172 & 1) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 49))
        + 2;
    v172 = *((_DWORD *)this + 116);
  }
  if ((v172 & 2) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 50))
        + 2;
    v172 = *((_DWORD *)this + 116);
  }
  if ((v172 & 4) != 0)
    v3 += 10;
  if ((v172 & 8) != 0)
  {
    v173 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 104);
    if (v173 >= 0x80)
    {
      v174 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v173);
      v172 = *((_DWORD *)this + 116);
    }
    else
    {
      v174 = 1;
    }
    v3 += v174 + 2;
    if ((v172 & 0x10) == 0)
    {
LABEL_498:
      if ((v172 & 0x20) == 0)
        goto LABEL_499;
      goto LABEL_510;
    }
  }
  else if ((v172 & 0x10) == 0)
  {
    goto LABEL_498;
  }
  v175 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 105);
  if (v175 >= 0x80)
  {
    v176 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v175);
    v172 = *((_DWORD *)this + 116);
  }
  else
  {
    v176 = 1;
  }
  v3 += v176 + 2;
  if ((v172 & 0x20) == 0)
  {
LABEL_499:
    if ((v172 & 0x40) == 0)
      goto LABEL_500;
    goto LABEL_514;
  }
LABEL_510:
  v177 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 106);
  if (v177 >= 0x80)
  {
    v178 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v177) + 2;
    v172 = *((_DWORD *)this + 116);
  }
  else
  {
    v178 = 3;
  }
  v3 += v178;
  if ((v172 & 0x40) == 0)
  {
LABEL_500:
    if ((v172 & 0x80) == 0)
      goto LABEL_526;
    goto LABEL_520;
  }
LABEL_514:
  v179 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 107);
  if ((v179 & 0x80000000) != 0)
  {
    v180 = 12;
  }
  else if (v179 >= 0x80)
  {
    v180 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v179) + 2;
    v172 = *((_DWORD *)this + 116);
  }
  else
  {
    v180 = 3;
  }
  v3 += v180;
  if ((v172 & 0x80) != 0)
  {
LABEL_520:
    v181 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 108);
    if ((v181 & 0x80000000) != 0)
    {
      v182 = 12;
    }
    else if (v181 >= 0x80)
    {
      v182 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v181) + 2;
      v172 = *((_DWORD *)this + 116);
    }
    else
    {
      v182 = 3;
    }
    v3 += v182;
  }
LABEL_526:
  if ((v172 & 0xFF00) == 0)
    goto LABEL_545;
  if ((v172 & 0x100) != 0)
  {
    v183 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 109);
    if ((v183 & 0x80000000) != 0)
    {
      v184 = 12;
    }
    else if (v183 >= 0x80)
    {
      v184 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v183) + 2;
      v172 = *((_DWORD *)this + 116);
    }
    else
    {
      v184 = 3;
    }
    v3 += v184;
    if ((v172 & 0x200) == 0)
    {
LABEL_529:
      if ((v172 & 0x400) == 0)
        goto LABEL_545;
      goto LABEL_541;
    }
  }
  else if ((v172 & 0x200) == 0)
  {
    goto LABEL_529;
  }
  v185 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 110);
  if (v185 >= 0x80)
  {
    v186 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v185) + 2;
    v172 = *((_DWORD *)this + 116);
  }
  else
  {
    v186 = 3;
  }
  v3 += v186;
  if ((v172 & 0x400) != 0)
  {
LABEL_541:
    v187 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 111);
    if (v187 >= 0x80)
      v188 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v187) + 2;
    else
      v188 = 3;
    v3 += v188;
  }
LABEL_545:
  v189 = *((_DWORD *)this + 62);
  if (v189 < 1)
  {
    v191 = 0;
  }
  else
  {
    v190 = 0;
    v191 = 0;
    do
    {
      v192 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 30)
                                                                                              + 4 * v190);
      if (v192 >= 0x80)
      {
        v193 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v192);
        v189 = *((_DWORD *)this + 62);
      }
      else
      {
        v193 = 1;
      }
      v191 += v193;
      ++v190;
    }
    while (v190 < v189);
  }
  result = (v191 + v3 + 2 * v189);
  *((_DWORD *)this + 112) = result;
  return result;
}

void awd::metrics::MotionFitnessSession::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionFitnessSession::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionFitnessSession::CopyFrom(awd::metrics::MotionFitnessSession *this, const awd::metrics::MotionFitnessSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessSession *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionFitnessSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionFitnessSession::IsInitialized(awd::metrics::MotionFitnessSession *this)
{
  return 1;
}

double awd::metrics::MotionFitnessSession::Swap(awd::metrics::MotionFitnessSession *this, awd::metrics::MotionFitnessSession *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 52);
    *((_BYTE *)this + 52) = *((_BYTE *)a2 + 52);
    *((_BYTE *)a2 + 52) = v2;
    v3 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v3;
    LODWORD(v3) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    LODWORD(v3) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LOBYTE(v3) = *((_BYTE *)this + 53);
    *((_BYTE *)this + 53) = *((_BYTE *)a2 + 53);
    *((_BYTE *)a2 + 53) = v3;
    LODWORD(v3) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v3;
    LODWORD(v3) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
    LODWORD(v3) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v3;
    LODWORD(v3) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v3;
    LODWORD(v3) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v3;
    LODWORD(v3) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v3;
    LOBYTE(v3) = *((_BYTE *)this + 54);
    *((_BYTE *)this + 54) = *((_BYTE *)a2 + 54);
    *((_BYTE *)a2 + 54) = v3;
    LOBYTE(v3) = *((_BYTE *)this + 55);
    *((_BYTE *)this + 55) = *((_BYTE *)a2 + 55);
    *((_BYTE *)a2 + 55) = v3;
    LODWORD(v3) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v3;
    LODWORD(v3) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v3;
    LODWORD(v3) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v3;
    LODWORD(v3) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v3;
    LODWORD(v3) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v3;
    LODWORD(v3) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v3;
    LODWORD(v3) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v3;
    LODWORD(v3) = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v3;
    LODWORD(v3) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v3;
    LODWORD(v3) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v3;
    LODWORD(v3) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v3;
    LODWORD(v3) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v3;
    LODWORD(v3) = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v3;
    v4 = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v4;
    LODWORD(v3) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v3;
    v5 = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v5;
    v6 = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v6;
    LODWORD(v3) = *((_DWORD *)this + 35);
    *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
    *((_DWORD *)a2 + 35) = v3;
    LODWORD(v3) = *((_DWORD *)this + 36);
    *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
    *((_DWORD *)a2 + 36) = v3;
    LODWORD(v3) = *((_DWORD *)this + 37);
    *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
    *((_DWORD *)a2 + 37) = v3;
    LOBYTE(v3) = *((_BYTE *)this + 224);
    *((_BYTE *)this + 224) = *((_BYTE *)a2 + 224);
    *((_BYTE *)a2 + 224) = v3;
    LODWORD(v3) = *((_DWORD *)this + 38);
    *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
    *((_DWORD *)a2 + 38) = v3;
    LODWORD(v3) = *((_DWORD *)this + 39);
    *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
    *((_DWORD *)a2 + 39) = v3;
    LODWORD(v3) = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v3;
    LOBYTE(v3) = *((_BYTE *)this + 225);
    *((_BYTE *)this + 225) = *((_BYTE *)a2 + 225);
    *((_BYTE *)a2 + 225) = v3;
    LODWORD(v3) = *((_DWORD *)this + 41);
    *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
    *((_DWORD *)a2 + 41) = v3;
    LODWORD(v3) = *((_DWORD *)this + 42);
    *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v3;
    LODWORD(v3) = *((_DWORD *)this + 43);
    *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
    *((_DWORD *)a2 + 43) = v3;
    v7 = *((_DWORD *)this + 44);
    *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
    *((_DWORD *)a2 + 44) = v7;
    LODWORD(v3) = *((_DWORD *)this + 45);
    *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
    *((_DWORD *)a2 + 45) = v3;
    LODWORD(v3) = *((_DWORD *)this + 46);
    *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
    *((_DWORD *)a2 + 46) = v3;
    LODWORD(v3) = *((_DWORD *)this + 47);
    *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
    *((_DWORD *)a2 + 47) = v3;
    LODWORD(v3) = *((_DWORD *)this + 48);
    *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
    *((_DWORD *)a2 + 48) = v3;
    LODWORD(v3) = *((_DWORD *)this + 49);
    *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
    *((_DWORD *)a2 + 49) = v3;
    LODWORD(v3) = *((_DWORD *)this + 50);
    *((_DWORD *)this + 50) = *((_DWORD *)a2 + 50);
    *((_DWORD *)a2 + 50) = v3;
    LODWORD(v3) = *((_DWORD *)this + 51);
    *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
    *((_DWORD *)a2 + 51) = v3;
    LODWORD(v3) = *((_DWORD *)this + 52);
    *((_DWORD *)this + 52) = *((_DWORD *)a2 + 52);
    *((_DWORD *)a2 + 52) = v3;
    LODWORD(v3) = *((_DWORD *)this + 53);
    *((_DWORD *)this + 53) = *((_DWORD *)a2 + 53);
    *((_DWORD *)a2 + 53) = v3;
    LODWORD(v3) = *((_DWORD *)this + 54);
    *((_DWORD *)this + 54) = *((_DWORD *)a2 + 54);
    *((_DWORD *)a2 + 54) = v3;
    LODWORD(v3) = *((_DWORD *)this + 55);
    *((_DWORD *)this + 55) = *((_DWORD *)a2 + 55);
    *((_DWORD *)a2 + 55) = v3;
    LOBYTE(v3) = *((_BYTE *)this + 226);
    *((_BYTE *)this + 226) = *((_BYTE *)a2 + 226);
    *((_BYTE *)a2 + 226) = v3;
    LODWORD(v3) = *((_DWORD *)this + 57);
    *((_DWORD *)this + 57) = *((_DWORD *)a2 + 57);
    *((_DWORD *)a2 + 57) = v3;
    LODWORD(v3) = *((_DWORD *)this + 58);
    *((_DWORD *)this + 58) = *((_DWORD *)a2 + 58);
    *((_DWORD *)a2 + 58) = v3;
    LODWORD(v3) = *((_DWORD *)this + 59);
    *((_DWORD *)this + 59) = *((_DWORD *)a2 + 59);
    *((_DWORD *)a2 + 59) = v3;
    LODWORD(v3) = *((_DWORD *)this + 64);
    *((_DWORD *)this + 64) = *((_DWORD *)a2 + 64);
    *((_DWORD *)a2 + 64) = v3;
    v8 = *((_QWORD *)this + 30);
    *((_QWORD *)this + 30) = *((_QWORD *)a2 + 30);
    v9 = *((_QWORD *)a2 + 31);
    *((_QWORD *)a2 + 30) = v8;
    v10 = *((_QWORD *)this + 31);
    *((_QWORD *)this + 31) = v9;
    *((_QWORD *)a2 + 31) = v10;
    v11 = *((_QWORD *)this + 33);
    *((_QWORD *)this + 33) = *((_QWORD *)a2 + 33);
    *((_QWORD *)a2 + 33) = v11;
    LODWORD(v11) = *((_DWORD *)this + 65);
    *((_DWORD *)this + 65) = *((_DWORD *)a2 + 65);
    *((_DWORD *)a2 + 65) = v11;
    LODWORD(v11) = *((_DWORD *)this + 68);
    *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
    *((_DWORD *)a2 + 68) = v11;
    LODWORD(v11) = *((_DWORD *)this + 69);
    *((_DWORD *)this + 69) = *((_DWORD *)a2 + 69);
    *((_DWORD *)a2 + 69) = v11;
    LODWORD(v11) = *((_DWORD *)this + 70);
    *((_DWORD *)this + 70) = *((_DWORD *)a2 + 70);
    *((_DWORD *)a2 + 70) = v11;
    LODWORD(v11) = *((_DWORD *)this + 71);
    *((_DWORD *)this + 71) = *((_DWORD *)a2 + 71);
    *((_DWORD *)a2 + 71) = v11;
    LODWORD(v11) = *((_DWORD *)this + 72);
    *((_DWORD *)this + 72) = *((_DWORD *)a2 + 72);
    *((_DWORD *)a2 + 72) = v11;
    LODWORD(v11) = *((_DWORD *)this + 73);
    *((_DWORD *)this + 73) = *((_DWORD *)a2 + 73);
    *((_DWORD *)a2 + 73) = v11;
    LODWORD(v11) = *((_DWORD *)this + 74);
    *((_DWORD *)this + 74) = *((_DWORD *)a2 + 74);
    *((_DWORD *)a2 + 74) = v11;
    LODWORD(v11) = *((_DWORD *)this + 75);
    *((_DWORD *)this + 75) = *((_DWORD *)a2 + 75);
    *((_DWORD *)a2 + 75) = v11;
    LODWORD(v11) = *((_DWORD *)this + 76);
    *((_DWORD *)this + 76) = *((_DWORD *)a2 + 76);
    *((_DWORD *)a2 + 76) = v11;
    LODWORD(v11) = *((_DWORD *)this + 77);
    *((_DWORD *)this + 77) = *((_DWORD *)a2 + 77);
    *((_DWORD *)a2 + 77) = v11;
    LODWORD(v11) = *((_DWORD *)this + 78);
    *((_DWORD *)this + 78) = *((_DWORD *)a2 + 78);
    *((_DWORD *)a2 + 78) = v11;
    LODWORD(v11) = *((_DWORD *)this + 79);
    *((_DWORD *)this + 79) = *((_DWORD *)a2 + 79);
    *((_DWORD *)a2 + 79) = v11;
    LODWORD(v11) = *((_DWORD *)this + 80);
    *((_DWORD *)this + 80) = *((_DWORD *)a2 + 80);
    *((_DWORD *)a2 + 80) = v11;
    LODWORD(v11) = *((_DWORD *)this + 81);
    *((_DWORD *)this + 81) = *((_DWORD *)a2 + 81);
    *((_DWORD *)a2 + 81) = v11;
    LODWORD(v11) = *((_DWORD *)this + 82);
    *((_DWORD *)this + 82) = *((_DWORD *)a2 + 82);
    *((_DWORD *)a2 + 82) = v11;
    LODWORD(v11) = *((_DWORD *)this + 83);
    *((_DWORD *)this + 83) = *((_DWORD *)a2 + 83);
    *((_DWORD *)a2 + 83) = v11;
    LODWORD(v11) = *((_DWORD *)this + 84);
    *((_DWORD *)this + 84) = *((_DWORD *)a2 + 84);
    *((_DWORD *)a2 + 84) = v11;
    LODWORD(v11) = *((_DWORD *)this + 85);
    *((_DWORD *)this + 85) = *((_DWORD *)a2 + 85);
    *((_DWORD *)a2 + 85) = v11;
    LODWORD(v11) = *((_DWORD *)this + 86);
    *((_DWORD *)this + 86) = *((_DWORD *)a2 + 86);
    *((_DWORD *)a2 + 86) = v11;
    LODWORD(v11) = *((_DWORD *)this + 87);
    *((_DWORD *)this + 87) = *((_DWORD *)a2 + 87);
    *((_DWORD *)a2 + 87) = v11;
    LODWORD(v11) = *((_DWORD *)this + 88);
    *((_DWORD *)this + 88) = *((_DWORD *)a2 + 88);
    *((_DWORD *)a2 + 88) = v11;
    LODWORD(v11) = *((_DWORD *)this + 89);
    *((_DWORD *)this + 89) = *((_DWORD *)a2 + 89);
    *((_DWORD *)a2 + 89) = v11;
    LODWORD(v11) = *((_DWORD *)this + 90);
    *((_DWORD *)this + 90) = *((_DWORD *)a2 + 90);
    *((_DWORD *)a2 + 90) = v11;
    LODWORD(v11) = *((_DWORD *)this + 91);
    *((_DWORD *)this + 91) = *((_DWORD *)a2 + 91);
    *((_DWORD *)a2 + 91) = v11;
    LODWORD(v11) = *((_DWORD *)this + 92);
    *((_DWORD *)this + 92) = *((_DWORD *)a2 + 92);
    *((_DWORD *)a2 + 92) = v11;
    LODWORD(v11) = *((_DWORD *)this + 93);
    *((_DWORD *)this + 93) = *((_DWORD *)a2 + 93);
    *((_DWORD *)a2 + 93) = v11;
    LODWORD(v11) = *((_DWORD *)this + 94);
    *((_DWORD *)this + 94) = *((_DWORD *)a2 + 94);
    *((_DWORD *)a2 + 94) = v11;
    LOBYTE(v11) = *((_BYTE *)this + 227);
    *((_BYTE *)this + 227) = *((_BYTE *)a2 + 227);
    *((_BYTE *)a2 + 227) = v11;
    LOBYTE(v11) = *((_BYTE *)this + 380);
    *((_BYTE *)this + 380) = *((_BYTE *)a2 + 380);
    *((_BYTE *)a2 + 380) = v11;
    LODWORD(v11) = *((_DWORD *)this + 96);
    *((_DWORD *)this + 96) = *((_DWORD *)a2 + 96);
    *((_DWORD *)a2 + 96) = v11;
    LODWORD(v11) = *((_DWORD *)this + 97);
    *((_DWORD *)this + 97) = *((_DWORD *)a2 + 97);
    *((_DWORD *)a2 + 97) = v11;
    v12 = *((_QWORD *)this + 49);
    *((_QWORD *)this + 49) = *((_QWORD *)a2 + 49);
    *((_QWORD *)a2 + 49) = v12;
    v13 = *((_QWORD *)this + 50);
    *((_QWORD *)this + 50) = *((_QWORD *)a2 + 50);
    *((_QWORD *)a2 + 50) = v13;
    result = *((double *)this + 51);
    *((_QWORD *)this + 51) = *((_QWORD *)a2 + 51);
    *((double *)a2 + 51) = result;
    LODWORD(v13) = *((_DWORD *)this + 104);
    *((_DWORD *)this + 104) = *((_DWORD *)a2 + 104);
    *((_DWORD *)a2 + 104) = v13;
    LODWORD(v13) = *((_DWORD *)this + 105);
    *((_DWORD *)this + 105) = *((_DWORD *)a2 + 105);
    *((_DWORD *)a2 + 105) = v13;
    LODWORD(v13) = *((_DWORD *)this + 106);
    *((_DWORD *)this + 106) = *((_DWORD *)a2 + 106);
    *((_DWORD *)a2 + 106) = v13;
    LODWORD(v13) = *((_DWORD *)this + 107);
    *((_DWORD *)this + 107) = *((_DWORD *)a2 + 107);
    *((_DWORD *)a2 + 107) = v13;
    LODWORD(v13) = *((_DWORD *)this + 108);
    *((_DWORD *)this + 108) = *((_DWORD *)a2 + 108);
    *((_DWORD *)a2 + 108) = v13;
    LODWORD(v13) = *((_DWORD *)this + 109);
    *((_DWORD *)this + 109) = *((_DWORD *)a2 + 109);
    *((_DWORD *)a2 + 109) = v13;
    LODWORD(v13) = *((_DWORD *)this + 110);
    *((_DWORD *)this + 110) = *((_DWORD *)a2 + 110);
    *((_DWORD *)a2 + 110) = v13;
    LODWORD(v13) = *((_DWORD *)this + 111);
    *((_DWORD *)this + 111) = *((_DWORD *)a2 + 111);
    *((_DWORD *)a2 + 111) = v13;
    LODWORD(v13) = *((_DWORD *)this + 113);
    *((_DWORD *)this + 113) = *((_DWORD *)a2 + 113);
    *((_DWORD *)a2 + 113) = v13;
    LODWORD(v13) = *((_DWORD *)this + 114);
    *((_DWORD *)this + 114) = *((_DWORD *)a2 + 114);
    *((_DWORD *)a2 + 114) = v13;
    LODWORD(v13) = *((_DWORD *)this + 115);
    *((_DWORD *)this + 115) = *((_DWORD *)a2 + 115);
    *((_DWORD *)a2 + 115) = v13;
    LODWORD(v13) = *((_DWORD *)this + 116);
    *((_DWORD *)this + 116) = *((_DWORD *)a2 + 116);
    *((_DWORD *)a2 + 116) = v13;
    LODWORD(v13) = *((_DWORD *)this + 112);
    *((_DWORD *)this + 112) = *((_DWORD *)a2 + 112);
    *((_DWORD *)a2 + 112) = v13;
  }
  return result;
}

_QWORD *awd::metrics::MotionFitnessSession::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessSession");
}

double awd::metrics::MotionFitnessAllDay::SharedCtor(awd::metrics::MotionFitnessAllDay *this)
{
  double result;
  uint64_t v2;

  *((_DWORD *)this + 216) = 0;
  *((_BYTE *)this + 444) = 0;
  result = 0.0;
  *((_QWORD *)this + 23) = 0;
  *((_QWORD *)this + 36) = 0;
  *((_QWORD *)this + 39) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  v2 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 40) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 41) = v2;
  *((_QWORD *)this + 42) = v2;
  *((_QWORD *)this + 43) = v2;
  *((_QWORD *)this + 44) = v2;
  *((_QWORD *)this + 98) = 0;
  *((_DWORD *)this + 221) = 0;
  *(_OWORD *)((char *)this + 868) = 0u;
  *(_OWORD *)((char *)this + 376) = 0u;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *((_DWORD *)this + 110) = 0;
  *(_OWORD *)((char *)this + 445) = 0u;
  *(_OWORD *)((char *)this + 461) = 0u;
  *(_OWORD *)((char *)this + 477) = 0u;
  *((_DWORD *)this + 123) = 0;
  *((_OWORD *)this + 33) = 0u;
  *((_OWORD *)this + 34) = 0u;
  *((_OWORD *)this + 35) = 0u;
  *((_OWORD *)this + 36) = 0u;
  *((_OWORD *)this + 37) = 0u;
  *((_OWORD *)this + 38) = 0u;
  *((_OWORD *)this + 39) = 0u;
  *((_QWORD *)this + 107) = 0;
  *(_OWORD *)((char *)this + 824) = 0u;
  *(_OWORD *)((char *)this + 840) = 0u;
  *(_OWORD *)((char *)this + 808) = 0u;
  return result;
}

awd::metrics::MotionFitnessAllDay *awd::metrics::MotionFitnessAllDay::MotionFitnessAllDay(awd::metrics::MotionFitnessAllDay *this, const awd::metrics::MotionFitnessAllDay *a2)
{
  *(_QWORD *)this = &off_24D98EB28;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *(_OWORD *)((char *)this + 792) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 31) = 0u;
  *((_OWORD *)this + 32) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 45) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((_OWORD *)this + 43) = 0u;
  *((_OWORD *)this + 44) = 0u;
  *((_OWORD *)this + 41) = 0u;
  *((_OWORD *)this + 42) = 0u;
  *((_OWORD *)this + 40) = 0u;
  awd::metrics::MotionFitnessAllDay::SharedCtor(this);
  awd::metrics::MotionFitnessAllDay::MergeFrom(this, a2);
  return this;
}

void sub_2189ED370(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (*v9)
    MEMORY[0x219A1DC64](*v9, 0x1000C8000313F17);
  v11 = *((_QWORD *)v1 + 96);
  if (v11)
    MEMORY[0x219A1DC64](v11, 0x1000C8000313F17);
  v12 = *((_QWORD *)v1 + 94);
  if (v12)
    MEMORY[0x219A1DC64](v12, 0x1000C8000313F17);
  v13 = *((_QWORD *)v1 + 92);
  if (v13)
    MEMORY[0x219A1DC64](v13, 0x1000C8000313F17);
  v14 = *((_QWORD *)v1 + 90);
  if (v14)
    MEMORY[0x219A1DC64](v14, 0x1000C8000313F17);
  v15 = *((_QWORD *)v1 + 88);
  if (v15)
    MEMORY[0x219A1DC64](v15, 0x1000C8000313F17);
  v16 = *((_QWORD *)v1 + 86);
  if (v16)
    MEMORY[0x219A1DC64](v16, 0x1000C8052888210);
  v17 = *((_QWORD *)v1 + 84);
  if (v17)
    MEMORY[0x219A1DC64](v17, 0x1000C8052888210);
  v18 = *((_QWORD *)v1 + 82);
  if (v18)
    MEMORY[0x219A1DC64](v18, 0x1000C8052888210);
  if (*v8)
    MEMORY[0x219A1DC64](*v8, 0x1000C8052888210);
  v19 = *((_QWORD *)v1 + 64);
  if (v19)
    MEMORY[0x219A1DC64](v19, 0x1000C8052888210);
  if (*v7)
    MEMORY[0x219A1DC64](*v7, 0x1000C8052888210);
  if (*v6)
    MEMORY[0x219A1DC64](*v6, 0x1000C8052888210);
  if (*v5)
    MEMORY[0x219A1DC64](*v5, 0x1000C8052888210);
  if (*v4)
    MEMORY[0x219A1DC64](*v4, 0x1000C8052888210);
  v20 = *((_QWORD *)v1 + 28);
  if (v20)
    MEMORY[0x219A1DC64](v20, 0x1000C8052888210);
  v21 = *((_QWORD *)v1 + 26);
  if (v21)
    MEMORY[0x219A1DC64](v21, 0x1000C8052888210);
  if (*v3)
    MEMORY[0x219A1DC64](*v3, 0x1000C8052888210);
  v22 = *((_QWORD *)v1 + 21);
  if (v22)
    MEMORY[0x219A1DC64](v22, 0x1000C8052888210);
  v23 = *((_QWORD *)v1 + 19);
  if (v23)
    MEMORY[0x219A1DC64](v23, 0x1000C8052888210);
  v24 = *((_QWORD *)v1 + 17);
  if (v24)
    MEMORY[0x219A1DC64](v24, 0x1000C8052888210);
  v25 = *((_QWORD *)v1 + 15);
  if (v25)
    MEMORY[0x219A1DC64](v25, 0x1000C8052888210);
  v26 = *((_QWORD *)v1 + 13);
  if (v26)
    MEMORY[0x219A1DC64](v26, 0x1000C8052888210);
  if (*v2)
    MEMORY[0x219A1DC64](*v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessAllDay::MergeFrom(awd::metrics::MotionFitnessAllDay *this, const awd::metrics::MotionFitnessAllDay *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  char v32;
  char v33;
  unsigned int v34;
  int v35;
  int v36;
  std::string *v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  char v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  char v53;
  char v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  char v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  const std::string *v82;
  std::string *v83;
  const std::string *v84;
  std::string *v85;
  const std::string *v86;
  std::string *v87;
  const std::string *v88;
  std::string *v89;
  const std::string *v90;
  std::string *v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  char v110;
  char v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  _BYTE v157[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v157);
  }
  v4 = *((_DWORD *)a2 + 24);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 22, *((_DWORD *)this + 24) + v4);
    memcpy((void *)(*((_QWORD *)this + 11) + 4 * *((int *)this + 24)), *((const void **)a2 + 11), 4 * *((int *)a2 + 24));
    *((_DWORD *)this + 24) += *((_DWORD *)a2 + 24);
  }
  v5 = *((_DWORD *)a2 + 28);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 26, *((_DWORD *)this + 28) + v5);
    memcpy((void *)(*((_QWORD *)this + 13) + 4 * *((int *)this + 28)), *((const void **)a2 + 13), 4 * *((int *)a2 + 28));
    *((_DWORD *)this + 28) += *((_DWORD *)a2 + 28);
  }
  v6 = *((_DWORD *)a2 + 32);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 30, *((_DWORD *)this + 32) + v6);
    memcpy((void *)(*((_QWORD *)this + 15) + 4 * *((int *)this + 32)), *((const void **)a2 + 15), 4 * *((int *)a2 + 32));
    *((_DWORD *)this + 32) += *((_DWORD *)a2 + 32);
  }
  v7 = *((_DWORD *)a2 + 36);
  if (v7)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 34, *((_DWORD *)this + 36) + v7);
    memcpy((void *)(*((_QWORD *)this + 17) + 4 * *((int *)this + 36)), *((const void **)a2 + 17), 4 * *((int *)a2 + 36));
    *((_DWORD *)this + 36) += *((_DWORD *)a2 + 36);
  }
  v8 = *((_DWORD *)a2 + 40);
  if (v8)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 38, *((_DWORD *)this + 40) + v8);
    memcpy((void *)(*((_QWORD *)this + 19) + 4 * *((int *)this + 40)), *((const void **)a2 + 19), 4 * *((int *)a2 + 40));
    *((_DWORD *)this + 40) += *((_DWORD *)a2 + 40);
  }
  v9 = *((_DWORD *)a2 + 44);
  if (v9)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 42, *((_DWORD *)this + 44) + v9);
    memcpy((void *)(*((_QWORD *)this + 21) + 4 * *((int *)this + 44)), *((const void **)a2 + 21), 4 * *((int *)a2 + 44));
    *((_DWORD *)this + 44) += *((_DWORD *)a2 + 44);
  }
  v10 = *((_DWORD *)a2 + 50);
  if (v10)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 48, *((_DWORD *)this + 50) + v10);
    memcpy((void *)(*((_QWORD *)this + 24) + 4 * *((int *)this + 50)), *((const void **)a2 + 24), 4 * *((int *)a2 + 50));
    *((_DWORD *)this + 50) += *((_DWORD *)a2 + 50);
  }
  v11 = *((_DWORD *)a2 + 54);
  if (v11)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 52, *((_DWORD *)this + 54) + v11);
    memcpy((void *)(*((_QWORD *)this + 26) + 4 * *((int *)this + 54)), *((const void **)a2 + 26), 4 * *((int *)a2 + 54));
    *((_DWORD *)this + 54) += *((_DWORD *)a2 + 54);
  }
  v12 = *((_DWORD *)a2 + 58);
  if (v12)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 56, *((_DWORD *)this + 58) + v12);
    memcpy((void *)(*((_QWORD *)this + 28) + 4 * *((int *)this + 58)), *((const void **)a2 + 28), 4 * *((int *)a2 + 58));
    *((_DWORD *)this + 58) += *((_DWORD *)a2 + 58);
  }
  v13 = *((_DWORD *)a2 + 70);
  if (v13)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 68, *((_DWORD *)this + 70) + v13);
    memcpy((void *)(*((_QWORD *)this + 34) + 4 * *((int *)this + 70)), *((const void **)a2 + 34), 4 * *((int *)a2 + 70));
    *((_DWORD *)this + 70) += *((_DWORD *)a2 + 70);
  }
  v14 = *((_DWORD *)a2 + 76);
  if (v14)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 74, *((_DWORD *)this + 76) + v14);
    memcpy((void *)(*((_QWORD *)this + 37) + 4 * *((int *)this + 76)), *((const void **)a2 + 37), 4 * *((int *)a2 + 76));
    *((_DWORD *)this + 76) += *((_DWORD *)a2 + 76);
  }
  v15 = *((_DWORD *)a2 + 92);
  if (v15)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 90, *((_DWORD *)this + 92) + v15);
    memcpy((void *)(*((_QWORD *)this + 45) + 4 * *((int *)this + 92)), *((const void **)a2 + 45), 4 * *((int *)a2 + 92));
    *((_DWORD *)this + 92) += *((_DWORD *)a2 + 92);
  }
  v16 = *((_DWORD *)a2 + 126);
  if (v16)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((_DWORD *)this + 124, *((_DWORD *)this + 126) + v16);
    memcpy((void *)(*((_QWORD *)this + 62) + 4 * *((int *)this + 126)), *((const void **)a2 + 62), 4 * *((int *)a2 + 126));
    *((_DWORD *)this + 126) += *((_DWORD *)a2 + 126);
  }
  v17 = *((_DWORD *)a2 + 130);
  if (v17)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 128, *((_DWORD *)this + 130) + v17);
    memcpy((void *)(*((_QWORD *)this + 64) + 4 * *((int *)this + 130)), *((const void **)a2 + 64), 4 * *((int *)a2 + 130));
    *((_DWORD *)this + 130) += *((_DWORD *)a2 + 130);
  }
  v18 = *((_DWORD *)a2 + 162);
  if (v18)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 160, *((_DWORD *)this + 162) + v18);
    memcpy((void *)(*((_QWORD *)this + 80) + 4 * *((int *)this + 162)), *((const void **)a2 + 80), 4 * *((int *)a2 + 162));
    *((_DWORD *)this + 162) += *((_DWORD *)a2 + 162);
  }
  v19 = *((_DWORD *)a2 + 166);
  if (v19)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 164, *((_DWORD *)this + 166) + v19);
    memcpy((void *)(*((_QWORD *)this + 82) + 4 * *((int *)this + 166)), *((const void **)a2 + 82), 4 * *((int *)a2 + 166));
    *((_DWORD *)this + 166) += *((_DWORD *)a2 + 166);
  }
  v20 = *((_DWORD *)a2 + 170);
  if (v20)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 168, *((_DWORD *)this + 170) + v20);
    memcpy((void *)(*((_QWORD *)this + 84) + 4 * *((int *)this + 170)), *((const void **)a2 + 84), 4 * *((int *)a2 + 170));
    *((_DWORD *)this + 170) += *((_DWORD *)a2 + 170);
  }
  v21 = *((_DWORD *)a2 + 174);
  if (v21)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 172, *((_DWORD *)this + 174) + v21);
    memcpy((void *)(*((_QWORD *)this + 86) + 4 * *((int *)this + 174)), *((const void **)a2 + 86), 4 * *((int *)a2 + 174));
    *((_DWORD *)this + 174) += *((_DWORD *)a2 + 174);
  }
  v22 = *((_DWORD *)a2 + 178);
  if (v22)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((_DWORD *)this + 176, *((_DWORD *)this + 178) + v22);
    memcpy((void *)(*((_QWORD *)this + 88) + 8 * *((int *)this + 178)), *((const void **)a2 + 88), 8 * *((int *)a2 + 178));
    *((_DWORD *)this + 178) += *((_DWORD *)a2 + 178);
  }
  v23 = *((_DWORD *)a2 + 182);
  if (v23)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((_DWORD *)this + 180, *((_DWORD *)this + 182) + v23);
    memcpy((void *)(*((_QWORD *)this + 90) + 8 * *((int *)this + 182)), *((const void **)a2 + 90), 8 * *((int *)a2 + 182));
    *((_DWORD *)this + 182) += *((_DWORD *)a2 + 182);
  }
  v24 = *((_DWORD *)a2 + 186);
  if (v24)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((_DWORD *)this + 184, *((_DWORD *)this + 186) + v24);
    memcpy((void *)(*((_QWORD *)this + 92) + 8 * *((int *)this + 186)), *((const void **)a2 + 92), 8 * *((int *)a2 + 186));
    *((_DWORD *)this + 186) += *((_DWORD *)a2 + 186);
  }
  v25 = *((_DWORD *)a2 + 190);
  if (v25)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((_DWORD *)this + 188, *((_DWORD *)this + 190) + v25);
    memcpy((void *)(*((_QWORD *)this + 94) + 8 * *((int *)this + 190)), *((const void **)a2 + 94), 8 * *((int *)a2 + 190));
    *((_DWORD *)this + 190) += *((_DWORD *)a2 + 190);
  }
  v26 = *((_DWORD *)a2 + 194);
  if (v26)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((_DWORD *)this + 192, *((_DWORD *)this + 194) + v26);
    memcpy((void *)(*((_QWORD *)this + 96) + 8 * *((int *)this + 194)), *((const void **)a2 + 96), 8 * *((int *)a2 + 194));
    *((_DWORD *)this + 194) += *((_DWORD *)a2 + 194);
  }
  v27 = *((_DWORD *)a2 + 200);
  if (v27)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((_DWORD *)this + 198, *((_DWORD *)this + 200) + v27);
    memcpy((void *)(*((_QWORD *)this + 99) + 8 * *((int *)this + 200)), *((const void **)a2 + 99), 8 * *((int *)a2 + 200));
    *((_DWORD *)this + 200) += *((_DWORD *)a2 + 200);
  }
  v28 = *((_DWORD *)a2 + 217);
  if (!(_BYTE)v28)
    goto LABEL_61;
  if ((v28 & 1) != 0)
  {
    v52 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 217) |= 1u;
    *((_QWORD *)this + 1) = v52;
    v28 = *((_DWORD *)a2 + 217);
    if ((v28 & 2) == 0)
    {
LABEL_54:
      if ((v28 & 4) == 0)
        goto LABEL_55;
      goto LABEL_208;
    }
  }
  else if ((v28 & 2) == 0)
  {
    goto LABEL_54;
  }
  v53 = *((_BYTE *)a2 + 68);
  *((_DWORD *)this + 217) |= 2u;
  *((_BYTE *)this + 68) = v53;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 4) == 0)
  {
LABEL_55:
    if ((v28 & 8) == 0)
      goto LABEL_56;
    goto LABEL_209;
  }
LABEL_208:
  v54 = *((_BYTE *)a2 + 69);
  *((_DWORD *)this + 217) |= 4u;
  *((_BYTE *)this + 69) = v54;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 8) == 0)
  {
LABEL_56:
    if ((v28 & 0x10) == 0)
      goto LABEL_57;
    goto LABEL_210;
  }
LABEL_209:
  v55 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 217) |= 8u;
  *((_DWORD *)this + 4) = v55;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x10) == 0)
  {
LABEL_57:
    if ((v28 & 0x20) == 0)
      goto LABEL_58;
LABEL_211:
    v57 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 217) |= 0x20u;
    *((_DWORD *)this + 6) = v57;
    v28 = *((_DWORD *)a2 + 217);
    if ((v28 & 0x40) == 0)
    {
LABEL_59:
      if ((v28 & 0x80) == 0)
        goto LABEL_61;
      goto LABEL_60;
    }
    goto LABEL_212;
  }
LABEL_210:
  v56 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 217) |= 0x10u;
  *((_DWORD *)this + 5) = v56;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x20) != 0)
    goto LABEL_211;
LABEL_58:
  if ((v28 & 0x40) == 0)
    goto LABEL_59;
LABEL_212:
  v58 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 217) |= 0x40u;
  *((_DWORD *)this + 7) = v58;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x80) != 0)
  {
LABEL_60:
    v29 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 217) |= 0x80u;
    *((_DWORD *)this + 8) = v29;
    v28 = *((_DWORD *)a2 + 217);
  }
LABEL_61:
  if ((v28 & 0xFF00) == 0)
    goto LABEL_71;
  if ((v28 & 0x100) != 0)
  {
    v59 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 217) |= 0x100u;
    *((_DWORD *)this + 9) = v59;
    v28 = *((_DWORD *)a2 + 217);
    if ((v28 & 0x200) == 0)
    {
LABEL_64:
      if ((v28 & 0x400) == 0)
        goto LABEL_65;
      goto LABEL_216;
    }
  }
  else if ((v28 & 0x200) == 0)
  {
    goto LABEL_64;
  }
  v60 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 217) |= 0x200u;
  *((_DWORD *)this + 10) = v60;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x400) == 0)
  {
LABEL_65:
    if ((v28 & 0x800) == 0)
      goto LABEL_66;
    goto LABEL_217;
  }
LABEL_216:
  v61 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 217) |= 0x400u;
  *((_DWORD *)this + 11) = v61;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x800) == 0)
  {
LABEL_66:
    if ((v28 & 0x1000) == 0)
      goto LABEL_67;
    goto LABEL_218;
  }
LABEL_217:
  v62 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 217) |= 0x800u;
  *((_DWORD *)this + 12) = v62;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x1000) == 0)
  {
LABEL_67:
    if ((v28 & 0x2000) == 0)
      goto LABEL_68;
    goto LABEL_219;
  }
LABEL_218:
  v63 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 217) |= 0x1000u;
  *((_DWORD *)this + 13) = v63;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x2000) == 0)
  {
LABEL_68:
    if ((v28 & 0x4000) == 0)
      goto LABEL_69;
    goto LABEL_220;
  }
LABEL_219:
  v64 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 217) |= 0x2000u;
  *((_DWORD *)this + 14) = v64;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x4000) == 0)
  {
LABEL_69:
    if ((v28 & 0x8000) == 0)
      goto LABEL_71;
    goto LABEL_70;
  }
LABEL_220:
  v65 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 217) |= 0x4000u;
  *((_DWORD *)this + 15) = v65;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x8000) != 0)
  {
LABEL_70:
    v30 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 217) |= 0x8000u;
    *((_DWORD *)this + 16) = v30;
    v28 = *((_DWORD *)a2 + 217);
  }
LABEL_71:
  if ((v28 & 0xFF0000) == 0)
    goto LABEL_78;
  if ((v28 & 0x10000) != 0)
  {
    v66 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 217) |= 0x10000u;
    *((_DWORD *)this + 18) = v66;
    v28 = *((_DWORD *)a2 + 217);
    if ((v28 & 0x20000) == 0)
    {
LABEL_74:
      if ((v28 & 0x40000) == 0)
        goto LABEL_75;
      goto LABEL_224;
    }
  }
  else if ((v28 & 0x20000) == 0)
  {
    goto LABEL_74;
  }
  v67 = *((_DWORD *)a2 + 19);
  *((_DWORD *)this + 217) |= 0x20000u;
  *((_DWORD *)this + 19) = v67;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x40000) == 0)
  {
LABEL_75:
    if ((v28 & 0x80000) == 0)
      goto LABEL_76;
    goto LABEL_225;
  }
LABEL_224:
  v68 = *((_DWORD *)a2 + 20);
  *((_DWORD *)this + 217) |= 0x40000u;
  *((_DWORD *)this + 20) = v68;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x80000) == 0)
  {
LABEL_76:
    if ((v28 & 0x100000) == 0)
      goto LABEL_78;
    goto LABEL_77;
  }
LABEL_225:
  v69 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 217) |= 0x80000u;
  *((_DWORD *)this + 21) = v69;
  v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x100000) != 0)
  {
LABEL_77:
    v31 = *((_DWORD *)a2 + 46);
    *((_DWORD *)this + 217) |= 0x100000u;
    *((_DWORD *)this + 46) = v31;
    v28 = *((_DWORD *)a2 + 217);
  }
LABEL_78:
  if (v28 >> 27)
  {
    if ((v28 & 0x8000000) != 0)
    {
      v32 = *((_BYTE *)a2 + 70);
      *((_DWORD *)this + 217) |= 0x8000000u;
      *((_BYTE *)this + 70) = v32;
      v28 = *((_DWORD *)a2 + 217);
    }
    if ((v28 & 0x80000000) != 0)
    {
      v33 = *((_BYTE *)a2 + 71);
      *((_DWORD *)this + 217) |= 0x80000000;
      *((_BYTE *)this + 71) = v33;
    }
  }
  v34 = *((_DWORD *)a2 + 218);
  if (!(_BYTE)v34)
    goto LABEL_93;
  if ((v34 & 1) != 0)
  {
    v70 = *((_BYTE *)a2 + 444);
    *((_DWORD *)this + 218) |= 1u;
    *((_BYTE *)this + 444) = v70;
    v34 = *((_DWORD *)a2 + 218);
    if ((v34 & 2) == 0)
    {
LABEL_86:
      if ((v34 & 4) == 0)
        goto LABEL_87;
      goto LABEL_229;
    }
  }
  else if ((v34 & 2) == 0)
  {
    goto LABEL_86;
  }
  v71 = *((_DWORD *)a2 + 47);
  *((_DWORD *)this + 218) |= 2u;
  *((_DWORD *)this + 47) = v71;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 4) == 0)
  {
LABEL_87:
    if ((v34 & 8) == 0)
      goto LABEL_88;
    goto LABEL_230;
  }
LABEL_229:
  v72 = *((_DWORD *)a2 + 60);
  *((_DWORD *)this + 218) |= 4u;
  *((_DWORD *)this + 60) = v72;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 8) == 0)
  {
LABEL_88:
    if ((v34 & 0x10) == 0)
      goto LABEL_89;
    goto LABEL_231;
  }
LABEL_230:
  v73 = *((_DWORD *)a2 + 61);
  *((_DWORD *)this + 218) |= 8u;
  *((_DWORD *)this + 61) = v73;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x10) == 0)
  {
LABEL_89:
    if ((v34 & 0x20) == 0)
      goto LABEL_90;
LABEL_232:
    v75 = *((_DWORD *)a2 + 63);
    *((_DWORD *)this + 218) |= 0x20u;
    *((_DWORD *)this + 63) = v75;
    v34 = *((_DWORD *)a2 + 218);
    if ((v34 & 0x40) == 0)
    {
LABEL_91:
      if ((v34 & 0x80) == 0)
        goto LABEL_93;
      goto LABEL_92;
    }
    goto LABEL_233;
  }
LABEL_231:
  v74 = *((_DWORD *)a2 + 62);
  *((_DWORD *)this + 218) |= 0x10u;
  *((_DWORD *)this + 62) = v74;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x20) != 0)
    goto LABEL_232;
LABEL_90:
  if ((v34 & 0x40) == 0)
    goto LABEL_91;
LABEL_233:
  v76 = *((_DWORD *)a2 + 64);
  *((_DWORD *)this + 218) |= 0x40u;
  *((_DWORD *)this + 64) = v76;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x80) != 0)
  {
LABEL_92:
    v35 = *((_DWORD *)a2 + 65);
    *((_DWORD *)this + 218) |= 0x80u;
    *((_DWORD *)this + 65) = v35;
    v34 = *((_DWORD *)a2 + 218);
  }
LABEL_93:
  if ((v34 & 0xFF00) == 0)
    goto LABEL_101;
  if ((v34 & 0x100) != 0)
  {
    v77 = *((_DWORD *)a2 + 66);
    *((_DWORD *)this + 218) |= 0x100u;
    *((_DWORD *)this + 66) = v77;
    v34 = *((_DWORD *)a2 + 218);
    if ((v34 & 0x200) == 0)
    {
LABEL_96:
      if ((v34 & 0x800) == 0)
        goto LABEL_97;
      goto LABEL_237;
    }
  }
  else if ((v34 & 0x200) == 0)
  {
    goto LABEL_96;
  }
  v78 = *((_DWORD *)a2 + 67);
  *((_DWORD *)this + 218) |= 0x200u;
  *((_DWORD *)this + 67) = v78;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x800) == 0)
  {
LABEL_97:
    if ((v34 & 0x2000) == 0)
      goto LABEL_98;
    goto LABEL_238;
  }
LABEL_237:
  v79 = *((_DWORD *)a2 + 72);
  *((_DWORD *)this + 218) |= 0x800u;
  *((_DWORD *)this + 72) = v79;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x2000) == 0)
  {
LABEL_98:
    if ((v34 & 0x4000) == 0)
      goto LABEL_99;
    goto LABEL_239;
  }
LABEL_238:
  v80 = *((_DWORD *)a2 + 73);
  *((_DWORD *)this + 218) |= 0x2000u;
  *((_DWORD *)this + 73) = v80;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x4000) == 0)
  {
LABEL_99:
    if ((v34 & 0x8000) == 0)
      goto LABEL_101;
    goto LABEL_100;
  }
LABEL_239:
  v81 = *((_DWORD *)a2 + 78);
  *((_DWORD *)this + 218) |= 0x4000u;
  *((_DWORD *)this + 78) = v81;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x8000) != 0)
  {
LABEL_100:
    v36 = *((_DWORD *)a2 + 79);
    *((_DWORD *)this + 218) |= 0x8000u;
    *((_DWORD *)this + 79) = v36;
    v34 = *((_DWORD *)a2 + 218);
  }
LABEL_101:
  if ((v34 & 0xFF0000) == 0)
    goto LABEL_110;
  v37 = (std::string *)MEMORY[0x24BEDD958];
  if ((v34 & 0x10000) != 0)
  {
    v82 = (const std::string *)*((_QWORD *)a2 + 40);
    *((_DWORD *)this + 218) |= 0x10000u;
    v83 = (std::string *)*((_QWORD *)this + 40);
    if (v83 == v37)
    {
      v83 = (std::string *)operator new();
      v83->__r_.__value_.__l.__size_ = 0;
      v83->__r_.__value_.__r.__words[2] = 0;
      v83->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 40) = v83;
    }
    std::string::operator=(v83, v82);
    v34 = *((_DWORD *)a2 + 218);
    if ((v34 & 0x20000) == 0)
    {
LABEL_104:
      if ((v34 & 0x40000) == 0)
        goto LABEL_105;
      goto LABEL_247;
    }
  }
  else if ((v34 & 0x20000) == 0)
  {
    goto LABEL_104;
  }
  v84 = (const std::string *)*((_QWORD *)a2 + 41);
  *((_DWORD *)this + 218) |= 0x20000u;
  v85 = (std::string *)*((_QWORD *)this + 41);
  if (v85 == v37)
  {
    v85 = (std::string *)operator new();
    v85->__r_.__value_.__l.__size_ = 0;
    v85->__r_.__value_.__r.__words[2] = 0;
    v85->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 41) = v85;
  }
  std::string::operator=(v85, v84);
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x40000) == 0)
  {
LABEL_105:
    if ((v34 & 0x80000) == 0)
      goto LABEL_106;
    goto LABEL_250;
  }
LABEL_247:
  v86 = (const std::string *)*((_QWORD *)a2 + 42);
  *((_DWORD *)this + 218) |= 0x40000u;
  v87 = (std::string *)*((_QWORD *)this + 42);
  if (v87 == v37)
  {
    v87 = (std::string *)operator new();
    v87->__r_.__value_.__l.__size_ = 0;
    v87->__r_.__value_.__r.__words[2] = 0;
    v87->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 42) = v87;
  }
  std::string::operator=(v87, v86);
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x80000) == 0)
  {
LABEL_106:
    if ((v34 & 0x100000) == 0)
      goto LABEL_107;
    goto LABEL_253;
  }
LABEL_250:
  v88 = (const std::string *)*((_QWORD *)a2 + 43);
  *((_DWORD *)this + 218) |= 0x80000u;
  v89 = (std::string *)*((_QWORD *)this + 43);
  if (v89 == v37)
  {
    v89 = (std::string *)operator new();
    v89->__r_.__value_.__l.__size_ = 0;
    v89->__r_.__value_.__r.__words[2] = 0;
    v89->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 43) = v89;
  }
  std::string::operator=(v89, v88);
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x100000) == 0)
  {
LABEL_107:
    if ((v34 & 0x400000) == 0)
      goto LABEL_108;
    goto LABEL_256;
  }
LABEL_253:
  v90 = (const std::string *)*((_QWORD *)a2 + 44);
  *((_DWORD *)this + 218) |= 0x100000u;
  v91 = (std::string *)*((_QWORD *)this + 44);
  if (v91 == v37)
  {
    v91 = (std::string *)operator new();
    v91->__r_.__value_.__l.__size_ = 0;
    v91->__r_.__value_.__r.__words[2] = 0;
    v91->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 44) = v91;
  }
  std::string::operator=(v91, v90);
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x400000) == 0)
  {
LABEL_108:
    if ((v34 & 0x800000) == 0)
      goto LABEL_110;
    goto LABEL_109;
  }
LABEL_256:
  v92 = *((_DWORD *)a2 + 94);
  *((_DWORD *)this + 218) |= 0x400000u;
  *((_DWORD *)this + 94) = v92;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x800000) != 0)
  {
LABEL_109:
    v38 = *((_DWORD *)a2 + 95);
    *((_DWORD *)this + 218) |= 0x800000u;
    *((_DWORD *)this + 95) = v38;
    v34 = *((_DWORD *)a2 + 218);
  }
LABEL_110:
  if (!HIBYTE(v34))
    goto LABEL_119;
  if ((v34 & 0x1000000) != 0)
  {
    v141 = *((_DWORD *)a2 + 96);
    *((_DWORD *)this + 218) |= 0x1000000u;
    *((_DWORD *)this + 96) = v141;
    v34 = *((_DWORD *)a2 + 218);
    if ((v34 & 0x2000000) == 0)
    {
LABEL_113:
      if ((v34 & 0x4000000) == 0)
        goto LABEL_114;
      goto LABEL_316;
    }
  }
  else if ((v34 & 0x2000000) == 0)
  {
    goto LABEL_113;
  }
  v142 = *((_DWORD *)a2 + 97);
  *((_DWORD *)this + 218) |= 0x2000000u;
  *((_DWORD *)this + 97) = v142;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x4000000) == 0)
  {
LABEL_114:
    if ((v34 & 0x8000000) == 0)
      goto LABEL_115;
    goto LABEL_317;
  }
LABEL_316:
  v143 = *((_DWORD *)a2 + 98);
  *((_DWORD *)this + 218) |= 0x4000000u;
  *((_DWORD *)this + 98) = v143;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x8000000) == 0)
  {
LABEL_115:
    if ((v34 & 0x10000000) == 0)
      goto LABEL_116;
    goto LABEL_318;
  }
LABEL_317:
  v144 = *((_DWORD *)a2 + 99);
  *((_DWORD *)this + 218) |= 0x8000000u;
  *((_DWORD *)this + 99) = v144;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x10000000) == 0)
  {
LABEL_116:
    if ((v34 & 0x20000000) == 0)
      goto LABEL_117;
    goto LABEL_319;
  }
LABEL_318:
  v145 = *((_DWORD *)a2 + 100);
  *((_DWORD *)this + 218) |= 0x10000000u;
  *((_DWORD *)this + 100) = v145;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x20000000) == 0)
  {
LABEL_117:
    if ((v34 & 0x40000000) == 0)
      goto LABEL_118;
LABEL_320:
    v147 = *((_DWORD *)a2 + 102);
    *((_DWORD *)this + 218) |= 0x40000000u;
    *((_DWORD *)this + 102) = v147;
    if ((*((_DWORD *)a2 + 218) & 0x80000000) == 0)
      goto LABEL_119;
    goto LABEL_321;
  }
LABEL_319:
  v146 = *((_DWORD *)a2 + 101);
  *((_DWORD *)this + 218) |= 0x20000000u;
  *((_DWORD *)this + 101) = v146;
  v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x40000000) != 0)
    goto LABEL_320;
LABEL_118:
  if ((v34 & 0x80000000) == 0)
    goto LABEL_119;
LABEL_321:
  v148 = *((_DWORD *)a2 + 103);
  *((_DWORD *)this + 218) |= 0x80000000;
  *((_DWORD *)this + 103) = v148;
LABEL_119:
  v39 = *((_DWORD *)a2 + 219);
  if (!(_BYTE)v39)
    goto LABEL_129;
  if ((v39 & 1) != 0)
  {
    v93 = *((_DWORD *)a2 + 104);
    *((_DWORD *)this + 219) |= 1u;
    *((_DWORD *)this + 104) = v93;
    v39 = *((_DWORD *)a2 + 219);
    if ((v39 & 2) == 0)
    {
LABEL_122:
      if ((v39 & 4) == 0)
        goto LABEL_123;
      goto LABEL_260;
    }
  }
  else if ((v39 & 2) == 0)
  {
    goto LABEL_122;
  }
  v94 = *((_DWORD *)a2 + 105);
  *((_DWORD *)this + 219) |= 2u;
  *((_DWORD *)this + 105) = v94;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 4) == 0)
  {
LABEL_123:
    if ((v39 & 8) == 0)
      goto LABEL_124;
    goto LABEL_261;
  }
LABEL_260:
  v95 = *((_DWORD *)a2 + 106);
  *((_DWORD *)this + 219) |= 4u;
  *((_DWORD *)this + 106) = v95;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 8) == 0)
  {
LABEL_124:
    if ((v39 & 0x10) == 0)
      goto LABEL_125;
    goto LABEL_262;
  }
LABEL_261:
  v96 = *((_DWORD *)a2 + 107);
  *((_DWORD *)this + 219) |= 8u;
  *((_DWORD *)this + 107) = v96;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x10) == 0)
  {
LABEL_125:
    if ((v39 & 0x20) == 0)
      goto LABEL_126;
    goto LABEL_263;
  }
LABEL_262:
  v97 = *((_DWORD *)a2 + 108);
  *((_DWORD *)this + 219) |= 0x10u;
  *((_DWORD *)this + 108) = v97;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x20) == 0)
  {
LABEL_126:
    if ((v39 & 0x40) == 0)
      goto LABEL_127;
    goto LABEL_264;
  }
LABEL_263:
  v98 = *((_DWORD *)a2 + 109);
  *((_DWORD *)this + 219) |= 0x20u;
  *((_DWORD *)this + 109) = v98;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x40) == 0)
  {
LABEL_127:
    if ((v39 & 0x80) == 0)
      goto LABEL_129;
    goto LABEL_128;
  }
LABEL_264:
  v99 = *((_DWORD *)a2 + 110);
  *((_DWORD *)this + 219) |= 0x40u;
  *((_DWORD *)this + 110) = v99;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x80) != 0)
  {
LABEL_128:
    v40 = *((_DWORD *)a2 + 112);
    *((_DWORD *)this + 219) |= 0x80u;
    *((_DWORD *)this + 112) = v40;
    v39 = *((_DWORD *)a2 + 219);
  }
LABEL_129:
  if ((v39 & 0xFF00) == 0)
    goto LABEL_139;
  if ((v39 & 0x100) != 0)
  {
    v100 = *((_DWORD *)a2 + 113);
    *((_DWORD *)this + 219) |= 0x100u;
    *((_DWORD *)this + 113) = v100;
    v39 = *((_DWORD *)a2 + 219);
    if ((v39 & 0x200) == 0)
    {
LABEL_132:
      if ((v39 & 0x400) == 0)
        goto LABEL_133;
      goto LABEL_268;
    }
  }
  else if ((v39 & 0x200) == 0)
  {
    goto LABEL_132;
  }
  v101 = *((_DWORD *)a2 + 114);
  *((_DWORD *)this + 219) |= 0x200u;
  *((_DWORD *)this + 114) = v101;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x400) == 0)
  {
LABEL_133:
    if ((v39 & 0x800) == 0)
      goto LABEL_134;
    goto LABEL_269;
  }
LABEL_268:
  v102 = *((_DWORD *)a2 + 115);
  *((_DWORD *)this + 219) |= 0x400u;
  *((_DWORD *)this + 115) = v102;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x800) == 0)
  {
LABEL_134:
    if ((v39 & 0x1000) == 0)
      goto LABEL_135;
    goto LABEL_270;
  }
LABEL_269:
  v103 = *((_DWORD *)a2 + 116);
  *((_DWORD *)this + 219) |= 0x800u;
  *((_DWORD *)this + 116) = v103;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x1000) == 0)
  {
LABEL_135:
    if ((v39 & 0x2000) == 0)
      goto LABEL_136;
    goto LABEL_271;
  }
LABEL_270:
  v104 = *((_DWORD *)a2 + 117);
  *((_DWORD *)this + 219) |= 0x1000u;
  *((_DWORD *)this + 117) = v104;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x2000) == 0)
  {
LABEL_136:
    if ((v39 & 0x4000) == 0)
      goto LABEL_137;
    goto LABEL_272;
  }
LABEL_271:
  v105 = *((_DWORD *)a2 + 118);
  *((_DWORD *)this + 219) |= 0x2000u;
  *((_DWORD *)this + 118) = v105;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x4000) == 0)
  {
LABEL_137:
    if ((v39 & 0x8000) == 0)
      goto LABEL_139;
    goto LABEL_138;
  }
LABEL_272:
  v106 = *((_DWORD *)a2 + 119);
  *((_DWORD *)this + 219) |= 0x4000u;
  *((_DWORD *)this + 119) = v106;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x8000) != 0)
  {
LABEL_138:
    v41 = *((_DWORD *)a2 + 120);
    *((_DWORD *)this + 219) |= 0x8000u;
    *((_DWORD *)this + 120) = v41;
    v39 = *((_DWORD *)a2 + 219);
  }
LABEL_139:
  if ((v39 & 0xFF0000) == 0)
    goto LABEL_147;
  if ((v39 & 0x10000) != 0)
  {
    v107 = *((_DWORD *)a2 + 121);
    *((_DWORD *)this + 219) |= 0x10000u;
    *((_DWORD *)this + 121) = v107;
    v39 = *((_DWORD *)a2 + 219);
    if ((v39 & 0x20000) == 0)
    {
LABEL_142:
      if ((v39 & 0x40000) == 0)
        goto LABEL_143;
      goto LABEL_276;
    }
  }
  else if ((v39 & 0x20000) == 0)
  {
    goto LABEL_142;
  }
  v108 = *((_DWORD *)a2 + 122);
  *((_DWORD *)this + 219) |= 0x20000u;
  *((_DWORD *)this + 122) = v108;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x40000) == 0)
  {
LABEL_143:
    if ((v39 & 0x80000) == 0)
      goto LABEL_144;
    goto LABEL_277;
  }
LABEL_276:
  v109 = *((_DWORD *)a2 + 123);
  *((_DWORD *)this + 219) |= 0x40000u;
  *((_DWORD *)this + 123) = v109;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x80000) == 0)
  {
LABEL_144:
    if ((v39 & 0x100000) == 0)
      goto LABEL_145;
    goto LABEL_278;
  }
LABEL_277:
  v110 = *((_BYTE *)a2 + 445);
  *((_DWORD *)this + 219) |= 0x80000u;
  *((_BYTE *)this + 445) = v110;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x100000) == 0)
  {
LABEL_145:
    if ((v39 & 0x200000) == 0)
      goto LABEL_147;
    goto LABEL_146;
  }
LABEL_278:
  v111 = *((_BYTE *)a2 + 446);
  *((_DWORD *)this + 219) |= 0x100000u;
  *((_BYTE *)this + 446) = v111;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x200000) != 0)
  {
LABEL_146:
    v42 = *((_BYTE *)a2 + 447);
    *((_DWORD *)this + 219) |= 0x200000u;
    *((_BYTE *)this + 447) = v42;
    v39 = *((_DWORD *)a2 + 219);
  }
LABEL_147:
  if (!HIBYTE(v39))
    goto LABEL_156;
  if ((v39 & 0x1000000) != 0)
  {
    v149 = *((_DWORD *)a2 + 132);
    *((_DWORD *)this + 219) |= 0x1000000u;
    *((_DWORD *)this + 132) = v149;
    v39 = *((_DWORD *)a2 + 219);
    if ((v39 & 0x2000000) == 0)
    {
LABEL_150:
      if ((v39 & 0x4000000) == 0)
        goto LABEL_151;
      goto LABEL_324;
    }
  }
  else if ((v39 & 0x2000000) == 0)
  {
    goto LABEL_150;
  }
  v150 = *((_DWORD *)a2 + 133);
  *((_DWORD *)this + 219) |= 0x2000000u;
  *((_DWORD *)this + 133) = v150;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x4000000) == 0)
  {
LABEL_151:
    if ((v39 & 0x8000000) == 0)
      goto LABEL_152;
    goto LABEL_325;
  }
LABEL_324:
  v151 = *((_DWORD *)a2 + 134);
  *((_DWORD *)this + 219) |= 0x4000000u;
  *((_DWORD *)this + 134) = v151;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x8000000) == 0)
  {
LABEL_152:
    if ((v39 & 0x10000000) == 0)
      goto LABEL_153;
    goto LABEL_326;
  }
LABEL_325:
  v152 = *((_DWORD *)a2 + 135);
  *((_DWORD *)this + 219) |= 0x8000000u;
  *((_DWORD *)this + 135) = v152;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x10000000) == 0)
  {
LABEL_153:
    if ((v39 & 0x20000000) == 0)
      goto LABEL_154;
    goto LABEL_327;
  }
LABEL_326:
  v153 = *((_DWORD *)a2 + 136);
  *((_DWORD *)this + 219) |= 0x10000000u;
  *((_DWORD *)this + 136) = v153;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x20000000) == 0)
  {
LABEL_154:
    if ((v39 & 0x40000000) == 0)
      goto LABEL_155;
LABEL_328:
    v155 = *((_DWORD *)a2 + 138);
    *((_DWORD *)this + 219) |= 0x40000000u;
    *((_DWORD *)this + 138) = v155;
    if ((*((_DWORD *)a2 + 219) & 0x80000000) == 0)
      goto LABEL_156;
    goto LABEL_329;
  }
LABEL_327:
  v154 = *((_DWORD *)a2 + 137);
  *((_DWORD *)this + 219) |= 0x20000000u;
  *((_DWORD *)this + 137) = v154;
  v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x40000000) != 0)
    goto LABEL_328;
LABEL_155:
  if ((v39 & 0x80000000) == 0)
    goto LABEL_156;
LABEL_329:
  v156 = *((_DWORD *)a2 + 139);
  *((_DWORD *)this + 219) |= 0x80000000;
  *((_DWORD *)this + 139) = v156;
LABEL_156:
  v43 = *((_DWORD *)a2 + 220);
  if (!(_BYTE)v43)
    goto LABEL_166;
  if ((v43 & 1) != 0)
  {
    v112 = *((_DWORD *)a2 + 140);
    *((_DWORD *)this + 220) |= 1u;
    *((_DWORD *)this + 140) = v112;
    v43 = *((_DWORD *)a2 + 220);
    if ((v43 & 2) == 0)
    {
LABEL_159:
      if ((v43 & 4) == 0)
        goto LABEL_160;
      goto LABEL_282;
    }
  }
  else if ((v43 & 2) == 0)
  {
    goto LABEL_159;
  }
  v113 = *((_DWORD *)a2 + 141);
  *((_DWORD *)this + 220) |= 2u;
  *((_DWORD *)this + 141) = v113;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 4) == 0)
  {
LABEL_160:
    if ((v43 & 8) == 0)
      goto LABEL_161;
    goto LABEL_283;
  }
LABEL_282:
  v114 = *((_DWORD *)a2 + 142);
  *((_DWORD *)this + 220) |= 4u;
  *((_DWORD *)this + 142) = v114;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 8) == 0)
  {
LABEL_161:
    if ((v43 & 0x10) == 0)
      goto LABEL_162;
    goto LABEL_284;
  }
LABEL_283:
  v115 = *((_DWORD *)a2 + 143);
  *((_DWORD *)this + 220) |= 8u;
  *((_DWORD *)this + 143) = v115;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x10) == 0)
  {
LABEL_162:
    if ((v43 & 0x20) == 0)
      goto LABEL_163;
    goto LABEL_285;
  }
LABEL_284:
  v116 = *((_DWORD *)a2 + 144);
  *((_DWORD *)this + 220) |= 0x10u;
  *((_DWORD *)this + 144) = v116;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x20) == 0)
  {
LABEL_163:
    if ((v43 & 0x40) == 0)
      goto LABEL_164;
    goto LABEL_286;
  }
LABEL_285:
  v117 = *((_DWORD *)a2 + 145);
  *((_DWORD *)this + 220) |= 0x20u;
  *((_DWORD *)this + 145) = v117;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x40) == 0)
  {
LABEL_164:
    if ((v43 & 0x80) == 0)
      goto LABEL_166;
    goto LABEL_165;
  }
LABEL_286:
  v118 = *((_DWORD *)a2 + 146);
  *((_DWORD *)this + 220) |= 0x40u;
  *((_DWORD *)this + 146) = v118;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x80) != 0)
  {
LABEL_165:
    v44 = *((_DWORD *)a2 + 147);
    *((_DWORD *)this + 220) |= 0x80u;
    *((_DWORD *)this + 147) = v44;
    v43 = *((_DWORD *)a2 + 220);
  }
LABEL_166:
  if ((v43 & 0xFF00) == 0)
    goto LABEL_176;
  if ((v43 & 0x100) != 0)
  {
    v119 = *((_DWORD *)a2 + 148);
    *((_DWORD *)this + 220) |= 0x100u;
    *((_DWORD *)this + 148) = v119;
    v43 = *((_DWORD *)a2 + 220);
    if ((v43 & 0x200) == 0)
    {
LABEL_169:
      if ((v43 & 0x400) == 0)
        goto LABEL_170;
      goto LABEL_290;
    }
  }
  else if ((v43 & 0x200) == 0)
  {
    goto LABEL_169;
  }
  v120 = *((_DWORD *)a2 + 149);
  *((_DWORD *)this + 220) |= 0x200u;
  *((_DWORD *)this + 149) = v120;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x400) == 0)
  {
LABEL_170:
    if ((v43 & 0x800) == 0)
      goto LABEL_171;
    goto LABEL_291;
  }
LABEL_290:
  v121 = *((_DWORD *)a2 + 150);
  *((_DWORD *)this + 220) |= 0x400u;
  *((_DWORD *)this + 150) = v121;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x800) == 0)
  {
LABEL_171:
    if ((v43 & 0x1000) == 0)
      goto LABEL_172;
    goto LABEL_292;
  }
LABEL_291:
  v122 = *((_DWORD *)a2 + 151);
  *((_DWORD *)this + 220) |= 0x800u;
  *((_DWORD *)this + 151) = v122;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x1000) == 0)
  {
LABEL_172:
    if ((v43 & 0x2000) == 0)
      goto LABEL_173;
    goto LABEL_293;
  }
LABEL_292:
  v123 = *((_DWORD *)a2 + 152);
  *((_DWORD *)this + 220) |= 0x1000u;
  *((_DWORD *)this + 152) = v123;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x2000) == 0)
  {
LABEL_173:
    if ((v43 & 0x4000) == 0)
      goto LABEL_174;
    goto LABEL_294;
  }
LABEL_293:
  v124 = *((_DWORD *)a2 + 153);
  *((_DWORD *)this + 220) |= 0x2000u;
  *((_DWORD *)this + 153) = v124;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x4000) == 0)
  {
LABEL_174:
    if ((v43 & 0x8000) == 0)
      goto LABEL_176;
    goto LABEL_175;
  }
LABEL_294:
  v125 = *((_DWORD *)a2 + 154);
  *((_DWORD *)this + 220) |= 0x4000u;
  *((_DWORD *)this + 154) = v125;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x8000) != 0)
  {
LABEL_175:
    v45 = *((_DWORD *)a2 + 155);
    *((_DWORD *)this + 220) |= 0x8000u;
    *((_DWORD *)this + 155) = v45;
    v43 = *((_DWORD *)a2 + 220);
  }
LABEL_176:
  if ((v43 & 0xFF0000) == 0)
    goto LABEL_182;
  if ((v43 & 0x10000) != 0)
  {
    v126 = *((_DWORD *)a2 + 156);
    *((_DWORD *)this + 220) |= 0x10000u;
    *((_DWORD *)this + 156) = v126;
    v43 = *((_DWORD *)a2 + 220);
    if ((v43 & 0x20000) == 0)
    {
LABEL_179:
      if ((v43 & 0x40000) == 0)
        goto LABEL_180;
      goto LABEL_298;
    }
  }
  else if ((v43 & 0x20000) == 0)
  {
    goto LABEL_179;
  }
  v127 = *((_DWORD *)a2 + 157);
  *((_DWORD *)this + 220) |= 0x20000u;
  *((_DWORD *)this + 157) = v127;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x40000) == 0)
  {
LABEL_180:
    if ((v43 & 0x80000) == 0)
      goto LABEL_182;
    goto LABEL_181;
  }
LABEL_298:
  v128 = *((_DWORD *)a2 + 158);
  *((_DWORD *)this + 220) |= 0x40000u;
  *((_DWORD *)this + 158) = v128;
  v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x80000) != 0)
  {
LABEL_181:
    v46 = *((_DWORD *)a2 + 159);
    *((_DWORD *)this + 220) |= 0x80000u;
    *((_DWORD *)this + 159) = v46;
    v43 = *((_DWORD *)a2 + 220);
  }
LABEL_182:
  if (v43 >> 29)
  {
    if ((v43 & 0x20000000) != 0)
    {
      v47 = *((_DWORD *)a2 + 196);
      *((_DWORD *)this + 220) |= 0x20000000u;
      *((_DWORD *)this + 196) = v47;
      v43 = *((_DWORD *)a2 + 220);
    }
    if ((v43 & 0x40000000) != 0)
    {
      v48 = *((_DWORD *)a2 + 197);
      *((_DWORD *)this + 220) |= 0x40000000u;
      *((_DWORD *)this + 197) = v48;
    }
  }
  v49 = *((_DWORD *)a2 + 221);
  if (!(_BYTE)v49)
    goto LABEL_197;
  if ((v49 & 1) != 0)
  {
    v129 = *((_DWORD *)a2 + 202);
    *((_DWORD *)this + 221) |= 1u;
    *((_DWORD *)this + 202) = v129;
    v49 = *((_DWORD *)a2 + 221);
    if ((v49 & 2) == 0)
    {
LABEL_190:
      if ((v49 & 4) == 0)
        goto LABEL_191;
      goto LABEL_302;
    }
  }
  else if ((v49 & 2) == 0)
  {
    goto LABEL_190;
  }
  v130 = *((_DWORD *)a2 + 203);
  *((_DWORD *)this + 221) |= 2u;
  *((_DWORD *)this + 203) = v130;
  v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 4) == 0)
  {
LABEL_191:
    if ((v49 & 8) == 0)
      goto LABEL_192;
    goto LABEL_303;
  }
LABEL_302:
  v131 = *((_DWORD *)a2 + 204);
  *((_DWORD *)this + 221) |= 4u;
  *((_DWORD *)this + 204) = v131;
  v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 8) == 0)
  {
LABEL_192:
    if ((v49 & 0x10) == 0)
      goto LABEL_193;
    goto LABEL_304;
  }
LABEL_303:
  v132 = *((_DWORD *)a2 + 205);
  *((_DWORD *)this + 221) |= 8u;
  *((_DWORD *)this + 205) = v132;
  v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x10) == 0)
  {
LABEL_193:
    if ((v49 & 0x20) == 0)
      goto LABEL_194;
LABEL_305:
    v134 = *((_DWORD *)a2 + 207);
    *((_DWORD *)this + 221) |= 0x20u;
    *((_DWORD *)this + 207) = v134;
    v49 = *((_DWORD *)a2 + 221);
    if ((v49 & 0x40) == 0)
    {
LABEL_195:
      if ((v49 & 0x80) == 0)
        goto LABEL_197;
      goto LABEL_196;
    }
    goto LABEL_306;
  }
LABEL_304:
  v133 = *((_DWORD *)a2 + 206);
  *((_DWORD *)this + 221) |= 0x10u;
  *((_DWORD *)this + 206) = v133;
  v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x20) != 0)
    goto LABEL_305;
LABEL_194:
  if ((v49 & 0x40) == 0)
    goto LABEL_195;
LABEL_306:
  v135 = *((_DWORD *)a2 + 208);
  *((_DWORD *)this + 221) |= 0x40u;
  *((_DWORD *)this + 208) = v135;
  v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x80) != 0)
  {
LABEL_196:
    v50 = *((_DWORD *)a2 + 209);
    *((_DWORD *)this + 221) |= 0x80u;
    *((_DWORD *)this + 209) = v50;
    v49 = *((_DWORD *)a2 + 221);
  }
LABEL_197:
  if ((v49 & 0xFF00) == 0)
    return;
  if ((v49 & 0x100) != 0)
  {
    v136 = *((_DWORD *)a2 + 210);
    *((_DWORD *)this + 221) |= 0x100u;
    *((_DWORD *)this + 210) = v136;
    v49 = *((_DWORD *)a2 + 221);
    if ((v49 & 0x200) == 0)
    {
LABEL_200:
      if ((v49 & 0x400) == 0)
        goto LABEL_201;
      goto LABEL_310;
    }
  }
  else if ((v49 & 0x200) == 0)
  {
    goto LABEL_200;
  }
  v137 = *((_DWORD *)a2 + 211);
  *((_DWORD *)this + 221) |= 0x200u;
  *((_DWORD *)this + 211) = v137;
  v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x400) == 0)
  {
LABEL_201:
    if ((v49 & 0x800) == 0)
      goto LABEL_202;
    goto LABEL_311;
  }
LABEL_310:
  v138 = *((_DWORD *)a2 + 212);
  *((_DWORD *)this + 221) |= 0x400u;
  *((_DWORD *)this + 212) = v138;
  v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x800) == 0)
  {
LABEL_202:
    if ((v49 & 0x1000) == 0)
      goto LABEL_203;
    goto LABEL_312;
  }
LABEL_311:
  v139 = *((_DWORD *)a2 + 213);
  *((_DWORD *)this + 221) |= 0x800u;
  *((_DWORD *)this + 213) = v139;
  v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x1000) == 0)
  {
LABEL_203:
    if ((v49 & 0x2000) == 0)
      return;
    goto LABEL_204;
  }
LABEL_312:
  v140 = *((_DWORD *)a2 + 214);
  *((_DWORD *)this + 221) |= 0x1000u;
  *((_DWORD *)this + 214) = v140;
  if ((*((_DWORD *)a2 + 221) & 0x2000) != 0)
  {
LABEL_204:
    v51 = *((_DWORD *)a2 + 215);
    *((_DWORD *)this + 221) |= 0x2000u;
    *((_DWORD *)this + 215) = v51;
  }
}

void sub_2189EED44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessAllDay::~MotionFitnessAllDay(awd::metrics::MotionFitnessAllDay *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)this = &off_24D98EB28;
  awd::metrics::MotionFitnessAllDay::SharedDtor(this);
  v2 = *((_QWORD *)this + 99);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8000313F17);
  v3 = *((_QWORD *)this + 96);
  if (v3)
    MEMORY[0x219A1DC64](v3, 0x1000C8000313F17);
  v4 = *((_QWORD *)this + 94);
  if (v4)
    MEMORY[0x219A1DC64](v4, 0x1000C8000313F17);
  v5 = *((_QWORD *)this + 92);
  if (v5)
    MEMORY[0x219A1DC64](v5, 0x1000C8000313F17);
  v6 = *((_QWORD *)this + 90);
  if (v6)
    MEMORY[0x219A1DC64](v6, 0x1000C8000313F17);
  v7 = *((_QWORD *)this + 88);
  if (v7)
    MEMORY[0x219A1DC64](v7, 0x1000C8000313F17);
  v8 = *((_QWORD *)this + 86);
  if (v8)
    MEMORY[0x219A1DC64](v8, 0x1000C8052888210);
  v9 = *((_QWORD *)this + 84);
  if (v9)
    MEMORY[0x219A1DC64](v9, 0x1000C8052888210);
  v10 = *((_QWORD *)this + 82);
  if (v10)
    MEMORY[0x219A1DC64](v10, 0x1000C8052888210);
  v11 = *((_QWORD *)this + 80);
  if (v11)
    MEMORY[0x219A1DC64](v11, 0x1000C8052888210);
  v12 = *((_QWORD *)this + 64);
  if (v12)
    MEMORY[0x219A1DC64](v12, 0x1000C8052888210);
  v13 = *((_QWORD *)this + 62);
  if (v13)
    MEMORY[0x219A1DC64](v13, 0x1000C8052888210);
  v14 = *((_QWORD *)this + 45);
  if (v14)
    MEMORY[0x219A1DC64](v14, 0x1000C8052888210);
  v15 = *((_QWORD *)this + 37);
  if (v15)
    MEMORY[0x219A1DC64](v15, 0x1000C8052888210);
  v16 = *((_QWORD *)this + 34);
  if (v16)
    MEMORY[0x219A1DC64](v16, 0x1000C8052888210);
  v17 = *((_QWORD *)this + 28);
  if (v17)
    MEMORY[0x219A1DC64](v17, 0x1000C8052888210);
  v18 = *((_QWORD *)this + 26);
  if (v18)
    MEMORY[0x219A1DC64](v18, 0x1000C8052888210);
  v19 = *((_QWORD *)this + 24);
  if (v19)
    MEMORY[0x219A1DC64](v19, 0x1000C8052888210);
  v20 = *((_QWORD *)this + 21);
  if (v20)
    MEMORY[0x219A1DC64](v20, 0x1000C8052888210);
  v21 = *((_QWORD *)this + 19);
  if (v21)
    MEMORY[0x219A1DC64](v21, 0x1000C8052888210);
  v22 = *((_QWORD *)this + 17);
  if (v22)
    MEMORY[0x219A1DC64](v22, 0x1000C8052888210);
  v23 = *((_QWORD *)this + 15);
  if (v23)
    MEMORY[0x219A1DC64](v23, 0x1000C8052888210);
  v24 = *((_QWORD *)this + 13);
  if (v24)
    MEMORY[0x219A1DC64](v24, 0x1000C8052888210);
  v25 = *((_QWORD *)this + 11);
  if (v25)
    MEMORY[0x219A1DC64](v25, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::MotionFitnessAllDay::~MotionFitnessAllDay(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::MotionFitnessAllDay::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;

  v1 = this;
  v2 = this[40];
  v3 = MEMORY[0x24BEDD958];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  v5 = v1[41];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v5, 0x1012C40EC159624);
  }
  v7 = v1[42];
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v7, 0x1012C40EC159624);
  }
  v9 = v1[43];
  if (v9 != v3 && v9 != 0)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v9, 0x1012C40EC159624);
  }
  v11 = v1[44];
  if (v11 != v3 && v11)
  {
    if (*(char *)(v11 + 23) < 0)
      operator delete(*(void **)v11);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::MotionFitnessAllDay::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 864) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessAllDay::default_instance(awd::metrics::MotionFitnessAllDay *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionFitnessAllDay::default_instance_;
  if (!awd::metrics::MotionFitnessAllDay::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessAllDay::default_instance_;
  }
  return result;
}

_OWORD *awd::metrics::MotionFitnessAllDay::New(awd::metrics::MotionFitnessAllDay *this)
{
  _OWORD *v1;

  v1 = (_OWORD *)operator new();
  *(_QWORD *)v1 = &off_24D98EB28;
  v1[17] = 0u;
  *(_OWORD *)((char *)v1 + 296) = 0u;
  *(_OWORD *)((char *)v1 + 360) = 0u;
  *(_OWORD *)((char *)v1 + 792) = 0u;
  *(_OWORD *)((char *)v1 + 88) = 0u;
  *(_OWORD *)((char *)v1 + 104) = 0u;
  *(_OWORD *)((char *)v1 + 120) = 0u;
  *(_OWORD *)((char *)v1 + 136) = 0u;
  *(_OWORD *)((char *)v1 + 152) = 0u;
  *(_OWORD *)((char *)v1 + 168) = 0u;
  v1[13] = 0u;
  v1[14] = 0u;
  v1[12] = 0u;
  v1[31] = 0u;
  v1[32] = 0u;
  v1[47] = 0u;
  v1[48] = 0u;
  v1[45] = 0u;
  v1[46] = 0u;
  v1[43] = 0u;
  v1[44] = 0u;
  v1[41] = 0u;
  v1[42] = 0u;
  v1[40] = 0u;
  awd::metrics::MotionFitnessAllDay::SharedCtor((awd::metrics::MotionFitnessAllDay *)v1);
  return v1;
}

uint64_t awd::metrics::MotionFitnessAllDay::Clear(uint64_t this)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v1 = *(_DWORD *)(this + 868);
  if ((_BYTE)v1)
  {
    *(_WORD *)(this + 68) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 52) = 0u;
    *(_OWORD *)(this + 36) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 184) = 0;
    *(_QWORD *)(this + 72) = 0;
    *(_QWORD *)(this + 80) = 0;
  }
  if (v1 >> 27)
    *(_WORD *)(this + 70) = 0;
  v2 = *(_DWORD *)(this + 872);
  if ((_BYTE)v2)
  {
    *(_BYTE *)(this + 444) = 0;
    *(_DWORD *)(this + 188) = 0;
    *(_QWORD *)(this + 248) = 0;
    *(_QWORD *)(this + 256) = 0;
    *(_QWORD *)(this + 240) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 264) = 0;
    *(_QWORD *)(this + 288) = 0;
    *(_QWORD *)(this + 312) = 0;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    v3 = MEMORY[0x24BEDD958];
    if ((v2 & 0x10000) != 0)
    {
      v4 = *(_QWORD *)(this + 320);
      if (v4 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 874) & 2) != 0)
    {
      v5 = *(_QWORD *)(this + 328);
      if (v5 != v3)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 874) & 4) != 0)
    {
      v6 = *(_QWORD *)(this + 336);
      if (v6 != v3)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 874) & 8) != 0)
    {
      v7 = *(_QWORD *)(this + 344);
      if (v7 != v3)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 874) & 0x10) != 0)
    {
      v8 = *(_QWORD *)(this + 352);
      if (v8 != v3)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(_BYTE **)v8 = 0;
          *(_QWORD *)(v8 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v8 = 0;
          *(_BYTE *)(v8 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 376) = 0;
    v2 = *(_DWORD *)(this + 872);
  }
  if (HIBYTE(v2))
  {
    *(_OWORD *)(this + 384) = 0u;
    *(_OWORD *)(this + 400) = 0u;
  }
  v9 = *(_DWORD *)(this + 876);
  if ((_BYTE)v9)
  {
    *(_DWORD *)(this + 448) = 0;
    *(_QWORD *)(this + 424) = 0;
    *(_QWORD *)(this + 432) = 0;
    *(_QWORD *)(this + 416) = 0;
    *(_DWORD *)(this + 440) = 0;
  }
  if ((v9 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 452) = 0u;
    *(_OWORD *)(this + 468) = 0u;
  }
  if ((v9 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 484) = 0;
    *(_QWORD *)(this + 488) = 0;
    *(_WORD *)(this + 445) = 0;
    *(_BYTE *)(this + 447) = 0;
  }
  if (HIBYTE(v9))
  {
    *(_OWORD *)(this + 528) = 0u;
    *(_OWORD *)(this + 544) = 0u;
  }
  v10 = *(_DWORD *)(this + 880);
  if ((_BYTE)v10)
  {
    *(_OWORD *)(this + 560) = 0u;
    *(_OWORD *)(this + 576) = 0u;
  }
  if ((v10 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 592) = 0u;
    *(_OWORD *)(this + 608) = 0u;
  }
  if ((v10 & 0xFF0000) != 0)
    *(_OWORD *)(this + 624) = 0u;
  if (v10 >> 29)
    *(_QWORD *)(this + 784) = 0;
  v11 = *(_DWORD *)(this + 884);
  if ((_BYTE)v11)
  {
    *(_OWORD *)(this + 808) = 0u;
    *(_OWORD *)(this + 824) = 0u;
  }
  if ((v11 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 856) = 0;
    *(_OWORD *)(this + 840) = 0u;
  }
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 112) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(_DWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 160) = 0;
  *(_DWORD *)(this + 176) = 0;
  *(_DWORD *)(this + 200) = 0;
  *(_DWORD *)(this + 216) = 0;
  *(_DWORD *)(this + 232) = 0;
  *(_DWORD *)(this + 280) = 0;
  *(_DWORD *)(this + 304) = 0;
  *(_DWORD *)(this + 368) = 0;
  *(_DWORD *)(this + 504) = 0;
  *(_DWORD *)(this + 520) = 0;
  *(_DWORD *)(this + 648) = 0;
  *(_DWORD *)(this + 664) = 0;
  *(_DWORD *)(this + 680) = 0;
  *(_DWORD *)(this + 696) = 0;
  *(_DWORD *)(this + 712) = 0;
  *(_DWORD *)(this + 728) = 0;
  *(_DWORD *)(this + 744) = 0;
  *(_DWORD *)(this + 760) = 0;
  *(_DWORD *)(this + 776) = 0;
  *(_DWORD *)(this + 800) = 0;
  *(_QWORD *)(this + 868) = 0;
  *(_QWORD *)(this + 876) = 0;
  *(_DWORD *)(this + 884) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessAllDay::MergePartialFromCodedStream(awd::metrics::MotionFitnessAllDay *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v3;
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  uint64_t v7;

  v3 = (unint64_t *)((char *)a2 + 8);
  v4 = (unint64_t *)((char *)a2 + 16);
  while (1)
  {
    v5 = (char *)*v3;
    if (*v3 >= *v4 || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    v7 = (TagFallback >> 3) - 1;
    if (v7 <= 0x8E)
      __asm { BR              X9 }
    if ((TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

void sub_2189F652C(_Unwind_Exception *a1)
{
  uint64_t v1;

  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)(v1 - 152));
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  uint64_t result;
  unsigned int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;

  v9 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v9 = *v4;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_10:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    return 1;
  }
  else
  {
    while (1)
    {
      v10 = 0;
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v10);
      if (!(_DWORD)result)
        break;
      v6 = v10;
      v7 = a2[2];
      if (v7 == a2[3])
      {
        wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(a2, v7 + 1);
        v7 = a2[2];
      }
      v8 = *(_QWORD *)a2;
      a2[2] = v7 + 1;
      *(_DWORD *)(v8 + 4 * v7) = v6;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0)
        goto LABEL_10;
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  uint64_t result;
  char *v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;

  v11 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v11 = *v4;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v10 = 0;
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v10);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v10 = *v6;
        *((_QWORD *)this + 1) = v6 + 1;
      }
      v7 = a2[2];
      if (v7 == a2[3])
      {
        wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve(a2, v7 + 1);
        v7 = a2[2];
      }
      v8 = v10;
      v9 = *(_QWORD *)a2;
      a2[2] = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7) = v8;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t awd::metrics::MotionFitnessAllDay::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;

  v5 = this;
  v6 = *(_DWORD *)(this + 868);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 868);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_205;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_206;
  }
LABEL_205:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 69), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_207;
  }
LABEL_206:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_208;
  }
LABEL_207:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_209;
  }
LABEL_208:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_210;
  }
LABEL_209:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_211;
  }
LABEL_210:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_212;
  }
LABEL_211:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_213;
  }
LABEL_212:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_214;
  }
LABEL_213:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_215;
  }
LABEL_214:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_216;
  }
LABEL_215:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_217;
  }
LABEL_216:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_218;
  }
LABEL_217:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_219;
  }
LABEL_218:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_220;
  }
LABEL_219:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_221;
  }
LABEL_220:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_222;
  }
LABEL_221:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 80), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
LABEL_222:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 868) & 0x100000) != 0)
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(v5 + 184), (uint64_t)a2, a4);
LABEL_23:
  if (*(int *)(v5 + 96) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 88) + 4 * v7++), a3);
    while (v7 < *(int *)(v5 + 96));
  }
  if (*(int *)(v5 + 112) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 104) + 4 * v8++), a3);
    while (v8 < *(int *)(v5 + 112));
  }
  if (*(int *)(v5 + 128) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 120) + 4 * v9++), a3);
    while (v9 < *(int *)(v5 + 128));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 136) + 4 * v10++), a3);
    while (v10 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 160) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 152) + 4 * v11++), a3);
    while (v11 < *(int *)(v5 + 160));
  }
  if (*(int *)(v5 + 176) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 168) + 4 * v12++), a3);
    while (v12 < *(int *)(v5 + 176));
  }
  if ((*(_BYTE *)(v5 + 871) & 8) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(unsigned __int8 *)(v5 + 70), (uint64_t)a2, a4);
  if (*(int *)(v5 + 200) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned int *)(*(_QWORD *)(v5 + 192) + 4 * v13++), (uint64_t)a2, a4);
    while (v13 < *(int *)(v5 + 200));
  }
  if (*(int *)(v5 + 216) >= 1)
  {
    v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned int *)(*(_QWORD *)(v5 + 208) + 4 * v14++), (uint64_t)a2, a4);
    while (v14 < *(int *)(v5 + 216));
  }
  if (*(int *)(v5 + 232) >= 1)
  {
    v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned int *)(*(_QWORD *)(v5 + 224) + 4 * v15++), (uint64_t)a2, a4);
    while (v15 < *(int *)(v5 + 232));
  }
  if ((*(_DWORD *)(v5 + 868) & 0x80000000) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned __int8 *)(v5 + 71), (uint64_t)a2, a4);
  v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, *(unsigned __int8 *)(v5 + 444), (uint64_t)a2, a4);
    v16 = *(_DWORD *)(v5 + 872);
    if ((v16 & 2) == 0)
    {
LABEL_56:
      if ((v16 & 4) == 0)
        goto LABEL_57;
      goto LABEL_226;
    }
  }
  else if ((v16 & 2) == 0)
  {
    goto LABEL_56;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(unsigned int *)(v5 + 188), (uint64_t)a2, a4);
  v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 4) == 0)
  {
LABEL_57:
    if ((v16 & 8) == 0)
      goto LABEL_58;
    goto LABEL_227;
  }
LABEL_226:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned int *)(v5 + 240), (uint64_t)a2, a4);
  v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 8) == 0)
  {
LABEL_58:
    if ((v16 & 0x10) == 0)
      goto LABEL_59;
    goto LABEL_228;
  }
LABEL_227:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(unsigned int *)(v5 + 244), (uint64_t)a2, a4);
  v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 0x10) == 0)
  {
LABEL_59:
    if ((v16 & 0x20) == 0)
      goto LABEL_60;
    goto LABEL_229;
  }
LABEL_228:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(unsigned int *)(v5 + 248), (uint64_t)a2, a4);
  v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 0x20) == 0)
  {
LABEL_60:
    if ((v16 & 0x40) == 0)
      goto LABEL_61;
    goto LABEL_230;
  }
LABEL_229:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, *(unsigned int *)(v5 + 252), (uint64_t)a2, a4);
  v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 0x40) == 0)
  {
LABEL_61:
    if ((v16 & 0x80) == 0)
      goto LABEL_62;
    goto LABEL_231;
  }
LABEL_230:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(unsigned int *)(v5 + 256), (uint64_t)a2, a4);
  v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 0x80) == 0)
  {
LABEL_62:
    if ((v16 & 0x100) == 0)
      goto LABEL_63;
    goto LABEL_232;
  }
LABEL_231:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(unsigned int *)(v5 + 260), (uint64_t)a2, a4);
  v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 0x100) == 0)
  {
LABEL_63:
    if ((v16 & 0x200) == 0)
      goto LABEL_65;
    goto LABEL_64;
  }
LABEL_232:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(unsigned int *)(v5 + 264), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 872) & 0x200) != 0)
LABEL_64:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(unsigned int *)(v5 + 268), (uint64_t)a2, a4);
LABEL_65:
  if (*(int *)(v5 + 280) >= 1)
  {
    v17 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 272) + 4 * v17++), a3);
    while (v17 < *(int *)(v5 + 280));
  }
  if ((*(_BYTE *)(v5 + 873) & 8) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, (uint64_t)a2, *(float *)(v5 + 288), a3);
  if (*(int *)(v5 + 304) >= 1)
  {
    v18 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 296) + 4 * v18++), a3);
    while (v18 < *(int *)(v5 + 304));
  }
  v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x2000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, (uint64_t)a2, *(float *)(v5 + 292), a3);
    v19 = *(_DWORD *)(v5 + 872);
    if ((v19 & 0x4000) == 0)
    {
LABEL_75:
      if ((v19 & 0x8000) == 0)
        goto LABEL_76;
      goto LABEL_236;
    }
  }
  else if ((v19 & 0x4000) == 0)
  {
    goto LABEL_75;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, (uint64_t)a2, *(float *)(v5 + 312), a3);
  v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x8000) == 0)
  {
LABEL_76:
    if ((v19 & 0x10000) == 0)
      goto LABEL_77;
    goto LABEL_237;
  }
LABEL_236:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, (uint64_t)a2, *(float *)(v5 + 316), a3);
  v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x10000) == 0)
  {
LABEL_77:
    if ((v19 & 0x20000) == 0)
      goto LABEL_78;
    goto LABEL_238;
  }
LABEL_237:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x20000) == 0)
  {
LABEL_78:
    if ((v19 & 0x40000) == 0)
      goto LABEL_79;
    goto LABEL_239;
  }
LABEL_238:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x40000) == 0)
  {
LABEL_79:
    if ((v19 & 0x80000) == 0)
      goto LABEL_80;
    goto LABEL_240;
  }
LABEL_239:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x80000) == 0)
  {
LABEL_80:
    if ((v19 & 0x100000) == 0)
      goto LABEL_82;
    goto LABEL_81;
  }
LABEL_240:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  if ((*(_DWORD *)(v5 + 872) & 0x100000) != 0)
LABEL_81:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
LABEL_82:
  if (*(int *)(v5 + 368) >= 1)
  {
    v20 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, *(unsigned int *)(*(_QWORD *)(v5 + 360) + 4 * v20++), (uint64_t)a2, a4);
    while (v20 < *(int *)(v5 + 368));
  }
  v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x400000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, *(unsigned int *)(v5 + 376), (uint64_t)a2, a4);
    v21 = *(_DWORD *)(v5 + 872);
    if ((v21 & 0x800000) == 0)
    {
LABEL_87:
      if ((v21 & 0x1000000) == 0)
        goto LABEL_88;
      goto LABEL_244;
    }
  }
  else if ((v21 & 0x800000) == 0)
  {
    goto LABEL_87;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, *(unsigned int *)(v5 + 380), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x1000000) == 0)
  {
LABEL_88:
    if ((v21 & 0x2000000) == 0)
      goto LABEL_89;
    goto LABEL_245;
  }
LABEL_244:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x39, *(unsigned int *)(v5 + 384), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x2000000) == 0)
  {
LABEL_89:
    if ((v21 & 0x4000000) == 0)
      goto LABEL_90;
    goto LABEL_246;
  }
LABEL_245:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3A, *(unsigned int *)(v5 + 388), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x4000000) == 0)
  {
LABEL_90:
    if ((v21 & 0x8000000) == 0)
      goto LABEL_91;
    goto LABEL_247;
  }
LABEL_246:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3B, *(unsigned int *)(v5 + 392), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x8000000) == 0)
  {
LABEL_91:
    if ((v21 & 0x10000000) == 0)
      goto LABEL_92;
    goto LABEL_248;
  }
LABEL_247:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, *(unsigned int *)(v5 + 396), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x10000000) == 0)
  {
LABEL_92:
    if ((v21 & 0x20000000) == 0)
      goto LABEL_93;
    goto LABEL_249;
  }
LABEL_248:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(unsigned int *)(v5 + 400), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x20000000) == 0)
  {
LABEL_93:
    if ((v21 & 0x40000000) == 0)
      goto LABEL_94;
LABEL_250:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, *(unsigned int *)(v5 + 408), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 872) & 0x80000000) == 0)
      goto LABEL_95;
    goto LABEL_251;
  }
LABEL_249:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, *(unsigned int *)(v5 + 404), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x40000000) != 0)
    goto LABEL_250;
LABEL_94:
  if ((v21 & 0x80000000) == 0)
    goto LABEL_95;
LABEL_251:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x40, *(unsigned int *)(v5 + 412), (uint64_t)a2, a4);
LABEL_95:
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x41, *(unsigned int *)(v5 + 416), (uint64_t)a2, a4);
    v22 = *(_DWORD *)(v5 + 876);
    if ((v22 & 2) == 0)
    {
LABEL_97:
      if ((v22 & 4) == 0)
        goto LABEL_98;
      goto LABEL_254;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_97;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, *(unsigned int *)(v5 + 420), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 4) == 0)
  {
LABEL_98:
    if ((v22 & 8) == 0)
      goto LABEL_99;
    goto LABEL_255;
  }
LABEL_254:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, *(unsigned int *)(v5 + 424), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 8) == 0)
  {
LABEL_99:
    if ((v22 & 0x10) == 0)
      goto LABEL_100;
    goto LABEL_256;
  }
LABEL_255:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x44, *(unsigned int *)(v5 + 428), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x10) == 0)
  {
LABEL_100:
    if ((v22 & 0x20) == 0)
      goto LABEL_101;
    goto LABEL_257;
  }
LABEL_256:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x45, *(unsigned int *)(v5 + 432), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x20) == 0)
  {
LABEL_101:
    if ((v22 & 0x40) == 0)
      goto LABEL_102;
    goto LABEL_258;
  }
LABEL_257:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(unsigned int *)(v5 + 436), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x40) == 0)
  {
LABEL_102:
    if ((v22 & 0x80) == 0)
      goto LABEL_103;
    goto LABEL_259;
  }
LABEL_258:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, *(unsigned int *)(v5 + 440), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x80) == 0)
  {
LABEL_103:
    if ((v22 & 0x100) == 0)
      goto LABEL_104;
    goto LABEL_260;
  }
LABEL_259:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(unsigned int *)(v5 + 448), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x100) == 0)
  {
LABEL_104:
    if ((v22 & 0x200) == 0)
      goto LABEL_105;
    goto LABEL_261;
  }
LABEL_260:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(unsigned int *)(v5 + 452), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x200) == 0)
  {
LABEL_105:
    if ((v22 & 0x400) == 0)
      goto LABEL_106;
    goto LABEL_262;
  }
LABEL_261:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(unsigned int *)(v5 + 456), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x400) == 0)
  {
LABEL_106:
    if ((v22 & 0x800) == 0)
      goto LABEL_107;
    goto LABEL_263;
  }
LABEL_262:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(unsigned int *)(v5 + 460), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x800) == 0)
  {
LABEL_107:
    if ((v22 & 0x1000) == 0)
      goto LABEL_108;
    goto LABEL_264;
  }
LABEL_263:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, *(unsigned int *)(v5 + 464), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x1000) == 0)
  {
LABEL_108:
    if ((v22 & 0x2000) == 0)
      goto LABEL_109;
    goto LABEL_265;
  }
LABEL_264:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, *(unsigned int *)(v5 + 468), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x2000) == 0)
  {
LABEL_109:
    if ((v22 & 0x4000) == 0)
      goto LABEL_110;
    goto LABEL_266;
  }
LABEL_265:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4E, *(unsigned int *)(v5 + 472), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x4000) == 0)
  {
LABEL_110:
    if ((v22 & 0x8000) == 0)
      goto LABEL_111;
    goto LABEL_267;
  }
LABEL_266:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4F, *(unsigned int *)(v5 + 476), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x8000) == 0)
  {
LABEL_111:
    if ((v22 & 0x10000) == 0)
      goto LABEL_112;
    goto LABEL_268;
  }
LABEL_267:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, *(unsigned int *)(v5 + 480), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x10000) == 0)
  {
LABEL_112:
    if ((v22 & 0x20000) == 0)
      goto LABEL_113;
    goto LABEL_269;
  }
LABEL_268:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x51, *(unsigned int *)(v5 + 484), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x20000) == 0)
  {
LABEL_113:
    if ((v22 & 0x40000) == 0)
      goto LABEL_114;
    goto LABEL_270;
  }
LABEL_269:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x52, *(unsigned int *)(v5 + 488), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x40000) == 0)
  {
LABEL_114:
    if ((v22 & 0x80000) == 0)
      goto LABEL_115;
    goto LABEL_271;
  }
LABEL_270:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x53, *(unsigned int *)(v5 + 492), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x80000) == 0)
  {
LABEL_115:
    if ((v22 & 0x100000) == 0)
      goto LABEL_116;
    goto LABEL_272;
  }
LABEL_271:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x54, *(unsigned __int8 *)(v5 + 445), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x100000) == 0)
  {
LABEL_116:
    if ((v22 & 0x200000) == 0)
      goto LABEL_118;
    goto LABEL_117;
  }
LABEL_272:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x55, *(unsigned __int8 *)(v5 + 446), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 876) & 0x200000) != 0)
LABEL_117:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x56, *(unsigned __int8 *)(v5 + 447), (uint64_t)a2, a4);
LABEL_118:
  if (*(int *)(v5 + 504) >= 1)
  {
    v23 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x57, *(unsigned int *)(*(_QWORD *)(v5 + 496) + 4 * v23++), (uint64_t)a2, a4);
    while (v23 < *(int *)(v5 + 504));
  }
  if (*(int *)(v5 + 520) >= 1)
  {
    v24 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x58, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 512) + 4 * v24++), a3);
    while (v24 < *(int *)(v5 + 520));
  }
  v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x1000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x59, *(unsigned int *)(v5 + 528), (uint64_t)a2, a4);
    v25 = *(_DWORD *)(v5 + 876);
    if ((v25 & 0x2000000) == 0)
    {
LABEL_126:
      if ((v25 & 0x4000000) == 0)
        goto LABEL_127;
      goto LABEL_276;
    }
  }
  else if ((v25 & 0x2000000) == 0)
  {
    goto LABEL_126;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5A, *(unsigned int *)(v5 + 532), (uint64_t)a2, a4);
  v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x4000000) == 0)
  {
LABEL_127:
    if ((v25 & 0x8000000) == 0)
      goto LABEL_128;
    goto LABEL_277;
  }
LABEL_276:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5B, *(unsigned int *)(v5 + 536), (uint64_t)a2, a4);
  v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x8000000) == 0)
  {
LABEL_128:
    if ((v25 & 0x10000000) == 0)
      goto LABEL_129;
    goto LABEL_278;
  }
LABEL_277:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5C, *(unsigned int *)(v5 + 540), (uint64_t)a2, a4);
  v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x10000000) == 0)
  {
LABEL_129:
    if ((v25 & 0x20000000) == 0)
      goto LABEL_130;
    goto LABEL_279;
  }
LABEL_278:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5D, *(unsigned int *)(v5 + 544), (uint64_t)a2, a4);
  v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x20000000) == 0)
  {
LABEL_130:
    if ((v25 & 0x40000000) == 0)
      goto LABEL_131;
LABEL_280:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5F, *(unsigned int *)(v5 + 552), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 876) & 0x80000000) == 0)
      goto LABEL_132;
    goto LABEL_281;
  }
LABEL_279:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5E, *(unsigned int *)(v5 + 548), (uint64_t)a2, a4);
  v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x40000000) != 0)
    goto LABEL_280;
LABEL_131:
  if ((v25 & 0x80000000) == 0)
    goto LABEL_132;
LABEL_281:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x60, *(unsigned int *)(v5 + 556), (uint64_t)a2, a4);
LABEL_132:
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x61, *(unsigned int *)(v5 + 560), (uint64_t)a2, a4);
    v26 = *(_DWORD *)(v5 + 880);
    if ((v26 & 2) == 0)
    {
LABEL_134:
      if ((v26 & 4) == 0)
        goto LABEL_135;
      goto LABEL_284;
    }
  }
  else if ((v26 & 2) == 0)
  {
    goto LABEL_134;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x62, *(unsigned int *)(v5 + 564), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 4) == 0)
  {
LABEL_135:
    if ((v26 & 8) == 0)
      goto LABEL_136;
    goto LABEL_285;
  }
LABEL_284:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x63, *(unsigned int *)(v5 + 568), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 8) == 0)
  {
LABEL_136:
    if ((v26 & 0x10) == 0)
      goto LABEL_137;
    goto LABEL_286;
  }
LABEL_285:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x64, *(unsigned int *)(v5 + 572), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x10) == 0)
  {
LABEL_137:
    if ((v26 & 0x20) == 0)
      goto LABEL_138;
    goto LABEL_287;
  }
LABEL_286:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x65, *(unsigned int *)(v5 + 576), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x20) == 0)
  {
LABEL_138:
    if ((v26 & 0x40) == 0)
      goto LABEL_139;
    goto LABEL_288;
  }
LABEL_287:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x66, *(unsigned int *)(v5 + 580), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x40) == 0)
  {
LABEL_139:
    if ((v26 & 0x80) == 0)
      goto LABEL_140;
    goto LABEL_289;
  }
LABEL_288:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x67, *(unsigned int *)(v5 + 584), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x80) == 0)
  {
LABEL_140:
    if ((v26 & 0x100) == 0)
      goto LABEL_141;
    goto LABEL_290;
  }
LABEL_289:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x68, *(unsigned int *)(v5 + 588), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x100) == 0)
  {
LABEL_141:
    if ((v26 & 0x200) == 0)
      goto LABEL_142;
    goto LABEL_291;
  }
LABEL_290:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x69, *(unsigned int *)(v5 + 592), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x200) == 0)
  {
LABEL_142:
    if ((v26 & 0x400) == 0)
      goto LABEL_143;
    goto LABEL_292;
  }
LABEL_291:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6A, *(unsigned int *)(v5 + 596), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x400) == 0)
  {
LABEL_143:
    if ((v26 & 0x800) == 0)
      goto LABEL_144;
    goto LABEL_293;
  }
LABEL_292:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6B, *(unsigned int *)(v5 + 600), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x800) == 0)
  {
LABEL_144:
    if ((v26 & 0x1000) == 0)
      goto LABEL_145;
    goto LABEL_294;
  }
LABEL_293:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6C, *(unsigned int *)(v5 + 604), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x1000) == 0)
  {
LABEL_145:
    if ((v26 & 0x2000) == 0)
      goto LABEL_146;
    goto LABEL_295;
  }
LABEL_294:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6D, *(unsigned int *)(v5 + 608), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x2000) == 0)
  {
LABEL_146:
    if ((v26 & 0x4000) == 0)
      goto LABEL_147;
    goto LABEL_296;
  }
LABEL_295:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6E, *(unsigned int *)(v5 + 612), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x4000) == 0)
  {
LABEL_147:
    if ((v26 & 0x8000) == 0)
      goto LABEL_148;
    goto LABEL_297;
  }
LABEL_296:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6F, *(unsigned int *)(v5 + 616), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x8000) == 0)
  {
LABEL_148:
    if ((v26 & 0x10000) == 0)
      goto LABEL_149;
    goto LABEL_298;
  }
LABEL_297:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x70, *(unsigned int *)(v5 + 620), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x10000) == 0)
  {
LABEL_149:
    if ((v26 & 0x20000) == 0)
      goto LABEL_150;
    goto LABEL_299;
  }
LABEL_298:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x71, *(unsigned int *)(v5 + 624), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x20000) == 0)
  {
LABEL_150:
    if ((v26 & 0x40000) == 0)
      goto LABEL_151;
    goto LABEL_300;
  }
LABEL_299:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x72, *(unsigned int *)(v5 + 628), (uint64_t)a2, a4);
  v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x40000) == 0)
  {
LABEL_151:
    if ((v26 & 0x80000) == 0)
      goto LABEL_153;
    goto LABEL_152;
  }
LABEL_300:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x73, *(unsigned int *)(v5 + 632), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 880) & 0x80000) != 0)
LABEL_152:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x74, *(unsigned int *)(v5 + 636), (uint64_t)a2, a4);
LABEL_153:
  if (*(int *)(v5 + 648) >= 1)
  {
    v27 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x75, *(unsigned int *)(*(_QWORD *)(v5 + 640) + 4 * v27++), (uint64_t)a2, a4);
    while (v27 < *(int *)(v5 + 648));
  }
  if (*(int *)(v5 + 664) >= 1)
  {
    v28 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x76, *(unsigned int *)(*(_QWORD *)(v5 + 656) + 4 * v28++), (uint64_t)a2, a4);
    while (v28 < *(int *)(v5 + 664));
  }
  if (*(int *)(v5 + 680) >= 1)
  {
    v29 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x77, *(unsigned int *)(*(_QWORD *)(v5 + 672) + 4 * v29++), (uint64_t)a2, a4);
    while (v29 < *(int *)(v5 + 680));
  }
  if (*(int *)(v5 + 696) >= 1)
  {
    v30 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x78, *(unsigned int *)(*(_QWORD *)(v5 + 688) + 4 * v30++), (uint64_t)a2, a4);
    while (v30 < *(int *)(v5 + 696));
  }
  if (*(int *)(v5 + 712) >= 1)
  {
    v31 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x79, *(_QWORD *)(*(_QWORD *)(v5 + 704) + 8 * v31++), (uint64_t)a2, a4);
    while (v31 < *(int *)(v5 + 712));
  }
  if (*(int *)(v5 + 728) >= 1)
  {
    v32 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7A, *(_QWORD *)(*(_QWORD *)(v5 + 720) + 8 * v32++), (uint64_t)a2, a4);
    while (v32 < *(int *)(v5 + 728));
  }
  if (*(int *)(v5 + 744) >= 1)
  {
    v33 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7B, *(_QWORD *)(*(_QWORD *)(v5 + 736) + 8 * v33++), (uint64_t)a2, a4);
    while (v33 < *(int *)(v5 + 744));
  }
  if (*(int *)(v5 + 776) >= 1)
  {
    v34 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7D, *(_QWORD *)(*(_QWORD *)(v5 + 768) + 8 * v34++), (uint64_t)a2, a4);
    while (v34 < *(int *)(v5 + 776));
  }
  v35 = *(_DWORD *)(v5 + 880);
  if ((v35 & 0x20000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7E, *(unsigned int *)(v5 + 784), (uint64_t)a2, a4);
    v35 = *(_DWORD *)(v5 + 880);
  }
  if ((v35 & 0x40000000) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7F, *(unsigned int *)(v5 + 788), (uint64_t)a2, a4);
  if (*(int *)(v5 + 800) >= 1)
  {
    v36 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x80, *(_QWORD *)(*(_QWORD *)(v5 + 792) + 8 * v36++), (uint64_t)a2, a4);
    while (v36 < *(int *)(v5 + 800));
  }
  v37 = *(_DWORD *)(v5 + 884);
  if ((v37 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x81, *(unsigned int *)(v5 + 808), (uint64_t)a2, a4);
    v37 = *(_DWORD *)(v5 + 884);
    if ((v37 & 2) == 0)
    {
LABEL_186:
      if ((v37 & 4) == 0)
        goto LABEL_187;
      goto LABEL_304;
    }
  }
  else if ((v37 & 2) == 0)
  {
    goto LABEL_186;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x82, *(unsigned int *)(v5 + 812), (uint64_t)a2, a4);
  v37 = *(_DWORD *)(v5 + 884);
  if ((v37 & 4) == 0)
  {
LABEL_187:
    if ((v37 & 8) == 0)
      goto LABEL_188;
    goto LABEL_305;
  }
LABEL_304:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x83, *(unsigned int *)(v5 + 816), (uint64_t)a2, a4);
  v37 = *(_DWORD *)(v5 + 884);
  if ((v37 & 8) == 0)
  {
LABEL_188:
    if ((v37 & 0x10) == 0)
      goto LABEL_190;
    goto LABEL_189;
  }
LABEL_305:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x84, *(unsigned int *)(v5 + 820), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 884) & 0x10) != 0)
LABEL_189:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x85, *(unsigned int *)(v5 + 824), (uint64_t)a2, a4);
LABEL_190:
  if (*(int *)(v5 + 760) >= 1)
  {
    v38 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x86, *(_QWORD *)(*(_QWORD *)(v5 + 752) + 8 * v38++), (uint64_t)a2, a4);
    while (v38 < *(int *)(v5 + 760));
  }
  v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x20) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x87, *(unsigned int *)(v5 + 828), (uint64_t)a2, a4);
    v39 = *(_DWORD *)(v5 + 884);
    if ((v39 & 0x40) == 0)
    {
LABEL_195:
      if ((v39 & 0x80) == 0)
        goto LABEL_196;
      goto LABEL_309;
    }
  }
  else if ((v39 & 0x40) == 0)
  {
    goto LABEL_195;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x88, *(unsigned int *)(v5 + 832), (uint64_t)a2, a4);
  v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x80) == 0)
  {
LABEL_196:
    if ((v39 & 0x100) == 0)
      goto LABEL_197;
    goto LABEL_310;
  }
LABEL_309:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x89, *(unsigned int *)(v5 + 836), (uint64_t)a2, a4);
  v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x100) == 0)
  {
LABEL_197:
    if ((v39 & 0x200) == 0)
      goto LABEL_198;
    goto LABEL_311;
  }
LABEL_310:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8A, *(unsigned int *)(v5 + 840), (uint64_t)a2, a4);
  v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x200) == 0)
  {
LABEL_198:
    if ((v39 & 0x400) == 0)
      goto LABEL_199;
    goto LABEL_312;
  }
LABEL_311:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8B, *(unsigned int *)(v5 + 844), (uint64_t)a2, a4);
  v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x400) == 0)
  {
LABEL_199:
    if ((v39 & 0x800) == 0)
      goto LABEL_200;
    goto LABEL_313;
  }
LABEL_312:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8C, *(unsigned int *)(v5 + 848), (uint64_t)a2, a4);
  v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x800) == 0)
  {
LABEL_200:
    if ((v39 & 0x1000) == 0)
      goto LABEL_201;
    goto LABEL_314;
  }
LABEL_313:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8D, *(unsigned int *)(v5 + 852), (uint64_t)a2, a4);
  v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x1000) == 0)
  {
LABEL_201:
    if ((v39 & 0x2000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8F, *(unsigned int *)(v5 + 860), (uint64_t)a2, a4);
  }
LABEL_314:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8E, *(unsigned int *)(v5 + 856), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 884) & 0x2000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8F, *(unsigned int *)(v5 + 860), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionFitnessAllDay::ByteSize(awd::metrics::MotionFitnessAllDay *this)
{
  awd::metrics::MotionFitnessAllDay *v1;
  int v2;
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v39;
  int v40;
  int v41;
  unsigned int v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  int v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v47;
  int v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v51;
  int v52;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v53;
  int v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  int v56;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v57;
  int v58;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  char v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  char v70;
  uint64_t v71;
  unint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  char v76;
  uint64_t v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  int v81;
  char v82;
  uint64_t v83;
  unint64_t v84;
  int v85;
  uint64_t v86;
  int v87;
  char v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v92;
  int v93;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v94;
  int v95;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v96;
  int v97;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v98;
  int v99;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v100;
  int v101;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v102;
  int v103;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v104;
  int v105;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v106;
  int v107;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v108;
  int v109;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v110;
  int v111;
  unsigned int v112;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v113;
  int v114;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v115;
  int v116;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v117;
  int v118;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v119;
  int v120;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v121;
  int v122;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v123;
  int v124;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v125;
  int v126;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v127;
  int v128;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v129;
  int v130;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v131;
  int v132;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v133;
  int v134;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v135;
  int v136;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v137;
  int v138;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v139;
  int v140;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v141;
  int v142;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v143;
  int v144;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v145;
  int v146;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v147;
  int v148;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v149;
  int v150;
  int v151;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v152;
  int v153;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v154;
  int v155;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v156;
  int v157;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v158;
  int v159;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v160;
  int v161;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v162;
  int v163;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v164;
  int v165;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v166;
  int v167;
  unsigned int v168;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v169;
  int v170;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v171;
  int v172;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v173;
  int v174;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v175;
  int v176;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v177;
  int v178;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v179;
  int v180;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v181;
  int v182;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v183;
  int v184;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v185;
  int v186;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v187;
  int v188;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v189;
  int v190;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v191;
  int v192;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v193;
  int v194;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v195;
  int v196;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v197;
  int v198;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v199;
  int v200;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v201;
  int v202;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v203;
  int v204;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v205;
  int v206;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v207;
  int v208;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v209;
  int v210;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v211;
  int v212;
  int v213;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v214;
  int v215;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v216;
  int v217;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v218;
  int v219;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v220;
  int v221;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v222;
  int v223;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v224;
  int v225;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v226;
  int v227;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v228;
  int v229;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v230;
  int v231;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v232;
  int v233;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v234;
  int v235;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v236;
  int v237;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v238;
  int v239;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v240;
  int v241;
  int v242;
  uint64_t v243;
  int v244;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v245;
  int v246;
  int v247;
  uint64_t v248;
  int v249;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v250;
  int v251;
  int v252;
  uint64_t v253;
  int v254;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v255;
  int v256;
  int v257;
  uint64_t v258;
  int v259;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v260;
  int v261;
  uint64_t v262;
  int v263;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v264;
  int v265;
  int v266;
  uint64_t v267;
  int v268;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v269;
  int v270;
  int v271;
  uint64_t v272;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v273;
  int v274;
  int v275;
  uint64_t v276;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v277;
  int v278;
  int v279;
  uint64_t v280;
  int v281;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v282;
  int v283;
  uint64_t v284;
  uint64_t v285;
  int v286;
  uint64_t v287;
  int v288;
  uint64_t v289;
  uint64_t v290;
  int v291;
  uint64_t v292;
  uint64_t v293;
  int v294;
  uint64_t v295;
  uint64_t v296;
  int v297;
  uint64_t v298;
  awd::metrics::MotionFitnessAllDay *v299;
  uint64_t v300;
  int v301;
  uint64_t result;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;

  v1 = this;
  v2 = *((_DWORD *)this + 217);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_37;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v3 = 0;
  }
  if ((v2 & 2) != 0)
    v3 += 2;
  if ((v2 & 4) != 0)
    v4 = v3 + 2;
  else
    v4 = v3;
  if ((v2 & 8) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 4);
    if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      v6 = 1;
    }
    v4 += v6 + 1;
    if ((v2 & 0x10) == 0)
    {
LABEL_13:
      if ((v2 & 0x20) == 0)
        goto LABEL_14;
      goto LABEL_25;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_13;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 5);
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v8 = 1;
  }
  v4 += v8 + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0)
      goto LABEL_15;
    goto LABEL_29;
  }
LABEL_25:
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 6);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v10 = 1;
  }
  v4 += v10 + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_15:
    if ((v2 & 0x80) == 0)
      goto LABEL_37;
    goto LABEL_33;
  }
LABEL_29:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 7);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v12 = 1;
  }
  v4 += v12 + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_33:
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 8);
    if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      v14 = 1;
    }
    v4 += v14 + 1;
  }
LABEL_37:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_79;
  if ((v2 & 0x100) != 0)
  {
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 9);
    if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
      v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      v16 = 1;
    }
    v4 += v16 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_40:
      if ((v2 & 0x400) == 0)
        goto LABEL_41;
      goto LABEL_55;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_40;
  }
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 10);
  if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v18 = 1;
  }
  v4 += v18 + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_41:
    if ((v2 & 0x800) == 0)
      goto LABEL_42;
    goto LABEL_59;
  }
LABEL_55:
  v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 11);
  if (v19 >= 0x80)
  {
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v20 = 1;
  }
  v4 += v20 + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_42:
    if ((v2 & 0x1000) == 0)
      goto LABEL_43;
    goto LABEL_63;
  }
LABEL_59:
  v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 12);
  if (v21 >= 0x80)
  {
    v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v22 = 1;
  }
  v4 += v22 + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_43:
    if ((v2 & 0x2000) == 0)
      goto LABEL_44;
    goto LABEL_67;
  }
LABEL_63:
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 13);
  if (v23 >= 0x80)
  {
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v24 = 1;
  }
  v4 += v24 + 1;
  if ((v2 & 0x2000) == 0)
  {
LABEL_44:
    if ((v2 & 0x4000) == 0)
      goto LABEL_45;
    goto LABEL_71;
  }
LABEL_67:
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 14);
  if (v25 >= 0x80)
  {
    v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v26 = 1;
  }
  v4 += v26 + 1;
  if ((v2 & 0x4000) == 0)
  {
LABEL_45:
    if ((v2 & 0x8000) == 0)
      goto LABEL_79;
    goto LABEL_75;
  }
LABEL_71:
  v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 15);
  if (v27 >= 0x80)
  {
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v28 = 1;
  }
  v4 += v28 + 1;
  if ((v2 & 0x8000) != 0)
  {
LABEL_75:
    v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 16);
    if (v29 >= 0x80)
    {
      v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
      v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      v30 = 1;
    }
    v4 += v30 + 2;
  }
LABEL_79:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_106;
  if ((v2 & 0x10000) != 0)
  {
    v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 18);
    if (v31 >= 0x80)
    {
      v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      v32 = 1;
    }
    v4 += v32 + 2;
    if ((v2 & 0x20000) == 0)
    {
LABEL_82:
      if ((v2 & 0x40000) == 0)
        goto LABEL_83;
      goto LABEL_94;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_82;
  }
  v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 19);
  if (v33 >= 0x80)
  {
    v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v34 = 1;
  }
  v4 += v34 + 2;
  if ((v2 & 0x40000) == 0)
  {
LABEL_83:
    if ((v2 & 0x80000) == 0)
      goto LABEL_84;
    goto LABEL_98;
  }
LABEL_94:
  v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 20);
  if (v35 >= 0x80)
  {
    v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v36 = 1;
  }
  v4 += v36 + 2;
  if ((v2 & 0x80000) == 0)
  {
LABEL_84:
    if ((v2 & 0x100000) == 0)
      goto LABEL_106;
    goto LABEL_102;
  }
LABEL_98:
  v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 21);
  if (v37 >= 0x80)
  {
    v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
    v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    v38 = 1;
  }
  v4 += v38 + 2;
  if ((v2 & 0x100000) != 0)
  {
LABEL_102:
    v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 46);
    if (v39 >= 0x80)
    {
      v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
      v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      v40 = 1;
    }
    v4 += v40 + 2;
  }
LABEL_106:
  if (v2 >> 27)
  {
    v41 = v4 + 3;
    if ((v2 & 0x8000000) == 0)
      v41 = v4;
    if (v2 >= 0)
      v4 = v41;
    else
      v4 = v41 + 3;
  }
  v42 = *((_DWORD *)v1 + 218);
  if (!(_BYTE)v42)
    goto LABEL_165;
  if ((v42 & 1) != 0)
    v4 += 3;
  if ((v42 & 2) != 0)
  {
    v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 47);
    if ((v43 & 0x80000000) != 0)
    {
      v44 = 10;
    }
    else if (v43 >= 0x80)
    {
      v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
      v42 = *((_DWORD *)v1 + 218);
    }
    else
    {
      v44 = 1;
    }
    v4 += v44 + 2;
    if ((v42 & 4) == 0)
    {
LABEL_117:
      if ((v42 & 8) == 0)
        goto LABEL_118;
      goto LABEL_135;
    }
  }
  else if ((v42 & 4) == 0)
  {
    goto LABEL_117;
  }
  v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 60);
  if ((v45 & 0x80000000) != 0)
  {
    v46 = 10;
  }
  else if (v45 >= 0x80)
  {
    v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v46 = 1;
  }
  v4 += v46 + 2;
  if ((v42 & 8) == 0)
  {
LABEL_118:
    if ((v42 & 0x10) == 0)
      goto LABEL_119;
    goto LABEL_141;
  }
LABEL_135:
  v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 61);
  if ((v47 & 0x80000000) != 0)
  {
    v48 = 10;
  }
  else if (v47 >= 0x80)
  {
    v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v48 = 1;
  }
  v4 += v48 + 2;
  if ((v42 & 0x10) == 0)
  {
LABEL_119:
    if ((v42 & 0x20) == 0)
      goto LABEL_120;
LABEL_147:
    v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 63);
    if ((v51 & 0x80000000) != 0)
    {
      v52 = 10;
    }
    else if (v51 >= 0x80)
    {
      v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
      v42 = *((_DWORD *)v1 + 218);
    }
    else
    {
      v52 = 1;
    }
    v4 += v52 + 2;
    if ((v42 & 0x40) == 0)
    {
LABEL_121:
      if ((v42 & 0x80) == 0)
        goto LABEL_165;
      goto LABEL_159;
    }
    goto LABEL_153;
  }
LABEL_141:
  v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 62);
  if ((v49 & 0x80000000) != 0)
  {
    v50 = 10;
  }
  else if (v49 >= 0x80)
  {
    v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v50 = 1;
  }
  v4 += v50 + 2;
  if ((v42 & 0x20) != 0)
    goto LABEL_147;
LABEL_120:
  if ((v42 & 0x40) == 0)
    goto LABEL_121;
LABEL_153:
  v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 64);
  if ((v53 & 0x80000000) != 0)
  {
    v54 = 10;
  }
  else if (v53 >= 0x80)
  {
    v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v54 = 1;
  }
  v4 += v54 + 2;
  if ((v42 & 0x80) != 0)
  {
LABEL_159:
    v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 65);
    if ((v55 & 0x80000000) != 0)
    {
      v56 = 10;
    }
    else if (v55 >= 0x80)
    {
      v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
      v42 = *((_DWORD *)v1 + 218);
    }
    else
    {
      v56 = 1;
    }
    v4 += v56 + 2;
  }
LABEL_165:
  if ((v42 & 0xFF00) != 0)
  {
    if ((v42 & 0x100) != 0)
    {
      v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 66);
      if ((v57 & 0x80000000) != 0)
      {
        v58 = 10;
      }
      else if (v57 >= 0x80)
      {
        v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57);
        v42 = *((_DWORD *)v1 + 218);
      }
      else
      {
        v58 = 1;
      }
      v4 += v58 + 2;
    }
    if ((v42 & 0x200) != 0)
    {
      v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 67);
      if ((v59 & 0x80000000) != 0)
      {
        v60 = 10;
      }
      else if (v59 >= 0x80)
      {
        v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v59);
        v42 = *((_DWORD *)v1 + 218);
      }
      else
      {
        v60 = 1;
      }
      v4 += v60 + 2;
    }
    v61 = v4 + 6;
    if ((v42 & 0x800) == 0)
      v61 = v4;
    if ((v42 & 0x2000) != 0)
      v61 += 6;
    if ((v42 & 0x4000) != 0)
      v61 += 6;
    if ((v42 & 0x8000) != 0)
      v4 = v61 + 6;
    else
      v4 = v61;
  }
  if ((v42 & 0xFF0000) == 0)
    goto LABEL_255;
  if ((v42 & 0x10000) != 0)
  {
    v62 = *((_QWORD *)v1 + 40);
    v63 = *(unsigned __int8 *)(v62 + 23);
    v64 = v63;
    v65 = *(_QWORD *)(v62 + 8);
    if ((v63 & 0x80u) == 0)
      v66 = *(unsigned __int8 *)(v62 + 23);
    else
      v66 = v65;
    if (v66 >= 0x80)
    {
      v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v66);
      v63 = *(unsigned __int8 *)(v62 + 23);
      v65 = *(_QWORD *)(v62 + 8);
      v42 = *((_DWORD *)v1 + 218);
      v64 = *(_BYTE *)(v62 + 23);
    }
    else
    {
      v67 = 1;
    }
    if (v64 < 0)
      v63 = v65;
    v4 += v67 + v63 + 2;
    if ((v42 & 0x20000) == 0)
    {
LABEL_192:
      if ((v42 & 0x40000) == 0)
        goto LABEL_193;
      goto LABEL_216;
    }
  }
  else if ((v42 & 0x20000) == 0)
  {
    goto LABEL_192;
  }
  v68 = *((_QWORD *)v1 + 41);
  v69 = *(unsigned __int8 *)(v68 + 23);
  v70 = v69;
  v71 = *(_QWORD *)(v68 + 8);
  if ((v69 & 0x80u) == 0)
    v72 = *(unsigned __int8 *)(v68 + 23);
  else
    v72 = v71;
  if (v72 >= 0x80)
  {
    v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v72);
    v69 = *(unsigned __int8 *)(v68 + 23);
    v71 = *(_QWORD *)(v68 + 8);
    v42 = *((_DWORD *)v1 + 218);
    v70 = *(_BYTE *)(v68 + 23);
  }
  else
  {
    v73 = 1;
  }
  if (v70 < 0)
    v69 = v71;
  v4 += v73 + v69 + 2;
  if ((v42 & 0x40000) == 0)
  {
LABEL_193:
    if ((v42 & 0x80000) == 0)
      goto LABEL_194;
    goto LABEL_225;
  }
LABEL_216:
  v74 = *((_QWORD *)v1 + 42);
  v75 = *(unsigned __int8 *)(v74 + 23);
  v76 = v75;
  v77 = *(_QWORD *)(v74 + 8);
  if ((v75 & 0x80u) == 0)
    v78 = *(unsigned __int8 *)(v74 + 23);
  else
    v78 = v77;
  if (v78 >= 0x80)
  {
    v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v78);
    v75 = *(unsigned __int8 *)(v74 + 23);
    v77 = *(_QWORD *)(v74 + 8);
    v42 = *((_DWORD *)v1 + 218);
    v76 = *(_BYTE *)(v74 + 23);
  }
  else
  {
    v79 = 1;
  }
  if (v76 < 0)
    v75 = v77;
  v4 += v79 + v75 + 2;
  if ((v42 & 0x80000) == 0)
  {
LABEL_194:
    if ((v42 & 0x100000) == 0)
      goto LABEL_195;
LABEL_234:
    v86 = *((_QWORD *)v1 + 44);
    v87 = *(unsigned __int8 *)(v86 + 23);
    v88 = v87;
    v89 = *(_QWORD *)(v86 + 8);
    if ((v87 & 0x80u) == 0)
      v90 = *(unsigned __int8 *)(v86 + 23);
    else
      v90 = v89;
    if (v90 >= 0x80)
    {
      v91 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v90);
      v87 = *(unsigned __int8 *)(v86 + 23);
      v89 = *(_QWORD *)(v86 + 8);
      v42 = *((_DWORD *)v1 + 218);
      v88 = *(_BYTE *)(v86 + 23);
    }
    else
    {
      v91 = 1;
    }
    if (v88 < 0)
      v87 = v89;
    v4 += v91 + v87 + 2;
    if ((v42 & 0x400000) == 0)
    {
LABEL_196:
      if ((v42 & 0x800000) == 0)
        goto LABEL_255;
      goto LABEL_249;
    }
    goto LABEL_243;
  }
LABEL_225:
  v80 = *((_QWORD *)v1 + 43);
  v81 = *(unsigned __int8 *)(v80 + 23);
  v82 = v81;
  v83 = *(_QWORD *)(v80 + 8);
  if ((v81 & 0x80u) == 0)
    v84 = *(unsigned __int8 *)(v80 + 23);
  else
    v84 = v83;
  if (v84 >= 0x80)
  {
    v85 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v84);
    v81 = *(unsigned __int8 *)(v80 + 23);
    v83 = *(_QWORD *)(v80 + 8);
    v42 = *((_DWORD *)v1 + 218);
    v82 = *(_BYTE *)(v80 + 23);
  }
  else
  {
    v85 = 1;
  }
  if (v82 < 0)
    v81 = v83;
  v4 += v85 + v81 + 2;
  if ((v42 & 0x100000) != 0)
    goto LABEL_234;
LABEL_195:
  if ((v42 & 0x400000) == 0)
    goto LABEL_196;
LABEL_243:
  v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 94);
  if ((v92 & 0x80000000) != 0)
  {
    v93 = 10;
  }
  else if (v92 >= 0x80)
  {
    v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v93 = 1;
  }
  v4 += v93 + 2;
  if ((v42 & 0x800000) != 0)
  {
LABEL_249:
    v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 95);
    if ((v94 & 0x80000000) != 0)
    {
      v95 = 10;
    }
    else if (v94 >= 0x80)
    {
      v95 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v94);
      v42 = *((_DWORD *)v1 + 218);
    }
    else
    {
      v95 = 1;
    }
    v4 += v95 + 2;
  }
LABEL_255:
  if (!HIBYTE(v42))
    goto LABEL_313;
  if ((v42 & 0x1000000) != 0)
  {
    v96 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 96);
    if ((v96 & 0x80000000) != 0)
    {
      v97 = 10;
    }
    else if (v96 >= 0x80)
    {
      v97 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v96);
      v42 = *((_DWORD *)v1 + 218);
    }
    else
    {
      v97 = 1;
    }
    v4 += v97 + 2;
    if ((v42 & 0x2000000) == 0)
    {
LABEL_258:
      if ((v42 & 0x4000000) == 0)
        goto LABEL_259;
      goto LABEL_277;
    }
  }
  else if ((v42 & 0x2000000) == 0)
  {
    goto LABEL_258;
  }
  v98 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 97);
  if ((v98 & 0x80000000) != 0)
  {
    v99 = 10;
  }
  else if (v98 >= 0x80)
  {
    v99 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v98);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v99 = 1;
  }
  v4 += v99 + 2;
  if ((v42 & 0x4000000) == 0)
  {
LABEL_259:
    if ((v42 & 0x8000000) == 0)
      goto LABEL_260;
    goto LABEL_283;
  }
LABEL_277:
  v100 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 98);
  if ((v100 & 0x80000000) != 0)
  {
    v101 = 10;
  }
  else if (v100 >= 0x80)
  {
    v101 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v100);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v101 = 1;
  }
  v4 += v101 + 2;
  if ((v42 & 0x8000000) == 0)
  {
LABEL_260:
    if ((v42 & 0x10000000) == 0)
      goto LABEL_261;
    goto LABEL_289;
  }
LABEL_283:
  v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 99);
  if ((v102 & 0x80000000) != 0)
  {
    v103 = 10;
  }
  else if (v102 >= 0x80)
  {
    v103 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v102);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v103 = 1;
  }
  v4 += v103 + 2;
  if ((v42 & 0x10000000) == 0)
  {
LABEL_261:
    if ((v42 & 0x20000000) == 0)
      goto LABEL_262;
    goto LABEL_295;
  }
LABEL_289:
  v104 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 100);
  if ((v104 & 0x80000000) != 0)
  {
    v105 = 10;
  }
  else if (v104 >= 0x80)
  {
    v105 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v104);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v105 = 1;
  }
  v4 += v105 + 2;
  if ((v42 & 0x20000000) == 0)
  {
LABEL_262:
    if ((v42 & 0x40000000) == 0)
      goto LABEL_263;
    goto LABEL_301;
  }
LABEL_295:
  v106 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 101);
  if ((v106 & 0x80000000) != 0)
  {
    v107 = 10;
  }
  else if (v106 >= 0x80)
  {
    v107 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v106);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v107 = 1;
  }
  v4 += v107 + 2;
  if ((v42 & 0x40000000) == 0)
  {
LABEL_263:
    if ((v42 & 0x80000000) == 0)
      goto LABEL_313;
    goto LABEL_307;
  }
LABEL_301:
  v108 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 102);
  if ((v108 & 0x80000000) != 0)
  {
    v109 = 10;
  }
  else if (v108 >= 0x80)
  {
    v109 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v108);
    v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    v109 = 1;
  }
  v4 += v109 + 2;
  if ((v42 & 0x80000000) != 0)
  {
LABEL_307:
    v110 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 103);
    if ((v110 & 0x80000000) != 0)
    {
      v111 = 10;
    }
    else if (v110 >= 0x80)
    {
      v111 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v110);
    }
    else
    {
      v111 = 1;
    }
    v4 += v111 + 2;
  }
LABEL_313:
  v112 = *((_DWORD *)v1 + 219);
  if (!(_BYTE)v112)
    goto LABEL_371;
  if ((v112 & 1) != 0)
  {
    v113 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 104);
    if ((v113 & 0x80000000) != 0)
    {
      v114 = 10;
    }
    else if (v113 >= 0x80)
    {
      v114 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v113);
      v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      v114 = 1;
    }
    v4 += v114 + 2;
    if ((v112 & 2) == 0)
    {
LABEL_316:
      if ((v112 & 4) == 0)
        goto LABEL_317;
      goto LABEL_335;
    }
  }
  else if ((v112 & 2) == 0)
  {
    goto LABEL_316;
  }
  v115 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 105);
  if ((v115 & 0x80000000) != 0)
  {
    v116 = 10;
  }
  else if (v115 >= 0x80)
  {
    v116 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v115);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v116 = 1;
  }
  v4 += v116 + 2;
  if ((v112 & 4) == 0)
  {
LABEL_317:
    if ((v112 & 8) == 0)
      goto LABEL_318;
    goto LABEL_341;
  }
LABEL_335:
  v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 106);
  if ((v117 & 0x80000000) != 0)
  {
    v118 = 10;
  }
  else if (v117 >= 0x80)
  {
    v118 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v117);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v118 = 1;
  }
  v4 += v118 + 2;
  if ((v112 & 8) == 0)
  {
LABEL_318:
    if ((v112 & 0x10) == 0)
      goto LABEL_319;
    goto LABEL_347;
  }
LABEL_341:
  v119 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 107);
  if ((v119 & 0x80000000) != 0)
  {
    v120 = 10;
  }
  else if (v119 >= 0x80)
  {
    v120 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v119);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v120 = 1;
  }
  v4 += v120 + 2;
  if ((v112 & 0x10) == 0)
  {
LABEL_319:
    if ((v112 & 0x20) == 0)
      goto LABEL_320;
    goto LABEL_353;
  }
LABEL_347:
  v121 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 108);
  if ((v121 & 0x80000000) != 0)
  {
    v122 = 10;
  }
  else if (v121 >= 0x80)
  {
    v122 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v121);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v122 = 1;
  }
  v4 += v122 + 2;
  if ((v112 & 0x20) == 0)
  {
LABEL_320:
    if ((v112 & 0x40) == 0)
      goto LABEL_321;
    goto LABEL_359;
  }
LABEL_353:
  v123 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 109);
  if ((v123 & 0x80000000) != 0)
  {
    v124 = 10;
  }
  else if (v123 >= 0x80)
  {
    v124 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v123);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v124 = 1;
  }
  v4 += v124 + 2;
  if ((v112 & 0x40) == 0)
  {
LABEL_321:
    if ((v112 & 0x80) == 0)
      goto LABEL_371;
    goto LABEL_365;
  }
LABEL_359:
  v125 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 110);
  if ((v125 & 0x80000000) != 0)
  {
    v126 = 10;
  }
  else if (v125 >= 0x80)
  {
    v126 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v125);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v126 = 1;
  }
  v4 += v126 + 2;
  if ((v112 & 0x80) != 0)
  {
LABEL_365:
    v127 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 112);
    if ((v127 & 0x80000000) != 0)
    {
      v128 = 10;
    }
    else if (v127 >= 0x80)
    {
      v128 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v127);
      v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      v128 = 1;
    }
    v4 += v128 + 2;
  }
LABEL_371:
  if ((v112 & 0xFF00) == 0)
    goto LABEL_429;
  if ((v112 & 0x100) != 0)
  {
    v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 113);
    if ((v129 & 0x80000000) != 0)
    {
      v130 = 10;
    }
    else if (v129 >= 0x80)
    {
      v130 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v129);
      v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      v130 = 1;
    }
    v4 += v130 + 2;
    if ((v112 & 0x200) == 0)
    {
LABEL_374:
      if ((v112 & 0x400) == 0)
        goto LABEL_375;
      goto LABEL_393;
    }
  }
  else if ((v112 & 0x200) == 0)
  {
    goto LABEL_374;
  }
  v131 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 114);
  if ((v131 & 0x80000000) != 0)
  {
    v132 = 10;
  }
  else if (v131 >= 0x80)
  {
    v132 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v131);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v132 = 1;
  }
  v4 += v132 + 2;
  if ((v112 & 0x400) == 0)
  {
LABEL_375:
    if ((v112 & 0x800) == 0)
      goto LABEL_376;
    goto LABEL_399;
  }
LABEL_393:
  v133 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 115);
  if ((v133 & 0x80000000) != 0)
  {
    v134 = 10;
  }
  else if (v133 >= 0x80)
  {
    v134 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v133);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v134 = 1;
  }
  v4 += v134 + 2;
  if ((v112 & 0x800) == 0)
  {
LABEL_376:
    if ((v112 & 0x1000) == 0)
      goto LABEL_377;
    goto LABEL_405;
  }
LABEL_399:
  v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 116);
  if ((v135 & 0x80000000) != 0)
  {
    v136 = 10;
  }
  else if (v135 >= 0x80)
  {
    v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v135);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v136 = 1;
  }
  v4 += v136 + 2;
  if ((v112 & 0x1000) == 0)
  {
LABEL_377:
    if ((v112 & 0x2000) == 0)
      goto LABEL_378;
    goto LABEL_411;
  }
LABEL_405:
  v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 117);
  if ((v137 & 0x80000000) != 0)
  {
    v138 = 10;
  }
  else if (v137 >= 0x80)
  {
    v138 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v137);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v138 = 1;
  }
  v4 += v138 + 2;
  if ((v112 & 0x2000) == 0)
  {
LABEL_378:
    if ((v112 & 0x4000) == 0)
      goto LABEL_379;
    goto LABEL_417;
  }
LABEL_411:
  v139 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 118);
  if ((v139 & 0x80000000) != 0)
  {
    v140 = 10;
  }
  else if (v139 >= 0x80)
  {
    v140 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v139);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v140 = 1;
  }
  v4 += v140 + 2;
  if ((v112 & 0x4000) == 0)
  {
LABEL_379:
    if ((v112 & 0x8000) == 0)
      goto LABEL_429;
    goto LABEL_423;
  }
LABEL_417:
  v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 119);
  if ((v141 & 0x80000000) != 0)
  {
    v142 = 10;
  }
  else if (v141 >= 0x80)
  {
    v142 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v141);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v142 = 1;
  }
  v4 += v142 + 2;
  if ((v112 & 0x8000) != 0)
  {
LABEL_423:
    v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 120);
    if ((v143 & 0x80000000) != 0)
    {
      v144 = 10;
    }
    else if (v143 >= 0x80)
    {
      v144 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v143);
      v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      v144 = 1;
    }
    v4 += v144 + 2;
  }
LABEL_429:
  if ((v112 & 0xFF0000) == 0)
    goto LABEL_459;
  if ((v112 & 0x10000) == 0)
  {
    if ((v112 & 0x20000) == 0)
      goto LABEL_432;
LABEL_440:
    v147 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 122);
    if ((v147 & 0x80000000) != 0)
    {
      v148 = 10;
    }
    else if (v147 >= 0x80)
    {
      v148 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v147);
      v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      v148 = 1;
    }
    v4 += v148 + 2;
    if ((v112 & 0x40000) == 0)
      goto LABEL_452;
    goto LABEL_446;
  }
  v145 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 121);
  if ((v145 & 0x80000000) != 0)
  {
    v146 = 10;
  }
  else if (v145 >= 0x80)
  {
    v146 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v145);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v146 = 1;
  }
  v4 += v146 + 2;
  if ((v112 & 0x20000) != 0)
    goto LABEL_440;
LABEL_432:
  if ((v112 & 0x40000) != 0)
  {
LABEL_446:
    v149 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 123);
    if ((v149 & 0x80000000) != 0)
    {
      v150 = 10;
    }
    else if (v149 >= 0x80)
    {
      v150 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v149);
      v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      v150 = 1;
    }
    v4 += v150 + 2;
  }
LABEL_452:
  v151 = v4 + 3;
  if ((v112 & 0x80000) == 0)
    v151 = v4;
  if ((v112 & 0x100000) != 0)
    v151 += 3;
  if ((v112 & 0x200000) != 0)
    v4 = v151 + 3;
  else
    v4 = v151;
LABEL_459:
  if (!HIBYTE(v112))
    goto LABEL_517;
  if ((v112 & 0x1000000) != 0)
  {
    v152 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 132);
    if ((v152 & 0x80000000) != 0)
    {
      v153 = 10;
    }
    else if (v152 >= 0x80)
    {
      v153 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v152);
      v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      v153 = 1;
    }
    v4 += v153 + 2;
    if ((v112 & 0x2000000) == 0)
    {
LABEL_462:
      if ((v112 & 0x4000000) == 0)
        goto LABEL_463;
      goto LABEL_481;
    }
  }
  else if ((v112 & 0x2000000) == 0)
  {
    goto LABEL_462;
  }
  v154 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 133);
  if ((v154 & 0x80000000) != 0)
  {
    v155 = 10;
  }
  else if (v154 >= 0x80)
  {
    v155 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v154);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v155 = 1;
  }
  v4 += v155 + 2;
  if ((v112 & 0x4000000) == 0)
  {
LABEL_463:
    if ((v112 & 0x8000000) == 0)
      goto LABEL_464;
    goto LABEL_487;
  }
LABEL_481:
  v156 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 134);
  if ((v156 & 0x80000000) != 0)
  {
    v157 = 10;
  }
  else if (v156 >= 0x80)
  {
    v157 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v156);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v157 = 1;
  }
  v4 += v157 + 2;
  if ((v112 & 0x8000000) == 0)
  {
LABEL_464:
    if ((v112 & 0x10000000) == 0)
      goto LABEL_465;
    goto LABEL_493;
  }
LABEL_487:
  v158 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 135);
  if ((v158 & 0x80000000) != 0)
  {
    v159 = 10;
  }
  else if (v158 >= 0x80)
  {
    v159 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v158);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v159 = 1;
  }
  v4 += v159 + 2;
  if ((v112 & 0x10000000) == 0)
  {
LABEL_465:
    if ((v112 & 0x20000000) == 0)
      goto LABEL_466;
    goto LABEL_499;
  }
LABEL_493:
  v160 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 136);
  if ((v160 & 0x80000000) != 0)
  {
    v161 = 10;
  }
  else if (v160 >= 0x80)
  {
    v161 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v160);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v161 = 1;
  }
  v4 += v161 + 2;
  if ((v112 & 0x20000000) == 0)
  {
LABEL_466:
    if ((v112 & 0x40000000) == 0)
      goto LABEL_467;
    goto LABEL_505;
  }
LABEL_499:
  v162 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 137);
  if ((v162 & 0x80000000) != 0)
  {
    v163 = 10;
  }
  else if (v162 >= 0x80)
  {
    v163 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v162);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v163 = 1;
  }
  v4 += v163 + 2;
  if ((v112 & 0x40000000) == 0)
  {
LABEL_467:
    if ((v112 & 0x80000000) == 0)
      goto LABEL_517;
    goto LABEL_511;
  }
LABEL_505:
  v164 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 138);
  if ((v164 & 0x80000000) != 0)
  {
    v165 = 10;
  }
  else if (v164 >= 0x80)
  {
    v165 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v164);
    v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    v165 = 1;
  }
  v4 += v165 + 2;
  if ((v112 & 0x80000000) != 0)
  {
LABEL_511:
    v166 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 139);
    if ((v166 & 0x80000000) != 0)
    {
      v167 = 10;
    }
    else if (v166 >= 0x80)
    {
      v167 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v166);
    }
    else
    {
      v167 = 1;
    }
    v4 += v167 + 2;
  }
LABEL_517:
  v168 = *((_DWORD *)v1 + 220);
  if (!(_BYTE)v168)
    goto LABEL_575;
  if ((v168 & 1) != 0)
  {
    v169 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 140);
    if ((v169 & 0x80000000) != 0)
    {
      v170 = 10;
    }
    else if (v169 >= 0x80)
    {
      v170 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v169);
      v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      v170 = 1;
    }
    v4 += v170 + 2;
    if ((v168 & 2) == 0)
    {
LABEL_520:
      if ((v168 & 4) == 0)
        goto LABEL_521;
      goto LABEL_539;
    }
  }
  else if ((v168 & 2) == 0)
  {
    goto LABEL_520;
  }
  v171 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 141);
  if ((v171 & 0x80000000) != 0)
  {
    v172 = 10;
  }
  else if (v171 >= 0x80)
  {
    v172 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v171);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v172 = 1;
  }
  v4 += v172 + 2;
  if ((v168 & 4) == 0)
  {
LABEL_521:
    if ((v168 & 8) == 0)
      goto LABEL_522;
    goto LABEL_545;
  }
LABEL_539:
  v173 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 142);
  if ((v173 & 0x80000000) != 0)
  {
    v174 = 10;
  }
  else if (v173 >= 0x80)
  {
    v174 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v173);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v174 = 1;
  }
  v4 += v174 + 2;
  if ((v168 & 8) == 0)
  {
LABEL_522:
    if ((v168 & 0x10) == 0)
      goto LABEL_523;
    goto LABEL_551;
  }
LABEL_545:
  v175 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 143);
  if ((v175 & 0x80000000) != 0)
  {
    v176 = 10;
  }
  else if (v175 >= 0x80)
  {
    v176 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v175);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v176 = 1;
  }
  v4 += v176 + 2;
  if ((v168 & 0x10) == 0)
  {
LABEL_523:
    if ((v168 & 0x20) == 0)
      goto LABEL_524;
    goto LABEL_557;
  }
LABEL_551:
  v177 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 144);
  if ((v177 & 0x80000000) != 0)
  {
    v178 = 10;
  }
  else if (v177 >= 0x80)
  {
    v178 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v177);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v178 = 1;
  }
  v4 += v178 + 2;
  if ((v168 & 0x20) == 0)
  {
LABEL_524:
    if ((v168 & 0x40) == 0)
      goto LABEL_525;
    goto LABEL_563;
  }
LABEL_557:
  v179 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 145);
  if ((v179 & 0x80000000) != 0)
  {
    v180 = 10;
  }
  else if (v179 >= 0x80)
  {
    v180 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v179);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v180 = 1;
  }
  v4 += v180 + 2;
  if ((v168 & 0x40) == 0)
  {
LABEL_525:
    if ((v168 & 0x80) == 0)
      goto LABEL_575;
    goto LABEL_569;
  }
LABEL_563:
  v181 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 146);
  if ((v181 & 0x80000000) != 0)
  {
    v182 = 10;
  }
  else if (v181 >= 0x80)
  {
    v182 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v181);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v182 = 1;
  }
  v4 += v182 + 2;
  if ((v168 & 0x80) != 0)
  {
LABEL_569:
    v183 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 147);
    if ((v183 & 0x80000000) != 0)
    {
      v184 = 10;
    }
    else if (v183 >= 0x80)
    {
      v184 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v183);
      v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      v184 = 1;
    }
    v4 += v184 + 2;
  }
LABEL_575:
  if ((v168 & 0xFF00) == 0)
    goto LABEL_633;
  if ((v168 & 0x100) != 0)
  {
    v185 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 148);
    if ((v185 & 0x80000000) != 0)
    {
      v186 = 10;
    }
    else if (v185 >= 0x80)
    {
      v186 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v185);
      v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      v186 = 1;
    }
    v4 += v186 + 2;
    if ((v168 & 0x200) == 0)
    {
LABEL_578:
      if ((v168 & 0x400) == 0)
        goto LABEL_579;
      goto LABEL_597;
    }
  }
  else if ((v168 & 0x200) == 0)
  {
    goto LABEL_578;
  }
  v187 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 149);
  if ((v187 & 0x80000000) != 0)
  {
    v188 = 10;
  }
  else if (v187 >= 0x80)
  {
    v188 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v187);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v188 = 1;
  }
  v4 += v188 + 2;
  if ((v168 & 0x400) == 0)
  {
LABEL_579:
    if ((v168 & 0x800) == 0)
      goto LABEL_580;
    goto LABEL_603;
  }
LABEL_597:
  v189 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 150);
  if ((v189 & 0x80000000) != 0)
  {
    v190 = 10;
  }
  else if (v189 >= 0x80)
  {
    v190 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v189);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v190 = 1;
  }
  v4 += v190 + 2;
  if ((v168 & 0x800) == 0)
  {
LABEL_580:
    if ((v168 & 0x1000) == 0)
      goto LABEL_581;
    goto LABEL_609;
  }
LABEL_603:
  v191 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 151);
  if ((v191 & 0x80000000) != 0)
  {
    v192 = 10;
  }
  else if (v191 >= 0x80)
  {
    v192 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v191);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v192 = 1;
  }
  v4 += v192 + 2;
  if ((v168 & 0x1000) == 0)
  {
LABEL_581:
    if ((v168 & 0x2000) == 0)
      goto LABEL_582;
    goto LABEL_615;
  }
LABEL_609:
  v193 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 152);
  if ((v193 & 0x80000000) != 0)
  {
    v194 = 10;
  }
  else if (v193 >= 0x80)
  {
    v194 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v193);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v194 = 1;
  }
  v4 += v194 + 2;
  if ((v168 & 0x2000) == 0)
  {
LABEL_582:
    if ((v168 & 0x4000) == 0)
      goto LABEL_583;
    goto LABEL_621;
  }
LABEL_615:
  v195 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 153);
  if ((v195 & 0x80000000) != 0)
  {
    v196 = 10;
  }
  else if (v195 >= 0x80)
  {
    v196 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v195);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v196 = 1;
  }
  v4 += v196 + 2;
  if ((v168 & 0x4000) == 0)
  {
LABEL_583:
    if ((v168 & 0x8000) == 0)
      goto LABEL_633;
    goto LABEL_627;
  }
LABEL_621:
  v197 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 154);
  if ((v197 & 0x80000000) != 0)
  {
    v198 = 10;
  }
  else if (v197 >= 0x80)
  {
    v198 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v197);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v198 = 1;
  }
  v4 += v198 + 2;
  if ((v168 & 0x8000) != 0)
  {
LABEL_627:
    v199 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 155);
    if ((v199 & 0x80000000) != 0)
    {
      v200 = 10;
    }
    else if (v199 >= 0x80)
    {
      v200 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v199);
      v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      v200 = 1;
    }
    v4 += v200 + 2;
  }
LABEL_633:
  if ((v168 & 0xFF0000) == 0)
    goto LABEL_663;
  if ((v168 & 0x10000) != 0)
  {
    v201 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 156);
    if ((v201 & 0x80000000) != 0)
    {
      v202 = 10;
    }
    else if (v201 >= 0x80)
    {
      v202 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v201);
      v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      v202 = 1;
    }
    v4 += v202 + 2;
    if ((v168 & 0x20000) == 0)
    {
LABEL_636:
      if ((v168 & 0x40000) == 0)
        goto LABEL_637;
      goto LABEL_651;
    }
  }
  else if ((v168 & 0x20000) == 0)
  {
    goto LABEL_636;
  }
  v203 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 157);
  if ((v203 & 0x80000000) != 0)
  {
    v204 = 10;
  }
  else if (v203 >= 0x80)
  {
    v204 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v203);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v204 = 1;
  }
  v4 += v204 + 2;
  if ((v168 & 0x40000) == 0)
  {
LABEL_637:
    if ((v168 & 0x80000) == 0)
      goto LABEL_663;
    goto LABEL_657;
  }
LABEL_651:
  v205 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 158);
  if ((v205 & 0x80000000) != 0)
  {
    v206 = 10;
  }
  else if (v205 >= 0x80)
  {
    v206 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v205);
    v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    v206 = 1;
  }
  v4 += v206 + 2;
  if ((v168 & 0x80000) != 0)
  {
LABEL_657:
    v207 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 159);
    if ((v207 & 0x80000000) != 0)
    {
      v208 = 10;
    }
    else if (v207 >= 0x80)
    {
      v208 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v207);
      v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      v208 = 1;
    }
    v4 += v208 + 2;
  }
LABEL_663:
  if (v168 >> 29)
  {
    if ((v168 & 0x20000000) != 0)
    {
      v209 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 196);
      if ((v209 & 0x80000000) != 0)
      {
        v210 = 10;
      }
      else if (v209 >= 0x80)
      {
        v210 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v209);
        v168 = *((_DWORD *)v1 + 220);
      }
      else
      {
        v210 = 1;
      }
      v4 += v210 + 2;
    }
    if ((v168 & 0x40000000) != 0)
    {
      v211 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 197);
      if ((v211 & 0x80000000) != 0)
      {
        v212 = 10;
      }
      else if (v211 >= 0x80)
      {
        v212 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v211);
      }
      else
      {
        v212 = 1;
      }
      v4 += v212 + 2;
    }
  }
  v213 = *((_DWORD *)v1 + 221);
  if (!(_BYTE)v213)
    goto LABEL_736;
  if ((v213 & 1) != 0)
  {
    v214 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 202);
    if ((v214 & 0x80000000) != 0)
    {
      v215 = 10;
    }
    else if (v214 >= 0x80)
    {
      v215 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v214);
      v213 = *((_DWORD *)v1 + 221);
    }
    else
    {
      v215 = 1;
    }
    v4 += v215 + 2;
    if ((v213 & 2) == 0)
    {
LABEL_681:
      if ((v213 & 4) == 0)
        goto LABEL_682;
      goto LABEL_700;
    }
  }
  else if ((v213 & 2) == 0)
  {
    goto LABEL_681;
  }
  v216 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 203);
  if ((v216 & 0x80000000) != 0)
  {
    v217 = 10;
  }
  else if (v216 >= 0x80)
  {
    v217 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v216);
    v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    v217 = 1;
  }
  v4 += v217 + 2;
  if ((v213 & 4) == 0)
  {
LABEL_682:
    if ((v213 & 8) == 0)
      goto LABEL_683;
    goto LABEL_706;
  }
LABEL_700:
  v218 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 204);
  if ((v218 & 0x80000000) != 0)
  {
    v219 = 10;
  }
  else if (v218 >= 0x80)
  {
    v219 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v218);
    v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    v219 = 1;
  }
  v4 += v219 + 2;
  if ((v213 & 8) == 0)
  {
LABEL_683:
    if ((v213 & 0x10) == 0)
      goto LABEL_684;
    goto LABEL_712;
  }
LABEL_706:
  v220 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 205);
  if ((v220 & 0x80000000) != 0)
  {
    v221 = 10;
  }
  else if (v220 >= 0x80)
  {
    v221 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v220);
    v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    v221 = 1;
  }
  v4 += v221 + 2;
  if ((v213 & 0x10) == 0)
  {
LABEL_684:
    if ((v213 & 0x20) == 0)
      goto LABEL_685;
LABEL_718:
    v224 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 207);
    if ((v224 & 0x80000000) != 0)
    {
      v225 = 10;
    }
    else if (v224 >= 0x80)
    {
      v225 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v224);
      v213 = *((_DWORD *)v1 + 221);
    }
    else
    {
      v225 = 1;
    }
    v4 += v225 + 2;
    if ((v213 & 0x40) == 0)
    {
LABEL_686:
      if ((v213 & 0x80) == 0)
        goto LABEL_736;
      goto LABEL_730;
    }
    goto LABEL_724;
  }
LABEL_712:
  v222 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 206);
  if ((v222 & 0x80000000) != 0)
  {
    v223 = 10;
  }
  else if (v222 >= 0x80)
  {
    v223 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v222);
    v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    v223 = 1;
  }
  v4 += v223 + 2;
  if ((v213 & 0x20) != 0)
    goto LABEL_718;
LABEL_685:
  if ((v213 & 0x40) == 0)
    goto LABEL_686;
LABEL_724:
  v226 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 208);
  if ((v226 & 0x80000000) != 0)
  {
    v227 = 10;
  }
  else if (v226 >= 0x80)
  {
    v227 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v226);
    v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    v227 = 1;
  }
  v4 += v227 + 2;
  if ((v213 & 0x80) != 0)
  {
LABEL_730:
    v228 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 209);
    if ((v228 & 0x80000000) != 0)
    {
      v229 = 10;
    }
    else if (v228 >= 0x80)
    {
      v229 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v228);
      v213 = *((_DWORD *)v1 + 221);
    }
    else
    {
      v229 = 1;
    }
    v4 += v229 + 2;
  }
LABEL_736:
  if ((v213 & 0xFF00) == 0)
  {
LABEL_743:
    v304 = v4;
    goto LABEL_780;
  }
  if ((v213 & 0x100) != 0)
  {
    v230 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 210);
    if ((v230 & 0x80000000) != 0)
    {
      v231 = 10;
    }
    else if (v230 >= 0x80)
    {
      v231 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v230);
      v213 = *((_DWORD *)v1 + 221);
    }
    else
    {
      v231 = 1;
    }
    v4 += v231 + 2;
    if ((v213 & 0x200) == 0)
    {
LABEL_739:
      if ((v213 & 0x400) == 0)
        goto LABEL_740;
      goto LABEL_756;
    }
  }
  else if ((v213 & 0x200) == 0)
  {
    goto LABEL_739;
  }
  v232 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 211);
  if ((v232 & 0x80000000) != 0)
  {
    v233 = 10;
  }
  else if (v232 >= 0x80)
  {
    v233 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v232);
    v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    v233 = 1;
  }
  v4 += v233 + 2;
  if ((v213 & 0x400) == 0)
  {
LABEL_740:
    if ((v213 & 0x800) == 0)
      goto LABEL_741;
    goto LABEL_762;
  }
LABEL_756:
  v234 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 212);
  if ((v234 & 0x80000000) != 0)
  {
    v235 = 10;
  }
  else if (v234 >= 0x80)
  {
    v235 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v234);
    v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    v235 = 1;
  }
  v4 += v235 + 2;
  if ((v213 & 0x800) == 0)
  {
LABEL_741:
    if ((v213 & 0x1000) == 0)
      goto LABEL_742;
LABEL_768:
    v238 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 214);
    if ((v238 & 0x80000000) != 0)
    {
      v239 = 10;
    }
    else if (v238 >= 0x80)
    {
      v239 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v238);
      v213 = *((_DWORD *)v1 + 221);
    }
    else
    {
      v239 = 1;
    }
    v4 += v239 + 2;
    if ((v213 & 0x2000) == 0)
      goto LABEL_743;
    goto LABEL_774;
  }
LABEL_762:
  v236 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 213);
  if ((v236 & 0x80000000) != 0)
  {
    v237 = 10;
  }
  else if (v236 >= 0x80)
  {
    v237 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v236);
    v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    v237 = 1;
  }
  v4 += v237 + 2;
  if ((v213 & 0x1000) != 0)
    goto LABEL_768;
LABEL_742:
  if ((v213 & 0x2000) == 0)
    goto LABEL_743;
LABEL_774:
  v240 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 215);
  if ((v240 & 0x80000000) != 0)
  {
    v241 = 10;
  }
  else if (v240 >= 0x80)
  {
    v241 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v240);
  }
  else
  {
    v241 = 1;
  }
  v304 = v4 + v241 + 2;
LABEL_780:
  v329 = *((_DWORD *)v1 + 28);
  v330 = *((_DWORD *)v1 + 24);
  v328 = *((_DWORD *)v1 + 32);
  v326 = *((_DWORD *)v1 + 36);
  v327 = *((_DWORD *)v1 + 40);
  v325 = *((_DWORD *)v1 + 44);
  v242 = *((_DWORD *)v1 + 50);
  if (v242 < 1)
  {
    v244 = 0;
  }
  else
  {
    v243 = 0;
    v244 = 0;
    do
    {
      v245 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)v1 + 24)
                                                                                              + 4 * v243);
      if (v245 >= 0x80)
      {
        v246 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v245);
        v242 = *((_DWORD *)v1 + 50);
      }
      else
      {
        v246 = 1;
      }
      v244 += v246;
      ++v243;
    }
    while (v243 < v242);
  }
  v247 = *((_DWORD *)v1 + 54);
  if (v247 < 1)
  {
    v249 = 0;
  }
  else
  {
    v248 = 0;
    v249 = 0;
    do
    {
      v250 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)v1 + 26)
                                                                                              + 4 * v248);
      if (v250 >= 0x80)
      {
        v251 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v250);
        v247 = *((_DWORD *)v1 + 54);
      }
      else
      {
        v251 = 1;
      }
      v249 += v251;
      ++v248;
    }
    while (v248 < v247);
  }
  v252 = *((_DWORD *)v1 + 58);
  if (v252 < 1)
  {
    v254 = 0;
  }
  else
  {
    v253 = 0;
    v254 = 0;
    do
    {
      v255 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)v1 + 28)
                                                                                              + 4 * v253);
      if (v255 >= 0x80)
      {
        v256 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v255);
        v252 = *((_DWORD *)v1 + 58);
      }
      else
      {
        v256 = 1;
      }
      v254 += v256;
      ++v253;
    }
    while (v253 < v252);
  }
  v317 = *((_DWORD *)v1 + 70);
  v318 = *((_DWORD *)v1 + 76);
  v257 = *((_DWORD *)v1 + 92);
  if (v257 < 1)
  {
    v259 = 0;
  }
  else
  {
    v258 = 0;
    v259 = 0;
    do
    {
      v260 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)v1 + 45)
                                                                                              + 4 * v258);
      if (v260 >= 0x80)
      {
        v261 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v260);
        v257 = *((_DWORD *)v1 + 92);
      }
      else
      {
        v261 = 1;
      }
      v259 += v261;
      ++v258;
    }
    while (v258 < v257);
  }
  v323 = v242;
  v315 = v257;
  v331 = *((_DWORD *)v1 + 126);
  if (v331 < 1)
  {
    v263 = 0;
  }
  else
  {
    v262 = 0;
    v263 = 0;
    do
    {
      v264 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)v1 + 62)
                                                                                              + 4 * v262);
      if ((v264 & 0x80000000) != 0)
      {
        v265 = 10;
      }
      else if (v264 >= 0x80)
      {
        v265 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v264);
        v331 = *((_DWORD *)v1 + 126);
      }
      else
      {
        v265 = 1;
      }
      v263 += v265;
      ++v262;
    }
    while (v262 < v331);
  }
  v313 = *((_DWORD *)v1 + 130);
  v314 = v263;
  v266 = *((_DWORD *)v1 + 162);
  if (v266 < 1)
  {
    v268 = 0;
  }
  else
  {
    v267 = 0;
    v268 = 0;
    do
    {
      v269 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)v1 + 80)
                                                                                              + 4 * v267);
      if (v269 >= 0x80)
      {
        v270 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v269);
        v266 = *((_DWORD *)v1 + 162);
      }
      else
      {
        v270 = 1;
      }
      v268 += v270;
      ++v267;
    }
    while (v267 < v266);
  }
  v311 = v266;
  v271 = *((_DWORD *)v1 + 166);
  if (v271 < 1)
  {
    v333 = 0;
  }
  else
  {
    v272 = 0;
    v333 = 0;
    do
    {
      v273 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)v1 + 82)
                                                                                              + 4 * v272);
      if (v273 >= 0x80)
      {
        v274 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v273);
        v271 = *((_DWORD *)v1 + 166);
      }
      else
      {
        v274 = 1;
      }
      v333 += v274;
      ++v272;
    }
    while (v272 < v271);
  }
  v310 = v271;
  v275 = *((_DWORD *)v1 + 170);
  if (v275 < 1)
  {
    v332 = 0;
  }
  else
  {
    v276 = 0;
    v332 = 0;
    do
    {
      v277 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)v1 + 84)
                                                                                              + 4 * v276);
      if (v277 >= 0x80)
      {
        v278 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v277);
        v275 = *((_DWORD *)v1 + 170);
      }
      else
      {
        v278 = 1;
      }
      v332 += v278;
      ++v276;
    }
    while (v276 < v275);
  }
  v309 = v275;
  v279 = *((_DWORD *)v1 + 174);
  if (v279 < 1)
  {
    v281 = 0;
  }
  else
  {
    v280 = 0;
    v281 = 0;
    do
    {
      v282 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)v1 + 86)
                                                                                              + 4 * v280);
      if (v282 >= 0x80)
      {
        v283 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v282);
        v279 = *((_DWORD *)v1 + 174);
      }
      else
      {
        v283 = 1;
      }
      v281 += v283;
      ++v280;
    }
    while (v280 < v279);
  }
  v307 = v279;
  v308 = v281;
  v312 = v268;
  LODWORD(v284) = *((_DWORD *)v1 + 178);
  if ((int)v284 < 1)
  {
    v286 = 0;
  }
  else
  {
    v285 = 0;
    v286 = 0;
    do
    {
      v286 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)v1 + 88) + 8 * v285++));
      v284 = *((int *)v1 + 178);
    }
    while (v285 < v284);
  }
  v306 = v284;
  v324 = v244;
  LODWORD(v284) = *((_DWORD *)v1 + 182);
  if ((int)v284 < 1)
  {
    v288 = 0;
  }
  else
  {
    v287 = 0;
    v288 = 0;
    do
    {
      v288 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)v1 + 90) + 8 * v287++));
      v284 = *((int *)v1 + 182);
    }
    while (v287 < v284);
  }
  v305 = v284;
  v321 = v247;
  LODWORD(v289) = *((_DWORD *)v1 + 186);
  v316 = v259;
  if ((int)v289 < 1)
  {
    v291 = 0;
  }
  else
  {
    v290 = 0;
    v291 = 0;
    do
    {
      v291 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)v1 + 92) + 8 * v290++));
      v289 = *((int *)v1 + 186);
    }
    while (v290 < v289);
  }
  v322 = v249;
  LODWORD(v292) = *((_DWORD *)v1 + 190);
  v319 = v252;
  if ((int)v292 < 1)
  {
    v294 = 0;
  }
  else
  {
    v293 = 0;
    v294 = 0;
    do
    {
      v294 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)v1 + 94) + 8 * v293++));
      v292 = *((int *)v1 + 190);
    }
    while (v293 < v292);
  }
  v320 = v254;
  LODWORD(v295) = *((_DWORD *)v1 + 194);
  if ((int)v295 < 1)
  {
    v297 = 0;
  }
  else
  {
    v296 = 0;
    v297 = 0;
    do
    {
      v297 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)v1 + 96) + 8 * v296++));
      v295 = *((int *)v1 + 194);
    }
    while (v296 < v295);
  }
  LODWORD(v298) = *((_DWORD *)v1 + 200);
  if ((int)v298 < 1)
  {
    v301 = 0;
  }
  else
  {
    v303 = v286;
    v299 = v1;
    v300 = 0;
    v301 = 0;
    do
    {
      v301 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)v299 + 99) + 8 * v300++));
      v298 = *((int *)v299 + 200);
    }
    while (v300 < v298);
    v1 = v299;
    v286 = v303;
  }
  result = (v324
                        + v304
                        + v322
                        + v320
                        + v316
                        + v314
                        + 6 * (v329 + v330 + v328 + v326 + v327 + v325 + v317 + v318 + v313)
                        + v312
                        + v333
                        + v332
                        + v308
                        + v286
                        + v288
                        + v291
                        + v294
                        + v297
                        + v301
                        + 2
                        * (v321
                         + v323
                         + v319
                         + v315
                         + v331
                         + v311
                         + v310
                         + v309
                         + v307
                         + v306
                         + v305
                         + v289
                         + v292
                         + v295
                         + v298));
  *((_DWORD *)v1 + 216) = result;
  return result;
}

void awd::metrics::MotionFitnessAllDay::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessAllDay *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionFitnessAllDay::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionFitnessAllDay::CopyFrom(awd::metrics::MotionFitnessAllDay *this, const awd::metrics::MotionFitnessAllDay *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessAllDay *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionFitnessAllDay::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionFitnessAllDay::IsInitialized(awd::metrics::MotionFitnessAllDay *this)
{
  return 1;
}

double awd::metrics::MotionFitnessAllDay::Swap(awd::metrics::MotionFitnessAllDay *this, awd::metrics::MotionFitnessAllDay *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double result;
  uint64_t v79;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 68);
    *((_BYTE *)this + 68) = *((_BYTE *)a2 + 68);
    *((_BYTE *)a2 + 68) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 69);
    *((_BYTE *)this + 69) = *((_BYTE *)a2 + 69);
    *((_BYTE *)a2 + 69) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
    LODWORD(v2) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v2;
    LODWORD(v2) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v2;
    LODWORD(v2) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v2;
    LODWORD(v2) = *((_DWORD *)this + 46);
    *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
    *((_DWORD *)a2 + 46) = v2;
    v3 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    v4 = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 11) = v3;
    v5 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v4;
    *((_QWORD *)a2 + 12) = v5;
    v6 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    v7 = *((_QWORD *)a2 + 14);
    *((_QWORD *)a2 + 13) = v6;
    v8 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v7;
    *((_QWORD *)a2 + 14) = v8;
    v9 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    v10 = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 15) = v9;
    v11 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = v10;
    *((_QWORD *)a2 + 16) = v11;
    v12 = *((_QWORD *)this + 17);
    *((_QWORD *)this + 17) = *((_QWORD *)a2 + 17);
    v13 = *((_QWORD *)a2 + 18);
    *((_QWORD *)a2 + 17) = v12;
    v14 = *((_QWORD *)this + 18);
    *((_QWORD *)this + 18) = v13;
    *((_QWORD *)a2 + 18) = v14;
    v15 = *((_QWORD *)this + 19);
    *((_QWORD *)this + 19) = *((_QWORD *)a2 + 19);
    v16 = *((_QWORD *)a2 + 20);
    *((_QWORD *)a2 + 19) = v15;
    v17 = *((_QWORD *)this + 20);
    *((_QWORD *)this + 20) = v16;
    *((_QWORD *)a2 + 20) = v17;
    v18 = *((_QWORD *)this + 21);
    *((_QWORD *)this + 21) = *((_QWORD *)a2 + 21);
    v19 = *((_QWORD *)a2 + 22);
    *((_QWORD *)a2 + 21) = v18;
    v20 = *((_QWORD *)this + 22);
    *((_QWORD *)this + 22) = v19;
    *((_QWORD *)a2 + 22) = v20;
    LOBYTE(v18) = *((_BYTE *)this + 70);
    *((_BYTE *)this + 70) = *((_BYTE *)a2 + 70);
    *((_BYTE *)a2 + 70) = v18;
    v21 = *((_QWORD *)this + 24);
    *((_QWORD *)this + 24) = *((_QWORD *)a2 + 24);
    v22 = *((_QWORD *)a2 + 25);
    *((_QWORD *)a2 + 24) = v21;
    v23 = *((_QWORD *)this + 25);
    *((_QWORD *)this + 25) = v22;
    *((_QWORD *)a2 + 25) = v23;
    v24 = *((_QWORD *)this + 26);
    *((_QWORD *)this + 26) = *((_QWORD *)a2 + 26);
    v25 = *((_QWORD *)a2 + 27);
    *((_QWORD *)a2 + 26) = v24;
    v26 = *((_QWORD *)this + 27);
    *((_QWORD *)this + 27) = v25;
    *((_QWORD *)a2 + 27) = v26;
    v27 = *((_QWORD *)this + 28);
    *((_QWORD *)this + 28) = *((_QWORD *)a2 + 28);
    v28 = *((_QWORD *)a2 + 29);
    *((_QWORD *)a2 + 28) = v27;
    v29 = *((_QWORD *)this + 29);
    *((_QWORD *)this + 29) = v28;
    *((_QWORD *)a2 + 29) = v29;
    LOBYTE(v27) = *((_BYTE *)this + 71);
    *((_BYTE *)this + 71) = *((_BYTE *)a2 + 71);
    *((_BYTE *)a2 + 71) = v27;
    LOBYTE(v27) = *((_BYTE *)this + 444);
    *((_BYTE *)this + 444) = *((_BYTE *)a2 + 444);
    *((_BYTE *)a2 + 444) = v27;
    LODWORD(v27) = *((_DWORD *)this + 47);
    *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
    *((_DWORD *)a2 + 47) = v27;
    LODWORD(v27) = *((_DWORD *)this + 60);
    *((_DWORD *)this + 60) = *((_DWORD *)a2 + 60);
    *((_DWORD *)a2 + 60) = v27;
    LODWORD(v27) = *((_DWORD *)this + 61);
    *((_DWORD *)this + 61) = *((_DWORD *)a2 + 61);
    *((_DWORD *)a2 + 61) = v27;
    LODWORD(v27) = *((_DWORD *)this + 62);
    *((_DWORD *)this + 62) = *((_DWORD *)a2 + 62);
    *((_DWORD *)a2 + 62) = v27;
    LODWORD(v27) = *((_DWORD *)this + 63);
    *((_DWORD *)this + 63) = *((_DWORD *)a2 + 63);
    *((_DWORD *)a2 + 63) = v27;
    LODWORD(v27) = *((_DWORD *)this + 64);
    *((_DWORD *)this + 64) = *((_DWORD *)a2 + 64);
    *((_DWORD *)a2 + 64) = v27;
    LODWORD(v27) = *((_DWORD *)this + 65);
    *((_DWORD *)this + 65) = *((_DWORD *)a2 + 65);
    *((_DWORD *)a2 + 65) = v27;
    LODWORD(v27) = *((_DWORD *)this + 66);
    *((_DWORD *)this + 66) = *((_DWORD *)a2 + 66);
    *((_DWORD *)a2 + 66) = v27;
    LODWORD(v27) = *((_DWORD *)this + 67);
    *((_DWORD *)this + 67) = *((_DWORD *)a2 + 67);
    *((_DWORD *)a2 + 67) = v27;
    v30 = *((_QWORD *)this + 34);
    *((_QWORD *)this + 34) = *((_QWORD *)a2 + 34);
    v31 = *((_QWORD *)a2 + 35);
    *((_QWORD *)a2 + 34) = v30;
    v32 = *((_QWORD *)this + 35);
    *((_QWORD *)this + 35) = v31;
    *((_QWORD *)a2 + 35) = v32;
    LODWORD(v31) = *((_DWORD *)this + 72);
    *((_DWORD *)this + 72) = *((_DWORD *)a2 + 72);
    *((_DWORD *)a2 + 72) = v31;
    v33 = *((_QWORD *)this + 37);
    *((_QWORD *)this + 37) = *((_QWORD *)a2 + 37);
    v34 = *((_QWORD *)a2 + 38);
    *((_QWORD *)a2 + 37) = v33;
    v35 = *((_QWORD *)this + 38);
    *((_QWORD *)this + 38) = v34;
    *((_QWORD *)a2 + 38) = v35;
    LODWORD(v34) = *((_DWORD *)this + 73);
    *((_DWORD *)this + 73) = *((_DWORD *)a2 + 73);
    *((_DWORD *)a2 + 73) = v34;
    LODWORD(v34) = *((_DWORD *)this + 78);
    *((_DWORD *)this + 78) = *((_DWORD *)a2 + 78);
    *((_DWORD *)a2 + 78) = v34;
    LODWORD(v34) = *((_DWORD *)this + 79);
    *((_DWORD *)this + 79) = *((_DWORD *)a2 + 79);
    *((_DWORD *)a2 + 79) = v34;
    v36 = *((_QWORD *)this + 40);
    *((_QWORD *)this + 40) = *((_QWORD *)a2 + 40);
    *((_QWORD *)a2 + 40) = v36;
    v37 = *((_QWORD *)this + 41);
    *((_QWORD *)this + 41) = *((_QWORD *)a2 + 41);
    *((_QWORD *)a2 + 41) = v37;
    v38 = *((_QWORD *)this + 42);
    *((_QWORD *)this + 42) = *((_QWORD *)a2 + 42);
    *((_QWORD *)a2 + 42) = v38;
    v39 = *((_QWORD *)this + 43);
    *((_QWORD *)this + 43) = *((_QWORD *)a2 + 43);
    *((_QWORD *)a2 + 43) = v39;
    v40 = *((_QWORD *)this + 44);
    *((_QWORD *)this + 44) = *((_QWORD *)a2 + 44);
    *((_QWORD *)a2 + 44) = v40;
    v41 = *((_QWORD *)this + 45);
    *((_QWORD *)this + 45) = *((_QWORD *)a2 + 45);
    v42 = *((_QWORD *)a2 + 46);
    *((_QWORD *)a2 + 45) = v41;
    v43 = *((_QWORD *)this + 46);
    *((_QWORD *)this + 46) = v42;
    *((_QWORD *)a2 + 46) = v43;
    LODWORD(v41) = *((_DWORD *)this + 94);
    *((_DWORD *)this + 94) = *((_DWORD *)a2 + 94);
    *((_DWORD *)a2 + 94) = v41;
    LODWORD(v41) = *((_DWORD *)this + 95);
    *((_DWORD *)this + 95) = *((_DWORD *)a2 + 95);
    *((_DWORD *)a2 + 95) = v41;
    LODWORD(v41) = *((_DWORD *)this + 96);
    *((_DWORD *)this + 96) = *((_DWORD *)a2 + 96);
    *((_DWORD *)a2 + 96) = v41;
    LODWORD(v41) = *((_DWORD *)this + 97);
    *((_DWORD *)this + 97) = *((_DWORD *)a2 + 97);
    *((_DWORD *)a2 + 97) = v41;
    LODWORD(v41) = *((_DWORD *)this + 98);
    *((_DWORD *)this + 98) = *((_DWORD *)a2 + 98);
    *((_DWORD *)a2 + 98) = v41;
    LODWORD(v41) = *((_DWORD *)this + 99);
    *((_DWORD *)this + 99) = *((_DWORD *)a2 + 99);
    *((_DWORD *)a2 + 99) = v41;
    LODWORD(v41) = *((_DWORD *)this + 100);
    *((_DWORD *)this + 100) = *((_DWORD *)a2 + 100);
    *((_DWORD *)a2 + 100) = v41;
    LODWORD(v41) = *((_DWORD *)this + 101);
    *((_DWORD *)this + 101) = *((_DWORD *)a2 + 101);
    *((_DWORD *)a2 + 101) = v41;
    LODWORD(v41) = *((_DWORD *)this + 102);
    *((_DWORD *)this + 102) = *((_DWORD *)a2 + 102);
    *((_DWORD *)a2 + 102) = v41;
    LODWORD(v41) = *((_DWORD *)this + 103);
    *((_DWORD *)this + 103) = *((_DWORD *)a2 + 103);
    *((_DWORD *)a2 + 103) = v41;
    LODWORD(v41) = *((_DWORD *)this + 104);
    *((_DWORD *)this + 104) = *((_DWORD *)a2 + 104);
    *((_DWORD *)a2 + 104) = v41;
    LODWORD(v41) = *((_DWORD *)this + 105);
    *((_DWORD *)this + 105) = *((_DWORD *)a2 + 105);
    *((_DWORD *)a2 + 105) = v41;
    LODWORD(v41) = *((_DWORD *)this + 106);
    *((_DWORD *)this + 106) = *((_DWORD *)a2 + 106);
    *((_DWORD *)a2 + 106) = v41;
    LODWORD(v41) = *((_DWORD *)this + 107);
    *((_DWORD *)this + 107) = *((_DWORD *)a2 + 107);
    *((_DWORD *)a2 + 107) = v41;
    LODWORD(v41) = *((_DWORD *)this + 108);
    *((_DWORD *)this + 108) = *((_DWORD *)a2 + 108);
    *((_DWORD *)a2 + 108) = v41;
    LODWORD(v41) = *((_DWORD *)this + 109);
    *((_DWORD *)this + 109) = *((_DWORD *)a2 + 109);
    *((_DWORD *)a2 + 109) = v41;
    LODWORD(v41) = *((_DWORD *)this + 110);
    *((_DWORD *)this + 110) = *((_DWORD *)a2 + 110);
    *((_DWORD *)a2 + 110) = v41;
    LODWORD(v41) = *((_DWORD *)this + 112);
    *((_DWORD *)this + 112) = *((_DWORD *)a2 + 112);
    *((_DWORD *)a2 + 112) = v41;
    LODWORD(v41) = *((_DWORD *)this + 113);
    *((_DWORD *)this + 113) = *((_DWORD *)a2 + 113);
    *((_DWORD *)a2 + 113) = v41;
    LODWORD(v41) = *((_DWORD *)this + 114);
    *((_DWORD *)this + 114) = *((_DWORD *)a2 + 114);
    *((_DWORD *)a2 + 114) = v41;
    LODWORD(v41) = *((_DWORD *)this + 115);
    *((_DWORD *)this + 115) = *((_DWORD *)a2 + 115);
    *((_DWORD *)a2 + 115) = v41;
    LODWORD(v41) = *((_DWORD *)this + 116);
    *((_DWORD *)this + 116) = *((_DWORD *)a2 + 116);
    *((_DWORD *)a2 + 116) = v41;
    LODWORD(v41) = *((_DWORD *)this + 117);
    *((_DWORD *)this + 117) = *((_DWORD *)a2 + 117);
    *((_DWORD *)a2 + 117) = v41;
    LODWORD(v41) = *((_DWORD *)this + 118);
    *((_DWORD *)this + 118) = *((_DWORD *)a2 + 118);
    *((_DWORD *)a2 + 118) = v41;
    LODWORD(v41) = *((_DWORD *)this + 119);
    *((_DWORD *)this + 119) = *((_DWORD *)a2 + 119);
    *((_DWORD *)a2 + 119) = v41;
    LODWORD(v41) = *((_DWORD *)this + 120);
    *((_DWORD *)this + 120) = *((_DWORD *)a2 + 120);
    *((_DWORD *)a2 + 120) = v41;
    LODWORD(v41) = *((_DWORD *)this + 121);
    *((_DWORD *)this + 121) = *((_DWORD *)a2 + 121);
    *((_DWORD *)a2 + 121) = v41;
    LODWORD(v41) = *((_DWORD *)this + 122);
    *((_DWORD *)this + 122) = *((_DWORD *)a2 + 122);
    *((_DWORD *)a2 + 122) = v41;
    LODWORD(v41) = *((_DWORD *)this + 123);
    *((_DWORD *)this + 123) = *((_DWORD *)a2 + 123);
    *((_DWORD *)a2 + 123) = v41;
    LOBYTE(v41) = *((_BYTE *)this + 445);
    *((_BYTE *)this + 445) = *((_BYTE *)a2 + 445);
    *((_BYTE *)a2 + 445) = v41;
    LOBYTE(v41) = *((_BYTE *)this + 446);
    *((_BYTE *)this + 446) = *((_BYTE *)a2 + 446);
    *((_BYTE *)a2 + 446) = v41;
    LOBYTE(v41) = *((_BYTE *)this + 447);
    *((_BYTE *)this + 447) = *((_BYTE *)a2 + 447);
    *((_BYTE *)a2 + 447) = v41;
    v44 = *((_QWORD *)this + 62);
    *((_QWORD *)this + 62) = *((_QWORD *)a2 + 62);
    v45 = *((_QWORD *)a2 + 63);
    *((_QWORD *)a2 + 62) = v44;
    v46 = *((_QWORD *)this + 63);
    *((_QWORD *)this + 63) = v45;
    *((_QWORD *)a2 + 63) = v46;
    v47 = *((_QWORD *)this + 64);
    *((_QWORD *)this + 64) = *((_QWORD *)a2 + 64);
    v48 = *((_QWORD *)a2 + 65);
    *((_QWORD *)a2 + 64) = v47;
    v49 = *((_QWORD *)this + 65);
    *((_QWORD *)this + 65) = v48;
    *((_QWORD *)a2 + 65) = v49;
    LODWORD(v47) = *((_DWORD *)this + 132);
    *((_DWORD *)this + 132) = *((_DWORD *)a2 + 132);
    *((_DWORD *)a2 + 132) = v47;
    LODWORD(v47) = *((_DWORD *)this + 133);
    *((_DWORD *)this + 133) = *((_DWORD *)a2 + 133);
    *((_DWORD *)a2 + 133) = v47;
    LODWORD(v47) = *((_DWORD *)this + 134);
    *((_DWORD *)this + 134) = *((_DWORD *)a2 + 134);
    *((_DWORD *)a2 + 134) = v47;
    LODWORD(v47) = *((_DWORD *)this + 135);
    *((_DWORD *)this + 135) = *((_DWORD *)a2 + 135);
    *((_DWORD *)a2 + 135) = v47;
    LODWORD(v47) = *((_DWORD *)this + 136);
    *((_DWORD *)this + 136) = *((_DWORD *)a2 + 136);
    *((_DWORD *)a2 + 136) = v47;
    LODWORD(v47) = *((_DWORD *)this + 137);
    *((_DWORD *)this + 137) = *((_DWORD *)a2 + 137);
    *((_DWORD *)a2 + 137) = v47;
    LODWORD(v47) = *((_DWORD *)this + 138);
    *((_DWORD *)this + 138) = *((_DWORD *)a2 + 138);
    *((_DWORD *)a2 + 138) = v47;
    LODWORD(v47) = *((_DWORD *)this + 139);
    *((_DWORD *)this + 139) = *((_DWORD *)a2 + 139);
    *((_DWORD *)a2 + 139) = v47;
    LODWORD(v47) = *((_DWORD *)this + 140);
    *((_DWORD *)this + 140) = *((_DWORD *)a2 + 140);
    *((_DWORD *)a2 + 140) = v47;
    LODWORD(v47) = *((_DWORD *)this + 141);
    *((_DWORD *)this + 141) = *((_DWORD *)a2 + 141);
    *((_DWORD *)a2 + 141) = v47;
    LODWORD(v47) = *((_DWORD *)this + 142);
    *((_DWORD *)this + 142) = *((_DWORD *)a2 + 142);
    *((_DWORD *)a2 + 142) = v47;
    LODWORD(v47) = *((_DWORD *)this + 143);
    *((_DWORD *)this + 143) = *((_DWORD *)a2 + 143);
    *((_DWORD *)a2 + 143) = v47;
    LODWORD(v47) = *((_DWORD *)this + 144);
    *((_DWORD *)this + 144) = *((_DWORD *)a2 + 144);
    *((_DWORD *)a2 + 144) = v47;
    LODWORD(v47) = *((_DWORD *)this + 145);
    *((_DWORD *)this + 145) = *((_DWORD *)a2 + 145);
    *((_DWORD *)a2 + 145) = v47;
    LODWORD(v47) = *((_DWORD *)this + 146);
    *((_DWORD *)this + 146) = *((_DWORD *)a2 + 146);
    *((_DWORD *)a2 + 146) = v47;
    LODWORD(v47) = *((_DWORD *)this + 147);
    *((_DWORD *)this + 147) = *((_DWORD *)a2 + 147);
    *((_DWORD *)a2 + 147) = v47;
    LODWORD(v47) = *((_DWORD *)this + 148);
    *((_DWORD *)this + 148) = *((_DWORD *)a2 + 148);
    *((_DWORD *)a2 + 148) = v47;
    LODWORD(v47) = *((_DWORD *)this + 149);
    *((_DWORD *)this + 149) = *((_DWORD *)a2 + 149);
    *((_DWORD *)a2 + 149) = v47;
    LODWORD(v47) = *((_DWORD *)this + 150);
    *((_DWORD *)this + 150) = *((_DWORD *)a2 + 150);
    *((_DWORD *)a2 + 150) = v47;
    LODWORD(v47) = *((_DWORD *)this + 151);
    *((_DWORD *)this + 151) = *((_DWORD *)a2 + 151);
    *((_DWORD *)a2 + 151) = v47;
    LODWORD(v47) = *((_DWORD *)this + 152);
    *((_DWORD *)this + 152) = *((_DWORD *)a2 + 152);
    *((_DWORD *)a2 + 152) = v47;
    LODWORD(v47) = *((_DWORD *)this + 153);
    *((_DWORD *)this + 153) = *((_DWORD *)a2 + 153);
    *((_DWORD *)a2 + 153) = v47;
    LODWORD(v47) = *((_DWORD *)this + 154);
    *((_DWORD *)this + 154) = *((_DWORD *)a2 + 154);
    *((_DWORD *)a2 + 154) = v47;
    LODWORD(v47) = *((_DWORD *)this + 155);
    *((_DWORD *)this + 155) = *((_DWORD *)a2 + 155);
    *((_DWORD *)a2 + 155) = v47;
    LODWORD(v47) = *((_DWORD *)this + 156);
    *((_DWORD *)this + 156) = *((_DWORD *)a2 + 156);
    *((_DWORD *)a2 + 156) = v47;
    LODWORD(v47) = *((_DWORD *)this + 157);
    *((_DWORD *)this + 157) = *((_DWORD *)a2 + 157);
    *((_DWORD *)a2 + 157) = v47;
    LODWORD(v47) = *((_DWORD *)this + 158);
    *((_DWORD *)this + 158) = *((_DWORD *)a2 + 158);
    *((_DWORD *)a2 + 158) = v47;
    LODWORD(v47) = *((_DWORD *)this + 159);
    *((_DWORD *)this + 159) = *((_DWORD *)a2 + 159);
    *((_DWORD *)a2 + 159) = v47;
    v50 = *((_QWORD *)this + 80);
    *((_QWORD *)this + 80) = *((_QWORD *)a2 + 80);
    v51 = *((_QWORD *)a2 + 81);
    *((_QWORD *)a2 + 80) = v50;
    v52 = *((_QWORD *)this + 81);
    *((_QWORD *)this + 81) = v51;
    *((_QWORD *)a2 + 81) = v52;
    v53 = *((_QWORD *)this + 82);
    *((_QWORD *)this + 82) = *((_QWORD *)a2 + 82);
    v54 = *((_QWORD *)a2 + 83);
    *((_QWORD *)a2 + 82) = v53;
    v55 = *((_QWORD *)this + 83);
    *((_QWORD *)this + 83) = v54;
    *((_QWORD *)a2 + 83) = v55;
    v56 = *((_QWORD *)this + 84);
    *((_QWORD *)this + 84) = *((_QWORD *)a2 + 84);
    v57 = *((_QWORD *)a2 + 85);
    *((_QWORD *)a2 + 84) = v56;
    v58 = *((_QWORD *)this + 85);
    *((_QWORD *)this + 85) = v57;
    *((_QWORD *)a2 + 85) = v58;
    v59 = *((_QWORD *)this + 86);
    *((_QWORD *)this + 86) = *((_QWORD *)a2 + 86);
    v60 = *((_QWORD *)a2 + 87);
    *((_QWORD *)a2 + 86) = v59;
    v61 = *((_QWORD *)this + 87);
    *((_QWORD *)this + 87) = v60;
    *((_QWORD *)a2 + 87) = v61;
    v62 = *((_QWORD *)this + 88);
    *((_QWORD *)this + 88) = *((_QWORD *)a2 + 88);
    v63 = *((_QWORD *)a2 + 89);
    *((_QWORD *)a2 + 88) = v62;
    v64 = *((_QWORD *)this + 89);
    *((_QWORD *)this + 89) = v63;
    *((_QWORD *)a2 + 89) = v64;
    v65 = *((_QWORD *)this + 90);
    *((_QWORD *)this + 90) = *((_QWORD *)a2 + 90);
    v66 = *((_QWORD *)a2 + 91);
    *((_QWORD *)a2 + 90) = v65;
    v67 = *((_QWORD *)this + 91);
    *((_QWORD *)this + 91) = v66;
    *((_QWORD *)a2 + 91) = v67;
    v68 = *((_QWORD *)this + 92);
    *((_QWORD *)this + 92) = *((_QWORD *)a2 + 92);
    v69 = *((_QWORD *)a2 + 93);
    *((_QWORD *)a2 + 92) = v68;
    v70 = *((_QWORD *)this + 93);
    *((_QWORD *)this + 93) = v69;
    *((_QWORD *)a2 + 93) = v70;
    v71 = *((_QWORD *)this + 94);
    *((_QWORD *)this + 94) = *((_QWORD *)a2 + 94);
    v72 = *((_QWORD *)a2 + 95);
    *((_QWORD *)a2 + 94) = v71;
    v73 = *((_QWORD *)this + 95);
    *((_QWORD *)this + 95) = v72;
    *((_QWORD *)a2 + 95) = v73;
    v74 = *((_QWORD *)this + 96);
    *((_QWORD *)this + 96) = *((_QWORD *)a2 + 96);
    v75 = *((_QWORD *)a2 + 97);
    *((_QWORD *)a2 + 96) = v74;
    v76 = *((_QWORD *)this + 97);
    *((_QWORD *)this + 97) = v75;
    *((_QWORD *)a2 + 97) = v76;
    LODWORD(v74) = *((_DWORD *)this + 196);
    *((_DWORD *)this + 196) = *((_DWORD *)a2 + 196);
    *((_DWORD *)a2 + 196) = v74;
    LODWORD(v74) = *((_DWORD *)this + 197);
    *((_DWORD *)this + 197) = *((_DWORD *)a2 + 197);
    *((_DWORD *)a2 + 197) = v74;
    v77 = *((_QWORD *)this + 99);
    *((_QWORD *)this + 99) = *((_QWORD *)a2 + 99);
    result = *((double *)a2 + 100);
    *((_QWORD *)a2 + 99) = v77;
    v79 = *((_QWORD *)this + 100);
    *((double *)this + 100) = result;
    *((_QWORD *)a2 + 100) = v79;
    LODWORD(v77) = *((_DWORD *)this + 202);
    *((_DWORD *)this + 202) = *((_DWORD *)a2 + 202);
    *((_DWORD *)a2 + 202) = v77;
    LODWORD(v77) = *((_DWORD *)this + 203);
    *((_DWORD *)this + 203) = *((_DWORD *)a2 + 203);
    *((_DWORD *)a2 + 203) = v77;
    LODWORD(v77) = *((_DWORD *)this + 204);
    *((_DWORD *)this + 204) = *((_DWORD *)a2 + 204);
    *((_DWORD *)a2 + 204) = v77;
    LODWORD(v77) = *((_DWORD *)this + 205);
    *((_DWORD *)this + 205) = *((_DWORD *)a2 + 205);
    *((_DWORD *)a2 + 205) = v77;
    LODWORD(v77) = *((_DWORD *)this + 206);
    *((_DWORD *)this + 206) = *((_DWORD *)a2 + 206);
    *((_DWORD *)a2 + 206) = v77;
    LODWORD(v77) = *((_DWORD *)this + 207);
    *((_DWORD *)this + 207) = *((_DWORD *)a2 + 207);
    *((_DWORD *)a2 + 207) = v77;
    LODWORD(v77) = *((_DWORD *)this + 208);
    *((_DWORD *)this + 208) = *((_DWORD *)a2 + 208);
    *((_DWORD *)a2 + 208) = v77;
    LODWORD(v77) = *((_DWORD *)this + 209);
    *((_DWORD *)this + 209) = *((_DWORD *)a2 + 209);
    *((_DWORD *)a2 + 209) = v77;
    LODWORD(v77) = *((_DWORD *)this + 210);
    *((_DWORD *)this + 210) = *((_DWORD *)a2 + 210);
    *((_DWORD *)a2 + 210) = v77;
    LODWORD(v77) = *((_DWORD *)this + 211);
    *((_DWORD *)this + 211) = *((_DWORD *)a2 + 211);
    *((_DWORD *)a2 + 211) = v77;
    LODWORD(v77) = *((_DWORD *)this + 212);
    *((_DWORD *)this + 212) = *((_DWORD *)a2 + 212);
    *((_DWORD *)a2 + 212) = v77;
    LODWORD(v77) = *((_DWORD *)this + 213);
    *((_DWORD *)this + 213) = *((_DWORD *)a2 + 213);
    *((_DWORD *)a2 + 213) = v77;
    LODWORD(v77) = *((_DWORD *)this + 214);
    *((_DWORD *)this + 214) = *((_DWORD *)a2 + 214);
    *((_DWORD *)a2 + 214) = v77;
    LODWORD(v77) = *((_DWORD *)this + 215);
    *((_DWORD *)this + 215) = *((_DWORD *)a2 + 215);
    *((_DWORD *)a2 + 215) = v77;
    LODWORD(v77) = *((_DWORD *)this + 217);
    *((_DWORD *)this + 217) = *((_DWORD *)a2 + 217);
    *((_DWORD *)a2 + 217) = v77;
    LODWORD(v77) = *((_DWORD *)this + 218);
    *((_DWORD *)this + 218) = *((_DWORD *)a2 + 218);
    *((_DWORD *)a2 + 218) = v77;
    LODWORD(v77) = *((_DWORD *)this + 219);
    *((_DWORD *)this + 219) = *((_DWORD *)a2 + 219);
    *((_DWORD *)a2 + 219) = v77;
    LODWORD(v77) = *((_DWORD *)this + 220);
    *((_DWORD *)this + 220) = *((_DWORD *)a2 + 220);
    *((_DWORD *)a2 + 220) = v77;
    LODWORD(v77) = *((_DWORD *)this + 221);
    *((_DWORD *)this + 221) = *((_DWORD *)a2 + 221);
    *((_DWORD *)a2 + 221) = v77;
    LODWORD(v77) = *((_DWORD *)this + 216);
    *((_DWORD *)this + 216) = *((_DWORD *)a2 + 216);
    *((_DWORD *)a2 + 216) = v77;
  }
  return result;
}

_QWORD *awd::metrics::MotionFitnessAllDay::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessAllDay");
}

_QWORD *awd::metrics::MotionPressureTemperature::SharedCtor(_QWORD *this)
{
  this[13] = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

awd::metrics::MotionPressureTemperature *awd::metrics::MotionPressureTemperature::MotionPressureTemperature(awd::metrics::MotionPressureTemperature *this, const awd::metrics::MotionPressureTemperature *a2)
{
  *(_QWORD *)this = &off_24D98EBA0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  awd::metrics::MotionPressureTemperature::MergeFrom(this, a2);
  return this;
}

void sub_2189FA498(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;

  v7 = *((_QWORD *)v1 + 11);
  if (v7)
    MEMORY[0x219A1DC64](v7, 0x1000C8052888210);
  awd::metrics::MotionPressureTemperature::MotionPressureTemperature(v5, v4, v3, v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionPressureTemperature::MergeFrom(awd::metrics::MotionPressureTemperature *this, const awd::metrics::MotionPressureTemperature *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  v4 = *((_DWORD *)a2 + 8);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 6, *((_DWORD *)this + 8) + v4);
    memcpy((void *)(*((_QWORD *)this + 3) + 4 * *((int *)this + 8)), *((const void **)a2 + 3), 4 * *((int *)a2 + 8));
    *((_DWORD *)this + 8) += *((_DWORD *)a2 + 8);
  }
  v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 10, *((_DWORD *)this + 12) + v5);
    memcpy((void *)(*((_QWORD *)this + 5) + 4 * *((int *)this + 12)), *((const void **)a2 + 5), 4 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  v6 = *((_DWORD *)a2 + 16);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 14, *((_DWORD *)this + 16) + v6);
    memcpy((void *)(*((_QWORD *)this + 7) + 4 * *((int *)this + 16)), *((const void **)a2 + 7), 4 * *((int *)a2 + 16));
    *((_DWORD *)this + 16) += *((_DWORD *)a2 + 16);
  }
  v7 = *((_DWORD *)a2 + 20);
  if (v7)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 18, *((_DWORD *)this + 20) + v7);
    memcpy((void *)(*((_QWORD *)this + 9) + 4 * *((int *)this + 20)), *((const void **)a2 + 9), 4 * *((int *)a2 + 20));
    *((_DWORD *)this + 20) += *((_DWORD *)a2 + 20);
  }
  v8 = *((_DWORD *)a2 + 24);
  if (v8)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 22, *((_DWORD *)this + 24) + v8);
    memcpy((void *)(*((_QWORD *)this + 11) + 4 * *((int *)this + 24)), *((const void **)a2 + 11), 4 * *((int *)a2 + 24));
    *((_DWORD *)this + 24) += *((_DWORD *)a2 + 24);
  }
  LOBYTE(v9) = *((_BYTE *)a2 + 108);
  if ((_BYTE)v9)
  {
    if ((*((_BYTE *)a2 + 108) & 1) != 0)
    {
      v11 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 27) |= 1u;
      *((_QWORD *)this + 1) = v11;
      v9 = *((_DWORD *)a2 + 27);
      if ((v9 & 2) == 0)
      {
LABEL_16:
        if ((v9 & 4) == 0)
          return;
        goto LABEL_17;
      }
    }
    else if ((*((_BYTE *)a2 + 108) & 2) == 0)
    {
      goto LABEL_16;
    }
    v12 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 27) |= 2u;
    *((_DWORD *)this + 4) = v12;
    if ((*((_DWORD *)a2 + 27) & 4) == 0)
      return;
LABEL_17:
    v10 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 27) |= 4u;
    *((_DWORD *)this + 5) = v10;
  }
}

void sub_2189FA700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionPressureTemperature::~MotionPressureTemperature(awd::metrics::MotionPressureTemperature *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24D98EBA0;
  v2 = *((_QWORD *)this + 11);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8052888210);
  v3 = *((_QWORD *)this + 9);
  if (v3)
    MEMORY[0x219A1DC64](v3, 0x1000C8052888210);
  v4 = *((_QWORD *)this + 7);
  if (v4)
    MEMORY[0x219A1DC64](v4, 0x1000C8052888210);
  v5 = *((_QWORD *)this + 5);
  if (v5)
    MEMORY[0x219A1DC64](v5, 0x1000C8052888210);
  v6 = *((_QWORD *)this + 3);
  if (v6)
    MEMORY[0x219A1DC64](v6, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::MotionPressureTemperature::~MotionPressureTemperature(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionPressureTemperature::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 104) = a2;
  return this;
}

uint64_t awd::metrics::MotionPressureTemperature::default_instance(awd::metrics::MotionPressureTemperature *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionPressureTemperature::default_instance_;
  if (!awd::metrics::MotionPressureTemperature::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionPressureTemperature::default_instance_;
  }
  return result;
}

double awd::metrics::MotionPressureTemperature::New(awd::metrics::MotionPressureTemperature *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98EBA0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_QWORD *)(v1 + 104) = 0;
  return result;
}

uint64_t awd::metrics::MotionPressureTemperature::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 108))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 108) = 0;
  return this;
}

uint64_t awd::metrics::MotionPressureTemperature::MergePartialFromCodedStream(awd::metrics::MotionPressureTemperature *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t result;
  char *v22;
  char *v23;
  int v24;
  int v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  int v29;
  _BYTE *v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  int v38;
  int v39;
  _BYTE *v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  int v49;
  int v50;
  _BYTE *v51;
  unint64_t v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  int v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  int v60;
  int v61;
  _BYTE *v62;
  unint64_t v63;
  int v64;
  unsigned int v65;
  uint64_t v66;
  int v67;
  int v68;
  unsigned int v69;
  uint64_t v70;
  int v71;
  int v72;
  _BYTE *v73;
  unint64_t v74;
  int v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t *v78;
  unsigned int *v79;
  unsigned int *v80;
  _DWORD *v81;
  unsigned int v82;
  _BYTE v83[48];

  v4 = (_DWORD *)((char *)this + 88);
  v5 = (_DWORD *)((char *)this + 72);
  v6 = (_DWORD *)((char *)this + 56);
  v7 = (_DWORD *)((char *)this + 40);
  v78 = (unint64_t *)((char *)this + 8);
  v79 = (unsigned int *)((char *)this + 16);
  v80 = (unsigned int *)((char *)this + 20);
  v81 = (_DWORD *)((char *)this + 24);
LABEL_2:
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = (char *)*((_QWORD *)a2 + 2);
        if (v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v78);
          if (!(_DWORD)result)
            return result;
          v13 = (char *)*((_QWORD *)a2 + 1);
          v11 = (char *)*((_QWORD *)a2 + 2);
        }
        else
        {
          *v78 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 27) |= 1u;
        if (v13 < v11 && *v13 == 16)
        {
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
          goto LABEL_50;
        }
        continue;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v11 = (char *)*((_QWORD *)a2 + 2);
LABEL_50:
        if (v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v79);
          if (!(_DWORD)result)
            return result;
          v22 = (char *)*((_QWORD *)a2 + 1);
          v11 = (char *)*((_QWORD *)a2 + 2);
        }
        else
        {
          *v79 = *v14;
          v22 = v14 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 27) |= 2u;
        if (v22 >= v11 || *v22 != 24)
          continue;
        v15 = v22 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_58:
        if (v15 >= v11 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v80);
          if (!(_DWORD)result)
            return result;
          v23 = (char *)*((_QWORD *)a2 + 1);
          v11 = (char *)*((_QWORD *)a2 + 2);
        }
        else
        {
          *v80 = *v15;
          v23 = v15 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 27) |= 4u;
        if (v23 >= v11)
          continue;
        v24 = *v23;
        goto LABEL_84;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v11 = (char *)*((_QWORD *)a2 + 2);
        goto LABEL_58;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v16 = (char *)*((_QWORD *)a2 + 1);
            v11 = (char *)*((_QWORD *)a2 + 2);
            goto LABEL_65;
          }
          goto LABEL_32;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v81);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v23 = (char *)*((_QWORD *)a2 + 1);
          v11 = (char *)*((_QWORD *)a2 + 2);
          if (v23 >= v11)
            goto LABEL_2;
          v24 = *v23;
          if (v24 == 40)
            goto LABEL_106;
LABEL_84:
          if (v24 != 32)
            goto LABEL_2;
          v16 = v23 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_65:
          v82 = 0;
          if (v16 >= v11 || *v16 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0;
          }
          else
          {
            v82 = *v16;
            *((_QWORD *)a2 + 1) = v16 + 1;
          }
          v25 = *((_DWORD *)this + 8);
          if (v25 == *((_DWORD *)this + 9))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v81, v25 + 1);
            v25 = *((_DWORD *)this + 8);
          }
          v26 = v82;
          v27 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 8) = v25 + 1;
          *(_DWORD *)(v27 + 4 * v25) = v26;
          v28 = *((_DWORD *)this + 9) - *((_DWORD *)this + 8);
          if (v28 >= 1)
          {
            v29 = v28 + 1;
            do
            {
              v30 = (_BYTE *)*((_QWORD *)a2 + 1);
              v31 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v30 >= v31 || *v30 != 32)
                break;
              *((_QWORD *)a2 + 1) = v30 + 1;
              if ((unint64_t)(v30 + 1) >= v31 || (char)v30[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0;
              }
              else
              {
                v82 = v30[1];
                *((_QWORD *)a2 + 1) = v30 + 2;
              }
              v32 = *((_DWORD *)this + 8);
              if (v32 >= *((_DWORD *)this + 9))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
                v32 = *((_DWORD *)this + 8);
              }
              v33 = v82;
              v34 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 8) = v32 + 1;
              *(_DWORD *)(v34 + 4 * v32) = v33;
              --v29;
            }
            while (v29 > 1);
          }
        }
      case 5u:
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v17 = (char *)*((_QWORD *)a2 + 1);
            v11 = (char *)*((_QWORD *)a2 + 2);
            goto LABEL_86;
          }
          goto LABEL_32;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v7);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v23 = (char *)*((_QWORD *)a2 + 1);
          v11 = (char *)*((_QWORD *)a2 + 2);
          if (v23 >= v11)
            goto LABEL_2;
          v45 = *v23;
          if (v45 == 48)
            goto LABEL_127;
          if (v45 != 40)
            goto LABEL_2;
LABEL_106:
          v17 = v23 + 1;
          *((_QWORD *)a2 + 1) = v17;
LABEL_86:
          v82 = 0;
          if (v17 >= v11 || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0;
          }
          else
          {
            v82 = *v17;
            *((_QWORD *)a2 + 1) = v17 + 1;
          }
          v35 = *((_DWORD *)this + 12);
          if (v35 == *((_DWORD *)this + 13))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v7, v35 + 1);
            v35 = *((_DWORD *)this + 12);
          }
          v36 = v82;
          v37 = *((_QWORD *)this + 5);
          *((_DWORD *)this + 12) = v35 + 1;
          *(_DWORD *)(v37 + 4 * v35) = v36;
          v38 = *((_DWORD *)this + 13) - *((_DWORD *)this + 12);
          if (v38 >= 1)
          {
            v39 = v38 + 1;
            do
            {
              v40 = (_BYTE *)*((_QWORD *)a2 + 1);
              v41 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v40 >= v41 || *v40 != 40)
                break;
              *((_QWORD *)a2 + 1) = v40 + 1;
              if ((unint64_t)(v40 + 1) >= v41 || (char)v40[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0;
              }
              else
              {
                v82 = v40[1];
                *((_QWORD *)a2 + 1) = v40 + 2;
              }
              v42 = *((_DWORD *)this + 12);
              if (v42 >= *((_DWORD *)this + 13))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
                v42 = *((_DWORD *)this + 12);
              }
              v43 = v82;
              v44 = *((_QWORD *)this + 5);
              *((_DWORD *)this + 12) = v42 + 1;
              *(_DWORD *)(v44 + 4 * v42) = v43;
              --v39;
            }
            while (v39 > 1);
          }
        }
      case 6u:
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v18 = (char *)*((_QWORD *)a2 + 1);
            v11 = (char *)*((_QWORD *)a2 + 2);
            goto LABEL_107;
          }
          goto LABEL_32;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v6);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v23 = (char *)*((_QWORD *)a2 + 1);
          v11 = (char *)*((_QWORD *)a2 + 2);
          if (v23 >= v11)
            goto LABEL_2;
          v56 = *v23;
          if (v56 == 56)
            goto LABEL_148;
          if (v56 != 48)
            goto LABEL_2;
LABEL_127:
          v18 = v23 + 1;
          *((_QWORD *)a2 + 1) = v18;
LABEL_107:
          v82 = 0;
          if (v18 >= v11 || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0;
          }
          else
          {
            v82 = *v18;
            *((_QWORD *)a2 + 1) = v18 + 1;
          }
          v46 = *((_DWORD *)this + 16);
          if (v46 == *((_DWORD *)this + 17))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v6, v46 + 1);
            v46 = *((_DWORD *)this + 16);
          }
          v47 = v82;
          v48 = *((_QWORD *)this + 7);
          *((_DWORD *)this + 16) = v46 + 1;
          *(_DWORD *)(v48 + 4 * v46) = v47;
          v49 = *((_DWORD *)this + 17) - *((_DWORD *)this + 16);
          if (v49 >= 1)
          {
            v50 = v49 + 1;
            do
            {
              v51 = (_BYTE *)*((_QWORD *)a2 + 1);
              v52 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v51 >= v52 || *v51 != 48)
                break;
              *((_QWORD *)a2 + 1) = v51 + 1;
              if ((unint64_t)(v51 + 1) >= v52 || (char)v51[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0;
              }
              else
              {
                v82 = v51[1];
                *((_QWORD *)a2 + 1) = v51 + 2;
              }
              v53 = *((_DWORD *)this + 16);
              if (v53 >= *((_DWORD *)this + 17))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
                v53 = *((_DWORD *)this + 16);
              }
              v54 = v82;
              v55 = *((_QWORD *)this + 7);
              *((_DWORD *)this + 16) = v53 + 1;
              *(_DWORD *)(v55 + 4 * v53) = v54;
              --v50;
            }
            while (v50 > 1);
          }
        }
      case 7u:
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v19 = (char *)*((_QWORD *)a2 + 1);
            v11 = (char *)*((_QWORD *)a2 + 2);
            goto LABEL_128;
          }
          goto LABEL_32;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v5);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v23 = (char *)*((_QWORD *)a2 + 1);
          v11 = (char *)*((_QWORD *)a2 + 2);
          if (v23 >= v11)
            goto LABEL_2;
          v67 = *v23;
          if (v67 == 64)
            goto LABEL_168;
          if (v67 != 56)
            goto LABEL_2;
LABEL_148:
          v19 = v23 + 1;
          *((_QWORD *)a2 + 1) = v19;
LABEL_128:
          v82 = 0;
          if (v19 >= v11 || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0;
          }
          else
          {
            v82 = *v19;
            *((_QWORD *)a2 + 1) = v19 + 1;
          }
          v57 = *((_DWORD *)this + 20);
          if (v57 == *((_DWORD *)this + 21))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v5, v57 + 1);
            v57 = *((_DWORD *)this + 20);
          }
          v58 = v82;
          v59 = *((_QWORD *)this + 9);
          *((_DWORD *)this + 20) = v57 + 1;
          *(_DWORD *)(v59 + 4 * v57) = v58;
          v60 = *((_DWORD *)this + 21) - *((_DWORD *)this + 20);
          if (v60 >= 1)
          {
            v61 = v60 + 1;
            do
            {
              v62 = (_BYTE *)*((_QWORD *)a2 + 1);
              v63 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v62 >= v63 || *v62 != 56)
                break;
              *((_QWORD *)a2 + 1) = v62 + 1;
              if ((unint64_t)(v62 + 1) >= v63 || (char)v62[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0;
              }
              else
              {
                v82 = v62[1];
                *((_QWORD *)a2 + 1) = v62 + 2;
              }
              v64 = *((_DWORD *)this + 20);
              if (v64 >= *((_DWORD *)this + 21))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
                v64 = *((_DWORD *)this + 20);
              }
              v65 = v82;
              v66 = *((_QWORD *)this + 9);
              *((_DWORD *)this + 20) = v64 + 1;
              *(_DWORD *)(v66 + 4 * v64) = v65;
              --v61;
            }
            while (v61 > 1);
          }
        }
      case 8u:
        v10 = TagFallback & 7;
        if (v10 == 2)
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v4);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v23 = (char *)*((_QWORD *)a2 + 1);
            v11 = (char *)*((_QWORD *)a2 + 2);
            if (v23 >= v11 || *v23 != 64)
              break;
LABEL_168:
            v20 = v23 + 1;
            *((_QWORD *)a2 + 1) = v20;
LABEL_149:
            v82 = 0;
            if (v20 >= v11 || *v20 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0;
            }
            else
            {
              v82 = *v20;
              *((_QWORD *)a2 + 1) = v20 + 1;
            }
            v68 = *((_DWORD *)this + 24);
            if (v68 == *((_DWORD *)this + 25))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v4, v68 + 1);
              v68 = *((_DWORD *)this + 24);
            }
            v69 = v82;
            v70 = *((_QWORD *)this + 11);
            *((_DWORD *)this + 24) = v68 + 1;
            *(_DWORD *)(v70 + 4 * v68) = v69;
            v71 = *((_DWORD *)this + 25) - *((_DWORD *)this + 24);
            if (v71 >= 1)
            {
              v72 = v71 + 1;
              do
              {
                v73 = (_BYTE *)*((_QWORD *)a2 + 1);
                v74 = *((_QWORD *)a2 + 2);
                if ((unint64_t)v73 >= v74 || *v73 != 64)
                  break;
                *((_QWORD *)a2 + 1) = v73 + 1;
                if ((unint64_t)(v73 + 1) >= v74 || (char)v73[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0;
                }
                else
                {
                  v82 = v73[1];
                  *((_QWORD *)a2 + 1) = v73 + 2;
                }
                v75 = *((_DWORD *)this + 24);
                if (v75 >= *((_DWORD *)this + 25))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
                  v75 = *((_DWORD *)this + 24);
                }
                v76 = v82;
                v77 = *((_QWORD *)this + 11);
                *((_DWORD *)this + 24) = v75 + 1;
                *(_DWORD *)(v77 + 4 * v75) = v76;
                --v72;
              }
              while (v72 > 1);
            }
          }
          if (v23 == v11 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v20 = (char *)*((_QWORD *)a2 + 1);
          v11 = (char *)*((_QWORD *)a2 + 2);
          goto LABEL_149;
        }
LABEL_32:
        if (v10 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      default:
        v10 = TagFallback & 7;
        goto LABEL_32;
    }
  }
}

void sub_2189FB2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::MotionPressureTemperature::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 108);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 108);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 108) & 4) != 0)
LABEL_4:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
LABEL_5:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(*(_QWORD *)(v5 + 24) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(*(_QWORD *)(v5 + 40) + 4 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(*(_QWORD *)(v5 + 56) + 4 * v9++), (uint64_t)a2, a4);
    while (v9 < *(int *)(v5 + 64));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(*(_QWORD *)(v5 + 72) + 4 * v10++), (uint64_t)a2, a4);
    while (v10 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(*(_QWORD *)(v5 + 88) + 4 * v11++), (uint64_t)a2, a4);
    while (v11 < *(int *)(v5 + 96));
  }
  return this;
}

uint64_t awd::metrics::MotionPressureTemperature::ByteSize(awd::metrics::MotionPressureTemperature *this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  uint64_t result;
  int v34;
  int v35;

  LOBYTE(v2) = *((_BYTE *)this + 108);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_16;
  }
  if ((*((_BYTE *)this + 108) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 27);
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 108) & 2) == 0)
      goto LABEL_11;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 27);
  }
  else
  {
    v5 = 2;
  }
  v3 += v5;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    else
      v7 = 2;
    v3 += v7;
  }
LABEL_16:
  v35 = v3;
  v8 = *((_DWORD *)this + 8);
  if (v8 < 1)
  {
    v10 = 0;
  }
  else
  {
    v9 = 0;
    v10 = 0;
    do
    {
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 3)
                                                                                             + 4 * v9);
      if (v11 >= 0x80)
      {
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
        v8 = *((_DWORD *)this + 8);
      }
      else
      {
        v12 = 1;
      }
      v10 += v12;
      ++v9;
    }
    while (v9 < v8);
  }
  v13 = *((_DWORD *)this + 12);
  if (v13 < 1)
  {
    v15 = 0;
  }
  else
  {
    v14 = 0;
    v15 = 0;
    do
    {
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 5)
                                                                                             + 4 * v14);
      if (v16 >= 0x80)
      {
        v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
        v13 = *((_DWORD *)this + 12);
      }
      else
      {
        v17 = 1;
      }
      v15 += v17;
      ++v14;
    }
    while (v14 < v13);
  }
  v18 = *((_DWORD *)this + 16);
  if (v18 < 1)
  {
    v20 = 0;
  }
  else
  {
    v19 = 0;
    v20 = 0;
    do
    {
      v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 7)
                                                                                             + 4 * v19);
      if (v21 >= 0x80)
      {
        v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
        v18 = *((_DWORD *)this + 16);
      }
      else
      {
        v22 = 1;
      }
      v20 += v22;
      ++v19;
    }
    while (v19 < v18);
  }
  v23 = *((_DWORD *)this + 20);
  if (v23 < 1)
  {
    v25 = 0;
  }
  else
  {
    v24 = 0;
    v25 = 0;
    do
    {
      v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 9)
                                                                                             + 4 * v24);
      if (v26 >= 0x80)
      {
        v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
        v23 = *((_DWORD *)this + 20);
      }
      else
      {
        v27 = 1;
      }
      v25 += v27;
      ++v24;
    }
    while (v24 < v23);
  }
  v34 = v8;
  v28 = *((_DWORD *)this + 24);
  if (v28 < 1)
  {
    v30 = 0;
  }
  else
  {
    v29 = 0;
    v30 = 0;
    do
    {
      v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 11)
                                                                                             + 4 * v29);
      if (v31 >= 0x80)
      {
        v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
        v28 = *((_DWORD *)this + 24);
      }
      else
      {
        v32 = 1;
      }
      v30 += v32;
      ++v29;
    }
    while (v29 < v28);
  }
  result = (v10 + v35 + v34 + v15 + v13 + v20 + v18 + v25 + v23 + v30 + v28);
  *((_DWORD *)this + 26) = result;
  return result;
}

void awd::metrics::MotionPressureTemperature::CheckTypeAndMergeFrom(awd::metrics::MotionPressureTemperature *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionPressureTemperature::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionPressureTemperature::CopyFrom(awd::metrics::MotionPressureTemperature *this, const awd::metrics::MotionPressureTemperature *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionPressureTemperature *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionPressureTemperature::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionPressureTemperature::IsInitialized(awd::metrics::MotionPressureTemperature *this)
{
  return 1;
}

double awd::metrics::MotionPressureTemperature::Swap(awd::metrics::MotionPressureTemperature *this, awd::metrics::MotionPressureTemperature *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    v3 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    v4 = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 3) = v3;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = v4;
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    v7 = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 5) = v6;
    v8 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = v7;
    *((_QWORD *)a2 + 6) = v8;
    v9 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    v10 = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 7) = v9;
    v11 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = v10;
    *((_QWORD *)a2 + 8) = v11;
    v12 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    v13 = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 9) = v12;
    v14 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v13;
    *((_QWORD *)a2 + 10) = v14;
    v15 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    result = *((double *)a2 + 12);
    *((_QWORD *)a2 + 11) = v15;
    v17 = *((_QWORD *)this + 12);
    *((double *)this + 12) = result;
    *((_QWORD *)a2 + 12) = v17;
    LODWORD(v15) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v15;
    LODWORD(v15) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v15;
  }
  return result;
}

_QWORD *awd::metrics::MotionPressureTemperature::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionPressureTemperature");
}

BOOL awd::metrics::MotionElevationAllDay_HasWetWorkouts_IsValid(awd::metrics *this)
{
  return this < 2 || (_DWORD)this == 255;
}

double awd::metrics::MotionElevationAllDay::SharedCtor(awd::metrics::MotionElevationAllDay *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)&result = 255;
  *((_QWORD *)this + 8) = 255;
  *((_DWORD *)this + 81) = 0;
  *((_QWORD *)this + 41) = 0;
  return result;
}

awd::metrics::MotionElevationAllDay *awd::metrics::MotionElevationAllDay::MotionElevationAllDay(awd::metrics::MotionElevationAllDay *this, const awd::metrics::MotionElevationAllDay *a2)
{
  *(_QWORD *)this = &off_24D98EC18;
  *((_QWORD *)this + 21) = 0;
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 24) = 0;
  *((_QWORD *)this + 23) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_QWORD *)this + 26) = 0;
  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_QWORD *)this + 32) = 0;
  *((_QWORD *)this + 33) = 0;
  *((_QWORD *)this + 35) = 0;
  *((_QWORD *)this + 36) = 0;
  *((_QWORD *)this + 38) = 0;
  *((_QWORD *)this + 39) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 8) = 255;
  *((_DWORD *)this + 81) = 0;
  *((_QWORD *)this + 41) = 0;
  awd::metrics::MotionElevationAllDay::MergeFrom(this, a2);
  return this;
}

void sub_2189FBA28(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v10 = v2;
  if (*v10)
    MEMORY[0x219A1DC64](*v10, 0x1000C8052888210);
  if (*v9)
    MEMORY[0x219A1DC64](*v9, 0x1000C8052888210);
  if (*v8)
    MEMORY[0x219A1DC64](*v8, 0x1000C8052888210);
  if (*v7)
    MEMORY[0x219A1DC64](*v7, 0x1000C8052888210);
  if (*v6)
    MEMORY[0x219A1DC64](*v6, 0x1000C8052888210);
  if (*v5)
    MEMORY[0x219A1DC64](*v5, 0x1000C8052888210);
  if (*v4)
    MEMORY[0x219A1DC64](*v4, 0x1000C8052888210);
  v12 = *((_QWORD *)v1 + 17);
  if (v12)
    MEMORY[0x219A1DC64](v12, 0x1000C8052888210);
  v13 = *((_QWORD *)v1 + 15);
  if (v13)
    MEMORY[0x219A1DC64](v13, 0x1000C8052888210);
  v14 = *((_QWORD *)v1 + 13);
  if (v14)
    MEMORY[0x219A1DC64](v14, 0x1000C8052888210);
  v15 = *((_QWORD *)v1 + 11);
  if (v15)
    MEMORY[0x219A1DC64](v15, 0x1000C8052888210);
  if (*v3)
    MEMORY[0x219A1DC64](*v3, 0x1000C8052888210);
  v16 = *((_QWORD *)v1 + 6);
  if (v16)
    MEMORY[0x219A1DC64](v16, 0x1000C8052888210);
  v17 = *((_QWORD *)v1 + 4);
  if (v17)
    MEMORY[0x219A1DC64](v17, 0x1000C8052888210);
  v18 = *((_QWORD *)v1 + 2);
  if (v18)
    MEMORY[0x219A1DC64](v18, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionElevationAllDay::MergeFrom(awd::metrics::MotionElevationAllDay *this, const awd::metrics::MotionElevationAllDay *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  int v23;
  _BYTE v24[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 4, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((_QWORD *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  v5 = *((_DWORD *)a2 + 10);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 8, *((_DWORD *)this + 10) + v5);
    memcpy((void *)(*((_QWORD *)this + 4) + 4 * *((int *)this + 10)), *((const void **)a2 + 4), 4 * *((int *)a2 + 10));
    *((_DWORD *)this + 10) += *((_DWORD *)a2 + 10);
  }
  v6 = *((_DWORD *)a2 + 14);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 12, *((_DWORD *)this + 14) + v6);
    memcpy((void *)(*((_QWORD *)this + 6) + 4 * *((int *)this + 14)), *((const void **)a2 + 6), 4 * *((int *)a2 + 14));
    *((_DWORD *)this + 14) += *((_DWORD *)a2 + 14);
  }
  v7 = *((_DWORD *)a2 + 20);
  if (v7)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 18, *((_DWORD *)this + 20) + v7);
    memcpy((void *)(*((_QWORD *)this + 9) + 4 * *((int *)this + 20)), *((const void **)a2 + 9), 4 * *((int *)a2 + 20));
    *((_DWORD *)this + 20) += *((_DWORD *)a2 + 20);
  }
  v8 = *((_DWORD *)a2 + 24);
  if (v8)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 22, *((_DWORD *)this + 24) + v8);
    memcpy((void *)(*((_QWORD *)this + 11) + 4 * *((int *)this + 24)), *((const void **)a2 + 11), 4 * *((int *)a2 + 24));
    *((_DWORD *)this + 24) += *((_DWORD *)a2 + 24);
  }
  v9 = *((_DWORD *)a2 + 28);
  if (v9)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 26, *((_DWORD *)this + 28) + v9);
    memcpy((void *)(*((_QWORD *)this + 13) + 4 * *((int *)this + 28)), *((const void **)a2 + 13), 4 * *((int *)a2 + 28));
    *((_DWORD *)this + 28) += *((_DWORD *)a2 + 28);
  }
  v10 = *((_DWORD *)a2 + 32);
  if (v10)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 30, *((_DWORD *)this + 32) + v10);
    memcpy((void *)(*((_QWORD *)this + 15) + 4 * *((int *)this + 32)), *((const void **)a2 + 15), 4 * *((int *)a2 + 32));
    *((_DWORD *)this + 32) += *((_DWORD *)a2 + 32);
  }
  v11 = *((_DWORD *)a2 + 36);
  if (v11)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 34, *((_DWORD *)this + 36) + v11);
    memcpy((void *)(*((_QWORD *)this + 17) + 4 * *((int *)this + 36)), *((const void **)a2 + 17), 4 * *((int *)a2 + 36));
    *((_DWORD *)this + 36) += *((_DWORD *)a2 + 36);
  }
  v12 = *((_DWORD *)a2 + 42);
  if (v12)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 40, *((_DWORD *)this + 42) + v12);
    memcpy((void *)(*((_QWORD *)this + 20) + 4 * *((int *)this + 42)), *((const void **)a2 + 20), 4 * *((int *)a2 + 42));
    *((_DWORD *)this + 42) += *((_DWORD *)a2 + 42);
  }
  v13 = *((_DWORD *)a2 + 48);
  if (v13)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 46, *((_DWORD *)this + 48) + v13);
    memcpy((void *)(*((_QWORD *)this + 23) + 4 * *((int *)this + 48)), *((const void **)a2 + 23), 4 * *((int *)a2 + 48));
    *((_DWORD *)this + 48) += *((_DWORD *)a2 + 48);
  }
  v14 = *((_DWORD *)a2 + 54);
  if (v14)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 52, *((_DWORD *)this + 54) + v14);
    memcpy((void *)(*((_QWORD *)this + 26) + 4 * *((int *)this + 54)), *((const void **)a2 + 26), 4 * *((int *)a2 + 54));
    *((_DWORD *)this + 54) += *((_DWORD *)a2 + 54);
  }
  v15 = *((_DWORD *)a2 + 60);
  if (v15)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 58, *((_DWORD *)this + 60) + v15);
    memcpy((void *)(*((_QWORD *)this + 29) + 4 * *((int *)this + 60)), *((const void **)a2 + 29), 4 * *((int *)a2 + 60));
    *((_DWORD *)this + 60) += *((_DWORD *)a2 + 60);
  }
  v16 = *((_DWORD *)a2 + 66);
  if (v16)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 64, *((_DWORD *)this + 66) + v16);
    memcpy((void *)(*((_QWORD *)this + 32) + 4 * *((int *)this + 66)), *((const void **)a2 + 32), 4 * *((int *)a2 + 66));
    *((_DWORD *)this + 66) += *((_DWORD *)a2 + 66);
  }
  v17 = *((_DWORD *)a2 + 72);
  if (v17)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 70, *((_DWORD *)this + 72) + v17);
    memcpy((void *)(*((_QWORD *)this + 35) + 4 * *((int *)this + 72)), *((const void **)a2 + 35), 4 * *((int *)a2 + 72));
    *((_DWORD *)this + 72) += *((_DWORD *)a2 + 72);
  }
  v18 = *((_DWORD *)a2 + 78);
  if (v18)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 76, *((_DWORD *)this + 78) + v18);
    memcpy((void *)(*((_QWORD *)this + 38) + 4 * *((int *)this + 78)), *((const void **)a2 + 38), 4 * *((int *)a2 + 78));
    *((_DWORD *)this + 78) += *((_DWORD *)a2 + 78);
  }
  v19 = *((_DWORD *)a2 + 83);
  if ((_BYTE)v19)
  {
    if ((v19 & 1) != 0)
    {
      v20 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 83) |= 1u;
      *((_QWORD *)this + 1) = v20;
      v19 = *((_DWORD *)a2 + 83);
    }
    if ((v19 & 2) != 0)
    {
      v21 = *((_DWORD *)a2 + 16);
      if (v21 >= 2 && v21 != 255)
        awd::metrics::MotionElevationAllDay::MergeFrom();
      *((_DWORD *)this + 83) |= 2u;
      *((_DWORD *)this + 16) = v21;
      v19 = *((_DWORD *)a2 + 83);
    }
    if ((v19 & 0x80) != 0)
    {
      v22 = *((_DWORD *)a2 + 17);
      *((_DWORD *)this + 83) |= 0x80u;
      *((_DWORD *)this + 17) = v22;
      v19 = *((_DWORD *)a2 + 83);
    }
  }
  if ((v19 & 0x400) != 0)
  {
    v23 = *((_DWORD *)a2 + 81);
    *((_DWORD *)this + 83) |= 0x400u;
    *((_DWORD *)this + 81) = v23;
  }
}

void sub_2189FC0D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionElevationAllDay::~MotionElevationAllDay(awd::metrics::MotionElevationAllDay *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)this = &off_24D98EC18;
  v2 = *((_QWORD *)this + 38);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8052888210);
  v3 = *((_QWORD *)this + 35);
  if (v3)
    MEMORY[0x219A1DC64](v3, 0x1000C8052888210);
  v4 = *((_QWORD *)this + 32);
  if (v4)
    MEMORY[0x219A1DC64](v4, 0x1000C8052888210);
  v5 = *((_QWORD *)this + 29);
  if (v5)
    MEMORY[0x219A1DC64](v5, 0x1000C8052888210);
  v6 = *((_QWORD *)this + 26);
  if (v6)
    MEMORY[0x219A1DC64](v6, 0x1000C8052888210);
  v7 = *((_QWORD *)this + 23);
  if (v7)
    MEMORY[0x219A1DC64](v7, 0x1000C8052888210);
  v8 = *((_QWORD *)this + 20);
  if (v8)
    MEMORY[0x219A1DC64](v8, 0x1000C8052888210);
  v9 = *((_QWORD *)this + 17);
  if (v9)
    MEMORY[0x219A1DC64](v9, 0x1000C8052888210);
  v10 = *((_QWORD *)this + 15);
  if (v10)
    MEMORY[0x219A1DC64](v10, 0x1000C8052888210);
  v11 = *((_QWORD *)this + 13);
  if (v11)
    MEMORY[0x219A1DC64](v11, 0x1000C8052888210);
  v12 = *((_QWORD *)this + 11);
  if (v12)
    MEMORY[0x219A1DC64](v12, 0x1000C8052888210);
  v13 = *((_QWORD *)this + 9);
  if (v13)
    MEMORY[0x219A1DC64](v13, 0x1000C8052888210);
  v14 = *((_QWORD *)this + 6);
  if (v14)
    MEMORY[0x219A1DC64](v14, 0x1000C8052888210);
  v15 = *((_QWORD *)this + 4);
  if (v15)
    MEMORY[0x219A1DC64](v15, 0x1000C8052888210);
  v16 = *((_QWORD *)this + 2);
  if (v16)
    MEMORY[0x219A1DC64](v16, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::MotionElevationAllDay::~MotionElevationAllDay(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionElevationAllDay::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 328) = a2;
  return this;
}

uint64_t awd::metrics::MotionElevationAllDay::default_instance(awd::metrics::MotionElevationAllDay *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionElevationAllDay::default_instance_;
  if (!awd::metrics::MotionElevationAllDay::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionElevationAllDay::default_instance_;
  }
  return result;
}

double awd::metrics::MotionElevationAllDay::New(awd::metrics::MotionElevationAllDay *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98EC18;
  *(_QWORD *)(v1 + 160) = 0;
  *(_QWORD *)(v1 + 168) = 0;
  *(_QWORD *)(v1 + 184) = 0;
  *(_QWORD *)(v1 + 192) = 0;
  *(_QWORD *)(v1 + 208) = 0;
  *(_QWORD *)(v1 + 216) = 0;
  *(_QWORD *)(v1 + 232) = 0;
  *(_QWORD *)(v1 + 240) = 0;
  *(_QWORD *)(v1 + 256) = 0;
  *(_QWORD *)(v1 + 264) = 0;
  *(_QWORD *)(v1 + 280) = 0;
  *(_QWORD *)(v1 + 288) = 0;
  *(_QWORD *)(v1 + 304) = 0;
  *(_QWORD *)(v1 + 312) = 0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)&result = 255;
  *(_QWORD *)(v1 + 64) = 255;
  *(_DWORD *)(v1 + 324) = 0;
  *(_QWORD *)(v1 + 328) = 0;
  return result;
}

uint64_t awd::metrics::MotionElevationAllDay::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 332);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 64) = 255;
  }
  if ((v1 & 0x3FC00) != 0)
    *(_DWORD *)(this + 324) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 112) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(_DWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 168) = 0;
  *(_DWORD *)(this + 192) = 0;
  *(_DWORD *)(this + 216) = 0;
  *(_DWORD *)(this + 240) = 0;
  *(_DWORD *)(this + 264) = 0;
  *(_DWORD *)(this + 288) = 0;
  *(_DWORD *)(this + 312) = 0;
  *(_DWORD *)(this + 332) = 0;
  return this;
}

uint64_t awd::metrics::MotionElevationAllDay::MergePartialFromCodedStream(awd::metrics::MotionElevationAllDay *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  unint64_t v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  unsigned __int8 *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  unint64_t v32;
  char *v33;
  unint64_t v34;
  char *v35;
  unint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  uint64_t result;
  unsigned int v41;
  unsigned __int8 *v42;
  int v43;
  int v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  int v48;
  _BYTE *v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  int v54;
  unsigned int v55;
  uint64_t v56;
  int v57;
  int v58;
  _BYTE *v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  int v64;
  int v65;
  unsigned int v66;
  uint64_t v67;
  int v68;
  int v69;
  _BYTE *v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  int v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  int v79;
  int v80;
  _BYTE *v81;
  unint64_t v82;
  int v83;
  unsigned int v84;
  uint64_t v85;
  int v86;
  int v87;
  unsigned int v88;
  uint64_t v89;
  int v90;
  int v91;
  _BYTE *v92;
  unint64_t v93;
  int v94;
  unsigned int v95;
  uint64_t v96;
  int v97;
  unsigned int v98;
  unsigned __int8 *v99;
  int v100;
  int v101;
  unsigned int v102;
  uint64_t v103;
  int v104;
  int v105;
  _BYTE *v106;
  unint64_t v107;
  int v108;
  unsigned int v109;
  uint64_t v110;
  int v111;
  unsigned int v112;
  uint64_t v113;
  int v114;
  int v115;
  _BYTE *v116;
  unint64_t v117;
  int v118;
  unsigned int v119;
  uint64_t v120;
  int v121;
  _BYTE *v122;
  char *v123;
  int v124;
  unsigned int v125;
  uint64_t v126;
  _BYTE *v127;
  char *v128;
  int v129;
  unsigned int v130;
  uint64_t v131;
  _BYTE *v132;
  char *v133;
  int v134;
  unsigned int v135;
  uint64_t v136;
  unsigned __int8 *v137;
  char *v138;
  int v139;
  unsigned int v140;
  uint64_t v141;
  unsigned __int8 *v142;
  char *v143;
  int v144;
  unsigned int v145;
  uint64_t v146;
  unsigned __int8 *v147;
  char *v148;
  int v149;
  unsigned int v150;
  uint64_t v151;
  unsigned __int8 *v152;
  char *v153;
  int v154;
  unsigned int v155;
  uint64_t v156;
  unsigned __int8 *v157;
  char *v158;
  int v159;
  unsigned int v160;
  uint64_t v161;
  unint64_t *v162;
  unsigned int *v163;
  _DWORD *v164;
  _DWORD *v165;
  _DWORD *v166;
  _DWORD *v167;
  _DWORD *v168;
  _DWORD *v169;
  _DWORD *v170;
  _DWORD *v171;
  _DWORD *v172;
  _DWORD *v173;
  _DWORD *v174;
  unsigned int v175;
  unsigned int v176[14];

  v171 = (_DWORD *)((char *)this + 304);
  v172 = (_DWORD *)((char *)this + 280);
  v173 = (_DWORD *)((char *)this + 256);
  v174 = (_DWORD *)((char *)this + 232);
  v4 = (_DWORD *)((char *)this + 208);
  v5 = (_DWORD *)((char *)this + 184);
  v6 = (_DWORD *)((char *)this + 160);
  v7 = (_DWORD *)((char *)this + 136);
  v170 = (_DWORD *)((char *)this + 88);
  v168 = (_DWORD *)((char *)this + 120);
  v169 = (_DWORD *)((char *)this + 72);
  v166 = (_DWORD *)((char *)this + 104);
  v167 = (_DWORD *)((char *)this + 48);
  v164 = (_DWORD *)((char *)this + 16);
  v165 = (_DWORD *)((char *)this + 32);
  v162 = (unint64_t *)((char *)this + 8);
  v163 = (unsigned int *)((char *)this + 324);
LABEL_2:
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v162);
          if (!(_DWORD)result)
            return result;
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v162 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 83) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 24)
        {
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
          goto LABEL_102;
        }
        continue;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
LABEL_102:
        v176[0] = 0;
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176);
          if (!(_DWORD)result)
            return result;
          v41 = v176[0];
        }
        else
        {
          v41 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        if (v41 < 2 || v41 == 255)
        {
          *((_DWORD *)this + 83) |= 2u;
          *((_DWORD *)this + 16) = v41;
        }
        v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v42 >= v15)
          continue;
        v43 = *v42;
        goto LABEL_131;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v16 = (char *)*((_QWORD *)a2 + 1);
            v15 = *((_QWORD *)a2 + 2);
            goto LABEL_112;
          }
          goto LABEL_64;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v164);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v42 >= v15)
            goto LABEL_2;
          v43 = *v42;
          if (v43 == 40)
            goto LABEL_153;
LABEL_131:
          if (v43 != 32)
            goto LABEL_2;
          v16 = (char *)(v42 + 1);
          *((_QWORD *)a2 + 1) = v16;
LABEL_112:
          v175 = 0;
          if ((unint64_t)v16 >= v15 || *v16 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
          }
          else
          {
            v175 = *v16;
            *((_QWORD *)a2 + 1) = v16 + 1;
          }
          v44 = *((_DWORD *)this + 6);
          if (v44 == *((_DWORD *)this + 7))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v164, v44 + 1);
            v44 = *((_DWORD *)this + 6);
          }
          v45 = v175;
          v46 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v44 + 1;
          *(_DWORD *)(v46 + 4 * v44) = v45;
          v47 = *((_DWORD *)this + 7) - *((_DWORD *)this + 6);
          if (v47 >= 1)
          {
            v48 = v47 + 1;
            do
            {
              v49 = (_BYTE *)*((_QWORD *)a2 + 1);
              v50 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v49 >= v50 || *v49 != 32)
                break;
              *((_QWORD *)a2 + 1) = v49 + 1;
              if ((unint64_t)(v49 + 1) >= v50 || (char)v49[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
              }
              else
              {
                v175 = v49[1];
                *((_QWORD *)a2 + 1) = v49 + 2;
              }
              v51 = *((_DWORD *)this + 6);
              if (v51 >= *((_DWORD *)this + 7))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                v51 = *((_DWORD *)this + 6);
              }
              v52 = v175;
              v53 = *((_QWORD *)this + 2);
              *((_DWORD *)this + 6) = v51 + 1;
              *(_DWORD *)(v53 + 4 * v51) = v52;
              --v48;
            }
            while (v48 > 1);
          }
        }
      case 5u:
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v17 = (char *)*((_QWORD *)a2 + 1);
            v15 = *((_QWORD *)a2 + 2);
            goto LABEL_133;
          }
          goto LABEL_64;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v165);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v42 >= v15)
            goto LABEL_2;
          v64 = *v42;
          if (v64 == 48)
            goto LABEL_174;
          if (v64 != 40)
            goto LABEL_2;
LABEL_153:
          v17 = (char *)(v42 + 1);
          *((_QWORD *)a2 + 1) = v17;
LABEL_133:
          v175 = 0;
          if ((unint64_t)v17 >= v15 || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
          }
          else
          {
            v175 = *v17;
            *((_QWORD *)a2 + 1) = v17 + 1;
          }
          v54 = *((_DWORD *)this + 10);
          if (v54 == *((_DWORD *)this + 11))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v165, v54 + 1);
            v54 = *((_DWORD *)this + 10);
          }
          v55 = v175;
          v56 = *((_QWORD *)this + 4);
          *((_DWORD *)this + 10) = v54 + 1;
          *(_DWORD *)(v56 + 4 * v54) = v55;
          v57 = *((_DWORD *)this + 11) - *((_DWORD *)this + 10);
          if (v57 >= 1)
          {
            v58 = v57 + 1;
            do
            {
              v59 = (_BYTE *)*((_QWORD *)a2 + 1);
              v60 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v59 >= v60 || *v59 != 40)
                break;
              *((_QWORD *)a2 + 1) = v59 + 1;
              if ((unint64_t)(v59 + 1) >= v60 || (char)v59[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
              }
              else
              {
                v175 = v59[1];
                *((_QWORD *)a2 + 1) = v59 + 2;
              }
              v61 = *((_DWORD *)this + 10);
              if (v61 >= *((_DWORD *)this + 11))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                v61 = *((_DWORD *)this + 10);
              }
              v62 = v175;
              v63 = *((_QWORD *)this + 4);
              *((_DWORD *)this + 10) = v61 + 1;
              *(_DWORD *)(v63 + 4 * v61) = v62;
              --v58;
            }
            while (v58 > 1);
          }
        }
      case 6u:
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v18 = (char *)*((_QWORD *)a2 + 1);
            v15 = *((_QWORD *)a2 + 2);
            goto LABEL_154;
          }
          goto LABEL_64;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v167);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v42 >= v15)
            goto LABEL_2;
          v75 = *v42;
          if (v75 == 56)
            goto LABEL_195;
          if (v75 != 48)
            goto LABEL_2;
LABEL_174:
          v18 = (char *)(v42 + 1);
          *((_QWORD *)a2 + 1) = v18;
LABEL_154:
          v175 = 0;
          if ((unint64_t)v18 >= v15 || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
          }
          else
          {
            v175 = *v18;
            *((_QWORD *)a2 + 1) = v18 + 1;
          }
          v65 = *((_DWORD *)this + 14);
          if (v65 == *((_DWORD *)this + 15))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v167, v65 + 1);
            v65 = *((_DWORD *)this + 14);
          }
          v66 = v175;
          v67 = *((_QWORD *)this + 6);
          *((_DWORD *)this + 14) = v65 + 1;
          *(_DWORD *)(v67 + 4 * v65) = v66;
          v68 = *((_DWORD *)this + 15) - *((_DWORD *)this + 14);
          if (v68 >= 1)
          {
            v69 = v68 + 1;
            do
            {
              v70 = (_BYTE *)*((_QWORD *)a2 + 1);
              v71 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v70 >= v71 || *v70 != 48)
                break;
              *((_QWORD *)a2 + 1) = v70 + 1;
              if ((unint64_t)(v70 + 1) >= v71 || (char)v70[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
              }
              else
              {
                v175 = v70[1];
                *((_QWORD *)a2 + 1) = v70 + 2;
              }
              v72 = *((_DWORD *)this + 14);
              if (v72 >= *((_DWORD *)this + 15))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                v72 = *((_DWORD *)this + 14);
              }
              v73 = v175;
              v74 = *((_QWORD *)this + 6);
              *((_DWORD *)this + 14) = v72 + 1;
              *(_DWORD *)(v74 + 4 * v72) = v73;
              --v69;
            }
            while (v69 > 1);
          }
        }
      case 7u:
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v19 = (char *)*((_QWORD *)a2 + 1);
            v15 = *((_QWORD *)a2 + 2);
            goto LABEL_175;
          }
          goto LABEL_64;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v169);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v42 >= v15)
            goto LABEL_2;
          v86 = *v42;
          if (v86 == 64)
            goto LABEL_216;
          if (v86 != 56)
            goto LABEL_2;
LABEL_195:
          v19 = (char *)(v42 + 1);
          *((_QWORD *)a2 + 1) = v19;
LABEL_175:
          v175 = 0;
          if ((unint64_t)v19 >= v15 || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
          }
          else
          {
            v175 = *v19;
            *((_QWORD *)a2 + 1) = v19 + 1;
          }
          v76 = *((_DWORD *)this + 20);
          if (v76 == *((_DWORD *)this + 21))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v169, v76 + 1);
            v76 = *((_DWORD *)this + 20);
          }
          v77 = v175;
          v78 = *((_QWORD *)this + 9);
          *((_DWORD *)this + 20) = v76 + 1;
          *(_DWORD *)(v78 + 4 * v76) = v77;
          v79 = *((_DWORD *)this + 21) - *((_DWORD *)this + 20);
          if (v79 >= 1)
          {
            v80 = v79 + 1;
            do
            {
              v81 = (_BYTE *)*((_QWORD *)a2 + 1);
              v82 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v81 >= v82 || *v81 != 56)
                break;
              *((_QWORD *)a2 + 1) = v81 + 1;
              if ((unint64_t)(v81 + 1) >= v82 || (char)v81[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
              }
              else
              {
                v175 = v81[1];
                *((_QWORD *)a2 + 1) = v81 + 2;
              }
              v83 = *((_DWORD *)this + 20);
              if (v83 >= *((_DWORD *)this + 21))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                v83 = *((_DWORD *)this + 20);
              }
              v84 = v175;
              v85 = *((_QWORD *)this + 9);
              *((_DWORD *)this + 20) = v83 + 1;
              *(_DWORD *)(v85 + 4 * v83) = v84;
              --v80;
            }
            while (v80 > 1);
          }
        }
      case 8u:
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v20 = (char *)*((_QWORD *)a2 + 1);
            v15 = *((_QWORD *)a2 + 2);
            goto LABEL_196;
          }
          goto LABEL_64;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v170);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v42 >= v15)
            goto LABEL_2;
          v97 = *v42;
          if (v97 == 72)
          {
            v21 = v42 + 1;
            *((_QWORD *)a2 + 1) = v21;
LABEL_218:
            v176[0] = 0;
            if ((unint64_t)v21 >= v15 || (char)*v21 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176);
              if (!(_DWORD)result)
                return result;
              v98 = v176[0];
              v99 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v15 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v98 = *v21;
              v99 = v21 + 1;
              *((_QWORD *)a2 + 1) = v99;
            }
            *((_DWORD *)this + 17) = v98;
            *((_DWORD *)this + 83) |= 0x80u;
            if ((unint64_t)v99 < v15)
            {
              v100 = *v99;
              goto LABEL_244;
            }
            goto LABEL_2;
          }
          if (v97 != 64)
            goto LABEL_2;
LABEL_216:
          v20 = (char *)(v42 + 1);
          *((_QWORD *)a2 + 1) = v20;
LABEL_196:
          v175 = 0;
          if ((unint64_t)v20 >= v15 || *v20 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
          }
          else
          {
            v175 = *v20;
            *((_QWORD *)a2 + 1) = v20 + 1;
          }
          v87 = *((_DWORD *)this + 24);
          if (v87 == *((_DWORD *)this + 25))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v170, v87 + 1);
            v87 = *((_DWORD *)this + 24);
          }
          v88 = v175;
          v89 = *((_QWORD *)this + 11);
          *((_DWORD *)this + 24) = v87 + 1;
          *(_DWORD *)(v89 + 4 * v87) = v88;
          v90 = *((_DWORD *)this + 25) - *((_DWORD *)this + 24);
          if (v90 >= 1)
          {
            v91 = v90 + 1;
            do
            {
              v92 = (_BYTE *)*((_QWORD *)a2 + 1);
              v93 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v92 >= v93 || *v92 != 64)
                break;
              *((_QWORD *)a2 + 1) = v92 + 1;
              if ((unint64_t)(v92 + 1) >= v93 || (char)v92[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
              }
              else
              {
                v175 = v92[1];
                *((_QWORD *)a2 + 1) = v92 + 2;
              }
              v94 = *((_DWORD *)this + 24);
              if (v94 >= *((_DWORD *)this + 25))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                v94 = *((_DWORD *)this + 24);
              }
              v95 = v175;
              v96 = *((_QWORD *)this + 11);
              *((_DWORD *)this + 24) = v94 + 1;
              *(_DWORD *)(v96 + 4 * v94) = v95;
              --v91;
            }
            while (v91 > 1);
          }
        }
      case 9u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v21 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_218;
      case 0xAu:
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v22 = (char *)*((_QWORD *)a2 + 1);
            v15 = *((_QWORD *)a2 + 2);
            goto LABEL_225;
          }
          goto LABEL_64;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v166);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v99 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v99 >= v15)
            goto LABEL_2;
          v100 = *v99;
          if (v100 == 88)
            goto LABEL_266;
LABEL_244:
          if (v100 != 80)
            goto LABEL_2;
          v22 = (char *)(v99 + 1);
          *((_QWORD *)a2 + 1) = v22;
LABEL_225:
          v175 = 0;
          if ((unint64_t)v22 >= v15 || *v22 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
          }
          else
          {
            v175 = *v22;
            *((_QWORD *)a2 + 1) = v22 + 1;
          }
          v101 = *((_DWORD *)this + 28);
          if (v101 == *((_DWORD *)this + 29))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v166, v101 + 1);
            v101 = *((_DWORD *)this + 28);
          }
          v102 = v175;
          v103 = *((_QWORD *)this + 13);
          *((_DWORD *)this + 28) = v101 + 1;
          *(_DWORD *)(v103 + 4 * v101) = v102;
          v104 = *((_DWORD *)this + 29) - *((_DWORD *)this + 28);
          if (v104 >= 1)
          {
            v105 = v104 + 1;
            do
            {
              v106 = (_BYTE *)*((_QWORD *)a2 + 1);
              v107 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v106 >= v107 || *v106 != 80)
                break;
              *((_QWORD *)a2 + 1) = v106 + 1;
              if ((unint64_t)(v106 + 1) >= v107 || (char)v106[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
              }
              else
              {
                v175 = v106[1];
                *((_QWORD *)a2 + 1) = v106 + 2;
              }
              v108 = *((_DWORD *)this + 28);
              if (v108 >= *((_DWORD *)this + 29))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                v108 = *((_DWORD *)this + 28);
              }
              v109 = v175;
              v110 = *((_QWORD *)this + 13);
              *((_DWORD *)this + 28) = v108 + 1;
              *(_DWORD *)(v110 + 4 * v108) = v109;
              --v105;
            }
            while (v105 > 1);
          }
        }
      case 0xBu:
        v10 = TagFallback & 7;
        if (v10 == 2)
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, v168);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v99 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
            v15 = *((_QWORD *)a2 + 2);
            if ((unint64_t)v99 >= v15)
              goto LABEL_2;
            v121 = *v99;
            if (v121 == 96)
            {
              v24 = (char *)(v99 + 1);
              *((_QWORD *)a2 + 1) = v24;
LABEL_268:
              if ((unint64_t)v24 >= v15 || *v24 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v163);
                if (!(_DWORD)result)
                  return result;
                v122 = (_BYTE *)*((_QWORD *)a2 + 1);
                v15 = *((_QWORD *)a2 + 2);
              }
              else
              {
                *v163 = *v24;
                v122 = v24 + 1;
                *((_QWORD *)a2 + 1) = v122;
              }
              *((_DWORD *)this + 83) |= 0x400u;
              if ((unint64_t)v122 < v15 && *v122 == 106)
              {
                v25 = v122 + 1;
                *((_QWORD *)a2 + 1) = v25;
                goto LABEL_276;
              }
              goto LABEL_2;
            }
            if (v121 != 88)
              goto LABEL_2;
LABEL_266:
            v23 = (char *)(v99 + 1);
            *((_QWORD *)a2 + 1) = v23;
LABEL_246:
            v175 = 0;
            if ((unint64_t)v23 >= v15 || *v23 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
            }
            else
            {
              v175 = *v23;
              *((_QWORD *)a2 + 1) = v23 + 1;
            }
            v111 = *((_DWORD *)this + 32);
            if (v111 == *((_DWORD *)this + 33))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v168, v111 + 1);
              v111 = *((_DWORD *)this + 32);
            }
            v112 = v175;
            v113 = *((_QWORD *)this + 15);
            *((_DWORD *)this + 32) = v111 + 1;
            *(_DWORD *)(v113 + 4 * v111) = v112;
            v114 = *((_DWORD *)this + 33) - *((_DWORD *)this + 32);
            if (v114 >= 1)
            {
              v115 = v114 + 1;
              do
              {
                v116 = (_BYTE *)*((_QWORD *)a2 + 1);
                v117 = *((_QWORD *)a2 + 2);
                if ((unint64_t)v116 >= v117 || *v116 != 88)
                  break;
                *((_QWORD *)a2 + 1) = v116 + 1;
                if ((unint64_t)(v116 + 1) >= v117 || (char)v116[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
                }
                else
                {
                  v175 = v116[1];
                  *((_QWORD *)a2 + 1) = v116 + 2;
                }
                v118 = *((_DWORD *)this + 32);
                if (v118 >= *((_DWORD *)this + 33))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                  v118 = *((_DWORD *)this + 32);
                }
                v119 = v175;
                v120 = *((_QWORD *)this + 15);
                *((_DWORD *)this + 32) = v118 + 1;
                *(_DWORD *)(v120 + 4 * v118) = v119;
                --v115;
              }
              while (v115 > 1);
            }
          }
        }
        if ((TagFallback & 7) == 0)
        {
          v23 = (char *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
          goto LABEL_246;
        }
LABEL_64:
        if (v10 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      case 0xCu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_268;
      case 0xDu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v10 != 2)
            goto LABEL_64;
          v25 = (char *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
LABEL_276:
          v176[0] = 0;
          if ((unint64_t)v25 >= v15 || *v25 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0;
          }
          else
          {
            v176[0] = *v25;
            *((_QWORD *)a2 + 1) = v25 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v175 = 0;
            v123 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v123 >= *((_QWORD *)a2 + 2) || *v123 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
            }
            else
            {
              v175 = *v123;
              *((_QWORD *)a2 + 1) = v123 + 1;
            }
            v124 = *((_DWORD *)this + 36);
            if (v124 == *((_DWORD *)this + 37))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v7, v124 + 1);
              v124 = *((_DWORD *)this + 36);
            }
            v125 = v175;
            v126 = *((_QWORD *)this + 17);
            *((_DWORD *)this + 36) = v124 + 1;
            *(_DWORD *)(v126 + 4 * v124) = v125;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(1, 0x6Au, a2, v7);
          if (!(_DWORD)result)
            return result;
        }
        v127 = (_BYTE *)*((_QWORD *)a2 + 1);
        v27 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v127 >= v27 || *v127 != 114)
          continue;
        v26 = v127 + 1;
        *((_QWORD *)a2 + 1) = v26;
        goto LABEL_293;
      case 0xEu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v10 != 2)
            goto LABEL_64;
          v26 = (char *)*((_QWORD *)a2 + 1);
          v27 = *((_QWORD *)a2 + 2);
LABEL_293:
          v176[0] = 0;
          if ((unint64_t)v26 >= v27 || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0;
          }
          else
          {
            v176[0] = *v26;
            *((_QWORD *)a2 + 1) = v26 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v175 = 0;
            v128 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v128 >= *((_QWORD *)a2 + 2) || *v128 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
            }
            else
            {
              v175 = *v128;
              *((_QWORD *)a2 + 1) = v128 + 1;
            }
            v129 = *((_DWORD *)this + 42);
            if (v129 == *((_DWORD *)this + 43))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v6, v129 + 1);
              v129 = *((_DWORD *)this + 42);
            }
            v130 = v175;
            v131 = *((_QWORD *)this + 20);
            *((_DWORD *)this + 42) = v129 + 1;
            *(_DWORD *)(v131 + 4 * v129) = v130;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(1, 0x72u, a2, v6);
          if (!(_DWORD)result)
            return result;
        }
        v132 = (_BYTE *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v132 >= v29 || *v132 != 122)
          continue;
        v28 = v132 + 1;
        *((_QWORD *)a2 + 1) = v28;
        goto LABEL_310;
      case 0xFu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v10 != 2)
            goto LABEL_64;
          v28 = (char *)*((_QWORD *)a2 + 1);
          v29 = *((_QWORD *)a2 + 2);
LABEL_310:
          v176[0] = 0;
          if ((unint64_t)v28 >= v29 || *v28 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0;
          }
          else
          {
            v176[0] = *v28;
            *((_QWORD *)a2 + 1) = v28 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v175 = 0;
            v133 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v133 >= *((_QWORD *)a2 + 2) || *v133 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
            }
            else
            {
              v175 = *v133;
              *((_QWORD *)a2 + 1) = v133 + 1;
            }
            v134 = *((_DWORD *)this + 48);
            if (v134 == *((_DWORD *)this + 49))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v5, v134 + 1);
              v134 = *((_DWORD *)this + 48);
            }
            v135 = v175;
            v136 = *((_QWORD *)this + 23);
            *((_DWORD *)this + 48) = v134 + 1;
            *(_DWORD *)(v136 + 4 * v134) = v135;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(1, 0x7Au, a2, v5);
          if (!(_DWORD)result)
            return result;
        }
        v137 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v30 = *((_QWORD *)a2 + 2);
        if ((int)v30 - (int)v137 < 2 || *v137 != 130 || v137[1] != 1)
          continue;
        v31 = (char *)(v137 + 2);
        *((_QWORD *)a2 + 1) = v31;
        goto LABEL_328;
      case 0x10u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v10 != 2)
            goto LABEL_64;
          v31 = (char *)*((_QWORD *)a2 + 1);
          v30 = *((_QWORD *)a2 + 2);
LABEL_328:
          v176[0] = 0;
          if ((unint64_t)v31 >= v30 || *v31 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0;
          }
          else
          {
            v176[0] = *v31;
            *((_QWORD *)a2 + 1) = v31 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v175 = 0;
            v138 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v138 >= *((_QWORD *)a2 + 2) || *v138 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
            }
            else
            {
              v175 = *v138;
              *((_QWORD *)a2 + 1) = v138 + 1;
            }
            v139 = *((_DWORD *)this + 54);
            if (v139 == *((_DWORD *)this + 55))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v4, v139 + 1);
              v139 = *((_DWORD *)this + 54);
            }
            v140 = v175;
            v141 = *((_QWORD *)this + 26);
            *((_DWORD *)this + 54) = v139 + 1;
            *(_DWORD *)(v141 + 4 * v139) = v140;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(2, 0x82u, a2, v4);
          if (!(_DWORD)result)
            return result;
        }
        v142 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v32 = *((_QWORD *)a2 + 2);
        if ((int)v32 - (int)v142 < 2 || *v142 != 138 || v142[1] != 1)
          continue;
        v33 = (char *)(v142 + 2);
        *((_QWORD *)a2 + 1) = v33;
        goto LABEL_346;
      case 0x11u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v10 != 2)
            goto LABEL_64;
          v33 = (char *)*((_QWORD *)a2 + 1);
          v32 = *((_QWORD *)a2 + 2);
LABEL_346:
          v176[0] = 0;
          if ((unint64_t)v33 >= v32 || *v33 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0;
          }
          else
          {
            v176[0] = *v33;
            *((_QWORD *)a2 + 1) = v33 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v175 = 0;
            v143 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v143 >= *((_QWORD *)a2 + 2) || *v143 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
            }
            else
            {
              v175 = *v143;
              *((_QWORD *)a2 + 1) = v143 + 1;
            }
            v144 = *((_DWORD *)this + 60);
            if (v144 == *((_DWORD *)this + 61))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v174, v144 + 1);
              v144 = *((_DWORD *)this + 60);
            }
            v145 = v175;
            v146 = *((_QWORD *)this + 29);
            *((_DWORD *)this + 60) = v144 + 1;
            *(_DWORD *)(v146 + 4 * v144) = v145;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(2, 0x8Au, a2, v174);
          if (!(_DWORD)result)
            return result;
        }
        v147 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v34 = *((_QWORD *)a2 + 2);
        if ((int)v34 - (int)v147 < 2 || *v147 != 146 || v147[1] != 1)
          continue;
        v35 = (char *)(v147 + 2);
        *((_QWORD *)a2 + 1) = v35;
        goto LABEL_364;
      case 0x12u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v10 != 2)
            goto LABEL_64;
          v35 = (char *)*((_QWORD *)a2 + 1);
          v34 = *((_QWORD *)a2 + 2);
LABEL_364:
          v176[0] = 0;
          if ((unint64_t)v35 >= v34 || *v35 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0;
          }
          else
          {
            v176[0] = *v35;
            *((_QWORD *)a2 + 1) = v35 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v175 = 0;
            v148 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v148 >= *((_QWORD *)a2 + 2) || *v148 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
            }
            else
            {
              v175 = *v148;
              *((_QWORD *)a2 + 1) = v148 + 1;
            }
            v149 = *((_DWORD *)this + 66);
            if (v149 == *((_DWORD *)this + 67))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v173, v149 + 1);
              v149 = *((_DWORD *)this + 66);
            }
            v150 = v175;
            v151 = *((_QWORD *)this + 32);
            *((_DWORD *)this + 66) = v149 + 1;
            *(_DWORD *)(v151 + 4 * v149) = v150;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(2, 0x92u, a2, v173);
          if (!(_DWORD)result)
            return result;
        }
        v152 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v36 = *((_QWORD *)a2 + 2);
        if ((int)v36 - (int)v152 < 2 || *v152 != 154 || v152[1] != 1)
          continue;
        v37 = (char *)(v152 + 2);
        *((_QWORD *)a2 + 1) = v37;
        goto LABEL_382;
      case 0x13u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v10 != 2)
            goto LABEL_64;
          v37 = (char *)*((_QWORD *)a2 + 1);
          v36 = *((_QWORD *)a2 + 2);
LABEL_382:
          v176[0] = 0;
          if ((unint64_t)v37 >= v36 || *v37 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0;
          }
          else
          {
            v176[0] = *v37;
            *((_QWORD *)a2 + 1) = v37 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v175 = 0;
            v153 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v153 >= *((_QWORD *)a2 + 2) || *v153 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
            }
            else
            {
              v175 = *v153;
              *((_QWORD *)a2 + 1) = v153 + 1;
            }
            v154 = *((_DWORD *)this + 72);
            if (v154 == *((_DWORD *)this + 73))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v172, v154 + 1);
              v154 = *((_DWORD *)this + 72);
            }
            v155 = v175;
            v156 = *((_QWORD *)this + 35);
            *((_DWORD *)this + 72) = v154 + 1;
            *(_DWORD *)(v156 + 4 * v154) = v155;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(2, 0x9Au, a2, v172);
          if (!(_DWORD)result)
            return result;
        }
        v157 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v38 = *((_QWORD *)a2 + 2);
        if ((int)v38 - (int)v157 < 2 || *v157 != 162 || v157[1] != 1)
          continue;
        v39 = (char *)(v157 + 2);
        *((_QWORD *)a2 + 1) = v39;
        goto LABEL_400;
      case 0x14u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v10 != 2)
            goto LABEL_64;
          v39 = (char *)*((_QWORD *)a2 + 1);
          v38 = *((_QWORD *)a2 + 2);
LABEL_400:
          v176[0] = 0;
          if ((unint64_t)v39 >= v38 || *v39 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0;
          }
          else
          {
            v176[0] = *v39;
            *((_QWORD *)a2 + 1) = v39 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v175 = 0;
            v158 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v158 >= *((_QWORD *)a2 + 2) || *v158 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0;
            }
            else
            {
              v175 = *v158;
              *((_QWORD *)a2 + 1) = v158 + 1;
            }
            v159 = *((_DWORD *)this + 78);
            if (v159 == *((_DWORD *)this + 79))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(v171, v159 + 1);
              v159 = *((_DWORD *)this + 78);
            }
            v160 = v175;
            v161 = *((_QWORD *)this + 38);
            *((_DWORD *)this + 78) = v159 + 1;
            *(_DWORD *)(v161 + 4 * v159) = v160;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(2, 0xA2u, a2, v171);
          if (!(_DWORD)result)
            return result;
        }
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        continue;
      default:
        v10 = TagFallback & 7;
        goto LABEL_64;
    }
  }
}

void sub_2189FDBC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::MotionElevationAllDay::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = this;
  v6 = *(_DWORD *)(this + 332);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 332);
  }
  if ((v6 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(*(_QWORD *)(v5 + 16) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(*(_QWORD *)(v5 + 32) + 4 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v9++), (uint64_t)a2, a4);
    while (v9 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(*(_QWORD *)(v5 + 72) + 4 * v10++), (uint64_t)a2, a4);
    while (v10 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(*(_QWORD *)(v5 + 88) + 4 * v11++), (uint64_t)a2, a4);
    while (v11 < *(int *)(v5 + 96));
  }
  if ((*(_BYTE *)(v5 + 332) & 0x80) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  if (*(int *)(v5 + 112) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(*(_QWORD *)(v5 + 104) + 4 * v12++), (uint64_t)a2, a4);
    while (v12 < *(int *)(v5 + 112));
  }
  if (*(int *)(v5 + 128) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(*(_QWORD *)(v5 + 120) + 4 * v13++), (uint64_t)a2, a4);
    while (v13 < *(int *)(v5 + 128));
  }
  if ((*(_BYTE *)(v5 + 333) & 4) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 324), (uint64_t)a2, a4);
  if (*(int *)(v5 + 144) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 144) >= 1)
    {
      v14 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v14;
      }
      while (v14 < *(int *)(v5 + 144));
    }
  }
  if (*(int *)(v5 + 168) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 168) >= 1)
    {
      v15 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v15;
      }
      while (v15 < *(int *)(v5 + 168));
    }
  }
  if (*(int *)(v5 + 192) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 192) >= 1)
    {
      v16 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v16;
      }
      while (v16 < *(int *)(v5 + 192));
    }
  }
  if (*(int *)(v5 + 216) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 216) >= 1)
    {
      v17 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v17;
      }
      while (v17 < *(int *)(v5 + 216));
    }
  }
  if (*(int *)(v5 + 240) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 240) >= 1)
    {
      v18 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v18;
      }
      while (v18 < *(int *)(v5 + 240));
    }
  }
  if (*(int *)(v5 + 264) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 264) >= 1)
    {
      v19 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v19;
      }
      while (v19 < *(int *)(v5 + 264));
    }
  }
  if (*(int *)(v5 + 288) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 288) >= 1)
    {
      v20 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v20;
      }
      while (v20 < *(int *)(v5 + 288));
    }
  }
  if (*(int *)(v5 + 312) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 312) >= 1)
    {
      v21 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v21;
      }
      while (v21 < *(int *)(v5 + 312));
    }
  }
  return this;
}

uint64_t awd::metrics::MotionElevationAllDay::ByteSize(awd::metrics::MotionElevationAllDay *this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v56;
  int v57;
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v62;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v69;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v70;
  int v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v76;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v77;
  int v78;
  int v79;
  int v80;
  int v81;
  uint64_t v82;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v83;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v84;
  int v85;
  int v86;
  int v87;
  int v88;
  uint64_t v89;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v90;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v91;
  int v92;
  int v93;
  int v94;
  int v95;
  uint64_t v96;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v97;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v98;
  int v99;
  int v100;
  uint64_t result;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;

  v2 = *((_DWORD *)this + 83);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    if ((v2 & 0x400) == 0)
      goto LABEL_27;
    goto LABEL_23;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 83);
    if ((v2 & 2) == 0)
      goto LABEL_14;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_14;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 83);
  }
  else
  {
    v5 = 1;
  }
  v3 += v5 + 1;
LABEL_14:
  if ((v2 & 0x80) == 0)
  {
    if ((v2 & 0x400) == 0)
      goto LABEL_27;
    goto LABEL_23;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if ((v6 & 0x80000000) != 0)
  {
    v7 = 10;
  }
  else if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    v2 = *((_DWORD *)this + 83);
  }
  else
  {
    v7 = 1;
  }
  v3 += v7 + 1;
  if ((v2 & 0x400) != 0)
  {
LABEL_23:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 81);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v9 = 1;
    v3 += v9 + 1;
  }
LABEL_27:
  v107 = v3;
  v10 = *((_DWORD *)this + 6);
  if (v10 < 1)
  {
    v12 = 0;
  }
  else
  {
    v11 = 0;
    v12 = 0;
    do
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 2)
                                                                                             + 4 * v11);
      if (v13 >= 0x80)
      {
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
        v10 = *((_DWORD *)this + 6);
      }
      else
      {
        v14 = 1;
      }
      v12 += v14;
      ++v11;
    }
    while (v11 < v10);
  }
  v15 = *((_DWORD *)this + 10);
  if (v15 < 1)
  {
    v17 = 0;
  }
  else
  {
    v16 = 0;
    v17 = 0;
    do
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 4)
                                                                                             + 4 * v16);
      if (v18 >= 0x80)
      {
        v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
        v15 = *((_DWORD *)this + 10);
      }
      else
      {
        v19 = 1;
      }
      v17 += v19;
      ++v16;
    }
    while (v16 < v15);
  }
  v20 = *((_DWORD *)this + 14);
  if (v20 < 1)
  {
    v22 = 0;
  }
  else
  {
    v21 = 0;
    v22 = 0;
    do
    {
      v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 6)
                                                                                             + 4 * v21);
      if (v23 >= 0x80)
      {
        v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
        v20 = *((_DWORD *)this + 14);
      }
      else
      {
        v24 = 1;
      }
      v22 += v24;
      ++v21;
    }
    while (v21 < v20);
  }
  v25 = *((_DWORD *)this + 20);
  if (v25 < 1)
  {
    v27 = 0;
  }
  else
  {
    v26 = 0;
    v27 = 0;
    do
    {
      v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 9)
                                                                                             + 4 * v26);
      if (v28 >= 0x80)
      {
        v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
        v25 = *((_DWORD *)this + 20);
      }
      else
      {
        v29 = 1;
      }
      v27 += v29;
      ++v26;
    }
    while (v26 < v25);
  }
  v105 = v15;
  v106 = v10;
  v30 = *((_DWORD *)this + 24);
  if (v30 < 1)
  {
    v32 = 0;
  }
  else
  {
    v31 = 0;
    v32 = 0;
    do
    {
      v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 11)
                                                                                             + 4 * v31);
      if (v33 >= 0x80)
      {
        v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
        v30 = *((_DWORD *)this + 24);
      }
      else
      {
        v34 = 1;
      }
      v32 += v34;
      ++v31;
    }
    while (v31 < v30);
  }
  v103 = v25;
  v104 = v20;
  v35 = *((_DWORD *)this + 28);
  if (v35 < 1)
  {
    v37 = 0;
  }
  else
  {
    v36 = 0;
    v37 = 0;
    do
    {
      v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 13)
                                                                                             + 4 * v36);
      if (v38 >= 0x80)
      {
        v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
        v35 = *((_DWORD *)this + 28);
      }
      else
      {
        v39 = 1;
      }
      v37 += v39;
      ++v36;
    }
    while (v36 < v35);
  }
  v102 = v30;
  v40 = *((_DWORD *)this + 32);
  if (v40 < 1)
  {
    v42 = 0;
  }
  else
  {
    v41 = 0;
    v42 = 0;
    do
    {
      v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 15)
                                                                                             + 4 * v41);
      if (v43 >= 0x80)
      {
        v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
        v40 = *((_DWORD *)this + 32);
      }
      else
      {
        v44 = 1;
      }
      v42 += v44;
      ++v41;
    }
    while (v41 < v40);
  }
  v45 = v12 + v107 + v106 + v17 + v105 + v22 + v104 + v27 + v103 + v32 + v102 + v37 + v35 + v42 + v40;
  v46 = *((_DWORD *)this + 36);
  if (v46 < 1)
  {
    LODWORD(v48) = 0;
  }
  else
  {
    v47 = 0;
    LODWORD(v48) = 0;
    do
    {
      v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 17)
                                                                                             + 4 * v47);
      if (v49 >= 0x80)
      {
        v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
        v46 = *((_DWORD *)this + 36);
      }
      else
      {
        v50 = 1;
      }
      v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v50 + (_DWORD)v48);
      ++v47;
    }
    while (v47 < v46);
    if ((int)v48 > 0)
    {
      if (v48 >= 0x80)
        v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48);
      else
        v51 = 1;
      v45 += v51 + 1;
    }
  }
  *((_DWORD *)this + 38) = (_DWORD)v48;
  v52 = v45 + (_DWORD)v48;
  v53 = *((_DWORD *)this + 42);
  if (v53 < 1)
  {
    LODWORD(v55) = 0;
  }
  else
  {
    v54 = 0;
    LODWORD(v55) = 0;
    do
    {
      v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 20)
                                                                                             + 4 * v54);
      if (v56 >= 0x80)
      {
        v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56);
        v53 = *((_DWORD *)this + 42);
      }
      else
      {
        v57 = 1;
      }
      v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v57 + (_DWORD)v55);
      ++v54;
    }
    while (v54 < v53);
    if ((int)v55 > 0)
    {
      if (v55 >= 0x80)
        v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
      else
        v58 = 1;
      v52 += v58 + 1;
    }
  }
  *((_DWORD *)this + 44) = (_DWORD)v55;
  v59 = v52 + (_DWORD)v55;
  v60 = *((_DWORD *)this + 48);
  if (v60 < 1)
  {
    LODWORD(v62) = 0;
  }
  else
  {
    v61 = 0;
    LODWORD(v62) = 0;
    do
    {
      v63 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 23)
                                                                                             + 4 * v61);
      if (v63 >= 0x80)
      {
        v64 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v63);
        v60 = *((_DWORD *)this + 48);
      }
      else
      {
        v64 = 1;
      }
      v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v64 + (_DWORD)v62);
      ++v61;
    }
    while (v61 < v60);
    if ((int)v62 > 0)
    {
      if (v62 >= 0x80)
        v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62);
      else
        v65 = 1;
      v59 += v65 + 1;
    }
  }
  *((_DWORD *)this + 50) = (_DWORD)v62;
  v66 = v59 + (_DWORD)v62;
  v67 = *((_DWORD *)this + 54);
  if (v67 < 1)
  {
    LODWORD(v69) = 0;
  }
  else
  {
    v68 = 0;
    LODWORD(v69) = 0;
    do
    {
      v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 26)
                                                                                             + 4 * v68);
      if (v70 >= 0x80)
      {
        v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70);
        v67 = *((_DWORD *)this + 54);
      }
      else
      {
        v71 = 1;
      }
      v69 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v71 + (_DWORD)v69);
      ++v68;
    }
    while (v68 < v67);
    if ((int)v69 > 0)
    {
      if (v69 >= 0x80)
        v72 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v69);
      else
        v72 = 1;
      v66 += v72 + 2;
    }
  }
  *((_DWORD *)this + 56) = (_DWORD)v69;
  v73 = v66 + (_DWORD)v69;
  v74 = *((_DWORD *)this + 60);
  if (v74 < 1)
  {
    LODWORD(v76) = 0;
  }
  else
  {
    v75 = 0;
    LODWORD(v76) = 0;
    do
    {
      v77 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 29)
                                                                                             + 4 * v75);
      if (v77 >= 0x80)
      {
        v78 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v77);
        v74 = *((_DWORD *)this + 60);
      }
      else
      {
        v78 = 1;
      }
      v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v78 + (_DWORD)v76);
      ++v75;
    }
    while (v75 < v74);
    if ((int)v76 > 0)
    {
      if (v76 >= 0x80)
        v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v76) + 2;
      else
        v79 = 3;
      v73 += v79;
    }
  }
  *((_DWORD *)this + 62) = (_DWORD)v76;
  v80 = v73 + (_DWORD)v76;
  v81 = *((_DWORD *)this + 66);
  if (v81 < 1)
  {
    LODWORD(v83) = 0;
  }
  else
  {
    v82 = 0;
    LODWORD(v83) = 0;
    do
    {
      v84 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 32)
                                                                                             + 4 * v82);
      if (v84 >= 0x80)
      {
        v85 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v84);
        v81 = *((_DWORD *)this + 66);
      }
      else
      {
        v85 = 1;
      }
      v83 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v85 + (_DWORD)v83);
      ++v82;
    }
    while (v82 < v81);
    if ((int)v83 > 0)
    {
      if (v83 >= 0x80)
        v86 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v83) + 2;
      else
        v86 = 3;
      v80 += v86;
    }
  }
  *((_DWORD *)this + 68) = (_DWORD)v83;
  v87 = v80 + (_DWORD)v83;
  v88 = *((_DWORD *)this + 72);
  if (v88 < 1)
  {
    LODWORD(v90) = 0;
  }
  else
  {
    v89 = 0;
    LODWORD(v90) = 0;
    do
    {
      v91 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 35)
                                                                                             + 4 * v89);
      if (v91 >= 0x80)
      {
        v92 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v91);
        v88 = *((_DWORD *)this + 72);
      }
      else
      {
        v92 = 1;
      }
      v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v92 + (_DWORD)v90);
      ++v89;
    }
    while (v89 < v88);
    if ((int)v90 > 0)
    {
      if (v90 >= 0x80)
        v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v90) + 2;
      else
        v93 = 3;
      v87 += v93;
    }
  }
  *((_DWORD *)this + 74) = (_DWORD)v90;
  v94 = v87 + (_DWORD)v90;
  v95 = *((_DWORD *)this + 78);
  if (v95 < 1)
  {
    LODWORD(v97) = 0;
  }
  else
  {
    v96 = 0;
    LODWORD(v97) = 0;
    do
    {
      v98 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 38)
                                                                                             + 4 * v96);
      if (v98 >= 0x80)
      {
        v99 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v98);
        v95 = *((_DWORD *)this + 78);
      }
      else
      {
        v99 = 1;
      }
      v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v99 + (_DWORD)v97);
      ++v96;
    }
    while (v96 < v95);
    if ((int)v97 > 0)
    {
      if (v97 >= 0x80)
        v100 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v97) + 2;
      else
        v100 = 3;
      v94 += v100;
    }
  }
  *((_DWORD *)this + 80) = (_DWORD)v97;
  result = (v94 + (_DWORD)v97);
  *((_DWORD *)this + 82) = result;
  return result;
}

void awd::metrics::MotionElevationAllDay::CheckTypeAndMergeFrom(awd::metrics::MotionElevationAllDay *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionElevationAllDay::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionElevationAllDay::CopyFrom(awd::metrics::MotionElevationAllDay *this, const awd::metrics::MotionElevationAllDay *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionElevationAllDay *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionElevationAllDay::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionElevationAllDay::IsInitialized(awd::metrics::MotionElevationAllDay *this)
{
  return 1;
}

double awd::metrics::MotionElevationAllDay::Swap(awd::metrics::MotionElevationAllDay *this, awd::metrics::MotionElevationAllDay *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double result;
  uint64_t v49;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    v3 = *((_QWORD *)this + 1);
    v4 = *((_QWORD *)this + 2);
    v5 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v5;
    v6 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 1) = v3;
    *((_QWORD *)a2 + 2) = v4;
    v7 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = v6;
    *((_QWORD *)a2 + 3) = v7;
    v8 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    v9 = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 4) = v8;
    v10 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = v9;
    *((_QWORD *)a2 + 5) = v10;
    v11 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    v12 = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 6) = v11;
    v13 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = v12;
    *((_QWORD *)a2 + 7) = v13;
    v14 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    v15 = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 9) = v14;
    v16 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v15;
    *((_QWORD *)a2 + 10) = v16;
    v17 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    v18 = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 11) = v17;
    v19 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v18;
    *((_QWORD *)a2 + 12) = v19;
    LODWORD(v17) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v17;
    v20 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    v21 = *((_QWORD *)a2 + 14);
    *((_QWORD *)a2 + 13) = v20;
    v22 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v21;
    *((_QWORD *)a2 + 14) = v22;
    v23 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    v24 = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 15) = v23;
    v25 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = v24;
    *((_QWORD *)a2 + 16) = v25;
    LODWORD(v23) = *((_DWORD *)this + 81);
    *((_DWORD *)this + 81) = *((_DWORD *)a2 + 81);
    *((_DWORD *)a2 + 81) = v23;
    v26 = *((_QWORD *)this + 17);
    *((_QWORD *)this + 17) = *((_QWORD *)a2 + 17);
    v27 = *((_QWORD *)a2 + 18);
    *((_QWORD *)a2 + 17) = v26;
    v28 = *((_QWORD *)this + 18);
    *((_QWORD *)this + 18) = v27;
    *((_QWORD *)a2 + 18) = v28;
    v29 = *((_QWORD *)this + 20);
    *((_QWORD *)this + 20) = *((_QWORD *)a2 + 20);
    v30 = *((_QWORD *)a2 + 21);
    *((_QWORD *)a2 + 20) = v29;
    v31 = *((_QWORD *)this + 21);
    *((_QWORD *)this + 21) = v30;
    *((_QWORD *)a2 + 21) = v31;
    v32 = *((_QWORD *)this + 23);
    *((_QWORD *)this + 23) = *((_QWORD *)a2 + 23);
    v33 = *((_QWORD *)a2 + 24);
    *((_QWORD *)a2 + 23) = v32;
    v34 = *((_QWORD *)this + 24);
    *((_QWORD *)this + 24) = v33;
    *((_QWORD *)a2 + 24) = v34;
    v35 = *((_QWORD *)this + 26);
    *((_QWORD *)this + 26) = *((_QWORD *)a2 + 26);
    v36 = *((_QWORD *)a2 + 27);
    *((_QWORD *)a2 + 26) = v35;
    v37 = *((_QWORD *)this + 27);
    *((_QWORD *)this + 27) = v36;
    *((_QWORD *)a2 + 27) = v37;
    v38 = *((_QWORD *)this + 29);
    *((_QWORD *)this + 29) = *((_QWORD *)a2 + 29);
    v39 = *((_QWORD *)a2 + 30);
    *((_QWORD *)a2 + 29) = v38;
    v40 = *((_QWORD *)this + 30);
    *((_QWORD *)this + 30) = v39;
    *((_QWORD *)a2 + 30) = v40;
    v41 = *((_QWORD *)this + 32);
    *((_QWORD *)this + 32) = *((_QWORD *)a2 + 32);
    v42 = *((_QWORD *)a2 + 33);
    *((_QWORD *)a2 + 32) = v41;
    v43 = *((_QWORD *)this + 33);
    *((_QWORD *)this + 33) = v42;
    *((_QWORD *)a2 + 33) = v43;
    v44 = *((_QWORD *)this + 35);
    *((_QWORD *)this + 35) = *((_QWORD *)a2 + 35);
    v45 = *((_QWORD *)a2 + 36);
    *((_QWORD *)a2 + 35) = v44;
    v46 = *((_QWORD *)this + 36);
    *((_QWORD *)this + 36) = v45;
    *((_QWORD *)a2 + 36) = v46;
    v47 = *((_QWORD *)this + 38);
    *((_QWORD *)this + 38) = *((_QWORD *)a2 + 38);
    result = *((double *)a2 + 39);
    *((_QWORD *)a2 + 38) = v47;
    v49 = *((_QWORD *)this + 39);
    *((double *)this + 39) = result;
    *((_QWORD *)a2 + 39) = v49;
    LODWORD(v47) = *((_DWORD *)this + 83);
    *((_DWORD *)this + 83) = *((_DWORD *)a2 + 83);
    *((_DWORD *)a2 + 83) = v47;
    LODWORD(v47) = *((_DWORD *)this + 82);
    *((_DWORD *)this + 82) = *((_DWORD *)a2 + 82);
    *((_DWORD *)a2 + 82) = v47;
  }
  return result;
}

_QWORD *awd::metrics::MotionElevationAllDay::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionElevationAllDay");
}

uint64_t awd::metrics::MotionPressureStats::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 152) = 0;
  return this;
}

awd::metrics::MotionPressureStats *awd::metrics::MotionPressureStats::MotionPressureStats(awd::metrics::MotionPressureStats *this, const awd::metrics::MotionPressureStats *a2)
{
  *(_QWORD *)this = &off_24D98EC90;
  *((_QWORD *)this + 19) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 132) = 0u;
  awd::metrics::MotionPressureStats::MergeFrom(this, a2);
  return this;
}

void sub_2189FEB7C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)(v1 + 128));
  v3 = *(_QWORD *)(v1 + 112);
  if (v3)
    MEMORY[0x219A1DC64](v3, 0x1000C8052888210);
  v4 = *(_QWORD *)(v1 + 96);
  if (v4)
    MEMORY[0x219A1DC64](v4, 0x1000C8052888210);
  v5 = *(_QWORD *)(v1 + 80);
  if (v5)
    MEMORY[0x219A1DC64](v5, 0x1000C8052888210);
  v6 = *(_QWORD *)(v1 + 64);
  if (v6)
    MEMORY[0x219A1DC64](v6, 0x1000C8052888210);
  v7 = *(_QWORD *)(v1 + 48);
  if (v7)
    MEMORY[0x219A1DC64](v7, 0x1000C8052888210);
  v8 = *(_QWORD *)(v1 + 32);
  if (v8)
    MEMORY[0x219A1DC64](v8, 0x1000C8052888210);
  v9 = *(_QWORD *)(v1 + 16);
  if (v9)
    MEMORY[0x219A1DC64](v9, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionPressureStats::MergeFrom(awd::metrics::MotionPressureStats *this, const awd::metrics::MotionPressureStats *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *result;
  uint64_t v12;
  const std::string *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  std::string *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 4, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((_QWORD *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  v5 = *((_DWORD *)a2 + 10);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 8, *((_DWORD *)this + 10) + v5);
    memcpy((void *)(*((_QWORD *)this + 4) + 4 * *((int *)this + 10)), *((const void **)a2 + 4), 4 * *((int *)a2 + 10));
    *((_DWORD *)this + 10) += *((_DWORD *)a2 + 10);
  }
  v6 = *((_DWORD *)a2 + 14);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 12, *((_DWORD *)this + 14) + v6);
    memcpy((void *)(*((_QWORD *)this + 6) + 4 * *((int *)this + 14)), *((const void **)a2 + 6), 4 * *((int *)a2 + 14));
    *((_DWORD *)this + 14) += *((_DWORD *)a2 + 14);
  }
  v7 = *((_DWORD *)a2 + 18);
  if (v7)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 16, *((_DWORD *)this + 18) + v7);
    memcpy((void *)(*((_QWORD *)this + 8) + 4 * *((int *)this + 18)), *((const void **)a2 + 8), 4 * *((int *)a2 + 18));
    *((_DWORD *)this + 18) += *((_DWORD *)a2 + 18);
  }
  v8 = *((_DWORD *)a2 + 22);
  if (v8)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 20, *((_DWORD *)this + 22) + v8);
    memcpy((void *)(*((_QWORD *)this + 10) + 4 * *((int *)this + 22)), *((const void **)a2 + 10), 4 * *((int *)a2 + 22));
    *((_DWORD *)this + 22) += *((_DWORD *)a2 + 22);
  }
  v9 = *((_DWORD *)a2 + 26);
  if (v9)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((_DWORD *)this + 24, *((_DWORD *)this + 26) + v9);
    memcpy((void *)(*((_QWORD *)this + 12) + 4 * *((int *)this + 26)), *((const void **)a2 + 12), 4 * *((int *)a2 + 26));
    *((_DWORD *)this + 26) += *((_DWORD *)a2 + 26);
  }
  v10 = *((_DWORD *)a2 + 30);
  if (v10)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((_DWORD *)this + 28, *((_DWORD *)this + 30) + v10);
    memcpy((void *)(*((_QWORD *)this + 14) + 4 * *((int *)this + 30)), *((const void **)a2 + 14), 4 * *((int *)a2 + 30));
    *((_DWORD *)this + 30) += *((_DWORD *)a2 + 30);
  }
  result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::MotionPressureStats *)((char *)this + 128));
  if (*((int *)a2 + 34) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const std::string **)(*((_QWORD *)a2 + 16) + 8 * v12);
      v14 = *((_DWORD *)this + 35);
      v15 = *((int *)this + 34);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 36))
        {
          result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::MotionPressureStats *)((char *)this + 128));
          v14 = *((_DWORD *)this + 35);
        }
        *((_DWORD *)this + 35) = v14 + 1;
        v17 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New(result);
        v18 = *((_QWORD *)this + 16);
        v19 = *((int *)this + 34);
        *((_DWORD *)this + 34) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 16);
        *((_DWORD *)this + 34) = v15 + 1;
        v17 = *(std::string **)(v16 + 8 * v15);
      }
      result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 34));
  }
  if ((*((_BYTE *)a2 + 156) & 1) != 0)
  {
    v20 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 39) |= 1u;
    *((_QWORD *)this + 1) = v20;
  }
  return result;
}

void sub_2189FEF7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionPressureStats::~MotionPressureStats(awd::metrics::MotionPressureStats *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24D98EC90;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 32);
  v2 = *((_QWORD *)this + 14);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8052888210);
  v3 = *((_QWORD *)this + 12);
  if (v3)
    MEMORY[0x219A1DC64](v3, 0x1000C8052888210);
  v4 = *((_QWORD *)this + 10);
  if (v4)
    MEMORY[0x219A1DC64](v4, 0x1000C8052888210);
  v5 = *((_QWORD *)this + 8);
  if (v5)
    MEMORY[0x219A1DC64](v5, 0x1000C8052888210);
  v6 = *((_QWORD *)this + 6);
  if (v6)
    MEMORY[0x219A1DC64](v6, 0x1000C8052888210);
  v7 = *((_QWORD *)this + 4);
  if (v7)
    MEMORY[0x219A1DC64](v7, 0x1000C8052888210);
  v8 = *((_QWORD *)this + 2);
  if (v8)
    MEMORY[0x219A1DC64](v8, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::MotionPressureStats::~MotionPressureStats(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionPressureStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 152) = a2;
  return this;
}

uint64_t awd::metrics::MotionPressureStats::default_instance(awd::metrics::MotionPressureStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionPressureStats::default_instance_;
  if (!awd::metrics::MotionPressureStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionPressureStats::default_instance_;
  }
  return result;
}

double awd::metrics::MotionPressureStats::New(awd::metrics::MotionPressureStats *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98EC90;
  *(_QWORD *)(v1 + 152) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 132) = 0u;
  return result;
}

uint64_t awd::metrics::MotionPressureStats::Clear(awd::metrics::MotionPressureStats *this)
{
  uint64_t result;

  if (*((_BYTE *)this + 156))
    *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 10) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_DWORD *)this + 18) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_DWORD *)this + 26) = 0;
  *((_DWORD *)this + 30) = 0;
  result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 128);
  *((_DWORD *)this + 39) = 0;
  return result;
}

uint64_t awd::metrics::MotionPressureStats::MergePartialFromCodedStream(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3;
  _DWORD *v4;
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *v6;
  int v7;
  char *v8;
  unint64_t v9;
  _BYTE *v10;
  char *v11;
  unint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  signed int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  signed int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  signed int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  signed int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  signed int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  signed int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  uint64_t v81;
  int v82;
  int v83;
  _BYTE *v84;
  unint64_t v85;
  unsigned int v86;
  int v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  unint64_t *v95;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v96;
  _DWORD *v97;
  _DWORD *v98;
  _DWORD *v99;
  _DWORD *v100;
  _DWORD *v101;
  _DWORD *v102;
  unsigned int v103[12];

  v3 = this;
  v4 = (_DWORD *)(this + 96);
  v101 = (_DWORD *)(this + 64);
  v102 = (_DWORD *)(this + 80);
  v99 = (_DWORD *)(this + 112);
  v100 = (_DWORD *)(this + 48);
  v97 = (_DWORD *)(this + 16);
  v98 = (_DWORD *)(this + 32);
  v95 = (unint64_t *)(this + 8);
  v96 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(this + 128);
LABEL_2:
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      v6 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)this;
      *((_DWORD *)a2 + 8) = this;
      if (!(_DWORD)this)
        return 1;
    }
    else
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)a2 + 8) = (_DWORD)v6;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)v6)
        return 1;
    }
    switch(v6 >> 3)
    {
      case 1u:
        v7 = v6 & 7;
        if ((v6 & 7) != 0)
          goto LABEL_35;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 >= v9 || *v8 < 0)
        {
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v95);
          if (!(_DWORD)this)
            return this;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v95 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *(_DWORD *)(v3 + 156) |= 1u;
        if ((unint64_t)v10 >= v9 || *v10 != 21)
          continue;
        goto LABEL_56;
      case 2u:
        v7 = v6 & 7;
        if (v7 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v97);
          if (!(_DWORD)this)
            return this;
          goto LABEL_73;
        }
        if (v7 != 5)
          goto LABEL_35;
        while (2)
        {
          v103[0] = 0;
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
          if ((this & 1) == 0)
            return 0;
          v13 = v103[0];
          v14 = *(_DWORD *)(v3 + 24);
          if (v14 == *(_DWORD *)(v3 + 28))
          {
            this = (uint64_t)wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v97, v14 + 1);
            v14 = *(_DWORD *)(v3 + 24);
          }
          v15 = *(_QWORD *)(v3 + 16);
          v16 = v14 + 1;
          *(_DWORD *)(v3 + 24) = v14 + 1;
          *(_DWORD *)(v15 + 4 * v14) = v13;
          v17 = *((_QWORD *)a2 + 1);
          v18 = *((_DWORD *)a2 + 4) - v17;
          if (v18 >= 1)
          {
            v19 = v18 / 5u;
            v20 = v19 >= *(_DWORD *)(v3 + 28) - v16 ? *(_DWORD *)(v3 + 28) - v16 : v19;
            if (v20 >= 1)
            {
              v21 = 0;
              while (*(_BYTE *)v17 == 21)
              {
                v22 = *(_DWORD *)(v17 + 1);
                if (v16 >= *(_DWORD *)(v3 + 28))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  v16 = *(_DWORD *)(v3 + 24);
                  v15 = *(_QWORD *)(v3 + 16);
                }
                *(_DWORD *)(v3 + 24) = v16 + 1;
                *(_DWORD *)(v15 + 4 * v16) = v22;
                ++v21;
                v17 += 5;
                ++v16;
                if (v20 == v21)
                {
                  v21 = v20;
                  break;
                }
              }
              if (v21)
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_73:
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 < *((_QWORD *)a2 + 2))
          {
            v23 = *v10;
            if (v23 == 21)
            {
LABEL_56:
              *((_QWORD *)a2 + 1) = v10 + 1;
              continue;
            }
            if (v23 == 29)
              goto LABEL_76;
          }
          goto LABEL_2;
        }
      case 3u:
        v7 = v6 & 7;
        if (v7 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v98);
          if (!(_DWORD)this)
            return this;
          goto LABEL_93;
        }
        if (v7 != 5)
          goto LABEL_35;
        while (2)
        {
          v103[0] = 0;
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
          if ((this & 1) == 0)
            return 0;
          v24 = v103[0];
          v25 = *(_DWORD *)(v3 + 40);
          if (v25 == *(_DWORD *)(v3 + 44))
          {
            this = (uint64_t)wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v98, v25 + 1);
            v25 = *(_DWORD *)(v3 + 40);
          }
          v26 = *(_QWORD *)(v3 + 32);
          v27 = v25 + 1;
          *(_DWORD *)(v3 + 40) = v25 + 1;
          *(_DWORD *)(v26 + 4 * v25) = v24;
          v28 = *((_QWORD *)a2 + 1);
          v29 = *((_DWORD *)a2 + 4) - v28;
          if (v29 >= 1)
          {
            v30 = v29 / 5u;
            v31 = v30 >= *(_DWORD *)(v3 + 44) - v27 ? *(_DWORD *)(v3 + 44) - v27 : v30;
            if (v31 >= 1)
            {
              v32 = 0;
              while (*(_BYTE *)v28 == 29)
              {
                v33 = *(_DWORD *)(v28 + 1);
                if (v27 >= *(_DWORD *)(v3 + 44))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  v27 = *(_DWORD *)(v3 + 40);
                  v26 = *(_QWORD *)(v3 + 32);
                }
                *(_DWORD *)(v3 + 40) = v27 + 1;
                *(_DWORD *)(v26 + 4 * v27) = v33;
                ++v32;
                v28 += 5;
                ++v27;
                if (v31 == v32)
                {
                  v32 = v31;
                  break;
                }
              }
              if (v32)
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_93:
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 < *((_QWORD *)a2 + 2))
          {
            v34 = *v10;
            if (v34 == 29)
            {
LABEL_76:
              *((_QWORD *)a2 + 1) = v10 + 1;
              continue;
            }
            if (v34 == 37)
              goto LABEL_96;
          }
          goto LABEL_2;
        }
      case 4u:
        v7 = v6 & 7;
        if (v7 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v100);
          if (!(_DWORD)this)
            return this;
          goto LABEL_113;
        }
        if (v7 != 5)
          goto LABEL_35;
        while (2)
        {
          v103[0] = 0;
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
          if ((this & 1) == 0)
            return 0;
          v35 = v103[0];
          v36 = *(_DWORD *)(v3 + 56);
          if (v36 == *(_DWORD *)(v3 + 60))
          {
            this = (uint64_t)wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v100, v36 + 1);
            v36 = *(_DWORD *)(v3 + 56);
          }
          v37 = *(_QWORD *)(v3 + 48);
          v38 = v36 + 1;
          *(_DWORD *)(v3 + 56) = v36 + 1;
          *(_DWORD *)(v37 + 4 * v36) = v35;
          v39 = *((_QWORD *)a2 + 1);
          v40 = *((_DWORD *)a2 + 4) - v39;
          if (v40 >= 1)
          {
            v41 = v40 / 5u;
            v42 = v41 >= *(_DWORD *)(v3 + 60) - v38 ? *(_DWORD *)(v3 + 60) - v38 : v41;
            if (v42 >= 1)
            {
              v43 = 0;
              while (*(_BYTE *)v39 == 37)
              {
                v44 = *(_DWORD *)(v39 + 1);
                if (v38 >= *(_DWORD *)(v3 + 60))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  v38 = *(_DWORD *)(v3 + 56);
                  v37 = *(_QWORD *)(v3 + 48);
                }
                *(_DWORD *)(v3 + 56) = v38 + 1;
                *(_DWORD *)(v37 + 4 * v38) = v44;
                ++v43;
                v39 += 5;
                ++v38;
                if (v42 == v43)
                {
                  v43 = v42;
                  break;
                }
              }
              if (v43)
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_113:
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 < *((_QWORD *)a2 + 2))
          {
            v45 = *v10;
            if (v45 == 37)
            {
LABEL_96:
              *((_QWORD *)a2 + 1) = v10 + 1;
              continue;
            }
            if (v45 == 45)
              goto LABEL_116;
          }
          goto LABEL_2;
        }
      case 5u:
        v7 = v6 & 7;
        if (v7 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v101);
          if (!(_DWORD)this)
            return this;
          goto LABEL_133;
        }
        if (v7 != 5)
          goto LABEL_35;
        while (2)
        {
          v103[0] = 0;
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
          if ((this & 1) == 0)
            return 0;
          v46 = v103[0];
          v47 = *(_DWORD *)(v3 + 72);
          if (v47 == *(_DWORD *)(v3 + 76))
          {
            this = (uint64_t)wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v101, v47 + 1);
            v47 = *(_DWORD *)(v3 + 72);
          }
          v48 = *(_QWORD *)(v3 + 64);
          v49 = v47 + 1;
          *(_DWORD *)(v3 + 72) = v47 + 1;
          *(_DWORD *)(v48 + 4 * v47) = v46;
          v50 = *((_QWORD *)a2 + 1);
          v51 = *((_DWORD *)a2 + 4) - v50;
          if (v51 >= 1)
          {
            v52 = v51 / 5u;
            v53 = v52 >= *(_DWORD *)(v3 + 76) - v49 ? *(_DWORD *)(v3 + 76) - v49 : v52;
            if (v53 >= 1)
            {
              v54 = 0;
              while (*(_BYTE *)v50 == 45)
              {
                v55 = *(_DWORD *)(v50 + 1);
                if (v49 >= *(_DWORD *)(v3 + 76))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  v49 = *(_DWORD *)(v3 + 72);
                  v48 = *(_QWORD *)(v3 + 64);
                }
                *(_DWORD *)(v3 + 72) = v49 + 1;
                *(_DWORD *)(v48 + 4 * v49) = v55;
                ++v54;
                v50 += 5;
                ++v49;
                if (v53 == v54)
                {
                  v54 = v53;
                  break;
                }
              }
              if (v54)
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_133:
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 < *((_QWORD *)a2 + 2))
          {
            v56 = *v10;
            if (v56 == 45)
            {
LABEL_116:
              *((_QWORD *)a2 + 1) = v10 + 1;
              continue;
            }
            if (v56 == 53)
              goto LABEL_136;
          }
          goto LABEL_2;
        }
      case 6u:
        v7 = v6 & 7;
        if (v7 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v102);
          if (!(_DWORD)this)
            return this;
          goto LABEL_153;
        }
        if (v7 != 5)
          goto LABEL_35;
        while (2)
        {
          v103[0] = 0;
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
          if ((this & 1) == 0)
            return 0;
          v57 = v103[0];
          v58 = *(_DWORD *)(v3 + 88);
          if (v58 == *(_DWORD *)(v3 + 92))
          {
            this = (uint64_t)wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v102, v58 + 1);
            v58 = *(_DWORD *)(v3 + 88);
          }
          v59 = *(_QWORD *)(v3 + 80);
          v60 = v58 + 1;
          *(_DWORD *)(v3 + 88) = v58 + 1;
          *(_DWORD *)(v59 + 4 * v58) = v57;
          v61 = *((_QWORD *)a2 + 1);
          v62 = *((_DWORD *)a2 + 4) - v61;
          if (v62 >= 1)
          {
            v63 = v62 / 5u;
            v64 = v63 >= *(_DWORD *)(v3 + 92) - v60 ? *(_DWORD *)(v3 + 92) - v60 : v63;
            if (v64 >= 1)
            {
              v65 = 0;
              while (*(_BYTE *)v61 == 53)
              {
                v66 = *(_DWORD *)(v61 + 1);
                if (v60 >= *(_DWORD *)(v3 + 92))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  v60 = *(_DWORD *)(v3 + 88);
                  v59 = *(_QWORD *)(v3 + 80);
                }
                *(_DWORD *)(v3 + 88) = v60 + 1;
                *(_DWORD *)(v59 + 4 * v60) = v66;
                ++v65;
                v61 += 5;
                ++v60;
                if (v64 == v65)
                {
                  v65 = v64;
                  break;
                }
              }
              if (v65)
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_153:
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 < *((_QWORD *)a2 + 2))
          {
            v67 = *v10;
            if (v67 == 53)
            {
LABEL_136:
              *((_QWORD *)a2 + 1) = v10 + 1;
              continue;
            }
            if (v67 == 61)
              goto LABEL_156;
          }
          goto LABEL_2;
        }
      case 7u:
        v7 = v6 & 7;
        if (v7 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v4);
          if (!(_DWORD)this)
            return this;
          goto LABEL_173;
        }
        if (v7 != 5)
        {
LABEL_35:
          if (v7 == 4)
            return 1;
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, v6);
          if ((this & 1) == 0)
            return 0;
          continue;
        }
LABEL_157:
        v103[0] = 0;
        this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
        if ((this & 1) != 0)
        {
          v68 = v103[0];
          v69 = *(_DWORD *)(v3 + 104);
          if (v69 == *(_DWORD *)(v3 + 108))
          {
            this = (uint64_t)wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v4, v69 + 1);
            v69 = *(_DWORD *)(v3 + 104);
          }
          v70 = *(_QWORD *)(v3 + 96);
          v71 = v69 + 1;
          *(_DWORD *)(v3 + 104) = v69 + 1;
          *(_DWORD *)(v70 + 4 * v69) = v68;
          v72 = *((_QWORD *)a2 + 1);
          v73 = *((_DWORD *)a2 + 4) - v72;
          if (v73 >= 1)
          {
            v74 = v73 / 5u;
            v75 = v74 >= *(_DWORD *)(v3 + 108) - v71 ? *(_DWORD *)(v3 + 108) - v71 : v74;
            if (v75 >= 1)
            {
              v76 = 0;
              while (*(_BYTE *)v72 == 61)
              {
                v77 = *(_DWORD *)(v72 + 1);
                if (v71 >= *(_DWORD *)(v3 + 108))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  v71 = *(_DWORD *)(v3 + 104);
                  v70 = *(_QWORD *)(v3 + 96);
                }
                *(_DWORD *)(v3 + 104) = v71 + 1;
                *(_DWORD *)(v70 + 4 * v71) = v77;
                ++v76;
                v72 += 5;
                ++v71;
                if (v75 == v76)
                {
                  v76 = v75;
                  break;
                }
              }
              if (v76)
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_173:
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v10 >= v12)
            continue;
          v78 = *v10;
          if (v78 == 61)
          {
LABEL_156:
            *((_QWORD *)a2 + 1) = v10 + 1;
            goto LABEL_157;
          }
          while (v78 == 64)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
LABEL_177:
            v103[0] = 0;
            if ((unint64_t)v11 >= v12 || *v11 < 0)
            {
              this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
              if (!(_DWORD)this)
                return this;
              v79 = v103[0];
            }
            else
            {
              v79 = *v11;
              *((_QWORD *)a2 + 1) = v11 + 1;
            }
            v80 = *(_DWORD *)(v3 + 120);
            if (v80 == *(_DWORD *)(v3 + 124))
            {
              this = (uint64_t)wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(v99, v80 + 1);
              v80 = *(_DWORD *)(v3 + 120);
            }
            v81 = *(_QWORD *)(v3 + 112);
            *(_DWORD *)(v3 + 120) = v80 + 1;
            *(_DWORD *)(v81 + 4 * v80) = v79;
            v82 = *(_DWORD *)(v3 + 124) - *(_DWORD *)(v3 + 120);
            if (v82 >= 1)
            {
              v83 = v82 + 1;
              do
              {
                v84 = (_BYTE *)*((_QWORD *)a2 + 1);
                v85 = *((_QWORD *)a2 + 2);
                if ((unint64_t)v84 >= v85 || *v84 != 64)
                  break;
                *((_QWORD *)a2 + 1) = v84 + 1;
                v103[0] = 0;
                if ((unint64_t)(v84 + 1) >= v85 || (char)v84[1] < 0)
                {
                  this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
                  if (!(_DWORD)this)
                    return this;
                  v86 = v103[0];
                }
                else
                {
                  v86 = v84[1];
                  *((_QWORD *)a2 + 1) = v84 + 2;
                }
                v87 = *(_DWORD *)(v3 + 120);
                if (v87 >= *(_DWORD *)(v3 + 124))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  v87 = *(_DWORD *)(v3 + 120);
                }
                v88 = *(_QWORD *)(v3 + 112);
                *(_DWORD *)(v3 + 120) = v87 + 1;
                *(_DWORD *)(v88 + 4 * v87) = v86;
                --v83;
              }
              while (v83 > 1);
            }
LABEL_196:
            v10 = (_BYTE *)*((_QWORD *)a2 + 1);
            v12 = *((_QWORD *)a2 + 2);
            if ((unint64_t)v10 >= v12)
              break;
            v78 = *v10;
            if (v78 == 74)
            {
              do
              {
                *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_199:
                v89 = *(_DWORD *)(v3 + 140);
                v90 = *(_DWORD *)(v3 + 136);
                if (v90 >= v89)
                {
                  if (v89 == *(_DWORD *)(v3 + 144))
                  {
                    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v96);
                    v89 = *(_DWORD *)(v3 + 140);
                  }
                  *(_DWORD *)(v3 + 140) = v89 + 1;
                  v91 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)this);
                  v92 = *(_QWORD *)(v3 + 128);
                  v93 = *(int *)(v3 + 136);
                  *(_DWORD *)(v3 + 136) = v93 + 1;
                  *(_QWORD *)(v92 + 8 * v93) = v91;
                }
                else
                {
                  *(_DWORD *)(v3 + 136) = v90 + 1;
                }
                this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                if (!(_DWORD)this)
                  return this;
                v10 = (_BYTE *)*((_QWORD *)a2 + 1);
                v94 = (_BYTE *)*((_QWORD *)a2 + 2);
              }
              while (v10 < v94 && *v10 == 74);
              if (v10 == v94 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                this = 1;
                *((_BYTE *)a2 + 36) = 1;
                return this;
              }
              goto LABEL_2;
            }
          }
          continue;
        }
        return 0;
      case 8u:
        v7 = v6 & 7;
        if (v7 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, v99);
          if (!(_DWORD)this)
            return this;
          goto LABEL_196;
        }
        if ((v6 & 7) != 0)
          goto LABEL_35;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_177;
      case 9u:
        v7 = v6 & 7;
        if (v7 != 2)
          goto LABEL_35;
        goto LABEL_199;
      default:
        v7 = v6 & 7;
        goto LABEL_35;
    }
  }
}

void sub_2189FFDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::MotionPressureStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = this;
  if ((*(_BYTE *)(this + 156) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 16) + 4 * v6++), a3);
    while (v6 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 32) + 4 * v7++), a3);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 48) + 4 * v8++), a3);
    while (v8 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 72) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 64) + 4 * v9++), a3);
    while (v9 < *(int *)(v5 + 72));
  }
  if (*(int *)(v5 + 88) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 80) + 4 * v10++), a3);
    while (v10 < *(int *)(v5 + 88));
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 96) + 4 * v11++), a3);
    while (v11 < *(int *)(v5 + 104));
  }
  if (*(int *)(v5 + 120) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(*(_QWORD *)(v5 + 112) + 4 * v12++), (uint64_t)a2, a4);
    while (v12 < *(int *)(v5 + 120));
  }
  if (*(int *)(v5 + 136) >= 1)
  {
    v13 = 0;
    do
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v13;
    }
    while (v13 < *(int *)(v5 + 136));
  }
  return this;
}

uint64_t awd::metrics::MotionPressureStats::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  int v22;

  if ((*((_BYTE *)this + 156) & 1) != 0)
    v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
  else
    v2 = 0;
  v3 = *((_DWORD *)this + 6);
  v4 = *((_DWORD *)this + 10);
  v5 = *((_DWORD *)this + 14);
  v6 = *((_DWORD *)this + 18);
  v7 = *((_DWORD *)this + 22);
  v8 = *((_DWORD *)this + 26);
  v9 = *((_DWORD *)this + 30);
  if (v9 < 1)
  {
    v11 = 0;
  }
  else
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this[14] + v10);
      if ((v12 & 0x80000000) != 0)
      {
        v13 = 10;
      }
      else if (v12 >= 0x80)
      {
        v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
        v9 = *((_DWORD *)this + 30);
      }
      else
      {
        v13 = 1;
      }
      v11 += v13;
      ++v10;
    }
    while (v10 < v9);
  }
  v14 = *((_DWORD *)this + 34);
  v15 = (5 * (v4 + v3 + v5 + v6 + v7 + v8) + v2 + v11 + v9 + v14);
  if (v14 >= 1)
  {
    for (i = 0; i < v14; ++i)
    {
      v17 = *((_QWORD *)this[16] + i);
      v18 = *(unsigned __int8 *)(v17 + 23);
      v19 = v18;
      v20 = *(_QWORD *)(v17 + 8);
      if ((v18 & 0x80u) == 0)
        v21 = *(unsigned __int8 *)(v17 + 23);
      else
        v21 = v20;
      if (v21 >= 0x80)
      {
        v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21);
        v18 = *(unsigned __int8 *)(v17 + 23);
        v20 = *(_QWORD *)(v17 + 8);
        v14 = *((_DWORD *)this + 34);
        v19 = *(_BYTE *)(v17 + 23);
      }
      else
      {
        v22 = 1;
      }
      if (v19 < 0)
        v18 = v20;
      v15 = (v22 + v15 + v18);
    }
  }
  *((_DWORD *)this + 38) = v15;
  return v15;
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionPressureStats::CheckTypeAndMergeFrom(awd::metrics::MotionPressureStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::MotionPressureStats::MergeFrom(this, lpsrc);
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionPressureStats::CopyFrom(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *this, const awd::metrics::MotionPressureStats *a2)
{
  awd::metrics::MotionPressureStats *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::MotionPressureStats::MergeFrom(v3, a2);
  }
  return this;
}

uint64_t awd::metrics::MotionPressureStats::IsInitialized(awd::metrics::MotionPressureStats *this)
{
  return 1;
}

awd::metrics::MotionPressureStats *awd::metrics::MotionPressureStats::Swap(awd::metrics::MotionPressureStats *this, awd::metrics::MotionPressureStats *a2)
{
  awd::metrics::MotionPressureStats *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    v5 = *((_QWORD *)this + 2);
    v6 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v6;
    v7 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 1) = v4;
    *((_QWORD *)a2 + 2) = v5;
    v8 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = v7;
    *((_QWORD *)a2 + 3) = v8;
    v9 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    v10 = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 4) = v9;
    v11 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = v10;
    *((_QWORD *)a2 + 5) = v11;
    v12 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    v13 = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 6) = v12;
    v14 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = v13;
    *((_QWORD *)a2 + 7) = v14;
    v15 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    v16 = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 8) = v15;
    v17 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v16;
    *((_QWORD *)a2 + 9) = v17;
    v18 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    v19 = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 10) = v18;
    v20 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v19;
    *((_QWORD *)a2 + 11) = v20;
    v21 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    v22 = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 12) = v21;
    v23 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v22;
    *((_QWORD *)a2 + 13) = v23;
    v24 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = *((_QWORD *)a2 + 14);
    v25 = *((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 14) = v24;
    v26 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = v25;
    *((_QWORD *)a2 + 15) = v26;
    this = (awd::metrics::MotionPressureStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v27 = *((_DWORD *)v3 + 39);
    *((_DWORD *)v3 + 39) = *((_DWORD *)a2 + 39);
    *((_DWORD *)a2 + 39) = v27;
    v28 = *((_DWORD *)v3 + 38);
    *((_DWORD *)v3 + 38) = *((_DWORD *)a2 + 38);
    *((_DWORD *)a2 + 38) = v28;
  }
  return this;
}

_QWORD *awd::metrics::MotionPressureStats::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionPressureStats");
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 16) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::MotionNoGPSRunAllDay *awd::metrics::MotionNoGPSRunAllDay::MotionNoGPSRunAllDay(awd::metrics::MotionNoGPSRunAllDay *this, const awd::metrics::MotionNoGPSRunAllDay *a2)
{
  *(_QWORD *)this = &off_24D98ED08;
  *((_QWORD *)this + 1) = 0;
  *((_BYTE *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::MotionNoGPSRunAllDay::MergeFrom(this, a2);
  return this;
}

void sub_218A00370(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionNoGPSRunAllDay::MergeFrom(awd::metrics::MotionNoGPSRunAllDay *this, const awd::metrics::MotionNoGPSRunAllDay *a2)
{
  int v4;
  uint64_t v5;
  char v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_BYTE *)a2 + 16);
      *((_DWORD *)this + 6) |= 2u;
      *((_BYTE *)this + 16) = v6;
    }
  }
}

void sub_218A0042C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionNoGPSRunAllDay::~MotionNoGPSRunAllDay(awd::metrics::MotionNoGPSRunAllDay *this)
{
  *(_QWORD *)this = &off_24D98ED08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98ED08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98ED08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::default_instance(awd::metrics::MotionNoGPSRunAllDay *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionNoGPSRunAllDay::default_instance_;
  if (!awd::metrics::MotionNoGPSRunAllDay::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionNoGPSRunAllDay::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::New(awd::metrics::MotionNoGPSRunAllDay *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_24D98ED08;
  *(_QWORD *)(result + 8) = 0;
  *(_BYTE *)(result + 16) = 0;
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_BYTE *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::MergePartialFromCodedStream(awd::metrics::MotionNoGPSRunAllDay *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (!(_DWORD)result)
          return result;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v4 = *v10;
        v11 = v10 + 1;
        *((_QWORD *)a2 + 1) = v11;
      }
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v11 < v8 && *v11 == 16)
      {
        v9 = v11 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_24:
        v15 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
          if (!(_DWORD)result)
            return result;
          v12 = v15;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_BYTE *)this + 16) = v12 != 0;
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 16), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::ByteSize(awd::metrics::MotionNoGPSRunAllDay *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 24);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      v2 = *((_DWORD *)this + 6);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      result = v3 + 2;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

void awd::metrics::MotionNoGPSRunAllDay::CheckTypeAndMergeFrom(awd::metrics::MotionNoGPSRunAllDay *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionNoGPSRunAllDay::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionNoGPSRunAllDay::CopyFrom(awd::metrics::MotionNoGPSRunAllDay *this, const awd::metrics::MotionNoGPSRunAllDay *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionNoGPSRunAllDay *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionNoGPSRunAllDay::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::IsInitialized(awd::metrics::MotionNoGPSRunAllDay *this)
{
  return 1;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::Swap(uint64_t this, awd::metrics::MotionNoGPSRunAllDay *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::MotionNoGPSRunAllDay *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 16);
    *(_BYTE *)(this + 16) = *((_BYTE *)a2 + 16);
    *((_BYTE *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
  }
  return this;
}

_QWORD *awd::metrics::MotionNoGPSRunAllDay::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionNoGPSRunAllDay");
}

uint64_t awd::metrics::MotionFitnessDaily_WearableType_IsValid(awd::metrics *this)
{
  return (this < 5) & (0x17u >> (char)this);
}

double awd::metrics::MotionFitnessDaily::SharedCtor(awd::metrics::MotionFitnessDaily *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 3) = v1;
  *((_QWORD *)this + 12) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 44) = 0;
  *((_WORD *)this + 30) = 0;
  result = 0.0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

awd::metrics::MotionFitnessDaily *awd::metrics::MotionFitnessDaily::MotionFitnessDaily(awd::metrics::MotionFitnessDaily *this, const awd::metrics::MotionFitnessDaily *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_24D98ED80;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_QWORD *)this + 3) = v3;
  *((_QWORD *)this + 12) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 44) = 0;
  *((_WORD *)this + 30) = 0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  awd::metrics::MotionFitnessDaily::MergeFrom(this, a2);
  return this;
}

void sub_218A00958(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessDaily::MergeFrom(awd::metrics::MotionFitnessDaily *this, const awd::metrics::MotionFitnessDaily *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  const std::string *v10;
  std::string *v11;
  unsigned int v12;
  const std::string *v13;
  std::string *v14;
  char v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  v4 = *((_DWORD *)a2 + 25);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v9 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 25) |= 1u;
    *((_QWORD *)this + 1) = v9;
    v4 = *((_DWORD *)a2 + 25);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_33;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v10 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 25) |= 2u;
  v11 = (std::string *)*((_QWORD *)this + 2);
  if (v11 == (std::string *)MEMORY[0x24BEDD958])
  {
    v11 = (std::string *)operator new();
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v11;
  }
  std::string::operator=(v11, v10);
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_36;
  }
LABEL_33:
  v12 = *((_DWORD *)a2 + 8);
  if (v12 >= 3 && v12 != 4)
    awd::metrics::MotionFitnessDaily::MergeFrom();
  *((_DWORD *)this + 25) |= 4u;
  *((_DWORD *)this + 8) = v12;
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_39;
  }
LABEL_36:
  v13 = (const std::string *)*((_QWORD *)a2 + 3);
  *((_DWORD *)this + 25) |= 8u;
  v14 = (std::string *)*((_QWORD *)this + 3);
  if (v14 == (std::string *)MEMORY[0x24BEDD958])
  {
    v14 = (std::string *)operator new();
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 3) = v14;
  }
  std::string::operator=(v14, v13);
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_40:
    v16 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 25) |= 0x20u;
    *((_DWORD *)this + 9) = v16;
    v4 = *((_DWORD *)a2 + 25);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_39:
  v15 = *((_BYTE *)a2 + 60);
  *((_DWORD *)this + 25) |= 0x10u;
  *((_BYTE *)this + 60) = v15;
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x20) != 0)
    goto LABEL_40;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_41:
  v17 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 25) |= 0x40u;
  *((_DWORD *)this + 10) = v17;
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 25) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    v4 = *((_DWORD *)a2 + 25);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_23;
  if ((v4 & 0x100) != 0)
  {
    v18 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 25) |= 0x100u;
    *((_DWORD *)this + 12) = v18;
    v4 = *((_DWORD *)a2 + 25);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_45;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v19 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 25) |= 0x200u;
  *((_DWORD *)this + 13) = v19;
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_46;
  }
LABEL_45:
  v20 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 25) |= 0x400u;
  *((_DWORD *)this + 14) = v20;
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_47;
  }
LABEL_46:
  v21 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 25) |= 0x800u;
  *((_DWORD *)this + 16) = v21;
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_48;
  }
LABEL_47:
  v22 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 25) |= 0x1000u;
  *((_DWORD *)this + 17) = v22;
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_49;
  }
LABEL_48:
  v23 = *((_QWORD *)a2 + 9);
  *((_DWORD *)this + 25) |= 0x2000u;
  *((_QWORD *)this + 9) = v23;
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
LABEL_49:
  v24 = *((_QWORD *)a2 + 10);
  *((_DWORD *)this + 25) |= 0x4000u;
  *((_QWORD *)this + 10) = v24;
  v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    v6 = *((_DWORD *)a2 + 22);
    *((_DWORD *)this + 25) |= 0x8000u;
    *((_DWORD *)this + 22) = v6;
    v4 = *((_DWORD *)a2 + 25);
  }
LABEL_23:
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      v7 = *((_DWORD *)a2 + 23);
      *((_DWORD *)this + 25) |= 0x10000u;
      *((_DWORD *)this + 23) = v7;
      v4 = *((_DWORD *)a2 + 25);
    }
    if ((v4 & 0x20000) != 0)
    {
      v8 = *((_BYTE *)a2 + 61);
      *((_DWORD *)this + 25) |= 0x20000u;
      *((_BYTE *)this + 61) = v8;
    }
  }
}

void sub_218A00CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessDaily::~MotionFitnessDaily(awd::metrics::MotionFitnessDaily *this)
{
  *(_QWORD *)this = &off_24D98ED80;
  awd::metrics::MotionFitnessDaily::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98ED80;
  awd::metrics::MotionFitnessDaily::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98ED80;
  awd::metrics::MotionFitnessDaily::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionFitnessDaily::SharedDtor(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = this;
  v2 = *(_QWORD *)(this + 16);
  v3 = MEMORY[0x24BEDD958];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  v5 = *(_QWORD *)(v1 + 24);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::MotionFitnessDaily::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 96) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessDaily::default_instance(awd::metrics::MotionFitnessDaily *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionFitnessDaily::default_instance_;
  if (!awd::metrics::MotionFitnessDaily::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessDaily::default_instance_;
  }
  return result;
}

double awd::metrics::MotionFitnessDaily::New(awd::metrics::MotionFitnessDaily *this)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98ED80;
  *(_QWORD *)(v1 + 8) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_DWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 96) = 0;
  *(_QWORD *)(v1 + 36) = 0;
  *(_QWORD *)(v1 + 52) = 0;
  *(_QWORD *)(v1 + 44) = 0;
  *(_WORD *)(v1 + 60) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  return result;
}

uint64_t awd::metrics::MotionFitnessDaily::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_DWORD *)(this + 100);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    v2 = MEMORY[0x24BEDD958];
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 32) = 0;
    if ((*(_BYTE *)(this + 100) & 8) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    *(_BYTE *)(this + 60) = 0;
    *(_QWORD *)(this + 40) = 0;
    *(_DWORD *)(this + 36) = 0;
    v1 = *(_DWORD *)(this + 100);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    *(_DWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 72) = 0;
    *(_QWORD *)(this + 80) = 0;
    *(_QWORD *)(this + 64) = 0;
    *(_DWORD *)(this + 88) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 92) = 0;
    *(_BYTE *)(this + 61) = 0;
  }
  *(_DWORD *)(this + 100) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessDaily::MergePartialFromCodedStream(awd::metrics::MotionFitnessDaily *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  int v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  char *v34;
  _QWORD *v35;
  _BYTE *v36;
  unsigned int v37;
  _BYTE *v39;
  _QWORD *v40;
  _BYTE *v41;
  unsigned int v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  unsigned __int8 *v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  unsigned int v58;
  unsigned __int8 *v59;
  uint64_t result;
  unint64_t *v61;
  unsigned int *v62;
  unsigned int *v63;
  unsigned int *v64;
  unsigned int v65[2];

  v4 = (unsigned int *)((char *)this + 36);
  v5 = (unsigned int *)((char *)this + 40);
  v6 = (unsigned int *)((char *)this + 44);
  v7 = (unsigned int *)((char *)this + 52);
  v8 = (unsigned int *)((char *)this + 56);
  v9 = (unsigned int *)((char *)this + 64);
  v10 = (unsigned int *)((char *)this + 68);
  v63 = (unsigned int *)((char *)this + 88);
  v64 = (unsigned int *)((char *)this + 48);
  v61 = (unint64_t *)((char *)this + 8);
  v62 = (unsigned int *)((char *)this + 92);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v61 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_52:
          v17 = *((_DWORD *)this + 25) | 1;
          *((_DWORD *)this + 25) = v17;
          if ((unint64_t)v16 < v14 && *v16 == 18)
          {
            *((_QWORD *)a2 + 1) = v16 + 1;
            goto LABEL_55;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v61);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_52;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if (v13 != 2)
          goto LABEL_46;
        v17 = *((_DWORD *)this + 25);
LABEL_55:
        *((_DWORD *)this + 25) = v17 | 2;
        if (*((_QWORD *)this + 2) == MEMORY[0x24BEDD958])
        {
          v35 = (_QWORD *)operator new();
          v35[1] = 0;
          v35[2] = 0;
          *v35 = 0;
          *((_QWORD *)this + 2) = v35;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v36 >= v18 || *v36 != 24)
          continue;
        v19 = v36 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_61:
        v65[0] = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v65);
          if (!(_DWORD)result)
            return result;
          v37 = v65[0];
        }
        else
        {
          v37 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        if (v37 <= 4 && v37 != 3)
        {
          *((_DWORD *)this + 25) |= 4u;
          *((_DWORD *)this + 8) = v37;
        }
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_74:
        *((_DWORD *)this + 25) |= 8u;
        if (*((_QWORD *)this + 3) == MEMORY[0x24BEDD958])
        {
          v40 = (_QWORD *)operator new();
          v40[1] = 0;
          v40[2] = 0;
          *v40 = 0;
          *((_QWORD *)this + 3) = v40;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v41 >= v20 || *v41 != 40)
          continue;
        v21 = v41 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_80:
        v65[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v65);
          if (!(_DWORD)result)
            return result;
          v42 = v65[0];
          v43 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v42 = *v21;
          v43 = v21 + 1;
          *((_QWORD *)a2 + 1) = v43;
        }
        *((_BYTE *)this + 60) = v42 != 0;
        *((_DWORD *)this + 25) |= 0x10u;
        if ((unint64_t)v43 >= v20 || *v43 != 48)
          continue;
        v22 = v43 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_88:
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v44 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v22;
          v44 = v22 + 1;
          *((_QWORD *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 25) |= 0x20u;
        if ((unint64_t)v44 >= v20 || *v44 != 56)
          continue;
        v23 = v44 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_96:
        if ((unint64_t)v23 >= v20 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v45 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v23;
          v45 = v23 + 1;
          *((_QWORD *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 25) |= 0x40u;
        if ((unint64_t)v45 >= v20 || *v45 != 64)
          continue;
        v24 = v45 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_104:
        if ((unint64_t)v24 >= v20 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v46 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v24;
          v46 = v24 + 1;
          *((_QWORD *)a2 + 1) = v46;
        }
        *((_DWORD *)this + 25) |= 0x80u;
        if ((unint64_t)v46 >= v20 || *v46 != 72)
          continue;
        v25 = v46 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_112:
        if ((unint64_t)v25 >= v20 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v47 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v64 = *v25;
          v47 = v25 + 1;
          *((_QWORD *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 25) |= 0x100u;
        if ((unint64_t)v47 >= v20 || *v47 != 80)
          continue;
        v26 = v47 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_120:
        if ((unint64_t)v26 >= v20 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v48 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v26;
          v48 = v26 + 1;
          *((_QWORD *)a2 + 1) = v48;
        }
        *((_DWORD *)this + 25) |= 0x200u;
        if ((unint64_t)v48 >= v20 || *v48 != 88)
          continue;
        v27 = v48 + 1;
        *((_QWORD *)a2 + 1) = v27;
LABEL_128:
        if ((unint64_t)v27 >= v20 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v49 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v27;
          v49 = v27 + 1;
          *((_QWORD *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 25) |= 0x400u;
        if ((unint64_t)v49 >= v20 || *v49 != 96)
          continue;
        v28 = v49 + 1;
        *((_QWORD *)a2 + 1) = v28;
LABEL_136:
        if ((unint64_t)v28 >= v20 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v50 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v28;
          v50 = v28 + 1;
          *((_QWORD *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 25) |= 0x800u;
        if ((unint64_t)v50 >= v20 || *v50 != 104)
          continue;
        v29 = v50 + 1;
        *((_QWORD *)a2 + 1) = v29;
LABEL_144:
        if ((unint64_t)v29 >= v20 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v51 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v29;
          v51 = v29 + 1;
          *((_QWORD *)a2 + 1) = v51;
        }
        *((_DWORD *)this + 25) |= 0x1000u;
        if ((unint64_t)v51 >= v20 || *v51 != 112)
          continue;
        v30 = v51 + 1;
        *((_QWORD *)a2 + 1) = v30;
LABEL_152:
        *(_QWORD *)v65 = 0;
        if ((unint64_t)v30 >= v20 || *v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v65);
          if (!(_DWORD)result)
            return result;
          v52 = *(_QWORD *)v65;
          v53 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v52 = *v30;
          v53 = v30 + 1;
          *((_QWORD *)a2 + 1) = v53;
        }
        *((_QWORD *)this + 9) = v52;
        *((_DWORD *)this + 25) |= 0x2000u;
        if ((unint64_t)v53 >= v20 || *v53 != 120)
          continue;
        v31 = v53 + 1;
        *((_QWORD *)a2 + 1) = v31;
LABEL_160:
        *(_QWORD *)v65 = 0;
        if ((unint64_t)v31 >= v20 || (char)*v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v65);
          if (!(_DWORD)result)
            return result;
          v54 = *(_QWORD *)v65;
          v55 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v54 = *v31;
          v55 = v31 + 1;
          *((_QWORD *)a2 + 1) = v55;
        }
        *((_QWORD *)this + 10) = v54;
        *((_DWORD *)this + 25) |= 0x4000u;
        if ((int)v20 - (int)v55 < 2 || *v55 != 128 || v55[1] != 1)
          continue;
        v32 = v55 + 2;
        *((_QWORD *)a2 + 1) = v32;
LABEL_169:
        if ((unint64_t)v32 >= v20 || (char)*v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v63);
          if (!(_DWORD)result)
            return result;
          v56 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v63 = *v32;
          v56 = v32 + 1;
          *((_QWORD *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 25) |= 0x8000u;
        if ((int)v20 - (int)v56 < 2 || *v56 != 136 || v56[1] != 1)
          continue;
        v33 = v56 + 2;
        *((_QWORD *)a2 + 1) = v33;
LABEL_178:
        if ((unint64_t)v33 >= v20 || (char)*v33 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v57 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v62 = *v33;
          v57 = v33 + 1;
          *((_QWORD *)a2 + 1) = v57;
        }
        *((_DWORD *)this + 25) |= 0x10000u;
        if ((int)v20 - (int)v57 < 2 || *v57 != 144 || v57[1] != 1)
          continue;
        v34 = (char *)(v57 + 2);
        *((_QWORD *)a2 + 1) = v34;
LABEL_187:
        v65[0] = 0;
        if ((unint64_t)v34 >= v20 || *v34 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v65);
          if (!(_DWORD)result)
            return result;
          v58 = v65[0];
          v59 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v58 = *v34;
          v59 = (unsigned __int8 *)(v34 + 1);
          *((_QWORD *)a2 + 1) = v59;
        }
        *((_BYTE *)this + 61) = v58 != 0;
        *((_DWORD *)this + 25) |= 0x20000u;
        if (v59 != (unsigned __int8 *)v20 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      case 4u:
        v13 = TagFallback & 7;
        if (v13 == 2)
          goto LABEL_74;
        goto LABEL_46;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_80;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_88;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_96;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_104;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_112;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_120;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_128;
      case 0xCu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v28 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_136;
      case 0xDu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v29 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_144;
      case 0xEu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v30 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_152;
      case 0xFu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_160;
      case 0x10u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_169;
      case 0x11u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v33 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_178;
      case 0x12u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v34 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_187;
      default:
        v13 = TagFallback & 7;
LABEL_46:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::MotionFitnessDaily::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 100);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 100);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_QWORD *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_QWORD *)(v5 + 80), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned int *)(v5 + 88), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned __int8 *)(v5 + 61), (uint64_t)a2, a4);
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned int *)(v5 + 92), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 100) & 0x20000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned __int8 *)(v5 + 61), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionFitnessDaily::ByteSize(awd::metrics::MotionFitnessDaily *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  int v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  int v37;

  v2 = *((_DWORD *)this + 25);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_53;
  }
  if ((v2 & 1) != 0)
  {
    LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 1))
                + 1;
    v2 = *((_DWORD *)this + 25);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    LODWORD(v3) = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 25);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  LODWORD(v3) = v3 + v9 + v5 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      v2 = *((_DWORD *)this + 25);
    }
    else
    {
      v11 = 1;
    }
    LODWORD(v3) = v3 + v11 + 1;
    if ((v2 & 8) == 0)
      goto LABEL_34;
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_34;
  }
  v12 = *((_QWORD *)this + 3);
  v13 = *(unsigned __int8 *)(v12 + 23);
  v14 = v13;
  v15 = *(_QWORD *)(v12 + 8);
  if ((v13 & 0x80u) == 0)
    v16 = *(unsigned __int8 *)(v12 + 23);
  else
    v16 = v15;
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16);
    v13 = *(unsigned __int8 *)(v12 + 23);
    v15 = *(_QWORD *)(v12 + 8);
    v2 = *((_DWORD *)this + 25);
    v14 = *(_BYTE *)(v12 + 23);
  }
  else
  {
    v17 = 1;
  }
  if (v14 < 0)
    v13 = v15;
  LODWORD(v3) = v3 + v17 + v13 + 1;
LABEL_34:
  if ((v2 & 0x10) != 0)
    v3 = (v3 + 2);
  else
    v3 = v3;
  if ((v2 & 0x20) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      v2 = *((_DWORD *)this + 25);
    }
    else
    {
      v19 = 1;
    }
    v3 = (v3 + v19 + 1);
    if ((v2 & 0x40) == 0)
    {
LABEL_39:
      if ((v2 & 0x80) == 0)
        goto LABEL_53;
      goto LABEL_49;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_39;
  }
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v20 >= 0x80)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
    v2 = *((_DWORD *)this + 25);
  }
  else
  {
    v21 = 1;
  }
  v3 = (v3 + v21 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_49:
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v22 >= 0x80)
    {
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      v2 = *((_DWORD *)this + 25);
    }
    else
    {
      v23 = 1;
    }
    v3 = (v3 + v23 + 1);
  }
LABEL_53:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_89;
  if ((v2 & 0x100) != 0)
  {
    v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if (v24 >= 0x80)
    {
      v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
      v2 = *((_DWORD *)this + 25);
    }
    else
    {
      v25 = 1;
    }
    v3 = (v3 + v25 + 1);
    if ((v2 & 0x200) == 0)
    {
LABEL_56:
      if ((v2 & 0x400) == 0)
        goto LABEL_57;
      goto LABEL_71;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_56;
  }
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    v2 = *((_DWORD *)this + 25);
  }
  else
  {
    v27 = 2;
  }
  v3 = (v27 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_57:
    if ((v2 & 0x800) == 0)
      goto LABEL_58;
    goto LABEL_75;
  }
LABEL_71:
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v28 >= 0x80)
  {
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    v2 = *((_DWORD *)this + 25);
  }
  else
  {
    v29 = 2;
  }
  v3 = (v29 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_58:
    if ((v2 & 0x1000) == 0)
      goto LABEL_59;
    goto LABEL_79;
  }
LABEL_75:
  v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v30 >= 0x80)
  {
    v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    v2 = *((_DWORD *)this + 25);
  }
  else
  {
    v31 = 2;
  }
  v3 = (v31 + v3);
  if ((v2 & 0x1000) == 0)
  {
LABEL_59:
    if ((v2 & 0x2000) == 0)
      goto LABEL_60;
    goto LABEL_83;
  }
LABEL_79:
  v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v32 >= 0x80)
  {
    v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 1;
    v2 = *((_DWORD *)this + 25);
  }
  else
  {
    v33 = 2;
  }
  v3 = (v33 + v3);
  if ((v2 & 0x2000) == 0)
  {
LABEL_60:
    if ((v2 & 0x4000) == 0)
      goto LABEL_61;
    goto LABEL_84;
  }
LABEL_83:
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 9))
     + 1;
  v2 = *((_DWORD *)this + 25);
  if ((v2 & 0x4000) == 0)
  {
LABEL_61:
    if ((v2 & 0x8000) == 0)
      goto LABEL_89;
    goto LABEL_85;
  }
LABEL_84:
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 10))
     + 1;
  v2 = *((_DWORD *)this + 25);
  if ((v2 & 0x8000) == 0)
    goto LABEL_89;
LABEL_85:
  v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
  if (v34 >= 0x80)
  {
    v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34) + 2;
    v2 = *((_DWORD *)this + 25);
  }
  else
  {
    v35 = 3;
  }
  v3 = (v35 + v3);
LABEL_89:
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 23);
      if (v36 >= 0x80)
      {
        v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36) + 2;
        v2 = *((_DWORD *)this + 25);
      }
      else
      {
        v37 = 3;
      }
      LODWORD(v3) = v37 + v3;
    }
    if ((v2 & 0x20000) != 0)
      v3 = (v3 + 3);
    else
      v3 = v3;
  }
  *((_DWORD *)this + 24) = v3;
  return v3;
}

void awd::metrics::MotionFitnessDaily::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessDaily *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionFitnessDaily::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionFitnessDaily::CopyFrom(awd::metrics::MotionFitnessDaily *this, const awd::metrics::MotionFitnessDaily *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessDaily *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionFitnessDaily::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionFitnessDaily::IsInitialized(awd::metrics::MotionFitnessDaily *this)
{
  return 1;
}

uint64_t awd::metrics::MotionFitnessDaily::Swap(uint64_t this, awd::metrics::MotionFitnessDaily *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 != (awd::metrics::MotionFitnessDaily *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    LOBYTE(v5) = *(_BYTE *)(this + 60);
    *(_BYTE *)(this + 60) = *((_BYTE *)a2 + 60);
    *((_BYTE *)a2 + 60) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    v6 = *(_QWORD *)(this + 72);
    *(_QWORD *)(this + 72) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v6;
    v7 = *(_QWORD *)(this + 80);
    *(_QWORD *)(this + 80) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 92);
    *(_DWORD *)(this + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v7;
    LOBYTE(v7) = *(_BYTE *)(this + 61);
    *(_BYTE *)(this + 61) = *((_BYTE *)a2 + 61);
    *((_BYTE *)a2 + 61) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 100);
    *(_DWORD *)(this + 100) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 96);
    *(_DWORD *)(this + 96) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v7;
  }
  return this;
}

_QWORD *awd::metrics::MotionFitnessDaily::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessDaily");
}

double awd::metrics::MotionFitnessPedometer::SharedCtor(awd::metrics::MotionFitnessPedometer *this)
{
  double result;

  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionFitnessPedometer *awd::metrics::MotionFitnessPedometer::MotionFitnessPedometer(awd::metrics::MotionFitnessPedometer *this, const awd::metrics::MotionFitnessPedometer *a2)
{
  *(_QWORD *)this = &off_24D98EDF8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  awd::metrics::MotionFitnessPedometer::MergeFrom(this, a2);
  return this;
}

void sub_218A0211C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessPedometer::MergeFrom(awd::metrics::MotionFitnessPedometer *this, const awd::metrics::MotionFitnessPedometer *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  _BYTE v24[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  v4 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v8 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 23) |= 1u;
    *((_QWORD *)this + 1) = v8;
    v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_31;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 23) |= 2u;
  *((_DWORD *)this + 4) = v9;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_32;
  }
LABEL_31:
  v10 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 23) |= 4u;
  *((_DWORD *)this + 5) = v10;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_33;
  }
LABEL_32:
  v11 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 23) |= 8u;
  *((_DWORD *)this + 6) = v11;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_34:
    v13 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x20u;
    *((_DWORD *)this + 8) = v13;
    v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_33:
  v12 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 23) |= 0x10u;
  *((_DWORD *)this + 7) = v12;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x20) != 0)
    goto LABEL_34;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_35:
  v14 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 23) |= 0x40u;
  *((_DWORD *)this + 9) = v14;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 23) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    v4 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_23;
  if ((v4 & 0x100) != 0)
  {
    v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 23) |= 0x100u;
    *((_DWORD *)this + 11) = v15;
    v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_39;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 23) |= 0x200u;
  *((_DWORD *)this + 12) = v16;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_40;
  }
LABEL_39:
  v17 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 23) |= 0x400u;
  *((_DWORD *)this + 13) = v17;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_41;
  }
LABEL_40:
  v18 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 23) |= 0x800u;
  *((_DWORD *)this + 14) = v18;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_42;
  }
LABEL_41:
  v19 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 23) |= 0x1000u;
  *((_DWORD *)this + 15) = v19;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_43;
  }
LABEL_42:
  v20 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 23) |= 0x2000u;
  *((_DWORD *)this + 16) = v20;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
LABEL_43:
  v21 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 23) |= 0x4000u;
  *((_DWORD *)this + 17) = v21;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    v6 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 23) |= 0x8000u;
    *((_DWORD *)this + 18) = v6;
    v4 = *((_DWORD *)a2 + 23);
  }
LABEL_23:
  if ((v4 & 0xFF0000) == 0)
    return;
  if ((v4 & 0x10000) != 0)
  {
    v22 = *((_DWORD *)a2 + 19);
    *((_DWORD *)this + 23) |= 0x10000u;
    *((_DWORD *)this + 19) = v22;
    v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x20000) == 0)
    {
LABEL_26:
      if ((v4 & 0x40000) == 0)
        return;
      goto LABEL_27;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  v23 = *((_DWORD *)a2 + 20);
  *((_DWORD *)this + 23) |= 0x20000u;
  *((_DWORD *)this + 20) = v23;
  if ((*((_DWORD *)a2 + 23) & 0x40000) == 0)
    return;
LABEL_27:
  v7 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 23) |= 0x40000u;
  *((_DWORD *)this + 21) = v7;
}

void sub_218A02414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessPedometer::~MotionFitnessPedometer(awd::metrics::MotionFitnessPedometer *this)
{
  *(_QWORD *)this = &off_24D98EDF8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98EDF8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98EDF8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionFitnessPedometer::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessPedometer::default_instance(awd::metrics::MotionFitnessPedometer *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionFitnessPedometer::default_instance_;
  if (!awd::metrics::MotionFitnessPedometer::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessPedometer::default_instance_;
  }
  return result;
}

double awd::metrics::MotionFitnessPedometer::New(awd::metrics::MotionFitnessPedometer *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98EDF8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  return result;
}

uint64_t awd::metrics::MotionFitnessPedometer::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 92);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 60) = 0u;
    *(_OWORD *)(this + 44) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_QWORD *)(this + 80) = 0;
    *(_DWORD *)(this + 76) = 0;
  }
  *(_DWORD *)(this + 92) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessPedometer::MergePartialFromCodedStream(awd::metrics::MotionFitnessPedometer *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  char *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  unsigned int v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  unsigned int v48;
  _BYTE *v49;
  unsigned int v50;
  _BYTE *v51;
  unsigned __int8 *v52;
  unsigned __int8 *v53;
  unsigned __int8 *v54;
  unsigned __int8 *v55;
  unsigned __int8 *v56;
  uint64_t result;
  unint64_t *v58;
  unsigned int *v59;
  unsigned int *v60;
  unsigned int *v61;
  unsigned int *v62;
  unsigned int *v63;
  unsigned int *v64;
  unsigned int *v65;
  unsigned int v66;

  v58 = (unint64_t *)((char *)this + 8);
  v63 = (unsigned int *)((char *)this + 16);
  v64 = (unsigned int *)((char *)this + 20);
  v65 = (unsigned int *)((char *)this + 24);
  v4 = (unsigned int *)((char *)this + 28);
  v5 = (unsigned int *)((char *)this + 32);
  v6 = (unsigned int *)((char *)this + 36);
  v7 = (unsigned int *)((char *)this + 40);
  v8 = (unsigned int *)((char *)this + 44);
  v9 = (unsigned int *)((char *)this + 48);
  v10 = (unsigned int *)((char *)this + 68);
  v61 = (unsigned int *)((char *)this + 76);
  v62 = (unsigned int *)((char *)this + 72);
  v59 = (unsigned int *)((char *)this + 84);
  v60 = (unsigned int *)((char *)this + 80);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v58 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_54:
          *((_DWORD *)this + 23) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_57;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v58);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_54;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_57:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v63);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v63 = *v17;
          v35 = v17 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 23) |= 2u;
        if ((unint64_t)v35 >= v14 || *v35 != 24)
          continue;
        v18 = v35 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_65:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v64 = *v18;
          v36 = v18 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 23) |= 4u;
        if ((unint64_t)v36 >= v14 || *v36 != 32)
          continue;
        v19 = v36 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_73:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v65);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v65 = *v19;
          v37 = v19 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 23) |= 8u;
        if ((unint64_t)v37 >= v14 || *v37 != 40)
          continue;
        v20 = v37 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_81:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v20;
          v38 = v20 + 1;
          *((_QWORD *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        if ((unint64_t)v38 >= v14 || *v38 != 48)
          continue;
        v21 = v38 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_89:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v21;
          v39 = v21 + 1;
          *((_QWORD *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        if ((unint64_t)v39 >= v14 || *v39 != 56)
          continue;
        v22 = v39 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_97:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v22;
          v40 = v22 + 1;
          *((_QWORD *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        if ((unint64_t)v40 >= v14 || *v40 != 64)
          continue;
        v23 = v40 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_105:
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v41 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v23;
          v41 = v23 + 1;
          *((_QWORD *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        if ((unint64_t)v41 >= v14 || *v41 != 72)
          continue;
        v24 = v41 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_113:
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v42 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v24;
          v42 = v24 + 1;
          *((_QWORD *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        if ((unint64_t)v42 >= v14 || *v42 != 80)
          continue;
        v25 = v42 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_121:
        if ((unint64_t)v25 >= v14 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v43 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v25;
          v43 = v25 + 1;
          *((_QWORD *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 23) |= 0x200u;
        if ((unint64_t)v43 >= v14 || *v43 != 88)
          continue;
        v26 = v43 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_129:
        v66 = 0;
        if ((unint64_t)v26 >= v14 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v66);
          if (!(_DWORD)result)
            return result;
          v44 = v66;
          v45 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v44 = *v26;
          v45 = v26 + 1;
          *((_QWORD *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 13) = v44;
        *((_DWORD *)this + 23) |= 0x400u;
        if ((unint64_t)v45 >= v14 || *v45 != 96)
          continue;
        v27 = v45 + 1;
        *((_QWORD *)a2 + 1) = v27;
LABEL_137:
        v66 = 0;
        if ((unint64_t)v27 >= v14 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v66);
          if (!(_DWORD)result)
            return result;
          v46 = v66;
          v47 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v46 = *v27;
          v47 = v27 + 1;
          *((_QWORD *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 14) = v46;
        *((_DWORD *)this + 23) |= 0x800u;
        if ((unint64_t)v47 >= v14 || *v47 != 104)
          continue;
        v28 = v47 + 1;
        *((_QWORD *)a2 + 1) = v28;
LABEL_145:
        v66 = 0;
        if ((unint64_t)v28 >= v14 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v66);
          if (!(_DWORD)result)
            return result;
          v48 = v66;
          v49 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v48 = *v28;
          v49 = v28 + 1;
          *((_QWORD *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 15) = v48;
        *((_DWORD *)this + 23) |= 0x1000u;
        if ((unint64_t)v49 >= v14 || *v49 != 112)
          continue;
        v29 = v49 + 1;
        *((_QWORD *)a2 + 1) = v29;
LABEL_153:
        v66 = 0;
        if ((unint64_t)v29 >= v14 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v66);
          if (!(_DWORD)result)
            return result;
          v50 = v66;
          v51 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v50 = *v29;
          v51 = v29 + 1;
          *((_QWORD *)a2 + 1) = v51;
        }
        *((_DWORD *)this + 16) = v50;
        *((_DWORD *)this + 23) |= 0x2000u;
        if ((unint64_t)v51 >= v14 || *v51 != 120)
          continue;
        v30 = v51 + 1;
        *((_QWORD *)a2 + 1) = v30;
LABEL_161:
        if ((unint64_t)v30 >= v14 || (char)*v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v52 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v30;
          v52 = v30 + 1;
          *((_QWORD *)a2 + 1) = v52;
        }
        *((_DWORD *)this + 23) |= 0x4000u;
        if ((int)v14 - (int)v52 < 2 || *v52 != 128 || v52[1] != 1)
          continue;
        v31 = v52 + 2;
        *((_QWORD *)a2 + 1) = v31;
LABEL_170:
        if ((unint64_t)v31 >= v14 || (char)*v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v53 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v62 = *v31;
          v53 = v31 + 1;
          *((_QWORD *)a2 + 1) = v53;
        }
        *((_DWORD *)this + 23) |= 0x8000u;
        if ((int)v14 - (int)v53 < 2 || *v53 != 136 || v53[1] != 1)
          continue;
        v32 = v53 + 2;
        *((_QWORD *)a2 + 1) = v32;
LABEL_179:
        if ((unint64_t)v32 >= v14 || (char)*v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!(_DWORD)result)
            return result;
          v54 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v61 = *v32;
          v54 = v32 + 1;
          *((_QWORD *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 23) |= 0x10000u;
        if ((int)v14 - (int)v54 < 2 || *v54 != 144 || v54[1] != 1)
          continue;
        v33 = v54 + 2;
        *((_QWORD *)a2 + 1) = v33;
LABEL_188:
        if ((unint64_t)v33 >= v14 || (char)*v33 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60);
          if (!(_DWORD)result)
            return result;
          v55 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v60 = *v33;
          v55 = v33 + 1;
          *((_QWORD *)a2 + 1) = v55;
        }
        *((_DWORD *)this + 23) |= 0x20000u;
        if ((int)v14 - (int)v55 < 2 || *v55 != 152 || v55[1] != 1)
          continue;
        v34 = (char *)(v55 + 2);
        *((_QWORD *)a2 + 1) = v34;
LABEL_197:
        if ((unint64_t)v34 >= v14 || *v34 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v59);
          if (!(_DWORD)result)
            return result;
          v56 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v59 = *v34;
          v56 = (unsigned __int8 *)(v34 + 1);
          *((_QWORD *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 23) |= 0x40000u;
        if (v56 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_65;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_73;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_81;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_89;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_97;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_105;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_113;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_121;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_129;
      case 0xCu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_137;
      case 0xDu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v28 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_145;
      case 0xEu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v29 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_153;
      case 0xFu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_161;
      case 0x10u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_170;
      case 0x11u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_179;
      case 0x12u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v33 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_188;
      case 0x13u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v34 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_197;
      default:
        v13 = TagFallback & 7;
LABEL_48:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::MotionFitnessPedometer::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[23];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[10], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[11], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[12], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[13], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[14], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[15], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[16], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v5[17], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[18], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[19], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v5[21], (uint64_t)a2, a4);
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v5[20], (uint64_t)a2, a4);
  if ((v5[23] & 0x40000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v5[21], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionFitnessPedometer::ByteSize(awd::metrics::MotionFitnessPedometer *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  int v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  int v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;

  v2 = *((_DWORD *)this + 23);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_42;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 23);
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v3 + v5 + 1);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v9 = 1;
  }
  v3 = (v3 + v9 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0)
      goto LABEL_15;
    goto LABEL_30;
  }
LABEL_26:
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v11 = 1;
  }
  v3 = (v3 + v11 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_30:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v13 = 1;
  }
  v3 = (v3 + v13 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0)
      goto LABEL_42;
    goto LABEL_38;
  }
LABEL_34:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v15 = 1;
  }
  v3 = (v3 + v15 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_38:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v17 = 1;
    }
    v3 = (v3 + v17 + 1);
  }
LABEL_42:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_92;
  if ((v2 & 0x100) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v19 = 1;
    }
    v3 = (v3 + v19 + 1);
    if ((v2 & 0x200) == 0)
    {
LABEL_45:
      if ((v2 & 0x400) == 0)
        goto LABEL_46;
      goto LABEL_60;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v20 >= 0x80)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v21 = 1;
  }
  v3 = (v3 + v21 + 1);
  if ((v2 & 0x400) == 0)
  {
LABEL_46:
    if ((v2 & 0x800) == 0)
      goto LABEL_47;
    goto LABEL_66;
  }
LABEL_60:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v22 & 0x80000000) != 0)
  {
    v23 = 10;
  }
  else if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v23 = 1;
  }
  v3 = (v3 + v23 + 1);
  if ((v2 & 0x800) == 0)
  {
LABEL_47:
    if ((v2 & 0x1000) == 0)
      goto LABEL_48;
    goto LABEL_72;
  }
LABEL_66:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v24 & 0x80000000) != 0)
  {
    v25 = 10;
  }
  else if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v25 = 1;
  }
  v3 = (v3 + v25 + 1);
  if ((v2 & 0x1000) == 0)
  {
LABEL_48:
    if ((v2 & 0x2000) == 0)
      goto LABEL_49;
    goto LABEL_78;
  }
LABEL_72:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v26 & 0x80000000) != 0)
  {
    v27 = 11;
  }
  else if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v27 = 2;
  }
  v3 = (v27 + v3);
  if ((v2 & 0x2000) == 0)
  {
LABEL_49:
    if ((v2 & 0x4000) == 0)
      goto LABEL_50;
    goto LABEL_84;
  }
LABEL_78:
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v28 & 0x80000000) != 0)
  {
    v29 = 11;
  }
  else if (v28 >= 0x80)
  {
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v29 = 2;
  }
  v3 = (v29 + v3);
  if ((v2 & 0x4000) == 0)
  {
LABEL_50:
    if ((v2 & 0x8000) == 0)
      goto LABEL_92;
    goto LABEL_88;
  }
LABEL_84:
  v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v30 >= 0x80)
  {
    v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v31 = 2;
  }
  v3 = (v31 + v3);
  if ((v2 & 0x8000) != 0)
  {
LABEL_88:
    v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if (v32 >= 0x80)
    {
      v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 2;
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v33 = 3;
    }
    v3 = (v33 + v3);
  }
LABEL_92:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_109;
  if ((v2 & 0x10000) != 0)
  {
    v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
    if (v34 >= 0x80)
    {
      v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34) + 2;
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v35 = 3;
    }
    v3 = (v35 + v3);
    if ((v2 & 0x20000) == 0)
    {
LABEL_95:
      if ((v2 & 0x40000) == 0)
        goto LABEL_109;
      goto LABEL_105;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_95;
  }
  v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if (v36 >= 0x80)
  {
    v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36) + 2;
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v37 = 3;
  }
  v3 = (v37 + v3);
  if ((v2 & 0x40000) != 0)
  {
LABEL_105:
    v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
    if (v38 >= 0x80)
      v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38) + 2;
    else
      v39 = 3;
    v3 = (v39 + v3);
  }
LABEL_109:
  *((_DWORD *)this + 22) = v3;
  return v3;
}

void awd::metrics::MotionFitnessPedometer::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessPedometer *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionFitnessPedometer::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionFitnessPedometer::CopyFrom(awd::metrics::MotionFitnessPedometer *this, const awd::metrics::MotionFitnessPedometer *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessPedometer *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionFitnessPedometer::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionFitnessPedometer::IsInitialized(awd::metrics::MotionFitnessPedometer *this)
{
  return 1;
}

uint64_t awd::metrics::MotionFitnessPedometer::Swap(uint64_t this, awd::metrics::MotionFitnessPedometer *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::MotionFitnessPedometer *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 76);
    *(_DWORD *)(this + 76) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 80);
    *(_DWORD *)(this + 80) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 84);
    *(_DWORD *)(this + 84) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 92);
    *(_DWORD *)(this + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return this;
}

_QWORD *awd::metrics::MotionFitnessPedometer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessPedometer");
}

double awd::metrics::MotionFitnessStrideCalibration::SharedCtor(awd::metrics::MotionFitnessStrideCalibration *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionFitnessStrideCalibration *awd::metrics::MotionFitnessStrideCalibration::MotionFitnessStrideCalibration(awd::metrics::MotionFitnessStrideCalibration *this, const awd::metrics::MotionFitnessStrideCalibration *a2)
{
  *(_QWORD *)this = &off_24D98EE70;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::MotionFitnessStrideCalibration::MergeFrom(this, a2);
  return this;
}

void sub_218A037B0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessStrideCalibration::MergeFrom(awd::metrics::MotionFitnessStrideCalibration *this, const awd::metrics::MotionFitnessStrideCalibration *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 13);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_16;
      }
    }
    else if ((*((_BYTE *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 13) |= 2u;
    *((_DWORD *)this + 4) = v7;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_17;
    }
LABEL_16:
    v8 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 13) |= 4u;
    *((_DWORD *)this + 5) = v8;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_18;
    }
LABEL_17:
    v9 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 13) |= 8u;
    *((_QWORD *)this + 3) = v9;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_19;
    }
LABEL_18:
    v10 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 13) |= 0x10u;
    *((_DWORD *)this + 8) = v10;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_20;
    }
LABEL_19:
    v11 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 9) = v11;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        return;
      goto LABEL_12;
    }
LABEL_20:
    v12 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 13) |= 0x40u;
    *((_DWORD *)this + 10) = v12;
    if ((*((_DWORD *)a2 + 13) & 0x80) == 0)
      return;
LABEL_12:
    v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 13) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
  }
}

void sub_218A03934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessStrideCalibration::~MotionFitnessStrideCalibration(awd::metrics::MotionFitnessStrideCalibration *this)
{
  *(_QWORD *)this = &off_24D98EE70;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98EE70;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98EE70;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::default_instance(awd::metrics::MotionFitnessStrideCalibration *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionFitnessStrideCalibration::default_instance_;
  if (!awd::metrics::MotionFitnessStrideCalibration::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessStrideCalibration::default_instance_;
  }
  return result;
}

double awd::metrics::MotionFitnessStrideCalibration::New(awd::metrics::MotionFitnessStrideCalibration *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98EE70;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 52))
  {
    *(_QWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::MergePartialFromCodedStream(awd::metrics::MotionFitnessStrideCalibration *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  uint64_t TagFallback;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  _BYTE *v23;
  _BYTE *v24;
  unint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  unsigned int v29;
  _BYTE *v30;
  unsigned __int8 *v31;
  uint64_t result;
  unsigned int v33;
  unint64_t v34;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 16);
  v6 = (unsigned int *)((char *)this + 20);
  v7 = (unsigned int *)((char *)this + 32);
  v8 = (unsigned int *)((char *)this + 36);
  v9 = (unsigned int *)((char *)this + 44);
  while (2)
  {
    v10 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v14 < v13 && (*v14 & 0x80000000) == 0)
        {
          *v4 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)a2 + 1) = v15;
LABEL_32:
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v15 < v13 && *v15 == 16)
          {
            v16 = v15 + 1;
            *((_QWORD *)a2 + 1) = v16;
            goto LABEL_35;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
          goto LABEL_32;
        }
        break;
      case 2u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
LABEL_35:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v23 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v16;
          v23 = v16 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v23 >= v13 || *v23 != 24)
          continue;
        v17 = v23 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_43:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v17;
          v24 = v17 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v24 >= v13 || *v24 != 32)
          continue;
        v18 = v24 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_51:
        v34 = 0;
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v34);
          if (!(_DWORD)result)
            return result;
          v25 = v34;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v25 = *v18;
          v26 = v18 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_QWORD *)this + 3) = v25;
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v26 >= v13 || *v26 != 40)
          continue;
        v19 = v26 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_59:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v19;
          v27 = v19 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if ((unint64_t)v27 >= v13 || *v27 != 48)
          continue;
        v20 = v27 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_67:
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v20;
          v28 = v20 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 13) |= 0x20u;
        if ((unint64_t)v28 >= v13 || *v28 != 56)
          continue;
        v21 = v28 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_75:
        v33 = 0;
        if ((unint64_t)v21 >= v13 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)result)
            return result;
          v29 = v33;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v29 = *v21;
          v30 = v21 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 10) = v29;
        *((_DWORD *)this + 13) |= 0x40u;
        if ((unint64_t)v30 >= v13 || *v30 != 64)
          continue;
        v22 = v30 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_83:
        if ((unint64_t)v22 >= v13 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v22;
          v31 = (unsigned __int8 *)(v22 + 1);
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 13) |= 0x80u;
        if (v31 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_43;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      case 5u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_59;
      case 6u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_67;
      case 7u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 8u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      default:
        v12 = TagFallback & 7;
LABEL_26:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::ByteSize(awd::metrics::MotionFitnessStrideCalibration *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;

  LOBYTE(v2) = *((_BYTE *)this + 52);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_41;
  }
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 13);
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 52) & 2) == 0)
      goto LABEL_11;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v5 = 2;
  }
  v3 = (v5 + v3);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      v2 = *((_DWORD *)this + 13);
    }
    else
    {
      v7 = 2;
    }
    v3 = (v7 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_23;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 3))
     + 1;
  v2 = *((_DWORD *)this + 13);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0)
      goto LABEL_15;
    goto LABEL_27;
  }
LABEL_23:
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v9 = 2;
  }
  v3 = (v9 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_31;
  }
LABEL_27:
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v11 = 2;
  }
  v3 = (v11 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0)
      goto LABEL_41;
    goto LABEL_37;
  }
LABEL_31:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_37:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v14 >= 0x80)
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    else
      v15 = 2;
    v3 = (v15 + v3);
  }
LABEL_41:
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void awd::metrics::MotionFitnessStrideCalibration::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessStrideCalibration *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionFitnessStrideCalibration::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionFitnessStrideCalibration::CopyFrom(awd::metrics::MotionFitnessStrideCalibration *this, const awd::metrics::MotionFitnessStrideCalibration *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessStrideCalibration *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionFitnessStrideCalibration::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::IsInitialized(awd::metrics::MotionFitnessStrideCalibration *this)
{
  return 1;
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::Swap(uint64_t this, awd::metrics::MotionFitnessStrideCalibration *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (awd::metrics::MotionFitnessStrideCalibration *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    v3 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
  }
  return this;
}

_QWORD *awd::metrics::MotionFitnessStrideCalibration::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessStrideCalibration");
}

_QWORD *awd::metrics::MotionFitnessAccelSampleRate::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

awd::metrics::MotionFitnessAccelSampleRate *awd::metrics::MotionFitnessAccelSampleRate::MotionFitnessAccelSampleRate(awd::metrics::MotionFitnessAccelSampleRate *this, const awd::metrics::MotionFitnessAccelSampleRate *a2)
{
  *(_QWORD *)this = &off_24D98EEE8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  awd::metrics::MotionFitnessAccelSampleRate::MergeFrom(this, a2);
  return this;
}

void sub_218A042F4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::MotionFitnessAccelSampleRate::MergeFrom(awd::metrics::MotionFitnessAccelSampleRate *this, const awd::metrics::MotionFitnessAccelSampleRate *a2)
{
  float result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 7);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((float *)a2 + 4);
    *((_DWORD *)this + 7) |= 2u;
    *((float *)this + 4) = result;
    if ((*((_DWORD *)a2 + 7) & 4) == 0)
      return result;
LABEL_7:
    result = *((float *)a2 + 5);
    *((_DWORD *)this + 7) |= 4u;
    *((float *)this + 5) = result;
  }
  return result;
}

void sub_218A043D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessAccelSampleRate::~MotionFitnessAccelSampleRate(awd::metrics::MotionFitnessAccelSampleRate *this)
{
  *(_QWORD *)this = &off_24D98EEE8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98EEE8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98EEE8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::default_instance(awd::metrics::MotionFitnessAccelSampleRate *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionFitnessAccelSampleRate::default_instance_;
  if (!awd::metrics::MotionFitnessAccelSampleRate::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessAccelSampleRate::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::MotionFitnessAccelSampleRate::New(awd::metrics::MotionFitnessAccelSampleRate *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_24D98EEE8;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::MergePartialFromCodedStream(awd::metrics::MotionFitnessAccelSampleRate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t result;
  _BYTE *v13;
  unsigned int v14;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v5;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v10 = (char *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
            if (!(_DWORD)result)
              return result;
            v11 = (_BYTE *)*((_QWORD *)a2 + 1);
            v9 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *v4 = *v10;
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
          }
          *((_DWORD *)this + 7) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 21)
          {
            *((_QWORD *)a2 + 1) = v11 + 1;
            goto LABEL_27;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if (v8 != 5)
          goto LABEL_19;
LABEL_27:
        v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v15) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v15;
        *((_DWORD *)this + 7) |= 2u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 < *((_QWORD *)a2 + 2) && *v13 == 29)
        {
          *((_QWORD *)a2 + 1) = v13 + 1;
          goto LABEL_31;
        }
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 5)
        goto LABEL_19;
LABEL_31:
      v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v14) & 1) == 0)
        return 0;
      *((_DWORD *)this + 5) = v14;
      *((_DWORD *)this + 7) |= 4u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_19:
    if (v8 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 28) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  return this;
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::ByteSize(awd::metrics::MotionFitnessAccelSampleRate *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 28);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 28) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      v2 = *((_DWORD *)this + 7);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 5;
    if ((v2 & 4) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

float awd::metrics::MotionFitnessAccelSampleRate::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessAccelSampleRate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::MotionFitnessAccelSampleRate::MergeFrom(this, lpsrc);
}

float awd::metrics::MotionFitnessAccelSampleRate::CopyFrom(awd::metrics::MotionFitnessAccelSampleRate *this, const awd::metrics::MotionFitnessAccelSampleRate *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessAccelSampleRate *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::MotionFitnessAccelSampleRate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::IsInitialized(awd::metrics::MotionFitnessAccelSampleRate *this)
{
  return 1;
}

float awd::metrics::MotionFitnessAccelSampleRate::Swap(awd::metrics::MotionFitnessAccelSampleRate *this, awd::metrics::MotionFitnessAccelSampleRate *a2)
{
  uint64_t v2;
  int v3;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    result = *((float *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((float *)a2 + 5) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

_QWORD *awd::metrics::MotionFitnessAccelSampleRate::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessAccelSampleRate");
}

double awd::metrics::MotionBarometerCalibration::SharedCtor(awd::metrics::MotionBarometerCalibration *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionBarometerCalibration *awd::metrics::MotionBarometerCalibration::MotionBarometerCalibration(awd::metrics::MotionBarometerCalibration *this, const awd::metrics::MotionBarometerCalibration *a2)
{
  *(_QWORD *)this = &off_24D98EF60;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  awd::metrics::MotionBarometerCalibration::MergeFrom(this, a2);
  return this;
}

void sub_218A048F4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::MotionBarometerCalibration::MergeFrom(awd::metrics::MotionBarometerCalibration *this, const awd::metrics::MotionBarometerCalibration *a2)
{
  float result;
  int v5;
  uint64_t v6;
  int v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 9) |= 2u;
    *((_DWORD *)this + 4) = v7;
    v5 = *((_DWORD *)a2 + 9);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    result = *((float *)a2 + 5);
    *((_DWORD *)this + 9) |= 4u;
    *((float *)this + 5) = result;
    v5 = *((_DWORD *)a2 + 9);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return result;
      goto LABEL_9;
    }
LABEL_14:
    result = *((float *)a2 + 6);
    *((_DWORD *)this + 9) |= 8u;
    *((float *)this + 6) = result;
    if ((*((_DWORD *)a2 + 9) & 0x10) == 0)
      return result;
LABEL_9:
    result = *((float *)a2 + 7);
    *((_DWORD *)this + 9) |= 0x10u;
    *((float *)this + 7) = result;
  }
  return result;
}

void sub_218A04A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionBarometerCalibration::~MotionBarometerCalibration(awd::metrics::MotionBarometerCalibration *this)
{
  *(_QWORD *)this = &off_24D98EF60;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98EF60;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98EF60;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionBarometerCalibration::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::MotionBarometerCalibration::default_instance(awd::metrics::MotionBarometerCalibration *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionBarometerCalibration::default_instance_;
  if (!awd::metrics::MotionBarometerCalibration::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionBarometerCalibration::default_instance_;
  }
  return result;
}

double awd::metrics::MotionBarometerCalibration::New(awd::metrics::MotionBarometerCalibration *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98EF60;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t awd::metrics::MotionBarometerCalibration::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::MotionBarometerCalibration::MergePartialFromCodedStream(awd::metrics::MotionBarometerCalibration *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  char *v12;
  uint64_t result;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 16);
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 9) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
          goto LABEL_28;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_28:
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 9) |= 2u;
        if ((unint64_t)v14 >= v9 || *v14 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_36:
        v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v19) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v19;
        *((_DWORD *)this + 9) |= 4u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_40:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v18;
        *((_DWORD *)this + 9) |= 8u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_44:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) != 0)
        {
          *((_DWORD *)this + 7) = v17;
          *((_DWORD *)this + 9) |= 0x10u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_36;
        goto LABEL_20;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_40;
        goto LABEL_20;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 != 5)
          goto LABEL_20;
        goto LABEL_44;
      default:
        v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::MotionBarometerCalibration::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 28), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 36) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 28), a3);
  return this;
}

uint64_t awd::metrics::MotionBarometerCalibration::ByteSize(awd::metrics::MotionBarometerCalibration *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  unsigned int v7;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 36) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 36) & 2) == 0)
      goto LABEL_11;
LABEL_7:
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      v2 = *((_DWORD *)this + 9);
    }
    else
    {
      v6 = 2;
    }
    v3 += v6;
    goto LABEL_11;
  }
  v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  v2 = *((_DWORD *)this + 9);
  if ((v2 & 2) != 0)
    goto LABEL_7;
LABEL_11:
  v7 = v3 + 5;
  if ((v2 & 4) == 0)
    v7 = v3;
  if ((v2 & 8) != 0)
    v7 += 5;
  if ((v2 & 0x10) != 0)
    result = v7 + 5;
  else
    result = v7;
LABEL_18:
  *((_DWORD *)this + 8) = result;
  return result;
}

float awd::metrics::MotionBarometerCalibration::CheckTypeAndMergeFrom(awd::metrics::MotionBarometerCalibration *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::MotionBarometerCalibration::MergeFrom(this, lpsrc);
}

float awd::metrics::MotionBarometerCalibration::CopyFrom(awd::metrics::MotionBarometerCalibration *this, const awd::metrics::MotionBarometerCalibration *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionBarometerCalibration *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::MotionBarometerCalibration::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::MotionBarometerCalibration::IsInitialized(awd::metrics::MotionBarometerCalibration *this)
{
  return 1;
}

float awd::metrics::MotionBarometerCalibration::Swap(awd::metrics::MotionBarometerCalibration *this, awd::metrics::MotionBarometerCalibration *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    result = *((float *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((float *)a2 + 7) = result;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return result;
}

_QWORD *awd::metrics::MotionBarometerCalibration::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionBarometerCalibration");
}

uint64_t awd::metrics::MotionGyroDaily::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::MotionGyroDaily *awd::metrics::MotionGyroDaily::MotionGyroDaily(awd::metrics::MotionGyroDaily *this, const awd::metrics::MotionGyroDaily *a2)
{
  *(_QWORD *)this = &off_24D98EFD8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  awd::metrics::MotionGyroDaily::MergeFrom(this, a2);
  return this;
}

void sub_218A050A8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroDaily::MergeFrom(awd::metrics::MotionGyroDaily *this, const awd::metrics::MotionGyroDaily *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 4) = v7;
    v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 8) |= 4u;
    *((_DWORD *)this + 5) = v8;
    if ((*((_DWORD *)a2 + 8) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 6) = v5;
  }
}

void sub_218A051AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroDaily::~MotionGyroDaily(awd::metrics::MotionGyroDaily *this)
{
  *(_QWORD *)this = &off_24D98EFD8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98EFD8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98EFD8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionGyroDaily::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t awd::metrics::MotionGyroDaily::default_instance(awd::metrics::MotionGyroDaily *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionGyroDaily::default_instance_;
  if (!awd::metrics::MotionGyroDaily::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionGyroDaily::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::MotionGyroDaily::New(awd::metrics::MotionGyroDaily *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_24D98EFD8;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t awd::metrics::MotionGyroDaily::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::MotionGyroDaily::MergePartialFromCodedStream(awd::metrics::MotionGyroDaily *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;

  v4 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_24:
          *((_DWORD *)this + 8) |= 1u;
          if ((unint64_t)v10 < v8 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
LABEL_27:
        v23 = 0;
        if ((unint64_t)v11 >= v8 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!(_DWORD)result)
            return result;
          v14 = v23;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v14 = *v11;
          v15 = v11 + 1;
          *((_QWORD *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 4) = v14;
        *((_DWORD *)this + 8) |= 2u;
        if ((unint64_t)v15 >= v8 || *v15 != 24)
          continue;
        v12 = v15 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_35:
        v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!(_DWORD)result)
            return result;
          v16 = v22;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v12;
          v17 = v12 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 5) = v16;
        *((_DWORD *)this + 8) |= 4u;
        if ((unint64_t)v17 >= v8 || *v17 != 32)
          continue;
        v13 = v17 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_43:
        v21 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v18 = v21;
          v19 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v13;
          v19 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 6) = v18;
        *((_DWORD *)this + 8) |= 8u;
        if (v19 != (unsigned __int8 *)v8 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_35;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_43;
      default:
        v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::MotionGyroDaily::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  if ((v5[8] & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionGyroDaily::ByteSize(awd::metrics::MotionGyroDaily *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_13;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v5 = 2;
  }
  v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_28;
    goto LABEL_22;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v6 & 0x80000000) != 0)
  {
    v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v7 = 2;
  }
  v3 = (v7 + v3);
  if ((v2 & 8) != 0)
  {
LABEL_22:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    }
    else
    {
      v9 = 2;
    }
    v3 = (v9 + v3);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void awd::metrics::MotionGyroDaily::CheckTypeAndMergeFrom(awd::metrics::MotionGyroDaily *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionGyroDaily::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionGyroDaily::CopyFrom(awd::metrics::MotionGyroDaily *this, const awd::metrics::MotionGyroDaily *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionGyroDaily *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionGyroDaily::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionGyroDaily::IsInitialized(awd::metrics::MotionGyroDaily *this)
{
  return 1;
}

uint64_t awd::metrics::MotionGyroDaily::Swap(uint64_t this, awd::metrics::MotionGyroDaily *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::MotionGyroDaily *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return this;
}

_QWORD *awd::metrics::MotionGyroDaily::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionGyroDaily");
}

BOOL awd::metrics::MotionSOSEvent_WorkoutType_IsValid(awd::metrics *this)
{
  return this < 0xD;
}

double awd::metrics::MotionSOSEvent::SharedCtor(awd::metrics::MotionSOSEvent *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionSOSEvent *awd::metrics::MotionSOSEvent::MotionSOSEvent(awd::metrics::MotionSOSEvent *this, const awd::metrics::MotionSOSEvent *a2)
{
  *(_QWORD *)this = &off_24D98F050;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::MotionSOSEvent::MergeFrom(this, a2);
  return this;
}

void sub_218A0586C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionSOSEvent::MergeFrom(awd::metrics::MotionSOSEvent *this, const awd::metrics::MotionSOSEvent *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  char v11;
  int v12;
  int v13;
  int v14;
  char v15;
  unsigned int v16;
  _BYTE v17[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  v4 = *((_DWORD *)a2 + 13);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 13) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *((_BYTE *)a2 + 20);
  *((_DWORD *)this + 13) |= 2u;
  *((_BYTE *)this + 20) = v8;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  v9 = *((_BYTE *)a2 + 21);
  *((_DWORD *)this + 13) |= 4u;
  *((_BYTE *)this + 21) = v9;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  v10 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 13) |= 8u;
  *((_DWORD *)this + 4) = v10;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_25:
    v12 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 6) = v12;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  v11 = *((_BYTE *)a2 + 22);
  *((_DWORD *)this + 13) |= 0x10u;
  *((_BYTE *)this + 22) = v11;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x20) != 0)
    goto LABEL_25;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_26:
  v13 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 13) |= 0x40u;
  *((_DWORD *)this + 7) = v13;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 13) |= 0x80u;
    *((_DWORD *)this + 8) = v5;
    v4 = *((_DWORD *)a2 + 13);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v14 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 13) |= 0x100u;
    *((_DWORD *)this + 9) = v14;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = *((_BYTE *)a2 + 23);
  *((_DWORD *)this + 13) |= 0x200u;
  *((_BYTE *)this + 23) = v15;
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      return;
    goto LABEL_18;
  }
LABEL_30:
  v16 = *((_DWORD *)a2 + 10);
  if (v16 >= 0xD)
    awd::metrics::MotionSOSEvent::MergeFrom();
  *((_DWORD *)this + 13) |= 0x400u;
  *((_DWORD *)this + 10) = v16;
  if ((*((_DWORD *)a2 + 13) & 0x800) != 0)
  {
LABEL_18:
    v6 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 13) |= 0x800u;
    *((_DWORD *)this + 11) = v6;
  }
}

void sub_218A05A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionSOSEvent::~MotionSOSEvent(awd::metrics::MotionSOSEvent *this)
{
  *(_QWORD *)this = &off_24D98F050;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F050;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F050;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::MotionSOSEvent::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::MotionSOSEvent::default_instance(awd::metrics::MotionSOSEvent *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::MotionSOSEvent::default_instance_;
  if (!awd::metrics::MotionSOSEvent::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionSOSEvent::default_instance_;
  }
  return result;
}

double awd::metrics::MotionSOSEvent::New(awd::metrics::MotionSOSEvent *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98F050;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t awd::metrics::MotionSOSEvent::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 52);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 24) = 0;
    *(_DWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 15) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_BYTE *)(this + 23) = 0;
    *(_QWORD *)(this + 40) = 0;
    *(_DWORD *)(this + 36) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::MotionSOSEvent::MergePartialFromCodedStream(awd::metrics::MotionSOSEvent *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  unint64_t v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  char *v25;
  unsigned int v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  _BYTE *v30;
  unsigned int v31;
  _BYTE *v32;
  unsigned int v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  _BYTE *v37;
  unsigned int v38;
  _BYTE *v39;
  unsigned int v40;
  _BYTE *v41;
  unsigned int v42;
  _BYTE *v43;
  unsigned __int8 *v44;
  uint64_t result;
  unsigned int v46;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 16);
  v6 = (unsigned int *)((char *)this + 32);
  v7 = (unsigned int *)((char *)this + 44);
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          *v4 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
LABEL_40:
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            v14 = v13 + 1;
            *((_QWORD *)a2 + 1) = v14;
            goto LABEL_43;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          goto LABEL_40;
        }
        break;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
LABEL_43:
        v46 = 0;
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!(_DWORD)result)
            return result;
          v26 = v46;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v26 = *v14;
          v27 = v14 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_BYTE *)this + 20) = v26 != 0;
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v27 >= v11 || *v27 != 24)
          continue;
        v15 = v27 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_51:
        v46 = 0;
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!(_DWORD)result)
            return result;
          v28 = v46;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v28 = *v15;
          v29 = v15 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_BYTE *)this + 21) = v28 != 0;
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v29 >= v11 || *v29 != 32)
          continue;
        v16 = v29 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_59:
        if ((unint64_t)v16 >= v11 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v16;
          v30 = v16 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v30 >= v11 || *v30 != 40)
          continue;
        v17 = v30 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_67:
        v46 = 0;
        if ((unint64_t)v17 >= v11 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!(_DWORD)result)
            return result;
          v31 = v46;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v31 = *v17;
          v32 = v17 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_BYTE *)this + 22) = v31 != 0;
        *((_DWORD *)this + 13) |= 0x10u;
        if ((unint64_t)v32 >= v11 || *v32 != 48)
          continue;
        v18 = v32 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_75:
        v46 = 0;
        if ((unint64_t)v18 >= v11 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!(_DWORD)result)
            return result;
          v33 = v46;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v33 = *v18;
          v34 = v18 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 6) = v33;
        *((_DWORD *)this + 13) |= 0x20u;
        if ((unint64_t)v34 >= v11 || *v34 != 56)
          continue;
        v19 = v34 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_83:
        v46 = 0;
        if ((unint64_t)v19 >= v11 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!(_DWORD)result)
            return result;
          v35 = v46;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v35 = *v19;
          v36 = v19 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 7) = v35;
        *((_DWORD *)this + 13) |= 0x40u;
        if ((unint64_t)v36 >= v11 || *v36 != 64)
          continue;
        v20 = v36 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_91:
        if ((unint64_t)v20 >= v11 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v20;
          v37 = v20 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 13) |= 0x80u;
        if ((unint64_t)v37 >= v11 || *v37 != 72)
          continue;
        v21 = v37 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_99:
        v46 = 0;
        if ((unint64_t)v21 >= v11 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!(_DWORD)result)
            return result;
          v38 = v46;
          v39 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v38 = *v21;
          v39 = v21 + 1;
          *((_QWORD *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 9) = v38;
        *((_DWORD *)this + 13) |= 0x100u;
        if ((unint64_t)v39 >= v11 || *v39 != 80)
          continue;
        v22 = v39 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_107:
        v46 = 0;
        if ((unint64_t)v22 >= v11 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!(_DWORD)result)
            return result;
          v40 = v46;
          v41 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v40 = *v22;
          v41 = v22 + 1;
          *((_QWORD *)a2 + 1) = v41;
        }
        *((_BYTE *)this + 23) = v40 != 0;
        *((_DWORD *)this + 13) |= 0x200u;
        if ((unint64_t)v41 >= v11 || *v41 != 88)
          continue;
        v23 = v41 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_115:
        v46 = 0;
        if ((unint64_t)v23 >= v11 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!(_DWORD)result)
            return result;
          v42 = v46;
        }
        else
        {
          v42 = *v23;
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
        if (v42 <= 0xC)
        {
          *((_DWORD *)this + 13) |= 0x400u;
          *((_DWORD *)this + 10) = v42;
        }
        v43 = (_BYTE *)*((_QWORD *)a2 + 1);
        v24 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v43 >= v24 || *v43 != 96)
          continue;
        v25 = v43 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_125:
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v44 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v24 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v25;
          v44 = (unsigned __int8 *)(v25 + 1);
          *((_QWORD *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 13) |= 0x800u;
        if (v44 != (unsigned __int8 *)v24 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_59;
      case 5u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_67;
      case 6u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 7u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      case 8u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_91;
      case 9u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_99;
      case 0xAu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_107;
      case 0xBu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_115;
      case 0xCu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v24 = *((_QWORD *)a2 + 2);
        goto LABEL_125;
      default:
        v10 = TagFallback & 7;
LABEL_34:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::MotionSOSEvent::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 21), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 22), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 23), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x800) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::MotionSOSEvent::ByteSize(awd::metrics::MotionSOSEvent *this)
{
  int v2;
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;

  v2 = *((_DWORD *)this + 13);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_39;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v3 = 0;
  }
  if ((v2 & 2) != 0)
    v3 += 2;
  if ((v2 & 4) != 0)
    LODWORD(v4) = v3 + 2;
  else
    LODWORD(v4) = v3;
  if ((v2 & 8) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      v2 = *((_DWORD *)this + 13);
    }
    else
    {
      v6 = 2;
    }
    LODWORD(v4) = v6 + v4;
  }
  if ((v2 & 0x10) != 0)
    v4 = (v4 + 2);
  else
    v4 = v4;
  if ((v2 & 0x20) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *((_DWORD *)this + 13);
    }
    else
    {
      v8 = 2;
    }
    v4 = (v8 + v4);
    if ((v2 & 0x40) == 0)
    {
LABEL_21:
      if ((v2 & 0x80) == 0)
        goto LABEL_39;
      goto LABEL_35;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_21;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v9 & 0x80000000) != 0)
  {
    v10 = 11;
  }
  else if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v10 = 2;
  }
  v4 = (v10 + v4);
  if ((v2 & 0x80) != 0)
  {
LABEL_35:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
      v2 = *((_DWORD *)this + 13);
    }
    else
    {
      v12 = 2;
    }
    v4 = (v12 + v4);
  }
LABEL_39:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
      if ((v13 & 0x80000000) != 0)
      {
        v14 = 11;
      }
      else if (v13 >= 0x80)
      {
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
        v2 = *((_DWORD *)this + 13);
      }
      else
      {
        v14 = 2;
      }
      LODWORD(v4) = v14 + v4;
    }
    if ((v2 & 0x200) != 0)
      v4 = (v4 + 2);
    else
      v4 = v4;
    if ((v2 & 0x400) != 0)
    {
      v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if ((v15 & 0x80000000) != 0)
      {
        v16 = 11;
      }
      else if (v15 >= 0x80)
      {
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
        v2 = *((_DWORD *)this + 13);
      }
      else
      {
        v16 = 2;
      }
      v4 = (v16 + v4);
    }
    if ((v2 & 0x800) != 0)
    {
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if (v17 >= 0x80)
        v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
      else
        v18 = 2;
      v4 = (v18 + v4);
    }
  }
  *((_DWORD *)this + 12) = v4;
  return v4;
}

void awd::metrics::MotionSOSEvent::CheckTypeAndMergeFrom(awd::metrics::MotionSOSEvent *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::MotionSOSEvent::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionSOSEvent::CopyFrom(awd::metrics::MotionSOSEvent *this, const awd::metrics::MotionSOSEvent *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionSOSEvent *))(*(_QWORD *)this + 32))(this);
    awd::metrics::MotionSOSEvent::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionSOSEvent::IsInitialized(awd::metrics::MotionSOSEvent *this)
{
  return 1;
}

uint64_t awd::metrics::MotionSOSEvent::Swap(uint64_t this, awd::metrics::MotionSOSEvent *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::MotionSOSEvent *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 20);
    *(_BYTE *)(this + 20) = *((_BYTE *)a2 + 20);
    *((_BYTE *)a2 + 20) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 21);
    *(_BYTE *)(this + 21) = *((_BYTE *)a2 + 21);
    *((_BYTE *)a2 + 21) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 22);
    *(_BYTE *)(this + 22) = *((_BYTE *)a2 + 22);
    *((_BYTE *)a2 + 22) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 23);
    *(_BYTE *)(this + 23) = *((_BYTE *)a2 + 23);
    *((_BYTE *)a2 + 23) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
  }
  return this;
}

_QWORD *awd::metrics::MotionSOSEvent::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionSOSEvent");
}

uint64_t awd::metrics::LocationBatteryState::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationBatteryState *awd::metrics::LocationBatteryState::LocationBatteryState(awd::metrics::LocationBatteryState *this, const awd::metrics::LocationBatteryState *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F0C8;
  *((_BYTE *)this + 24) = 0;
  awd::metrics::LocationBatteryState::MergeFrom(this, a2);
  return this;
}

void sub_218A0678C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBatteryState::MergeFrom(awd::metrics::LocationBatteryState *this, const awd::metrics::LocationBatteryState *a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 8) |= 2u;
    *((_QWORD *)this + 2) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return;
LABEL_7:
    v5 = *((_BYTE *)a2 + 24);
    *((_DWORD *)this + 8) |= 4u;
    *((_BYTE *)this + 24) = v5;
  }
}

void sub_218A06870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBatteryState::~LocationBatteryState(awd::metrics::LocationBatteryState *this)
{
  *(_QWORD *)this = &off_24D98F0C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F0C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F0C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationBatteryState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t awd::metrics::LocationBatteryState::default_instance(awd::metrics::LocationBatteryState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationBatteryState::default_instance_;
  if (!awd::metrics::LocationBatteryState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationBatteryState::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationBatteryState::New(awd::metrics::LocationBatteryState *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F0C8;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationBatteryState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_BYTE *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationBatteryState::MergePartialFromCodedStream(awd::metrics::LocationBatteryState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  unint64_t v14;
  _BYTE *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  uint64_t result;
  unsigned int v19;
  unint64_t v20;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v12 < v9 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_27;
        }
      }
      if (v7 != 2)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v13 = (char *)*((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
LABEL_27:
      v20 = 0;
      if ((unint64_t)v13 >= v9 || *v13 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20);
        if (!(_DWORD)result)
          return result;
        v14 = v20;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v14 = *v13;
        v15 = v13 + 1;
        *((_QWORD *)a2 + 1) = v15;
      }
      *((_QWORD *)this + 2) = v14;
      *((_DWORD *)this + 8) |= 2u;
      if ((unint64_t)v15 < v9 && *v15 == 24)
      {
        v10 = v15 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_35:
        v19 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v19);
          if (!(_DWORD)result)
            return result;
          v16 = v19;
          v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v10;
          v17 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_BYTE *)this + 24) = v16 != 0;
        *((_DWORD *)this + 8) |= 4u;
        if (v17 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_19:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationBatteryState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationBatteryState::ByteSize(awd::metrics::LocationBatteryState *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_11;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 2))
        + 1;
    v2 = *((_DWORD *)this + 8);
  }
LABEL_8:
  if ((v2 & 4) != 0)
    result = v3 + 2;
  else
    result = v3;
LABEL_11:
  *((_DWORD *)this + 7) = result;
  return result;
}

void awd::metrics::LocationBatteryState::CheckTypeAndMergeFrom(awd::metrics::LocationBatteryState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationBatteryState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationBatteryState::CopyFrom(awd::metrics::LocationBatteryState *this, const awd::metrics::LocationBatteryState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationBatteryState *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationBatteryState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationBatteryState::IsInitialized(awd::metrics::LocationBatteryState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationBatteryState::Swap(uint64_t this, awd::metrics::LocationBatteryState *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationBatteryState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LOBYTE(v3) = *(_BYTE *)(this + 24);
    *(_BYTE *)(this + 24) = *((_BYTE *)a2 + 24);
    *((_BYTE *)a2 + 24) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationBatteryState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationBatteryState");
}

double awd::metrics::LocationNavigationSession::SharedCtor(awd::metrics::LocationNavigationSession *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_BYTE *)this + 88) = 0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

awd::metrics::LocationNavigationSession *awd::metrics::LocationNavigationSession::LocationNavigationSession(awd::metrics::LocationNavigationSession *this, const awd::metrics::LocationNavigationSession *a2)
{
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(_QWORD *)this = &off_24D98F140;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_BYTE *)this + 88) = 0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  *((_QWORD *)this + 7) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::LocationNavigationSession::MergeFrom(this, a2);
  return this;
}

void sub_218A06E58(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationBatteryState>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationNavigationSession::MergeFrom(awd::metrics::LocationNavigationSession *this, const awd::metrics::LocationNavigationSession *a2)
{
  uint64_t v4;
  const awd::metrics::LocationBatteryState *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  const std::string *v15;
  std::string *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationNavigationSession *)((char *)this + 64));
  if (*((int *)a2 + 18) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationBatteryState **)(*((_QWORD *)a2 + 8) + 8 * v4);
      v6 = *((_DWORD *)this + 19);
      v7 = *((int *)this + 18);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationNavigationSession *)((char *)this + 64));
          v6 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v6 + 1;
        v9 = operator new();
        *(_DWORD *)(v9 + 28) = 0;
        *(_DWORD *)(v9 + 32) = 0;
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
        *(_QWORD *)v9 = &off_24D98F0C8;
        *(_BYTE *)(v9 + 24) = 0;
        v10 = *((_QWORD *)this + 8);
        v11 = *((int *)this + 18);
        *((_DWORD *)this + 18) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 8);
        *((_DWORD *)this + 18) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      awd::metrics::LocationBatteryState::MergeFrom((awd::metrics::LocationBatteryState *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 18));
  }
  LOBYTE(v12) = *((_BYTE *)a2 + 96);
  if ((_BYTE)v12)
  {
    if ((*((_BYTE *)a2 + 96) & 1) != 0)
    {
      v14 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 24) |= 1u;
      *((_QWORD *)this + 1) = v14;
      v12 = *((_DWORD *)a2 + 24);
      if ((v12 & 2) == 0)
      {
LABEL_14:
        if ((v12 & 4) == 0)
          goto LABEL_15;
        goto LABEL_26;
      }
    }
    else if ((*((_BYTE *)a2 + 96) & 2) == 0)
    {
      goto LABEL_14;
    }
    v15 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 24) |= 2u;
    v16 = (std::string *)*((_QWORD *)this + 2);
    if (v16 == (std::string *)MEMORY[0x24BEDD958])
    {
      v16 = (std::string *)operator new();
      v16->__r_.__value_.__l.__size_ = 0;
      v16->__r_.__value_.__r.__words[2] = 0;
      v16->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v16;
    }
    std::string::operator=(v16, v15);
    v12 = *((_DWORD *)a2 + 24);
    if ((v12 & 4) == 0)
    {
LABEL_15:
      if ((v12 & 8) == 0)
        goto LABEL_16;
      goto LABEL_27;
    }
LABEL_26:
    v17 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 24) |= 4u;
    *((_QWORD *)this + 3) = v17;
    v12 = *((_DWORD *)a2 + 24);
    if ((v12 & 8) == 0)
    {
LABEL_16:
      if ((v12 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_28;
    }
LABEL_27:
    v18 = *((_QWORD *)a2 + 4);
    *((_DWORD *)this + 24) |= 8u;
    *((_QWORD *)this + 4) = v18;
    v12 = *((_DWORD *)a2 + 24);
    if ((v12 & 0x10) == 0)
    {
LABEL_17:
      if ((v12 & 0x20) == 0)
        goto LABEL_18;
      goto LABEL_29;
    }
LABEL_28:
    v19 = *((_QWORD *)a2 + 5);
    *((_DWORD *)this + 24) |= 0x10u;
    *((_QWORD *)this + 5) = v19;
    v12 = *((_DWORD *)a2 + 24);
    if ((v12 & 0x20) == 0)
    {
LABEL_18:
      if ((v12 & 0x40) == 0)
        goto LABEL_19;
      goto LABEL_30;
    }
LABEL_29:
    v20 = *((_QWORD *)a2 + 6);
    *((_DWORD *)this + 24) |= 0x20u;
    *((_QWORD *)this + 6) = v20;
    v12 = *((_DWORD *)a2 + 24);
    if ((v12 & 0x40) == 0)
    {
LABEL_19:
      if ((v12 & 0x80) == 0)
        return;
      goto LABEL_20;
    }
LABEL_30:
    v21 = *((_QWORD *)a2 + 7);
    *((_DWORD *)this + 24) |= 0x40u;
    *((_QWORD *)this + 7) = v21;
    if ((*((_DWORD *)a2 + 24) & 0x80) == 0)
      return;
LABEL_20:
    v13 = *((_BYTE *)a2 + 88);
    *((_DWORD *)this + 24) |= 0x80u;
    *((_BYTE *)this + 88) = v13;
  }
}

void sub_218A07108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationNavigationSession::~LocationNavigationSession(awd::metrics::LocationNavigationSession *this)
{
  uint64_t *v2;

  *(_QWORD *)this = &off_24D98F140;
  v2 = (uint64_t *)((char *)this + 64);
  awd::metrics::LocationNavigationSession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationBatteryState>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationNavigationSession::~LocationNavigationSession(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationNavigationSession::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationNavigationSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

uint64_t awd::metrics::LocationNavigationSession::default_instance(awd::metrics::LocationNavigationSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationNavigationSession::default_instance_;
  if (!awd::metrics::LocationNavigationSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationNavigationSession::default_instance_;
  }
  return result;
}

double awd::metrics::LocationNavigationSession::New(awd::metrics::LocationNavigationSession *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)(v1 + 72) = 0;
  *(_DWORD *)(v1 + 80) = 0;
  *(_QWORD *)v1 = &off_24D98F140;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEDD958];
  *(_BYTE *)(v1 + 88) = 0;
  *(_DWORD *)(v1 + 92) = 0;
  *(_DWORD *)(v1 + 96) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t awd::metrics::LocationNavigationSession::Clear(uint64_t this)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  v2 = *(_BYTE *)(this + 96);
  if (v2)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *(_BYTE *)(this + 88) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 40) = 0u;
    *(_QWORD *)(this + 56) = 0;
  }
  if (*(int *)(this + 72) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 64) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 72));
  }
  *(_DWORD *)(v1 + 72) = 0;
  *(_DWORD *)(v1 + 96) = 0;
  return this;
}

uint64_t awd::metrics::LocationNavigationSession::MergePartialFromCodedStream(awd::metrics::LocationNavigationSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  unint64_t *v7;
  unint64_t *v8;
  unsigned __int8 *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  int v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t result;
  _QWORD *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  unsigned int v31;
  _BYTE *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  int v40;
  int v41;
  int v42;
  BOOL v43;
  int v44;
  _BYTE *v45;
  unint64_t *v46;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v47;
  unsigned int v48;
  unsigned int v49;

  v4 = (unint64_t *)((char *)this + 24);
  v5 = (unint64_t *)((char *)this + 32);
  v6 = (unint64_t *)((char *)this + 40);
  v7 = (unint64_t *)((char *)this + 48);
  v8 = (unint64_t *)((char *)this + 56);
  v46 = (unint64_t *)((char *)this + 8);
  v47 = (awd::metrics::LocationNavigationSession *)((char *)this + 64);
  while (1)
  {
    v9 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || (char)*v9 < 0)
      break;
    TagFallback = *v9;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((_QWORD *)a2 + 1) = v9 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v46);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v46 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        v15 = *((_DWORD *)this + 24) | 1;
        *((_DWORD *)this + 24) = v15;
        if ((unint64_t)v14 < v12 && *v14 == 18)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
          goto LABEL_36;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_28;
        v15 = *((_DWORD *)this + 24);
LABEL_36:
        *((_DWORD *)this + 24) = v15 | 2;
        if (*((_QWORD *)this + 2) == MEMORY[0x24BEDD958])
        {
          v24 = (_QWORD *)operator new();
          v24[1] = 0;
          v24[2] = 0;
          *v24 = 0;
          *((_QWORD *)this + 2) = v24;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v25 >= v16 || *v25 != 24)
          continue;
        v17 = v25 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_42:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v17;
          v26 = v17 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 24) |= 4u;
        if ((unint64_t)v26 >= v16 || *v26 != 32)
          continue;
        v18 = v26 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_50:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v18;
          v27 = v18 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 24) |= 8u;
        if ((unint64_t)v27 >= v16 || *v27 != 40)
          continue;
        v19 = v27 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_58:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v19;
          v28 = v19 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 24) |= 0x10u;
        if ((unint64_t)v28 >= v16 || *v28 != 48)
          continue;
        v20 = v28 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_66:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v20;
          v29 = v20 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 24) |= 0x20u;
        if ((unint64_t)v29 >= v16 || *v29 != 56)
          continue;
        v21 = v29 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_74:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v21;
          v30 = v21 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 24) |= 0x40u;
        if ((unint64_t)v30 >= v16 || *v30 != 64)
          continue;
        v22 = v30 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_82:
        v48 = 0;
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48);
          if (!(_DWORD)result)
            return result;
          v31 = v48;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v31 = *v22;
          v32 = v22 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_BYTE *)this + 88) = v31 != 0;
        *((_DWORD *)this + 24) |= 0x80u;
        if ((unint64_t)v32 >= v16 || *v32 != 74)
          continue;
        break;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_50;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_58;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_66;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_74;
      case 8u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_82;
      case 9u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_28;
        goto LABEL_90;
      default:
        v11 = TagFallback & 7;
LABEL_28:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    do
    {
      *((_QWORD *)a2 + 1) = v32 + 1;
LABEL_90:
      v33 = *((_DWORD *)this + 19);
      v34 = *((int *)this + 18);
      if ((int)v34 >= v33)
      {
        if (v33 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v47);
          v33 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v33 + 1;
        v36 = operator new();
        *(_DWORD *)(v36 + 28) = 0;
        *(_DWORD *)(v36 + 32) = 0;
        *(_QWORD *)(v36 + 8) = 0;
        *(_QWORD *)(v36 + 16) = 0;
        *(_QWORD *)v36 = &off_24D98F0C8;
        *(_BYTE *)(v36 + 24) = 0;
        v37 = *((_QWORD *)this + 8);
        v38 = *((int *)this + 18);
        *((_DWORD *)this + 18) = v38 + 1;
        *(_QWORD *)(v37 + 8 * v38) = v36;
      }
      else
      {
        v35 = *((_QWORD *)this + 8);
        *((_DWORD *)this + 18) = v34 + 1;
        v36 = *(_QWORD *)(v35 + 8 * v34);
      }
      v49 = 0;
      v39 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49))
          return 0;
      }
      else
      {
        v49 = *v39;
        *((_QWORD *)a2 + 1) = v39 + 1;
      }
      v40 = *((_DWORD *)a2 + 14);
      v41 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v40 + 1;
      if (v40 >= v41)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationBatteryState::MergePartialFromCodedStream((awd::metrics::LocationBatteryState *)v36, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v42 = *((_DWORD *)a2 + 14);
      v43 = __OFSUB__(v42, 1);
      v44 = v42 - 1;
      if (v44 < 0 == v43)
        *((_DWORD *)a2 + 14) = v44;
      v32 = (_BYTE *)*((_QWORD *)a2 + 1);
      v45 = (_BYTE *)*((_QWORD *)a2 + 2);
    }
    while (v32 < v45 && *v32 == 74);
    if (v32 == v45 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
  TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t awd::metrics::LocationNavigationSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 96);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(v5 + 56), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 96) & 0x80) != 0)
LABEL_9:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 88), (uint64_t)a2, a4);
LABEL_10:
  if (*(int *)(v5 + 72) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_QWORD *)(*(_QWORD *)(v5 + 64) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 72));
  }
  return this;
}

uint64_t awd::metrics::LocationNavigationSession::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;

  v2 = *((unsigned __int8 *)this + 96);
  if (*((_BYTE *)this + 96))
  {
    if ((v2 & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
      v2 = *((_DWORD *)this + 24);
      if ((v2 & 2) == 0)
        goto LABEL_15;
    }
    else
    {
      v3 = 0;
      if ((v2 & 2) == 0)
        goto LABEL_15;
    }
    v4 = this[2];
    v5 = *((unsigned __int8 *)v4 + 23);
    v6 = v5;
    v7 = *((_QWORD *)v4 + 1);
    if ((v5 & 0x80u) == 0)
      v8 = *((unsigned __int8 *)v4 + 23);
    else
      v8 = v7;
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      v5 = *((unsigned __int8 *)v4 + 23);
      v7 = *((_QWORD *)v4 + 1);
      v2 = *((_DWORD *)this + 24);
      v6 = *((_BYTE *)v4 + 23);
    }
    else
    {
      v9 = 1;
    }
    if (v6 < 0)
      v5 = v7;
    v3 += v9 + v5 + 1;
LABEL_15:
    if ((v2 & 4) != 0)
    {
      v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[3]) + 1;
      v2 = *((_DWORD *)this + 24);
      if ((v2 & 8) == 0)
      {
LABEL_17:
        if ((v2 & 0x10) == 0)
          goto LABEL_18;
        goto LABEL_33;
      }
    }
    else if ((v2 & 8) == 0)
    {
      goto LABEL_17;
    }
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[4]) + 1;
    v2 = *((_DWORD *)this + 24);
    if ((v2 & 0x10) == 0)
    {
LABEL_18:
      if ((v2 & 0x20) == 0)
        goto LABEL_19;
      goto LABEL_34;
    }
LABEL_33:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[5]) + 1;
    v2 = *((_DWORD *)this + 24);
    if ((v2 & 0x20) == 0)
    {
LABEL_19:
      if ((v2 & 0x40) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
LABEL_34:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[6]) + 1;
    v2 = *((_DWORD *)this + 24);
    if ((v2 & 0x40) == 0)
    {
LABEL_21:
      if ((v2 & 0x80) != 0)
        v2 = v3 + 2;
      else
        v2 = v3;
      goto LABEL_24;
    }
LABEL_20:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[7]) + 1;
    v2 = *((_DWORD *)this + 24);
    goto LABEL_21;
  }
LABEL_24:
  v10 = *((_DWORD *)this + 18);
  v11 = (v10 + v2);
  if (v10 >= 1)
  {
    v12 = 0;
    do
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationBatteryState::ByteSize(*((awd::metrics::LocationBatteryState **)this[8] + v12));
      v14 = (int)v13;
      if (v13 >= 0x80)
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      else
        v15 = 1;
      v11 = (v14 + v11 + v15);
      ++v12;
    }
    while (v12 < *((int *)this + 18));
  }
  *((_DWORD *)this + 23) = v11;
  return v11;
}

void awd::metrics::LocationNavigationSession::CheckTypeAndMergeFrom(awd::metrics::LocationNavigationSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationNavigationSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationNavigationSession::CopyFrom(awd::metrics::LocationNavigationSession *this, const awd::metrics::LocationNavigationSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationNavigationSession *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationNavigationSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationNavigationSession::IsInitialized(awd::metrics::LocationNavigationSession *this)
{
  return 1;
}

uint64_t awd::metrics::LocationNavigationSession::Swap(uint64_t this, awd::metrics::LocationNavigationSession *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  if (a2 != (awd::metrics::LocationNavigationSession *)this)
  {
    v3 = this;
    v4 = *(_QWORD *)(this + 8);
    v5 = *(_QWORD *)(this + 16);
    v6 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v6;
    *((_QWORD *)a2 + 1) = v4;
    *((_QWORD *)a2 + 2) = v5;
    v7 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v7;
    v8 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v8;
    v9 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v9;
    v10 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v10;
    v11 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v11;
    LOBYTE(v11) = *(_BYTE *)(this + 88);
    *(_BYTE *)(this + 88) = *((_BYTE *)a2 + 88);
    *((_BYTE *)a2 + 88) = v11;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v12 = *(_DWORD *)(v3 + 96);
    *(_DWORD *)(v3 + 96) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v12;
    v13 = *(_DWORD *)(v3 + 92);
    *(_DWORD *)(v3 + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v13;
  }
  return this;
}

_QWORD *awd::metrics::LocationNavigationSession::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationNavigationSession");
}

double awd::metrics::LocationMainHarvesterMetrics::SharedCtor(awd::metrics::LocationMainHarvesterMetrics *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

awd::metrics::LocationMainHarvesterMetrics *awd::metrics::LocationMainHarvesterMetrics::LocationMainHarvesterMetrics(awd::metrics::LocationMainHarvesterMetrics *this, const awd::metrics::LocationMainHarvesterMetrics *a2)
{
  *(_QWORD *)this = &off_24D98F1B8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  awd::metrics::LocationMainHarvesterMetrics::MergeFrom(this, a2);
  return this;
}

void sub_218A07E28(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMainHarvesterMetrics::MergeFrom(awd::metrics::LocationMainHarvesterMetrics *this, const awd::metrics::LocationMainHarvesterMetrics *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  _BYTE v17[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  v4 = *((_DWORD *)a2 + 18);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 18) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 18) |= 2u;
  v9 = (std::string *)*((_QWORD *)this + 2);
  if (v9 == (std::string *)MEMORY[0x24BEDD958])
  {
    v9 = (std::string *)operator new();
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v9;
  }
  std::string::operator=(v9, v8);
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 18) |= 4u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 18) |= 8u;
  *((_DWORD *)this + 7) = v11;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_26:
    v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 18) |= 0x20u;
    *((_DWORD *)this + 9) = v13;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 18) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0)
    goto LABEL_26;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_27:
  v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 18) |= 0x40u;
  *((_DWORD *)this + 10) = v14;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 18) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    v4 = *((_DWORD *)a2 + 18);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v15 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 18) |= 0x100u;
    *((_DWORD *)this + 16) = v15;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        return;
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v16 = *((_QWORD *)a2 + 6);
  *((_DWORD *)this + 18) |= 0x200u;
  *((_QWORD *)this + 6) = v16;
  if ((*((_DWORD *)a2 + 18) & 0x400) == 0)
    return;
LABEL_17:
  v6 = *((_QWORD *)a2 + 7);
  *((_DWORD *)this + 18) |= 0x400u;
  *((_QWORD *)this + 7) = v6;
}

void sub_218A0805C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMainHarvesterMetrics::~LocationMainHarvesterMetrics(awd::metrics::LocationMainHarvesterMetrics *this)
{
  *(_QWORD *)this = &off_24D98F1B8;
  awd::metrics::LocationMainHarvesterMetrics::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F1B8;
  awd::metrics::LocationMainHarvesterMetrics::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F1B8;
  awd::metrics::LocationMainHarvesterMetrics::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::default_instance(awd::metrics::LocationMainHarvesterMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMainHarvesterMetrics::default_instance_;
  if (!awd::metrics::LocationMainHarvesterMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMainHarvesterMetrics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMainHarvesterMetrics::New(awd::metrics::LocationMainHarvesterMetrics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98F1B8;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEDD958];
  *(_DWORD *)(v1 + 68) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 52) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 72);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 40) = 0;
    v1 = *(_DWORD *)(this + 72);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 56) = 0;
    *(_DWORD *)(this + 64) = 0;
  }
  *(_DWORD *)(this + 72) = 0;
  return this;
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::MergePartialFromCodedStream(awd::metrics::LocationMainHarvesterMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unint64_t *v9;
  unint64_t *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  int v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  unsigned __int8 *v38;
  uint64_t result;
  unint64_t *v40;
  unsigned int *v41;
  unsigned int *v42;

  v40 = (unint64_t *)((char *)this + 8);
  v41 = (unsigned int *)((char *)this + 24);
  v42 = (unsigned int *)((char *)this + 28);
  v4 = (unsigned int *)((char *)this + 32);
  v5 = (unsigned int *)((char *)this + 36);
  v6 = (unsigned int *)((char *)this + 40);
  v7 = (unsigned int *)((char *)this + 44);
  v8 = (unsigned int *)((char *)this + 64);
  v9 = (unint64_t *)((char *)this + 48);
  v10 = (unint64_t *)((char *)this + 56);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v40 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_38:
          v17 = *((_DWORD *)this + 18) | 1;
          *((_DWORD *)this + 18) = v17;
          if ((unint64_t)v16 < v14 && *v16 == 18)
          {
            *((_QWORD *)a2 + 1) = v16 + 1;
            goto LABEL_41;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v40);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if (v13 != 2)
          goto LABEL_32;
        v17 = *((_DWORD *)this + 18);
LABEL_41:
        *((_DWORD *)this + 18) = v17 | 2;
        if (*((_QWORD *)this + 2) == MEMORY[0x24BEDD958])
        {
          v28 = (_QWORD *)operator new();
          v28[1] = 0;
          v28[2] = 0;
          *v28 = 0;
          *((_QWORD *)this + 2) = v28;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v29 >= v18 || *v29 != 24)
          continue;
        v19 = v29 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_47:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v41 = *v19;
          v30 = v19 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 18) |= 4u;
        if ((unint64_t)v30 >= v18 || *v30 != 32)
          continue;
        v20 = v30 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_55:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v42 = *v20;
          v31 = v20 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 18) |= 8u;
        if ((unint64_t)v31 >= v18 || *v31 != 40)
          continue;
        v21 = v31 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_63:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v21;
          v32 = v21 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 18) |= 0x10u;
        if ((unint64_t)v32 >= v18 || *v32 != 48)
          continue;
        v22 = v32 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_71:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v22;
          v33 = v22 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 18) |= 0x20u;
        if ((unint64_t)v33 >= v18 || *v33 != 56)
          continue;
        v23 = v33 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_79:
        if ((unint64_t)v23 >= v18 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v23;
          v34 = v23 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 18) |= 0x40u;
        if ((unint64_t)v34 >= v18 || *v34 != 64)
          continue;
        v24 = v34 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_87:
        if ((unint64_t)v24 >= v18 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v24;
          v35 = v24 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 18) |= 0x80u;
        if ((unint64_t)v35 >= v18 || *v35 != 72)
          continue;
        v25 = v35 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_95:
        if ((unint64_t)v25 >= v18 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v25;
          v36 = v25 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 18) |= 0x100u;
        if ((unint64_t)v36 >= v18 || *v36 != 80)
          continue;
        v26 = v36 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_103:
        if ((unint64_t)v26 >= v18 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v26;
          v37 = v26 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 18) |= 0x200u;
        if ((unint64_t)v37 >= v18 || *v37 != 88)
          continue;
        v27 = v37 + 1;
        *((_QWORD *)a2 + 1) = v27;
LABEL_111:
        if ((unint64_t)v27 >= v18 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v27;
          v38 = (unsigned __int8 *)(v27 + 1);
          *((_QWORD *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 18) |= 0x400u;
        if (v38 != (unsigned __int8 *)v18 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_47;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_55;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_63;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_71;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_87;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_95;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_103;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_111;
      default:
        v13 = TagFallback & 7;
LABEL_32:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_QWORD *)(v5 + 56), (uint64_t)a2, a4);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(v5 + 48), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_QWORD *)(v5 + 56), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::ByteSize(awd::metrics::LocationMainHarvesterMetrics *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;

  v2 = *((_DWORD *)this + 18);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_47;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 18);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 18);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 18);
    }
    else
    {
      v11 = 2;
    }
    v3 = (v11 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_31;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_35;
  }
LABEL_31:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v15 = 2;
  }
  v3 = (v15 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_21;
    goto LABEL_39;
  }
LABEL_35:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v17 = 2;
  }
  v3 = (v17 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_39:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v19 = 2;
  }
  v3 = (v19 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_43:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      v2 = *((_DWORD *)this + 18);
    }
    else
    {
      v21 = 2;
    }
    v3 = (v21 + v3);
  }
LABEL_47:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_52;
  if ((v2 & 0x100) == 0)
  {
    if ((v2 & 0x200) == 0)
      goto LABEL_50;
LABEL_57:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 6))
       + 1;
    if ((*((_DWORD *)this + 18) & 0x400) == 0)
      goto LABEL_52;
    goto LABEL_51;
  }
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v23 >= 0x80)
  {
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v24 = 2;
  }
  v3 = (v24 + v3);
  if ((v2 & 0x200) != 0)
    goto LABEL_57;
LABEL_50:
  if ((v2 & 0x400) != 0)
LABEL_51:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 7))
       + 1;
LABEL_52:
  *((_DWORD *)this + 17) = v3;
  return v3;
}

void awd::metrics::LocationMainHarvesterMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationMainHarvesterMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMainHarvesterMetrics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMainHarvesterMetrics::CopyFrom(awd::metrics::LocationMainHarvesterMetrics *this, const awd::metrics::LocationMainHarvesterMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMainHarvesterMetrics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMainHarvesterMetrics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::IsInitialized(awd::metrics::LocationMainHarvesterMetrics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::Swap(uint64_t this, awd::metrics::LocationMainHarvesterMetrics *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 != (awd::metrics::LocationMainHarvesterMetrics *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    v5 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v5;
    v6 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v6;
  }
  return this;
}

_QWORD *awd::metrics::LocationMainHarvesterMetrics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMainHarvesterMetrics");
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::SharedCtor(uint64_t this)
{
  *(_BYTE *)(this + 8) = 0;
  *(_QWORD *)(this + 20) = 0;
  *(_QWORD *)(this + 12) = 0;
  return this;
}

awd::metrics::LocationSubHarvesterUploadAttempt *awd::metrics::LocationSubHarvesterUploadAttempt::LocationSubHarvesterUploadAttempt(awd::metrics::LocationSubHarvesterUploadAttempt *this, const awd::metrics::LocationSubHarvesterUploadAttempt *a2)
{
  *(_QWORD *)this = &off_24D98F230;
  *((_BYTE *)this + 8) = 0;
  *(_QWORD *)((char *)this + 20) = 0;
  *(_QWORD *)((char *)this + 12) = 0;
  awd::metrics::LocationSubHarvesterUploadAttempt::MergeFrom(this, a2);
  return this;
}

void sub_218A08DD4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSubHarvesterUploadAttempt::MergeFrom(awd::metrics::LocationSubHarvesterUploadAttempt *this, const awd::metrics::LocationSubHarvesterUploadAttempt *a2)
{
  int v4;
  int v5;
  char v6;
  int v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 6) |= 1u;
      *((_BYTE *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 6);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 6) |= 2u;
    *((_DWORD *)this + 3) = v7;
    if ((*((_DWORD *)a2 + 6) & 4) == 0)
      return;
LABEL_7:
    v5 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 6) |= 4u;
    *((_DWORD *)this + 4) = v5;
  }
}

void sub_218A08EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSubHarvesterUploadAttempt::~LocationSubHarvesterUploadAttempt(awd::metrics::LocationSubHarvesterUploadAttempt *this)
{
  *(_QWORD *)this = &off_24D98F230;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F230;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F230;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::default_instance(awd::metrics::LocationSubHarvesterUploadAttempt *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_;
  if (!awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::New(awd::metrics::LocationSubHarvesterUploadAttempt *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_24D98F230;
  *(_BYTE *)(result + 8) = 0;
  *(_QWORD *)(result + 20) = 0;
  *(_QWORD *)(result + 12) = 0;
  return result;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_BYTE *)(this + 8) = 0;
    *(_DWORD *)(this + 12) = 0;
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::MergePartialFromCodedStream(awd::metrics::LocationSubHarvesterUploadAttempt *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  unsigned int v8;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  _BYTE *v14;
  char *v15;
  _BYTE *v16;
  unsigned __int8 *v17;
  uint64_t result;
  unsigned int v19;

  v4 = (unsigned int *)((char *)this + 12);
  v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v6 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v8 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v19 = 0;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v19);
          if (!(_DWORD)result)
            return result;
          v13 = v19;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v13 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_BYTE *)this + 8) = v13 != 0;
        *((_DWORD *)this + 6) |= 1u;
        if ((unint64_t)v14 < v10 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)a2 + 1) = v15;
          goto LABEL_27;
        }
      }
      if (v8 != 2)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v15 = (char *)*((_QWORD *)a2 + 1);
      v10 = *((_QWORD *)a2 + 2);
LABEL_27:
      if ((unint64_t)v15 >= v10 || *v15 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!(_DWORD)result)
          return result;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v4 = *v15;
        v16 = v15 + 1;
        *((_QWORD *)a2 + 1) = v16;
      }
      *((_DWORD *)this + 6) |= 2u;
      if ((unint64_t)v16 < v10 && *v16 == 24)
      {
        v11 = v16 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_35:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v11;
          v17 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 6) |= 4u;
        if (v17 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v8 == 3)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_19:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[6];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  if ((v5[6] & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::ByteSize(awd::metrics::LocationSubHarvesterUploadAttempt *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v2 = *((_DWORD *)this + 6);
  if ((_BYTE)v2)
  {
    v3 = 2 * (v2 & 1u);
    if ((v2 & 2) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
      if (v4 >= 0x80)
      {
        v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        v2 = *((_DWORD *)this + 6);
      }
      else
      {
        v5 = 2;
      }
      v3 = (v5 + v3);
    }
    if ((v2 & 4) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
      if (v6 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      else
        v7 = 2;
      v3 = (v7 + v3);
    }
  }
  else
  {
    v3 = 0;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationSubHarvesterUploadAttempt::CheckTypeAndMergeFrom(awd::metrics::LocationSubHarvesterUploadAttempt *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationSubHarvesterUploadAttempt::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationSubHarvesterUploadAttempt::CopyFrom(awd::metrics::LocationSubHarvesterUploadAttempt *this, const awd::metrics::LocationSubHarvesterUploadAttempt *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationSubHarvesterUploadAttempt *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationSubHarvesterUploadAttempt::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::IsInitialized(awd::metrics::LocationSubHarvesterUploadAttempt *this)
{
  return 1;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::Swap(uint64_t this, awd::metrics::LocationSubHarvesterUploadAttempt *a2)
{
  char v2;
  int v3;
  int v4;
  int v5;
  int v6;

  if (a2 != (awd::metrics::LocationSubHarvesterUploadAttempt *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
    v6 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v6;
  }
  return this;
}

_QWORD *awd::metrics::LocationSubHarvesterUploadAttempt::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationSubHarvesterUploadAttempt");
}

double awd::metrics::LocationSubHarvesterMetrics::SharedCtor(awd::metrics::LocationSubHarvesterMetrics *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

awd::metrics::LocationSubHarvesterMetrics *awd::metrics::LocationSubHarvesterMetrics::LocationSubHarvesterMetrics(awd::metrics::LocationSubHarvesterMetrics *this, const awd::metrics::LocationSubHarvesterMetrics *a2)
{
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(_QWORD *)this = &off_24D98F2A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 7) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::LocationSubHarvesterMetrics::MergeFrom(this, a2);
  return this;
}

void sub_218A094A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSubHarvesterUploadAttempt>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSubHarvesterMetrics::MergeFrom(awd::metrics::LocationSubHarvesterMetrics *this, const awd::metrics::LocationSubHarvesterMetrics *a2)
{
  uint64_t v4;
  const awd::metrics::LocationSubHarvesterUploadAttempt *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const std::string *v17;
  std::string *v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  _BYTE v24[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationSubHarvesterMetrics *)((char *)this + 64));
  if (*((int *)a2 + 18) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationSubHarvesterUploadAttempt **)(*((_QWORD *)a2 + 8) + 8 * v4);
      v6 = *((_DWORD *)this + 19);
      v7 = *((int *)this + 18);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationSubHarvesterMetrics *)((char *)this + 64));
          v6 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_24D98F230;
        *(_BYTE *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 20) = 0;
        *(_QWORD *)(v9 + 12) = 0;
        v10 = *((_QWORD *)this + 8);
        v11 = *((int *)this + 18);
        *((_DWORD *)this + 18) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 8);
        *((_DWORD *)this + 18) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      awd::metrics::LocationSubHarvesterUploadAttempt::MergeFrom((awd::metrics::LocationSubHarvesterUploadAttempt *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 18));
  }
  v12 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v12)
    goto LABEL_21;
  if ((v12 & 1) != 0)
  {
    v16 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 23) |= 1u;
    *((_QWORD *)this + 1) = v16;
    v12 = *((_DWORD *)a2 + 23);
    if ((v12 & 2) == 0)
    {
LABEL_14:
      if ((v12 & 4) == 0)
        goto LABEL_15;
      goto LABEL_31;
    }
  }
  else if ((v12 & 2) == 0)
  {
    goto LABEL_14;
  }
  v17 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 23) |= 2u;
  v18 = (std::string *)*((_QWORD *)this + 2);
  if (v18 == (std::string *)MEMORY[0x24BEDD958])
  {
    v18 = (std::string *)operator new();
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v18;
  }
  std::string::operator=(v18, v17);
  v12 = *((_DWORD *)a2 + 23);
  if ((v12 & 4) == 0)
  {
LABEL_15:
    if ((v12 & 8) == 0)
      goto LABEL_16;
    goto LABEL_33;
  }
LABEL_31:
  v19 = *((_DWORD *)a2 + 6);
  if (v19 >= 0xE)
    awd::metrics::LocationSubHarvesterMetrics::MergeFrom();
  *((_DWORD *)this + 23) |= 4u;
  *((_DWORD *)this + 6) = v19;
  v12 = *((_DWORD *)a2 + 23);
  if ((v12 & 8) == 0)
  {
LABEL_16:
    if ((v12 & 0x10) == 0)
      goto LABEL_17;
    goto LABEL_34;
  }
LABEL_33:
  v20 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 23) |= 8u;
  *((_DWORD *)this + 7) = v20;
  v12 = *((_DWORD *)a2 + 23);
  if ((v12 & 0x10) == 0)
  {
LABEL_17:
    if ((v12 & 0x20) == 0)
      goto LABEL_18;
LABEL_35:
    v22 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 23) |= 0x20u;
    *((_DWORD *)this + 9) = v22;
    v12 = *((_DWORD *)a2 + 23);
    if ((v12 & 0x40) == 0)
    {
LABEL_19:
      if ((v12 & 0x80) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_34:
  v21 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 23) |= 0x10u;
  *((_DWORD *)this + 8) = v21;
  v12 = *((_DWORD *)a2 + 23);
  if ((v12 & 0x20) != 0)
    goto LABEL_35;
LABEL_18:
  if ((v12 & 0x40) == 0)
    goto LABEL_19;
LABEL_36:
  v23 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 23) |= 0x40u;
  *((_DWORD *)this + 10) = v23;
  v12 = *((_DWORD *)a2 + 23);
  if ((v12 & 0x80) != 0)
  {
LABEL_20:
    v13 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 23) |= 0x80u;
    *((_DWORD *)this + 11) = v13;
    v12 = *((_DWORD *)a2 + 23);
  }
LABEL_21:
  if ((v12 & 0xFF00) != 0)
  {
    if ((v12 & 0x100) != 0)
    {
      v14 = *((_QWORD *)a2 + 6);
      *((_DWORD *)this + 23) |= 0x100u;
      *((_QWORD *)this + 6) = v14;
      v12 = *((_DWORD *)a2 + 23);
    }
    if ((v12 & 0x200) != 0)
    {
      v15 = *((_QWORD *)a2 + 7);
      *((_DWORD *)this + 23) |= 0x200u;
      *((_QWORD *)this + 7) = v15;
    }
  }
}

void sub_218A097A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSubHarvesterMetrics::~LocationSubHarvesterMetrics(awd::metrics::LocationSubHarvesterMetrics *this)
{
  uint64_t *v2;

  *(_QWORD *)this = &off_24D98F2A8;
  v2 = (uint64_t *)((char *)this + 64);
  awd::metrics::LocationSubHarvesterMetrics::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSubHarvesterUploadAttempt>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationSubHarvesterMetrics::~LocationSubHarvesterMetrics(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::default_instance(awd::metrics::LocationSubHarvesterMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationSubHarvesterMetrics::default_instance_;
  if (!awd::metrics::LocationSubHarvesterMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationSubHarvesterMetrics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationSubHarvesterMetrics::New(awd::metrics::LocationSubHarvesterMetrics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)(v1 + 72) = 0;
  *(_DWORD *)(v1 + 80) = 0;
  *(_QWORD *)v1 = &off_24D98F2A8;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 40) = 0;
    v2 = *(_DWORD *)(this + 92);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 56) = 0;
  }
  if (*(int *)(this + 72) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 64) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 72));
  }
  *(_DWORD *)(v1 + 72) = 0;
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::MergePartialFromCodedStream(awd::metrics::LocationSubHarvesterMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unint64_t *v7;
  unint64_t *v8;
  unsigned __int8 *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  int v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t result;
  _QWORD *v27;
  _BYTE *v28;
  unsigned int v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int v45;
  int v46;
  int v47;
  BOOL v48;
  int v49;
  _BYTE *v50;
  unint64_t *v51;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v52;
  unsigned int *v53;
  unsigned int *v54;
  unsigned int v55;
  unsigned int v56;

  v53 = (unsigned int *)((char *)this + 28);
  v54 = (unsigned int *)((char *)this + 32);
  v4 = (unsigned int *)((char *)this + 36);
  v5 = (unsigned int *)((char *)this + 40);
  v6 = (unsigned int *)((char *)this + 44);
  v7 = (unint64_t *)((char *)this + 48);
  v8 = (unint64_t *)((char *)this + 56);
  v51 = (unint64_t *)((char *)this + 8);
  v52 = (awd::metrics::LocationSubHarvesterMetrics *)((char *)this + 64);
  while (1)
  {
    v9 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || (char)*v9 < 0)
      break;
    TagFallback = *v9;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((_QWORD *)a2 + 1) = v9 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v51);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v51 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        v15 = *((_DWORD *)this + 23) | 1;
        *((_DWORD *)this + 23) = v15;
        if ((unint64_t)v14 < v12 && *v14 == 18)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
          goto LABEL_40;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_32;
        v15 = *((_DWORD *)this + 23);
LABEL_40:
        *((_DWORD *)this + 23) = v15 | 2;
        if (*((_QWORD *)this + 2) == MEMORY[0x24BEDD958])
        {
          v27 = (_QWORD *)operator new();
          v27[1] = 0;
          v27[2] = 0;
          *v27 = 0;
          *((_QWORD *)this + 2) = v27;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v28 >= v16 || *v28 != 24)
          continue;
        v17 = v28 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_46:
        v55 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v55);
          if (!(_DWORD)result)
            return result;
          v29 = v55;
        }
        else
        {
          v29 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        if (v29 <= 0xD)
        {
          *((_DWORD *)this + 23) |= 4u;
          *((_DWORD *)this + 6) = v29;
        }
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v30 >= v18 || *v30 != 32)
          continue;
        v19 = v30 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_56:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v53);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v53 = *v19;
          v31 = v19 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 23) |= 8u;
        if ((unint64_t)v31 >= v18 || *v31 != 40)
          continue;
        v20 = v31 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_64:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v54 = *v20;
          v32 = v20 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        if ((unint64_t)v32 >= v18 || *v32 != 48)
          continue;
        v21 = v32 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_72:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v21;
          v33 = v21 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        if ((unint64_t)v33 >= v18 || *v33 != 56)
          continue;
        v22 = v33 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_80:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v22;
          v34 = v22 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        if ((unint64_t)v34 >= v18 || *v34 != 64)
          continue;
        v23 = v34 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_88:
        if ((unint64_t)v23 >= v18 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v23;
          v35 = v23 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        if ((unint64_t)v35 >= v18 || *v35 != 72)
          continue;
        v24 = v35 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_96:
        if ((unint64_t)v24 >= v18 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v24;
          v36 = v24 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        if ((unint64_t)v36 >= v18 || *v36 != 80)
          continue;
        v25 = v36 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_104:
        if ((unint64_t)v25 >= v18 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v25;
          v37 = v25 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 23) |= 0x200u;
        if ((unint64_t)v37 >= v18 || *v37 != 90)
          continue;
        break;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_46;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_56;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_64;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_72;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_80;
      case 8u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_88;
      case 9u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_96;
      case 0xAu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_104;
      case 0xBu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_32;
        goto LABEL_112;
      default:
        v11 = TagFallback & 7;
LABEL_32:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    do
    {
      *((_QWORD *)a2 + 1) = v37 + 1;
LABEL_112:
      v38 = *((_DWORD *)this + 19);
      v39 = *((int *)this + 18);
      if ((int)v39 >= v38)
      {
        if (v38 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v52);
          v38 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v38 + 1;
        v41 = operator new();
        *(_QWORD *)v41 = &off_24D98F230;
        *(_BYTE *)(v41 + 8) = 0;
        *(_QWORD *)(v41 + 20) = 0;
        *(_QWORD *)(v41 + 12) = 0;
        v42 = *((_QWORD *)this + 8);
        v43 = *((int *)this + 18);
        *((_DWORD *)this + 18) = v43 + 1;
        *(_QWORD *)(v42 + 8 * v43) = v41;
      }
      else
      {
        v40 = *((_QWORD *)this + 8);
        *((_DWORD *)this + 18) = v39 + 1;
        v41 = *(_QWORD *)(v40 + 8 * v39);
      }
      v56 = 0;
      v44 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v44 >= *((_QWORD *)a2 + 2) || *v44 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v56))
          return 0;
      }
      else
      {
        v56 = *v44;
        *((_QWORD *)a2 + 1) = v44 + 1;
      }
      v45 = *((_DWORD *)a2 + 14);
      v46 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v45 + 1;
      if (v45 >= v46)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationSubHarvesterUploadAttempt::MergePartialFromCodedStream((awd::metrics::LocationSubHarvesterUploadAttempt *)v41, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v47 = *((_DWORD *)a2 + 14);
      v48 = __OFSUB__(v47, 1);
      v49 = v47 - 1;
      if (v49 < 0 == v48)
        *((_DWORD *)a2 + 14) = v49;
      v37 = (_BYTE *)*((_QWORD *)a2 + 1);
      v50 = (_BYTE *)*((_QWORD *)a2 + 2);
    }
    while (v37 < v50 && *v37 == 90);
    if (v37 == v50 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
  TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_QWORD *)(v5 + 48), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0)
LABEL_11:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(v5 + 56), (uint64_t)a2, a4);
LABEL_12:
  if (*(int *)(v5 + 72) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_QWORD *)(*(_QWORD *)(v5 + 64) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 72));
  }
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::ByteSize(awd::metrics::LocationSubHarvesterMetrics *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;

  v2 = *((_DWORD *)this + 23);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_49;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 23);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 23);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 += v9 + v5 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v11 = 1;
    }
    v3 += v11 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_37;
  }
LABEL_33:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_21;
    goto LABEL_41;
  }
LABEL_37:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0)
      goto LABEL_49;
    goto LABEL_45;
  }
LABEL_41:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v19 = 2;
  }
  v3 += v19;
  if ((v2 & 0x80) != 0)
  {
LABEL_45:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v21 = 2;
    }
    v3 += v21;
  }
LABEL_49:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                        + 6))
          + 1;
      v2 = *((_DWORD *)this + 23);
    }
    if ((v2 & 0x200) != 0)
      v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                        + 7))
          + 1;
  }
  v22 = *((_DWORD *)this + 18);
  v23 = (v22 + v3);
  if (v22 >= 1)
  {
    v24 = 0;
    do
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationSubHarvesterUploadAttempt::ByteSize(*(awd::metrics::LocationSubHarvesterUploadAttempt **)(*((_QWORD *)this + 8) + 8 * v24));
      v26 = (int)v25;
      if (v25 >= 0x80)
        v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      else
        v27 = 1;
      v23 = (v26 + v23 + v27);
      ++v24;
    }
    while (v24 < *((int *)this + 18));
  }
  *((_DWORD *)this + 22) = v23;
  return v23;
}

void awd::metrics::LocationSubHarvesterMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationSubHarvesterMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationSubHarvesterMetrics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationSubHarvesterMetrics::CopyFrom(awd::metrics::LocationSubHarvesterMetrics *this, const awd::metrics::LocationSubHarvesterMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationSubHarvesterMetrics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationSubHarvesterMetrics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::IsInitialized(awd::metrics::LocationSubHarvesterMetrics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::Swap(uint64_t this, awd::metrics::LocationSubHarvesterMetrics *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;

  if (a2 != (awd::metrics::LocationSubHarvesterMetrics *)this)
  {
    v3 = this;
    v4 = *(_QWORD *)(this + 8);
    v5 = *(_QWORD *)(this + 16);
    v6 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v6;
    *((_QWORD *)a2 + 1) = v4;
    *((_QWORD *)a2 + 2) = v5;
    LODWORD(v4) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    v7 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v9 = *(_DWORD *)(v3 + 92);
    *(_DWORD *)(v3 + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v9;
    v10 = *(_DWORD *)(v3 + 88);
    *(_DWORD *)(v3 + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v10;
  }
  return this;
}

_QWORD *awd::metrics::LocationSubHarvesterMetrics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationSubHarvesterMetrics");
}

double awd::metrics::LocationBeaconMonitorSession::SharedCtor(awd::metrics::LocationBeaconMonitorSession *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_QWORD *)this + 3) = v1;
  *((_QWORD *)this + 8) = 0;
  result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

awd::metrics::LocationBeaconMonitorSession *awd::metrics::LocationBeaconMonitorSession::LocationBeaconMonitorSession(awd::metrics::LocationBeaconMonitorSession *this, const awd::metrics::LocationBeaconMonitorSession *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_24D98F320;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = v3;
  *((_QWORD *)this + 8) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  awd::metrics::LocationBeaconMonitorSession::MergeFrom(this, a2);
  return this;
}

void sub_218A0A6BC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconMonitorSession::MergeFrom(awd::metrics::LocationBeaconMonitorSession *this, const awd::metrics::LocationBeaconMonitorSession *a2)
{
  int v4;
  uint64_t v5;
  std::string *v6;
  int v7;
  int v8;
  const std::string *v9;
  std::string *v10;
  const std::string *v11;
  std::string *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _BYTE v19[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v4 = *((_DWORD *)a2 + 17);
  if (!(_BYTE)v4)
    goto LABEL_14;
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 17) |= 1u;
    *((_QWORD *)this + 1) = v5;
    v4 = *((_DWORD *)a2 + 17);
  }
  v6 = (std::string *)MEMORY[0x24BEDD958];
  if ((v4 & 2) != 0)
  {
    v9 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 17) |= 2u;
    v10 = (std::string *)*((_QWORD *)this + 2);
    if (v10 == v6)
    {
      v10 = (std::string *)operator new();
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v10;
    }
    std::string::operator=(v10, v9);
    v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 4) == 0)
    {
LABEL_8:
      if ((v4 & 8) == 0)
        goto LABEL_9;
      goto LABEL_26;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_8;
  }
  v11 = (const std::string *)*((_QWORD *)a2 + 3);
  *((_DWORD *)this + 17) |= 4u;
  v12 = (std::string *)*((_QWORD *)this + 3);
  if (v12 == v6)
  {
    v12 = (std::string *)operator new();
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 3) = v12;
  }
  std::string::operator=(v12, v11);
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0)
      goto LABEL_10;
    goto LABEL_27;
  }
LABEL_26:
  v13 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 17) |= 8u;
  *((_DWORD *)this + 8) = v13;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0)
      goto LABEL_11;
LABEL_28:
    v15 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 17) |= 0x20u;
    *((_DWORD *)this + 10) = v15;
    v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 0x40) == 0)
    {
LABEL_12:
      if ((v4 & 0x80) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_27:
  v14 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 17) |= 0x10u;
  *((_DWORD *)this + 9) = v14;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x20) != 0)
    goto LABEL_28;
LABEL_11:
  if ((v4 & 0x40) == 0)
    goto LABEL_12;
LABEL_29:
  v16 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 17) |= 0x40u;
  *((_DWORD *)this + 11) = v16;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x80) != 0)
  {
LABEL_13:
    v7 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 17) |= 0x80u;
    *((_DWORD *)this + 12) = v7;
    v4 = *((_DWORD *)a2 + 17);
  }
LABEL_14:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v17 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 17) |= 0x100u;
    *((_DWORD *)this + 13) = v17;
    v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 0x200) == 0)
    {
LABEL_17:
      if ((v4 & 0x400) == 0)
        return;
      goto LABEL_18;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_17;
  }
  v18 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 17) |= 0x200u;
  *((_DWORD *)this + 14) = v18;
  if ((*((_DWORD *)a2 + 17) & 0x400) == 0)
    return;
LABEL_18:
  v8 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 17) |= 0x400u;
  *((_DWORD *)this + 15) = v8;
}

void sub_218A0A920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconMonitorSession::~LocationBeaconMonitorSession(awd::metrics::LocationBeaconMonitorSession *this)
{
  *(_QWORD *)this = &off_24D98F320;
  awd::metrics::LocationBeaconMonitorSession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F320;
  awd::metrics::LocationBeaconMonitorSession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F320;
  awd::metrics::LocationBeaconMonitorSession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationBeaconMonitorSession::SharedDtor(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = this;
  v2 = *(_QWORD *)(this + 16);
  v3 = MEMORY[0x24BEDD958];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  v5 = *(_QWORD *)(v1 + 24);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorSession::default_instance(awd::metrics::LocationBeaconMonitorSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationBeaconMonitorSession::default_instance_;
  if (!awd::metrics::LocationBeaconMonitorSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationBeaconMonitorSession::default_instance_;
  }
  return result;
}

double awd::metrics::LocationBeaconMonitorSession::New(awd::metrics::LocationBeaconMonitorSession *this)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98F320;
  *(_QWORD *)(v1 + 8) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  return result;
}

uint64_t awd::metrics::LocationBeaconMonitorSession::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_DWORD *)(this + 68);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    v2 = MEMORY[0x24BEDD958];
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 68) & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 40) = 0;
    *(_DWORD *)(this + 48) = 0;
    v1 = *(_DWORD *)(this + 68);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 56) = 0;
    *(_DWORD *)(this + 52) = 0;
  }
  *(_DWORD *)(this + 68) = 0;
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorSession::MergePartialFromCodedStream(awd::metrics::LocationBeaconMonitorSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  int v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  _BYTE *v28;
  _QWORD *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  unsigned __int8 *v38;
  uint64_t result;
  unint64_t *v40;
  unsigned int *v41;

  v4 = (unsigned int *)((char *)this + 32);
  v5 = (unsigned int *)((char *)this + 36);
  v6 = (unsigned int *)((char *)this + 40);
  v40 = (unint64_t *)((char *)this + 8);
  v41 = (unsigned int *)((char *)this + 44);
  v7 = (unsigned int *)((char *)this + 48);
  v8 = (unsigned int *)((char *)this + 52);
  v9 = (unsigned int *)((char *)this + 56);
  v10 = (unsigned int *)((char *)this + 60);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v40 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_38:
          v17 = *((_DWORD *)this + 17) | 1;
          *((_DWORD *)this + 17) = v17;
          if ((unint64_t)v16 < v14 && *v16 == 18)
          {
            *((_QWORD *)a2 + 1) = v16 + 1;
            goto LABEL_41;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v40);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if (v13 != 2)
          goto LABEL_32;
        v17 = *((_DWORD *)this + 17);
LABEL_41:
        *((_DWORD *)this + 17) = v17 | 2;
        if (*((_QWORD *)this + 2) == MEMORY[0x24BEDD958])
        {
          v27 = (_QWORD *)operator new();
          v27[1] = 0;
          v27[2] = 0;
          *v27 = 0;
          *((_QWORD *)this + 2) = v27;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_47:
        *((_DWORD *)this + 17) |= 4u;
        if (*((_QWORD *)this + 3) == MEMORY[0x24BEDD958])
        {
          v29 = (_QWORD *)operator new();
          v29[1] = 0;
          v29[2] = 0;
          *v29 = 0;
          *((_QWORD *)this + 3) = v29;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v30 >= v18 || *v30 != 32)
          continue;
        v19 = v30 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v19;
          v31 = v19 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 17) |= 8u;
        if ((unint64_t)v31 >= v18 || *v31 != 40)
          continue;
        v20 = v31 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_61:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v20;
          v32 = v20 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 17) |= 0x10u;
        if ((unint64_t)v32 >= v18 || *v32 != 48)
          continue;
        v21 = v32 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_69:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v21;
          v33 = v21 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 17) |= 0x20u;
        if ((unint64_t)v33 >= v18 || *v33 != 56)
          continue;
        v22 = v33 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_77:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v41 = *v22;
          v34 = v22 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 17) |= 0x40u;
        if ((unint64_t)v34 >= v18 || *v34 != 64)
          continue;
        v23 = v34 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_85:
        if ((unint64_t)v23 >= v18 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v23;
          v35 = v23 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 17) |= 0x80u;
        if ((unint64_t)v35 >= v18 || *v35 != 72)
          continue;
        v24 = v35 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_93:
        if ((unint64_t)v24 >= v18 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v24;
          v36 = v24 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 17) |= 0x100u;
        if ((unint64_t)v36 >= v18 || *v36 != 80)
          continue;
        v25 = v36 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_101:
        if ((unint64_t)v25 >= v18 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v25;
          v37 = v25 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 17) |= 0x200u;
        if ((unint64_t)v37 >= v18 || *v37 != 88)
          continue;
        v26 = v37 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_109:
        if ((unint64_t)v26 >= v18 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v26;
          v38 = (unsigned __int8 *)(v26 + 1);
          *((_QWORD *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 17) |= 0x400u;
        if (v38 != (unsigned __int8 *)v18 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if (v13 == 2)
          goto LABEL_47;
        goto LABEL_32;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_69;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_77;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_85;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_93;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_101;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_109;
      default:
        v13 = TagFallback & 7;
LABEL_32:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationBeaconMonitorSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 68);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[17];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = v5[17];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = v5[17];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[8], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[9], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[10], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[11], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[12], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[13], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[15], (uint64_t)a2, a4);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[14], (uint64_t)a2, a4);
  if ((v5[17] & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[15], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorSession::ByteSize(awd::metrics::LocationBeaconMonitorSession *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;

  v2 = *((_DWORD *)this + 17);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_52;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 17);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 17);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = *((_QWORD *)this + 3);
    v11 = *(unsigned __int8 *)(v10 + 23);
    v12 = v11;
    v13 = *(_QWORD *)(v10 + 8);
    if ((v11 & 0x80u) == 0)
      v14 = *(unsigned __int8 *)(v10 + 23);
    else
      v14 = v13;
    if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14);
      v11 = *(unsigned __int8 *)(v10 + 23);
      v13 = *(_QWORD *)(v10 + 8);
      v2 = *((_DWORD *)this + 17);
      v12 = *(_BYTE *)(v10 + 23);
    }
    else
    {
      v15 = 1;
    }
    if (v12 < 0)
      v11 = v13;
    v3 = (v3 + v15 + v11 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_36;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v17 = 2;
  }
  v3 = (v17 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_40;
  }
LABEL_36:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v19 = 2;
  }
  v3 = (v19 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_21;
    goto LABEL_44;
  }
LABEL_40:
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v20 >= 0x80)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v21 = 2;
  }
  v3 = (v21 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0)
      goto LABEL_52;
    goto LABEL_48;
  }
LABEL_44:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v23 = 2;
  }
  v3 = (v23 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_48:
    v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if (v24 >= 0x80)
    {
      v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
      v2 = *((_DWORD *)this + 17);
    }
    else
    {
      v25 = 2;
    }
    v3 = (v25 + v3);
  }
LABEL_52:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_69;
  if ((v2 & 0x100) != 0)
  {
    v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if (v26 >= 0x80)
    {
      v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
      v2 = *((_DWORD *)this + 17);
    }
    else
    {
      v27 = 2;
    }
    v3 = (v27 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_55:
      if ((v2 & 0x400) == 0)
        goto LABEL_69;
      goto LABEL_65;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_55;
  }
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v28 >= 0x80)
  {
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v29 = 2;
  }
  v3 = (v29 + v3);
  if ((v2 & 0x400) != 0)
  {
LABEL_65:
    v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if (v30 >= 0x80)
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    else
      v31 = 2;
    v3 = (v31 + v3);
  }
LABEL_69:
  *((_DWORD *)this + 16) = v3;
  return v3;
}

void awd::metrics::LocationBeaconMonitorSession::CheckTypeAndMergeFrom(awd::metrics::LocationBeaconMonitorSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationBeaconMonitorSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationBeaconMonitorSession::CopyFrom(awd::metrics::LocationBeaconMonitorSession *this, const awd::metrics::LocationBeaconMonitorSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationBeaconMonitorSession *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationBeaconMonitorSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationBeaconMonitorSession::IsInitialized(awd::metrics::LocationBeaconMonitorSession *this)
{
  return 1;
}

uint64_t awd::metrics::LocationBeaconMonitorSession::Swap(uint64_t this, awd::metrics::LocationBeaconMonitorSession *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (awd::metrics::LocationBeaconMonitorSession *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationBeaconMonitorSession::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationBeaconMonitorSession");
}

_QWORD *awd::metrics::LocationBeaconMonitorTrigger::SharedCtor(_QWORD *this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  this[1] = 0;
  this[2] = v1;
  this[5] = 0;
  this[6] = 0;
  this[3] = v1;
  this[4] = 0;
  return this;
}

awd::metrics::LocationBeaconMonitorTrigger *awd::metrics::LocationBeaconMonitorTrigger::LocationBeaconMonitorTrigger(awd::metrics::LocationBeaconMonitorTrigger *this, const awd::metrics::LocationBeaconMonitorTrigger *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_24D98F398;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = v3;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  awd::metrics::LocationBeaconMonitorTrigger::MergeFrom(this, a2);
  return this;
}

void sub_218A0B77C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconMonitorTrigger::MergeFrom(awd::metrics::LocationBeaconMonitorTrigger *this, const awd::metrics::LocationBeaconMonitorTrigger *a2)
{
  int v4;
  uint64_t v5;
  std::string *v6;
  int v7;
  const std::string *v8;
  std::string *v9;
  const std::string *v10;
  std::string *v11;
  int v12;
  int v13;
  int v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 13);
    }
    v6 = (std::string *)MEMORY[0x24BEDD958];
    if ((v4 & 2) != 0)
    {
      v8 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)this + 13) |= 2u;
      v9 = (std::string *)*((_QWORD *)this + 2);
      if (v9 == v6)
      {
        v9 = (std::string *)operator new();
        v9->__r_.__value_.__l.__size_ = 0;
        v9->__r_.__value_.__r.__words[2] = 0;
        v9->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 2) = v9;
      }
      std::string::operator=(v9, v8);
      v4 = *((_DWORD *)a2 + 13);
      if ((v4 & 4) == 0)
      {
LABEL_8:
        if ((v4 & 8) == 0)
          goto LABEL_9;
        goto LABEL_20;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_8;
    }
    v10 = (const std::string *)*((_QWORD *)a2 + 3);
    *((_DWORD *)this + 13) |= 4u;
    v11 = (std::string *)*((_QWORD *)this + 3);
    if (v11 == v6)
    {
      v11 = (std::string *)operator new();
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 3) = v11;
    }
    std::string::operator=(v11, v10);
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 8) == 0)
    {
LABEL_9:
      if ((v4 & 0x10) == 0)
        goto LABEL_10;
      goto LABEL_21;
    }
LABEL_20:
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 13) |= 8u;
    *((_DWORD *)this + 8) = v12;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x10) == 0)
    {
LABEL_10:
      if ((v4 & 0x20) == 0)
        goto LABEL_11;
      goto LABEL_22;
    }
LABEL_21:
    v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 13) |= 0x10u;
    *((_DWORD *)this + 9) = v13;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x20) == 0)
    {
LABEL_11:
      if ((v4 & 0x40) == 0)
        return;
      goto LABEL_12;
    }
LABEL_22:
    v14 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 10) = v14;
    if ((*((_DWORD *)a2 + 13) & 0x40) == 0)
      return;
LABEL_12:
    v7 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 13) |= 0x40u;
    *((_DWORD *)this + 11) = v7;
  }
}

void sub_218A0B954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconMonitorTrigger::~LocationBeaconMonitorTrigger(awd::metrics::LocationBeaconMonitorTrigger *this)
{
  *(_QWORD *)this = &off_24D98F398;
  awd::metrics::LocationBeaconMonitorTrigger::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F398;
  awd::metrics::LocationBeaconMonitorTrigger::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F398;
  awd::metrics::LocationBeaconMonitorTrigger::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::SharedDtor(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = this;
  v2 = *(_QWORD *)(this + 16);
  v3 = MEMORY[0x24BEDD958];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  v5 = *(_QWORD *)(v1 + 24);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::default_instance(awd::metrics::LocationBeaconMonitorTrigger *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationBeaconMonitorTrigger::default_instance_;
  if (!awd::metrics::LocationBeaconMonitorTrigger::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationBeaconMonitorTrigger::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationBeaconMonitorTrigger::New(awd::metrics::LocationBeaconMonitorTrigger *this)
{
  _QWORD *result;
  uint64_t v2;

  result = (_QWORD *)operator new();
  *result = &off_24D98F398;
  result[1] = 0;
  v2 = MEMORY[0x24BEDD958];
  result[2] = MEMORY[0x24BEDD958];
  result[3] = v2;
  result[5] = 0;
  result[6] = 0;
  result[4] = 0;
  return result;
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_BYTE *)(this + 52);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    v2 = MEMORY[0x24BEDD958];
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 52) & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::MergePartialFromCodedStream(awd::metrics::LocationBeaconMonitorTrigger *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  char *v10;
  uint64_t TagFallback;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  int v16;
  unint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  _BYTE *v23;
  _QWORD *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  unsigned __int8 *v29;
  uint64_t result;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 32);
  v6 = (unsigned int *)((char *)this + 36);
  v7 = (unsigned int *)((char *)this + 40);
  v8 = (unsigned int *)((char *)this + 44);
  v9 = MEMORY[0x24BEDD958];
  while (2)
  {
    v10 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v14 < v13 && (*v14 & 0x80000000) == 0)
        {
          *v4 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)a2 + 1) = v15;
LABEL_30:
          v16 = *((_DWORD *)this + 13) | 1;
          *((_DWORD *)this + 13) = v16;
          if ((unint64_t)v15 < v13 && *v15 == 18)
          {
            *((_QWORD *)a2 + 1) = v15 + 1;
            goto LABEL_33;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
          goto LABEL_30;
        }
        break;
      case 2u:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_24;
        v16 = *((_DWORD *)this + 13);
LABEL_33:
        *((_DWORD *)this + 13) = v16 | 2;
        if (*((_QWORD *)this + 2) == v9)
        {
          v22 = (_QWORD *)operator new();
          v22[1] = 0;
          v22[2] = 0;
          *v22 = 0;
          *((_QWORD *)this + 2) = v22;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_39:
        *((_DWORD *)this + 13) |= 4u;
        if (*((_QWORD *)this + 3) == v9)
        {
          v24 = (_QWORD *)operator new();
          v24[1] = 0;
          v24[2] = 0;
          *v24 = 0;
          *((_QWORD *)this + 3) = v24;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v25 >= v17 || *v25 != 32)
          continue;
        v18 = v25 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v17 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v18;
          v26 = v18 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v26 >= v17 || *v26 != 40)
          continue;
        v19 = v26 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v17 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v19;
          v27 = v19 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if ((unint64_t)v27 >= v17 || *v27 != 48)
          continue;
        v20 = v27 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_61:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v17 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v20;
          v28 = v20 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 13) |= 0x20u;
        if ((unint64_t)v28 >= v17 || *v28 != 56)
          continue;
        v21 = v28 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_69:
        if ((unint64_t)v21 >= v17 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v29 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v17 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v21;
          v29 = (unsigned __int8 *)(v21 + 1);
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 13) |= 0x40u;
        if (v29 != (unsigned __int8 *)v17 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v12 = TagFallback & 7;
        if (v12 == 2)
          goto LABEL_39;
        goto LABEL_24;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      case 5u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      case 6u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      case 7u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_69;
      default:
        v12 = TagFallback & 7;
LABEL_24:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[13];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = v5[13];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = v5[13];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[8], (uint64_t)a2, a4);
  v6 = v5[13];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[9], (uint64_t)a2, a4);
  v6 = v5[13];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[11], (uint64_t)a2, a4);
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[10], (uint64_t)a2, a4);
  if ((v5[13] & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[11], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::ByteSize(awd::metrics::LocationBeaconMonitorTrigger *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;

  LOBYTE(v2) = *((_BYTE *)this + 52);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_47;
  }
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 13);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 52) & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 13);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = *((_QWORD *)this + 3);
    v11 = *(unsigned __int8 *)(v10 + 23);
    v12 = v11;
    v13 = *(_QWORD *)(v10 + 8);
    if ((v11 & 0x80u) == 0)
      v14 = *(unsigned __int8 *)(v10 + 23);
    else
      v14 = v13;
    if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14);
      v11 = *(unsigned __int8 *)(v10 + 23);
      v13 = *(_QWORD *)(v10 + 8);
      v2 = *((_DWORD *)this + 13);
      v12 = *(_BYTE *)(v10 + 23);
    }
    else
    {
      v15 = 1;
    }
    if (v12 < 0)
      v11 = v13;
    v3 = (v3 + v15 + v11 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v17 = 2;
  }
  v3 = (v17 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_39;
  }
LABEL_35:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v19 = 2;
  }
  v3 = (v19 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_39:
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v20 >= 0x80)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v21 = 2;
  }
  v3 = (v21 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_43:
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v22 >= 0x80)
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    else
      v23 = 2;
    v3 = (v23 + v3);
  }
LABEL_47:
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void awd::metrics::LocationBeaconMonitorTrigger::CheckTypeAndMergeFrom(awd::metrics::LocationBeaconMonitorTrigger *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationBeaconMonitorTrigger::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationBeaconMonitorTrigger::CopyFrom(awd::metrics::LocationBeaconMonitorTrigger *this, const awd::metrics::LocationBeaconMonitorTrigger *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationBeaconMonitorTrigger *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationBeaconMonitorTrigger::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::IsInitialized(awd::metrics::LocationBeaconMonitorTrigger *this)
{
  return 1;
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::Swap(uint64_t this, awd::metrics::LocationBeaconMonitorTrigger *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (awd::metrics::LocationBeaconMonitorTrigger *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationBeaconMonitorTrigger::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationBeaconMonitorTrigger");
}

_QWORD *awd::metrics::LocationBeaconRangingSession::SharedCtor(_QWORD *this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  this[1] = 0;
  this[2] = v1;
  this[7] = 0;
  this[3] = 0;
  this[4] = 0;
  return this;
}

awd::metrics::LocationBeaconRangingSession *awd::metrics::LocationBeaconRangingSession::LocationBeaconRangingSession(awd::metrics::LocationBeaconRangingSession *this, const awd::metrics::LocationBeaconRangingSession *a2)
{
  uint64_t v3;

  *((_QWORD *)this + 5) = 0;
  *(_QWORD *)this = &off_24D98F410;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 2) = v3;
  awd::metrics::LocationBeaconRangingSession::MergeFrom(this, a2);
  return this;
}

void sub_218A0C440(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = v2;
  if (*v3)
    MEMORY[0x219A1DC64](*v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconRangingSession::MergeFrom(awd::metrics::LocationBeaconRangingSession *this, const awd::metrics::LocationBeaconRangingSession *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  int v10;
  int v11;
  int v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  v4 = *((_DWORD *)a2 + 12);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((_DWORD *)this + 10, *((_DWORD *)this + 12) + v4);
    memcpy((void *)(*((_QWORD *)this + 5) + 4 * *((int *)this + 12)), *((const void **)a2 + 5), 4 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 60);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 60) & 1) != 0)
    {
      v7 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 15) |= 1u;
      *((_QWORD *)this + 1) = v7;
      v5 = *((_DWORD *)a2 + 15);
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0)
          goto LABEL_9;
        goto LABEL_18;
      }
    }
    else if ((*((_BYTE *)a2 + 60) & 2) == 0)
    {
      goto LABEL_8;
    }
    v8 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 15) |= 2u;
    v9 = (std::string *)*((_QWORD *)this + 2);
    if (v9 == (std::string *)MEMORY[0x24BEDD958])
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      v9->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v9;
    }
    std::string::operator=(v9, v8);
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0)
        goto LABEL_10;
      goto LABEL_19;
    }
LABEL_18:
    v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 15) |= 4u;
    *((_DWORD *)this + 6) = v10;
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0)
        goto LABEL_11;
      goto LABEL_20;
    }
LABEL_19:
    v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 15) |= 8u;
    *((_DWORD *)this + 7) = v11;
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 0x10) == 0)
    {
LABEL_11:
      if ((v5 & 0x20) == 0)
        return;
      goto LABEL_12;
    }
LABEL_20:
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 15) |= 0x10u;
    *((_DWORD *)this + 8) = v12;
    if ((*((_DWORD *)a2 + 15) & 0x20) == 0)
      return;
LABEL_12:
    v6 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 15) |= 0x20u;
    *((_DWORD *)this + 9) = v6;
  }
}

void sub_218A0C62C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconRangingSession::~LocationBeaconRangingSession(awd::metrics::LocationBeaconRangingSession *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D98F410;
  awd::metrics::LocationBeaconRangingSession::SharedDtor((uint64_t)this);
  v2 = *((_QWORD *)this + 5);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationBeaconRangingSession::~LocationBeaconRangingSession(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationBeaconRangingSession::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationBeaconRangingSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t awd::metrics::LocationBeaconRangingSession::default_instance(awd::metrics::LocationBeaconRangingSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationBeaconRangingSession::default_instance_;
  if (!awd::metrics::LocationBeaconRangingSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationBeaconRangingSession::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationBeaconRangingSession::New(awd::metrics::LocationBeaconRangingSession *this)
{
  _QWORD *result;
  uint64_t v2;

  result = (_QWORD *)operator new();
  *result = &off_24D98F410;
  result[1] = 0;
  v2 = MEMORY[0x24BEDD958];
  result[6] = 0;
  result[7] = 0;
  result[4] = 0;
  result[5] = 0;
  result[2] = v2;
  result[3] = 0;
  return result;
}

uint64_t awd::metrics::LocationBeaconRangingSession::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 60);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t awd::metrics::LocationBeaconRangingSession::MergePartialFromCodedStream(awd::metrics::LocationBeaconRangingSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  int v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  _BYTE *v32;
  unint64_t v33;
  unsigned int v34;
  int v35;
  uint64_t v36;
  uint64_t result;
  unint64_t *v38;
  unsigned int *v39;
  unsigned int *v40;
  unsigned int v41[12];

  v4 = (_DWORD *)((char *)this + 40);
  v38 = (unint64_t *)((char *)this + 8);
  v39 = (unsigned int *)((char *)this + 24);
  v40 = (unsigned int *)((char *)this + 28);
  v5 = (unsigned int *)((char *)this + 32);
  v6 = (unsigned int *)((char *)this + 36);
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v38);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v38 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        v13 = *((_DWORD *)this + 15) | 1;
        *((_DWORD *)this + 15) = v13;
        if ((unint64_t)v12 < v10 && *v12 == 18)
        {
          *((_QWORD *)a2 + 1) = v12 + 1;
          goto LABEL_36;
        }
        continue;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_26;
        v13 = *((_DWORD *)this + 15);
LABEL_36:
        *((_DWORD *)this + 15) = v13 | 2;
        if (*((_QWORD *)this + 2) == MEMORY[0x24BEDD958])
        {
          v20 = (_QWORD *)operator new();
          v20[1] = 0;
          v20[2] = 0;
          *v20 = 0;
          *((_QWORD *)this + 2) = v20;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v14 = (char *)*((_QWORD *)a2 + 2);
        if (v21 >= v14 || *v21 != 24)
          continue;
        v15 = v21 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_42:
        if (v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v39);
          if (!(_DWORD)result)
            return result;
          v22 = (char *)*((_QWORD *)a2 + 1);
          v14 = (char *)*((_QWORD *)a2 + 2);
        }
        else
        {
          *v39 = *v15;
          v22 = v15 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 15) |= 4u;
        if (v22 >= v14 || *v22 != 32)
          continue;
        v16 = v22 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_50:
        if (v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v40);
          if (!(_DWORD)result)
            return result;
          v23 = (char *)*((_QWORD *)a2 + 1);
          v14 = (char *)*((_QWORD *)a2 + 2);
        }
        else
        {
          *v40 = *v16;
          v23 = v16 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 15) |= 8u;
        if (v23 >= v14 || *v23 != 40)
          continue;
        v17 = v23 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_58:
        if (v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v24 = (char *)*((_QWORD *)a2 + 1);
          v14 = (char *)*((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v17;
          v24 = v17 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 15) |= 0x10u;
        if (v24 >= v14 || *v24 != 48)
          continue;
        v18 = v24 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_66:
        if (v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v25 = (char *)*((_QWORD *)a2 + 1);
          v14 = (char *)*((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v18;
          v25 = v18 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 15) |= 0x20u;
        if (v25 < v14 && *v25 == 56)
          goto LABEL_73;
        continue;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = (char *)*((_QWORD *)a2 + 2);
        goto LABEL_42;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v14 = (char *)*((_QWORD *)a2 + 2);
        goto LABEL_50;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = (char *)*((_QWORD *)a2 + 2);
        goto LABEL_58;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = (char *)*((_QWORD *)a2 + 2);
        goto LABEL_66;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)17>(a2, v4);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v25 = (char *)*((_QWORD *)a2 + 1);
            v14 = (char *)*((_QWORD *)a2 + 2);
            if (v25 >= v14 || *v25 != 56)
              break;
LABEL_73:
            v19 = v25 + 1;
            *((_QWORD *)a2 + 1) = v19;
LABEL_74:
            v41[0] = 0;
            if (v19 >= v14 || *v19 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
              if (!(_DWORD)result)
                return result;
              v26 = v41[0];
            }
            else
            {
              v26 = *v19;
              *((_QWORD *)a2 + 1) = v19 + 1;
            }
            v27 = -(v26 & 1) ^ (v26 >> 1);
            v28 = *((_DWORD *)this + 12);
            if (v28 == *((_DWORD *)this + 13))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(v4, v28 + 1);
              v28 = *((_DWORD *)this + 12);
            }
            v29 = *((_QWORD *)this + 5);
            *((_DWORD *)this + 12) = v28 + 1;
            *(_DWORD *)(v29 + 4 * v28) = v27;
            v30 = *((_DWORD *)this + 13) - *((_DWORD *)this + 12);
            if (v30 >= 1)
            {
              v31 = v30 + 1;
              do
              {
                v32 = (_BYTE *)*((_QWORD *)a2 + 1);
                v33 = *((_QWORD *)a2 + 2);
                if ((unint64_t)v32 >= v33 || *v32 != 56)
                  break;
                *((_QWORD *)a2 + 1) = v32 + 1;
                v41[0] = 0;
                if ((unint64_t)(v32 + 1) >= v33 || (char)v32[1] < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
                  if (!(_DWORD)result)
                    return result;
                  v34 = v41[0];
                }
                else
                {
                  v34 = v32[1];
                  *((_QWORD *)a2 + 1) = v32 + 2;
                }
                v35 = *((_DWORD *)this + 12);
                if (v35 >= *((_DWORD *)this + 13))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v41);
                  v35 = *((_DWORD *)this + 12);
                }
                v36 = *((_QWORD *)this + 5);
                *((_DWORD *)this + 12) = v35 + 1;
                *(_DWORD *)(v36 + 4 * v35) = -(v34 & 1) ^ (v34 >> 1);
                --v31;
              }
              while (v31 > 1);
            }
          }
          if (v25 == v14 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v19 = (char *)*((_QWORD *)a2 + 1);
          v14 = (char *)*((_QWORD *)a2 + 2);
          goto LABEL_74;
        }
LABEL_26:
        if (v9 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      default:
        v9 = TagFallback & 7;
        goto LABEL_26;
    }
  }
}

void sub_218A0CD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)17>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  uint64_t result;
  char *v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;

  v10 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v10 = *v4;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v11 = 0;
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!(_DWORD)result)
          return result;
        v7 = v11;
      }
      else
      {
        v7 = *v6;
        *((_QWORD *)this + 1) = v6 + 1;
      }
      v8 = a2[2];
      if (v8 == a2[3])
      {
        wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(a2, v8 + 1);
        v8 = a2[2];
      }
      v9 = *(_QWORD *)a2;
      a2[2] = v8 + 1;
      *(_DWORD *)(v9 + 4 * v8) = -(v7 & 1) ^ (v7 >> 1);
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t awd::metrics::LocationBeaconRangingSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x20) != 0)
LABEL_7:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
LABEL_8:
  if (*(int *)(v5 + 48) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(*(_QWORD *)(v5 + 40) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 48));
  }
  return this;
}

uint64_t awd::metrics::LocationBeaconRangingSession::ByteSize(awd::metrics::LocationBeaconRangingSession *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 60);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_37;
  }
  if ((*((_BYTE *)this + 60) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 15);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 60) & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 15);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 += v9 + v5 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 15);
    }
    else
    {
      v11 = 2;
    }
    v3 += v11;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_37;
    goto LABEL_33;
  }
LABEL_29:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x20) != 0)
  {
LABEL_33:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v16 >= 0x80)
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    else
      v17 = 2;
    v3 += v17;
  }
LABEL_37:
  v18 = *((_DWORD *)this + 12);
  if (v18 < 1)
  {
    v20 = 0;
  }
  else
  {
    v19 = 0;
    v20 = 0;
    do
    {
      v21 = *(_DWORD *)(*((_QWORD *)this + 5) + 4 * v19);
      v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v21) ^ (v21 >> 31));
      if (v22 >= 0x80)
      {
        v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
        v18 = *((_DWORD *)this + 12);
      }
      else
      {
        v23 = 1;
      }
      v20 += v23;
      ++v19;
    }
    while (v19 < v18);
  }
  result = (v20 + v3 + v18);
  *((_DWORD *)this + 14) = result;
  return result;
}

void awd::metrics::LocationBeaconRangingSession::CheckTypeAndMergeFrom(awd::metrics::LocationBeaconRangingSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationBeaconRangingSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationBeaconRangingSession::CopyFrom(awd::metrics::LocationBeaconRangingSession *this, const awd::metrics::LocationBeaconRangingSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationBeaconRangingSession *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationBeaconRangingSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationBeaconRangingSession::IsInitialized(awd::metrics::LocationBeaconRangingSession *this)
{
  return 1;
}

double awd::metrics::LocationBeaconRangingSession::Swap(awd::metrics::LocationBeaconRangingSession *this, awd::metrics::LocationBeaconRangingSession *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    v5 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    result = *((double *)a2 + 6);
    *((_QWORD *)a2 + 5) = v5;
    v7 = *((_QWORD *)this + 6);
    *((double *)this + 6) = result;
    *((_QWORD *)a2 + 6) = v7;
    LODWORD(v5) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v5;
    LODWORD(v5) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
  }
  return result;
}

_QWORD *awd::metrics::LocationBeaconRangingSession::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationBeaconRangingSession");
}

BOOL awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeType_IsValid(awd::metrics *this)
{
  return this < 0xF;
}

BOOL awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeType_IsValid(awd::metrics *this)
{
  return this < 0xB;
}

BOOL awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeType_IsValid(awd::metrics *this)
{
  return this < 8;
}

BOOL awd::metrics::LocationGPSSessionStatistics_MotionActivityType_IsValid(awd::metrics *this)
{
  return this < 9;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentType_IsValid(awd::metrics *this)
{
  return (this < 8) & (0xDFu >> (char)this);
}

BOOL awd::metrics::LocationGPSSessionStatistics_MountedStateType_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationGPSSessionStatistics_MovingStateType_IsValid(awd::metrics *this)
{
  return this < 4;
}

BOOL awd::metrics::LocationGPSSessionStatistics_PowerStateType_IsValid(awd::metrics *this)
{
  return this < 4;
}

BOOL awd::metrics::LocationGPSSessionStatistics_RadioAccessTechnology_IsValid(awd::metrics *this)
{
  return this < 0xD;
}

BOOL awd::metrics::LocationGPSSessionStatistics_DeviceOrientationType_IsValid(awd::metrics *this)
{
  return this < 7;
}

BOOL awd::metrics::LocationGPSSessionStatistics_EphemerisFileIntegrityCheckType_IsValid(awd::metrics *this)
{
  return this < 0xE;
}

BOOL awd::metrics::LocationGPSSessionStatistics_PowerMeasurementRange_IsValid(awd::metrics *this)
{
  return this < 0x20;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::LocationGPSSessionStatistics_UncertaintyRangeData(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F488;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom(this, a2);
  return this;
}

void sub_218A0D39C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 0xF)
        awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A0D464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::~LocationGPSSessionStatistics_UncertaintyRangeData(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this)
{
  *(_QWORD *)this = &off_24D98F488;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F488;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F488;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::New(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F488;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 0xE)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::ByteSize(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.UncertaintyRangeData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::LocationGPSSessionStatistics_SatelliteCNORangeData(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F500;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(this, a2);
  return this;
}

void sub_218A0D93C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 0xB)
        awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A0DA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::~LocationGPSSessionStatistics_SatelliteCNORangeData(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this)
{
  *(_QWORD *)this = &off_24D98F500;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F500;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F500;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::New(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F500;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 0xA)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.SatelliteCNORangeData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::LocationGPSSessionStatistics_SatelliteCountRangeData(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F578;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(this, a2);
  return this;
}

void sub_218A0DEDC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 8)
        awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A0DFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::~LocationGPSSessionStatistics_SatelliteCountRangeData(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this)
{
  *(_QWORD *)this = &off_24D98F578;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F578;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F578;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::New(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F578;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 7)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.SatelliteCountRangeData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_MotionActivityData *awd::metrics::LocationGPSSessionStatistics_MotionActivityData::LocationGPSSessionStatistics_MotionActivityData(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, const awd::metrics::LocationGPSSessionStatistics_MotionActivityData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F5F0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom(this, a2);
  return this;
}

void sub_218A0E47C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, const awd::metrics::LocationGPSSessionStatistics_MotionActivityData *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 9)
        awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A0E544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::~LocationGPSSessionStatistics_MotionActivityData(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this)
{
  *(_QWORD *)this = &off_24D98F5F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F5F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F5F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::New(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F5F0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 8)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::ByteSize(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, const awd::metrics::LocationGPSSessionStatistics_MotionActivityData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_MotionActivityData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_MotionActivityData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_MotionActivityData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.MotionActivityData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::LocationGPSSessionStatistics_SignalEnvironmentData(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, const awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F668;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom(this, a2);
  return this;
}

void sub_218A0EA1C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, const awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 5 && v5 - 6 >= 2)
        awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A0EAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::~LocationGPSSessionStatistics_SignalEnvironmentData(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this)
{
  *(_QWORD *)this = &off_24D98F668;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F668;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F668;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::New(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F668;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v13;
  unsigned __int8 *v14;
  uint64_t result;
  unsigned int v16;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v16 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
        if (!(_DWORD)result)
          return result;
        v11 = v16;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 7 && v11 != 5)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v13 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v13 < v8 && *v13 == 16)
      {
        v9 = v13 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_29:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v14 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_29;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::ByteSize(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, const awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.SignalEnvironmentData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_MountedStateData *awd::metrics::LocationGPSSessionStatistics_MountedStateData::LocationGPSSessionStatistics_MountedStateData(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, const awd::metrics::LocationGPSSessionStatistics_MountedStateData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F6E0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom(this, a2);
  return this;
}

void sub_218A0EFCC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, const awd::metrics::LocationGPSSessionStatistics_MountedStateData *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 3)
        awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A0F094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::~LocationGPSSessionStatistics_MountedStateData(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this)
{
  *(_QWORD *)this = &off_24D98F6E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F6E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F6E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::New(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F6E0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 2)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::ByteSize(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, const awd::metrics::LocationGPSSessionStatistics_MountedStateData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_MountedStateData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_MountedStateData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_MountedStateData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_MountedStateData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.MountedStateData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_MovingStateData *awd::metrics::LocationGPSSessionStatistics_MovingStateData::LocationGPSSessionStatistics_MovingStateData(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, const awd::metrics::LocationGPSSessionStatistics_MovingStateData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F758;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom(this, a2);
  return this;
}

void sub_218A0F56C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, const awd::metrics::LocationGPSSessionStatistics_MovingStateData *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 4)
        awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A0F634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::~LocationGPSSessionStatistics_MovingStateData(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this)
{
  *(_QWORD *)this = &off_24D98F758;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F758;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F758;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::New(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F758;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 3)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::ByteSize(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, const awd::metrics::LocationGPSSessionStatistics_MovingStateData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_MovingStateData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_MovingStateData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_MovingStateData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_MovingStateData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.MovingStateData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_PowerStateData *awd::metrics::LocationGPSSessionStatistics_PowerStateData::LocationGPSSessionStatistics_PowerStateData(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, const awd::metrics::LocationGPSSessionStatistics_PowerStateData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F7D0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom(this, a2);
  return this;
}

void sub_218A0FB0C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, const awd::metrics::LocationGPSSessionStatistics_PowerStateData *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 4)
        awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A0FBD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::~LocationGPSSessionStatistics_PowerStateData(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this)
{
  *(_QWORD *)this = &off_24D98F7D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F7D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F7D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::New(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F7D0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 3)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::ByteSize(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, const awd::metrics::LocationGPSSessionStatistics_PowerStateData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_PowerStateData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_PowerStateData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_PowerStateData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_PowerStateData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.PowerStateData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_ChecksumData *awd::metrics::LocationGPSSessionStatistics_ChecksumData::LocationGPSSessionStatistics_ChecksumData(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, const awd::metrics::LocationGPSSessionStatistics_ChecksumData *a2)
{
  uint64_t v3;

  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D98F848;
  *((_QWORD *)this + 1) = v3;
  *((_QWORD *)this + 2) = 0;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(this, a2);
  return this;
}

void sub_218A100B8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, const awd::metrics::LocationGPSSessionStatistics_ChecksumData *a2)
{
  const std::string *v4;
  std::string *v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if ((*((_BYTE *)a2 + 20) & 1) != 0)
  {
    v4 = (const std::string *)*((_QWORD *)a2 + 1);
    *((_DWORD *)this + 5) |= 1u;
    v5 = (std::string *)*((_QWORD *)this + 1);
    if (v5 == (std::string *)MEMORY[0x24BEDD958])
    {
      v5 = (std::string *)operator new();
      v5->__r_.__value_.__l.__size_ = 0;
      v5->__r_.__value_.__r.__words[2] = 0;
      v5->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 1) = v5;
    }
    std::string::operator=(v5, v4);
  }
}

void sub_218A10190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::~LocationGPSSessionStatistics_ChecksumData(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this)
{
  *(_QWORD *)this = &off_24D98F848;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F848;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F848;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 8);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_ChecksumData::New(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this)
{
  _QWORD *result;
  uint64_t v2;

  result = (_QWORD *)operator new();
  v2 = MEMORY[0x24BEDD958];
  *result = &off_24D98F848;
  result[1] = v2;
  result[2] = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::Clear(uint64_t this)
{
  uint64_t v1;

  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    v1 = *(_QWORD *)(this + 8);
    if (v1 != MEMORY[0x24BEDD958])
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(_BYTE **)v1 = 0;
        *(_QWORD *)(v1 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v1 = 0;
        *(_BYTE *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  _QWORD *v7;
  uint64_t result;

  v4 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 10)
        break;
      *((_DWORD *)this + 5) |= 1u;
      if (*((_QWORD *)this + 1) == v4)
      {
        v7 = (_QWORD *)operator new();
        v7[1] = 0;
        v7[2] = 0;
        *v7 = 0;
        *((_QWORD *)this + 1) = v7;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2)
{
  if ((*(_BYTE *)(this + 20) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::ByteSize(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this)
{
  uint64_t result;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;

  if ((*((_BYTE *)this + 20) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 1);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = v4;
    v6 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v7 = *(unsigned __int8 *)(v3 + 23);
    else
      v7 = v6;
    if (v7 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7);
      v4 = *(unsigned __int8 *)(v3 + 23);
      v6 = *(_QWORD *)(v3 + 8);
      v8 = v9 + 1;
      v5 = *(_BYTE *)(v3 + 23);
    }
    else
    {
      v8 = 2;
    }
    if (v5 < 0)
      v4 = v6;
    result = (v8 + v4);
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, const awd::metrics::LocationGPSSessionStatistics_ChecksumData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_ChecksumData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_ChecksumData *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_ChecksumData *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_ChecksumData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.ChecksumData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::LocationGPSSessionStatistics_DeviceOrientationData(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, const awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F8C0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom(this, a2);
  return this;
}

void sub_218A10658(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, const awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 7)
        awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A10720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::~LocationGPSSessionStatistics_DeviceOrientationData(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this)
{
  *(_QWORD *)this = &off_24D98F8C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F8C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F8C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::New(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F8C0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 6)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::ByteSize(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, const awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.DeviceOrientationData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::LocationGPSSessionStatistics_PowerMeasurementData(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, const awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F938;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom(this, a2);
  return this;
}

void sub_218A10BF8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, const awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 0x20)
        awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A10CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::~LocationGPSSessionStatistics_PowerMeasurementData(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this)
{
  *(_QWORD *)this = &off_24D98F938;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F938;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F938;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::New(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F938;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 0x1F)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::ByteSize(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, const awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.PowerMeasurementData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::LocationGPSSessionStatistics_ChargerTypeData(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, const awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98F9B0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergeFrom(this, a2);
  return this;
}

void sub_218A11198(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, const awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A11254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::~LocationGPSSessionStatistics_ChargerTypeData(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this)
{
  *(_QWORD *)this = &off_24D98F9B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F9B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98F9B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::New(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98F9B0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v11 = *v10;
        v12 = v10 + 1;
        *((_QWORD *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 4) = v11;
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_24:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::ByteSize(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, const awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.ChargerTypeData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::LocationGPSSessionStatistics_ThermalLevelData(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, const awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98FA28;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergeFrom(this, a2);
  return this;
}

void sub_218A11724(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, const awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A117E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::~LocationGPSSessionStatistics_ThermalLevelData(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this)
{
  *(_QWORD *)this = &off_24D98FA28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FA28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FA28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::New(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98FA28;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v11 = *v10;
        v12 = v10 + 1;
        *((_QWORD *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 4) = v11;
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_24:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::ByteSize(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, const awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.ThermalLevelData");
}

BOOL awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics_GpsdExitCategory_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics_GpsdExceptionCategory_IsValid(awd::metrics *this)
{
  return this < 5;
}

double awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::SharedCtor(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  double result;

  *((_DWORD *)this + 18) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *a2)
{
  *(_QWORD *)this = &off_24D98FAA0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A11CF8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  _BYTE v18[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  v4 = *((_DWORD *)a2 + 18);
  if (!(_BYTE)v4)
    goto LABEL_15;
  if ((v4 & 1) != 0)
  {
    v5 = *((_DWORD *)a2 + 2);
    if (v5 >= 3)
      awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom();
    *((_DWORD *)this + 18) |= 1u;
    *((_DWORD *)this + 2) = v5;
    v4 = *((_DWORD *)a2 + 18);
  }
  if ((v4 & 2) != 0)
  {
    v10 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 18) |= 2u;
    *((_DWORD *)this + 3) = v10;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0)
        goto LABEL_10;
      goto LABEL_28;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  v11 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 18) |= 4u;
  *((_DWORD *)this + 4) = v11;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  v12 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 18) |= 8u;
  *((_DWORD *)this + 5) = v12;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0)
      goto LABEL_12;
LABEL_30:
    v14 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 18) |= 0x20u;
    *((_DWORD *)this + 7) = v14;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0)
        goto LABEL_15;
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_29:
  v13 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 18) |= 0x10u;
  *((_DWORD *)this + 6) = v13;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0)
    goto LABEL_30;
LABEL_12:
  if ((v4 & 0x40) == 0)
    goto LABEL_13;
LABEL_31:
  v15 = *((_QWORD *)a2 + 4);
  *((_DWORD *)this + 18) |= 0x40u;
  *((_QWORD *)this + 4) = v15;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x80) != 0)
  {
LABEL_14:
    v6 = *((_QWORD *)a2 + 5);
    *((_DWORD *)this + 18) |= 0x80u;
    *((_QWORD *)this + 5) = v6;
    v4 = *((_DWORD *)a2 + 18);
  }
LABEL_15:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v7 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 18) |= 0x100u;
    *((_DWORD *)this + 12) = v7;
    v4 = *((_DWORD *)a2 + 18);
  }
  if ((v4 & 0x200) != 0)
  {
    v8 = *((_DWORD *)a2 + 13);
    if (v8 >= 5)
      awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom();
    *((_DWORD *)this + 18) |= 0x200u;
    *((_DWORD *)this + 13) = v8;
    v4 = *((_DWORD *)a2 + 18);
  }
  if ((v4 & 0x400) != 0)
  {
    v16 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 18) |= 0x400u;
    *((_DWORD *)this + 14) = v16;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x800) == 0)
    {
LABEL_23:
      if ((v4 & 0x1000) == 0)
        return;
      goto LABEL_24;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_23;
  }
  v17 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 18) |= 0x800u;
  *((_DWORD *)this + 15) = v17;
  if ((*((_DWORD *)a2 + 18) & 0x1000) != 0)
  {
LABEL_24:
    v9 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 18) |= 0x1000u;
    *((_DWORD *)this + 16) = v9;
  }
}

void sub_218A11F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::~LocationGPSSessionStatistics_LocationGpsPersistentStatistics(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  *(_QWORD *)this = &off_24D98FAA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FAA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FAA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::New(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98FAA0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_DWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 72);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 56) = 0;
    *(_DWORD *)(this + 64) = 0;
  }
  *(_DWORD *)(this + 72) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  unsigned int v38;
  _BYTE *v39;
  unsigned int v40;
  _BYTE *v41;
  unsigned int v42;
  _BYTE *v43;
  unsigned int v44;
  _BYTE *v45;
  unsigned int v46;
  unsigned __int8 *v47;
  uint64_t result;
  unsigned int v49[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v49[0] = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && (*v7 & 0x80000000) == 0)
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
          goto LABEL_41;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
        if ((_DWORD)result)
        {
          v8 = v49[0];
LABEL_41:
          if (v8 <= 2)
          {
            *((_DWORD *)this + 18) |= 1u;
            *((_DWORD *)this + 2) = v8;
          }
          v23 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v23 < v9 && *v23 == 16)
          {
            v10 = v23 + 1;
            *((_QWORD *)a2 + 1) = v10;
            goto LABEL_46;
          }
          continue;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_46:
        v49[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v24 = v49[0];
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v24 = *v10;
          v25 = v10 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 3) = v24;
        *((_DWORD *)this + 18) |= 2u;
        if ((unint64_t)v25 >= v9 || *v25 != 24)
          continue;
        v11 = v25 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_54:
        v49[0] = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v26 = v49[0];
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v26 = *v11;
          v27 = v11 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 4) = v26;
        *((_DWORD *)this + 18) |= 4u;
        if ((unint64_t)v27 >= v9 || *v27 != 32)
          continue;
        v12 = v27 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_62:
        v49[0] = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v28 = v49[0];
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v28 = *v12;
          v29 = v12 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 5) = v28;
        *((_DWORD *)this + 18) |= 8u;
        if ((unint64_t)v29 >= v9 || *v29 != 40)
          continue;
        v13 = v29 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_70:
        v49[0] = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v30 = v49[0];
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v30 = *v13;
          v31 = v13 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 6) = v30;
        *((_DWORD *)this + 18) |= 0x10u;
        if ((unint64_t)v31 >= v9 || *v31 != 48)
          continue;
        v14 = v31 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_78:
        v49[0] = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v32 = v49[0];
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v32 = *v14;
          v33 = v14 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 7) = v32;
        *((_DWORD *)this + 18) |= 0x20u;
        if ((unint64_t)v33 >= v9 || *v33 != 56)
          continue;
        v15 = v33 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_86:
        *(_QWORD *)v49 = 0;
        if ((unint64_t)v15 >= v9 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v49);
          if (!(_DWORD)result)
            return result;
          v34 = *(_QWORD *)v49;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v34 = *v15;
          v35 = v15 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_QWORD *)this + 4) = v34;
        *((_DWORD *)this + 18) |= 0x40u;
        if ((unint64_t)v35 >= v9 || *v35 != 64)
          continue;
        v16 = v35 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_94:
        *(_QWORD *)v49 = 0;
        if ((unint64_t)v16 >= v9 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v49);
          if (!(_DWORD)result)
            return result;
          v36 = *(_QWORD *)v49;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v36 = *v16;
          v37 = v16 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_QWORD *)this + 5) = v36;
        *((_DWORD *)this + 18) |= 0x80u;
        if ((unint64_t)v37 >= v9 || *v37 != 72)
          continue;
        v17 = v37 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_102:
        v49[0] = 0;
        if ((unint64_t)v17 >= v9 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v38 = v49[0];
          v39 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v38 = *v17;
          v39 = v17 + 1;
          *((_QWORD *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 12) = v38;
        *((_DWORD *)this + 18) |= 0x100u;
        if ((unint64_t)v39 >= v9 || *v39 != 80)
          continue;
        v18 = v39 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_110:
        v49[0] = 0;
        if ((unint64_t)v18 >= v9 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v40 = v49[0];
        }
        else
        {
          v40 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        if (v40 <= 4)
        {
          *((_DWORD *)this + 18) |= 0x200u;
          *((_DWORD *)this + 13) = v40;
        }
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v41 >= v19 || *v41 != 88)
          continue;
        v20 = v41 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_120:
        v49[0] = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v42 = v49[0];
          v43 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v42 = *v20;
          v43 = v20 + 1;
          *((_QWORD *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 15) = v42;
        *((_DWORD *)this + 18) |= 0x800u;
        if ((unint64_t)v43 >= v19 || *v43 != 96)
          continue;
        v21 = v43 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_128:
        v49[0] = 0;
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v44 = v49[0];
          v45 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v44 = *v21;
          v45 = v21 + 1;
          *((_QWORD *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 16) = v44;
        *((_DWORD *)this + 18) |= 0x1000u;
        if ((unint64_t)v45 >= v19 || *v45 != 104)
          continue;
        v22 = v45 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_136:
        v49[0] = 0;
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v46 = v49[0];
          v47 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v46 = *v22;
          v47 = (unsigned __int8 *)(v22 + 1);
          *((_QWORD *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 14) = v46;
        *((_DWORD *)this + 18) |= 0x400u;
        if (v47 != (unsigned __int8 *)v19 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_54;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_62;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_70;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_78;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_86;
      case 8u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_94;
      case 9u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_102;
      case 0xAu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_110;
      case 0xBu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_120;
      case 0xCu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_128;
      case 0xDu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_136;
      default:
        v6 = TagFallback & 7;
LABEL_35:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x800) == 0)
      goto LABEL_12;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x800) == 0)
  {
LABEL_12:
    if ((v6 & 0x1000) == 0)
      goto LABEL_13;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x1000) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::ByteSize(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;

  v2 = *((_DWORD *)this + 18);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_25;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *((_DWORD *)this + 18);
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 10;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = *((_DWORD *)this + 18);
    }
    else
    {
      v9 = 1;
    }
    v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_54;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v13 = 1;
  }
  v3 = (v3 + v13 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_66;
  }
LABEL_54:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v16 & 0x80000000) != 0)
  {
    v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v17 = 1;
  }
  v3 = (v3 + v17 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_78;
  }
LABEL_66:
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v20 & 0x80000000) != 0)
  {
    v21 = 10;
  }
  else if (v20 >= 0x80)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v21 = 1;
  }
  v3 = (v3 + v21 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0)
      goto LABEL_25;
    goto LABEL_24;
  }
LABEL_78:
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 4))
     + 1;
  v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x80) != 0)
  {
LABEL_24:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 5))
       + 1;
    v2 = *((_DWORD *)this + 18);
  }
LABEL_25:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_88;
  if ((v2 & 0x100) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 18);
    }
    else
    {
      v11 = 2;
    }
    v3 = (v11 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_28:
      if ((v2 & 0x400) == 0)
        goto LABEL_29;
      goto LABEL_60;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_28;
  }
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v15 = 2;
  }
  v3 = (v15 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_29:
    if ((v2 & 0x800) == 0)
      goto LABEL_30;
    goto LABEL_72;
  }
LABEL_60:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v18 & 0x80000000) != 0)
  {
    v19 = 11;
  }
  else if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v19 = 2;
  }
  v3 = (v19 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_30:
    if ((v2 & 0x1000) == 0)
      goto LABEL_88;
    goto LABEL_82;
  }
LABEL_72:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v22 & 0x80000000) != 0)
  {
    v23 = 11;
  }
  else if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v23 = 2;
  }
  v3 = (v23 + v3);
  if ((v2 & 0x1000) != 0)
  {
LABEL_82:
    v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v24 & 0x80000000) != 0)
    {
      v25 = 11;
    }
    else if (v24 >= 0x80)
    {
      v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    }
    else
    {
      v25 = 2;
    }
    v3 = (v25 + v3);
  }
LABEL_88:
  *((_DWORD *)this + 17) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::CopyFrom(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::IsInitialized(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *)this)
  {
    v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    v7 = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    v8 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v8;
    v9 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v9;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.LocationGpsPersistentStatistics");
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *a2)
{
  *(_QWORD *)this = &off_24D98FB18;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergeFrom(this, a2);
  return this;
}

void sub_218A12DB4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergeFrom(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 7) |= 1u;
      *((_DWORD *)this + 2) = v6;
      v4 = *((_DWORD *)a2 + 7);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 7) |= 2u;
    *((_DWORD *)this + 3) = v7;
    v4 = *((_DWORD *)a2 + 7);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 7) |= 4u;
    *((_DWORD *)this + 4) = v8;
    if ((*((_DWORD *)a2 + 7) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 7) |= 8u;
    *((_DWORD *)this + 5) = v5;
  }
}

void sub_218A12EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::~LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this)
{
  *(_QWORD *)this = &off_24D98FB18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FB18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FB18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::New(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_24D98FB18;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  unsigned int v12;
  _BYTE *v13;
  char *v14;
  char *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;

  v4 = (unsigned int *)((char *)this + 12);
  v5 = (unsigned int *)((char *)this + 16);
  v6 = (unsigned int *)((char *)this + 20);
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v21 = 0;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          v12 = *v11;
          v13 = v11 + 1;
          *((_QWORD *)a2 + 1) = v13;
LABEL_24:
          *((_DWORD *)this + 2) = v12;
          *((_DWORD *)this + 7) |= 1u;
          if ((unint64_t)v13 < v10 && *v13 == 16)
          {
            v14 = v13 + 1;
            *((_QWORD *)a2 + 1) = v14;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
        if ((_DWORD)result)
        {
          v12 = v21;
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_27:
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v14;
          v17 = v14 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 7) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 24)
          continue;
        v15 = v17 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_35:
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v15;
          v18 = v15 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 7) |= 4u;
        if ((unint64_t)v18 >= v10 || *v18 != 32)
          continue;
        v16 = v18 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_43:
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v19 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v16;
          v19 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 7) |= 8u;
        if (v19 != (unsigned __int8 *)v10 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_35;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_43;
      default:
        v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = this;
  v6 = this[7];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    v6 = v5[7];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  v6 = v5[7];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  }
LABEL_8:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  if ((v5[7] & 8) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::ByteSize(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;

  LOBYTE(v2) = *((_BYTE *)this + 28);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 7);
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 28) & 2) == 0)
      goto LABEL_17;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 7);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_17:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_28;
    goto LABEL_24;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 7);
  }
  else
  {
    v8 = 2;
  }
  v3 = (v8 + v3);
  if ((v2 & 8) != 0)
  {
LABEL_24:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v9 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    else
      v10 = 2;
    v3 = (v10 + v3);
  }
LABEL_28:
  *((_DWORD *)this + 6) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::CopyFrom(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::IsInitialized(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this)
{
  return 1;
}

awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::Swap(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v6;
    v7 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v7;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.BarometricAltitudeDriftRateInfo");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::LocationGPSSessionStatistics_NSForceOffReason(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, const awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98FB90;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergeFrom(this, a2);
  return this;
}

void sub_218A1354C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergeFrom(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, const awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A13608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::~LocationGPSSessionStatistics_NSForceOffReason(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this)
{
  *(_QWORD *)this = &off_24D98FB90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FB90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FB90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::New(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98FB90;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v11 = *v10;
        v12 = v10 + 1;
        *((_QWORD *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 4) = v11;
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_24:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::ByteSize(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::CopyFrom(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, const awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::IsInitialized(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.NSForceOffReason");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_NSOnOffState *awd::metrics::LocationGPSSessionStatistics_NSOnOffState::LocationGPSSessionStatistics_NSOnOffState(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, const awd::metrics::LocationGPSSessionStatistics_NSOnOffState *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98FC08;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergeFrom(this, a2);
  return this;
}

void sub_218A13AD8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergeFrom(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, const awd::metrics::LocationGPSSessionStatistics_NSOnOffState *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A13B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::~LocationGPSSessionStatistics_NSOnOffState(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this)
{
  *(_QWORD *)this = &off_24D98FC08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FC08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FC08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::New(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98FC08;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v11 = *v10;
        v12 = v10 + 1;
        *((_QWORD *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 4) = v11;
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_24:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::ByteSize(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::CopyFrom(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, const awd::metrics::LocationGPSSessionStatistics_NSOnOffState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::IsInitialized(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_NSOnOffState *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics_NSOnOffState *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_NSOnOffState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.NSOnOffState");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::LocationGPSSessionStatistics_JammingMetricBucket(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D98FC80;
  awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergeFrom(this, a2);
  return this;
}

void sub_218A14058(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergeFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *a2)
{
  int v4;
  int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_218A14114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::~LocationGPSSessionStatistics_JammingMetricBucket(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this)
{
  *(_QWORD *)this = &off_24D98FC80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FC80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FC80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::New(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_24D98FC80;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;
  unsigned int v16;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v16 = 0;
      v9 = (char *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v9 >= v7 || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
        if (!(_DWORD)result)
          return result;
        v10 = v16;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v10 = *v9;
        v11 = v9 + 1;
        *((_QWORD *)a2 + 1) = v11;
      }
      *((_DWORD *)this + 2) = v10;
      *((_DWORD *)this + 5) |= 1u;
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        v8 = v11 + 1;
        *((_QWORD *)a2 + 1) = v8;
LABEL_23:
        v15 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
          if (!(_DWORD)result)
            return result;
          v12 = v15;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v8;
          v13 = (unsigned __int8 *)(v8 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 3) = v12;
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_23;
      }
    }
    else
    {
      v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::ByteSize(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_19;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      v6 = 2;
    }
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::CopyFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::IsInitialized(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this)
{
  return 1;
}

awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::Swap(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.JammingMetricBucket");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::LocationGPSSessionStatistics_JammingMetricDataPerSignal(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *a2)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_24D98FCF8;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergeFrom(this, a2);
  return this;
}

void sub_218A14614(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergeFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *a2)
{
  uint64_t v4;
  const awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = (awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *)operator new();
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *(_QWORD *)v9 = &off_24D98FC80;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket **)(v8 + 8 * v7);
      }
      awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  if ((*((_BYTE *)a2 + 40) & 1) != 0)
  {
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 1u;
    *((_DWORD *)this + 8) = v12;
  }
}

void sub_218A14798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::~LocationGPSSessionStatistics_JammingMetricDataPerSignal(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
  *(_QWORD *)this = &off_24D98FCF8;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket>::TypeHandler>((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::~LocationGPSSessionStatistics_JammingMetricDataPerSignal(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::New(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98FCF8;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(_BYTE *)(this + 40))
    *(_DWORD *)(this + 32) = 0;
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  char *v8;
  unint64_t v9;
  unsigned int v10;
  _BYTE *v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  uint64_t v15;
  awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  unsigned int v26;
  unsigned int v27;

  v4 = (awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v26 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 >= v9 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!(_DWORD)result)
            return result;
          v10 = v26;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v10 = *v8;
          v11 = v8 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) = v10;
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 18)
          goto LABEL_23;
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_16;
      while (1)
      {
        v13 = *((_DWORD *)this + 5);
        v14 = *((int *)this + 4);
        if ((int)v14 >= v13)
        {
          if (v13 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v13 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v13 + 1;
          v16 = (awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *)operator new();
          *((_QWORD *)v16 + 1) = 0;
          *((_QWORD *)v16 + 2) = 0;
          *(_QWORD *)v16 = &off_24D98FC80;
          v17 = *((_QWORD *)this + 1);
          v18 = *((int *)this + 4);
          *((_DWORD *)this + 4) = v18 + 1;
          *(_QWORD *)(v17 + 8 * v18) = v16;
        }
        else
        {
          v15 = *((_QWORD *)this + 1);
          *((_DWORD *)this + 4) = v14 + 1;
          v16 = *(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket **)(v15 + 8 * v14);
        }
        v27 = 0;
        v19 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0;
        }
        else
        {
          v27 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)a2 + 14);
        v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergePartialFromCodedStream(v16, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v25 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v11 >= v25 || *v11 != 18)
          break;
LABEL_23:
        *((_QWORD *)a2 + 1) = v11 + 1;
      }
      if (v11 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = this;
  if ((*(_BYTE *)(this + 40) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 32), (uint64_t)a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::ByteSize(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
  int v2;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;

  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v3 & 0x80000000) != 0)
    {
      v2 = 11;
    }
    else if (v3 >= 0x80)
    {
      v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      v2 = 2;
    }
  }
  else
  {
    v2 = 0;
  }
  v4 = *((_DWORD *)this + 4);
  v5 = (v4 + v2);
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket **)(*((_QWORD *)this + 1) + 8 * v6));
      v8 = (int)v7;
      if (v7 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      else
        v9 = 1;
      v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *((int *)this + 4));
  }
  *((_DWORD *)this + 9) = v5;
  return v5;
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::CopyFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::IsInitialized(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
  return 1;
}

awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::Swap(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *a2)
{
  awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *v3;
  int v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    this = (awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    v6 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v6;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.JammingMetricDataPerSignal");
}

double awd::metrics::LocationGPSSessionStatistics::LocationGPSSessionStatistics(awd::metrics::LocationGPSSessionStatistics *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_DWORD *)this + 24) = 0;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_DWORD *)this + 30) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_DWORD *)this + 36) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 0;
  *((_DWORD *)this + 48) = 0;
  *((_OWORD *)this + 11) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *((_DWORD *)this + 54) = 0;
  *((_OWORD *)this + 14) = 0u;
  *((_DWORD *)this + 60) = 0;
  *((_DWORD *)this + 66) = 0;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((_DWORD *)this + 72) = 0;
  *((_OWORD *)this + 17) = 0u;
  *((_DWORD *)this + 78) = 0;
  *(_OWORD *)((char *)this + 296) = 0u;
  *((_DWORD *)this + 84) = 0;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 90) = 0;
  *(_OWORD *)((char *)this + 344) = 0u;
  *((_DWORD *)this + 96) = 0;
  *((_OWORD *)this + 23) = 0u;
  *((_DWORD *)this + 156) = 0;
  *((_OWORD *)this + 38) = 0u;
  *((_DWORD *)this + 164) = 0;
  *((_OWORD *)this + 40) = 0u;
  *((_DWORD *)this + 176) = 0;
  *((_OWORD *)this + 43) = 0u;
  *((_DWORD *)this + 182) = 0;
  *(_OWORD *)((char *)this + 712) = 0u;
  *((_DWORD *)this + 218) = 0;
  *(_OWORD *)((char *)this + 856) = 0u;
  *((_DWORD *)this + 246) = 0;
  *(_OWORD *)((char *)this + 968) = 0u;
  *((_DWORD *)this + 252) = 0;
  *((_OWORD *)this + 62) = 0u;
  *((_DWORD *)this + 258) = 0;
  *(_OWORD *)((char *)this + 1016) = 0u;
  *((_DWORD *)this + 266) = 0;
  *(_OWORD *)((char *)this + 1048) = 0u;
  *((_DWORD *)this + 274) = 0;
  *(_OWORD *)((char *)this + 1080) = 0u;
  *((_DWORD *)this + 280) = 0;
  *((_OWORD *)this + 69) = 0u;
  *((_DWORD *)this + 286) = 0;
  *(_OWORD *)((char *)this + 1128) = 0u;
  *((_DWORD *)this + 292) = 0;
  *((_OWORD *)this + 72) = 0u;
  *((_DWORD *)this + 298) = 0;
  *(_OWORD *)((char *)this + 1176) = 0u;
  *((_DWORD *)this + 304) = 0;
  *((_OWORD *)this + 75) = 0u;
  *((_DWORD *)this + 310) = 0;
  *(_OWORD *)((char *)this + 1224) = 0u;
  *((_DWORD *)this + 316) = 0;
  *((_OWORD *)this + 78) = 0u;
  *((_DWORD *)this + 322) = 0;
  *(_OWORD *)((char *)this + 1272) = 0u;
  *((_DWORD *)this + 328) = 0;
  *((_OWORD *)this + 81) = 0u;
  *((_DWORD *)this + 334) = 0;
  *(_OWORD *)((char *)this + 1320) = 0u;
  *(_QWORD *)this = &off_24D98FD70;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 79) = 0;
  *((_QWORD *)this + 134) = 0;
  *((_OWORD *)this + 84) = 0u;
  *((_OWORD *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 75) = 0;
  *(_OWORD *)((char *)this + 568) = 0u;
  *(_OWORD *)((char *)this + 584) = 0u;
  *(_OWORD *)((char *)this + 536) = 0u;
  *(_OWORD *)((char *)this + 552) = 0u;
  *(_OWORD *)((char *)this + 504) = 0u;
  *(_OWORD *)((char *)this + 520) = 0u;
  *(_OWORD *)((char *)this + 472) = 0u;
  *(_OWORD *)((char *)this + 488) = 0u;
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + 456) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *(_OWORD *)((char *)this + 392) = 0u;
  *((_QWORD *)this + 85) = 0;
  *(_OWORD *)((char *)this + 664) = 0u;
  *((_QWORD *)this + 106) = 0;
  *((_OWORD *)this + 51) = 0u;
  *((_OWORD *)this + 52) = 0u;
  *((_OWORD *)this + 49) = 0u;
  *((_OWORD *)this + 50) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((_QWORD *)this + 120) = 0;
  *((_OWORD *)this + 58) = 0u;
  *((_OWORD *)this + 59) = 0u;
  *((_OWORD *)this + 56) = 0u;
  *((_OWORD *)this + 57) = 0u;
  *((_OWORD *)this + 55) = 0u;
  *(_DWORD *)((char *)this + 1043) = 0;
  *((_DWORD *)this + 260) = 0;
  return result;
}

double awd::metrics::LocationGPSSessionStatistics::SharedCtor(awd::metrics::LocationGPSSessionStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_QWORD *)this + 79) = 0;
  *((_QWORD *)this + 134) = 0;
  result = 0.0;
  *((_OWORD *)this + 84) = 0u;
  *((_OWORD *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 75) = 0;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + 456) = 0u;
  *(_OWORD *)((char *)this + 472) = 0u;
  *(_OWORD *)((char *)this + 488) = 0u;
  *(_OWORD *)((char *)this + 504) = 0u;
  *(_OWORD *)((char *)this + 520) = 0u;
  *(_OWORD *)((char *)this + 536) = 0u;
  *(_OWORD *)((char *)this + 552) = 0u;
  *(_OWORD *)((char *)this + 568) = 0u;
  *(_OWORD *)((char *)this + 584) = 0u;
  *((_QWORD *)this + 85) = 0;
  *(_OWORD *)((char *)this + 664) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 49) = 0u;
  *((_OWORD *)this + 50) = 0u;
  *((_OWORD *)this + 51) = 0u;
  *((_OWORD *)this + 52) = 0u;
  *((_QWORD *)this + 106) = 0;
  *((_QWORD *)this + 120) = 0;
  *((_OWORD *)this + 58) = 0u;
  *((_OWORD *)this + 59) = 0u;
  *((_OWORD *)this + 56) = 0u;
  *((_OWORD *)this + 57) = 0u;
  *((_OWORD *)this + 55) = 0u;
  *(_DWORD *)((char *)this + 1043) = 0;
  *((_DWORD *)this + 260) = 0;
  return result;
}

awd::metrics::LocationGPSSessionStatistics *awd::metrics::LocationGPSSessionStatistics::LocationGPSSessionStatistics(awd::metrics::LocationGPSSessionStatistics *this, const awd::metrics::LocationGPSSessionStatistics *a2)
{
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_DWORD *)this + 24) = 0;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_DWORD *)this + 30) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_DWORD *)this + 36) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 0;
  *((_OWORD *)this + 11) = 0u;
  *((_DWORD *)this + 48) = 0;
  *(_OWORD *)((char *)this + 200) = 0u;
  *((_DWORD *)this + 54) = 0;
  *((_OWORD *)this + 14) = 0u;
  *((_DWORD *)this + 60) = 0;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((_DWORD *)this + 66) = 0;
  *((_DWORD *)this + 72) = 0;
  *((_OWORD *)this + 17) = 0u;
  *((_DWORD *)this + 78) = 0;
  *(_OWORD *)((char *)this + 296) = 0u;
  *((_DWORD *)this + 84) = 0;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 90) = 0;
  *(_OWORD *)((char *)this + 344) = 0u;
  *((_DWORD *)this + 96) = 0;
  *((_OWORD *)this + 23) = 0u;
  *((_DWORD *)this + 156) = 0;
  *((_OWORD *)this + 38) = 0u;
  *((_DWORD *)this + 164) = 0;
  *((_OWORD *)this + 40) = 0u;
  *((_DWORD *)this + 176) = 0;
  *((_OWORD *)this + 43) = 0u;
  *((_DWORD *)this + 182) = 0;
  *(_OWORD *)((char *)this + 712) = 0u;
  *((_DWORD *)this + 218) = 0;
  *(_OWORD *)((char *)this + 856) = 0u;
  *((_DWORD *)this + 246) = 0;
  *(_OWORD *)((char *)this + 968) = 0u;
  *((_DWORD *)this + 252) = 0;
  *((_OWORD *)this + 62) = 0u;
  *((_DWORD *)this + 258) = 0;
  *(_OWORD *)((char *)this + 1016) = 0u;
  *((_DWORD *)this + 266) = 0;
  *(_OWORD *)((char *)this + 1048) = 0u;
  *((_DWORD *)this + 274) = 0;
  *(_OWORD *)((char *)this + 1080) = 0u;
  *((_DWORD *)this + 280) = 0;
  *((_OWORD *)this + 69) = 0u;
  *((_DWORD *)this + 286) = 0;
  *(_OWORD *)((char *)this + 1128) = 0u;
  *((_DWORD *)this + 292) = 0;
  *((_OWORD *)this + 72) = 0u;
  *((_DWORD *)this + 298) = 0;
  *(_OWORD *)((char *)this + 1176) = 0u;
  *((_DWORD *)this + 304) = 0;
  *((_OWORD *)this + 75) = 0u;
  *((_DWORD *)this + 310) = 0;
  *(_OWORD *)((char *)this + 1224) = 0u;
  *((_DWORD *)this + 316) = 0;
  *((_OWORD *)this + 78) = 0u;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *(_OWORD *)((char *)this + 568) = 0u;
  *(_OWORD *)((char *)this + 584) = 0u;
  *(_OWORD *)((char *)this + 536) = 0u;
  *(_OWORD *)((char *)this + 552) = 0u;
  *(_OWORD *)((char *)this + 504) = 0u;
  *(_OWORD *)((char *)this + 520) = 0u;
  *(_OWORD *)((char *)this + 472) = 0u;
  *(_OWORD *)((char *)this + 488) = 0u;
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + 456) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 664) = 0u;
  *(_DWORD *)((char *)this + 1043) = 0;
  *((_DWORD *)this + 322) = 0;
  *(_OWORD *)((char *)this + 1272) = 0u;
  *((_DWORD *)this + 328) = 0;
  *((_OWORD *)this + 81) = 0u;
  *(_QWORD *)this = &off_24D98FD70;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 334) = 0;
  *(_OWORD *)((char *)this + 1320) = 0u;
  *((_QWORD *)this + 79) = 0;
  *((_QWORD *)this + 134) = 0;
  *((_OWORD *)this + 84) = 0u;
  *((_OWORD *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 75) = 0;
  *((_QWORD *)this + 85) = 0;
  *((_QWORD *)this + 106) = 0;
  *((_OWORD *)this + 51) = 0u;
  *((_OWORD *)this + 52) = 0u;
  *((_OWORD *)this + 49) = 0u;
  *((_OWORD *)this + 50) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((_QWORD *)this + 120) = 0;
  *((_OWORD *)this + 58) = 0u;
  *((_OWORD *)this + 59) = 0u;
  *((_OWORD *)this + 56) = 0u;
  *((_OWORD *)this + 57) = 0u;
  *((_OWORD *)this + 55) = 0u;
  *((_DWORD *)this + 260) = 0;
  awd::metrics::LocationGPSSessionStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A152F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t *a16, uint64_t *a17, uint64_t *a18, uint64_t *a19, uint64_t *a20,uint64_t *a21,uint64_t *a22,uint64_t *a23,uint64_t *a24,uint64_t *a25,uint64_t *a26,uint64_t *a27,uint64_t *a28,uint64_t *a29,uint64_t *a30)
{
  wireless_diagnostics::google::protobuf::MessageLite *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v42;

  v42 = v31;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal>::TypeHandler>(v36);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(v38);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(v34);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(v35);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(v33);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(v37);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(v42);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(v32);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(a15);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSOnOffState>::TypeHandler>(v39);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSForceOffReason>::TypeHandler>(a16);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ThermalLevelData>::TypeHandler>(a17);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChargerTypeData>::TypeHandler>(a18);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(a19);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(a20);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>(a21);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData>::TypeHandler>(a22);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData>::TypeHandler>(a23);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerStateData>::TypeHandler>(a24);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>(a25);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MountedStateData>::TypeHandler>(a26);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MovingStateData>::TypeHandler>(a27);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MotionActivityData>::TypeHandler>(a28);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(a29);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(a30);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(*(uint64_t **)(v40 - 160));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(*(uint64_t **)(v40 - 152));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(*(uint64_t **)(v40 - 144));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(*(uint64_t **)(v40 - 136));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(*(uint64_t **)(v40 - 128));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(*(uint64_t **)(v40 - 120));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData>::TypeHandler>(*(uint64_t **)(v40 - 112));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>(*(uint64_t **)(v40 - 104));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>(*(uint64_t **)(v40 - 96));
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v30);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics::MergeFrom(awd::metrics::LocationGPSSessionStatistics *this, const awd::metrics::LocationGPSSessionStatistics *a2)
{
  uint64_t v4;
  const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  const awd::metrics::LocationGPSSessionStatistics_MotionActivityData *v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  const awd::metrics::LocationGPSSessionStatistics_MovingStateData *v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  const awd::metrics::LocationGPSSessionStatistics_MountedStateData *v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  const awd::metrics::LocationGPSSessionStatistics_ChecksumData *v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  const awd::metrics::LocationGPSSessionStatistics_PowerStateData *v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  const awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  const awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  const awd::metrics::LocationGPSSessionStatistics_ChecksumData *v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  const awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  const awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  const awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  const awd::metrics::LocationGPSSessionStatistics_NSOnOffState *v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *v207;
  uint64_t v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *v215;
  uint64_t v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *v223;
  uint64_t v224;
  int v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *v231;
  uint64_t v232;
  int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *v239;
  uint64_t v240;
  int v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *v247;
  uint64_t v248;
  int v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *v255;
  uint64_t v256;
  int v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *v263;
  uint64_t v264;
  int v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  const awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *v271;
  uint64_t v272;
  int v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  unsigned int v278;
  int v279;
  int v280;
  uint64_t v281;
  unsigned int v282;
  uint64_t v283;
  int v284;
  char v285;
  uint64_t v286;
  const std::string *v287;
  std::string *v288;
  uint64_t v289;
  int v290;
  uint64_t v291;
  int v292;
  int v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  int v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char v319;
  char v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unsigned int v327;
  unsigned int v328;
  uint64_t v329;
  char v330;
  uint64_t v331;
  unsigned int v332;
  int v333;
  awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *v334;
  const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *v335;
  char v336;
  char v337;
  int v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  char v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  uint64_t v363;
  const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  _BYTE v374[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v374);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 56));
  if (*((int *)a2 + 16) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(*((_QWORD *)a2 + 7) + 8 * v4);
      v6 = *((_DWORD *)this + 17);
      v7 = *((int *)this + 16);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 18))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 56));
          v6 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
        *(_QWORD *)v9 = &off_24D98F488;
        *(_DWORD *)(v9 + 24) = 0;
        v10 = *((_QWORD *)this + 7);
        v11 = *((int *)this + 16);
        *((_DWORD *)this + 16) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 7);
        *((_DWORD *)this + 16) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 16));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 80));
  if (*((int *)a2 + 22) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(*((_QWORD *)a2 + 10) + 8 * v12);
      v14 = *((_DWORD *)this + 23);
      v15 = *((int *)this + 22);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 24))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 80));
          v14 = *((_DWORD *)this + 23);
        }
        *((_DWORD *)this + 23) = v14 + 1;
        v17 = operator new();
        *(_QWORD *)(v17 + 8) = 0;
        *(_QWORD *)(v17 + 16) = 0;
        *(_QWORD *)v17 = &off_24D98F488;
        *(_DWORD *)(v17 + 24) = 0;
        v18 = *((_QWORD *)this + 10);
        v19 = *((int *)this + 22);
        *((_DWORD *)this + 22) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 10);
        *((_DWORD *)this + 22) = v15 + 1;
        v17 = *(_QWORD *)(v16 + 8 * v15);
      }
      awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *)v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 22));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 104));
  if (*((int *)a2 + 28) >= 1)
  {
    v20 = 0;
    do
    {
      v21 = *(const awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData **)(*((_QWORD *)a2 + 13) + 8 * v20);
      v22 = *((_DWORD *)this + 29);
      v23 = *((int *)this + 28);
      if ((int)v23 >= v22)
      {
        if (v22 == *((_DWORD *)this + 30))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 104));
          v22 = *((_DWORD *)this + 29);
        }
        *((_DWORD *)this + 29) = v22 + 1;
        v25 = operator new();
        *(_QWORD *)(v25 + 8) = 0;
        *(_QWORD *)(v25 + 16) = 0;
        *(_QWORD *)v25 = &off_24D98F668;
        *(_DWORD *)(v25 + 24) = 0;
        v26 = *((_QWORD *)this + 13);
        v27 = *((int *)this + 28);
        *((_DWORD *)this + 28) = v27 + 1;
        *(_QWORD *)(v26 + 8 * v27) = v25;
      }
      else
      {
        v24 = *((_QWORD *)this + 13);
        *((_DWORD *)this + 28) = v23 + 1;
        v25 = *(_QWORD *)(v24 + 8 * v23);
      }
      awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *)v25, v21);
      ++v20;
    }
    while (v20 < *((int *)a2 + 28));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 128));
  if (*((int *)a2 + 34) >= 1)
  {
    v28 = 0;
    do
    {
      v29 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)a2 + 16) + 8 * v28);
      v30 = *((_DWORD *)this + 35);
      v31 = *((int *)this + 34);
      if ((int)v31 >= v30)
      {
        if (v30 == *((_DWORD *)this + 36))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 128));
          v30 = *((_DWORD *)this + 35);
        }
        *((_DWORD *)this + 35) = v30 + 1;
        v33 = operator new();
        *(_QWORD *)(v33 + 8) = 0;
        *(_QWORD *)(v33 + 16) = 0;
        *(_QWORD *)v33 = &off_24D98F500;
        *(_DWORD *)(v33 + 24) = 0;
        v34 = *((_QWORD *)this + 16);
        v35 = *((int *)this + 34);
        *((_DWORD *)this + 34) = v35 + 1;
        *(_QWORD *)(v34 + 8 * v35) = v33;
      }
      else
      {
        v32 = *((_QWORD *)this + 16);
        *((_DWORD *)this + 34) = v31 + 1;
        v33 = *(_QWORD *)(v32 + 8 * v31);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)v33, v29);
      ++v28;
    }
    while (v28 < *((int *)a2 + 34));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 152));
  if (*((int *)a2 + 40) >= 1)
  {
    v36 = 0;
    do
    {
      v37 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)a2 + 19) + 8 * v36);
      v38 = *((_DWORD *)this + 41);
      v39 = *((int *)this + 40);
      if ((int)v39 >= v38)
      {
        if (v38 == *((_DWORD *)this + 42))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 152));
          v38 = *((_DWORD *)this + 41);
        }
        *((_DWORD *)this + 41) = v38 + 1;
        v41 = operator new();
        *(_QWORD *)(v41 + 8) = 0;
        *(_QWORD *)(v41 + 16) = 0;
        *(_QWORD *)v41 = &off_24D98F500;
        *(_DWORD *)(v41 + 24) = 0;
        v42 = *((_QWORD *)this + 19);
        v43 = *((int *)this + 40);
        *((_DWORD *)this + 40) = v43 + 1;
        *(_QWORD *)(v42 + 8 * v43) = v41;
      }
      else
      {
        v40 = *((_QWORD *)this + 19);
        *((_DWORD *)this + 40) = v39 + 1;
        v41 = *(_QWORD *)(v40 + 8 * v39);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)v41, v37);
      ++v36;
    }
    while (v36 < *((int *)a2 + 40));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 176));
  if (*((int *)a2 + 46) >= 1)
  {
    v44 = 0;
    do
    {
      v45 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)a2 + 22) + 8 * v44);
      v46 = *((_DWORD *)this + 47);
      v47 = *((int *)this + 46);
      if ((int)v47 >= v46)
      {
        if (v46 == *((_DWORD *)this + 48))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 176));
          v46 = *((_DWORD *)this + 47);
        }
        *((_DWORD *)this + 47) = v46 + 1;
        v49 = operator new();
        *(_QWORD *)(v49 + 8) = 0;
        *(_QWORD *)(v49 + 16) = 0;
        *(_QWORD *)v49 = &off_24D98F500;
        *(_DWORD *)(v49 + 24) = 0;
        v50 = *((_QWORD *)this + 22);
        v51 = *((int *)this + 46);
        *((_DWORD *)this + 46) = v51 + 1;
        *(_QWORD *)(v50 + 8 * v51) = v49;
      }
      else
      {
        v48 = *((_QWORD *)this + 22);
        *((_DWORD *)this + 46) = v47 + 1;
        v49 = *(_QWORD *)(v48 + 8 * v47);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)v49, v45);
      ++v44;
    }
    while (v44 < *((int *)a2 + 46));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 200));
  if (*((int *)a2 + 52) >= 1)
  {
    v52 = 0;
    do
    {
      v53 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)a2 + 25) + 8 * v52);
      v54 = *((_DWORD *)this + 53);
      v55 = *((int *)this + 52);
      if ((int)v55 >= v54)
      {
        if (v54 == *((_DWORD *)this + 54))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 200));
          v54 = *((_DWORD *)this + 53);
        }
        *((_DWORD *)this + 53) = v54 + 1;
        v57 = operator new();
        *(_QWORD *)(v57 + 8) = 0;
        *(_QWORD *)(v57 + 16) = 0;
        *(_QWORD *)v57 = &off_24D98F500;
        *(_DWORD *)(v57 + 24) = 0;
        v58 = *((_QWORD *)this + 25);
        v59 = *((int *)this + 52);
        *((_DWORD *)this + 52) = v59 + 1;
        *(_QWORD *)(v58 + 8 * v59) = v57;
      }
      else
      {
        v56 = *((_QWORD *)this + 25);
        *((_DWORD *)this + 52) = v55 + 1;
        v57 = *(_QWORD *)(v56 + 8 * v55);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)v57, v53);
      ++v52;
    }
    while (v52 < *((int *)a2 + 52));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 224));
  if (*((int *)a2 + 58) >= 1)
  {
    v60 = 0;
    do
    {
      v61 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)a2 + 28) + 8 * v60);
      v62 = *((_DWORD *)this + 59);
      v63 = *((int *)this + 58);
      if ((int)v63 >= v62)
      {
        if (v62 == *((_DWORD *)this + 60))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 224));
          v62 = *((_DWORD *)this + 59);
        }
        *((_DWORD *)this + 59) = v62 + 1;
        v65 = operator new();
        *(_QWORD *)(v65 + 8) = 0;
        *(_QWORD *)(v65 + 16) = 0;
        *(_QWORD *)v65 = &off_24D98F578;
        *(_DWORD *)(v65 + 24) = 0;
        v66 = *((_QWORD *)this + 28);
        v67 = *((int *)this + 58);
        *((_DWORD *)this + 58) = v67 + 1;
        *(_QWORD *)(v66 + 8 * v67) = v65;
      }
      else
      {
        v64 = *((_QWORD *)this + 28);
        *((_DWORD *)this + 58) = v63 + 1;
        v65 = *(_QWORD *)(v64 + 8 * v63);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)v65, v61);
      ++v60;
    }
    while (v60 < *((int *)a2 + 58));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 248));
  if (*((int *)a2 + 64) >= 1)
  {
    v68 = 0;
    do
    {
      v69 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)a2 + 31) + 8 * v68);
      v70 = *((int *)this + 64);
      v71 = *((_DWORD *)this + 65);
      if ((int)v70 >= v71)
      {
        if (v71 == *((_DWORD *)this + 66))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 248));
          v71 = *((_DWORD *)this + 65);
        }
        *((_DWORD *)this + 65) = v71 + 1;
        v73 = operator new();
        *(_QWORD *)(v73 + 8) = 0;
        *(_QWORD *)(v73 + 16) = 0;
        *(_QWORD *)v73 = &off_24D98F578;
        *(_DWORD *)(v73 + 24) = 0;
        v74 = *((_QWORD *)this + 31);
        v75 = *((int *)this + 64);
        *((_DWORD *)this + 64) = v75 + 1;
        *(_QWORD *)(v74 + 8 * v75) = v73;
      }
      else
      {
        v72 = *((_QWORD *)this + 31);
        *((_DWORD *)this + 64) = v70 + 1;
        v73 = *(_QWORD *)(v72 + 8 * v70);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)v73, v69);
      ++v68;
    }
    while (v68 < *((int *)a2 + 64));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 272));
  if (*((int *)a2 + 70) >= 1)
  {
    v76 = 0;
    do
    {
      v77 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)a2 + 34) + 8 * v76);
      v78 = *((int *)this + 70);
      v79 = *((_DWORD *)this + 71);
      if ((int)v78 >= v79)
      {
        if (v79 == *((_DWORD *)this + 72))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 272));
          v79 = *((_DWORD *)this + 71);
        }
        *((_DWORD *)this + 71) = v79 + 1;
        v81 = operator new();
        *(_QWORD *)(v81 + 8) = 0;
        *(_QWORD *)(v81 + 16) = 0;
        *(_QWORD *)v81 = &off_24D98F578;
        *(_DWORD *)(v81 + 24) = 0;
        v82 = *((_QWORD *)this + 34);
        v83 = *((int *)this + 70);
        *((_DWORD *)this + 70) = v83 + 1;
        *(_QWORD *)(v82 + 8 * v83) = v81;
      }
      else
      {
        v80 = *((_QWORD *)this + 34);
        *((_DWORD *)this + 70) = v78 + 1;
        v81 = *(_QWORD *)(v80 + 8 * v78);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)v81, v77);
      ++v76;
    }
    while (v76 < *((int *)a2 + 70));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 296));
  if (*((int *)a2 + 76) >= 1)
  {
    v84 = 0;
    do
    {
      v85 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)a2 + 37) + 8 * v84);
      v86 = *((int *)this + 76);
      v87 = *((_DWORD *)this + 77);
      if ((int)v86 >= v87)
      {
        if (v87 == *((_DWORD *)this + 78))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 296));
          v87 = *((_DWORD *)this + 77);
        }
        *((_DWORD *)this + 77) = v87 + 1;
        v89 = operator new();
        *(_QWORD *)(v89 + 8) = 0;
        *(_QWORD *)(v89 + 16) = 0;
        *(_QWORD *)v89 = &off_24D98F578;
        *(_DWORD *)(v89 + 24) = 0;
        v90 = *((_QWORD *)this + 37);
        v91 = *((int *)this + 76);
        *((_DWORD *)this + 76) = v91 + 1;
        *(_QWORD *)(v90 + 8 * v91) = v89;
      }
      else
      {
        v88 = *((_QWORD *)this + 37);
        *((_DWORD *)this + 76) = v86 + 1;
        v89 = *(_QWORD *)(v88 + 8 * v86);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)v89, v85);
      ++v84;
    }
    while (v84 < *((int *)a2 + 76));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 320));
  if (*((int *)a2 + 82) >= 1)
  {
    v92 = 0;
    do
    {
      v93 = *(const awd::metrics::LocationGPSSessionStatistics_MotionActivityData **)(*((_QWORD *)a2 + 40) + 8 * v92);
      v94 = *((int *)this + 82);
      v95 = *((_DWORD *)this + 83);
      if ((int)v94 >= v95)
      {
        if (v95 == *((_DWORD *)this + 84))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 320));
          v95 = *((_DWORD *)this + 83);
        }
        *((_DWORD *)this + 83) = v95 + 1;
        v97 = operator new();
        *(_QWORD *)(v97 + 8) = 0;
        *(_QWORD *)(v97 + 16) = 0;
        *(_QWORD *)v97 = &off_24D98F5F0;
        *(_DWORD *)(v97 + 24) = 0;
        v98 = *((_QWORD *)this + 40);
        v99 = *((int *)this + 82);
        *((_DWORD *)this + 82) = v99 + 1;
        *(_QWORD *)(v98 + 8 * v99) = v97;
      }
      else
      {
        v96 = *((_QWORD *)this + 40);
        *((_DWORD *)this + 82) = v94 + 1;
        v97 = *(_QWORD *)(v96 + 8 * v94);
      }
      awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_MotionActivityData *)v97, v93);
      ++v92;
    }
    while (v92 < *((int *)a2 + 82));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 344));
  if (*((int *)a2 + 88) >= 1)
  {
    v100 = 0;
    do
    {
      v101 = *(const awd::metrics::LocationGPSSessionStatistics_MovingStateData **)(*((_QWORD *)a2 + 43) + 8 * v100);
      v102 = *((int *)this + 88);
      v103 = *((_DWORD *)this + 89);
      if ((int)v102 >= v103)
      {
        if (v103 == *((_DWORD *)this + 90))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 344));
          v103 = *((_DWORD *)this + 89);
        }
        *((_DWORD *)this + 89) = v103 + 1;
        v105 = operator new();
        *(_QWORD *)(v105 + 8) = 0;
        *(_QWORD *)(v105 + 16) = 0;
        *(_QWORD *)v105 = &off_24D98F758;
        *(_DWORD *)(v105 + 24) = 0;
        v106 = *((_QWORD *)this + 43);
        v107 = *((int *)this + 88);
        *((_DWORD *)this + 88) = v107 + 1;
        *(_QWORD *)(v106 + 8 * v107) = v105;
      }
      else
      {
        v104 = *((_QWORD *)this + 43);
        *((_DWORD *)this + 88) = v102 + 1;
        v105 = *(_QWORD *)(v104 + 8 * v102);
      }
      awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_MovingStateData *)v105, v101);
      ++v100;
    }
    while (v100 < *((int *)a2 + 88));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 368));
  if (*((int *)a2 + 94) >= 1)
  {
    v108 = 0;
    do
    {
      v109 = *(const awd::metrics::LocationGPSSessionStatistics_MountedStateData **)(*((_QWORD *)a2 + 46) + 8 * v108);
      v110 = *((int *)this + 94);
      v111 = *((_DWORD *)this + 95);
      if ((int)v110 >= v111)
      {
        if (v111 == *((_DWORD *)this + 96))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 368));
          v111 = *((_DWORD *)this + 95);
        }
        *((_DWORD *)this + 95) = v111 + 1;
        v113 = operator new();
        *(_QWORD *)(v113 + 8) = 0;
        *(_QWORD *)(v113 + 16) = 0;
        *(_QWORD *)v113 = &off_24D98F6E0;
        *(_DWORD *)(v113 + 24) = 0;
        v114 = *((_QWORD *)this + 46);
        v115 = *((int *)this + 94);
        *((_DWORD *)this + 94) = v115 + 1;
        *(_QWORD *)(v114 + 8 * v115) = v113;
      }
      else
      {
        v112 = *((_QWORD *)this + 46);
        *((_DWORD *)this + 94) = v110 + 1;
        v113 = *(_QWORD *)(v112 + 8 * v110);
      }
      awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_MountedStateData *)v113, v109);
      ++v108;
    }
    while (v108 < *((int *)a2 + 94));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 608));
  if (*((int *)a2 + 154) >= 1)
  {
    v116 = 0;
    v117 = MEMORY[0x24BEDD958];
    do
    {
      v118 = *(const awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(*((_QWORD *)a2 + 76) + 8 * v116);
      v119 = *((int *)this + 154);
      v120 = *((_DWORD *)this + 155);
      if ((int)v119 >= v120)
      {
        if (v120 == *((_DWORD *)this + 156))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 608));
          v120 = *((_DWORD *)this + 155);
        }
        *((_DWORD *)this + 155) = v120 + 1;
        v122 = (awd::metrics::LocationGPSSessionStatistics_ChecksumData *)operator new();
        *(_QWORD *)v122 = &off_24D98F848;
        *((_QWORD *)v122 + 1) = v117;
        *((_QWORD *)v122 + 2) = 0;
        v123 = *((_QWORD *)this + 76);
        v124 = *((int *)this + 154);
        *((_DWORD *)this + 154) = v124 + 1;
        *(_QWORD *)(v123 + 8 * v124) = v122;
      }
      else
      {
        v121 = *((_QWORD *)this + 76);
        *((_DWORD *)this + 154) = v119 + 1;
        v122 = *(awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(v121 + 8 * v119);
      }
      awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(v122, v118);
      ++v116;
    }
    while (v116 < *((int *)a2 + 154));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 640));
  if (*((int *)a2 + 162) >= 1)
  {
    v125 = 0;
    do
    {
      v126 = *(const awd::metrics::LocationGPSSessionStatistics_PowerStateData **)(*((_QWORD *)a2 + 80) + 8 * v125);
      v127 = *((int *)this + 162);
      v128 = *((_DWORD *)this + 163);
      if ((int)v127 >= v128)
      {
        if (v128 == *((_DWORD *)this + 164))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 640));
          v128 = *((_DWORD *)this + 163);
        }
        *((_DWORD *)this + 163) = v128 + 1;
        v130 = operator new();
        *(_QWORD *)(v130 + 8) = 0;
        *(_QWORD *)(v130 + 16) = 0;
        *(_QWORD *)v130 = &off_24D98F7D0;
        *(_DWORD *)(v130 + 24) = 0;
        v131 = *((_QWORD *)this + 80);
        v132 = *((int *)this + 162);
        *((_DWORD *)this + 162) = v132 + 1;
        *(_QWORD *)(v131 + 8 * v132) = v130;
      }
      else
      {
        v129 = *((_QWORD *)this + 80);
        *((_DWORD *)this + 162) = v127 + 1;
        v130 = *(_QWORD *)(v129 + 8 * v127);
      }
      awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_PowerStateData *)v130, v126);
      ++v125;
    }
    while (v125 < *((int *)a2 + 162));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 688));
  if (*((int *)a2 + 174) >= 1)
  {
    v133 = 0;
    do
    {
      v134 = *(const awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData **)(*((_QWORD *)a2 + 86) + 8 * v133);
      v135 = *((int *)this + 174);
      v136 = *((_DWORD *)this + 175);
      if ((int)v135 >= v136)
      {
        if (v136 == *((_DWORD *)this + 176))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 688));
          v136 = *((_DWORD *)this + 175);
        }
        *((_DWORD *)this + 175) = v136 + 1;
        v138 = operator new();
        *(_QWORD *)(v138 + 8) = 0;
        *(_QWORD *)(v138 + 16) = 0;
        *(_QWORD *)v138 = &off_24D98F8C0;
        *(_DWORD *)(v138 + 24) = 0;
        v139 = *((_QWORD *)this + 86);
        v140 = *((int *)this + 174);
        *((_DWORD *)this + 174) = v140 + 1;
        *(_QWORD *)(v139 + 8 * v140) = v138;
      }
      else
      {
        v137 = *((_QWORD *)this + 86);
        *((_DWORD *)this + 174) = v135 + 1;
        v138 = *(_QWORD *)(v137 + 8 * v135);
      }
      awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *)v138, v134);
      ++v133;
    }
    while (v133 < *((int *)a2 + 174));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 712));
  if (*((int *)a2 + 180) >= 1)
  {
    v141 = 0;
    do
    {
      v142 = *(const awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData **)(*((_QWORD *)a2 + 89) + 8 * v141);
      v143 = *((int *)this + 180);
      v144 = *((_DWORD *)this + 181);
      if ((int)v143 >= v144)
      {
        if (v144 == *((_DWORD *)this + 182))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 712));
          v144 = *((_DWORD *)this + 181);
        }
        *((_DWORD *)this + 181) = v144 + 1;
        v146 = operator new();
        *(_QWORD *)(v146 + 8) = 0;
        *(_QWORD *)(v146 + 16) = 0;
        *(_QWORD *)v146 = &off_24D98F938;
        *(_DWORD *)(v146 + 24) = 0;
        v147 = *((_QWORD *)this + 89);
        v148 = *((int *)this + 180);
        *((_DWORD *)this + 180) = v148 + 1;
        *(_QWORD *)(v147 + 8 * v148) = v146;
      }
      else
      {
        v145 = *((_QWORD *)this + 89);
        *((_DWORD *)this + 180) = v143 + 1;
        v146 = *(_QWORD *)(v145 + 8 * v143);
      }
      awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *)v146, v142);
      ++v141;
    }
    while (v141 < *((int *)a2 + 180));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 856));
  if (*((int *)a2 + 216) >= 1)
  {
    v149 = 0;
    v150 = MEMORY[0x24BEDD958];
    do
    {
      v151 = *(const awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(*((_QWORD *)a2 + 107) + 8 * v149);
      v152 = *((int *)this + 216);
      v153 = *((_DWORD *)this + 217);
      if ((int)v152 >= v153)
      {
        if (v153 == *((_DWORD *)this + 218))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 856));
          v153 = *((_DWORD *)this + 217);
        }
        *((_DWORD *)this + 217) = v153 + 1;
        v155 = (awd::metrics::LocationGPSSessionStatistics_ChecksumData *)operator new();
        *(_QWORD *)v155 = &off_24D98F848;
        *((_QWORD *)v155 + 1) = v150;
        *((_QWORD *)v155 + 2) = 0;
        v156 = *((_QWORD *)this + 107);
        v157 = *((int *)this + 216);
        *((_DWORD *)this + 216) = v157 + 1;
        *(_QWORD *)(v156 + 8 * v157) = v155;
      }
      else
      {
        v154 = *((_QWORD *)this + 107);
        *((_DWORD *)this + 216) = v152 + 1;
        v155 = *(awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(v154 + 8 * v152);
      }
      awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(v155, v151);
      ++v149;
    }
    while (v149 < *((int *)a2 + 216));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 968));
  if (*((int *)a2 + 244) >= 1)
  {
    v158 = 0;
    do
    {
      v159 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)a2 + 121)
                                                                                        + 8 * v158);
      v160 = *((int *)this + 244);
      v161 = *((_DWORD *)this + 245);
      if ((int)v160 >= v161)
      {
        if (v161 == *((_DWORD *)this + 246))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 968));
          v161 = *((_DWORD *)this + 245);
        }
        *((_DWORD *)this + 245) = v161 + 1;
        v163 = operator new();
        *(_QWORD *)(v163 + 8) = 0;
        *(_QWORD *)(v163 + 16) = 0;
        *(_QWORD *)v163 = &off_24D98F500;
        *(_DWORD *)(v163 + 24) = 0;
        v164 = *((_QWORD *)this + 121);
        v165 = *((int *)this + 244);
        *((_DWORD *)this + 244) = v165 + 1;
        *(_QWORD *)(v164 + 8 * v165) = v163;
      }
      else
      {
        v162 = *((_QWORD *)this + 121);
        *((_DWORD *)this + 244) = v160 + 1;
        v163 = *(_QWORD *)(v162 + 8 * v160);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)v163, v159);
      ++v158;
    }
    while (v158 < *((int *)a2 + 244));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 992));
  if (*((int *)a2 + 250) >= 1)
  {
    v166 = 0;
    do
    {
      v167 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)a2 + 124)
                                                                                          + 8 * v166);
      v168 = *((int *)this + 250);
      v169 = *((_DWORD *)this + 251);
      if ((int)v168 >= v169)
      {
        if (v169 == *((_DWORD *)this + 252))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 992));
          v169 = *((_DWORD *)this + 251);
        }
        *((_DWORD *)this + 251) = v169 + 1;
        v171 = operator new();
        *(_QWORD *)(v171 + 8) = 0;
        *(_QWORD *)(v171 + 16) = 0;
        *(_QWORD *)v171 = &off_24D98F578;
        *(_DWORD *)(v171 + 24) = 0;
        v172 = *((_QWORD *)this + 124);
        v173 = *((int *)this + 250);
        *((_DWORD *)this + 250) = v173 + 1;
        *(_QWORD *)(v172 + 8 * v173) = v171;
      }
      else
      {
        v170 = *((_QWORD *)this + 124);
        *((_DWORD *)this + 250) = v168 + 1;
        v171 = *(_QWORD *)(v170 + 8 * v168);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)v171, v167);
      ++v166;
    }
    while (v166 < *((int *)a2 + 250));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1016));
  if (*((int *)a2 + 256) >= 1)
  {
    v174 = 0;
    do
    {
      v175 = *(const awd::metrics::LocationGPSSessionStatistics_ChargerTypeData **)(*((_QWORD *)a2 + 127) + 8 * v174);
      v176 = *((int *)this + 256);
      v177 = *((_DWORD *)this + 257);
      if ((int)v176 >= v177)
      {
        if (v177 == *((_DWORD *)this + 258))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1016));
          v177 = *((_DWORD *)this + 257);
        }
        *((_DWORD *)this + 257) = v177 + 1;
        v179 = operator new();
        *(_QWORD *)(v179 + 8) = 0;
        *(_QWORD *)(v179 + 16) = 0;
        *(_QWORD *)v179 = &off_24D98F9B0;
        *(_DWORD *)(v179 + 24) = 0;
        v180 = *((_QWORD *)this + 127);
        v181 = *((int *)this + 256);
        *((_DWORD *)this + 256) = v181 + 1;
        *(_QWORD *)(v180 + 8 * v181) = v179;
      }
      else
      {
        v178 = *((_QWORD *)this + 127);
        *((_DWORD *)this + 256) = v176 + 1;
        v179 = *(_QWORD *)(v178 + 8 * v176);
      }
      awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *)v179, v175);
      ++v174;
    }
    while (v174 < *((int *)a2 + 256));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1048));
  if (*((int *)a2 + 264) >= 1)
  {
    v182 = 0;
    do
    {
      v183 = *(const awd::metrics::LocationGPSSessionStatistics_ThermalLevelData **)(*((_QWORD *)a2 + 131) + 8 * v182);
      v184 = *((int *)this + 264);
      v185 = *((_DWORD *)this + 265);
      if ((int)v184 >= v185)
      {
        if (v185 == *((_DWORD *)this + 266))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1048));
          v185 = *((_DWORD *)this + 265);
        }
        *((_DWORD *)this + 265) = v185 + 1;
        v187 = operator new();
        *(_QWORD *)(v187 + 8) = 0;
        *(_QWORD *)(v187 + 16) = 0;
        *(_QWORD *)v187 = &off_24D98FA28;
        *(_DWORD *)(v187 + 24) = 0;
        v188 = *((_QWORD *)this + 131);
        v189 = *((int *)this + 264);
        *((_DWORD *)this + 264) = v189 + 1;
        *(_QWORD *)(v188 + 8 * v189) = v187;
      }
      else
      {
        v186 = *((_QWORD *)this + 131);
        *((_DWORD *)this + 264) = v184 + 1;
        v187 = *(_QWORD *)(v186 + 8 * v184);
      }
      awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *)v187, v183);
      ++v182;
    }
    while (v182 < *((int *)a2 + 264));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1080));
  if (*((int *)a2 + 272) >= 1)
  {
    v190 = 0;
    do
    {
      v191 = *(const awd::metrics::LocationGPSSessionStatistics_NSForceOffReason **)(*((_QWORD *)a2 + 135) + 8 * v190);
      v192 = *((int *)this + 272);
      v193 = *((_DWORD *)this + 273);
      if ((int)v192 >= v193)
      {
        if (v193 == *((_DWORD *)this + 274))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1080));
          v193 = *((_DWORD *)this + 273);
        }
        *((_DWORD *)this + 273) = v193 + 1;
        v195 = operator new();
        *(_QWORD *)(v195 + 8) = 0;
        *(_QWORD *)(v195 + 16) = 0;
        *(_QWORD *)v195 = &off_24D98FB90;
        *(_DWORD *)(v195 + 24) = 0;
        v196 = *((_QWORD *)this + 135);
        v197 = *((int *)this + 272);
        *((_DWORD *)this + 272) = v197 + 1;
        *(_QWORD *)(v196 + 8 * v197) = v195;
      }
      else
      {
        v194 = *((_QWORD *)this + 135);
        *((_DWORD *)this + 272) = v192 + 1;
        v195 = *(_QWORD *)(v194 + 8 * v192);
      }
      awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergeFrom((awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *)v195, v191);
      ++v190;
    }
    while (v190 < *((int *)a2 + 272));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1104));
  if (*((int *)a2 + 278) >= 1)
  {
    v198 = 0;
    do
    {
      v199 = *(const awd::metrics::LocationGPSSessionStatistics_NSOnOffState **)(*((_QWORD *)a2 + 138) + 8 * v198);
      v200 = *((int *)this + 278);
      v201 = *((_DWORD *)this + 279);
      if ((int)v200 >= v201)
      {
        if (v201 == *((_DWORD *)this + 280))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1104));
          v201 = *((_DWORD *)this + 279);
        }
        *((_DWORD *)this + 279) = v201 + 1;
        v203 = operator new();
        *(_QWORD *)(v203 + 8) = 0;
        *(_QWORD *)(v203 + 16) = 0;
        *(_QWORD *)v203 = &off_24D98FC08;
        *(_DWORD *)(v203 + 24) = 0;
        v204 = *((_QWORD *)this + 138);
        v205 = *((int *)this + 278);
        *((_DWORD *)this + 278) = v205 + 1;
        *(_QWORD *)(v204 + 8 * v205) = v203;
      }
      else
      {
        v202 = *((_QWORD *)this + 138);
        *((_DWORD *)this + 278) = v200 + 1;
        v203 = *(_QWORD *)(v202 + 8 * v200);
      }
      awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergeFrom((awd::metrics::LocationGPSSessionStatistics_NSOnOffState *)v203, v199);
      ++v198;
    }
    while (v198 < *((int *)a2 + 278));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1128));
  if (*((int *)a2 + 284) >= 1)
  {
    v206 = 0;
    do
    {
      v207 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)a2 + 141)
                                                                                        + 8 * v206);
      v208 = *((int *)this + 284);
      v209 = *((_DWORD *)this + 285);
      if ((int)v208 >= v209)
      {
        if (v209 == *((_DWORD *)this + 286))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1128));
          v209 = *((_DWORD *)this + 285);
        }
        *((_DWORD *)this + 285) = v209 + 1;
        v211 = operator new();
        *(_QWORD *)(v211 + 8) = 0;
        *(_QWORD *)(v211 + 16) = 0;
        *(_QWORD *)v211 = &off_24D98F500;
        *(_DWORD *)(v211 + 24) = 0;
        v212 = *((_QWORD *)this + 141);
        v213 = *((int *)this + 284);
        *((_DWORD *)this + 284) = v213 + 1;
        *(_QWORD *)(v212 + 8 * v213) = v211;
      }
      else
      {
        v210 = *((_QWORD *)this + 141);
        *((_DWORD *)this + 284) = v208 + 1;
        v211 = *(_QWORD *)(v210 + 8 * v208);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)v211, v207);
      ++v206;
    }
    while (v206 < *((int *)a2 + 284));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1152));
  if (*((int *)a2 + 290) >= 1)
  {
    v214 = 0;
    do
    {
      v215 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)a2 + 144)
                                                                                        + 8 * v214);
      v216 = *((int *)this + 290);
      v217 = *((_DWORD *)this + 291);
      if ((int)v216 >= v217)
      {
        if (v217 == *((_DWORD *)this + 292))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1152));
          v217 = *((_DWORD *)this + 291);
        }
        *((_DWORD *)this + 291) = v217 + 1;
        v219 = operator new();
        *(_QWORD *)(v219 + 8) = 0;
        *(_QWORD *)(v219 + 16) = 0;
        *(_QWORD *)v219 = &off_24D98F500;
        *(_DWORD *)(v219 + 24) = 0;
        v220 = *((_QWORD *)this + 144);
        v221 = *((int *)this + 290);
        *((_DWORD *)this + 290) = v221 + 1;
        *(_QWORD *)(v220 + 8 * v221) = v219;
      }
      else
      {
        v218 = *((_QWORD *)this + 144);
        *((_DWORD *)this + 290) = v216 + 1;
        v219 = *(_QWORD *)(v218 + 8 * v216);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)v219, v215);
      ++v214;
    }
    while (v214 < *((int *)a2 + 290));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1176));
  if (*((int *)a2 + 296) >= 1)
  {
    v222 = 0;
    do
    {
      v223 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)a2 + 147)
                                                                                        + 8 * v222);
      v224 = *((int *)this + 296);
      v225 = *((_DWORD *)this + 297);
      if ((int)v224 >= v225)
      {
        if (v225 == *((_DWORD *)this + 298))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1176));
          v225 = *((_DWORD *)this + 297);
        }
        *((_DWORD *)this + 297) = v225 + 1;
        v227 = operator new();
        *(_QWORD *)(v227 + 8) = 0;
        *(_QWORD *)(v227 + 16) = 0;
        *(_QWORD *)v227 = &off_24D98F500;
        *(_DWORD *)(v227 + 24) = 0;
        v228 = *((_QWORD *)this + 147);
        v229 = *((int *)this + 296);
        *((_DWORD *)this + 296) = v229 + 1;
        *(_QWORD *)(v228 + 8 * v229) = v227;
      }
      else
      {
        v226 = *((_QWORD *)this + 147);
        *((_DWORD *)this + 296) = v224 + 1;
        v227 = *(_QWORD *)(v226 + 8 * v224);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)v227, v223);
      ++v222;
    }
    while (v222 < *((int *)a2 + 296));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1200));
  if (*((int *)a2 + 302) >= 1)
  {
    v230 = 0;
    do
    {
      v231 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)a2 + 150)
                                                                                        + 8 * v230);
      v232 = *((int *)this + 302);
      v233 = *((_DWORD *)this + 303);
      if ((int)v232 >= v233)
      {
        if (v233 == *((_DWORD *)this + 304))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1200));
          v233 = *((_DWORD *)this + 303);
        }
        *((_DWORD *)this + 303) = v233 + 1;
        v235 = operator new();
        *(_QWORD *)(v235 + 8) = 0;
        *(_QWORD *)(v235 + 16) = 0;
        *(_QWORD *)v235 = &off_24D98F500;
        *(_DWORD *)(v235 + 24) = 0;
        v236 = *((_QWORD *)this + 150);
        v237 = *((int *)this + 302);
        *((_DWORD *)this + 302) = v237 + 1;
        *(_QWORD *)(v236 + 8 * v237) = v235;
      }
      else
      {
        v234 = *((_QWORD *)this + 150);
        *((_DWORD *)this + 302) = v232 + 1;
        v235 = *(_QWORD *)(v234 + 8 * v232);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)v235, v231);
      ++v230;
    }
    while (v230 < *((int *)a2 + 302));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1224));
  if (*((int *)a2 + 308) >= 1)
  {
    v238 = 0;
    do
    {
      v239 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)a2 + 153)
                                                                                          + 8 * v238);
      v240 = *((int *)this + 308);
      v241 = *((_DWORD *)this + 309);
      if ((int)v240 >= v241)
      {
        if (v241 == *((_DWORD *)this + 310))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1224));
          v241 = *((_DWORD *)this + 309);
        }
        *((_DWORD *)this + 309) = v241 + 1;
        v243 = operator new();
        *(_QWORD *)(v243 + 8) = 0;
        *(_QWORD *)(v243 + 16) = 0;
        *(_QWORD *)v243 = &off_24D98F578;
        *(_DWORD *)(v243 + 24) = 0;
        v244 = *((_QWORD *)this + 153);
        v245 = *((int *)this + 308);
        *((_DWORD *)this + 308) = v245 + 1;
        *(_QWORD *)(v244 + 8 * v245) = v243;
      }
      else
      {
        v242 = *((_QWORD *)this + 153);
        *((_DWORD *)this + 308) = v240 + 1;
        v243 = *(_QWORD *)(v242 + 8 * v240);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)v243, v239);
      ++v238;
    }
    while (v238 < *((int *)a2 + 308));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1248));
  if (*((int *)a2 + 314) >= 1)
  {
    v246 = 0;
    do
    {
      v247 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)a2 + 156)
                                                                                          + 8 * v246);
      v248 = *((int *)this + 314);
      v249 = *((_DWORD *)this + 315);
      if ((int)v248 >= v249)
      {
        if (v249 == *((_DWORD *)this + 316))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1248));
          v249 = *((_DWORD *)this + 315);
        }
        *((_DWORD *)this + 315) = v249 + 1;
        v251 = operator new();
        *(_QWORD *)(v251 + 8) = 0;
        *(_QWORD *)(v251 + 16) = 0;
        *(_QWORD *)v251 = &off_24D98F578;
        *(_DWORD *)(v251 + 24) = 0;
        v252 = *((_QWORD *)this + 156);
        v253 = *((int *)this + 314);
        *((_DWORD *)this + 314) = v253 + 1;
        *(_QWORD *)(v252 + 8 * v253) = v251;
      }
      else
      {
        v250 = *((_QWORD *)this + 156);
        *((_DWORD *)this + 314) = v248 + 1;
        v251 = *(_QWORD *)(v250 + 8 * v248);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)v251, v247);
      ++v246;
    }
    while (v246 < *((int *)a2 + 314));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1272));
  if (*((int *)a2 + 320) >= 1)
  {
    v254 = 0;
    do
    {
      v255 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)a2 + 159)
                                                                                          + 8 * v254);
      v256 = *((int *)this + 320);
      v257 = *((_DWORD *)this + 321);
      if ((int)v256 >= v257)
      {
        if (v257 == *((_DWORD *)this + 322))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1272));
          v257 = *((_DWORD *)this + 321);
        }
        *((_DWORD *)this + 321) = v257 + 1;
        v259 = operator new();
        *(_QWORD *)(v259 + 8) = 0;
        *(_QWORD *)(v259 + 16) = 0;
        *(_QWORD *)v259 = &off_24D98F578;
        *(_DWORD *)(v259 + 24) = 0;
        v260 = *((_QWORD *)this + 159);
        v261 = *((int *)this + 320);
        *((_DWORD *)this + 320) = v261 + 1;
        *(_QWORD *)(v260 + 8 * v261) = v259;
      }
      else
      {
        v258 = *((_QWORD *)this + 159);
        *((_DWORD *)this + 320) = v256 + 1;
        v259 = *(_QWORD *)(v258 + 8 * v256);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)v259, v255);
      ++v254;
    }
    while (v254 < *((int *)a2 + 320));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1296));
  if (*((int *)a2 + 326) >= 1)
  {
    v262 = 0;
    do
    {
      v263 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)a2 + 162)
                                                                                          + 8 * v262);
      v264 = *((int *)this + 326);
      v265 = *((_DWORD *)this + 327);
      if ((int)v264 >= v265)
      {
        if (v265 == *((_DWORD *)this + 328))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1296));
          v265 = *((_DWORD *)this + 327);
        }
        *((_DWORD *)this + 327) = v265 + 1;
        v267 = operator new();
        *(_QWORD *)(v267 + 8) = 0;
        *(_QWORD *)(v267 + 16) = 0;
        *(_QWORD *)v267 = &off_24D98F578;
        *(_DWORD *)(v267 + 24) = 0;
        v268 = *((_QWORD *)this + 162);
        v269 = *((int *)this + 326);
        *((_DWORD *)this + 326) = v269 + 1;
        *(_QWORD *)(v268 + 8 * v269) = v267;
      }
      else
      {
        v266 = *((_QWORD *)this + 162);
        *((_DWORD *)this + 326) = v264 + 1;
        v267 = *(_QWORD *)(v266 + 8 * v264);
      }
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom((awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)v267, v263);
      ++v262;
    }
    while (v262 < *((int *)a2 + 326));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1320));
  if (*((int *)a2 + 332) >= 1)
  {
    v270 = 0;
    do
    {
      v271 = *(const awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal **)(*((_QWORD *)a2 + 165)
                                                                                             + 8 * v270);
      v272 = *((int *)this + 332);
      v273 = *((_DWORD *)this + 333);
      if ((int)v272 >= v273)
      {
        if (v273 == *((_DWORD *)this + 334))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1320));
          v273 = *((_DWORD *)this + 333);
        }
        *((_DWORD *)this + 333) = v273 + 1;
        v275 = operator new();
        *(_QWORD *)(v275 + 8) = 0;
        *(_QWORD *)(v275 + 16) = 0;
        *(_QWORD *)v275 = &off_24D98FCF8;
        *(_DWORD *)(v275 + 24) = 0;
        *(_QWORD *)(v275 + 32) = 0;
        *(_DWORD *)(v275 + 40) = 0;
        v276 = *((_QWORD *)this + 165);
        v277 = *((int *)this + 332);
        *((_DWORD *)this + 332) = v277 + 1;
        *(_QWORD *)(v276 + 8 * v277) = v275;
      }
      else
      {
        v274 = *((_QWORD *)this + 165);
        *((_DWORD *)this + 332) = v272 + 1;
        v275 = *(_QWORD *)(v274 + 8 * v272);
      }
      awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergeFrom((awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *)v275, v271);
      ++v270;
    }
    while (v270 < *((int *)a2 + 332));
  }
  v278 = *((_DWORD *)a2 + 340);
  if (!(_BYTE)v278)
    goto LABEL_285;
  if ((v278 & 1) != 0)
  {
    v286 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 340) |= 1u;
    *((_QWORD *)this + 1) = v286;
    v278 = *((_DWORD *)a2 + 340);
    if ((v278 & 2) == 0)
    {
LABEL_278:
      if ((v278 & 4) == 0)
        goto LABEL_279;
      goto LABEL_339;
    }
  }
  else if ((v278 & 2) == 0)
  {
    goto LABEL_278;
  }
  v287 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 340) |= 2u;
  v288 = (std::string *)*((_QWORD *)this + 2);
  if (v288 == (std::string *)MEMORY[0x24BEDD958])
  {
    v288 = (std::string *)operator new();
    v288->__r_.__value_.__l.__size_ = 0;
    v288->__r_.__value_.__r.__words[2] = 0;
    v288->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v288;
  }
  std::string::operator=(v288, v287);
  v278 = *((_DWORD *)a2 + 340);
  if ((v278 & 4) == 0)
  {
LABEL_279:
    if ((v278 & 8) == 0)
      goto LABEL_280;
    goto LABEL_340;
  }
LABEL_339:
  v289 = *((_QWORD *)a2 + 3);
  *((_DWORD *)this + 340) |= 4u;
  *((_QWORD *)this + 3) = v289;
  v278 = *((_DWORD *)a2 + 340);
  if ((v278 & 8) == 0)
  {
LABEL_280:
    if ((v278 & 0x10) == 0)
      goto LABEL_281;
    goto LABEL_341;
  }
LABEL_340:
  v290 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 340) |= 8u;
  *((_DWORD *)this + 10) = v290;
  v278 = *((_DWORD *)a2 + 340);
  if ((v278 & 0x10) == 0)
  {
LABEL_281:
    if ((v278 & 0x20) == 0)
      goto LABEL_282;
LABEL_342:
    v292 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 340) |= 0x20u;
    *((_DWORD *)this + 11) = v292;
    v278 = *((_DWORD *)a2 + 340);
    if ((v278 & 0x40) == 0)
    {
LABEL_283:
      if ((v278 & 0x80) == 0)
        goto LABEL_285;
      goto LABEL_284;
    }
    goto LABEL_343;
  }
LABEL_341:
  v291 = *((_QWORD *)a2 + 4);
  *((_DWORD *)this + 340) |= 0x10u;
  *((_QWORD *)this + 4) = v291;
  v278 = *((_DWORD *)a2 + 340);
  if ((v278 & 0x20) != 0)
    goto LABEL_342;
LABEL_282:
  if ((v278 & 0x40) == 0)
    goto LABEL_283;
LABEL_343:
  v293 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 340) |= 0x40u;
  *((_DWORD *)this + 12) = v293;
  v278 = *((_DWORD *)a2 + 340);
  if ((v278 & 0x80) != 0)
  {
LABEL_284:
    v279 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 340) |= 0x80u;
    *((_DWORD *)this + 13) = v279;
    v278 = *((_DWORD *)a2 + 340);
  }
LABEL_285:
  if ((v278 & 0x400) != 0)
  {
    v280 = *((_DWORD *)a2 + 108);
    *((_DWORD *)this + 340) |= 0x400u;
    *((_DWORD *)this + 108) = v280;
    v278 = *((_DWORD *)a2 + 340);
  }
  if ((v278 & 0x800000) != 0)
  {
    v281 = *((_QWORD *)a2 + 49);
    *((_DWORD *)this + 340) |= 0x800000u;
    *((_QWORD *)this + 49) = v281;
    v278 = *((_DWORD *)a2 + 340);
  }
  if (HIBYTE(v278))
  {
    if ((v278 & 0x1000000) != 0)
    {
      v315 = *((_QWORD *)a2 + 50);
      *((_DWORD *)this + 340) |= 0x1000000u;
      *((_QWORD *)this + 50) = v315;
      v278 = *((_DWORD *)a2 + 340);
      if ((v278 & 0x2000000) == 0)
      {
LABEL_292:
        if ((v278 & 0x4000000) == 0)
          goto LABEL_293;
        goto LABEL_372;
      }
    }
    else if ((v278 & 0x2000000) == 0)
    {
      goto LABEL_292;
    }
    v316 = *((_QWORD *)a2 + 51);
    *((_DWORD *)this + 340) |= 0x2000000u;
    *((_QWORD *)this + 51) = v316;
    v278 = *((_DWORD *)a2 + 340);
    if ((v278 & 0x4000000) == 0)
    {
LABEL_293:
      if ((v278 & 0x8000000) == 0)
        goto LABEL_294;
      goto LABEL_373;
    }
LABEL_372:
    v317 = *((_QWORD *)a2 + 52);
    *((_DWORD *)this + 340) |= 0x4000000u;
    *((_QWORD *)this + 52) = v317;
    v278 = *((_DWORD *)a2 + 340);
    if ((v278 & 0x8000000) == 0)
    {
LABEL_294:
      if ((v278 & 0x10000000) == 0)
        goto LABEL_295;
      goto LABEL_374;
    }
LABEL_373:
    v318 = *((_QWORD *)a2 + 53);
    *((_DWORD *)this + 340) |= 0x8000000u;
    *((_QWORD *)this + 53) = v318;
    v278 = *((_DWORD *)a2 + 340);
    if ((v278 & 0x10000000) == 0)
    {
LABEL_295:
      if ((v278 & 0x20000000) == 0)
        goto LABEL_296;
      goto LABEL_375;
    }
LABEL_374:
    v319 = *((_BYTE *)a2 + 576);
    *((_DWORD *)this + 340) |= 0x10000000u;
    *((_BYTE *)this + 576) = v319;
    v278 = *((_DWORD *)a2 + 340);
    if ((v278 & 0x20000000) == 0)
    {
LABEL_296:
      if ((v278 & 0x40000000) == 0)
        goto LABEL_297;
      goto LABEL_376;
    }
LABEL_375:
    v320 = *((_BYTE *)a2 + 577);
    *((_DWORD *)this + 340) |= 0x20000000u;
    *((_BYTE *)this + 577) = v320;
    v278 = *((_DWORD *)a2 + 340);
    if ((v278 & 0x40000000) == 0)
    {
LABEL_297:
      if ((v278 & 0x80000000) == 0)
        goto LABEL_298;
LABEL_377:
      v322 = *((_QWORD *)a2 + 56);
      *((_DWORD *)this + 340) |= 0x80000000;
      *((_QWORD *)this + 56) = v322;
      goto LABEL_298;
    }
LABEL_376:
    v321 = *((_QWORD *)a2 + 55);
    *((_DWORD *)this + 340) |= 0x40000000u;
    *((_QWORD *)this + 55) = v321;
    if ((*((_DWORD *)a2 + 340) & 0x80000000) == 0)
      goto LABEL_298;
    goto LABEL_377;
  }
LABEL_298:
  v282 = *((_DWORD *)a2 + 341);
  if (!(_BYTE)v282)
    goto LABEL_308;
  if ((v282 & 1) != 0)
  {
    v294 = *((_QWORD *)a2 + 57);
    *((_DWORD *)this + 341) |= 1u;
    *((_QWORD *)this + 57) = v294;
    v282 = *((_DWORD *)a2 + 341);
    if ((v282 & 2) == 0)
    {
LABEL_301:
      if ((v282 & 4) == 0)
        goto LABEL_302;
      goto LABEL_347;
    }
  }
  else if ((v282 & 2) == 0)
  {
    goto LABEL_301;
  }
  v295 = *((_QWORD *)a2 + 58);
  *((_DWORD *)this + 341) |= 2u;
  *((_QWORD *)this + 58) = v295;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 4) == 0)
  {
LABEL_302:
    if ((v282 & 8) == 0)
      goto LABEL_303;
    goto LABEL_348;
  }
LABEL_347:
  v296 = *((_QWORD *)a2 + 59);
  *((_DWORD *)this + 341) |= 4u;
  *((_QWORD *)this + 59) = v296;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 8) == 0)
  {
LABEL_303:
    if ((v282 & 0x10) == 0)
      goto LABEL_304;
    goto LABEL_349;
  }
LABEL_348:
  v297 = *((_QWORD *)a2 + 60);
  *((_DWORD *)this + 341) |= 8u;
  *((_QWORD *)this + 60) = v297;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x10) == 0)
  {
LABEL_304:
    if ((v282 & 0x20) == 0)
      goto LABEL_305;
    goto LABEL_350;
  }
LABEL_349:
  v298 = *((_QWORD *)a2 + 61);
  *((_DWORD *)this + 341) |= 0x10u;
  *((_QWORD *)this + 61) = v298;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x20) == 0)
  {
LABEL_305:
    if ((v282 & 0x40) == 0)
      goto LABEL_306;
    goto LABEL_351;
  }
LABEL_350:
  v299 = *((_QWORD *)a2 + 62);
  *((_DWORD *)this + 341) |= 0x20u;
  *((_QWORD *)this + 62) = v299;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x40) == 0)
  {
LABEL_306:
    if ((v282 & 0x80) == 0)
      goto LABEL_308;
    goto LABEL_307;
  }
LABEL_351:
  v300 = *((_QWORD *)a2 + 63);
  *((_DWORD *)this + 341) |= 0x40u;
  *((_QWORD *)this + 63) = v300;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x80) != 0)
  {
LABEL_307:
    v283 = *((_QWORD *)a2 + 64);
    *((_DWORD *)this + 341) |= 0x80u;
    *((_QWORD *)this + 64) = v283;
    v282 = *((_DWORD *)a2 + 341);
  }
LABEL_308:
  if ((v282 & 0xFF00) == 0)
    goto LABEL_318;
  if ((v282 & 0x100) != 0)
  {
    v301 = *((_QWORD *)a2 + 65);
    *((_DWORD *)this + 341) |= 0x100u;
    *((_QWORD *)this + 65) = v301;
    v282 = *((_DWORD *)a2 + 341);
    if ((v282 & 0x200) == 0)
    {
LABEL_311:
      if ((v282 & 0x400) == 0)
        goto LABEL_312;
      goto LABEL_355;
    }
  }
  else if ((v282 & 0x200) == 0)
  {
    goto LABEL_311;
  }
  v302 = *((_QWORD *)a2 + 66);
  *((_DWORD *)this + 341) |= 0x200u;
  *((_QWORD *)this + 66) = v302;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x400) == 0)
  {
LABEL_312:
    if ((v282 & 0x800) == 0)
      goto LABEL_313;
    goto LABEL_356;
  }
LABEL_355:
  v303 = *((_QWORD *)a2 + 67);
  *((_DWORD *)this + 341) |= 0x400u;
  *((_QWORD *)this + 67) = v303;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x800) == 0)
  {
LABEL_313:
    if ((v282 & 0x1000) == 0)
      goto LABEL_314;
    goto LABEL_357;
  }
LABEL_356:
  v304 = *((_QWORD *)a2 + 68);
  *((_DWORD *)this + 341) |= 0x800u;
  *((_QWORD *)this + 68) = v304;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x1000) == 0)
  {
LABEL_314:
    if ((v282 & 0x2000) == 0)
      goto LABEL_315;
    goto LABEL_358;
  }
LABEL_357:
  v305 = *((_QWORD *)a2 + 69);
  *((_DWORD *)this + 341) |= 0x1000u;
  *((_QWORD *)this + 69) = v305;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x2000) == 0)
  {
LABEL_315:
    if ((v282 & 0x4000) == 0)
      goto LABEL_316;
    goto LABEL_359;
  }
LABEL_358:
  v306 = *((_QWORD *)a2 + 70);
  *((_DWORD *)this + 341) |= 0x2000u;
  *((_QWORD *)this + 70) = v306;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x4000) == 0)
  {
LABEL_316:
    if ((v282 & 0x8000) == 0)
      goto LABEL_318;
    goto LABEL_317;
  }
LABEL_359:
  v307 = *((_QWORD *)a2 + 71);
  *((_DWORD *)this + 341) |= 0x4000u;
  *((_QWORD *)this + 71) = v307;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x8000) != 0)
  {
LABEL_317:
    v284 = *((_DWORD *)a2 + 109);
    *((_DWORD *)this + 341) |= 0x8000u;
    *((_DWORD *)this + 109) = v284;
    v282 = *((_DWORD *)a2 + 341);
  }
LABEL_318:
  if ((v282 & 0xFF0000) == 0)
    goto LABEL_328;
  if ((v282 & 0x10000) != 0)
  {
    v308 = *((_DWORD *)a2 + 145);
    *((_DWORD *)this + 341) |= 0x10000u;
    *((_DWORD *)this + 145) = v308;
    v282 = *((_DWORD *)a2 + 341);
    if ((v282 & 0x20000) == 0)
    {
LABEL_321:
      if ((v282 & 0x40000) == 0)
        goto LABEL_322;
      goto LABEL_363;
    }
  }
  else if ((v282 & 0x20000) == 0)
  {
    goto LABEL_321;
  }
  v309 = *((_DWORD *)a2 + 146);
  *((_DWORD *)this + 341) |= 0x20000u;
  *((_DWORD *)this + 146) = v309;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x40000) == 0)
  {
LABEL_322:
    if ((v282 & 0x80000) == 0)
      goto LABEL_323;
    goto LABEL_364;
  }
LABEL_363:
  v310 = *((_DWORD *)a2 + 147);
  *((_DWORD *)this + 341) |= 0x40000u;
  *((_DWORD *)this + 147) = v310;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x80000) == 0)
  {
LABEL_323:
    if ((v282 & 0x100000) == 0)
      goto LABEL_324;
    goto LABEL_366;
  }
LABEL_364:
  v311 = *((_DWORD *)a2 + 148);
  if (v311 >= 0xD)
    awd::metrics::LocationGPSSessionStatistics::MergeFrom();
  *((_DWORD *)this + 341) |= 0x80000u;
  *((_DWORD *)this + 148) = v311;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x100000) == 0)
  {
LABEL_324:
    if ((v282 & 0x200000) == 0)
      goto LABEL_325;
    goto LABEL_367;
  }
LABEL_366:
  v312 = *((_DWORD *)a2 + 149);
  *((_DWORD *)this + 341) |= 0x100000u;
  *((_DWORD *)this + 149) = v312;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x200000) == 0)
  {
LABEL_325:
    if ((v282 & 0x400000) == 0)
      goto LABEL_326;
    goto LABEL_368;
  }
LABEL_367:
  v313 = *((_DWORD *)a2 + 150);
  *((_DWORD *)this + 341) |= 0x200000u;
  *((_DWORD *)this + 150) = v313;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x400000) == 0)
  {
LABEL_326:
    if ((v282 & 0x800000) == 0)
      goto LABEL_328;
    goto LABEL_327;
  }
LABEL_368:
  v314 = *((_DWORD *)a2 + 151);
  *((_DWORD *)this + 341) |= 0x400000u;
  *((_DWORD *)this + 151) = v314;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x800000) != 0)
  {
LABEL_327:
    v285 = *((_BYTE *)a2 + 578);
    *((_DWORD *)this + 341) |= 0x800000u;
    *((_BYTE *)this + 578) = v285;
    v282 = *((_DWORD *)a2 + 341);
  }
LABEL_328:
  if (!(v282 >> 25))
    goto LABEL_384;
  if ((v282 & 0x2000000) != 0)
  {
    v323 = *((_QWORD *)a2 + 79);
    *((_DWORD *)this + 341) |= 0x2000000u;
    *((_QWORD *)this + 79) = v323;
    v282 = *((_DWORD *)a2 + 341);
    if ((v282 & 0x8000000) == 0)
    {
LABEL_331:
      if ((v282 & 0x10000000) == 0)
        goto LABEL_332;
      goto LABEL_380;
    }
  }
  else if ((v282 & 0x8000000) == 0)
  {
    goto LABEL_331;
  }
  v324 = *((_QWORD *)a2 + 83);
  *((_DWORD *)this + 341) |= 0x8000000u;
  *((_QWORD *)this + 83) = v324;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x10000000) == 0)
  {
LABEL_332:
    if ((v282 & 0x20000000) == 0)
      goto LABEL_333;
LABEL_381:
    v326 = *((_QWORD *)a2 + 85);
    *((_DWORD *)this + 341) |= 0x20000000u;
    *((_QWORD *)this + 85) = v326;
    if ((*((_DWORD *)a2 + 341) & 0x80000000) == 0)
      goto LABEL_384;
    goto LABEL_382;
  }
LABEL_380:
  v325 = *((_QWORD *)a2 + 84);
  *((_DWORD *)this + 341) |= 0x10000000u;
  *((_QWORD *)this + 84) = v325;
  v282 = *((_DWORD *)a2 + 341);
  if ((v282 & 0x20000000) != 0)
    goto LABEL_381;
LABEL_333:
  if ((v282 & 0x80000000) == 0)
    goto LABEL_384;
LABEL_382:
  v327 = *((_DWORD *)a2 + 202);
  if (v327 >= 0xE)
    awd::metrics::LocationGPSSessionStatistics::MergeFrom();
  *((_DWORD *)this + 341) |= 0x80000000;
  *((_DWORD *)this + 202) = v327;
LABEL_384:
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x1FE) == 0)
    goto LABEL_393;
  if ((v328 & 2) != 0)
  {
    v339 = *((_QWORD *)a2 + 92);
    *((_DWORD *)this + 342) |= 2u;
    *((_QWORD *)this + 92) = v339;
    v328 = *((_DWORD *)a2 + 342);
    if ((v328 & 4) == 0)
    {
LABEL_387:
      if ((v328 & 8) == 0)
        goto LABEL_388;
      goto LABEL_448;
    }
  }
  else if ((v328 & 4) == 0)
  {
    goto LABEL_387;
  }
  v340 = *((_QWORD *)a2 + 93);
  *((_DWORD *)this + 342) |= 4u;
  *((_QWORD *)this + 93) = v340;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 8) == 0)
  {
LABEL_388:
    if ((v328 & 0x10) == 0)
      goto LABEL_389;
    goto LABEL_449;
  }
LABEL_448:
  v341 = *((_QWORD *)a2 + 94);
  *((_DWORD *)this + 342) |= 8u;
  *((_QWORD *)this + 94) = v341;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x10) == 0)
  {
LABEL_389:
    if ((v328 & 0x20) == 0)
      goto LABEL_390;
    goto LABEL_450;
  }
LABEL_449:
  v342 = *((_QWORD *)a2 + 95);
  *((_DWORD *)this + 342) |= 0x10u;
  *((_QWORD *)this + 95) = v342;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x20) == 0)
  {
LABEL_390:
    if ((v328 & 0x40) == 0)
      goto LABEL_391;
    goto LABEL_451;
  }
LABEL_450:
  v343 = *((_QWORD *)a2 + 96);
  *((_DWORD *)this + 342) |= 0x20u;
  *((_QWORD *)this + 96) = v343;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x40) == 0)
  {
LABEL_391:
    if ((v328 & 0x80) == 0)
      goto LABEL_393;
    goto LABEL_392;
  }
LABEL_451:
  v344 = *((_QWORD *)a2 + 97);
  *((_DWORD *)this + 342) |= 0x40u;
  *((_QWORD *)this + 97) = v344;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x80) != 0)
  {
LABEL_392:
    v329 = *((_QWORD *)a2 + 98);
    *((_DWORD *)this + 342) |= 0x80u;
    *((_QWORD *)this + 98) = v329;
    v328 = *((_DWORD *)a2 + 342);
  }
LABEL_393:
  if ((v328 & 0xFF00) == 0)
    goto LABEL_403;
  if ((v328 & 0x100) != 0)
  {
    v345 = *((_QWORD *)a2 + 99);
    *((_DWORD *)this + 342) |= 0x100u;
    *((_QWORD *)this + 99) = v345;
    v328 = *((_DWORD *)a2 + 342);
    if ((v328 & 0x200) == 0)
    {
LABEL_396:
      if ((v328 & 0x400) == 0)
        goto LABEL_397;
      goto LABEL_455;
    }
  }
  else if ((v328 & 0x200) == 0)
  {
    goto LABEL_396;
  }
  v346 = *((_QWORD *)a2 + 100);
  *((_DWORD *)this + 342) |= 0x200u;
  *((_QWORD *)this + 100) = v346;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x400) == 0)
  {
LABEL_397:
    if ((v328 & 0x800) == 0)
      goto LABEL_398;
    goto LABEL_456;
  }
LABEL_455:
  v347 = *((_QWORD *)a2 + 102);
  *((_DWORD *)this + 342) |= 0x400u;
  *((_QWORD *)this + 102) = v347;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x800) == 0)
  {
LABEL_398:
    if ((v328 & 0x1000) == 0)
      goto LABEL_399;
    goto LABEL_457;
  }
LABEL_456:
  v348 = *((_QWORD *)a2 + 103);
  *((_DWORD *)this + 342) |= 0x800u;
  *((_QWORD *)this + 103) = v348;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x1000) == 0)
  {
LABEL_399:
    if ((v328 & 0x2000) == 0)
      goto LABEL_400;
    goto LABEL_458;
  }
LABEL_457:
  v349 = *((_QWORD *)a2 + 104);
  *((_DWORD *)this + 342) |= 0x1000u;
  *((_QWORD *)this + 104) = v349;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x2000) == 0)
  {
LABEL_400:
    if ((v328 & 0x4000) == 0)
      goto LABEL_401;
    goto LABEL_459;
  }
LABEL_458:
  v350 = *((_QWORD *)a2 + 105);
  *((_DWORD *)this + 342) |= 0x2000u;
  *((_QWORD *)this + 105) = v350;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x4000) == 0)
  {
LABEL_401:
    if ((v328 & 0x8000) == 0)
      goto LABEL_403;
    goto LABEL_402;
  }
LABEL_459:
  v351 = *((_QWORD *)a2 + 106);
  *((_DWORD *)this + 342) |= 0x4000u;
  *((_QWORD *)this + 106) = v351;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x8000) != 0)
  {
LABEL_402:
    v330 = *((_BYTE *)a2 + 579);
    *((_DWORD *)this + 342) |= 0x8000u;
    *((_BYTE *)this + 579) = v330;
    v328 = *((_DWORD *)a2 + 342);
  }
LABEL_403:
  if ((v328 & 0x1FE0000) == 0)
    goto LABEL_412;
  if ((v328 & 0x20000) != 0)
  {
    v352 = *((_QWORD *)a2 + 110);
    *((_DWORD *)this + 342) |= 0x20000u;
    *((_QWORD *)this + 110) = v352;
    v328 = *((_DWORD *)a2 + 342);
    if ((v328 & 0x40000) == 0)
    {
LABEL_406:
      if ((v328 & 0x80000) == 0)
        goto LABEL_407;
      goto LABEL_463;
    }
  }
  else if ((v328 & 0x40000) == 0)
  {
    goto LABEL_406;
  }
  v353 = *((_QWORD *)a2 + 111);
  *((_DWORD *)this + 342) |= 0x40000u;
  *((_QWORD *)this + 111) = v353;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x80000) == 0)
  {
LABEL_407:
    if ((v328 & 0x100000) == 0)
      goto LABEL_408;
    goto LABEL_464;
  }
LABEL_463:
  v354 = *((_BYTE *)a2 + 1044);
  *((_DWORD *)this + 342) |= 0x80000u;
  *((_BYTE *)this + 1044) = v354;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x100000) == 0)
  {
LABEL_408:
    if ((v328 & 0x200000) == 0)
      goto LABEL_409;
    goto LABEL_465;
  }
LABEL_464:
  v355 = *((_DWORD *)a2 + 203);
  *((_DWORD *)this + 342) |= 0x100000u;
  *((_DWORD *)this + 203) = v355;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x200000) == 0)
  {
LABEL_409:
    if ((v328 & 0x400000) == 0)
      goto LABEL_410;
    goto LABEL_466;
  }
LABEL_465:
  v356 = *((_DWORD *)a2 + 224);
  *((_DWORD *)this + 342) |= 0x200000u;
  *((_DWORD *)this + 224) = v356;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x400000) == 0)
  {
LABEL_410:
    if ((v328 & 0x800000) == 0)
      goto LABEL_412;
    goto LABEL_411;
  }
LABEL_466:
  v357 = *((_DWORD *)a2 + 225);
  *((_DWORD *)this + 342) |= 0x400000u;
  *((_DWORD *)this + 225) = v357;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x800000) != 0)
  {
LABEL_411:
    v331 = *((_QWORD *)a2 + 113);
    *((_DWORD *)this + 342) |= 0x800000u;
    *((_QWORD *)this + 113) = v331;
    v328 = *((_DWORD *)a2 + 342);
  }
LABEL_412:
  if (!HIBYTE(v328))
    goto LABEL_421;
  if ((v328 & 0x1000000) != 0)
  {
    *((_DWORD *)this + 342) |= 0x1000000u;
    v363 = *((_QWORD *)this + 114);
    if (!v363)
    {
      v363 = operator new();
      *(_QWORD *)v363 = &off_24D98FAA0;
      *(_OWORD *)(v363 + 8) = 0u;
      *(_OWORD *)(v363 + 24) = 0u;
      *(_OWORD *)(v363 + 40) = 0u;
      *(_OWORD *)(v363 + 56) = 0u;
      *(_DWORD *)(v363 + 72) = 0;
      *((_QWORD *)this + 114) = v363;
    }
    v364 = (const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *)*((_QWORD *)a2 + 114);
    if (!v364)
      v364 = *(const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics **)(awd::metrics::LocationGPSSessionStatistics::default_instance_
                                                                                                  + 912);
    awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom((awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *)v363, v364);
    v328 = *((_DWORD *)a2 + 342);
    if ((v328 & 0x2000000) == 0)
    {
LABEL_415:
      if ((v328 & 0x4000000) == 0)
        goto LABEL_416;
      goto LABEL_480;
    }
  }
  else if ((v328 & 0x2000000) == 0)
  {
    goto LABEL_415;
  }
  v365 = *((_DWORD *)a2 + 230);
  *((_DWORD *)this + 342) |= 0x2000000u;
  *((_DWORD *)this + 230) = v365;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x4000000) == 0)
  {
LABEL_416:
    if ((v328 & 0x8000000) == 0)
      goto LABEL_417;
    goto LABEL_481;
  }
LABEL_480:
  v366 = *((_DWORD *)a2 + 231);
  *((_DWORD *)this + 342) |= 0x4000000u;
  *((_DWORD *)this + 231) = v366;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x8000000) == 0)
  {
LABEL_417:
    if ((v328 & 0x10000000) == 0)
      goto LABEL_418;
    goto LABEL_482;
  }
LABEL_481:
  v367 = *((_DWORD *)a2 + 232);
  *((_DWORD *)this + 342) |= 0x8000000u;
  *((_DWORD *)this + 232) = v367;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x10000000) == 0)
  {
LABEL_418:
    if ((v328 & 0x20000000) == 0)
      goto LABEL_419;
    goto LABEL_483;
  }
LABEL_482:
  v368 = *((_DWORD *)a2 + 233);
  *((_DWORD *)this + 342) |= 0x10000000u;
  *((_DWORD *)this + 233) = v368;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x20000000) == 0)
  {
LABEL_419:
    if ((v328 & 0x40000000) == 0)
      goto LABEL_420;
LABEL_484:
    v370 = *((_DWORD *)a2 + 235);
    *((_DWORD *)this + 342) |= 0x40000000u;
    *((_DWORD *)this + 235) = v370;
    if ((*((_DWORD *)a2 + 342) & 0x80000000) == 0)
      goto LABEL_421;
    goto LABEL_485;
  }
LABEL_483:
  v369 = *((_DWORD *)a2 + 234);
  *((_DWORD *)this + 342) |= 0x20000000u;
  *((_DWORD *)this + 234) = v369;
  v328 = *((_DWORD *)a2 + 342);
  if ((v328 & 0x40000000) != 0)
    goto LABEL_484;
LABEL_420:
  if ((v328 & 0x80000000) == 0)
    goto LABEL_421;
LABEL_485:
  v371 = *((_DWORD *)a2 + 236);
  *((_DWORD *)this + 342) |= 0x80000000;
  *((_DWORD *)this + 236) = v371;
LABEL_421:
  v332 = *((_DWORD *)a2 + 343);
  if (!(_BYTE)v332)
    goto LABEL_429;
  if ((v332 & 1) != 0)
  {
    v358 = *((_DWORD *)a2 + 237);
    *((_DWORD *)this + 343) |= 1u;
    *((_DWORD *)this + 237) = v358;
    v332 = *((_DWORD *)a2 + 343);
    if ((v332 & 2) == 0)
    {
LABEL_424:
      if ((v332 & 4) == 0)
        goto LABEL_425;
      goto LABEL_470;
    }
  }
  else if ((v332 & 2) == 0)
  {
    goto LABEL_424;
  }
  v359 = *((_DWORD *)a2 + 238);
  *((_DWORD *)this + 343) |= 2u;
  *((_DWORD *)this + 238) = v359;
  v332 = *((_DWORD *)a2 + 343);
  if ((v332 & 4) == 0)
  {
LABEL_425:
    if ((v332 & 8) == 0)
      goto LABEL_426;
    goto LABEL_471;
  }
LABEL_470:
  v360 = *((_DWORD *)a2 + 239);
  *((_DWORD *)this + 343) |= 4u;
  *((_DWORD *)this + 239) = v360;
  v332 = *((_DWORD *)a2 + 343);
  if ((v332 & 8) == 0)
  {
LABEL_426:
    if ((v332 & 0x10) == 0)
      goto LABEL_427;
    goto LABEL_472;
  }
LABEL_471:
  v361 = *((_DWORD *)a2 + 240);
  *((_DWORD *)this + 343) |= 8u;
  *((_DWORD *)this + 240) = v361;
  v332 = *((_DWORD *)a2 + 343);
  if ((v332 & 0x10) == 0)
  {
LABEL_427:
    if ((v332 & 0x20) == 0)
      goto LABEL_429;
    goto LABEL_428;
  }
LABEL_472:
  v362 = *((_DWORD *)a2 + 241);
  *((_DWORD *)this + 343) |= 0x10u;
  *((_DWORD *)this + 241) = v362;
  v332 = *((_DWORD *)a2 + 343);
  if ((v332 & 0x20) != 0)
  {
LABEL_428:
    v333 = *((_DWORD *)a2 + 260);
    *((_DWORD *)this + 343) |= 0x20u;
    *((_DWORD *)this + 260) = v333;
    v332 = *((_DWORD *)a2 + 343);
  }
LABEL_429:
  if ((v332 & 0x400) != 0)
  {
    *((_DWORD *)this + 343) |= 0x400u;
    v334 = (awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *)*((_QWORD *)this + 134);
    if (!v334)
    {
      v334 = (awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *)operator new();
      *(_QWORD *)v334 = &off_24D98FB18;
      *((_QWORD *)v334 + 1) = 0;
      *((_QWORD *)v334 + 2) = 0;
      *((_QWORD *)v334 + 3) = 0;
      *((_QWORD *)this + 134) = v334;
    }
    v335 = (const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *)*((_QWORD *)a2 + 134);
    if (!v335)
      v335 = *(const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo **)(awd::metrics::LocationGPSSessionStatistics::default_instance_
                                                                                                  + 1072);
    awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergeFrom(v334, v335);
    v332 = *((_DWORD *)a2 + 343);
  }
  if ((v332 & 0x1FE00000) != 0)
  {
    if ((v332 & 0x200000) != 0)
    {
      v336 = *((_BYTE *)a2 + 1045);
      *((_DWORD *)this + 343) |= 0x200000u;
      *((_BYTE *)this + 1045) = v336;
      v332 = *((_DWORD *)a2 + 343);
    }
    if ((v332 & 0x400000) != 0)
    {
      v337 = *((_BYTE *)a2 + 1046);
      *((_DWORD *)this + 343) |= 0x400000u;
      *((_BYTE *)this + 1046) = v337;
      v332 = *((_DWORD *)a2 + 343);
    }
  }
  if (HIBYTE(v332))
  {
    if ((v332 & 0x1000000) != 0)
    {
      v372 = *((_DWORD *)a2 + 336);
      *((_DWORD *)this + 343) |= 0x1000000u;
      *((_DWORD *)this + 336) = v372;
      v332 = *((_DWORD *)a2 + 343);
      if ((v332 & 0x2000000) == 0)
      {
LABEL_443:
        if ((v332 & 0x4000000) == 0)
          return;
        goto LABEL_444;
      }
    }
    else if ((v332 & 0x2000000) == 0)
    {
      goto LABEL_443;
    }
    v373 = *((_DWORD *)a2 + 337);
    *((_DWORD *)this + 343) |= 0x2000000u;
    *((_DWORD *)this + 337) = v373;
    if ((*((_DWORD *)a2 + 343) & 0x4000000) != 0)
    {
LABEL_444:
      v338 = *((_DWORD *)a2 + 338);
      *((_DWORD *)this + 343) |= 0x4000000u;
      *((_DWORD *)this + 338) = v338;
    }
  }
}

void sub_218A17CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics::~LocationGPSSessionStatistics(awd::metrics::LocationGPSSessionStatistics *this)
{
  *(_QWORD *)this = &off_24D98FD70;
  awd::metrics::LocationGPSSessionStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal>::TypeHandler>((uint64_t *)this + 165);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 162);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 159);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 156);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 153);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 150);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 147);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 144);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 141);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSOnOffState>::TypeHandler>((uint64_t *)this + 138);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSForceOffReason>::TypeHandler>((uint64_t *)this + 135);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ThermalLevelData>::TypeHandler>((uint64_t *)this + 131);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChargerTypeData>::TypeHandler>((uint64_t *)this + 127);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 124);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 121);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>((uint64_t *)this + 107);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData>::TypeHandler>((uint64_t *)this + 89);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData>::TypeHandler>((uint64_t *)this + 86);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerStateData>::TypeHandler>((uint64_t *)this + 80);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>((uint64_t *)this + 76);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MountedStateData>::TypeHandler>((uint64_t *)this + 46);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MovingStateData>::TypeHandler>((uint64_t *)this + 43);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MotionActivityData>::TypeHandler>((uint64_t *)this + 40);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 37);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 34);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 31);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 28);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 25);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 22);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 19);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 16);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData>::TypeHandler>((uint64_t *)this + 13);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>((uint64_t *)this + 10);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>((uint64_t *)this + 7);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationGPSSessionStatistics::~LocationGPSSessionStatistics(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationGPSSessionStatistics::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = this;
  v2 = this[2];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  if ((_QWORD *)awd::metrics::LocationGPSSessionStatistics::default_instance_ != v1)
  {
    v4 = v1[114];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    this = (_QWORD *)v1[134];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 1356) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics::default_instance(awd::metrics::LocationGPSSessionStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGPSSessionStatistics::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationGPSSessionStatistics::New(awd::metrics::LocationGPSSessionStatistics *this)
{
  awd::metrics::LocationGPSSessionStatistics *v1;

  v1 = (awd::metrics::LocationGPSSessionStatistics *)operator new();
  return awd::metrics::LocationGPSSessionStatistics::LocationGPSSessionStatistics(v1);
}

uint64_t awd::metrics::LocationGPSSessionStatistics::Clear(uint64_t this)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v1 = this;
  v2 = *(_DWORD *)(this + 1360);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    v2 = *(_DWORD *)(this + 1360);
  }
  if ((v2 & 0x3FC00) != 0)
    *(_DWORD *)(this + 432) = 0;
  if ((v2 & 0x7F800000) != 0)
    *(_QWORD *)(this + 392) = 0;
  if (HIBYTE(v2))
  {
    *(_WORD *)(this + 576) = 0;
    *(_OWORD *)(this + 400) = 0u;
    *(_OWORD *)(this + 416) = 0u;
    *(_QWORD *)(this + 440) = 0;
    *(_QWORD *)(this + 448) = 0;
  }
  v4 = *(_DWORD *)(this + 1364);
  if ((_BYTE)v4)
  {
    *(_OWORD *)(this + 488) = 0u;
    *(_OWORD *)(this + 504) = 0u;
    *(_OWORD *)(this + 456) = 0u;
    *(_OWORD *)(this + 472) = 0u;
  }
  if ((v4 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 436) = 0;
    *(_QWORD *)(this + 568) = 0;
    *(_OWORD *)(this + 520) = 0u;
    *(_OWORD *)(this + 536) = 0u;
    *(_OWORD *)(this + 552) = 0u;
  }
  if ((v4 & 0xFF0000) != 0)
  {
    *(_BYTE *)(this + 578) = 0;
    *(_DWORD *)(this + 604) = 0;
    *(_QWORD *)(this + 588) = 0;
    *(_QWORD *)(this + 596) = 0;
    *(_QWORD *)(this + 580) = 0;
  }
  if (v4 >> 25)
  {
    *(_QWORD *)(this + 632) = 0;
    *(_DWORD *)(this + 808) = 0;
    *(_QWORD *)(this + 664) = 0;
    *(_QWORD *)(this + 680) = 0;
    *(_QWORD *)(this + 672) = 0;
  }
  v5 = *(_DWORD *)(this + 1368);
  if ((v5 & 0x1FE) != 0)
  {
    *(_QWORD *)(this + 784) = 0;
    *(_OWORD *)(this + 752) = 0u;
    *(_OWORD *)(this + 768) = 0u;
    *(_OWORD *)(this + 736) = 0u;
  }
  if ((v5 & 0xFF00) != 0)
  {
    *(_BYTE *)(this + 579) = 0;
    *(_OWORD *)(this + 792) = 0u;
    *(_OWORD *)(this + 816) = 0u;
    *(_OWORD *)(this + 832) = 0u;
    *(_QWORD *)(this + 848) = 0;
  }
  if ((v5 & 0x1FE0000) != 0)
  {
    *(_BYTE *)(this + 1044) = 0;
    *(_DWORD *)(this + 812) = 0;
    *(_OWORD *)(this + 880) = 0u;
    *(_OWORD *)(this + 896) = 0u;
  }
  if (HIBYTE(v5))
  {
    if ((v5 & 0x1000000) != 0)
    {
      v6 = *(_QWORD *)(this + 912);
      if (v6)
      {
        v7 = *(_DWORD *)(v6 + 72);
        if ((_BYTE)v7)
        {
          *(_QWORD *)(v6 + 40) = 0;
          *(_OWORD *)(v6 + 24) = 0u;
          *(_OWORD *)(v6 + 8) = 0u;
        }
        if ((v7 & 0xFF00) != 0)
        {
          *(_QWORD *)(v6 + 48) = 0;
          *(_QWORD *)(v6 + 56) = 0;
          *(_DWORD *)(v6 + 64) = 0;
        }
        *(_DWORD *)(v6 + 72) = 0;
      }
    }
    *(_DWORD *)(this + 944) = 0;
    *(_QWORD *)(this + 936) = 0;
    *(_OWORD *)(this + 920) = 0u;
  }
  v8 = *(_DWORD *)(this + 1372);
  if ((_BYTE)v8)
  {
    *(_DWORD *)(this + 1040) = 0;
    *(_DWORD *)(this + 964) = 0;
    *(_OWORD *)(this + 948) = 0u;
  }
  if ((v8 & 0x400) != 0)
  {
    v9 = *(_QWORD *)(this + 1072);
    if (v9)
    {
      if (*(_BYTE *)(v9 + 28))
      {
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
      }
      *(_DWORD *)(v9 + 28) = 0;
      v8 = *(_DWORD *)(this + 1372);
    }
  }
  if ((v8 & 0x1FE00000) != 0)
    *(_WORD *)(this + 1045) = 0;
  if (HIBYTE(v8))
  {
    *(_QWORD *)(this + 1344) = 0;
    *(_DWORD *)(this + 1352) = 0;
  }
  if (*(int *)(this + 64) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v10);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 32))(v11);
      ++v10;
    }
    while (v10 < *(int *)(v1 + 64));
  }
  *(_DWORD *)(v1 + 64) = 0;
  if (*(int *)(v1 + 88) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v1 + 80) + 8 * v12);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 32))(v13);
      ++v12;
    }
    while (v12 < *(int *)(v1 + 88));
  }
  *(_DWORD *)(v1 + 88) = 0;
  if (*(int *)(v1 + 112) >= 1)
  {
    v14 = 0;
    do
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v1 + 104) + 8 * v14);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 32))(v15);
      ++v14;
    }
    while (v14 < *(int *)(v1 + 112));
  }
  *(_DWORD *)(v1 + 112) = 0;
  if (*(int *)(v1 + 136) >= 1)
  {
    v16 = 0;
    do
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v1 + 128) + 8 * v16);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 32))(v17);
      ++v16;
    }
    while (v16 < *(int *)(v1 + 136));
  }
  *(_DWORD *)(v1 + 136) = 0;
  if (*(int *)(v1 + 160) >= 1)
  {
    v18 = 0;
    do
    {
      v19 = *(_QWORD *)(*(_QWORD *)(v1 + 152) + 8 * v18);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
      ++v18;
    }
    while (v18 < *(int *)(v1 + 160));
  }
  *(_DWORD *)(v1 + 160) = 0;
  if (*(int *)(v1 + 184) >= 1)
  {
    v20 = 0;
    do
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v1 + 176) + 8 * v20);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 32))(v21);
      ++v20;
    }
    while (v20 < *(int *)(v1 + 184));
  }
  *(_DWORD *)(v1 + 184) = 0;
  if (*(int *)(v1 + 208) >= 1)
  {
    v22 = 0;
    do
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v1 + 200) + 8 * v22);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 32))(v23);
      ++v22;
    }
    while (v22 < *(int *)(v1 + 208));
  }
  *(_DWORD *)(v1 + 208) = 0;
  if (*(int *)(v1 + 232) >= 1)
  {
    v24 = 0;
    do
    {
      v25 = *(_QWORD *)(*(_QWORD *)(v1 + 224) + 8 * v24);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v25 + 32))(v25);
      ++v24;
    }
    while (v24 < *(int *)(v1 + 232));
  }
  *(_DWORD *)(v1 + 232) = 0;
  if (*(int *)(v1 + 256) >= 1)
  {
    v26 = 0;
    do
    {
      v27 = *(_QWORD *)(*(_QWORD *)(v1 + 248) + 8 * v26);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 32))(v27);
      ++v26;
    }
    while (v26 < *(int *)(v1 + 256));
  }
  *(_DWORD *)(v1 + 256) = 0;
  if (*(int *)(v1 + 280) >= 1)
  {
    v28 = 0;
    do
    {
      v29 = *(_QWORD *)(*(_QWORD *)(v1 + 272) + 8 * v28);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 32))(v29);
      ++v28;
    }
    while (v28 < *(int *)(v1 + 280));
  }
  *(_DWORD *)(v1 + 280) = 0;
  if (*(int *)(v1 + 304) >= 1)
  {
    v30 = 0;
    do
    {
      v31 = *(_QWORD *)(*(_QWORD *)(v1 + 296) + 8 * v30);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 32))(v31);
      ++v30;
    }
    while (v30 < *(int *)(v1 + 304));
  }
  *(_DWORD *)(v1 + 304) = 0;
  if (*(int *)(v1 + 328) >= 1)
  {
    v32 = 0;
    do
    {
      v33 = *(_QWORD *)(*(_QWORD *)(v1 + 320) + 8 * v32);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 32))(v33);
      ++v32;
    }
    while (v32 < *(int *)(v1 + 328));
  }
  *(_DWORD *)(v1 + 328) = 0;
  if (*(int *)(v1 + 352) >= 1)
  {
    v34 = 0;
    do
    {
      v35 = *(_QWORD *)(*(_QWORD *)(v1 + 344) + 8 * v34);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v35 + 32))(v35);
      ++v34;
    }
    while (v34 < *(int *)(v1 + 352));
  }
  *(_DWORD *)(v1 + 352) = 0;
  if (*(int *)(v1 + 376) >= 1)
  {
    v36 = 0;
    do
    {
      v37 = *(_QWORD *)(*(_QWORD *)(v1 + 368) + 8 * v36);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 32))(v37);
      ++v36;
    }
    while (v36 < *(int *)(v1 + 376));
  }
  *(_DWORD *)(v1 + 376) = 0;
  if (*(int *)(v1 + 616) >= 1)
  {
    v38 = 0;
    do
    {
      v39 = *(_QWORD *)(*(_QWORD *)(v1 + 608) + 8 * v38);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v39 + 32))(v39);
      ++v38;
    }
    while (v38 < *(int *)(v1 + 616));
  }
  *(_DWORD *)(v1 + 616) = 0;
  if (*(int *)(v1 + 648) >= 1)
  {
    v40 = 0;
    do
    {
      v41 = *(_QWORD *)(*(_QWORD *)(v1 + 640) + 8 * v40);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v41 + 32))(v41);
      ++v40;
    }
    while (v40 < *(int *)(v1 + 648));
  }
  *(_DWORD *)(v1 + 648) = 0;
  if (*(int *)(v1 + 696) >= 1)
  {
    v42 = 0;
    do
    {
      v43 = *(_QWORD *)(*(_QWORD *)(v1 + 688) + 8 * v42);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 32))(v43);
      ++v42;
    }
    while (v42 < *(int *)(v1 + 696));
  }
  *(_DWORD *)(v1 + 696) = 0;
  if (*(int *)(v1 + 720) >= 1)
  {
    v44 = 0;
    do
    {
      v45 = *(_QWORD *)(*(_QWORD *)(v1 + 712) + 8 * v44);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v45 + 32))(v45);
      ++v44;
    }
    while (v44 < *(int *)(v1 + 720));
  }
  *(_DWORD *)(v1 + 720) = 0;
  if (*(int *)(v1 + 864) >= 1)
  {
    v46 = 0;
    do
    {
      v47 = *(_QWORD *)(*(_QWORD *)(v1 + 856) + 8 * v46);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v47 + 32))(v47);
      ++v46;
    }
    while (v46 < *(int *)(v1 + 864));
  }
  *(_DWORD *)(v1 + 864) = 0;
  if (*(int *)(v1 + 976) >= 1)
  {
    v48 = 0;
    do
    {
      v49 = *(_QWORD *)(*(_QWORD *)(v1 + 968) + 8 * v48);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v49 + 32))(v49);
      ++v48;
    }
    while (v48 < *(int *)(v1 + 976));
  }
  *(_DWORD *)(v1 + 976) = 0;
  if (*(int *)(v1 + 1000) >= 1)
  {
    v50 = 0;
    do
    {
      v51 = *(_QWORD *)(*(_QWORD *)(v1 + 992) + 8 * v50);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v51 + 32))(v51);
      ++v50;
    }
    while (v50 < *(int *)(v1 + 1000));
  }
  *(_DWORD *)(v1 + 1000) = 0;
  if (*(int *)(v1 + 1024) >= 1)
  {
    v52 = 0;
    do
    {
      v53 = *(_QWORD *)(*(_QWORD *)(v1 + 1016) + 8 * v52);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v53 + 32))(v53);
      ++v52;
    }
    while (v52 < *(int *)(v1 + 1024));
  }
  *(_DWORD *)(v1 + 1024) = 0;
  if (*(int *)(v1 + 1056) >= 1)
  {
    v54 = 0;
    do
    {
      v55 = *(_QWORD *)(*(_QWORD *)(v1 + 1048) + 8 * v54);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v55 + 32))(v55);
      ++v54;
    }
    while (v54 < *(int *)(v1 + 1056));
  }
  *(_DWORD *)(v1 + 1056) = 0;
  if (*(int *)(v1 + 1088) >= 1)
  {
    v56 = 0;
    do
    {
      v57 = *(_QWORD *)(*(_QWORD *)(v1 + 1080) + 8 * v56);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 32))(v57);
      ++v56;
    }
    while (v56 < *(int *)(v1 + 1088));
  }
  *(_DWORD *)(v1 + 1088) = 0;
  if (*(int *)(v1 + 1112) >= 1)
  {
    v58 = 0;
    do
    {
      v59 = *(_QWORD *)(*(_QWORD *)(v1 + 1104) + 8 * v58);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v59 + 32))(v59);
      ++v58;
    }
    while (v58 < *(int *)(v1 + 1112));
  }
  *(_DWORD *)(v1 + 1112) = 0;
  if (*(int *)(v1 + 1136) >= 1)
  {
    v60 = 0;
    do
    {
      v61 = *(_QWORD *)(*(_QWORD *)(v1 + 1128) + 8 * v60);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v61 + 32))(v61);
      ++v60;
    }
    while (v60 < *(int *)(v1 + 1136));
  }
  *(_DWORD *)(v1 + 1136) = 0;
  if (*(int *)(v1 + 1160) >= 1)
  {
    v62 = 0;
    do
    {
      v63 = *(_QWORD *)(*(_QWORD *)(v1 + 1152) + 8 * v62);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v63 + 32))(v63);
      ++v62;
    }
    while (v62 < *(int *)(v1 + 1160));
  }
  *(_DWORD *)(v1 + 1160) = 0;
  if (*(int *)(v1 + 1184) >= 1)
  {
    v64 = 0;
    do
    {
      v65 = *(_QWORD *)(*(_QWORD *)(v1 + 1176) + 8 * v64);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v65 + 32))(v65);
      ++v64;
    }
    while (v64 < *(int *)(v1 + 1184));
  }
  *(_DWORD *)(v1 + 1184) = 0;
  if (*(int *)(v1 + 1208) >= 1)
  {
    v66 = 0;
    do
    {
      v67 = *(_QWORD *)(*(_QWORD *)(v1 + 1200) + 8 * v66);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v67 + 32))(v67);
      ++v66;
    }
    while (v66 < *(int *)(v1 + 1208));
  }
  *(_DWORD *)(v1 + 1208) = 0;
  if (*(int *)(v1 + 1232) >= 1)
  {
    v68 = 0;
    do
    {
      v69 = *(_QWORD *)(*(_QWORD *)(v1 + 1224) + 8 * v68);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v69 + 32))(v69);
      ++v68;
    }
    while (v68 < *(int *)(v1 + 1232));
  }
  *(_DWORD *)(v1 + 1232) = 0;
  if (*(int *)(v1 + 1256) >= 1)
  {
    v70 = 0;
    do
    {
      v71 = *(_QWORD *)(*(_QWORD *)(v1 + 1248) + 8 * v70);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v71 + 32))(v71);
      ++v70;
    }
    while (v70 < *(int *)(v1 + 1256));
  }
  *(_DWORD *)(v1 + 1256) = 0;
  if (*(int *)(v1 + 1280) >= 1)
  {
    v72 = 0;
    do
    {
      v73 = *(_QWORD *)(*(_QWORD *)(v1 + 1272) + 8 * v72);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v73 + 32))(v73);
      ++v72;
    }
    while (v72 < *(int *)(v1 + 1280));
  }
  *(_DWORD *)(v1 + 1280) = 0;
  if (*(int *)(v1 + 1304) >= 1)
  {
    v74 = 0;
    do
    {
      v75 = *(_QWORD *)(*(_QWORD *)(v1 + 1296) + 8 * v74);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v75 + 32))(v75);
      ++v74;
    }
    while (v74 < *(int *)(v1 + 1304));
  }
  *(_DWORD *)(v1 + 1304) = 0;
  if (*(int *)(v1 + 1328) >= 1)
  {
    v76 = 0;
    do
    {
      v77 = *(_QWORD *)(*(_QWORD *)(v1 + 1320) + 8 * v76);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v77 + 32))(v77);
      ++v76;
    }
    while (v76 < *(int *)(v1 + 1328));
  }
  *(_DWORD *)(v1 + 1328) = 0;
  *(_QWORD *)(v1 + 1360) = 0;
  *(_QWORD *)(v1 + 1368) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v3;
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  uint64_t v7;

  v3 = (unint64_t *)((char *)a2 + 8);
  v4 = (unint64_t *)((char *)a2 + 16);
  while (1)
  {
    v5 = (char *)*v3;
    if (*v3 >= *v4 || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    v7 = (TagFallback >> 3) - 1;
    if (v7 <= 0x7A)
      __asm { BR              X9 }
    if ((TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  v5 = this;
  v6 = *(_DWORD *)(this + 1360);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 1360);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_208;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 1360);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_209;
  }
LABEL_208:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 1360);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_210;
  }
LABEL_209:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 1360);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_211;
  }
LABEL_210:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 1360);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_212;
  }
LABEL_211:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 44), a3);
  v6 = *(_DWORD *)(v5 + 1360);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
LABEL_212:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 48), a3);
  if ((*(_DWORD *)(v5 + 1360) & 0x80) != 0)
LABEL_9:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 52), a3);
LABEL_10:
  if (*(int *)(v5 + 64) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 64));
  }
  if (*(int *)(v5 + 88) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(*(_QWORD *)(v5 + 80) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 88));
  }
  if ((*(_BYTE *)(v5 + 1361) & 4) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 432), (uint64_t)a2, a4);
  if (*(int *)(v5 + 112) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_QWORD *)(*(_QWORD *)(v5 + 104) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 112));
  }
  if (*(int *)(v5 + 136) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(_QWORD *)(*(_QWORD *)(v5 + 128) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 136));
  }
  if (*(int *)(v5 + 160) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_QWORD *)(*(_QWORD *)(v5 + 152) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 160));
  }
  if (*(int *)(v5 + 184) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_QWORD *)(*(_QWORD *)(v5 + 176) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 184));
  }
  if (*(int *)(v5 + 208) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_QWORD *)(*(_QWORD *)(v5 + 200) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 208));
  }
  if (*(int *)(v5 + 232) >= 1)
  {
    v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(_QWORD *)(*(_QWORD *)(v5 + 224) + 8 * v14++), a2, a4);
    while (v14 < *(int *)(v5 + 232));
  }
  if (*(int *)(v5 + 256) >= 1)
  {
    v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(_QWORD *)(*(_QWORD *)(v5 + 248) + 8 * v15++), a2, a4);
    while (v15 < *(int *)(v5 + 256));
  }
  if (*(int *)(v5 + 280) >= 1)
  {
    v16 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_QWORD *)(*(_QWORD *)(v5 + 272) + 8 * v16++), a2, a4);
    while (v16 < *(int *)(v5 + 280));
  }
  if (*(int *)(v5 + 304) >= 1)
  {
    v17 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(_QWORD *)(*(_QWORD *)(v5 + 296) + 8 * v17++), a2, a4);
    while (v17 < *(int *)(v5 + 304));
  }
  if (*(int *)(v5 + 328) >= 1)
  {
    v18 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(_QWORD *)(*(_QWORD *)(v5 + 320) + 8 * v18++), a2, a4);
    while (v18 < *(int *)(v5 + 328));
  }
  if (*(int *)(v5 + 352) >= 1)
  {
    v19 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(_QWORD *)(*(_QWORD *)(v5 + 344) + 8 * v19++), a2, a4);
    while (v19 < *(int *)(v5 + 352));
  }
  if (*(int *)(v5 + 376) >= 1)
  {
    v20 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(_QWORD *)(*(_QWORD *)(v5 + 368) + 8 * v20++), a2, a4);
    while (v20 < *(int *)(v5 + 376));
  }
  v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x800000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(_QWORD *)(v5 + 392), (uint64_t)a2, a4);
    v21 = *(_DWORD *)(v5 + 1360);
    if ((v21 & 0x1000000) == 0)
    {
LABEL_56:
      if ((v21 & 0x2000000) == 0)
        goto LABEL_57;
      goto LABEL_216;
    }
  }
  else if ((v21 & 0x1000000) == 0)
  {
    goto LABEL_56;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(_QWORD *)(v5 + 400), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x2000000) == 0)
  {
LABEL_57:
    if ((v21 & 0x4000000) == 0)
      goto LABEL_58;
    goto LABEL_217;
  }
LABEL_216:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, *(_QWORD *)(v5 + 408), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x4000000) == 0)
  {
LABEL_58:
    if ((v21 & 0x8000000) == 0)
      goto LABEL_59;
    goto LABEL_218;
  }
LABEL_217:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, *(_QWORD *)(v5 + 416), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x8000000) == 0)
  {
LABEL_59:
    if ((v21 & 0x10000000) == 0)
      goto LABEL_60;
    goto LABEL_219;
  }
LABEL_218:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(_QWORD *)(v5 + 424), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x10000000) == 0)
  {
LABEL_60:
    if ((v21 & 0x20000000) == 0)
      goto LABEL_61;
    goto LABEL_220;
  }
LABEL_219:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned __int8 *)(v5 + 576), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x20000000) == 0)
  {
LABEL_61:
    if ((v21 & 0x40000000) == 0)
      goto LABEL_62;
LABEL_221:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(_QWORD *)(v5 + 440), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 1360) & 0x80000000) == 0)
      goto LABEL_63;
    goto LABEL_222;
  }
LABEL_220:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned __int8 *)(v5 + 577), (uint64_t)a2, a4);
  v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x40000000) != 0)
    goto LABEL_221;
LABEL_62:
  if ((v21 & 0x80000000) == 0)
    goto LABEL_63;
LABEL_222:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(_QWORD *)(v5 + 448), (uint64_t)a2, a4);
LABEL_63:
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, *(_QWORD *)(v5 + 456), (uint64_t)a2, a4);
    v22 = *(_DWORD *)(v5 + 1364);
    if ((v22 & 2) == 0)
    {
LABEL_65:
      if ((v22 & 4) == 0)
        goto LABEL_66;
      goto LABEL_225;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_65;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(_QWORD *)(v5 + 464), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 4) == 0)
  {
LABEL_66:
    if ((v22 & 8) == 0)
      goto LABEL_67;
    goto LABEL_226;
  }
LABEL_225:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(_QWORD *)(v5 + 472), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 8) == 0)
  {
LABEL_67:
    if ((v22 & 0x10) == 0)
      goto LABEL_68;
    goto LABEL_227;
  }
LABEL_226:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(_QWORD *)(v5 + 480), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x10) == 0)
  {
LABEL_68:
    if ((v22 & 0x20) == 0)
      goto LABEL_69;
    goto LABEL_228;
  }
LABEL_227:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(_QWORD *)(v5 + 488), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x20) == 0)
  {
LABEL_69:
    if ((v22 & 0x40) == 0)
      goto LABEL_70;
    goto LABEL_229;
  }
LABEL_228:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, *(_QWORD *)(v5 + 496), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x40) == 0)
  {
LABEL_70:
    if ((v22 & 0x80) == 0)
      goto LABEL_71;
    goto LABEL_230;
  }
LABEL_229:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(_QWORD *)(v5 + 504), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x80) == 0)
  {
LABEL_71:
    if ((v22 & 0x100) == 0)
      goto LABEL_72;
    goto LABEL_231;
  }
LABEL_230:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(_QWORD *)(v5 + 512), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x100) == 0)
  {
LABEL_72:
    if ((v22 & 0x200) == 0)
      goto LABEL_73;
    goto LABEL_232;
  }
LABEL_231:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(_QWORD *)(v5 + 520), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x200) == 0)
  {
LABEL_73:
    if ((v22 & 0x400) == 0)
      goto LABEL_74;
    goto LABEL_233;
  }
LABEL_232:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(_QWORD *)(v5 + 528), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x400) == 0)
  {
LABEL_74:
    if ((v22 & 0x800) == 0)
      goto LABEL_75;
    goto LABEL_234;
  }
LABEL_233:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, *(_QWORD *)(v5 + 536), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x800) == 0)
  {
LABEL_75:
    if ((v22 & 0x1000) == 0)
      goto LABEL_76;
    goto LABEL_235;
  }
LABEL_234:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, *(_QWORD *)(v5 + 544), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x1000) == 0)
  {
LABEL_76:
    if ((v22 & 0x2000) == 0)
      goto LABEL_77;
    goto LABEL_236;
  }
LABEL_235:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, *(_QWORD *)(v5 + 552), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x2000) == 0)
  {
LABEL_77:
    if ((v22 & 0x4000) == 0)
      goto LABEL_78;
    goto LABEL_237;
  }
LABEL_236:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, *(_QWORD *)(v5 + 560), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x4000) == 0)
  {
LABEL_78:
    if ((v22 & 0x8000) == 0)
      goto LABEL_79;
    goto LABEL_238;
  }
LABEL_237:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, *(_QWORD *)(v5 + 568), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x8000) == 0)
  {
LABEL_79:
    if ((v22 & 0x10000) == 0)
      goto LABEL_80;
    goto LABEL_239;
  }
LABEL_238:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, *(unsigned int *)(v5 + 436), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x10000) == 0)
  {
LABEL_80:
    if ((v22 & 0x20000) == 0)
      goto LABEL_81;
    goto LABEL_240;
  }
LABEL_239:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x31, *(unsigned int *)(v5 + 580), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x20000) == 0)
  {
LABEL_81:
    if ((v22 & 0x40000) == 0)
      goto LABEL_82;
    goto LABEL_241;
  }
LABEL_240:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, *(unsigned int *)(v5 + 584), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x40000) == 0)
  {
LABEL_82:
    if ((v22 & 0x80000) == 0)
      goto LABEL_83;
    goto LABEL_242;
  }
LABEL_241:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, *(unsigned int *)(v5 + 588), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x80000) == 0)
  {
LABEL_83:
    if ((v22 & 0x100000) == 0)
      goto LABEL_84;
    goto LABEL_243;
  }
LABEL_242:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, *(unsigned int *)(v5 + 592), (uint64_t)a2, a4);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x100000) == 0)
  {
LABEL_84:
    if ((v22 & 0x200000) == 0)
      goto LABEL_85;
    goto LABEL_244;
  }
LABEL_243:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, (uint64_t)a2, *(float *)(v5 + 596), a3);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x200000) == 0)
  {
LABEL_85:
    if ((v22 & 0x400000) == 0)
      goto LABEL_86;
    goto LABEL_245;
  }
LABEL_244:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, (uint64_t)a2, *(float *)(v5 + 600), a3);
  v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x400000) == 0)
  {
LABEL_86:
    if ((v22 & 0x800000) == 0)
      goto LABEL_88;
    goto LABEL_87;
  }
LABEL_245:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, *(unsigned int *)(v5 + 604), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 1364) & 0x800000) != 0)
LABEL_87:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, *(unsigned __int8 *)(v5 + 578), (uint64_t)a2, a4);
LABEL_88:
  if (*(int *)(v5 + 616) >= 1)
  {
    v23 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x39, *(_QWORD *)(*(_QWORD *)(v5 + 608) + 8 * v23++), a2, a4);
    while (v23 < *(int *)(v5 + 616));
  }
  if ((*(_BYTE *)(v5 + 1367) & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3A, *(_QWORD *)(v5 + 632), (uint64_t)a2, a4);
  if (*(int *)(v5 + 648) >= 1)
  {
    v24 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3B, *(_QWORD *)(*(_QWORD *)(v5 + 640) + 8 * v24++), a2, a4);
    while (v24 < *(int *)(v5 + 648));
  }
  v25 = *(_DWORD *)(v5 + 1364);
  if ((v25 & 0x8000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, *(_QWORD *)(v5 + 664), (uint64_t)a2, a4);
    v25 = *(_DWORD *)(v5 + 1364);
    if ((v25 & 0x10000000) == 0)
    {
LABEL_98:
      if ((v25 & 0x20000000) == 0)
        goto LABEL_100;
      goto LABEL_99;
    }
  }
  else if ((v25 & 0x10000000) == 0)
  {
    goto LABEL_98;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(_QWORD *)(v5 + 672), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 1364) & 0x20000000) != 0)
LABEL_99:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, *(_QWORD *)(v5 + 680), (uint64_t)a2, a4);
LABEL_100:
  if (*(int *)(v5 + 696) >= 1)
  {
    v26 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, *(_QWORD *)(*(_QWORD *)(v5 + 688) + 8 * v26++), a2, a4);
    while (v26 < *(int *)(v5 + 696));
  }
  if ((*(_DWORD *)(v5 + 1364) & 0x80000000) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x40, *(unsigned int *)(v5 + 808), (uint64_t)a2, a4);
  if (*(int *)(v5 + 720) >= 1)
  {
    v27 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x41, *(_QWORD *)(*(_QWORD *)(v5 + 712) + 8 * v27++), a2, a4);
    while (v27 < *(int *)(v5 + 720));
  }
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, *(_QWORD *)(v5 + 736), (uint64_t)a2, a4);
    v28 = *(_DWORD *)(v5 + 1368);
    if ((v28 & 4) == 0)
    {
LABEL_110:
      if ((v28 & 8) == 0)
        goto LABEL_111;
      goto LABEL_252;
    }
  }
  else if ((v28 & 4) == 0)
  {
    goto LABEL_110;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, *(_QWORD *)(v5 + 744), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 8) == 0)
  {
LABEL_111:
    if ((v28 & 0x10) == 0)
      goto LABEL_112;
    goto LABEL_253;
  }
LABEL_252:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x44, *(_QWORD *)(v5 + 752), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x10) == 0)
  {
LABEL_112:
    if ((v28 & 0x20) == 0)
      goto LABEL_113;
    goto LABEL_254;
  }
LABEL_253:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x45, *(_QWORD *)(v5 + 760), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x20) == 0)
  {
LABEL_113:
    if ((v28 & 0x40) == 0)
      goto LABEL_114;
    goto LABEL_255;
  }
LABEL_254:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(_QWORD *)(v5 + 768), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x40) == 0)
  {
LABEL_114:
    if ((v28 & 0x80) == 0)
      goto LABEL_115;
    goto LABEL_256;
  }
LABEL_255:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, *(_QWORD *)(v5 + 776), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x80) == 0)
  {
LABEL_115:
    if ((v28 & 0x100) == 0)
      goto LABEL_116;
    goto LABEL_257;
  }
LABEL_256:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(_QWORD *)(v5 + 784), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x100) == 0)
  {
LABEL_116:
    if ((v28 & 0x200) == 0)
      goto LABEL_117;
    goto LABEL_258;
  }
LABEL_257:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(_QWORD *)(v5 + 792), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x200) == 0)
  {
LABEL_117:
    if ((v28 & 0x400) == 0)
      goto LABEL_118;
    goto LABEL_259;
  }
LABEL_258:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(_QWORD *)(v5 + 800), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x400) == 0)
  {
LABEL_118:
    if ((v28 & 0x800) == 0)
      goto LABEL_119;
    goto LABEL_260;
  }
LABEL_259:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(_QWORD *)(v5 + 816), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x800) == 0)
  {
LABEL_119:
    if ((v28 & 0x1000) == 0)
      goto LABEL_120;
    goto LABEL_261;
  }
LABEL_260:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, *(_QWORD *)(v5 + 824), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x1000) == 0)
  {
LABEL_120:
    if ((v28 & 0x2000) == 0)
      goto LABEL_121;
    goto LABEL_262;
  }
LABEL_261:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, *(_QWORD *)(v5 + 832), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x2000) == 0)
  {
LABEL_121:
    if ((v28 & 0x4000) == 0)
      goto LABEL_122;
    goto LABEL_263;
  }
LABEL_262:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4E, *(_QWORD *)(v5 + 840), (uint64_t)a2, a4);
  v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x4000) == 0)
  {
LABEL_122:
    if ((v28 & 0x8000) == 0)
      goto LABEL_124;
    goto LABEL_123;
  }
LABEL_263:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4F, *(_QWORD *)(v5 + 848), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 1368) & 0x8000) != 0)
LABEL_123:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, *(unsigned __int8 *)(v5 + 579), (uint64_t)a2, a4);
LABEL_124:
  if (*(int *)(v5 + 864) >= 1)
  {
    v29 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x51, *(_QWORD *)(*(_QWORD *)(v5 + 856) + 8 * v29++), a2, a4);
    while (v29 < *(int *)(v5 + 864));
  }
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x20000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x52, *(_QWORD *)(v5 + 880), (uint64_t)a2, a4);
    v30 = *(_DWORD *)(v5 + 1368);
    if ((v30 & 0x40000) == 0)
    {
LABEL_129:
      if ((v30 & 0x80000) == 0)
        goto LABEL_130;
      goto LABEL_267;
    }
  }
  else if ((v30 & 0x40000) == 0)
  {
    goto LABEL_129;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x53, *(_QWORD *)(v5 + 888), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x80000) == 0)
  {
LABEL_130:
    if ((v30 & 0x100000) == 0)
      goto LABEL_131;
    goto LABEL_268;
  }
LABEL_267:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x54, *(unsigned __int8 *)(v5 + 1044), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x100000) == 0)
  {
LABEL_131:
    if ((v30 & 0x200000) == 0)
      goto LABEL_132;
    goto LABEL_269;
  }
LABEL_268:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x55, *(unsigned int *)(v5 + 812), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x200000) == 0)
  {
LABEL_132:
    if ((v30 & 0x400000) == 0)
      goto LABEL_133;
    goto LABEL_270;
  }
LABEL_269:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x56, *(unsigned int *)(v5 + 896), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x400000) == 0)
  {
LABEL_133:
    if ((v30 & 0x800000) == 0)
      goto LABEL_134;
    goto LABEL_271;
  }
LABEL_270:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x57, *(unsigned int *)(v5 + 900), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x800000) == 0)
  {
LABEL_134:
    if ((v30 & 0x1000000) == 0)
      goto LABEL_135;
    goto LABEL_272;
  }
LABEL_271:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x58, *(_QWORD *)(v5 + 904), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x1000000) == 0)
  {
LABEL_135:
    if ((v30 & 0x2000000) == 0)
      goto LABEL_136;
    goto LABEL_275;
  }
LABEL_272:
  v50 = *(_QWORD *)(v5 + 912);
  if (!v50)
    v50 = *(_QWORD *)(awd::metrics::LocationGPSSessionStatistics::default_instance_ + 912);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x59, v50, a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x2000000) == 0)
  {
LABEL_136:
    if ((v30 & 0x4000000) == 0)
      goto LABEL_137;
    goto LABEL_276;
  }
LABEL_275:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5A, *(unsigned int *)(v5 + 920), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x4000000) == 0)
  {
LABEL_137:
    if ((v30 & 0x8000000) == 0)
      goto LABEL_138;
    goto LABEL_277;
  }
LABEL_276:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5B, *(unsigned int *)(v5 + 924), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x8000000) == 0)
  {
LABEL_138:
    if ((v30 & 0x10000000) == 0)
      goto LABEL_139;
    goto LABEL_278;
  }
LABEL_277:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5C, *(unsigned int *)(v5 + 928), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x10000000) == 0)
  {
LABEL_139:
    if ((v30 & 0x20000000) == 0)
      goto LABEL_140;
    goto LABEL_279;
  }
LABEL_278:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5D, *(unsigned int *)(v5 + 932), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x20000000) == 0)
  {
LABEL_140:
    if ((v30 & 0x40000000) == 0)
      goto LABEL_141;
LABEL_280:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5F, *(unsigned int *)(v5 + 940), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 1368) & 0x80000000) == 0)
      goto LABEL_142;
    goto LABEL_281;
  }
LABEL_279:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5E, *(unsigned int *)(v5 + 936), (uint64_t)a2, a4);
  v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x40000000) != 0)
    goto LABEL_280;
LABEL_141:
  if ((v30 & 0x80000000) == 0)
    goto LABEL_142;
LABEL_281:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x60, *(unsigned int *)(v5 + 944), (uint64_t)a2, a4);
LABEL_142:
  v31 = *(_DWORD *)(v5 + 1372);
  if ((v31 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x61, *(unsigned int *)(v5 + 948), (uint64_t)a2, a4);
    v31 = *(_DWORD *)(v5 + 1372);
    if ((v31 & 2) == 0)
    {
LABEL_144:
      if ((v31 & 4) == 0)
        goto LABEL_145;
      goto LABEL_284;
    }
  }
  else if ((v31 & 2) == 0)
  {
    goto LABEL_144;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x62, *(unsigned int *)(v5 + 952), (uint64_t)a2, a4);
  v31 = *(_DWORD *)(v5 + 1372);
  if ((v31 & 4) == 0)
  {
LABEL_145:
    if ((v31 & 8) == 0)
      goto LABEL_146;
    goto LABEL_285;
  }
LABEL_284:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x63, *(unsigned int *)(v5 + 956), (uint64_t)a2, a4);
  v31 = *(_DWORD *)(v5 + 1372);
  if ((v31 & 8) == 0)
  {
LABEL_146:
    if ((v31 & 0x10) == 0)
      goto LABEL_147;
    goto LABEL_286;
  }
LABEL_285:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x64, *(unsigned int *)(v5 + 960), (uint64_t)a2, a4);
  v31 = *(_DWORD *)(v5 + 1372);
  if ((v31 & 0x10) == 0)
  {
LABEL_147:
    if ((v31 & 0x20) == 0)
      goto LABEL_149;
    goto LABEL_148;
  }
LABEL_286:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x65, *(unsigned int *)(v5 + 964), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 1372) & 0x20) != 0)
LABEL_148:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x66, *(unsigned int *)(v5 + 1040), (uint64_t)a2, a4);
LABEL_149:
  if (*(int *)(v5 + 976) >= 1)
  {
    v32 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x67, *(_QWORD *)(*(_QWORD *)(v5 + 968) + 8 * v32++), a2, a4);
    while (v32 < *(int *)(v5 + 976));
  }
  if (*(int *)(v5 + 1000) >= 1)
  {
    v33 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x68, *(_QWORD *)(*(_QWORD *)(v5 + 992) + 8 * v33++), a2, a4);
    while (v33 < *(int *)(v5 + 1000));
  }
  if (*(int *)(v5 + 1024) >= 1)
  {
    v34 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x69, *(_QWORD *)(*(_QWORD *)(v5 + 1016) + 8 * v34++), a2, a4);
    while (v34 < *(int *)(v5 + 1024));
  }
  if (*(int *)(v5 + 1056) >= 1)
  {
    v35 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6A, *(_QWORD *)(*(_QWORD *)(v5 + 1048) + 8 * v35++), a2, a4);
    while (v35 < *(int *)(v5 + 1056));
  }
  if ((*(_BYTE *)(v5 + 1373) & 4) != 0)
  {
    v36 = *(_QWORD *)(v5 + 1072);
    if (!v36)
      v36 = *(_QWORD *)(awd::metrics::LocationGPSSessionStatistics::default_instance_ + 1072);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6B, v36, a2, a4);
  }
  if (*(int *)(v5 + 1088) >= 1)
  {
    v37 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6C, *(_QWORD *)(*(_QWORD *)(v5 + 1080) + 8 * v37++), a2, a4);
    while (v37 < *(int *)(v5 + 1088));
  }
  if (*(int *)(v5 + 1112) >= 1)
  {
    v38 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6D, *(_QWORD *)(*(_QWORD *)(v5 + 1104) + 8 * v38++), a2, a4);
    while (v38 < *(int *)(v5 + 1112));
  }
  if (*(int *)(v5 + 1136) >= 1)
  {
    v39 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6E, *(_QWORD *)(*(_QWORD *)(v5 + 1128) + 8 * v39++), a2, a4);
    while (v39 < *(int *)(v5 + 1136));
  }
  if (*(int *)(v5 + 1160) >= 1)
  {
    v40 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6F, *(_QWORD *)(*(_QWORD *)(v5 + 1152) + 8 * v40++), a2, a4);
    while (v40 < *(int *)(v5 + 1160));
  }
  if (*(int *)(v5 + 1184) >= 1)
  {
    v41 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x70, *(_QWORD *)(*(_QWORD *)(v5 + 1176) + 8 * v41++), a2, a4);
    while (v41 < *(int *)(v5 + 1184));
  }
  if (*(int *)(v5 + 1208) >= 1)
  {
    v42 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x71, *(_QWORD *)(*(_QWORD *)(v5 + 1200) + 8 * v42++), a2, a4);
    while (v42 < *(int *)(v5 + 1208));
  }
  if (*(int *)(v5 + 1232) >= 1)
  {
    v43 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x72, *(_QWORD *)(*(_QWORD *)(v5 + 1224) + 8 * v43++), a2, a4);
    while (v43 < *(int *)(v5 + 1232));
  }
  if (*(int *)(v5 + 1256) >= 1)
  {
    v44 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x73, *(_QWORD *)(*(_QWORD *)(v5 + 1248) + 8 * v44++), a2, a4);
    while (v44 < *(int *)(v5 + 1256));
  }
  if (*(int *)(v5 + 1280) >= 1)
  {
    v45 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x74, *(_QWORD *)(*(_QWORD *)(v5 + 1272) + 8 * v45++), a2, a4);
    while (v45 < *(int *)(v5 + 1280));
  }
  if (*(int *)(v5 + 1304) >= 1)
  {
    v46 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x75, *(_QWORD *)(*(_QWORD *)(v5 + 1296) + 8 * v46++), a2, a4);
    while (v46 < *(int *)(v5 + 1304));
  }
  v47 = *(_DWORD *)(v5 + 1372);
  if ((v47 & 0x200000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x76, *(unsigned __int8 *)(v5 + 1045), (uint64_t)a2, a4);
    v47 = *(_DWORD *)(v5 + 1372);
  }
  if ((v47 & 0x400000) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x77, *(unsigned __int8 *)(v5 + 1046), (uint64_t)a2, a4);
  if (*(int *)(v5 + 1328) >= 1)
  {
    v48 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x78, *(_QWORD *)(*(_QWORD *)(v5 + 1320) + 8 * v48++), a2, a4);
    while (v48 < *(int *)(v5 + 1328));
  }
  v49 = *(_DWORD *)(v5 + 1372);
  if ((v49 & 0x1000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x79, *(unsigned int *)(v5 + 1344), (uint64_t)a2, a4);
    v49 = *(_DWORD *)(v5 + 1372);
    if ((v49 & 0x2000000) == 0)
    {
LABEL_204:
      if ((v49 & 0x4000000) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7B, *(unsigned int *)(v5 + 1352), (uint64_t)a2, a4);
    }
  }
  else if ((v49 & 0x2000000) == 0)
  {
    goto LABEL_204;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7A, *(unsigned int *)(v5 + 1348), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 1372) & 0x4000000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7B, *(unsigned int *)(v5 + 1352), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics::ByteSize(awd::metrics::LocationGPSSessionStatistics *this)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  unsigned int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;
  unsigned int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;
  int v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  int v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v47;
  int v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v51;
  int v52;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v53;
  int v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  int v56;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v57;
  int v58;
  unsigned int v59;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v60;
  int v61;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v62;
  int v63;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v64;
  int v65;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v66;
  int v67;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v68;
  int v69;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v70;
  int v71;
  awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *v72;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v73;
  int v74;
  int v75;
  int v76;
  int v77;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v78;
  int v79;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v80;
  int v81;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v82;
  int v83;
  int v84;
  int v85;
  uint64_t v86;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v87;
  int v88;
  int v89;
  int v90;
  int v91;
  uint64_t v92;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v93;
  int v94;
  int v95;
  int v96;
  int v97;
  uint64_t v98;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v99;
  int v100;
  int v101;
  int v102;
  int v103;
  uint64_t v104;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v105;
  int v106;
  int v107;
  int v108;
  int v109;
  uint64_t v110;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v111;
  int v112;
  int v113;
  int v114;
  int v115;
  uint64_t v116;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v117;
  int v118;
  int v119;
  int v120;
  int v121;
  uint64_t v122;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v123;
  int v124;
  int v125;
  int v126;
  int v127;
  uint64_t v128;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v129;
  int v130;
  int v131;
  int v132;
  int v133;
  uint64_t v134;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v135;
  int v136;
  int v137;
  int v138;
  int v139;
  uint64_t v140;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v141;
  int v142;
  int v143;
  int v144;
  int v145;
  uint64_t v146;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v147;
  int v148;
  int v149;
  int v150;
  int v151;
  uint64_t v152;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v153;
  int v154;
  int v155;
  int v156;
  int v157;
  uint64_t v158;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v159;
  int v160;
  int v161;
  int v162;
  int v163;
  uint64_t v164;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v165;
  int v166;
  int v167;
  int v168;
  int v169;
  uint64_t v170;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v171;
  int v172;
  int v173;
  int v174;
  int v175;
  uint64_t v176;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v177;
  int v178;
  int v179;
  int v180;
  int v181;
  uint64_t v182;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v183;
  int v184;
  int v185;
  int v186;
  int v187;
  uint64_t v188;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v189;
  int v190;
  int v191;
  int v192;
  int v193;
  uint64_t v194;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v195;
  int v196;
  int v197;
  int v198;
  int v199;
  uint64_t v200;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v201;
  int v202;
  int v203;
  int v204;
  int v205;
  uint64_t v206;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v207;
  int v208;
  int v209;
  int v210;
  int v211;
  uint64_t v212;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v213;
  int v214;
  int v215;
  int v216;
  int v217;
  uint64_t v218;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v219;
  int v220;
  int v221;
  int v222;
  int v223;
  uint64_t v224;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v225;
  int v226;
  int v227;
  int v228;
  int v229;
  uint64_t v230;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v231;
  int v232;
  int v233;
  int v234;
  int v235;
  uint64_t v236;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v237;
  int v238;
  int v239;
  int v240;
  int v241;
  uint64_t v242;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v243;
  int v244;
  int v245;
  int v246;
  int v247;
  uint64_t v248;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v249;
  int v250;
  int v251;
  int v252;
  int v253;
  uint64_t v254;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v255;
  int v256;
  int v257;
  int v258;
  int v259;
  uint64_t v260;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v261;
  int v262;
  int v263;
  int v264;
  int v265;
  uint64_t v266;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v267;
  int v268;
  int v269;
  int v270;
  int v271;
  uint64_t v272;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v273;
  int v274;
  int v275;
  int v276;
  int v277;
  uint64_t v278;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v279;
  int v280;
  int v281;
  int v282;
  uint64_t v283;
  uint64_t v284;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v285;
  int v286;
  int v287;

  v2 = *((_DWORD *)this + 340);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    if ((v2 & 0x400) == 0)
      goto LABEL_38;
    goto LABEL_29;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 340);
    if ((v2 & 2) == 0)
      goto LABEL_17;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_17;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v2 = *((_DWORD *)this + 340);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v3 += v10 + v6 + 1;
LABEL_17:
  if ((v2 & 4) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 3))
        + 1;
    v2 = *((_DWORD *)this + 340);
    if ((v2 & 8) == 0)
    {
LABEL_19:
      if ((v2 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_19;
  }
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 340);
  }
  else
  {
    v15 = 1;
  }
  v3 += v15 + 1;
  if ((v2 & 0x10) != 0)
  {
LABEL_20:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 4))
        + 1;
    v2 = *((_DWORD *)this + 340);
  }
LABEL_21:
  v11 = v3 + 5;
  if ((v2 & 0x20) == 0)
    v11 = v3;
  if ((v2 & 0x40) != 0)
    v11 += 5;
  if ((v2 & 0x80) != 0)
    v4 = v11 + 5;
  else
    v4 = v11;
  if ((v2 & 0x400) != 0)
  {
LABEL_29:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 108);
    if ((v12 & 0x80000000) != 0)
    {
      v13 = 10;
    }
    else if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
      v2 = *((_DWORD *)this + 340);
    }
    else
    {
      v13 = 1;
    }
    v4 += v13 + 1;
  }
LABEL_38:
  if ((v2 & 0x800000) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 49))
        + 2;
    v2 = *((_DWORD *)this + 340);
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                        + 50))
          + 2;
      v2 = *((_DWORD *)this + 340);
      if ((v2 & 0x2000000) == 0)
      {
LABEL_43:
        if ((v2 & 0x4000000) == 0)
          goto LABEL_44;
        goto LABEL_95;
      }
    }
    else if ((v2 & 0x2000000) == 0)
    {
      goto LABEL_43;
    }
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 51))
        + 2;
    v2 = *((_DWORD *)this + 340);
    if ((v2 & 0x4000000) == 0)
    {
LABEL_44:
      if ((v2 & 0x8000000) == 0)
      {
LABEL_46:
        v16 = v4 + 3;
        if ((v2 & 0x10000000) == 0)
          v16 = v4;
        if ((v2 & 0x20000000) != 0)
          v4 = v16 + 3;
        else
          v4 = v16;
        if ((v2 & 0x40000000) != 0)
        {
          v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                            + 55))
              + 2;
          v2 = *((_DWORD *)this + 340);
        }
        if ((v2 & 0x80000000) != 0)
          v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                            + 56))
              + 2;
        goto LABEL_55;
      }
LABEL_45:
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                        + 53))
          + 2;
      v2 = *((_DWORD *)this + 340);
      goto LABEL_46;
    }
LABEL_95:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 52))
        + 2;
    v2 = *((_DWORD *)this + 340);
    if ((v2 & 0x8000000) == 0)
      goto LABEL_46;
    goto LABEL_45;
  }
LABEL_55:
  v17 = *((_DWORD *)this + 341);
  if (!(_BYTE)v17)
    goto LABEL_65;
  if ((v17 & 1) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 57))
        + 2;
    v17 = *((_DWORD *)this + 341);
    if ((v17 & 2) == 0)
    {
LABEL_58:
      if ((v17 & 4) == 0)
        goto LABEL_59;
      goto LABEL_77;
    }
  }
  else if ((v17 & 2) == 0)
  {
    goto LABEL_58;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 58))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 4) == 0)
  {
LABEL_59:
    if ((v17 & 8) == 0)
      goto LABEL_60;
    goto LABEL_78;
  }
LABEL_77:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 59))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 8) == 0)
  {
LABEL_60:
    if ((v17 & 0x10) == 0)
      goto LABEL_61;
    goto LABEL_79;
  }
LABEL_78:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 60))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x10) == 0)
  {
LABEL_61:
    if ((v17 & 0x20) == 0)
      goto LABEL_62;
    goto LABEL_80;
  }
LABEL_79:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 61))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x20) == 0)
  {
LABEL_62:
    if ((v17 & 0x40) == 0)
      goto LABEL_63;
    goto LABEL_81;
  }
LABEL_80:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 62))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x40) == 0)
  {
LABEL_63:
    if ((v17 & 0x80) == 0)
      goto LABEL_65;
    goto LABEL_64;
  }
LABEL_81:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 63))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x80) != 0)
  {
LABEL_64:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 64))
        + 2;
    v17 = *((_DWORD *)this + 341);
  }
LABEL_65:
  if ((v17 & 0xFF00) == 0)
    goto LABEL_103;
  if ((v17 & 0x100) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 65))
        + 2;
    v17 = *((_DWORD *)this + 341);
    if ((v17 & 0x200) == 0)
    {
LABEL_68:
      if ((v17 & 0x400) == 0)
        goto LABEL_69;
      goto LABEL_85;
    }
  }
  else if ((v17 & 0x200) == 0)
  {
    goto LABEL_68;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 66))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x400) == 0)
  {
LABEL_69:
    if ((v17 & 0x800) == 0)
      goto LABEL_70;
    goto LABEL_86;
  }
LABEL_85:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 67))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x800) == 0)
  {
LABEL_70:
    if ((v17 & 0x1000) == 0)
      goto LABEL_71;
    goto LABEL_87;
  }
LABEL_86:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 68))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x1000) == 0)
  {
LABEL_71:
    if ((v17 & 0x2000) == 0)
      goto LABEL_72;
    goto LABEL_88;
  }
LABEL_87:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 69))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x2000) == 0)
  {
LABEL_72:
    if ((v17 & 0x4000) == 0)
      goto LABEL_73;
    goto LABEL_89;
  }
LABEL_88:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 70))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x4000) == 0)
  {
LABEL_73:
    if ((v17 & 0x8000) == 0)
      goto LABEL_103;
    goto LABEL_90;
  }
LABEL_89:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 71))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x8000) == 0)
    goto LABEL_103;
LABEL_90:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 109);
  if ((v18 & 0x80000000) != 0)
  {
    v19 = 10;
  }
  else if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    v17 = *((_DWORD *)this + 341);
  }
  else
  {
    v19 = 1;
  }
  v4 += v19 + 2;
LABEL_103:
  if ((v17 & 0xFF0000) == 0)
    goto LABEL_146;
  if ((v17 & 0x10000) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 145);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v17 = *((_DWORD *)this + 341);
    }
    else
    {
      v21 = 1;
    }
    v4 += v21 + 2;
    if ((v17 & 0x20000) == 0)
    {
LABEL_106:
      if ((v17 & 0x40000) == 0)
        goto LABEL_107;
LABEL_121:
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 147);
      if ((v24 & 0x80000000) != 0)
      {
        v25 = 10;
      }
      else if (v24 >= 0x80)
      {
        v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
        v17 = *((_DWORD *)this + 341);
      }
      else
      {
        v25 = 1;
      }
      v4 += v25 + 2;
      if ((v17 & 0x80000) == 0)
        goto LABEL_133;
      goto LABEL_127;
    }
  }
  else if ((v17 & 0x20000) == 0)
  {
    goto LABEL_106;
  }
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 146);
  if ((v22 & 0x80000000) != 0)
  {
    v23 = 10;
  }
  else if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    v17 = *((_DWORD *)this + 341);
  }
  else
  {
    v23 = 1;
  }
  v4 += v23 + 2;
  if ((v17 & 0x40000) != 0)
    goto LABEL_121;
LABEL_107:
  if ((v17 & 0x80000) != 0)
  {
LABEL_127:
    v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 148);
    if ((v26 & 0x80000000) != 0)
    {
      v27 = 10;
    }
    else if (v26 >= 0x80)
    {
      v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
      v17 = *((_DWORD *)this + 341);
    }
    else
    {
      v27 = 1;
    }
    v4 += v27 + 2;
  }
LABEL_133:
  v28 = v4 + 6;
  if ((v17 & 0x100000) == 0)
    v28 = v4;
  if ((v17 & 0x200000) != 0)
    v29 = v28 + 6;
  else
    v29 = v28;
  if ((v17 & 0x400000) != 0)
  {
    v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 151);
    if (v30 >= 0x80)
    {
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30);
      v17 = *((_DWORD *)this + 341);
    }
    else
    {
      v31 = 1;
    }
    v29 += v31 + 2;
  }
  if ((v17 & 0x800000) != 0)
    v4 = v29 + 3;
  else
    v4 = v29;
LABEL_146:
  if (!(v17 >> 25))
    goto LABEL_163;
  if ((v17 & 0x2000000) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 79))
        + 2;
    v17 = *((_DWORD *)this + 341);
    if ((v17 & 0x8000000) == 0)
    {
LABEL_149:
      if ((v17 & 0x10000000) == 0)
        goto LABEL_150;
      goto LABEL_155;
    }
  }
  else if ((v17 & 0x8000000) == 0)
  {
    goto LABEL_149;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 83))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x10000000) == 0)
  {
LABEL_150:
    if ((v17 & 0x20000000) == 0)
      goto LABEL_151;
LABEL_156:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 85))
        + 2;
    if ((*((_DWORD *)this + 341) & 0x80000000) == 0)
      goto LABEL_163;
    goto LABEL_157;
  }
LABEL_155:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 84))
      + 2;
  v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x20000000) != 0)
    goto LABEL_156;
LABEL_151:
  if ((v17 & 0x80000000) == 0)
    goto LABEL_163;
LABEL_157:
  v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 202);
  if ((v32 & 0x80000000) != 0)
  {
    v33 = 10;
  }
  else if (v32 >= 0x80)
  {
    v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
  }
  else
  {
    v33 = 1;
  }
  v4 += v33 + 2;
LABEL_163:
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x1FE) == 0)
    goto LABEL_172;
  if ((v34 & 2) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 92))
        + 2;
    v34 = *((_DWORD *)this + 342);
    if ((v34 & 4) == 0)
    {
LABEL_166:
      if ((v34 & 8) == 0)
        goto LABEL_167;
      goto LABEL_207;
    }
  }
  else if ((v34 & 4) == 0)
  {
    goto LABEL_166;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 93))
      + 2;
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 8) == 0)
  {
LABEL_167:
    if ((v34 & 0x10) == 0)
      goto LABEL_168;
    goto LABEL_208;
  }
LABEL_207:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 94))
      + 2;
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x10) == 0)
  {
LABEL_168:
    if ((v34 & 0x20) == 0)
      goto LABEL_169;
    goto LABEL_209;
  }
LABEL_208:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 95))
      + 2;
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x20) == 0)
  {
LABEL_169:
    if ((v34 & 0x40) == 0)
      goto LABEL_170;
    goto LABEL_210;
  }
LABEL_209:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 96))
      + 2;
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x40) == 0)
  {
LABEL_170:
    if ((v34 & 0x80) == 0)
      goto LABEL_172;
    goto LABEL_171;
  }
LABEL_210:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 97))
      + 2;
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x80) != 0)
  {
LABEL_171:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 98))
        + 2;
    v34 = *((_DWORD *)this + 342);
  }
LABEL_172:
  if ((v34 & 0xFF00) == 0)
    goto LABEL_183;
  if ((v34 & 0x100) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 99))
        + 2;
    v34 = *((_DWORD *)this + 342);
    if ((v34 & 0x200) == 0)
    {
LABEL_175:
      if ((v34 & 0x400) == 0)
        goto LABEL_176;
      goto LABEL_214;
    }
  }
  else if ((v34 & 0x200) == 0)
  {
    goto LABEL_175;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 100))
      + 2;
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x400) == 0)
  {
LABEL_176:
    if ((v34 & 0x800) == 0)
      goto LABEL_177;
    goto LABEL_215;
  }
LABEL_214:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 102))
      + 2;
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x800) == 0)
  {
LABEL_177:
    if ((v34 & 0x1000) == 0)
      goto LABEL_178;
    goto LABEL_216;
  }
LABEL_215:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 103))
      + 2;
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x1000) == 0)
  {
LABEL_178:
    if ((v34 & 0x2000) == 0)
      goto LABEL_179;
    goto LABEL_217;
  }
LABEL_216:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 104))
      + 2;
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x2000) == 0)
  {
LABEL_179:
    if ((v34 & 0x4000) == 0)
      goto LABEL_181;
    goto LABEL_180;
  }
LABEL_217:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 105))
      + 2;
  v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x4000) != 0)
  {
LABEL_180:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 106))
        + 2;
    v34 = *((_DWORD *)this + 342);
  }
LABEL_181:
  if ((v34 & 0x8000) != 0)
    v4 += 3;
LABEL_183:
  if ((v34 & 0x1FE0000) == 0)
    goto LABEL_195;
  if ((v34 & 0x20000) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 110))
        + 2;
    v34 = *((_DWORD *)this + 342);
  }
  if ((v34 & 0x40000) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 111))
        + 2;
    v34 = *((_DWORD *)this + 342);
  }
  if ((v34 & 0x80000) != 0)
    v4 += 3;
  if ((v34 & 0x100000) != 0)
  {
    v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 203);
    if ((v35 & 0x80000000) != 0)
    {
      v36 = 10;
    }
    else if (v35 >= 0x80)
    {
      v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
      v34 = *((_DWORD *)this + 342);
    }
    else
    {
      v36 = 1;
    }
    v4 += v36 + 2;
    if ((v34 & 0x200000) == 0)
    {
LABEL_192:
      if ((v34 & 0x400000) == 0)
        goto LABEL_193;
      goto LABEL_263;
    }
  }
  else if ((v34 & 0x200000) == 0)
  {
    goto LABEL_192;
  }
  v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 224);
  if ((v55 & 0x80000000) != 0)
  {
    v56 = 10;
  }
  else if (v55 >= 0x80)
  {
    v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
    v34 = *((_DWORD *)this + 342);
  }
  else
  {
    v56 = 1;
  }
  v4 += v56 + 2;
  if ((v34 & 0x400000) == 0)
  {
LABEL_193:
    if ((v34 & 0x800000) == 0)
      goto LABEL_195;
    goto LABEL_194;
  }
LABEL_263:
  v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 225);
  if ((v57 & 0x80000000) != 0)
  {
    v58 = 10;
  }
  else if (v57 >= 0x80)
  {
    v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57);
    v34 = *((_DWORD *)this + 342);
  }
  else
  {
    v58 = 1;
  }
  v4 += v58 + 2;
  if ((v34 & 0x800000) != 0)
  {
LABEL_194:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 113))
        + 2;
    v34 = *((_DWORD *)this + 342);
  }
LABEL_195:
  if (!HIBYTE(v34))
    goto LABEL_272;
  if ((v34 & 0x1000000) != 0)
  {
    v37 = (awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *)*((_QWORD *)this + 114);
    if (!v37)
      v37 = *(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics **)(awd::metrics::LocationGPSSessionStatistics::default_instance_
                                                                                           + 912);
    v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::ByteSize(v37);
    v39 = (int)v38;
    if (v38 >= 0x80)
      v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
    else
      v40 = 1;
    v4 += v39 + v40 + 2;
    v34 = *((_DWORD *)this + 342);
    if ((v34 & 0x2000000) == 0)
    {
LABEL_198:
      if ((v34 & 0x4000000) == 0)
        goto LABEL_199;
      goto LABEL_232;
    }
  }
  else if ((v34 & 0x2000000) == 0)
  {
    goto LABEL_198;
  }
  v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 230);
  if (v41 >= 0x80)
  {
    v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
    v34 = *((_DWORD *)this + 342);
  }
  else
  {
    v42 = 1;
  }
  v4 += v42 + 2;
  if ((v34 & 0x4000000) == 0)
  {
LABEL_199:
    if ((v34 & 0x8000000) == 0)
      goto LABEL_200;
    goto LABEL_236;
  }
LABEL_232:
  v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 231);
  if (v43 >= 0x80)
  {
    v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
    v34 = *((_DWORD *)this + 342);
  }
  else
  {
    v44 = 1;
  }
  v4 += v44 + 2;
  if ((v34 & 0x8000000) == 0)
  {
LABEL_200:
    if ((v34 & 0x10000000) == 0)
      goto LABEL_201;
    goto LABEL_240;
  }
LABEL_236:
  v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 232);
  if (v45 >= 0x80)
  {
    v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
    v34 = *((_DWORD *)this + 342);
  }
  else
  {
    v46 = 1;
  }
  v4 += v46 + 2;
  if ((v34 & 0x10000000) == 0)
  {
LABEL_201:
    if ((v34 & 0x20000000) == 0)
      goto LABEL_202;
    goto LABEL_244;
  }
LABEL_240:
  v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 233);
  if (v47 >= 0x80)
  {
    v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
    v34 = *((_DWORD *)this + 342);
  }
  else
  {
    v48 = 1;
  }
  v4 += v48 + 2;
  if ((v34 & 0x20000000) == 0)
  {
LABEL_202:
    if ((v34 & 0x40000000) == 0)
      goto LABEL_203;
    goto LABEL_248;
  }
LABEL_244:
  v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 234);
  if (v49 >= 0x80)
  {
    v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
    v34 = *((_DWORD *)this + 342);
  }
  else
  {
    v50 = 1;
  }
  v4 += v50 + 2;
  if ((v34 & 0x40000000) == 0)
  {
LABEL_203:
    if ((v34 & 0x80000000) == 0)
      goto LABEL_272;
    goto LABEL_252;
  }
LABEL_248:
  v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 235);
  if (v51 >= 0x80)
  {
    v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
    v34 = *((_DWORD *)this + 342);
  }
  else
  {
    v52 = 1;
  }
  v4 += v52 + 2;
  if ((v34 & 0x80000000) != 0)
  {
LABEL_252:
    v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 236);
    if (v53 >= 0x80)
      v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53);
    else
      v54 = 1;
    v4 += v54 + 2;
  }
LABEL_272:
  v59 = *((_DWORD *)this + 343);
  if (!(_BYTE)v59)
    goto LABEL_279;
  if ((v59 & 1) != 0)
  {
    v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 237);
    if (v60 >= 0x80)
    {
      v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60);
      v59 = *((_DWORD *)this + 343);
    }
    else
    {
      v61 = 1;
    }
    v4 += v61 + 2;
    if ((v59 & 2) == 0)
    {
LABEL_275:
      if ((v59 & 4) == 0)
        goto LABEL_276;
      goto LABEL_289;
    }
  }
  else if ((v59 & 2) == 0)
  {
    goto LABEL_275;
  }
  v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 238);
  if (v62 >= 0x80)
  {
    v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62);
    v59 = *((_DWORD *)this + 343);
  }
  else
  {
    v63 = 1;
  }
  v4 += v63 + 2;
  if ((v59 & 4) == 0)
  {
LABEL_276:
    if ((v59 & 8) == 0)
      goto LABEL_277;
    goto LABEL_293;
  }
LABEL_289:
  v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 239);
  if (v64 >= 0x80)
  {
    v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64);
    v59 = *((_DWORD *)this + 343);
  }
  else
  {
    v65 = 1;
  }
  v4 += v65 + 2;
  if ((v59 & 8) == 0)
  {
LABEL_277:
    if ((v59 & 0x10) == 0)
      goto LABEL_278;
    goto LABEL_297;
  }
LABEL_293:
  v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 240);
  if (v66 >= 0x80)
  {
    v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66);
    v59 = *((_DWORD *)this + 343);
  }
  else
  {
    v67 = 1;
  }
  v4 += v67 + 2;
  if ((v59 & 0x10) == 0)
  {
LABEL_278:
    if ((v59 & 0x20) == 0)
      goto LABEL_279;
LABEL_301:
    v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 260);
    if (v70 >= 0x80)
    {
      v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70);
      v59 = *((_DWORD *)this + 343);
    }
    else
    {
      v71 = 1;
    }
    v4 += v71 + 2;
    if ((v59 & 0x400) == 0)
      goto LABEL_311;
    goto LABEL_305;
  }
LABEL_297:
  v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 241);
  if (v68 >= 0x80)
  {
    v69 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68);
    v59 = *((_DWORD *)this + 343);
  }
  else
  {
    v69 = 1;
  }
  v4 += v69 + 2;
  if ((v59 & 0x20) != 0)
    goto LABEL_301;
LABEL_279:
  if ((v59 & 0x400) == 0)
    goto LABEL_311;
LABEL_305:
  v72 = (awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *)*((_QWORD *)this + 134);
  if (!v72)
    v72 = *(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo **)(awd::metrics::LocationGPSSessionStatistics::default_instance_
                                                                                         + 1072);
  v73 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::ByteSize(v72);
  v74 = (int)v73;
  if (v73 >= 0x80)
    v75 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v73);
  else
    v75 = 1;
  v4 += v74 + v75 + 2;
  v59 = *((_DWORD *)this + 343);
LABEL_311:
  v76 = v4 + 3;
  if ((v59 & 0x200000) == 0)
    v76 = v4;
  if ((v59 & 0x400000) != 0)
    v76 += 3;
  if ((v59 & 0x1FE00000) != 0)
    v77 = v76;
  else
    v77 = v4;
  if (HIBYTE(v59))
  {
    if ((v59 & 0x1000000) != 0)
    {
      v78 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 336);
      if ((v78 & 0x80000000) != 0)
      {
        v79 = 10;
      }
      else if (v78 >= 0x80)
      {
        v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v78);
        v59 = *((_DWORD *)this + 343);
      }
      else
      {
        v79 = 1;
      }
      v77 += v79 + 2;
      if ((v59 & 0x2000000) == 0)
      {
LABEL_321:
        if ((v59 & 0x4000000) == 0)
          goto LABEL_341;
        goto LABEL_335;
      }
    }
    else if ((v59 & 0x2000000) == 0)
    {
      goto LABEL_321;
    }
    v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 337);
    if ((v80 & 0x80000000) != 0)
    {
      v81 = 10;
    }
    else if (v80 >= 0x80)
    {
      v81 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v80);
      v59 = *((_DWORD *)this + 343);
    }
    else
    {
      v81 = 1;
    }
    v77 += v81 + 2;
    if ((v59 & 0x4000000) != 0)
    {
LABEL_335:
      v82 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 338);
      if ((v82 & 0x80000000) != 0)
      {
        v83 = 10;
      }
      else if (v82 >= 0x80)
      {
        v83 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v82);
      }
      else
      {
        v83 = 1;
      }
      v77 += v83 + 2;
    }
  }
LABEL_341:
  v84 = *((_DWORD *)this + 16);
  v85 = v84 + v77;
  if (v84 >= 1)
  {
    v86 = 0;
    do
    {
      v87 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(*((_QWORD *)this + 7) + 8 * v86));
      v88 = (int)v87;
      if (v87 >= 0x80)
        v89 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v87);
      else
        v89 = 1;
      v85 += v88 + v89;
      ++v86;
    }
    while (v86 < *((int *)this + 16));
  }
  v90 = *((_DWORD *)this + 22);
  v91 = v90 + v85;
  if (v90 >= 1)
  {
    v92 = 0;
    do
    {
      v93 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(*((_QWORD *)this + 10) + 8 * v92));
      v94 = (int)v93;
      if (v93 >= 0x80)
        v95 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v93);
      else
        v95 = 1;
      v91 += v94 + v95;
      ++v92;
    }
    while (v92 < *((int *)this + 22));
  }
  v96 = *((_DWORD *)this + 28);
  v97 = v96 + v91;
  if (v96 >= 1)
  {
    v98 = 0;
    do
    {
      v99 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData **)(*((_QWORD *)this + 13) + 8 * v98));
      v100 = (int)v99;
      if (v99 >= 0x80)
        v101 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v99);
      else
        v101 = 1;
      v97 += v100 + v101;
      ++v98;
    }
    while (v98 < *((int *)this + 28));
  }
  v102 = *((_DWORD *)this + 34);
  v103 = v102 + v97;
  if (v102 >= 1)
  {
    v104 = 0;
    do
    {
      v105 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)this + 16) + 8 * v104));
      v106 = (int)v105;
      if (v105 >= 0x80)
        v107 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v105);
      else
        v107 = 1;
      v103 += v106 + v107;
      ++v104;
    }
    while (v104 < *((int *)this + 34));
  }
  v108 = *((_DWORD *)this + 40);
  v109 = v108 + v103;
  if (v108 >= 1)
  {
    v110 = 0;
    do
    {
      v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)this + 19) + 8 * v110));
      v112 = (int)v111;
      if (v111 >= 0x80)
        v113 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v111);
      else
        v113 = 1;
      v109 += v112 + v113;
      ++v110;
    }
    while (v110 < *((int *)this + 40));
  }
  v114 = *((_DWORD *)this + 46);
  v115 = v114 + v109;
  if (v114 >= 1)
  {
    v116 = 0;
    do
    {
      v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)this + 22) + 8 * v116));
      v118 = (int)v117;
      if (v117 >= 0x80)
        v119 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v117);
      else
        v119 = 1;
      v115 += v118 + v119;
      ++v116;
    }
    while (v116 < *((int *)this + 46));
  }
  v120 = *((_DWORD *)this + 52);
  v121 = v115 + 2 * v120;
  if (v120 >= 1)
  {
    v122 = 0;
    do
    {
      v123 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)this + 25) + 8 * v122));
      v124 = (int)v123;
      if (v123 >= 0x80)
        v125 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v123);
      else
        v125 = 1;
      v121 += v124 + v125;
      ++v122;
    }
    while (v122 < *((int *)this + 52));
  }
  v126 = *((_DWORD *)this + 58);
  v127 = v121 + 2 * v126;
  if (v126 >= 1)
  {
    v128 = 0;
    do
    {
      v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)this + 28) + 8 * v128));
      v130 = (int)v129;
      if (v129 >= 0x80)
        v131 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v129);
      else
        v131 = 1;
      v127 += v130 + v131;
      ++v128;
    }
    while (v128 < *((int *)this + 58));
  }
  v132 = *((_DWORD *)this + 64);
  v133 = v127 + 2 * v132;
  if (v132 >= 1)
  {
    v134 = 0;
    do
    {
      v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)this + 31) + 8 * v134));
      v136 = (int)v135;
      if (v135 >= 0x80)
        v137 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v135);
      else
        v137 = 1;
      v133 += v136 + v137;
      ++v134;
    }
    while (v134 < *((int *)this + 64));
  }
  v138 = *((_DWORD *)this + 70);
  v139 = v133 + 2 * v138;
  if (v138 >= 1)
  {
    v140 = 0;
    do
    {
      v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)this + 34) + 8 * v140));
      v142 = (int)v141;
      if (v141 >= 0x80)
        v143 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v141);
      else
        v143 = 1;
      v139 += v142 + v143;
      ++v140;
    }
    while (v140 < *((int *)this + 70));
  }
  v144 = *((_DWORD *)this + 76);
  v145 = v139 + 2 * v144;
  if (v144 >= 1)
  {
    v146 = 0;
    do
    {
      v147 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)this + 37) + 8 * v146));
      v148 = (int)v147;
      if (v147 >= 0x80)
        v149 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v147);
      else
        v149 = 1;
      v145 += v148 + v149;
      ++v146;
    }
    while (v146 < *((int *)this + 76));
  }
  v150 = *((_DWORD *)this + 82);
  v151 = v145 + 2 * v150;
  if (v150 >= 1)
  {
    v152 = 0;
    do
    {
      v153 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_MotionActivityData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_MotionActivityData **)(*((_QWORD *)this + 40) + 8 * v152));
      v154 = (int)v153;
      if (v153 >= 0x80)
        v155 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v153);
      else
        v155 = 1;
      v151 += v154 + v155;
      ++v152;
    }
    while (v152 < *((int *)this + 82));
  }
  v156 = *((_DWORD *)this + 88);
  v157 = v151 + 2 * v156;
  if (v156 >= 1)
  {
    v158 = 0;
    do
    {
      v159 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_MovingStateData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_MovingStateData **)(*((_QWORD *)this + 43) + 8 * v158));
      v160 = (int)v159;
      if (v159 >= 0x80)
        v161 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v159);
      else
        v161 = 1;
      v157 += v160 + v161;
      ++v158;
    }
    while (v158 < *((int *)this + 88));
  }
  v162 = *((_DWORD *)this + 94);
  v163 = v157 + 2 * v162;
  if (v162 >= 1)
  {
    v164 = 0;
    do
    {
      v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_MountedStateData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_MountedStateData **)(*((_QWORD *)this + 46) + 8 * v164));
      v166 = (int)v165;
      if (v165 >= 0x80)
        v167 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v165);
      else
        v167 = 1;
      v163 += v166 + v167;
      ++v164;
    }
    while (v164 < *((int *)this + 94));
  }
  v168 = *((_DWORD *)this + 154);
  v169 = v163 + 2 * v168;
  if (v168 >= 1)
  {
    v170 = 0;
    do
    {
      v171 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_ChecksumData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(*((_QWORD *)this + 76) + 8 * v170));
      v172 = (int)v171;
      if (v171 >= 0x80)
        v173 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v171);
      else
        v173 = 1;
      v169 += v172 + v173;
      ++v170;
    }
    while (v170 < *((int *)this + 154));
  }
  v174 = *((_DWORD *)this + 162);
  v175 = v169 + 2 * v174;
  if (v174 >= 1)
  {
    v176 = 0;
    do
    {
      v177 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_PowerStateData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_PowerStateData **)(*((_QWORD *)this + 80) + 8 * v176));
      v178 = (int)v177;
      if (v177 >= 0x80)
        v179 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v177);
      else
        v179 = 1;
      v175 += v178 + v179;
      ++v176;
    }
    while (v176 < *((int *)this + 162));
  }
  v180 = *((_DWORD *)this + 174);
  v181 = v175 + 2 * v180;
  if (v180 >= 1)
  {
    v182 = 0;
    do
    {
      v183 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData **)(*((_QWORD *)this + 86) + 8 * v182));
      v184 = (int)v183;
      if (v183 >= 0x80)
        v185 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v183);
      else
        v185 = 1;
      v181 += v184 + v185;
      ++v182;
    }
    while (v182 < *((int *)this + 174));
  }
  v186 = *((_DWORD *)this + 180);
  v187 = v181 + 2 * v186;
  if (v186 >= 1)
  {
    v188 = 0;
    do
    {
      v189 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData **)(*((_QWORD *)this + 89) + 8 * v188));
      v190 = (int)v189;
      if (v189 >= 0x80)
        v191 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v189);
      else
        v191 = 1;
      v187 += v190 + v191;
      ++v188;
    }
    while (v188 < *((int *)this + 180));
  }
  v192 = *((_DWORD *)this + 216);
  v193 = v187 + 2 * v192;
  if (v192 >= 1)
  {
    v194 = 0;
    do
    {
      v195 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_ChecksumData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(*((_QWORD *)this + 107) + 8 * v194));
      v196 = (int)v195;
      if (v195 >= 0x80)
        v197 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v195);
      else
        v197 = 1;
      v193 += v196 + v197;
      ++v194;
    }
    while (v194 < *((int *)this + 216));
  }
  v198 = *((_DWORD *)this + 244);
  v199 = v193 + 2 * v198;
  if (v198 >= 1)
  {
    v200 = 0;
    do
    {
      v201 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)this + 121) + 8 * v200));
      v202 = (int)v201;
      if (v201 >= 0x80)
        v203 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v201);
      else
        v203 = 1;
      v199 += v202 + v203;
      ++v200;
    }
    while (v200 < *((int *)this + 244));
  }
  v204 = *((_DWORD *)this + 250);
  v205 = v199 + 2 * v204;
  if (v204 >= 1)
  {
    v206 = 0;
    do
    {
      v207 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)this + 124) + 8 * v206));
      v208 = (int)v207;
      if (v207 >= 0x80)
        v209 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v207);
      else
        v209 = 1;
      v205 += v208 + v209;
      ++v206;
    }
    while (v206 < *((int *)this + 250));
  }
  v210 = *((_DWORD *)this + 256);
  v211 = v205 + 2 * v210;
  if (v210 >= 1)
  {
    v212 = 0;
    do
    {
      v213 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData **)(*((_QWORD *)this + 127) + 8 * v212));
      v214 = (int)v213;
      if (v213 >= 0x80)
        v215 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v213);
      else
        v215 = 1;
      v211 += v214 + v215;
      ++v212;
    }
    while (v212 < *((int *)this + 256));
  }
  v216 = *((_DWORD *)this + 264);
  v217 = v211 + 2 * v216;
  if (v216 >= 1)
  {
    v218 = 0;
    do
    {
      v219 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData **)(*((_QWORD *)this + 131) + 8 * v218));
      v220 = (int)v219;
      if (v219 >= 0x80)
        v221 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v219);
      else
        v221 = 1;
      v217 += v220 + v221;
      ++v218;
    }
    while (v218 < *((int *)this + 264));
  }
  v222 = *((_DWORD *)this + 272);
  v223 = v217 + 2 * v222;
  if (v222 >= 1)
  {
    v224 = 0;
    do
    {
      v225 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason **)(*((_QWORD *)this + 135) + 8 * v224));
      v226 = (int)v225;
      if (v225 >= 0x80)
        v227 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v225);
      else
        v227 = 1;
      v223 += v226 + v227;
      ++v224;
    }
    while (v224 < *((int *)this + 272));
  }
  v228 = *((_DWORD *)this + 278);
  v229 = v223 + 2 * v228;
  if (v228 >= 1)
  {
    v230 = 0;
    do
    {
      v231 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_NSOnOffState::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_NSOnOffState **)(*((_QWORD *)this + 138) + 8 * v230));
      v232 = (int)v231;
      if (v231 >= 0x80)
        v233 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v231);
      else
        v233 = 1;
      v229 += v232 + v233;
      ++v230;
    }
    while (v230 < *((int *)this + 278));
  }
  v234 = *((_DWORD *)this + 284);
  v235 = v229 + 2 * v234;
  if (v234 >= 1)
  {
    v236 = 0;
    do
    {
      v237 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)this + 141) + 8 * v236));
      v238 = (int)v237;
      if (v237 >= 0x80)
        v239 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v237);
      else
        v239 = 1;
      v235 += v238 + v239;
      ++v236;
    }
    while (v236 < *((int *)this + 284));
  }
  v240 = *((_DWORD *)this + 290);
  v241 = v235 + 2 * v240;
  if (v240 >= 1)
  {
    v242 = 0;
    do
    {
      v243 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)this + 144) + 8 * v242));
      v244 = (int)v243;
      if (v243 >= 0x80)
        v245 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v243);
      else
        v245 = 1;
      v241 += v244 + v245;
      ++v242;
    }
    while (v242 < *((int *)this + 290));
  }
  v246 = *((_DWORD *)this + 296);
  v247 = v241 + 2 * v246;
  if (v246 >= 1)
  {
    v248 = 0;
    do
    {
      v249 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)this + 147) + 8 * v248));
      v250 = (int)v249;
      if (v249 >= 0x80)
        v251 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v249);
      else
        v251 = 1;
      v247 += v250 + v251;
      ++v248;
    }
    while (v248 < *((int *)this + 296));
  }
  v252 = *((_DWORD *)this + 302);
  v253 = v247 + 2 * v252;
  if (v252 >= 1)
  {
    v254 = 0;
    do
    {
      v255 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((_QWORD *)this + 150) + 8 * v254));
      v256 = (int)v255;
      if (v255 >= 0x80)
        v257 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v255);
      else
        v257 = 1;
      v253 += v256 + v257;
      ++v254;
    }
    while (v254 < *((int *)this + 302));
  }
  v258 = *((_DWORD *)this + 308);
  v259 = v253 + 2 * v258;
  if (v258 >= 1)
  {
    v260 = 0;
    do
    {
      v261 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)this + 153) + 8 * v260));
      v262 = (int)v261;
      if (v261 >= 0x80)
        v263 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v261);
      else
        v263 = 1;
      v259 += v262 + v263;
      ++v260;
    }
    while (v260 < *((int *)this + 308));
  }
  v264 = *((_DWORD *)this + 314);
  v265 = v259 + 2 * v264;
  if (v264 >= 1)
  {
    v266 = 0;
    do
    {
      v267 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)this + 156) + 8 * v266));
      v268 = (int)v267;
      if (v267 >= 0x80)
        v269 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v267);
      else
        v269 = 1;
      v265 += v268 + v269;
      ++v266;
    }
    while (v266 < *((int *)this + 314));
  }
  v270 = *((_DWORD *)this + 320);
  v271 = v265 + 2 * v270;
  if (v270 >= 1)
  {
    v272 = 0;
    do
    {
      v273 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)this + 159) + 8 * v272));
      v274 = (int)v273;
      if (v273 >= 0x80)
        v275 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v273);
      else
        v275 = 1;
      v271 += v274 + v275;
      ++v272;
    }
    while (v272 < *((int *)this + 320));
  }
  v276 = *((_DWORD *)this + 326);
  v277 = v271 + 2 * v276;
  if (v276 >= 1)
  {
    v278 = 0;
    do
    {
      v279 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((_QWORD *)this + 162) + 8 * v278));
      v280 = (int)v279;
      if (v279 >= 0x80)
        v281 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v279);
      else
        v281 = 1;
      v277 += v280 + v281;
      ++v278;
    }
    while (v278 < *((int *)this + 326));
  }
  v282 = *((_DWORD *)this + 332);
  v283 = (v277 + 2 * v282);
  if (v282 >= 1)
  {
    v284 = 0;
    do
    {
      v285 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal **)(*((_QWORD *)this + 165) + 8 * v284));
      v286 = (int)v285;
      if (v285 >= 0x80)
        v287 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v285);
      else
        v287 = 1;
      v283 = (v286 + v283 + v287);
      ++v284;
    }
    while (v284 < *((int *)this + 332));
  }
  *((_DWORD *)this + 339) = v283;
  return v283;
}

void awd::metrics::LocationGPSSessionStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGPSSessionStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics::CopyFrom(awd::metrics::LocationGPSSessionStatistics *this, const awd::metrics::LocationGPSSessionStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics::IsInitialized(awd::metrics::LocationGPSSessionStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;

  if (a2 != (awd::metrics::LocationGPSSessionStatistics *)this)
  {
    v3 = this;
    v4 = *(_QWORD *)(this + 8);
    v5 = *(_QWORD *)(this + 16);
    v6 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v6;
    *((_QWORD *)a2 + 1) = v4;
    *((_QWORD *)a2 + 2) = v5;
    v7 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
    v8 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v8;
    v9 = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v9;
    v10 = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v10;
    v11 = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v11;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v12 = *(_DWORD *)(v3 + 432);
    *(_DWORD *)(v3 + 432) = *((_DWORD *)a2 + 108);
    *((_DWORD *)a2 + 108) = v12;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v13 = *(_QWORD *)(v3 + 392);
    *(_QWORD *)(v3 + 392) = *((_QWORD *)a2 + 49);
    *((_QWORD *)a2 + 49) = v13;
    v14 = *(_QWORD *)(v3 + 400);
    *(_QWORD *)(v3 + 400) = *((_QWORD *)a2 + 50);
    *((_QWORD *)a2 + 50) = v14;
    v15 = *(_QWORD *)(v3 + 408);
    *(_QWORD *)(v3 + 408) = *((_QWORD *)a2 + 51);
    *((_QWORD *)a2 + 51) = v15;
    v16 = *(_QWORD *)(v3 + 416);
    *(_QWORD *)(v3 + 416) = *((_QWORD *)a2 + 52);
    *((_QWORD *)a2 + 52) = v16;
    v17 = *(_QWORD *)(v3 + 424);
    *(_QWORD *)(v3 + 424) = *((_QWORD *)a2 + 53);
    *((_QWORD *)a2 + 53) = v17;
    LOBYTE(v17) = *(_BYTE *)(v3 + 576);
    *(_BYTE *)(v3 + 576) = *((_BYTE *)a2 + 576);
    *((_BYTE *)a2 + 576) = v17;
    LOBYTE(v17) = *(_BYTE *)(v3 + 577);
    *(_BYTE *)(v3 + 577) = *((_BYTE *)a2 + 577);
    *((_BYTE *)a2 + 577) = v17;
    v18 = *(_QWORD *)(v3 + 440);
    *(_QWORD *)(v3 + 440) = *((_QWORD *)a2 + 55);
    *((_QWORD *)a2 + 55) = v18;
    v19 = *(_QWORD *)(v3 + 448);
    *(_QWORD *)(v3 + 448) = *((_QWORD *)a2 + 56);
    *((_QWORD *)a2 + 56) = v19;
    v20 = *(_QWORD *)(v3 + 456);
    *(_QWORD *)(v3 + 456) = *((_QWORD *)a2 + 57);
    *((_QWORD *)a2 + 57) = v20;
    v21 = *(_QWORD *)(v3 + 464);
    *(_QWORD *)(v3 + 464) = *((_QWORD *)a2 + 58);
    *((_QWORD *)a2 + 58) = v21;
    v22 = *(_QWORD *)(v3 + 472);
    *(_QWORD *)(v3 + 472) = *((_QWORD *)a2 + 59);
    *((_QWORD *)a2 + 59) = v22;
    v23 = *(_QWORD *)(v3 + 480);
    *(_QWORD *)(v3 + 480) = *((_QWORD *)a2 + 60);
    *((_QWORD *)a2 + 60) = v23;
    v24 = *(_QWORD *)(v3 + 488);
    *(_QWORD *)(v3 + 488) = *((_QWORD *)a2 + 61);
    *((_QWORD *)a2 + 61) = v24;
    v25 = *(_QWORD *)(v3 + 496);
    *(_QWORD *)(v3 + 496) = *((_QWORD *)a2 + 62);
    *((_QWORD *)a2 + 62) = v25;
    v26 = *(_QWORD *)(v3 + 504);
    *(_QWORD *)(v3 + 504) = *((_QWORD *)a2 + 63);
    *((_QWORD *)a2 + 63) = v26;
    v27 = *(_QWORD *)(v3 + 512);
    *(_QWORD *)(v3 + 512) = *((_QWORD *)a2 + 64);
    *((_QWORD *)a2 + 64) = v27;
    v28 = *(_QWORD *)(v3 + 520);
    *(_QWORD *)(v3 + 520) = *((_QWORD *)a2 + 65);
    *((_QWORD *)a2 + 65) = v28;
    v29 = *(_QWORD *)(v3 + 528);
    *(_QWORD *)(v3 + 528) = *((_QWORD *)a2 + 66);
    *((_QWORD *)a2 + 66) = v29;
    v30 = *(_QWORD *)(v3 + 536);
    *(_QWORD *)(v3 + 536) = *((_QWORD *)a2 + 67);
    *((_QWORD *)a2 + 67) = v30;
    v31 = *(_QWORD *)(v3 + 544);
    *(_QWORD *)(v3 + 544) = *((_QWORD *)a2 + 68);
    *((_QWORD *)a2 + 68) = v31;
    v32 = *(_QWORD *)(v3 + 552);
    *(_QWORD *)(v3 + 552) = *((_QWORD *)a2 + 69);
    *((_QWORD *)a2 + 69) = v32;
    v33 = *(_QWORD *)(v3 + 560);
    *(_QWORD *)(v3 + 560) = *((_QWORD *)a2 + 70);
    *((_QWORD *)a2 + 70) = v33;
    v34 = *(_QWORD *)(v3 + 568);
    *(_QWORD *)(v3 + 568) = *((_QWORD *)a2 + 71);
    *((_QWORD *)a2 + 71) = v34;
    LODWORD(v34) = *(_DWORD *)(v3 + 436);
    *(_DWORD *)(v3 + 436) = *((_DWORD *)a2 + 109);
    *((_DWORD *)a2 + 109) = v34;
    LODWORD(v34) = *(_DWORD *)(v3 + 580);
    *(_DWORD *)(v3 + 580) = *((_DWORD *)a2 + 145);
    *((_DWORD *)a2 + 145) = v34;
    LODWORD(v34) = *(_DWORD *)(v3 + 584);
    *(_DWORD *)(v3 + 584) = *((_DWORD *)a2 + 146);
    *((_DWORD *)a2 + 146) = v34;
    LODWORD(v34) = *(_DWORD *)(v3 + 588);
    *(_DWORD *)(v3 + 588) = *((_DWORD *)a2 + 147);
    *((_DWORD *)a2 + 147) = v34;
    LODWORD(v34) = *(_DWORD *)(v3 + 592);
    *(_DWORD *)(v3 + 592) = *((_DWORD *)a2 + 148);
    *((_DWORD *)a2 + 148) = v34;
    v35 = *(_DWORD *)(v3 + 596);
    *(_DWORD *)(v3 + 596) = *((_DWORD *)a2 + 149);
    *((_DWORD *)a2 + 149) = v35;
    v36 = *(_DWORD *)(v3 + 600);
    *(_DWORD *)(v3 + 600) = *((_DWORD *)a2 + 150);
    *((_DWORD *)a2 + 150) = v36;
    LODWORD(v34) = *(_DWORD *)(v3 + 604);
    *(_DWORD *)(v3 + 604) = *((_DWORD *)a2 + 151);
    *((_DWORD *)a2 + 151) = v34;
    LOBYTE(v34) = *(_BYTE *)(v3 + 578);
    *(_BYTE *)(v3 + 578) = *((_BYTE *)a2 + 578);
    *((_BYTE *)a2 + 578) = v34;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v37 = *(_QWORD *)(v3 + 632);
    *(_QWORD *)(v3 + 632) = *((_QWORD *)a2 + 79);
    *((_QWORD *)a2 + 79) = v37;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v38 = *(_QWORD *)(v3 + 664);
    *(_QWORD *)(v3 + 664) = *((_QWORD *)a2 + 83);
    *((_QWORD *)a2 + 83) = v38;
    v39 = *(_QWORD *)(v3 + 672);
    *(_QWORD *)(v3 + 672) = *((_QWORD *)a2 + 84);
    *((_QWORD *)a2 + 84) = v39;
    v40 = *(_QWORD *)(v3 + 680);
    *(_QWORD *)(v3 + 680) = *((_QWORD *)a2 + 85);
    *((_QWORD *)a2 + 85) = v40;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v41 = *(_DWORD *)(v3 + 808);
    *(_DWORD *)(v3 + 808) = *((_DWORD *)a2 + 202);
    *((_DWORD *)a2 + 202) = v41;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v42 = *(_QWORD *)(v3 + 736);
    *(_QWORD *)(v3 + 736) = *((_QWORD *)a2 + 92);
    *((_QWORD *)a2 + 92) = v42;
    v43 = *(_QWORD *)(v3 + 744);
    *(_QWORD *)(v3 + 744) = *((_QWORD *)a2 + 93);
    *((_QWORD *)a2 + 93) = v43;
    v44 = *(_QWORD *)(v3 + 752);
    *(_QWORD *)(v3 + 752) = *((_QWORD *)a2 + 94);
    *((_QWORD *)a2 + 94) = v44;
    v45 = *(_QWORD *)(v3 + 760);
    *(_QWORD *)(v3 + 760) = *((_QWORD *)a2 + 95);
    *((_QWORD *)a2 + 95) = v45;
    v46 = *(_QWORD *)(v3 + 768);
    *(_QWORD *)(v3 + 768) = *((_QWORD *)a2 + 96);
    *((_QWORD *)a2 + 96) = v46;
    v47 = *(_QWORD *)(v3 + 776);
    *(_QWORD *)(v3 + 776) = *((_QWORD *)a2 + 97);
    *((_QWORD *)a2 + 97) = v47;
    v48 = *(_QWORD *)(v3 + 784);
    *(_QWORD *)(v3 + 784) = *((_QWORD *)a2 + 98);
    *((_QWORD *)a2 + 98) = v48;
    v49 = *(_QWORD *)(v3 + 792);
    *(_QWORD *)(v3 + 792) = *((_QWORD *)a2 + 99);
    *((_QWORD *)a2 + 99) = v49;
    v50 = *(_QWORD *)(v3 + 800);
    *(_QWORD *)(v3 + 800) = *((_QWORD *)a2 + 100);
    *((_QWORD *)a2 + 100) = v50;
    v51 = *(_QWORD *)(v3 + 816);
    *(_QWORD *)(v3 + 816) = *((_QWORD *)a2 + 102);
    *((_QWORD *)a2 + 102) = v51;
    v52 = *(_QWORD *)(v3 + 824);
    *(_QWORD *)(v3 + 824) = *((_QWORD *)a2 + 103);
    *((_QWORD *)a2 + 103) = v52;
    v53 = *(_QWORD *)(v3 + 832);
    *(_QWORD *)(v3 + 832) = *((_QWORD *)a2 + 104);
    *((_QWORD *)a2 + 104) = v53;
    v54 = *(_QWORD *)(v3 + 840);
    *(_QWORD *)(v3 + 840) = *((_QWORD *)a2 + 105);
    *((_QWORD *)a2 + 105) = v54;
    v55 = *(_QWORD *)(v3 + 848);
    *(_QWORD *)(v3 + 848) = *((_QWORD *)a2 + 106);
    *((_QWORD *)a2 + 106) = v55;
    LOBYTE(v55) = *(_BYTE *)(v3 + 579);
    *(_BYTE *)(v3 + 579) = *((_BYTE *)a2 + 579);
    *((_BYTE *)a2 + 579) = v55;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v56 = *(_QWORD *)(v3 + 880);
    *(_QWORD *)(v3 + 880) = *((_QWORD *)a2 + 110);
    *((_QWORD *)a2 + 110) = v56;
    v57 = *(_QWORD *)(v3 + 888);
    *(_QWORD *)(v3 + 888) = *((_QWORD *)a2 + 111);
    *((_QWORD *)a2 + 111) = v57;
    LOBYTE(v57) = *(_BYTE *)(v3 + 1044);
    *(_BYTE *)(v3 + 1044) = *((_BYTE *)a2 + 1044);
    *((_BYTE *)a2 + 1044) = v57;
    LODWORD(v57) = *(_DWORD *)(v3 + 812);
    *(_DWORD *)(v3 + 812) = *((_DWORD *)a2 + 203);
    *((_DWORD *)a2 + 203) = v57;
    LODWORD(v57) = *(_DWORD *)(v3 + 896);
    *(_DWORD *)(v3 + 896) = *((_DWORD *)a2 + 224);
    *((_DWORD *)a2 + 224) = v57;
    LODWORD(v57) = *(_DWORD *)(v3 + 900);
    *(_DWORD *)(v3 + 900) = *((_DWORD *)a2 + 225);
    *((_DWORD *)a2 + 225) = v57;
    v58 = *(_QWORD *)(v3 + 904);
    *(_QWORD *)(v3 + 904) = *((_QWORD *)a2 + 113);
    *((_QWORD *)a2 + 113) = v58;
    v59 = *(_QWORD *)(v3 + 912);
    *(_QWORD *)(v3 + 912) = *((_QWORD *)a2 + 114);
    *((_QWORD *)a2 + 114) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 920);
    *(_DWORD *)(v3 + 920) = *((_DWORD *)a2 + 230);
    *((_DWORD *)a2 + 230) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 924);
    *(_DWORD *)(v3 + 924) = *((_DWORD *)a2 + 231);
    *((_DWORD *)a2 + 231) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 928);
    *(_DWORD *)(v3 + 928) = *((_DWORD *)a2 + 232);
    *((_DWORD *)a2 + 232) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 932);
    *(_DWORD *)(v3 + 932) = *((_DWORD *)a2 + 233);
    *((_DWORD *)a2 + 233) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 936);
    *(_DWORD *)(v3 + 936) = *((_DWORD *)a2 + 234);
    *((_DWORD *)a2 + 234) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 940);
    *(_DWORD *)(v3 + 940) = *((_DWORD *)a2 + 235);
    *((_DWORD *)a2 + 235) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 944);
    *(_DWORD *)(v3 + 944) = *((_DWORD *)a2 + 236);
    *((_DWORD *)a2 + 236) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 948);
    *(_DWORD *)(v3 + 948) = *((_DWORD *)a2 + 237);
    *((_DWORD *)a2 + 237) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 952);
    *(_DWORD *)(v3 + 952) = *((_DWORD *)a2 + 238);
    *((_DWORD *)a2 + 238) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 956);
    *(_DWORD *)(v3 + 956) = *((_DWORD *)a2 + 239);
    *((_DWORD *)a2 + 239) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 960);
    *(_DWORD *)(v3 + 960) = *((_DWORD *)a2 + 240);
    *((_DWORD *)a2 + 240) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 964);
    *(_DWORD *)(v3 + 964) = *((_DWORD *)a2 + 241);
    *((_DWORD *)a2 + 241) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 1040);
    *(_DWORD *)(v3 + 1040) = *((_DWORD *)a2 + 260);
    *((_DWORD *)a2 + 260) = v59;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v60 = *(_QWORD *)(v3 + 1072);
    *(_QWORD *)(v3 + 1072) = *((_QWORD *)a2 + 134);
    *((_QWORD *)a2 + 134) = v60;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v61 = *(_BYTE *)(v3 + 1045);
    *(_BYTE *)(v3 + 1045) = *((_BYTE *)a2 + 1045);
    *((_BYTE *)a2 + 1045) = v61;
    v62 = *(_BYTE *)(v3 + 1046);
    *(_BYTE *)(v3 + 1046) = *((_BYTE *)a2 + 1046);
    *((_BYTE *)a2 + 1046) = v62;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v63 = *(_DWORD *)(v3 + 1344);
    *(_DWORD *)(v3 + 1344) = *((_DWORD *)a2 + 336);
    *((_DWORD *)a2 + 336) = v63;
    v64 = *(_DWORD *)(v3 + 1348);
    *(_DWORD *)(v3 + 1348) = *((_DWORD *)a2 + 337);
    *((_DWORD *)a2 + 337) = v64;
    v65 = *(_DWORD *)(v3 + 1352);
    *(_DWORD *)(v3 + 1352) = *((_DWORD *)a2 + 338);
    *((_DWORD *)a2 + 338) = v65;
    v66 = *(_DWORD *)(v3 + 1360);
    *(_DWORD *)(v3 + 1360) = *((_DWORD *)a2 + 340);
    *((_DWORD *)a2 + 340) = v66;
    v67 = *(_DWORD *)(v3 + 1364);
    *(_DWORD *)(v3 + 1364) = *((_DWORD *)a2 + 341);
    *((_DWORD *)a2 + 341) = v67;
    v68 = *(_DWORD *)(v3 + 1368);
    *(_DWORD *)(v3 + 1368) = *((_DWORD *)a2 + 342);
    *((_DWORD *)a2 + 342) = v68;
    v69 = *(_DWORD *)(v3 + 1372);
    *(_DWORD *)(v3 + 1372) = *((_DWORD *)a2 + 343);
    *((_DWORD *)a2 + 343) = v69;
    v70 = *(_DWORD *)(v3 + 1356);
    *(_DWORD *)(v3 + 1356) = *((_DWORD *)a2 + 339);
    *((_DWORD *)a2 + 339) = v70;
  }
  return this;
}

_QWORD *awd::metrics::LocationGPSSessionStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics");
}

double awd::metrics::LocationCellTileUsage::SharedCtor(awd::metrics::LocationCellTileUsage *this)
{
  double result;

  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationCellTileUsage *awd::metrics::LocationCellTileUsage::LocationCellTileUsage(awd::metrics::LocationCellTileUsage *this, const awd::metrics::LocationCellTileUsage *a2)
{
  *(_QWORD *)this = &off_24D98FDE8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  awd::metrics::LocationCellTileUsage::MergeFrom(this, a2);
  return this;
}

void sub_218A22200(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationCellTileUsage::MergeFrom(awd::metrics::LocationCellTileUsage *this, const awd::metrics::LocationCellTileUsage *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = *((_DWORD *)a2 + 15);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 15) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 15) |= 2u;
  *((_DWORD *)this + 4) = v8;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 15) |= 4u;
  *((_DWORD *)this + 5) = v9;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 15) |= 8u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_24:
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 15) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 15) |= 0x10u;
  *((_DWORD *)this + 7) = v11;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x20) != 0)
    goto LABEL_24;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_25:
  v13 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 15) |= 0x40u;
  *((_DWORD *)this + 9) = v13;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 15) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    v4 = *((_DWORD *)a2 + 15);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v14 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 15) |= 0x100u;
    *((_DWORD *)this + 11) = v14;
    v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        return;
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 15) |= 0x200u;
  *((_DWORD *)this + 12) = v15;
  if ((*((_DWORD *)a2 + 15) & 0x400) == 0)
    return;
LABEL_17:
  v6 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 15) |= 0x400u;
  *((_DWORD *)this + 13) = v6;
}

void sub_218A223F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationCellTileUsage::~LocationCellTileUsage(awd::metrics::LocationCellTileUsage *this)
{
  *(_QWORD *)this = &off_24D98FDE8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FDE8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FDE8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationCellTileUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t awd::metrics::LocationCellTileUsage::default_instance(awd::metrics::LocationCellTileUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationCellTileUsage::default_instance_;
  if (!awd::metrics::LocationCellTileUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationCellTileUsage::default_instance_;
  }
  return result;
}

double awd::metrics::LocationCellTileUsage::New(awd::metrics::LocationCellTileUsage *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D98FDE8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t awd::metrics::LocationCellTileUsage::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 60);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    *(_DWORD *)(this + 44) = 0;
  }
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t awd::metrics::LocationCellTileUsage::MergePartialFromCodedStream(awd::metrics::LocationCellTileUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  unsigned __int8 *v36;
  uint64_t result;
  unint64_t *v38;
  unsigned int *v39;
  unsigned int *v40;
  unsigned int *v41;

  v38 = (unint64_t *)((char *)this + 8);
  v39 = (unsigned int *)((char *)this + 16);
  v40 = (unsigned int *)((char *)this + 20);
  v41 = (unsigned int *)((char *)this + 24);
  v4 = (unsigned int *)((char *)this + 28);
  v5 = (unsigned int *)((char *)this + 32);
  v6 = (unsigned int *)((char *)this + 36);
  v7 = (unsigned int *)((char *)this + 40);
  v8 = (unsigned int *)((char *)this + 44);
  v9 = (unsigned int *)((char *)this + 48);
  v10 = (unsigned int *)((char *)this + 52);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v38 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_38:
          *((_DWORD *)this + 15) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_41;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v38);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_41:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v39);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v39 = *v17;
          v27 = v17 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 15) |= 2u;
        if ((unint64_t)v27 >= v14 || *v27 != 24)
          continue;
        v18 = v27 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_49:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v40);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v40 = *v18;
          v28 = v18 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 15) |= 4u;
        if ((unint64_t)v28 >= v14 || *v28 != 32)
          continue;
        v19 = v28 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_57:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v41 = *v19;
          v29 = v19 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 15) |= 8u;
        if ((unint64_t)v29 >= v14 || *v29 != 40)
          continue;
        v20 = v29 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_65:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v20;
          v30 = v20 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 15) |= 0x10u;
        if ((unint64_t)v30 >= v14 || *v30 != 48)
          continue;
        v21 = v30 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_73:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v21;
          v31 = v21 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 15) |= 0x20u;
        if ((unint64_t)v31 >= v14 || *v31 != 56)
          continue;
        v22 = v31 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_81:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v22;
          v32 = v22 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 15) |= 0x40u;
        if ((unint64_t)v32 >= v14 || *v32 != 64)
          continue;
        v23 = v32 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_89:
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v23;
          v33 = v23 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 15) |= 0x80u;
        if ((unint64_t)v33 >= v14 || *v33 != 72)
          continue;
        v24 = v33 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_97:
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v24;
          v34 = v24 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 15) |= 0x100u;
        if ((unint64_t)v34 >= v14 || *v34 != 80)
          continue;
        v25 = v34 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_105:
        if ((unint64_t)v25 >= v14 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v25;
          v35 = v25 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 15) |= 0x200u;
        if ((unint64_t)v35 >= v14 || *v35 != 88)
          continue;
        v26 = v35 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_113:
        if ((unint64_t)v26 >= v14 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v36 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v26;
          v36 = (unsigned __int8 *)(v26 + 1);
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 15) |= 0x400u;
        if (v36 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_49;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_57;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_65;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_73;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_81;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_89;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_97;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_105;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_113;
      default:
        v13 = TagFallback & 7;
LABEL_32:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationCellTileUsage::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[15];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  v6 = v5[15];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  v6 = v5[15];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  v6 = v5[15];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  v6 = v5[15];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  v6 = v5[15];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  v6 = v5[15];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[10], (uint64_t)a2, a4);
  v6 = v5[15];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[11], (uint64_t)a2, a4);
  v6 = v5[15];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[13], (uint64_t)a2, a4);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[12], (uint64_t)a2, a4);
  if ((v5[15] & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[13], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationCellTileUsage::ByteSize(awd::metrics::LocationCellTileUsage *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;

  v2 = *((_DWORD *)this + 15);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_42;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 15);
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v3 + v5 + 1);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *((_DWORD *)this + 15);
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v9 = 2;
  }
  v3 = (v9 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0)
      goto LABEL_15;
    goto LABEL_30;
  }
LABEL_26:
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v11 = 2;
  }
  v3 = (v11 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_30:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0)
      goto LABEL_42;
    goto LABEL_38;
  }
LABEL_34:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v15 = 2;
  }
  v3 = (v15 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_38:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      v2 = *((_DWORD *)this + 15);
    }
    else
    {
      v17 = 2;
    }
    v3 = (v17 + v3);
  }
LABEL_42:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_59;
  if ((v2 & 0x100) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      v2 = *((_DWORD *)this + 15);
    }
    else
    {
      v19 = 2;
    }
    v3 = (v19 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_45:
      if ((v2 & 0x400) == 0)
        goto LABEL_59;
      goto LABEL_55;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v20 >= 0x80)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v21 = 2;
  }
  v3 = (v21 + v3);
  if ((v2 & 0x400) != 0)
  {
LABEL_55:
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if (v22 >= 0x80)
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    else
      v23 = 2;
    v3 = (v23 + v3);
  }
LABEL_59:
  *((_DWORD *)this + 14) = v3;
  return v3;
}

void awd::metrics::LocationCellTileUsage::CheckTypeAndMergeFrom(awd::metrics::LocationCellTileUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationCellTileUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationCellTileUsage::CopyFrom(awd::metrics::LocationCellTileUsage *this, const awd::metrics::LocationCellTileUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationCellTileUsage *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationCellTileUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationCellTileUsage::IsInitialized(awd::metrics::LocationCellTileUsage *this)
{
  return 1;
}

uint64_t awd::metrics::LocationCellTileUsage::Swap(uint64_t this, awd::metrics::LocationCellTileUsage *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::LocationCellTileUsage *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationCellTileUsage::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationCellTileUsage");
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 16) = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = v1;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *a2)
{
  uint64_t v3;

  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D98FE60;
  *((_QWORD *)this + 1) = v3;
  *((_QWORD *)this + 2) = v3;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergeFrom(this, a2);
  return this;
}

void sub_218A23070(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *a2)
{
  int v4;
  std::string *v5;
  const std::string *v6;
  std::string *v7;
  int v8;
  const std::string *v9;
  std::string *v10;
  _BYTE v11[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    v5 = (std::string *)MEMORY[0x24BEDD958];
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = (const std::string *)*((_QWORD *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      v7 = (std::string *)*((_QWORD *)this + 1);
      if (v7 == v5)
      {
        v7 = (std::string *)operator new();
        v7->__r_.__value_.__l.__size_ = 0;
        v7->__r_.__value_.__r.__words[2] = 0;
        v7->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 1) = v7;
      }
      std::string::operator=(v7, v6);
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 6) = v8;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return;
LABEL_12:
    v9 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 8) |= 4u;
    v10 = (std::string *)*((_QWORD *)this + 2);
    if (v10 == v5)
    {
      v10 = (std::string *)operator new();
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v10;
    }
    std::string::operator=(v10, v9);
  }
}

void sub_218A231CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::~LocationGnssSWRecoveryStatistics_LocationRecoveryPoint(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this)
{
  *(_QWORD *)this = &off_24D98FE60;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FE60;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FE60;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SharedDtor(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = this;
  v2 = *(_QWORD *)(this + 8);
  v3 = MEMORY[0x24BEDD958];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  v5 = *(_QWORD *)(v1 + 16);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::New(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)result = &off_24D98FE60;
  *(_QWORD *)(result + 8) = v2;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(this + 32))
  {
    v1 = MEMORY[0x24BEDD958];
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((*(_BYTE *)(this + 32) & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != v1)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergePartialFromCodedStream(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  unsigned int v8;
  int v9;
  int v10;
  _QWORD *v11;
  uint64_t result;
  unint64_t v13;
  _BYTE *v14;
  char *v15;
  _BYTE *v16;
  _QWORD *v17;

  v4 = (unsigned int *)((char *)this + 24);
  v5 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v6;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v6 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v9 = TagFallback & 7;
          if (v9 != 2)
            goto LABEL_25;
          *((_DWORD *)this + 8) |= 1u;
          if (*((_QWORD *)this + 1) == v5)
          {
            v11 = (_QWORD *)operator new();
            v11[1] = 0;
            v11[2] = 0;
            *v11 = 0;
            *((_QWORD *)this + 1) = v11;
          }
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v14 < v13 && *v14 == 16)
          {
            v15 = v14 + 1;
            *((_QWORD *)a2 + 1) = v15;
            goto LABEL_21;
          }
        }
        if (v8 != 2)
          break;
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
LABEL_21:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
        }
        v10 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + 8) = v10;
        if ((unint64_t)v16 < v13 && *v16 == 26)
        {
          *((_QWORD *)a2 + 1) = v16 + 1;
          goto LABEL_33;
        }
      }
      if (v8 != 3)
        break;
      v9 = TagFallback & 7;
      if (v9 != 2)
        goto LABEL_25;
      v10 = *((_DWORD *)this + 8);
LABEL_33:
      *((_DWORD *)this + 8) = v10 | 4;
      if (*((_QWORD *)this + 2) == v5)
      {
        v17 = (_QWORD *)operator new();
        v17[1] = 0;
        v17[2] = 0;
        *v17 = 0;
        *((_QWORD *)this + 2) = v17;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v9 = TagFallback & 7;
LABEL_25:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::ByteSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  int v18;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_29;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 8);
    if ((v5 & 0x80u) == 0)
      v8 = *(unsigned __int8 *)(v4 + 23);
    else
      v8 = v7;
    if (v8 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v7 = *(_QWORD *)(v4 + 8);
      v9 = v10 + 1;
      v2 = *((_DWORD *)this + 8);
      v6 = *(_BYTE *)(v4 + 23);
    }
    else
    {
      v9 = 2;
    }
    if (v6 < 0)
      v5 = v7;
    v3 = (v9 + v5);
    if ((v2 & 2) == 0)
      goto LABEL_19;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_19;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v12 = 2;
  }
  v3 = (v12 + v3);
LABEL_19:
  if ((v2 & 4) != 0)
  {
    v13 = *((_QWORD *)this + 2);
    v14 = *(unsigned __int8 *)(v13 + 23);
    v15 = v14;
    v16 = *(_QWORD *)(v13 + 8);
    if ((v14 & 0x80u) == 0)
      v17 = *(unsigned __int8 *)(v13 + 23);
    else
      v17 = v16;
    if (v17 >= 0x80)
    {
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17);
      v14 = *(unsigned __int8 *)(v13 + 23);
      v16 = *(_QWORD *)(v13 + 8);
      v15 = *(_BYTE *)(v13 + 23);
    }
    else
    {
      v18 = 1;
    }
    if (v15 < 0)
      v14 = v16;
    v3 = (v3 + v18 + v14 + 1);
  }
LABEL_29:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::CheckTypeAndMergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::CopyFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::IsInitialized(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::Swap(uint64_t this, awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGnssSWRecoveryStatistics.LocationRecoveryPoint");
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 11) = 0;
  return this;
}

awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *a2)
{
  *(_QWORD *)this = &off_24D98FED8;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 2) = 0;
  *(_DWORD *)((char *)this + 11) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergeFrom(this, a2);
  return this;
}

void sub_218A23954(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *a2)
{
  int v4;
  char v5;
  char v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 12);
      *((_DWORD *)this + 5) |= 1u;
      *((_BYTE *)this + 12) = v6;
      v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 20) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 5) |= 2u;
    *((_DWORD *)this + 2) = v7;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *((_BYTE *)a2 + 13);
    *((_DWORD *)this + 5) |= 4u;
    *((_BYTE *)this + 13) = v8;
    if ((*((_DWORD *)a2 + 5) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_BYTE *)a2 + 14);
    *((_DWORD *)this + 5) |= 8u;
    *((_BYTE *)this + 14) = v5;
  }
}

void sub_218A23A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::~LocationGnssSWRecoveryStatistics_LocationRecoveryStatus(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this)
{
  *(_QWORD *)this = &off_24D98FED8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FED8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FED8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::New(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_24D98FED8;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 11) = 0;
  return result;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
  {
    *(_DWORD *)(this + 11) = 0;
    *(_DWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergePartialFromCodedStream(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  char *v12;
  char *v13;
  char *v14;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;

  v4 = (unsigned int *)((char *)this + 8);
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v23 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          v10 = *v9;
          v11 = v9 + 1;
          *((_QWORD *)a2 + 1) = v11;
LABEL_24:
          *((_BYTE *)this + 12) = v10 != 0;
          *((_DWORD *)this + 5) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            v12 = v11 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
        if ((_DWORD)result)
        {
          v10 = v23;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
LABEL_27:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v12;
          v15 = v12 + 1;
          *((_QWORD *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 5) |= 2u;
        if ((unint64_t)v15 >= v8 || *v15 != 24)
          continue;
        v13 = v15 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_35:
        v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!(_DWORD)result)
            return result;
          v16 = v22;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v13;
          v17 = v13 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_BYTE *)this + 13) = v16 != 0;
        *((_DWORD *)this + 5) |= 4u;
        if ((unint64_t)v17 >= v8 || *v17 != 32)
          continue;
        v14 = v17 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_43:
        v21 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v18 = v21;
          v19 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v14;
          v19 = (unsigned __int8 *)(v14 + 1);
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 14) = v18 != 0;
        *((_DWORD *)this + 5) |= 8u;
        if (v19 != (unsigned __int8 *)v8 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_35;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_43;
      default:
        v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 12), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 8), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 14), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 13), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 20) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 14), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::ByteSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  uint64_t result;
  unsigned int v7;

  v2 = *((_DWORD *)this + 5);
  if ((_BYTE)v2)
  {
    v3 = 2 * (v2 & 1);
    if ((v2 & 2) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if (v4 >= 0x80)
      {
        v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        v2 = *((_DWORD *)this + 5);
      }
      else
      {
        v5 = 2;
      }
      v3 += v5;
    }
    v7 = v3 + 2;
    if ((v2 & 4) == 0)
      v7 = v3;
    if ((v2 & 8) != 0)
      result = v7 + 2;
    else
      result = v7;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::CheckTypeAndMergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::CopyFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::IsInitialized(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::Swap(uint64_t this, awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *a2)
{
  char v2;
  int v3;
  int v4;
  int v5;

  if (a2 != (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *)this)
  {
    v2 = *(_BYTE *)(this + 12);
    *(_BYTE *)(this + 12) = *((_BYTE *)a2 + 12);
    *((_BYTE *)a2 + 12) = v2;
    v3 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v3;
    LOBYTE(v3) = *(_BYTE *)(this + 13);
    *(_BYTE *)(this + 13) = *((_BYTE *)a2 + 13);
    *((_BYTE *)a2 + 13) = v3;
    LOBYTE(v3) = *(_BYTE *)(this + 14);
    *(_BYTE *)(this + 14) = *((_BYTE *)a2 + 14);
    *((_BYTE *)a2 + 14) = v3;
    v4 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGnssSWRecoveryStatistics.LocationRecoveryStatus");
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *a2)
{
  *(_QWORD *)this = &off_24D98FF50;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergeFrom(this, a2);
  return this;
}

void sub_218A240A8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *a2)
{
  uint64_t v4;
  uint64_t v5;
  const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    v5 = MEMORY[0x24BEDD958];
    do
    {
      v6 = *(const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v7 = *((_DWORD *)this + 5);
      v8 = *((int *)this + 4);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)((char *)this + 8));
          v7 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v7 + 1;
        v10 = operator new();
        *(_QWORD *)v10 = &off_24D98FE60;
        *(_QWORD *)(v10 + 8) = v5;
        *(_QWORD *)(v10 + 16) = v5;
        *(_QWORD *)(v10 + 24) = 0;
        *(_DWORD *)(v10 + 32) = 0;
        v11 = *((_QWORD *)this + 1);
        v12 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v8 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v8);
      }
      awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergeFrom((awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *)v10, v6);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  if ((*((_BYTE *)a2 + 44) & 2) != 0)
  {
    *((_DWORD *)this + 11) |= 2u;
    v13 = *((_QWORD *)this + 4);
    if (!v13)
    {
      v13 = operator new();
      *(_QWORD *)v13 = &off_24D98FED8;
      *(_QWORD *)(v13 + 16) = 0;
      *(_DWORD *)(v13 + 8) = 0;
      *(_DWORD *)(v13 + 11) = 0;
      *((_QWORD *)this + 4) = v13;
    }
    v14 = (const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *)*((_QWORD *)a2 + 4);
    if (!v14)
      v14 = *(const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus **)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_
                                                                                            + 32);
    awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergeFrom((awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *)v13, v14);
  }
}

void sub_218A2428C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::~LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D98FF50;
  if ((awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 4);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint>::TypeHandler>((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::~LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::SharedDtor(_QWORD *this)
{
  if ((_QWORD *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_ != this)
  {
    this = (_QWORD *)this[4];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::New(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D98FF50;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  if ((*(_BYTE *)(this + 44) & 2) != 0)
  {
    v2 = *(_QWORD *)(this + 32);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 20))
      {
        *(_DWORD *)(v2 + 11) = 0;
        *(_DWORD *)(v2 + 8) = 0;
      }
      *(_DWORD *)(v2 + 20) = 0;
    }
  }
  if (*(int *)(this + 16) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergePartialFromCodedStream(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  unsigned __int8 *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t result;
  unsigned int v30;
  unsigned int v31;

  v4 = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)((char *)this + 8);
  v5 = MEMORY[0x24BEDD958];
  do
  {
    while (1)
    {
LABEL_2:
      v6 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if (v8 == 2)
      {
        while (1)
        {
          v11 = *((_DWORD *)this + 5);
          v12 = *((int *)this + 4);
          if ((int)v12 >= v11)
          {
            if (v11 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v11 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v11 + 1;
            v14 = operator new();
            *(_QWORD *)v14 = &off_24D98FE60;
            *(_QWORD *)(v14 + 8) = v5;
            *(_QWORD *)(v14 + 16) = v5;
            *(_QWORD *)(v14 + 24) = 0;
            *(_DWORD *)(v14 + 32) = 0;
            v15 = *((_QWORD *)this + 1);
            v16 = *((int *)this + 4);
            *((_DWORD *)this + 4) = v16 + 1;
            *(_QWORD *)(v15 + 8 * v16) = v14;
          }
          else
          {
            v13 = *((_QWORD *)this + 1);
            *((_DWORD *)this + 4) = v12 + 1;
            v14 = *(_QWORD *)(v13 + 8 * v12);
          }
          v30 = 0;
          v17 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
          }
          else
          {
            v30 = *v17;
            *((_QWORD *)a2 + 1) = v17 + 1;
          }
          v18 = *((_DWORD *)a2 + 14);
          v19 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v18 + 1;
          if (v18 >= v19)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergePartialFromCodedStream((awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *)v14, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v20 = *((_DWORD *)a2 + 14);
          v21 = __OFSUB__(v20, 1);
          v22 = v20 - 1;
          if (v22 < 0 == v21)
            *((_DWORD *)a2 + 14) = v22;
          v23 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v23 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v24 = *v23;
          if (v24 != 10)
          {
            if (v24 != 18)
              goto LABEL_2;
            *((_QWORD *)a2 + 1) = v23 + 1;
            goto LABEL_10;
          }
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
      }
LABEL_34:
      if (v8 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
    if (TagFallback >> 3 != 2)
    {
      v8 = TagFallback & 7;
      goto LABEL_34;
    }
    v8 = TagFallback & 7;
    if (v8 != 2)
      goto LABEL_34;
LABEL_10:
    *((_DWORD *)this + 11) |= 2u;
    v9 = *((_QWORD *)this + 4);
    if (!v9)
    {
      v9 = operator new();
      *(_QWORD *)v9 = &off_24D98FED8;
      *(_QWORD *)(v9 + 16) = 0;
      *(_DWORD *)(v9 + 8) = 0;
      *(_DWORD *)(v9 + 11) = 0;
      *((_QWORD *)this + 4) = v9;
    }
    v31 = 0;
    v10 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))
        return 0;
    }
    else
    {
      v31 = *v10;
      *((_QWORD *)a2 + 1) = v10 + 1;
    }
    v25 = *((_DWORD *)a2 + 14);
    v26 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v25 + 1;
    if (v25 >= v26)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergePartialFromCodedStream((awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *)v9, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v27 = *((_DWORD *)a2 + 14);
    v21 = __OFSUB__(v27, 1);
    v28 = v27 - 1;
    if (v28 < 0 == v21)
      *((_DWORD *)a2 + 14) = v28;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(_BYTE *)(v5 + 44) & 2) != 0)
  {
    v7 = *(_QWORD *)(v5 + 32);
    if (!v7)
      v7 = *(_QWORD *)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_ + 32);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::ByteSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
  int v2;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  if ((*((_BYTE *)this + 44) & 2) != 0)
  {
    v3 = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *)*((_QWORD *)this + 4);
    if (!v3)
      v3 = *(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus **)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_
                                                                                     + 32);
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::ByteSize(v3);
    v5 = (int)v4;
    if (v4 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    else
      v6 = 1;
    v2 = v5 + v6 + 1;
  }
  else
  {
    v2 = 0;
  }
  v7 = *((_DWORD *)this + 4);
  v8 = (v7 + v2);
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::ByteSize(*(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint **)(*((_QWORD *)this + 1) + 8 * v9));
      v11 = (int)v10;
      if (v10 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v12 = 1;
      v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 4));
  }
  *((_DWORD *)this + 10) = v8;
  return v8;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::CheckTypeAndMergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::CopyFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::IsInitialized(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
  return 1;
}

awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::Swap(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *a2)
{
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *v3;
  uint64_t v4;

  if (a2 != this)
  {
    v3 = this;
    this = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_QWORD *)v3 + 4);
    *((_QWORD *)v3 + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
  }
  return this;
}

_QWORD *awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGnssSWRecoveryStatistics.LocationGnssRecoveryInfo");
}

_QWORD *awd::metrics::LocationGnssSWRecoveryStatistics::SharedCtor(_QWORD *this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  this[1] = 0;
  this[2] = v1;
  this[3] = 0;
  this[4] = 0;
  return this;
}

awd::metrics::LocationGnssSWRecoveryStatistics *awd::metrics::LocationGnssSWRecoveryStatistics::LocationGnssSWRecoveryStatistics(awd::metrics::LocationGnssSWRecoveryStatistics *this, const awd::metrics::LocationGnssSWRecoveryStatistics *a2)
{
  *(_QWORD *)this = &off_24D98FFC8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A24A6C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics::MergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics *this, const awd::metrics::LocationGnssSWRecoveryStatistics *a2)
{
  int v4;
  uint64_t v5;
  const std::string *v6;
  std::string *v7;
  uint64_t v8;
  const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v6 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    v7 = (std::string *)*((_QWORD *)this + 2);
    if (v7 == (std::string *)MEMORY[0x24BEDD958])
    {
      v7 = (std::string *)operator new();
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v7;
    }
    std::string::operator=(v7, v6);
    if ((*((_DWORD *)a2 + 9) & 4) != 0)
    {
LABEL_12:
      *((_DWORD *)this + 9) |= 4u;
      v8 = *((_QWORD *)this + 3);
      if (!v8)
      {
        v8 = operator new();
        *(_QWORD *)(v8 + 8) = 0;
        *(_QWORD *)(v8 + 16) = 0;
        *(_QWORD *)v8 = &off_24D98FF50;
        *(_DWORD *)(v8 + 24) = 0;
        *(_QWORD *)(v8 + 32) = 0;
        *(_QWORD *)(v8 + 40) = 0;
        *((_QWORD *)this + 3) = v8;
      }
      v9 = (const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)*((_QWORD *)a2 + 3);
      if (!v9)
        v9 = *(const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo **)(awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_
                                                                                               + 24);
      awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergeFrom((awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)v8, v9);
    }
  }
}

void sub_218A24BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics::~LocationGnssSWRecoveryStatistics(awd::metrics::LocationGnssSWRecoveryStatistics *this)
{
  *(_QWORD *)this = &off_24D98FFC8;
  awd::metrics::LocationGnssSWRecoveryStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FFC8;
  awd::metrics::LocationGnssSWRecoveryStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D98FFC8;
  awd::metrics::LocationGnssSWRecoveryStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationGnssSWRecoveryStatistics::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = this;
  v2 = this[2];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  if ((_QWORD *)awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_ != v1)
  {
    this = (_QWORD *)v1[3];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::default_instance(awd::metrics::LocationGnssSWRecoveryStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationGnssSWRecoveryStatistics::New(awd::metrics::LocationGnssSWRecoveryStatistics *this)
{
  _QWORD *result;
  uint64_t v2;

  result = (_QWORD *)operator new();
  v2 = MEMORY[0x24BEDD958];
  *result = &off_24D98FFC8;
  result[1] = 0;
  result[2] = v2;
  result[3] = 0;
  result[4] = 0;
  return result;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::Clear(uint64_t this)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v1 = this;
  v2 = *(_BYTE *)(this + 36);
  if (v2)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 36) & 4) != 0)
    {
      this = *(_QWORD *)(this + 24);
      if (this)
        this = awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::MergePartialFromCodedStream(awd::metrics::LocationGnssSWRecoveryStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  unsigned int v8;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  int v13;
  uint64_t result;
  _QWORD *v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  unsigned int v24;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v6;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v6 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v11 = (char *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
            if (!(_DWORD)result)
              return result;
            v12 = (_BYTE *)*((_QWORD *)a2 + 1);
            v10 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *v4 = *v11;
            v12 = v11 + 1;
            *((_QWORD *)a2 + 1) = v12;
          }
          v13 = *((_DWORD *)this + 9) | 1;
          *((_DWORD *)this + 9) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((_QWORD *)a2 + 1) = v12 + 1;
            goto LABEL_27;
          }
        }
        if (v8 != 2)
          break;
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_19;
        v13 = *((_DWORD *)this + 9);
LABEL_27:
        *((_DWORD *)this + 9) = v13 | 2;
        if (*((_QWORD *)this + 2) == v5)
        {
          v15 = (_QWORD *)operator new();
          v15[1] = 0;
          v15[2] = 0;
          *v15 = 0;
          *((_QWORD *)this + 2) = v15;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 < *((_QWORD *)a2 + 2) && *v16 == 26)
        {
          *((_QWORD *)a2 + 1) = v16 + 1;
          goto LABEL_33;
        }
      }
      if (v8 != 3)
      {
        v9 = TagFallback & 7;
        goto LABEL_19;
      }
      v9 = TagFallback & 7;
      if (v9 == 2)
        break;
LABEL_19:
      if (v9 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_33:
    *((_DWORD *)this + 9) |= 4u;
    v17 = *((_QWORD *)this + 3);
    if (!v17)
    {
      v17 = operator new();
      *(_QWORD *)(v17 + 8) = 0;
      *(_QWORD *)(v17 + 16) = 0;
      *(_QWORD *)v17 = &off_24D98FF50;
      *(_DWORD *)(v17 + 24) = 0;
      *(_QWORD *)(v17 + 32) = 0;
      *(_QWORD *)(v17 + 40) = 0;
      *((_QWORD *)this + 3) = v17;
    }
    v24 = 0;
    v18 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))
        return 0;
    }
    else
    {
      v24 = *v18;
      *((_QWORD *)a2 + 1) = v18 + 1;
    }
    v19 = *((_DWORD *)a2 + 14);
    v20 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v19 + 1;
    if (v19 >= v20)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergePartialFromCodedStream((awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)v17, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v21 = *((_DWORD *)a2 + 14);
    v22 = __OFSUB__(v21, 1);
    v23 = v21 - 1;
    if (v23 < 0 == v22)
      *((_DWORD *)a2 + 14) = v23;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    if ((*(_DWORD *)(v5 + 36) & 4) == 0)
      return this;
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_7:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
    v7 = *(_QWORD *)(awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_ + 24);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::ByteSize(awd::metrics::LocationGnssSWRecoveryStatistics *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_23;
  }
  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0)
      goto LABEL_16;
LABEL_7:
    v4 = *((_QWORD *)this + 2);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 8);
    if ((v5 & 0x80u) == 0)
      v8 = *(unsigned __int8 *)(v4 + 23);
    else
      v8 = v7;
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v7 = *(_QWORD *)(v4 + 8);
      v2 = *((_DWORD *)this + 9);
      v6 = *(_BYTE *)(v4 + 23);
    }
    else
    {
      v9 = 1;
    }
    if (v6 < 0)
      v5 = v7;
    v3 = (v3 + v9 + v5 + 1);
    goto LABEL_16;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 36) & 2) != 0)
    goto LABEL_7;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)*((_QWORD *)this + 3);
    if (!v10)
      v10 = *(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo **)(awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_
                                                                                        + 24);
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::ByteSize(v10);
    v12 = (int)v11;
    if (v11 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    else
      v13 = 1;
    v3 = (v3 + v12 + v13 + 1);
  }
LABEL_23:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void awd::metrics::LocationGnssSWRecoveryStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationGnssSWRecoveryStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGnssSWRecoveryStatistics::CopyFrom(awd::metrics::LocationGnssSWRecoveryStatistics *this, const awd::metrics::LocationGnssSWRecoveryStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGnssSWRecoveryStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationGnssSWRecoveryStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::IsInitialized(awd::metrics::LocationGnssSWRecoveryStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::Swap(uint64_t this, awd::metrics::LocationGnssSWRecoveryStatistics *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (awd::metrics::LocationGnssSWRecoveryStatistics *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationGnssSWRecoveryStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGnssSWRecoveryStatistics");
}

BOOL awd::metrics::LocationVisibilityAssertion_InvalidationReason_IsValid(awd::metrics *this)
{
  return this < 2;
}

uint64_t awd::metrics::LocationVisibilityAssertion::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationVisibilityAssertion *awd::metrics::LocationVisibilityAssertion::LocationVisibilityAssertion(awd::metrics::LocationVisibilityAssertion *this, const awd::metrics::LocationVisibilityAssertion *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_24D990040;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_QWORD *)this + 5) = 0;
  awd::metrics::LocationVisibilityAssertion::MergeFrom(this, a2);
  return this;
}

void sub_218A253FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationVisibilityAssertion::MergeFrom(awd::metrics::LocationVisibilityAssertion *this, const awd::metrics::LocationVisibilityAssertion *a2)
{
  int v4;
  uint64_t v5;
  const std::string *v6;
  std::string *v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  v4 = *((_DWORD *)a2 + 12);
  if (!(_BYTE)v4)
    goto LABEL_12;
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 12) |= 1u;
    *((_QWORD *)this + 1) = v5;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v6 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 12) |= 2u;
  v7 = (std::string *)*((_QWORD *)this + 2);
  if (v7 == (std::string *)MEMORY[0x24BEDD958])
  {
    v7 = (std::string *)operator new();
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v7;
  }
  std::string::operator=(v7, v6);
  v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  v8 = *((_QWORD *)a2 + 3);
  *((_DWORD *)this + 12) |= 4u;
  *((_QWORD *)this + 3) = v8;
  v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  v9 = *((_BYTE *)a2 + 32);
  *((_DWORD *)this + 12) |= 8u;
  *((_BYTE *)this + 32) = v9;
  v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  v10 = *((_BYTE *)a2 + 33);
  *((_DWORD *)this + 12) |= 0x10u;
  *((_BYTE *)this + 33) = v10;
  v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  v11 = *((_BYTE *)a2 + 34);
  *((_DWORD *)this + 12) |= 0x20u;
  *((_BYTE *)this + 34) = v11;
  v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 0x40) != 0)
  {
LABEL_22:
    v12 = *((_BYTE *)a2 + 35);
    *((_DWORD *)this + 12) |= 0x40u;
    *((_BYTE *)this + 35) = v12;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x80) != 0)
      goto LABEL_23;
LABEL_12:
    if ((v4 & 0x100) == 0)
      return;
    goto LABEL_25;
  }
LABEL_11:
  if ((v4 & 0x80) == 0)
    goto LABEL_12;
LABEL_23:
  v13 = *((_DWORD *)a2 + 9);
  if (v13 >= 2)
    awd::metrics::LocationVisibilityAssertion::MergeFrom();
  *((_DWORD *)this + 12) |= 0x80u;
  *((_DWORD *)this + 9) = v13;
  if ((*((_DWORD *)a2 + 12) & 0x100) != 0)
  {
LABEL_25:
    v14 = *((_DWORD *)a2 + 10);
    if (v14 >= 3)
      awd::metrics::LocationVisibilityAssertion::MergeFrom();
    *((_DWORD *)this + 12) |= 0x100u;
    *((_DWORD *)this + 10) = v14;
  }
}

void sub_218A25600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationVisibilityAssertion::~LocationVisibilityAssertion(awd::metrics::LocationVisibilityAssertion *this)
{
  *(_QWORD *)this = &off_24D990040;
  awd::metrics::LocationVisibilityAssertion::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990040;
  awd::metrics::LocationVisibilityAssertion::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990040;
  awd::metrics::LocationVisibilityAssertion::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationVisibilityAssertion::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationVisibilityAssertion::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationVisibilityAssertion::default_instance(awd::metrics::LocationVisibilityAssertion *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationVisibilityAssertion::default_instance_;
  if (!awd::metrics::LocationVisibilityAssertion::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationVisibilityAssertion::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationVisibilityAssertion::New(awd::metrics::LocationVisibilityAssertion *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  *(_QWORD *)result = &off_24D990040;
  *(_QWORD *)(result + 8) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationVisibilityAssertion::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 48);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    v1 = *(_DWORD *)(this + 48);
  }
  if ((v1 & 0xFF00) != 0)
    *(_DWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationVisibilityAssertion::MergePartialFromCodedStream(awd::metrics::LocationVisibilityAssertion *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  int v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  _QWORD *v24;
  _BYTE *v25;
  _BYTE *v26;
  unsigned int v27;
  _BYTE *v28;
  unsigned int v29;
  _BYTE *v30;
  unsigned int v31;
  _BYTE *v32;
  unsigned int v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  unsigned int v37;
  unsigned __int8 *v38;
  uint64_t result;
  unsigned int v40;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 24);
  v6 = MEMORY[0x24BEDD958];
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
LABEL_34:
          v13 = *((_DWORD *)this + 12) | 1;
          *((_DWORD *)this + 12) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((_QWORD *)a2 + 1) = v12 + 1;
            goto LABEL_37;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_28;
        v13 = *((_DWORD *)this + 12);
LABEL_37:
        *((_DWORD *)this + 12) = v13 | 2;
        if (*((_QWORD *)this + 2) == v6)
        {
          v24 = (_QWORD *)operator new();
          v24[1] = 0;
          v24[2] = 0;
          *v24 = 0;
          *((_QWORD *)this + 2) = v24;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v25 >= v14 || *v25 != 24)
          continue;
        v15 = v25 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_43:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v15;
          v26 = v15 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v26 >= v14 || *v26 != 32)
          continue;
        v16 = v26 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_51:
        v40 = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
          if (!(_DWORD)result)
            return result;
          v27 = v40;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v27 = *v16;
          v28 = v16 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_BYTE *)this + 32) = v27 != 0;
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v28 >= v14 || *v28 != 40)
          continue;
        v17 = v28 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_59:
        v40 = 0;
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
          if (!(_DWORD)result)
            return result;
          v29 = v40;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v29 = *v17;
          v30 = v17 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_BYTE *)this + 33) = v29 != 0;
        *((_DWORD *)this + 12) |= 0x10u;
        if ((unint64_t)v30 >= v14 || *v30 != 48)
          continue;
        v18 = v30 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_67:
        v40 = 0;
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
          if (!(_DWORD)result)
            return result;
          v31 = v40;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v31 = *v18;
          v32 = v18 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_BYTE *)this + 34) = v31 != 0;
        *((_DWORD *)this + 12) |= 0x20u;
        if ((unint64_t)v32 >= v14 || *v32 != 56)
          continue;
        v19 = v32 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_75:
        v40 = 0;
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
          if (!(_DWORD)result)
            return result;
          v33 = v40;
        }
        else
        {
          v33 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        if (v33 <= 1)
        {
          *((_DWORD *)this + 12) |= 0x80u;
          *((_DWORD *)this + 9) = v33;
        }
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v34 >= v20 || *v34 != 64)
          continue;
        v21 = v34 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_85:
        v40 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
          if (!(_DWORD)result)
            return result;
          v35 = v40;
        }
        else
        {
          v35 = *v21;
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
        if (v35 <= 2)
        {
          *((_DWORD *)this + 12) |= 0x100u;
          *((_DWORD *)this + 10) = v35;
        }
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v36 >= v22 || *v36 != 72)
          continue;
        v23 = v36 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_95:
        v40 = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
          if (!(_DWORD)result)
            return result;
          v37 = v40;
          v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v37 = *v23;
          v38 = (unsigned __int8 *)(v23 + 1);
          *((_QWORD *)a2 + 1) = v38;
        }
        *((_BYTE *)this + 35) = v37 != 0;
        *((_DWORD *)this + 12) |= 0x40u;
        if (v38 != (unsigned __int8 *)v22 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_43;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_59;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_67;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 8u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_85;
      case 9u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_95;
      default:
        v9 = TagFallback & 7;
LABEL_28:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationVisibilityAssertion::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 33), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x80) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 34), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 0x100) == 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x100) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 35), (uint64_t)a2, a4);
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 35), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationVisibilityAssertion::ByteSize(awd::metrics::LocationVisibilityAssertion *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;

  v2 = *((_DWORD *)this + 12);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_34;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
LABEL_7:
    v5 = *((_QWORD *)this + 2);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v7 = v6;
    v8 = *(_QWORD *)(v5 + 8);
    if ((v6 & 0x80u) == 0)
      v9 = *(unsigned __int8 *)(v5 + 23);
    else
      v9 = v8;
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
      v6 = *(unsigned __int8 *)(v5 + 23);
      v8 = *(_QWORD *)(v5 + 8);
      v2 = *((_DWORD *)this + 12);
      v7 = *(_BYTE *)(v5 + 23);
    }
    else
    {
      v10 = 1;
    }
    if (v7 < 0)
      v6 = v8;
    v3 += v10 + v6 + 1;
    goto LABEL_16;
  }
  v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  v2 = *((_DWORD *)this + 12);
  if ((v2 & 2) != 0)
    goto LABEL_7;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 3))
        + 1;
    v2 = *((_DWORD *)this + 12);
  }
  v11 = v3 + 2;
  if ((v2 & 8) == 0)
    v11 = v3;
  if ((v2 & 0x10) != 0)
    v11 += 2;
  if ((v2 & 0x20) != 0)
    v11 += 2;
  if ((v2 & 0x40) != 0)
    v4 = v11 + 2;
  else
    v4 = v11;
  if ((v2 & 0x80) != 0)
  {
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v12 & 0x80000000) != 0)
    {
      v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v13 = 2;
    }
    v4 = (v13 + v4);
  }
LABEL_34:
  if ((v2 & 0x100) != 0)
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v14 & 0x80000000) != 0)
    {
      v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    }
    else
    {
      v15 = 2;
    }
    v4 = (v15 + v4);
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

void awd::metrics::LocationVisibilityAssertion::CheckTypeAndMergeFrom(awd::metrics::LocationVisibilityAssertion *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationVisibilityAssertion::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationVisibilityAssertion::CopyFrom(awd::metrics::LocationVisibilityAssertion *this, const awd::metrics::LocationVisibilityAssertion *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationVisibilityAssertion *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationVisibilityAssertion::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationVisibilityAssertion::IsInitialized(awd::metrics::LocationVisibilityAssertion *this)
{
  return 1;
}

uint64_t awd::metrics::LocationVisibilityAssertion::Swap(uint64_t this, awd::metrics::LocationVisibilityAssertion *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (awd::metrics::LocationVisibilityAssertion *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    LOBYTE(v5) = *(_BYTE *)(this + 32);
    *(_BYTE *)(this + 32) = *((_BYTE *)a2 + 32);
    *((_BYTE *)a2 + 32) = v5;
    LOBYTE(v5) = *(_BYTE *)(this + 33);
    *(_BYTE *)(this + 33) = *((_BYTE *)a2 + 33);
    *((_BYTE *)a2 + 33) = v5;
    LOBYTE(v5) = *(_BYTE *)(this + 34);
    *(_BYTE *)(this + 34) = *((_BYTE *)a2 + 34);
    *((_BYTE *)a2 + 34) = v5;
    LOBYTE(v5) = *(_BYTE *)(this + 35);
    *(_BYTE *)(this + 35) = *((_BYTE *)a2 + 35);
    *((_BYTE *)a2 + 35) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationVisibilityAssertion::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationVisibilityAssertion");
}

BOOL awd::metrics::LocationPhoneNumberAvailability_SubscriptionAndPhoneNumberStatus_IsValid(awd::metrics *this)
{
  return this < 6;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 29) = 0;
  return this;
}

awd::metrics::LocationPhoneNumberAvailability *awd::metrics::LocationPhoneNumberAvailability::LocationPhoneNumberAvailability(awd::metrics::LocationPhoneNumberAvailability *this, const awd::metrics::LocationPhoneNumberAvailability *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_24D9900B8;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)((char *)this + 29) = 0;
  awd::metrics::LocationPhoneNumberAvailability::MergeFrom(this, a2);
  return this;
}

void sub_218A261BC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPhoneNumberAvailability::MergeFrom(awd::metrics::LocationPhoneNumberAvailability *this, const awd::metrics::LocationPhoneNumberAvailability *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  unsigned int v10;
  int v11;
  int v12;
  char v13;
  int v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  v4 = *((_DWORD *)a2 + 14);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 14) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_20;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 14) |= 2u;
  v9 = (std::string *)*((_QWORD *)this + 2);
  if (v9 == (std::string *)MEMORY[0x24BEDD958])
  {
    v9 = (std::string *)operator new();
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v9;
  }
  std::string::operator=(v9, v8);
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_20:
  v10 = *((_DWORD *)a2 + 6);
  if (v10 >= 6)
    awd::metrics::LocationPhoneNumberAvailability::MergeFrom();
  *((_DWORD *)this + 14) |= 4u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 14) |= 8u;
  *((_DWORD *)this + 7) = v11;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_24:
    v13 = *((_BYTE *)a2 + 36);
    *((_DWORD *)this + 14) |= 0x20u;
    *((_BYTE *)this + 36) = v13;
    v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 14) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x20) != 0)
    goto LABEL_24;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_25:
  v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 14) |= 0x40u;
  *((_DWORD *)this + 10) = v14;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 14) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    v4 = *((_DWORD *)a2 + 14);
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    v6 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 14) |= 0x100u;
    *((_DWORD *)this + 12) = v6;
  }
}

void sub_218A263B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPhoneNumberAvailability::~LocationPhoneNumberAvailability(awd::metrics::LocationPhoneNumberAvailability *this)
{
  *(_QWORD *)this = &off_24D9900B8;
  awd::metrics::LocationPhoneNumberAvailability::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9900B8;
  awd::metrics::LocationPhoneNumberAvailability::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9900B8;
  awd::metrics::LocationPhoneNumberAvailability::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::default_instance(awd::metrics::LocationPhoneNumberAvailability *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationPhoneNumberAvailability::default_instance_;
  if (!awd::metrics::LocationPhoneNumberAvailability::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPhoneNumberAvailability::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::New(awd::metrics::LocationPhoneNumberAvailability *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  *(_QWORD *)result = &off_24D9900B8;
  *(_QWORD *)(result + 8) = 0;
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 29) = 0;
  return result;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 56);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 29) = 0;
    v1 = *(_DWORD *)(this + 56);
  }
  if ((v1 & 0xFF00) != 0)
    *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  return this;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::MergePartialFromCodedStream(awd::metrics::LocationPhoneNumberAvailability *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  uint64_t v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  int v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  _QWORD *v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  unsigned int v27;
  _BYTE *v28;
  unsigned int v29;
  _BYTE *v30;
  unsigned int v31;
  _BYTE *v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  unsigned __int8 *v37;
  uint64_t result;
  unsigned int v39;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 40);
  v6 = MEMORY[0x24BEDD958];
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
LABEL_34:
          v13 = *((_DWORD *)this + 14) | 1;
          *((_DWORD *)this + 14) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((_QWORD *)a2 + 1) = v12 + 1;
            goto LABEL_37;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_28;
        v13 = *((_DWORD *)this + 14);
LABEL_37:
        *((_DWORD *)this + 14) = v13 | 2;
        if (*((_QWORD *)this + 2) == v6)
        {
          v23 = (_QWORD *)operator new();
          v23[1] = 0;
          v23[2] = 0;
          *v23 = 0;
          *((_QWORD *)this + 2) = v23;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v14 || *v24 != 24)
          continue;
        v15 = v24 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_43:
        v39 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v25 = v39;
        }
        else
        {
          v25 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        if (v25 <= 5)
        {
          *((_DWORD *)this + 14) |= 4u;
          *((_DWORD *)this + 6) = v25;
        }
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v26 >= v16 || *v26 != 32)
          continue;
        v17 = v26 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_53:
        v39 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v27 = v39;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v27 = *v17;
          v28 = v17 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 7) = v27;
        *((_DWORD *)this + 14) |= 8u;
        if ((unint64_t)v28 >= v16 || *v28 != 40)
          continue;
        v18 = v28 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_61:
        v39 = 0;
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v29 = v39;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v29 = *v18;
          v30 = v18 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 8) = v29;
        *((_DWORD *)this + 14) |= 0x10u;
        if ((unint64_t)v30 >= v16 || *v30 != 48)
          continue;
        v19 = v30 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_69:
        v39 = 0;
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v31 = v39;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v31 = *v19;
          v32 = v19 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_BYTE *)this + 36) = v31 != 0;
        *((_DWORD *)this + 14) |= 0x20u;
        if ((unint64_t)v32 >= v16 || *v32 != 56)
          continue;
        v20 = v32 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_77:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v20;
          v33 = v20 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 14) |= 0x40u;
        if ((unint64_t)v33 >= v16 || *v33 != 64)
          continue;
        v21 = v33 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_85:
        v39 = 0;
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v34 = v39;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v34 = *v21;
          v35 = v21 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 11) = v34;
        *((_DWORD *)this + 14) |= 0x80u;
        if ((unint64_t)v35 >= v16 || *v35 != 72)
          continue;
        v22 = v35 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_93:
        v39 = 0;
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v36 = v39;
          v37 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v36 = *v22;
          v37 = (unsigned __int8 *)(v22 + 1);
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 12) = v36;
        *((_DWORD *)this + 14) |= 0x100u;
        if (v37 != (unsigned __int8 *)v16 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_43;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_69;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_77;
      case 8u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_85;
      case 9u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_93;
      default:
        v9 = TagFallback & 7;
LABEL_28:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x100) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::ByteSize(awd::metrics::LocationPhoneNumberAvailability *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;

  v2 = *((_DWORD *)this + 14);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    if ((v2 & 0x100) == 0)
      goto LABEL_62;
    goto LABEL_56;
  }
  if ((v2 & 1) != 0)
  {
    LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 1))
                + 1;
    v2 = *((_DWORD *)this + 14);
    if ((v2 & 2) == 0)
      goto LABEL_17;
  }
  else
  {
    LODWORD(v3) = 0;
    if ((v2 & 2) == 0)
      goto LABEL_17;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 14);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  LODWORD(v3) = v3 + v9 + v5 + 1;
LABEL_17:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 14);
    }
    else
    {
      v11 = 2;
    }
    LODWORD(v3) = v11 + v3;
    if ((v2 & 8) == 0)
    {
LABEL_19:
      if ((v2 & 0x10) == 0)
        goto LABEL_39;
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_19;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 14);
  }
  else
  {
    v13 = 2;
  }
  LODWORD(v3) = v13 + v3;
  if ((v2 & 0x10) != 0)
  {
LABEL_33:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v14 & 0x80000000) != 0)
    {
      v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
      v2 = *((_DWORD *)this + 14);
    }
    else
    {
      v15 = 2;
    }
    LODWORD(v3) = v15 + v3;
  }
LABEL_39:
  if ((v2 & 0x20) != 0)
    v3 = (v3 + 2);
  else
    v3 = v3;
  if ((v2 & 0x40) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      v2 = *((_DWORD *)this + 14);
    }
    else
    {
      v17 = 2;
    }
    v3 = (v17 + v3);
    if ((v2 & 0x80) == 0)
    {
LABEL_44:
      if ((v2 & 0x100) == 0)
        goto LABEL_62;
      goto LABEL_56;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_44;
  }
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if ((v18 & 0x80000000) != 0)
  {
    v19 = 11;
  }
  else if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    v2 = *((_DWORD *)this + 14);
  }
  else
  {
    v19 = 2;
  }
  v3 = (v19 + v3);
  if ((v2 & 0x100) != 0)
  {
LABEL_56:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 11;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    }
    else
    {
      v21 = 2;
    }
    v3 = (v21 + v3);
  }
LABEL_62:
  *((_DWORD *)this + 13) = v3;
  return v3;
}

void awd::metrics::LocationPhoneNumberAvailability::CheckTypeAndMergeFrom(awd::metrics::LocationPhoneNumberAvailability *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationPhoneNumberAvailability::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPhoneNumberAvailability::CopyFrom(awd::metrics::LocationPhoneNumberAvailability *this, const awd::metrics::LocationPhoneNumberAvailability *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPhoneNumberAvailability *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationPhoneNumberAvailability::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::IsInitialized(awd::metrics::LocationPhoneNumberAvailability *this)
{
  return 1;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::Swap(uint64_t this, awd::metrics::LocationPhoneNumberAvailability *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationPhoneNumberAvailability *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 36);
    *(_BYTE *)(this + 36) = *((_BYTE *)a2 + 36);
    *((_BYTE *)a2 + 36) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationPhoneNumberAvailability::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPhoneNumberAvailability");
}

BOOL awd::metrics::LocationMobileAssetStatistics_AssetEvent_IsValid(awd::metrics *this)
{
  return this < 7;
}

BOOL awd::metrics::LocationMobileAssetStatistics_AssetType_IsValid(awd::metrics *this)
{
  return this < 2;
}

BOOL awd::metrics::LocationMobileAssetStatistics_AssetComponent_IsValid(awd::metrics *this)
{
  return this < 6;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEDD958];
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = v1;
  *(_BYTE *)(this + 32) = 0;
  return this;
}

awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::LocationMobileAssetStatistics_CarrierSettingsStatus(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *a2)
{
  uint64_t v3;

  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D990130;
  *((_QWORD *)this + 1) = v3;
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_BYTE *)this + 32) = 0;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(this, a2);
  return this;
}

void sub_218A27004(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *a2)
{
  int v4;
  char v5;
  const std::string *v6;
  std::string *v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _BYTE v12[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v6 = (const std::string *)*((_QWORD *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      v7 = (std::string *)*((_QWORD *)this + 1);
      if (v7 == (std::string *)MEMORY[0x24BEDD958])
      {
        v7 = (std::string *)operator new();
        v7->__r_.__value_.__l.__size_ = 0;
        v7->__r_.__value_.__r.__words[2] = 0;
        v7->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 1) = v7;
      }
      std::string::operator=(v7, v6);
      v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_16;
      }
    }
    else if ((*((_BYTE *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 10) |= 2u;
    *((_DWORD *)this + 4) = v8;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_17;
    }
LABEL_16:
    v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 10) |= 4u;
    *((_DWORD *)this + 5) = v9;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_18;
    }
LABEL_17:
    v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 10) |= 8u;
    *((_DWORD *)this + 6) = v10;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        return;
      goto LABEL_10;
    }
LABEL_18:
    v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 10) |= 0x10u;
    *((_DWORD *)this + 7) = v11;
    if ((*((_DWORD *)a2 + 10) & 0x20) == 0)
      return;
LABEL_10:
    v5 = *((_BYTE *)a2 + 32);
    *((_DWORD *)this + 10) |= 0x20u;
    *((_BYTE *)this + 32) = v5;
  }
}

void sub_218A2718C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::~LocationMobileAssetStatistics_CarrierSettingsStatus(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this)
{
  *(_QWORD *)this = &off_24D990130;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990130;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990130;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 8);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  if (!awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::New(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)result = &off_24D990130;
  *(_QWORD *)(result + 8) = v2;
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = 0;
  return result;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 40))
  {
    if ((*(_BYTE *)(this + 40) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(_BYTE **)v1 = 0;
          *(_QWORD *)(v1 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v1 = 0;
          *(_BYTE *)(v1 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
    *(_BYTE *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergePartialFromCodedStream(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  _QWORD *v8;
  uint64_t result;
  unint64_t v10;
  _BYTE *v11;
  char *v12;
  unsigned int v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  unsigned int v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE *v22;
  unsigned int v23;
  _BYTE *v24;
  unsigned int v25;
  unsigned __int8 *v26;
  unsigned int v27;

  v4 = MEMORY[0x24BEDD958];
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_28;
        *((_DWORD *)this + 10) |= 1u;
        if (*((_QWORD *)this + 1) == v4)
        {
          v8 = (_QWORD *)operator new();
          v8[1] = 0;
          v8[2] = 0;
          *v8 = 0;
          *((_QWORD *)this + 1) = v8;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if ((_DWORD)result)
        {
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v11 < v10 && *v11 == 16)
          {
            v12 = v11 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_18;
          }
          continue;
        }
        return result;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_18:
        v27 = 0;
        if ((unint64_t)v12 < v10 && (*v12 & 0x80000000) == 0)
        {
          v13 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)a2 + 1) = v14;
LABEL_34:
          *((_DWORD *)this + 4) = v13;
          *((_DWORD *)this + 10) |= 2u;
          if ((unint64_t)v14 < v10 && *v14 == 24)
          {
            v15 = v14 + 1;
            *((_QWORD *)a2 + 1) = v15;
            goto LABEL_37;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
        if ((_DWORD)result)
        {
          v13 = v27;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_34;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_37:
        v27 = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
          if (!(_DWORD)result)
            return result;
          v19 = v27;
          v20 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v19 = *v15;
          v20 = v15 + 1;
          *((_QWORD *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 5) = v19;
        *((_DWORD *)this + 10) |= 4u;
        if ((unint64_t)v20 >= v10 || *v20 != 32)
          continue;
        v16 = v20 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_45:
        v27 = 0;
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
          if (!(_DWORD)result)
            return result;
          v21 = v27;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v21 = *v16;
          v22 = v16 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 6) = v21;
        *((_DWORD *)this + 10) |= 8u;
        if ((unint64_t)v22 >= v10 || *v22 != 40)
          continue;
        v17 = v22 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_53:
        v27 = 0;
        if ((unint64_t)v17 >= v10 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
          if (!(_DWORD)result)
            return result;
          v23 = v27;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v23 = *v17;
          v24 = v17 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 7) = v23;
        *((_DWORD *)this + 10) |= 0x10u;
        if ((unint64_t)v24 >= v10 || *v24 != 48)
          continue;
        v18 = v24 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_61:
        v27 = 0;
        if ((unint64_t)v18 >= v10 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
          if (!(_DWORD)result)
            return result;
          v25 = v27;
          v26 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v25 = *v18;
          v26 = (unsigned __int8 *)(v18 + 1);
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_BYTE *)this + 32) = v25 != 0;
        *((_DWORD *)this + 10) |= 0x20u;
        if (v26 != (unsigned __int8 *)v10 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      case 5u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      case 6u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      default:
        v7 = TagFallback & 7;
LABEL_28:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::ByteSize(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_46;
  }
  if ((*((_BYTE *)this + 40) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 1);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v10 = v11 + 1;
    v2 = *((_DWORD *)this + 10);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 2;
  }
  if (v7 < 0)
    v6 = v8;
  v3 = v10 + v6;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v12 & 0x80000000) != 0)
    {
      v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v13 = 2;
    }
    v3 += v13;
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_23;
LABEL_31:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v16 & 0x80000000) != 0)
    {
      v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v17 = 2;
    }
    v3 += v17;
    if ((v2 & 0x10) == 0)
      goto LABEL_43;
    goto LABEL_37;
  }
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 10);
  }
  else
  {
    v15 = 2;
  }
  v3 += v15;
  if ((v2 & 8) != 0)
    goto LABEL_31;
LABEL_23:
  if ((v2 & 0x10) != 0)
  {
LABEL_37:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v18 & 0x80000000) != 0)
    {
      v19 = 11;
    }
    else if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v19 = 2;
    }
    v3 += v19;
  }
LABEL_43:
  if ((v2 & 0x20) != 0)
    result = v3 + 2;
  else
    result = v3;
LABEL_46:
  *((_DWORD *)this + 9) = result;
  return result;
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::CheckTypeAndMergeFrom(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::CopyFrom(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::IsInitialized(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Swap(uint64_t this, awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 32);
    *(_BYTE *)(this + 32) = *((_BYTE *)a2 + 32);
    *((_BYTE *)a2 + 32) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMobileAssetStatistics.CarrierSettingsStatus");
}

double awd::metrics::LocationMobileAssetStatistics::SharedCtor(awd::metrics::LocationMobileAssetStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_QWORD *)this + 13) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 54) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

awd::metrics::LocationMobileAssetStatistics *awd::metrics::LocationMobileAssetStatistics::LocationMobileAssetStatistics(awd::metrics::LocationMobileAssetStatistics *this, const awd::metrics::LocationMobileAssetStatistics *a2)
{
  *(_QWORD *)this = &off_24D9901A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 13) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 54) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  awd::metrics::LocationMobileAssetStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A27B60(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMobileAssetStatistics::MergeFrom(awd::metrics::LocationMobileAssetStatistics *this, const awd::metrics::LocationMobileAssetStatistics *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  const std::string *v7;
  std::string *v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *v23;
  uint64_t v24;
  uint64_t v25;
  const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *v26;
  uint64_t v27;
  uint64_t v28;
  const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *v29;
  uint64_t v30;
  uint64_t v31;
  const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *v32;
  _BYTE v33[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v33);
  }
  v4 = *((_DWORD *)a2 + 27);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v6 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 27) |= 1u;
    *((_QWORD *)this + 1) = v6;
    v4 = *((_DWORD *)a2 + 27);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v7 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 27) |= 2u;
  v8 = (std::string *)*((_QWORD *)this + 2);
  if (v8 == (std::string *)MEMORY[0x24BEDD958])
  {
    v8 = (std::string *)operator new();
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v8;
  }
  std::string::operator=(v8, v7);
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_29;
  }
LABEL_27:
  v9 = *((_DWORD *)a2 + 6);
  if (v9 >= 7)
    awd::metrics::LocationMobileAssetStatistics::MergeFrom();
  *((_DWORD *)this + 27) |= 4u;
  *((_DWORD *)this + 6) = v9;
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_31;
  }
LABEL_29:
  v10 = *((_DWORD *)a2 + 7);
  if (v10 >= 2)
    awd::metrics::LocationMobileAssetStatistics::MergeFrom();
  *((_DWORD *)this + 27) |= 8u;
  *((_DWORD *)this + 7) = v10;
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_33:
    v12 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 27) |= 0x20u;
    *((_DWORD *)this + 9) = v12;
    v4 = *((_DWORD *)a2 + 27);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_31:
  v11 = *((_DWORD *)a2 + 8);
  if (v11 >= 6)
    awd::metrics::LocationMobileAssetStatistics::MergeFrom();
  *((_DWORD *)this + 27) |= 0x10u;
  *((_DWORD *)this + 8) = v11;
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x20) != 0)
    goto LABEL_33;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_34:
  v13 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 27) |= 0x40u;
  *((_DWORD *)this + 10) = v13;
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 27) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    v4 = *((_DWORD *)a2 + 27);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_48;
  if ((v4 & 0x100) != 0)
  {
    v14 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 27) |= 0x100u;
    *((_DWORD *)this + 12) = v14;
    v4 = *((_DWORD *)a2 + 27);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_38;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 27) |= 0x200u;
  *((_DWORD *)this + 13) = v15;
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_39;
  }
LABEL_38:
  v16 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 27) |= 0x400u;
  *((_DWORD *)this + 14) = v16;
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_40;
  }
LABEL_39:
  v17 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 27) |= 0x800u;
  *((_DWORD *)this + 15) = v17;
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_41;
  }
LABEL_40:
  v18 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 27) |= 0x1000u;
  *((_DWORD *)this + 16) = v18;
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_42;
  }
LABEL_41:
  v19 = *((_BYTE *)a2 + 68);
  *((_DWORD *)this + 27) |= 0x2000u;
  *((_BYTE *)this + 68) = v19;
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0)
      goto LABEL_48;
    goto LABEL_43;
  }
LABEL_42:
  v20 = *((_BYTE *)a2 + 69);
  *((_DWORD *)this + 27) |= 0x4000u;
  *((_BYTE *)this + 69) = v20;
  v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x8000) == 0)
    goto LABEL_48;
LABEL_43:
  *((_DWORD *)this + 27) |= 0x8000u;
  v21 = *((_QWORD *)this + 9);
  if (!v21)
  {
    v21 = operator new();
    v22 = MEMORY[0x24BEDD958];
    *(_QWORD *)v21 = &off_24D990130;
    *(_QWORD *)(v21 + 8) = v22;
    *(_DWORD *)(v21 + 36) = 0;
    *(_DWORD *)(v21 + 40) = 0;
    *(_QWORD *)(v21 + 16) = 0;
    *(_QWORD *)(v21 + 24) = 0;
    *(_BYTE *)(v21 + 32) = 0;
    *((_QWORD *)this + 9) = v21;
  }
  v23 = (const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((_QWORD *)a2 + 9);
  if (!v23)
    v23 = *(const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
                                                                                      + 72);
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom((awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)v21, v23);
  v4 = *((_DWORD *)a2 + 27);
LABEL_48:
  if ((v4 & 0xFF0000) == 0)
    return;
  if ((v4 & 0x10000) != 0)
  {
    *((_DWORD *)this + 27) |= 0x10000u;
    v24 = *((_QWORD *)this + 10);
    if (!v24)
    {
      v24 = operator new();
      v25 = MEMORY[0x24BEDD958];
      *(_QWORD *)v24 = &off_24D990130;
      *(_QWORD *)(v24 + 8) = v25;
      *(_DWORD *)(v24 + 36) = 0;
      *(_DWORD *)(v24 + 40) = 0;
      *(_QWORD *)(v24 + 16) = 0;
      *(_QWORD *)(v24 + 24) = 0;
      *(_BYTE *)(v24 + 32) = 0;
      *((_QWORD *)this + 10) = v24;
    }
    v26 = (const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((_QWORD *)a2 + 10);
    if (!v26)
      v26 = *(const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
                                                                                        + 80);
    awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom((awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)v24, v26);
    v4 = *((_DWORD *)a2 + 27);
    if ((v4 & 0x20000) == 0)
    {
LABEL_51:
      if ((v4 & 0x40000) == 0)
        return;
      goto LABEL_63;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_51;
  }
  *((_DWORD *)this + 27) |= 0x20000u;
  v27 = *((_QWORD *)this + 11);
  if (!v27)
  {
    v27 = operator new();
    v28 = MEMORY[0x24BEDD958];
    *(_QWORD *)v27 = &off_24D990130;
    *(_QWORD *)(v27 + 8) = v28;
    *(_DWORD *)(v27 + 36) = 0;
    *(_DWORD *)(v27 + 40) = 0;
    *(_QWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v27 + 24) = 0;
    *(_BYTE *)(v27 + 32) = 0;
    *((_QWORD *)this + 11) = v27;
  }
  v29 = (const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((_QWORD *)a2 + 11);
  if (!v29)
    v29 = *(const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
                                                                                      + 88);
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom((awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)v27, v29);
  if ((*((_DWORD *)a2 + 27) & 0x40000) != 0)
  {
LABEL_63:
    *((_DWORD *)this + 27) |= 0x40000u;
    v30 = *((_QWORD *)this + 12);
    if (!v30)
    {
      v30 = operator new();
      v31 = MEMORY[0x24BEDD958];
      *(_QWORD *)v30 = &off_24D990130;
      *(_QWORD *)(v30 + 8) = v31;
      *(_DWORD *)(v30 + 36) = 0;
      *(_DWORD *)(v30 + 40) = 0;
      *(_QWORD *)(v30 + 16) = 0;
      *(_QWORD *)(v30 + 24) = 0;
      *(_BYTE *)(v30 + 32) = 0;
      *((_QWORD *)this + 12) = v30;
    }
    v32 = (const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((_QWORD *)a2 + 12);
    if (!v32)
      v32 = *(const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
                                                                                        + 96);
    awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom((awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)v30, v32);
  }
}

void sub_218A28010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMobileAssetStatistics::~LocationMobileAssetStatistics(awd::metrics::LocationMobileAssetStatistics *this)
{
  *(_QWORD *)this = &off_24D9901A8;
  awd::metrics::LocationMobileAssetStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9901A8;
  awd::metrics::LocationMobileAssetStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9901A8;
  awd::metrics::LocationMobileAssetStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationMobileAssetStatistics::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = this;
  v2 = this[2];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  if ((_QWORD *)awd::metrics::LocationMobileAssetStatistics::default_instance_ != v1)
  {
    v4 = v1[9];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = v1[10];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = v1[11];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    this = (_QWORD *)v1[12];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 104) = a2;
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics::default_instance(awd::metrics::LocationMobileAssetStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMobileAssetStatistics::default_instance_;
  if (!awd::metrics::LocationMobileAssetStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMobileAssetStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMobileAssetStatistics::New(awd::metrics::LocationMobileAssetStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D9901A8;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 104) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 54) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMobileAssetStatistics::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  v2 = *(_DWORD *)(this + 108);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 40) = 0;
    v2 = *(_DWORD *)(this + 108);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 62) = 0;
    if ((v2 & 0x8000) != 0)
    {
      this = *(_QWORD *)(this + 72);
      if (this)
      {
        this = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Clear(this);
        v2 = *(_DWORD *)(v1 + 108);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      this = *(_QWORD *)(v1 + 80);
      if (this)
      {
        this = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Clear(this);
        v2 = *(_DWORD *)(v1 + 108);
      }
    }
    if ((v2 & 0x20000) != 0)
    {
      this = *(_QWORD *)(v1 + 88);
      if (this)
      {
        this = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Clear(this);
        v2 = *(_DWORD *)(v1 + 108);
      }
    }
    if ((v2 & 0x40000) != 0)
    {
      this = *(_QWORD *)(v1 + 96);
      if (this)
        this = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 108) = 0;
  return this;
}

