uint64_t awd::metrics::LocationMobileAssetStatistics::MergePartialFromCodedStream(awd::metrics::LocationMobileAssetStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  int v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  unsigned __int8 *v29;
  int v30;
  uint64_t result;
  _QWORD *v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;
  _BYTE *v39;
  unsigned int v40;
  _BYTE *v41;
  unsigned int v42;
  _BYTE *v43;
  unsigned int v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  unsigned int v48;
  _BYTE *v49;
  unsigned int v50;
  _BYTE *v51;
  unsigned int v52;
  _BYTE *v53;
  unsigned int v54;
  _BYTE *v55;
  unsigned int v56;
  _BYTE *v57;
  unsigned int v58;
  unsigned __int8 *v59;
  uint64_t v60;
  char *v61;
  int v62;
  int v63;
  int v64;
  BOOL v65;
  int v66;
  unsigned __int8 *v67;
  uint64_t v68;
  char *v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unsigned __int8 *v74;
  uint64_t v75;
  char *v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned __int8 *v81;
  uint64_t v82;
  char *v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = MEMORY[0x24BEDD958];
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        v12 = *((_DWORD *)this + 27) | 1;
        *((_DWORD *)this + 27) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((_QWORD *)a2 + 1) = v11 + 1;
          goto LABEL_56;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_48;
        v12 = *((_DWORD *)this + 27);
LABEL_56:
        *((_DWORD *)this + 27) = v12 | 2;
        if (*((_QWORD *)this + 2) == v5)
        {
          v32 = (_QWORD *)operator new();
          v32[1] = 0;
          v32[2] = 0;
          *v32 = 0;
          *((_QWORD *)this + 2) = v32;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v33 >= v13 || *v33 != 24)
          continue;
        v14 = v33 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_62:
        v88 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v34 = v88;
        }
        else
        {
          v34 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        if (v34 <= 6)
        {
          *((_DWORD *)this + 27) |= 4u;
          *((_DWORD *)this + 6) = v34;
        }
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v35 >= v15 || *v35 != 32)
          continue;
        v16 = v35 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_72:
        v88 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v36 = v88;
        }
        else
        {
          v36 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        if (v36 <= 1)
        {
          *((_DWORD *)this + 27) |= 8u;
          *((_DWORD *)this + 7) = v36;
        }
        v37 = (_BYTE *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v37 >= v17 || *v37 != 40)
          continue;
        v18 = v37 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_82:
        v88 = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v38 = v88;
        }
        else
        {
          v38 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        if (v38 <= 5)
        {
          *((_DWORD *)this + 27) |= 0x10u;
          *((_DWORD *)this + 8) = v38;
        }
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v39 >= v19 || *v39 != 48)
          continue;
        v20 = v39 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_92:
        v88 = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v40 = v88;
          v41 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v40 = *v20;
          v41 = v20 + 1;
          *((_QWORD *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 9) = v40;
        *((_DWORD *)this + 27) |= 0x20u;
        if ((unint64_t)v41 >= v19 || *v41 != 56)
          continue;
        v21 = v41 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_100:
        v88 = 0;
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v42 = v88;
          v43 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v42 = *v21;
          v43 = v21 + 1;
          *((_QWORD *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 10) = v42;
        *((_DWORD *)this + 27) |= 0x40u;
        if ((unint64_t)v43 >= v19 || *v43 != 64)
          continue;
        v22 = v43 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_108:
        v88 = 0;
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v44 = v88;
          v45 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v44 = *v22;
          v45 = v22 + 1;
          *((_QWORD *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 11) = v44;
        *((_DWORD *)this + 27) |= 0x80u;
        if ((unint64_t)v45 >= v19 || *v45 != 72)
          continue;
        v23 = v45 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_116:
        v88 = 0;
        if ((unint64_t)v23 >= v19 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v46 = v88;
          v47 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v46 = *v23;
          v47 = v23 + 1;
          *((_QWORD *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 12) = v46;
        *((_DWORD *)this + 27) |= 0x100u;
        if ((unint64_t)v47 >= v19 || *v47 != 80)
          continue;
        v24 = v47 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_124:
        v88 = 0;
        if ((unint64_t)v24 >= v19 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v48 = v88;
          v49 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v48 = *v24;
          v49 = v24 + 1;
          *((_QWORD *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 13) = v48;
        *((_DWORD *)this + 27) |= 0x200u;
        if ((unint64_t)v49 >= v19 || *v49 != 88)
          continue;
        v25 = v49 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_132:
        v88 = 0;
        if ((unint64_t)v25 >= v19 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v50 = v88;
          v51 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v50 = *v25;
          v51 = v25 + 1;
          *((_QWORD *)a2 + 1) = v51;
        }
        *((_DWORD *)this + 14) = v50;
        *((_DWORD *)this + 27) |= 0x400u;
        if ((unint64_t)v51 >= v19 || *v51 != 96)
          continue;
        v26 = v51 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_140:
        v88 = 0;
        if ((unint64_t)v26 >= v19 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v52 = v88;
          v53 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v52 = *v26;
          v53 = v26 + 1;
          *((_QWORD *)a2 + 1) = v53;
        }
        *((_DWORD *)this + 15) = v52;
        *((_DWORD *)this + 27) |= 0x800u;
        if ((unint64_t)v53 >= v19 || *v53 != 104)
          continue;
        v27 = v53 + 1;
        *((_QWORD *)a2 + 1) = v27;
LABEL_148:
        v88 = 0;
        if ((unint64_t)v27 >= v19 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v54 = v88;
          v55 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v54 = *v27;
          v55 = v27 + 1;
          *((_QWORD *)a2 + 1) = v55;
        }
        *((_DWORD *)this + 16) = v54;
        *((_DWORD *)this + 27) |= 0x1000u;
        if ((unint64_t)v55 >= v19 || *v55 != 112)
          continue;
        v28 = v55 + 1;
        *((_QWORD *)a2 + 1) = v28;
LABEL_156:
        v88 = 0;
        if ((unint64_t)v28 >= v19 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v56 = v88;
          v57 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v56 = *v28;
          v57 = v28 + 1;
          *((_QWORD *)a2 + 1) = v57;
        }
        *((_BYTE *)this + 68) = v56 != 0;
        *((_DWORD *)this + 27) |= 0x2000u;
        if ((unint64_t)v57 >= v19 || *v57 != 120)
          continue;
        v29 = v57 + 1;
        *((_QWORD *)a2 + 1) = v29;
LABEL_164:
        v88 = 0;
        if ((unint64_t)v29 >= v19 || (char)*v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88);
          if (!(_DWORD)result)
            return result;
          v58 = v88;
          v59 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v58 = *v29;
          v59 = v29 + 1;
          *((_QWORD *)a2 + 1) = v59;
        }
        *((_BYTE *)this + 69) = v58 != 0;
        v30 = *((_DWORD *)this + 27) | 0x4000;
        *((_DWORD *)this + 27) = v30;
        if ((int)v19 - (int)v59 < 2 || *v59 != 130 || v59[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v59 + 2;
LABEL_173:
        *((_DWORD *)this + 27) = v30 | 0x8000;
        v60 = *((_QWORD *)this + 9);
        if (!v60)
        {
          v60 = operator new();
          *(_QWORD *)v60 = &off_24D990130;
          *(_QWORD *)(v60 + 8) = v5;
          *(_DWORD *)(v60 + 36) = 0;
          *(_DWORD *)(v60 + 40) = 0;
          *(_QWORD *)(v60 + 16) = 0;
          *(_QWORD *)(v60 + 24) = 0;
          *(_BYTE *)(v60 + 32) = 0;
          *((_QWORD *)this + 9) = v60;
        }
        v88 = 0;
        v61 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v61 >= *((_QWORD *)a2 + 2) || *v61 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88))return 0;
        }
        else
        {
          v88 = *v61;
          *((_QWORD *)a2 + 1) = v61 + 1;
        }
        v62 = *((_DWORD *)a2 + 14);
        v63 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v62 + 1;
        if (v62 >= v63)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergePartialFromCodedStream((awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)v60, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v64 = *((_DWORD *)a2 + 14);
        v65 = __OFSUB__(v64, 1);
        v66 = v64 - 1;
        if (v66 < 0 == v65)
          *((_DWORD *)a2 + 14) = v66;
        v67 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v67 <= 1 || *v67 != 138 || v67[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v67 + 2;
LABEL_188:
        *((_DWORD *)this + 27) |= 0x10000u;
        v68 = *((_QWORD *)this + 10);
        if (!v68)
        {
          v68 = operator new();
          *(_QWORD *)v68 = &off_24D990130;
          *(_QWORD *)(v68 + 8) = v5;
          *(_DWORD *)(v68 + 36) = 0;
          *(_DWORD *)(v68 + 40) = 0;
          *(_QWORD *)(v68 + 16) = 0;
          *(_QWORD *)(v68 + 24) = 0;
          *(_BYTE *)(v68 + 32) = 0;
          *((_QWORD *)this + 10) = v68;
        }
        v88 = 0;
        v69 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v69 >= *((_QWORD *)a2 + 2) || *v69 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88))return 0;
        }
        else
        {
          v88 = *v69;
          *((_QWORD *)a2 + 1) = v69 + 1;
        }
        v70 = *((_DWORD *)a2 + 14);
        v71 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v70 + 1;
        if (v70 >= v71)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergePartialFromCodedStream((awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)v68, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v72 = *((_DWORD *)a2 + 14);
        v65 = __OFSUB__(v72, 1);
        v73 = v72 - 1;
        if (v73 < 0 == v65)
          *((_DWORD *)a2 + 14) = v73;
        v74 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v74 <= 1 || *v74 != 146 || v74[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v74 + 2;
LABEL_203:
        *((_DWORD *)this + 27) |= 0x20000u;
        v75 = *((_QWORD *)this + 11);
        if (!v75)
        {
          v75 = operator new();
          *(_QWORD *)v75 = &off_24D990130;
          *(_QWORD *)(v75 + 8) = v5;
          *(_DWORD *)(v75 + 36) = 0;
          *(_DWORD *)(v75 + 40) = 0;
          *(_QWORD *)(v75 + 16) = 0;
          *(_QWORD *)(v75 + 24) = 0;
          *(_BYTE *)(v75 + 32) = 0;
          *((_QWORD *)this + 11) = v75;
        }
        v88 = 0;
        v76 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v76 >= *((_QWORD *)a2 + 2) || *v76 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88))return 0;
        }
        else
        {
          v88 = *v76;
          *((_QWORD *)a2 + 1) = v76 + 1;
        }
        v77 = *((_DWORD *)a2 + 14);
        v78 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v77 + 1;
        if (v77 >= v78)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergePartialFromCodedStream((awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)v75, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v79 = *((_DWORD *)a2 + 14);
        v65 = __OFSUB__(v79, 1);
        v80 = v79 - 1;
        if (v80 < 0 == v65)
          *((_DWORD *)a2 + 14) = v80;
        v81 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v81 <= 1 || *v81 != 154 || v81[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v81 + 2;
LABEL_218:
        *((_DWORD *)this + 27) |= 0x40000u;
        v82 = *((_QWORD *)this + 12);
        if (!v82)
        {
          v82 = operator new();
          *(_QWORD *)v82 = &off_24D990130;
          *(_QWORD *)(v82 + 8) = v5;
          *(_DWORD *)(v82 + 36) = 0;
          *(_DWORD *)(v82 + 40) = 0;
          *(_QWORD *)(v82 + 16) = 0;
          *(_QWORD *)(v82 + 24) = 0;
          *(_BYTE *)(v82 + 32) = 0;
          *((_QWORD *)this + 12) = v82;
        }
        v88 = 0;
        v83 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v83 >= *((_QWORD *)a2 + 2) || *v83 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v88))return 0;
        }
        else
        {
          v88 = *v83;
          *((_QWORD *)a2 + 1) = v83 + 1;
        }
        v84 = *((_DWORD *)a2 + 14);
        v85 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v84 + 1;
        if (v84 < v85)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergePartialFromCodedStream((awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)v82, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v86 = *((_DWORD *)a2 + 14);
              v65 = __OFSUB__(v86, 1);
              v87 = v86 - 1;
              if (v87 < 0 == v65)
                *((_DWORD *)a2 + 14) = v87;
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_62;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_72;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_82;
      case 6u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_92;
      case 7u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_100;
      case 8u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_108;
      case 9u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_116;
      case 0xAu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_124;
      case 0xBu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_132;
      case 0xCu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_140;
      case 0xDu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_148;
      case 0xEu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v28 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_156;
      case 0xFu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_48;
        v29 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_164;
      case 0x10u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_48;
        v30 = *((_DWORD *)this + 27);
        goto LABEL_173;
      case 0x11u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_188;
        goto LABEL_48;
      case 0x12u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_203;
        goto LABEL_48;
      case 0x13u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_48;
        goto LABEL_218;
      default:
        v8 = TagFallback & 7;
LABEL_48:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationMobileAssetStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 108);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 108);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 69), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_39;
  }
LABEL_36:
  v7 = *(_QWORD *)(v5 + 72);
  if (!v7)
    v7 = *(_QWORD *)(awd::metrics::LocationMobileAssetStatistics::default_instance_ + 72);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_42;
  }
LABEL_39:
  v8 = *(_QWORD *)(v5 + 80);
  if (!v8)
    v8 = *(_QWORD *)(awd::metrics::LocationMobileAssetStatistics::default_instance_ + 80);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      return this;
    goto LABEL_45;
  }
LABEL_42:
  v9 = *(_QWORD *)(v5 + 88);
  if (!v9)
    v9 = *(_QWORD *)(awd::metrics::LocationMobileAssetStatistics::default_instance_ + 88);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 108) & 0x40000) != 0)
  {
LABEL_45:
    v10 = *(_QWORD *)(v5 + 96);
    if (!v10)
      v10 = *(_QWORD *)(awd::metrics::LocationMobileAssetStatistics::default_instance_ + 96);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v10, a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics::ByteSize(awd::metrics::LocationMobileAssetStatistics *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  unsigned int v32;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  int v35;
  int v36;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;
  int v40;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *v41;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v42;
  int v43;
  int v44;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *v45;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v46;
  int v47;
  int v48;

  v2 = *((_DWORD *)this + 27);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_59;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 27);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 27);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      v2 = *((_DWORD *)this + 27);
    }
    else
    {
      v11 = 1;
    }
    v3 = (v3 + v11 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = *((_DWORD *)this + 27);
  }
  else
  {
    v13 = 1;
  }
  v3 = (v3 + v13 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_41;
  }
LABEL_35:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 10;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 27);
  }
  else
  {
    v15 = 1;
  }
  v3 = (v3 + v15 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_21;
    goto LABEL_47;
  }
LABEL_41:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v16 & 0x80000000) != 0)
  {
    v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = *((_DWORD *)this + 27);
  }
  else
  {
    v17 = 1;
  }
  v3 = (v3 + v17 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0)
      goto LABEL_59;
    goto LABEL_53;
  }
LABEL_47:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v18 & 0x80000000) != 0)
  {
    v19 = 10;
  }
  else if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    v2 = *((_DWORD *)this + 27);
  }
  else
  {
    v19 = 1;
  }
  v3 = (v3 + v19 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_53:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v2 = *((_DWORD *)this + 27);
    }
    else
    {
      v21 = 1;
    }
    v3 = (v3 + v21 + 1);
  }
LABEL_59:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_108;
  if ((v2 & 0x100) != 0)
  {
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v22 & 0x80000000) != 0)
    {
      v23 = 10;
    }
    else if (v22 >= 0x80)
    {
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      v2 = *((_DWORD *)this + 27);
    }
    else
    {
      v23 = 1;
    }
    LODWORD(v3) = v3 + v23 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_62:
      if ((v2 & 0x400) == 0)
        goto LABEL_63;
      goto LABEL_78;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_62;
  }
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v24 & 0x80000000) != 0)
  {
    v25 = 10;
  }
  else if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    v2 = *((_DWORD *)this + 27);
  }
  else
  {
    v25 = 1;
  }
  LODWORD(v3) = v3 + v25 + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_63:
    if ((v2 & 0x800) == 0)
      goto LABEL_64;
LABEL_84:
    v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if ((v28 & 0x80000000) != 0)
    {
      v29 = 10;
    }
    else if (v28 >= 0x80)
    {
      v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
      v2 = *((_DWORD *)this + 27);
    }
    else
    {
      v29 = 1;
    }
    LODWORD(v3) = v3 + v29 + 1;
    if ((v2 & 0x1000) == 0)
      goto LABEL_96;
    goto LABEL_90;
  }
LABEL_78:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v26 & 0x80000000) != 0)
  {
    v27 = 10;
  }
  else if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
    v2 = *((_DWORD *)this + 27);
  }
  else
  {
    v27 = 1;
  }
  LODWORD(v3) = v3 + v27 + 1;
  if ((v2 & 0x800) != 0)
    goto LABEL_84;
LABEL_64:
  if ((v2 & 0x1000) != 0)
  {
LABEL_90:
    v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v30 & 0x80000000) != 0)
    {
      v31 = 11;
    }
    else if (v30 >= 0x80)
    {
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
      v2 = *((_DWORD *)this + 27);
    }
    else
    {
      v31 = 2;
    }
    LODWORD(v3) = v31 + v3;
  }
LABEL_96:
  v32 = v3 + 2;
  if ((v2 & 0x2000) == 0)
    v32 = v3;
  if ((v2 & 0x4000) != 0)
    v3 = v32 + 2;
  else
    v3 = v32;
  if ((v2 & 0x8000) != 0)
  {
    v33 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((_QWORD *)this + 9);
    if (!v33)
      v33 = *(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
                                                                                  + 72);
    v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::ByteSize(v33);
    v35 = (int)v34;
    if (v34 >= 0x80)
      v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34);
    else
      v36 = 1;
    v3 = (v3 + v35 + v36 + 2);
    v2 = *((_DWORD *)this + 27);
  }
LABEL_108:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_131;
  if ((v2 & 0x10000) != 0)
  {
    v37 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((_QWORD *)this + 10);
    if (!v37)
      v37 = *(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
                                                                                  + 80);
    v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::ByteSize(v37);
    v39 = (int)v38;
    if (v38 >= 0x80)
      v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
    else
      v40 = 1;
    v3 = (v3 + v39 + v40 + 2);
    v2 = *((_DWORD *)this + 27);
    if ((v2 & 0x20000) == 0)
    {
LABEL_111:
      if ((v2 & 0x40000) == 0)
        goto LABEL_131;
      goto LABEL_125;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_111;
  }
  v41 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((_QWORD *)this + 11);
  if (!v41)
    v41 = *(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
                                                                                + 88);
  v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::ByteSize(v41);
  v43 = (int)v42;
  if (v42 >= 0x80)
    v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
  else
    v44 = 1;
  v3 = (v3 + v43 + v44 + 2);
  if ((*((_DWORD *)this + 27) & 0x40000) != 0)
  {
LABEL_125:
    v45 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((_QWORD *)this + 12);
    if (!v45)
      v45 = *(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
                                                                                  + 96);
    v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::ByteSize(v45);
    v47 = (int)v46;
    if (v46 >= 0x80)
      v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46);
    else
      v48 = 1;
    v3 = (v3 + v47 + v48 + 2);
  }
LABEL_131:
  *((_DWORD *)this + 26) = v3;
  return v3;
}

void awd::metrics::LocationMobileAssetStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMobileAssetStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMobileAssetStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMobileAssetStatistics::CopyFrom(awd::metrics::LocationMobileAssetStatistics *this, const awd::metrics::LocationMobileAssetStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMobileAssetStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMobileAssetStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMobileAssetStatistics::IsInitialized(awd::metrics::LocationMobileAssetStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMobileAssetStatistics::Swap(uint64_t this, awd::metrics::LocationMobileAssetStatistics *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 != (awd::metrics::LocationMobileAssetStatistics *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 68);
    *(_BYTE *)(this + 68) = *((_BYTE *)a2 + 68);
    *((_BYTE *)a2 + 68) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 69);
    *(_BYTE *)(this + 69) = *((_BYTE *)a2 + 69);
    *((_BYTE *)a2 + 69) = v2;
    v5 = *(_QWORD *)(this + 72);
    *(_QWORD *)(this + 72) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v5;
    v6 = *(_QWORD *)(this + 80);
    *(_QWORD *)(this + 80) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v6;
    v7 = *(_QWORD *)(this + 88);
    *(_QWORD *)(this + 88) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v7;
    v8 = *(_QWORD *)(this + 96);
    *(_QWORD *)(this + 96) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v8;
    LODWORD(v8) = *(_DWORD *)(this + 108);
    *(_DWORD *)(this + 108) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v8;
    LODWORD(v8) = *(_DWORD *)(this + 104);
    *(_DWORD *)(this + 104) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v8;
  }
  return this;
}

_QWORD *awd::metrics::LocationMobileAssetStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMobileAssetStatistics");
}

BOOL awd::metrics::LocationEmergencyPOIStatistics_POISource_IsValid(awd::metrics *this)
{
  return this < 7;
}

BOOL awd::metrics::LocationEmergencyPOIStatistics_POIType_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::LocationEmergencyPOIStatistics_LOIQueryResult_IsValid(awd::metrics *this)
{
  return this < 4;
}

BOOL awd::metrics::LocationEmergencyPOIStatistics_SubmissionType_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationEmergencyPOIStatistics_DSAResult_IsValid(awd::metrics *this)
{
  return this < 9;
}

double awd::metrics::LocationEmergencyPOIStatistics::SharedCtor(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_DWORD *)this + 28) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  return result;
}

awd::metrics::LocationEmergencyPOIStatistics *awd::metrics::LocationEmergencyPOIStatistics::LocationEmergencyPOIStatistics(awd::metrics::LocationEmergencyPOIStatistics *this, const awd::metrics::LocationEmergencyPOIStatistics *a2)
{
  *(_QWORD *)this = &off_24D990220;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_DWORD *)this + 28) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  awd::metrics::LocationEmergencyPOIStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A29964(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencyPOIStatistics::MergeFrom(awd::metrics::LocationEmergencyPOIStatistics *this, const awd::metrics::LocationEmergencyPOIStatistics *a2)
{
  int v4;
  uint64_t v5;
  const std::string *v6;
  std::string *v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  _BYTE v24[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  v4 = *((_DWORD *)a2 + 28);
  if ((_BYTE)v4)
  {
    if ((v4 & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 28) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_17;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    v6 = (const std::string *)*((_QWORD *)a2 + 2);
    *((_DWORD *)this + 28) |= 2u;
    v7 = (std::string *)*((_QWORD *)this + 2);
    if (v7 == (std::string *)MEMORY[0x24BEDD958])
    {
      v7 = (std::string *)operator new();
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 2) = v7;
    }
    std::string::operator=(v7, v6);
    v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_18;
    }
LABEL_17:
    v8 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 28) |= 4u;
    *((_DWORD *)this + 6) = v8;
    v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_20;
    }
LABEL_18:
    v9 = *((_DWORD *)a2 + 7);
    if (v9 >= 7)
      awd::metrics::LocationEmergencyPOIStatistics::MergeFrom();
    *((_DWORD *)this + 28) |= 8u;
    *((_DWORD *)this + 7) = v9;
    v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_22;
    }
LABEL_20:
    v10 = *((_DWORD *)a2 + 10);
    if (v10 >= 5)
      awd::metrics::LocationEmergencyPOIStatistics::MergeFrom();
    *((_DWORD *)this + 28) |= 0x10u;
    *((_DWORD *)this + 10) = v10;
    v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_23;
    }
LABEL_22:
    v11 = *((_QWORD *)a2 + 4);
    *((_DWORD *)this + 28) |= 0x20u;
    *((_QWORD *)this + 4) = v11;
    v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_26;
      goto LABEL_24;
    }
LABEL_23:
    v12 = *((_QWORD *)a2 + 6);
    *((_DWORD *)this + 28) |= 0x40u;
    *((_QWORD *)this + 6) = v12;
    v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x80) == 0)
      goto LABEL_26;
LABEL_24:
    v13 = *((_DWORD *)a2 + 11);
    if (v13 >= 4)
      awd::metrics::LocationEmergencyPOIStatistics::MergeFrom();
    *((_DWORD *)this + 28) |= 0x80u;
    *((_DWORD *)this + 11) = v13;
    v4 = *((_DWORD *)a2 + 28);
  }
LABEL_26:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_40;
  if ((v4 & 0x100) != 0)
  {
    v14 = *((_DWORD *)a2 + 14);
    if (v14 >= 3)
      awd::metrics::LocationEmergencyPOIStatistics::MergeFrom();
    *((_DWORD *)this + 28) |= 0x100u;
    *((_DWORD *)this + 14) = v14;
    v4 = *((_DWORD *)a2 + 28);
  }
  if ((v4 & 0x200) != 0)
  {
    v15 = *((_DWORD *)a2 + 15);
    if (v15 >= 9)
      awd::metrics::LocationEmergencyPOIStatistics::MergeFrom();
    *((_DWORD *)this + 28) |= 0x200u;
    *((_DWORD *)this + 15) = v15;
    v4 = *((_DWORD *)a2 + 28);
  }
  if ((v4 & 0x400) != 0)
  {
    v19 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 28) |= 0x400u;
    *((_DWORD *)this + 16) = v19;
    v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x800) == 0)
    {
LABEL_35:
      if ((v4 & 0x1000) == 0)
        goto LABEL_36;
      goto LABEL_48;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_35;
  }
  v20 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 28) |= 0x800u;
  *((_DWORD *)this + 17) = v20;
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x1000) == 0)
  {
LABEL_36:
    if ((v4 & 0x2000) == 0)
      goto LABEL_37;
    goto LABEL_49;
  }
LABEL_48:
  v21 = *((_QWORD *)a2 + 9);
  *((_DWORD *)this + 28) |= 0x1000u;
  *((_QWORD *)this + 9) = v21;
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x2000) == 0)
  {
LABEL_37:
    if ((v4 & 0x4000) == 0)
      goto LABEL_38;
    goto LABEL_50;
  }
LABEL_49:
  v22 = *((_DWORD *)a2 + 20);
  *((_DWORD *)this + 28) |= 0x2000u;
  *((_DWORD *)this + 20) = v22;
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x4000) == 0)
  {
LABEL_38:
    if ((v4 & 0x8000) == 0)
      goto LABEL_40;
    goto LABEL_39;
  }
LABEL_50:
  v23 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 28) |= 0x4000u;
  *((_DWORD *)this + 21) = v23;
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x8000) != 0)
  {
LABEL_39:
    v16 = *((_QWORD *)a2 + 11);
    *((_DWORD *)this + 28) |= 0x8000u;
    *((_QWORD *)this + 11) = v16;
    v4 = *((_DWORD *)a2 + 28);
  }
LABEL_40:
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      v17 = *((_QWORD *)a2 + 12);
      *((_DWORD *)this + 28) |= 0x10000u;
      *((_QWORD *)this + 12) = v17;
      v4 = *((_DWORD *)a2 + 28);
    }
    if ((v4 & 0x20000) != 0)
    {
      v18 = *((_DWORD *)a2 + 26);
      *((_DWORD *)this + 28) |= 0x20000u;
      *((_DWORD *)this + 26) = v18;
    }
  }
}

void sub_218A29CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencyPOIStatistics::~LocationEmergencyPOIStatistics(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  *(_QWORD *)this = &off_24D990220;
  awd::metrics::LocationEmergencyPOIStatistics::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990220;
  awd::metrics::LocationEmergencyPOIStatistics::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990220;
  awd::metrics::LocationEmergencyPOIStatistics::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 108) = a2;
  return this;
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::default_instance(awd::metrics::LocationEmergencyPOIStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationEmergencyPOIStatistics::default_instance_;
  if (!awd::metrics::LocationEmergencyPOIStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationEmergencyPOIStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationEmergencyPOIStatistics::New(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = operator new();
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)v1 = &off_24D990220;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_DWORD *)(v1 + 112) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_QWORD *)(v1 + 104) = 0;
  return result;
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 112);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    v1 = *(_DWORD *)(this + 112);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 88) = 0;
    *(_OWORD *)(this + 72) = 0u;
    *(_OWORD *)(this + 56) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_QWORD *)(this + 96) = 0;
    *(_DWORD *)(this + 104) = 0;
  }
  *(_DWORD *)(this + 112) = 0;
  return this;
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::MergePartialFromCodedStream(awd::metrics::LocationEmergencyPOIStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  uint64_t v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  int v13;
  unint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;
  char *v27;
  unint64_t v28;
  char *v29;
  unsigned __int8 *v30;
  unint64_t v31;
  char *v32;
  uint64_t result;
  _QWORD *v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;
  _BYTE *v39;
  unsigned int v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  unsigned int v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  unsigned int v48;
  _BYTE *v49;
  unsigned int v50;
  _BYTE *v51;
  unsigned int v52;
  _BYTE *v53;
  _BYTE *v54;
  unsigned int v55;
  _BYTE *v56;
  unsigned int v57;
  unsigned __int8 *v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  unsigned __int8 *v61;
  unsigned int v62[2];

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 104);
  v6 = MEMORY[0x24BEDD958];
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        v13 = *((_DWORD *)this + 28) | 1;
        *((_DWORD *)this + 28) = v13;
        if ((unint64_t)v12 < v10 && *v12 == 18)
        {
          *((_QWORD *)a2 + 1) = v12 + 1;
          goto LABEL_55;
        }
        continue;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_46;
        v13 = *((_DWORD *)this + 28);
LABEL_55:
        *((_DWORD *)this + 28) = v13 | 2;
        if (*((_QWORD *)this + 2) == v6)
        {
          v34 = (_QWORD *)operator new();
          v34[1] = 0;
          v34[2] = 0;
          *v34 = 0;
          *((_QWORD *)this + 2) = v34;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v35 >= v14 || *v35 != 24)
          continue;
        v15 = v35 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_61:
        v62[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v36 = v62[0];
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v36 = *v15;
          v37 = v15 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 6) = v36;
        *((_DWORD *)this + 28) |= 4u;
        if ((unint64_t)v37 >= v14 || *v37 != 32)
          continue;
        v16 = v37 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_69:
        v62[0] = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v38 = v62[0];
        }
        else
        {
          v38 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        if (v38 <= 6)
        {
          *((_DWORD *)this + 28) |= 8u;
          *((_DWORD *)this + 7) = v38;
        }
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v39 >= v17 || *v39 != 40)
          continue;
        v18 = v39 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_79:
        v62[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v40 = v62[0];
        }
        else
        {
          v40 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        if (v40 <= 4)
        {
          *((_DWORD *)this + 28) |= 0x10u;
          *((_DWORD *)this + 10) = v40;
        }
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v41 + 1;
LABEL_89:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v62;
        *((_DWORD *)this + 28) |= 0x20u;
        v42 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v42 >= *((_QWORD *)a2 + 2) || *v42 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v42 + 1;
LABEL_93:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v62;
        *((_DWORD *)this + 28) |= 0x40u;
        v43 = (_BYTE *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v43 >= v19 || *v43 != 64)
          continue;
        v20 = v43 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_97:
        v62[0] = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v44 = v62[0];
        }
        else
        {
          v44 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        if (v44 <= 3)
        {
          *((_DWORD *)this + 28) |= 0x80u;
          *((_DWORD *)this + 11) = v44;
        }
        v45 = (_BYTE *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v45 >= v21 || *v45 != 72)
          continue;
        v22 = v45 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_107:
        v62[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v46 = v62[0];
        }
        else
        {
          v46 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        if (v46 <= 2)
        {
          *((_DWORD *)this + 28) |= 0x100u;
          *((_DWORD *)this + 14) = v46;
        }
        v47 = (_BYTE *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v47 >= v23 || *v47 != 80)
          continue;
        v24 = v47 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_117:
        v62[0] = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v48 = v62[0];
        }
        else
        {
          v48 = *v24;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        if (v48 <= 8)
        {
          *((_DWORD *)this + 28) |= 0x200u;
          *((_DWORD *)this + 15) = v48;
        }
        v49 = (_BYTE *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v49 >= v25 || *v49 != 88)
          continue;
        v26 = v49 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_127:
        v62[0] = 0;
        if ((unint64_t)v26 >= v25 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v50 = v62[0];
          v51 = (_BYTE *)*((_QWORD *)a2 + 1);
          v25 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v50 = *v26;
          v51 = v26 + 1;
          *((_QWORD *)a2 + 1) = v51;
        }
        *((_DWORD *)this + 16) = v50;
        *((_DWORD *)this + 28) |= 0x400u;
        if ((unint64_t)v51 >= v25 || *v51 != 96)
          continue;
        v27 = v51 + 1;
        *((_QWORD *)a2 + 1) = v27;
LABEL_135:
        v62[0] = 0;
        if ((unint64_t)v27 >= v25 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v52 = v62[0];
          v53 = (_BYTE *)*((_QWORD *)a2 + 1);
          v25 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v52 = *v27;
          v53 = v27 + 1;
          *((_QWORD *)a2 + 1) = v53;
        }
        *((_DWORD *)this + 17) = v52;
        *((_DWORD *)this + 28) |= 0x800u;
        if ((unint64_t)v53 >= v25 || *v53 != 105)
          continue;
        *((_QWORD *)a2 + 1) = v53 + 1;
LABEL_143:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v62;
        *((_DWORD *)this + 28) |= 0x1000u;
        v54 = (_BYTE *)*((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v54 >= v28 || *v54 != 112)
          continue;
        v29 = v54 + 1;
        *((_QWORD *)a2 + 1) = v29;
LABEL_147:
        v62[0] = 0;
        if ((unint64_t)v29 >= v28 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v55 = v62[0];
          v56 = (_BYTE *)*((_QWORD *)a2 + 1);
          v28 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v55 = *v29;
          v56 = v29 + 1;
          *((_QWORD *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 20) = v55;
        *((_DWORD *)this + 28) |= 0x2000u;
        if ((unint64_t)v56 >= v28 || *v56 != 120)
          continue;
        v30 = v56 + 1;
        *((_QWORD *)a2 + 1) = v30;
LABEL_155:
        v62[0] = 0;
        if ((unint64_t)v30 >= v28 || (char)*v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v57 = v62[0];
          v58 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v28 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v57 = *v30;
          v58 = v30 + 1;
          *((_QWORD *)a2 + 1) = v58;
        }
        *((_DWORD *)this + 21) = v57;
        *((_DWORD *)this + 28) |= 0x4000u;
        if ((int)v28 - (int)v58 < 2 || *v58 != 129 || v58[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v58 + 2;
LABEL_164:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 11) = *(_QWORD *)v62;
        *((_DWORD *)this + 28) |= 0x8000u;
        v59 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v59 < 2 || *v59 != 137 || v59[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v59 + 2;
LABEL_169:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) != 0)
        {
          *((_QWORD *)this + 12) = *(_QWORD *)v62;
          *((_DWORD *)this + 28) |= 0x10000u;
          v60 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v31 = *((_QWORD *)a2 + 2);
          if ((int)v31 - (int)v60 >= 2 && *v60 == 144 && v60[1] == 1)
          {
            v32 = (char *)(v60 + 2);
            *((_QWORD *)a2 + 1) = v32;
LABEL_174:
            if ((unint64_t)v32 >= v31 || *v32 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
              if (!(_DWORD)result)
                return result;
              v61 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v31 = *((_QWORD *)a2 + 2);
            }
            else
            {
              *v5 = *v32;
              v61 = (unsigned __int8 *)(v32 + 1);
              *((_QWORD *)a2 + 1) = v61;
            }
            *((_DWORD *)this + 28) |= 0x20000u;
            if (v61 == (unsigned __int8 *)v31 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_69;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_89;
        goto LABEL_46;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_93;
        goto LABEL_46;
      case 8u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_97;
      case 9u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        goto LABEL_107;
      case 0xAu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        goto LABEL_117;
      case 0xBu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_127;
      case 0xCu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_135;
      case 0xDu:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_143;
        goto LABEL_46;
      case 0xEu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v29 = (char *)*((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        goto LABEL_147;
      case 0xFu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        goto LABEL_155;
      case 0x10u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_164;
        goto LABEL_46;
      case 0x11u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_169;
        goto LABEL_46;
      case 0x12u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v32 = (char *)*((_QWORD *)a2 + 1);
        v31 = *((_QWORD *)a2 + 2);
        goto LABEL_174;
      default:
        v9 = TagFallback & 7;
LABEL_46:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 112);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 112);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 80), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (uint64_t)a2, *(double *)(v5 + 88), a3);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 104), (uint64_t)a2, a4);
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (uint64_t)a2, *(double *)(v5 + 96), a3);
  if ((*(_DWORD *)(v5 + 112) & 0x20000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 104), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::ByteSize(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  unsigned int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;

  v2 = *((_DWORD *)this + 28);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_50;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 28);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v2 = *((_DWORD *)this + 28);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v3 += v10 + v6 + 1;
LABEL_16:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_18;
LABEL_26:
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v13 & 0x80000000) != 0)
    {
      v14 = 10;
    }
    else if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      v2 = *((_DWORD *)this + 28);
    }
    else
    {
      v14 = 1;
    }
    v3 += v14 + 1;
    if ((v2 & 0x10) == 0)
      goto LABEL_38;
    goto LABEL_32;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v11 & 0x80000000) != 0)
  {
    v12 = 10;
  }
  else if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    v2 = *((_DWORD *)this + 28);
  }
  else
  {
    v12 = 1;
  }
  v3 += v12 + 1;
  if ((v2 & 8) != 0)
    goto LABEL_26;
LABEL_18:
  if ((v2 & 0x10) != 0)
  {
LABEL_32:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v15 & 0x80000000) != 0)
    {
      v16 = 10;
    }
    else if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
      v2 = *((_DWORD *)this + 28);
    }
    else
    {
      v16 = 1;
    }
    v3 += v16 + 1;
  }
LABEL_38:
  v17 = v3 + 9;
  if ((v2 & 0x20) == 0)
    v17 = v3;
  if ((v2 & 0x40) != 0)
    v4 = v17 + 9;
  else
    v4 = v17;
  if ((v2 & 0x80) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v18 & 0x80000000) != 0)
    {
      v19 = 10;
    }
    else if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      v2 = *((_DWORD *)this + 28);
    }
    else
    {
      v19 = 1;
    }
    v4 = (v4 + v19 + 1);
  }
LABEL_50:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_99;
  if ((v2 & 0x100) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v2 = *((_DWORD *)this + 28);
    }
    else
    {
      v21 = 1;
    }
    LODWORD(v4) = v4 + v21 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_53:
      if ((v2 & 0x400) == 0)
        goto LABEL_54;
LABEL_68:
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
      if ((v24 & 0x80000000) != 0)
      {
        v25 = 11;
      }
      else if (v24 >= 0x80)
      {
        v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
        v2 = *((_DWORD *)this + 28);
      }
      else
      {
        v25 = 2;
      }
      LODWORD(v4) = v25 + v4;
      if ((v2 & 0x800) == 0)
        goto LABEL_80;
      goto LABEL_74;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_53;
  }
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v22 & 0x80000000) != 0)
  {
    v23 = 11;
  }
  else if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    v2 = *((_DWORD *)this + 28);
  }
  else
  {
    v23 = 2;
  }
  LODWORD(v4) = v23 + v4;
  if ((v2 & 0x400) != 0)
    goto LABEL_68;
LABEL_54:
  if ((v2 & 0x800) != 0)
  {
LABEL_74:
    v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if ((v26 & 0x80000000) != 0)
    {
      v27 = 11;
    }
    else if (v26 >= 0x80)
    {
      v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
      v2 = *((_DWORD *)this + 28);
    }
    else
    {
      v27 = 2;
    }
    LODWORD(v4) = v27 + v4;
  }
LABEL_80:
  if ((v2 & 0x1000) != 0)
    LODWORD(v4) = v4 + 9;
  if ((v2 & 0x2000) != 0)
  {
    v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
    if ((v28 & 0x80000000) != 0)
    {
      v29 = 11;
    }
    else if (v28 >= 0x80)
    {
      v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
      v2 = *((_DWORD *)this + 28);
    }
    else
    {
      v29 = 2;
    }
    LODWORD(v4) = v29 + v4;
  }
  if ((v2 & 0x4000) != 0)
  {
    v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
    if ((v30 & 0x80000000) != 0)
    {
      v31 = 11;
    }
    else if (v30 >= 0x80)
    {
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
      v2 = *((_DWORD *)this + 28);
    }
    else
    {
      v31 = 2;
    }
    LODWORD(v4) = v31 + v4;
  }
  if ((v2 & 0x8000) != 0)
    v4 = (v4 + 10);
  else
    v4 = v4;
LABEL_99:
  if ((v2 & 0xFF0000) != 0)
  {
    v4 = (v2 & 0x10000) != 0 ? (v4 + 10) : v4;
    if ((v2 & 0x20000) != 0)
    {
      v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
      if (v32 >= 0x80)
        v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 2;
      else
        v33 = 3;
      v4 = (v33 + v4);
    }
  }
  *((_DWORD *)this + 27) = v4;
  return v4;
}

void awd::metrics::LocationEmergencyPOIStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationEmergencyPOIStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationEmergencyPOIStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationEmergencyPOIStatistics::CopyFrom(awd::metrics::LocationEmergencyPOIStatistics *this, const awd::metrics::LocationEmergencyPOIStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationEmergencyPOIStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationEmergencyPOIStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::IsInitialized(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  return 1;
}

double awd::metrics::LocationEmergencyPOIStatistics::Swap(awd::metrics::LocationEmergencyPOIStatistics *this, awd::metrics::LocationEmergencyPOIStatistics *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v6;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v2;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v7;
    LODWORD(v2) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v2;
    LODWORD(v2) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v2;
    v8 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v8;
    result = *((double *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((double *)a2 + 12) = result;
    LODWORD(v2) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v2;
    LODWORD(v2) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v2;
    LODWORD(v2) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v2;
  }
  return result;
}

_QWORD *awd::metrics::LocationEmergencyPOIStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationEmergencyPOIStatistics");
}

BOOL awd::metrics::LocationAccessory_BatteryChargingType_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::LocationAccessory_PerfRangeType_IsValid(awd::metrics *this)
{
  return this < 0xD;
}

BOOL awd::metrics::LocationAccessory_SpeedPerfRangeType_IsValid(awd::metrics *this)
{
  return this < 0xF;
}

BOOL awd::metrics::LocationAccessory_LatencyRangeType_IsValid(awd::metrics *this)
{
  return this < 6;
}

BOOL awd::metrics::LocationAccessory_NMEAscreeningLocType_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::LocationAccessory_NavDynamicsType_IsValid(awd::metrics *this)
{
  return this < 7;
}

BOOL awd::metrics::LocationAccessory_PASCDTransmissionStateType_IsValid(awd::metrics *this)
{
  return this < 5;
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_ChargingTypeHistogram *awd::metrics::LocationAccessory_ChargingTypeHistogram::LocationAccessory_ChargingTypeHistogram(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, const awd::metrics::LocationAccessory_ChargingTypeHistogram *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D990298;
  awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_218A2AFE0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, const awd::metrics::LocationAccessory_ChargingTypeHistogram *a2)
{
  int v4;
  unsigned int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 5)
        awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom();
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_218A2B0A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::~LocationAccessory_ChargingTypeHistogram(awd::metrics::LocationAccessory_ChargingTypeHistogram *this)
{
  *(_QWORD *)this = &off_24D990298;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990298;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990298;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_ChargingTypeHistogram::New(awd::metrics::LocationAccessory_ChargingTypeHistogram *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_24D990298;
  return result;
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 4)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::ByteSize(awd::metrics::LocationAccessory_ChargingTypeHistogram *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_17;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_17;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::CopyFrom(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, const awd::metrics::LocationAccessory_ChargingTypeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_ChargingTypeHistogram *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::IsInitialized(awd::metrics::LocationAccessory_ChargingTypeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_ChargingTypeHistogram *awd::metrics::LocationAccessory_ChargingTypeHistogram::Swap(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, awd::metrics::LocationAccessory_ChargingTypeHistogram *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_ChargingTypeHistogram::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.ChargingTypeHistogram");
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationAccessory_DeviceChargingStats *awd::metrics::LocationAccessory_DeviceChargingStats::LocationAccessory_DeviceChargingStats(awd::metrics::LocationAccessory_DeviceChargingStats *this, const awd::metrics::LocationAccessory_DeviceChargingStats *a2)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_24D990310;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::LocationAccessory_DeviceChargingStats::MergeFrom(this, a2);
  return this;
}

void sub_218A2B5A8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_ChargingTypeHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_DeviceChargingStats::MergeFrom(awd::metrics::LocationAccessory_DeviceChargingStats *this, const awd::metrics::LocationAccessory_DeviceChargingStats *a2)
{
  uint64_t v4;
  const awd::metrics::LocationAccessory_ChargingTypeHistogram *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  awd::metrics::LocationAccessory_ChargingTypeHistogram *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_DeviceChargingStats *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationAccessory_ChargingTypeHistogram **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_DeviceChargingStats *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = (awd::metrics::LocationAccessory_ChargingTypeHistogram *)operator new();
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *(_QWORD *)v9 = &off_24D990298;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(awd::metrics::LocationAccessory_ChargingTypeHistogram **)(v8 + 8 * v7);
      }
      awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  if ((*((_BYTE *)a2 + 40) & 1) != 0)
  {
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 1u;
    *((_DWORD *)this + 8) = v12;
  }
}

void sub_218A2B72C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_DeviceChargingStats::~LocationAccessory_DeviceChargingStats(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
  *(_QWORD *)this = &off_24D990310;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_ChargingTypeHistogram>::TypeHandler>((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationAccessory_DeviceChargingStats::~LocationAccessory_DeviceChargingStats(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::default_instance(awd::metrics::LocationAccessory_DeviceChargingStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_;
  if (!awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::New(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D990310;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(_BYTE *)(this + 40))
    *(_DWORD *)(this + 32) = 0;
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_DeviceChargingStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  char *v9;
  unint64_t v10;
  _BYTE *v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  uint64_t v15;
  awd::metrics::LocationAccessory_ChargingTypeHistogram *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  unsigned int v26;

  v4 = (unsigned int *)((char *)this + 32);
  v5 = (awd::metrics::LocationAccessory_DeviceChargingStats *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v6 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v10 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v11 = v9 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v11 < v10 && *v11 == 18)
          goto LABEL_23;
      }
      if (TagFallback >> 3 != 2)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_16;
      while (1)
      {
        v13 = *((_DWORD *)this + 5);
        v14 = *((int *)this + 4);
        if ((int)v14 >= v13)
        {
          if (v13 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
            v13 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v13 + 1;
          v16 = (awd::metrics::LocationAccessory_ChargingTypeHistogram *)operator new();
          *((_QWORD *)v16 + 1) = 0;
          *((_QWORD *)v16 + 2) = 0;
          *(_QWORD *)v16 = &off_24D990298;
          v17 = *((_QWORD *)this + 1);
          v18 = *((int *)this + 4);
          *((_DWORD *)this + 4) = v18 + 1;
          *(_QWORD *)(v17 + 8 * v18) = v16;
        }
        else
        {
          v15 = *((_QWORD *)this + 1);
          *((_DWORD *)this + 4) = v14 + 1;
          v16 = *(awd::metrics::LocationAccessory_ChargingTypeHistogram **)(v15 + 8 * v14);
        }
        v26 = 0;
        v19 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26))return 0;
        }
        else
        {
          v26 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)a2 + 14);
        v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_ChargingTypeHistogram::MergePartialFromCodedStream(v16, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v25 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v11 >= v25 || *v11 != 18)
          break;
LABEL_23:
        *((_QWORD *)a2 + 1) = v11 + 1;
      }
      if (v11 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = this;
  if ((*(_BYTE *)(this + 40) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 32), (uint64_t)a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::ByteSize(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
  int v2;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;

  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v3 >= 0x80)
      v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    else
      v2 = 2;
  }
  else
  {
    v2 = 0;
  }
  v4 = *((_DWORD *)this + 4);
  v5 = (v4 + v2);
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_ChargingTypeHistogram::ByteSize(*(awd::metrics::LocationAccessory_ChargingTypeHistogram **)(*((_QWORD *)this + 1) + 8 * v6));
      v8 = (int)v7;
      if (v7 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      else
        v9 = 1;
      v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *((int *)this + 4));
  }
  *((_DWORD *)this + 9) = v5;
  return v5;
}

void awd::metrics::LocationAccessory_DeviceChargingStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_DeviceChargingStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_DeviceChargingStats::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_DeviceChargingStats::CopyFrom(awd::metrics::LocationAccessory_DeviceChargingStats *this, const awd::metrics::LocationAccessory_DeviceChargingStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_DeviceChargingStats *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_DeviceChargingStats::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::IsInitialized(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
  return 1;
}

awd::metrics::LocationAccessory_DeviceChargingStats *awd::metrics::LocationAccessory_DeviceChargingStats::Swap(awd::metrics::LocationAccessory_DeviceChargingStats *this, awd::metrics::LocationAccessory_DeviceChargingStats *a2)
{
  awd::metrics::LocationAccessory_DeviceChargingStats *v3;
  int v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    this = (awd::metrics::LocationAccessory_DeviceChargingStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    v6 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v6;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_DeviceChargingStats::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.DeviceChargingStats");
}

double awd::metrics::LocationAccessory_Statistics::SharedCtor(awd::metrics::LocationAccessory_Statistics *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationAccessory_Statistics *awd::metrics::LocationAccessory_Statistics::LocationAccessory_Statistics(awd::metrics::LocationAccessory_Statistics *this, const awd::metrics::LocationAccessory_Statistics *a2)
{
  *(_QWORD *)this = &off_24D990388;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  awd::metrics::LocationAccessory_Statistics::MergeFrom(this, a2);
  return this;
}

void sub_218A2BDB8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::LocationAccessory_Statistics::MergeFrom(awd::metrics::LocationAccessory_Statistics *this, const awd::metrics::LocationAccessory_Statistics *a2)
{
  float result;
  int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((float *)a2 + 2);
      *((_DWORD *)this + 9) |= 1u;
      *((float *)this + 2) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((float *)a2 + 3);
    *((_DWORD *)this + 9) |= 2u;
    *((float *)this + 3) = result;
    v5 = *((_DWORD *)a2 + 9);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_15;
    }
LABEL_14:
    result = *((float *)a2 + 4);
    *((_DWORD *)this + 9) |= 4u;
    *((float *)this + 4) = result;
    v5 = *((_DWORD *)a2 + 9);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_16;
    }
LABEL_15:
    result = *((float *)a2 + 5);
    *((_DWORD *)this + 9) |= 8u;
    *((float *)this + 5) = result;
    v5 = *((_DWORD *)a2 + 9);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        return result;
      goto LABEL_10;
    }
LABEL_16:
    result = *((float *)a2 + 6);
    *((_DWORD *)this + 9) |= 0x10u;
    *((float *)this + 6) = result;
    if ((*((_DWORD *)a2 + 9) & 0x20) == 0)
      return result;
LABEL_10:
    v6 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 9) |= 0x20u;
    *((_DWORD *)this + 7) = v6;
  }
  return result;
}

void sub_218A2BEFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_Statistics::~LocationAccessory_Statistics(awd::metrics::LocationAccessory_Statistics *this)
{
  *(_QWORD *)this = &off_24D990388;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990388;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990388;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_Statistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_Statistics::default_instance(awd::metrics::LocationAccessory_Statistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (!awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_Statistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationAccessory_Statistics::New(awd::metrics::LocationAccessory_Statistics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D990388;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t awd::metrics::LocationAccessory_Statistics::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream(awd::metrics::LocationAccessory_Statistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  unsigned __int8 *v15;
  uint64_t result;
  unsigned int v17;

  v4 = (unsigned int *)((char *)this + 28);
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_35;
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) == 0)
          return 0;
        *((_DWORD *)this + 2) = v17;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
        goto LABEL_15;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_35;
LABEL_15:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) == 0)
          return 0;
        *((_DWORD *)this + 3) = v17;
        *((_DWORD *)this + 9) |= 2u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_20:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v17;
        *((_DWORD *)this + 9) |= 4u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_25:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v17;
        *((_DWORD *)this + 9) |= 8u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_30:
        v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) != 0)
        {
          *((_DWORD *)this + 6) = v17;
          *((_DWORD *)this + 9) |= 0x10u;
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v13 < v12 && *v13 == 48)
          {
            v14 = v13 + 1;
            *((_QWORD *)a2 + 1) = v14;
LABEL_39:
            if ((unint64_t)v14 >= v12 || *v14 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
              if (!(_DWORD)result)
                return result;
              v15 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v12 = *((_QWORD *)a2 + 2);
            }
            else
            {
              *v4 = *v14;
              v15 = (unsigned __int8 *)(v14 + 1);
              *((_QWORD *)a2 + 1) = v15;
            }
            *((_DWORD *)this + 9) |= 0x20u;
            if (v15 == (unsigned __int8 *)v12 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_20;
        goto LABEL_35;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_25;
        goto LABEL_35;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_30;
        goto LABEL_35;
      case 6u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_39;
      default:
        v7 = TagFallback & 7;
LABEL_35:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationAccessory_Statistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 12), a3);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 36) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_Statistics::ByteSize(awd::metrics::LocationAccessory_Statistics *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v3 = (v2 << 31 >> 31) & 5;
    if ((v2 & 2) != 0)
      v3 += 5;
    if ((v2 & 4) != 0)
      v3 += 5;
    if ((v2 & 8) != 0)
      v3 += 5;
    if ((v2 & 0x10) != 0)
      v4 = v3 + 5;
    else
      v4 = v3;
    if ((v2 & 0x20) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
      if (v5 >= 0x80)
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      else
        v6 = 2;
      v4 = (v6 + v4);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

float awd::metrics::LocationAccessory_Statistics::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_Statistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::LocationAccessory_Statistics::MergeFrom(this, lpsrc);
}

float awd::metrics::LocationAccessory_Statistics::CopyFrom(awd::metrics::LocationAccessory_Statistics *this, const awd::metrics::LocationAccessory_Statistics *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_Statistics *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::LocationAccessory_Statistics::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_Statistics::IsInitialized(awd::metrics::LocationAccessory_Statistics *this)
{
  return 1;
}

float awd::metrics::LocationAccessory_Statistics::Swap(awd::metrics::LocationAccessory_Statistics *this, awd::metrics::LocationAccessory_Statistics *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  float result;
  int v7;
  int v8;
  int v9;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    v8 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v8;
    v9 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v9;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_Statistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.Statistics");
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_PerfRangeHistogram *awd::metrics::LocationAccessory_PerfRangeHistogram::LocationAccessory_PerfRangeHistogram(awd::metrics::LocationAccessory_PerfRangeHistogram *this, const awd::metrics::LocationAccessory_PerfRangeHistogram *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D990400;
  awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_218A2C5D8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(awd::metrics::LocationAccessory_PerfRangeHistogram *this, const awd::metrics::LocationAccessory_PerfRangeHistogram *a2)
{
  int v4;
  unsigned int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 0xD)
        awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom();
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_218A2C6A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::~LocationAccessory_PerfRangeHistogram(awd::metrics::LocationAccessory_PerfRangeHistogram *this)
{
  *(_QWORD *)this = &off_24D990400;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990400;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990400;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance(awd::metrics::LocationAccessory_PerfRangeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_PerfRangeHistogram::New(awd::metrics::LocationAccessory_PerfRangeHistogram *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_24D990400;
  return result;
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PerfRangeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 0xC)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(awd::metrics::LocationAccessory_PerfRangeHistogram *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_17;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_17;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PerfRangeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::CopyFrom(awd::metrics::LocationAccessory_PerfRangeHistogram *this, const awd::metrics::LocationAccessory_PerfRangeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PerfRangeHistogram *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::IsInitialized(awd::metrics::LocationAccessory_PerfRangeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PerfRangeHistogram *awd::metrics::LocationAccessory_PerfRangeHistogram::Swap(awd::metrics::LocationAccessory_PerfRangeHistogram *this, awd::metrics::LocationAccessory_PerfRangeHistogram *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_PerfRangeHistogram::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PerfRangeHistogram");
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 80) = 0;
  *(_QWORD *)(this + 88) = 0;
  *(_DWORD *)(this + 96) = 0;
  return this;
}

awd::metrics::LocationAccessory_PerformanceStats *awd::metrics::LocationAccessory_PerformanceStats::LocationAccessory_PerformanceStats(awd::metrics::LocationAccessory_PerformanceStats *this, const awd::metrics::LocationAccessory_PerformanceStats *a2)
{
  *(_QWORD *)this = &off_24D990478;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(this, a2);
  return this;
}

void sub_218A2CBD0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;

  v5 = v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(v5);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(awd::metrics::LocationAccessory_PerformanceStats *this, const awd::metrics::LocationAccessory_PerformanceStats *a2)
{
  uint64_t v4;
  const awd::metrics::LocationAccessory_PerfRangeHistogram *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  awd::metrics::LocationAccessory_PerfRangeHistogram *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const awd::metrics::LocationAccessory_PerfRangeHistogram *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  awd::metrics::LocationAccessory_PerfRangeHistogram *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const awd::metrics::LocationAccessory_PerfRangeHistogram *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  awd::metrics::LocationAccessory_PerfRangeHistogram *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  const awd::metrics::LocationAccessory_Statistics *v30;
  int v31;
  _BYTE v32[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v32);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = (awd::metrics::LocationAccessory_PerfRangeHistogram *)operator new();
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *(_QWORD *)v9 = &off_24D990400;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v8 + 8 * v7);
      }
      awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((_QWORD *)a2 + 4) + 8 * v12);
      v14 = *((_DWORD *)this + 11);
      v15 = *((int *)this + 10);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 32));
          v14 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v14 + 1;
        v17 = (awd::metrics::LocationAccessory_PerfRangeHistogram *)operator new();
        *((_QWORD *)v17 + 1) = 0;
        *((_QWORD *)v17 + 2) = 0;
        *(_QWORD *)v17 = &off_24D990400;
        v18 = *((_QWORD *)this + 4);
        v19 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v15 + 1;
        v17 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v16 + 8 * v15);
      }
      awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 10));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 56));
  if (*((int *)a2 + 16) >= 1)
  {
    v20 = 0;
    do
    {
      v21 = *(const awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((_QWORD *)a2 + 7) + 8 * v20);
      v22 = *((_DWORD *)this + 17);
      v23 = *((int *)this + 16);
      if ((int)v23 >= v22)
      {
        if (v22 == *((_DWORD *)this + 18))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 56));
          v22 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v22 + 1;
        v25 = (awd::metrics::LocationAccessory_PerfRangeHistogram *)operator new();
        *((_QWORD *)v25 + 1) = 0;
        *((_QWORD *)v25 + 2) = 0;
        *(_QWORD *)v25 = &off_24D990400;
        v26 = *((_QWORD *)this + 7);
        v27 = *((int *)this + 16);
        *((_DWORD *)this + 16) = v27 + 1;
        *(_QWORD *)(v26 + 8 * v27) = v25;
      }
      else
      {
        v24 = *((_QWORD *)this + 7);
        *((_DWORD *)this + 16) = v23 + 1;
        v25 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v24 + 8 * v23);
      }
      awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(v25, v21);
      ++v20;
    }
    while (v20 < *((int *)a2 + 16));
  }
  v28 = *((_DWORD *)a2 + 24);
  if ((v28 & 0x7F8) != 0)
  {
    if ((v28 & 8) != 0)
    {
      *((_DWORD *)this + 24) |= 8u;
      v29 = *((_QWORD *)this + 10);
      if (!v29)
      {
        v29 = operator new();
        *(_QWORD *)v29 = &off_24D990388;
        *(_OWORD *)(v29 + 8) = 0u;
        *(_OWORD *)(v29 + 24) = 0u;
        *((_QWORD *)this + 10) = v29;
      }
      v30 = (const awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)a2 + 10);
      if (!v30)
        v30 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_PerformanceStats::default_instance_
                                                                   + 80);
      awd::metrics::LocationAccessory_Statistics::MergeFrom((awd::metrics::LocationAccessory_Statistics *)v29, v30);
      v28 = *((_DWORD *)a2 + 24);
    }
    if ((v28 & 0x10) != 0)
    {
      v31 = *((_DWORD *)a2 + 22);
      *((_DWORD *)this + 24) |= 0x10u;
      *((_DWORD *)this + 22) = v31;
    }
  }
}

void sub_218A2CF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PerformanceStats::~LocationAccessory_PerformanceStats(awd::metrics::LocationAccessory_PerformanceStats *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D990478;
  if ((awd::metrics::LocationAccessory_PerformanceStats *)awd::metrics::LocationAccessory_PerformanceStats::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 10);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t *)this + 7);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t *)this + 4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationAccessory_PerformanceStats::~LocationAccessory_PerformanceStats(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationAccessory_PerformanceStats::SharedDtor(_QWORD *this)
{
  if ((_QWORD *)awd::metrics::LocationAccessory_PerformanceStats::default_instance_ != this)
  {
    this = (_QWORD *)this[10];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::default_instance(awd::metrics::LocationAccessory_PerformanceStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PerformanceStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::New(awd::metrics::LocationAccessory_PerformanceStats *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D990478;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  *(_QWORD *)(result + 80) = 0;
  *(_QWORD *)(result + 88) = 0;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = this;
  v2 = *(_DWORD *)(this + 96);
  if ((v2 & 0x7F8) != 0)
  {
    if ((v2 & 8) != 0)
    {
      v3 = *(_QWORD *)(this + 80);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
    *(_DWORD *)(this + 88) = 0;
  }
  if (*(int *)(this + 16) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  if (*(int *)(v1 + 40) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8 * v6);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v1 + 40));
  }
  *(_DWORD *)(v1 + 40) = 0;
  if (*(int *)(v1 + 64) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v8);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9);
      ++v8;
    }
    while (v8 < *(int *)(v1 + 64));
  }
  *(_DWORD *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 96) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PerformanceStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  unsigned int *v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  awd::metrics::LocationAccessory_PerfRangeHistogram *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  unsigned __int8 *v23;
  int v24;
  unint64_t v25;
  char *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  awd::metrics::LocationAccessory_PerfRangeHistogram *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  awd::metrics::LocationAccessory_PerfRangeHistogram *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  int v53;
  int v54;
  int v55;
  int v56;
  _BYTE *v57;
  unsigned __int8 *v58;
  uint64_t result;
  unsigned int v60;

  v4 = (awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 8);
  v5 = (awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 32);
  v6 = (awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 56);
  v7 = (unsigned int *)((char *)this + 88);
LABEL_2:
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_34;
        while (1)
        {
          v11 = *((_DWORD *)this + 5);
          v12 = *((int *)this + 4);
          if ((int)v12 >= v11)
          {
            if (v11 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v11 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v11 + 1;
            v14 = (awd::metrics::LocationAccessory_PerfRangeHistogram *)operator new();
            *((_QWORD *)v14 + 1) = 0;
            *((_QWORD *)v14 + 2) = 0;
            *(_QWORD *)v14 = &off_24D990400;
            v15 = *((_QWORD *)this + 1);
            v16 = *((int *)this + 4);
            *((_DWORD *)this + 4) = v16 + 1;
            *(_QWORD *)(v15 + 8 * v16) = v14;
          }
          else
          {
            v13 = *((_QWORD *)this + 1);
            *((_DWORD *)this + 4) = v12 + 1;
            v14 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v13 + 8 * v12);
          }
          v60 = 0;
          v17 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v60))return 0;
          }
          else
          {
            v60 = *v17;
            *((_QWORD *)a2 + 1) = v17 + 1;
          }
          v18 = *((_DWORD *)a2 + 14);
          v19 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v18 + 1;
          if (v18 >= v19)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(v14, a2)
            || !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v20 = *((_DWORD *)a2 + 14);
          v21 = __OFSUB__(v20, 1);
          v22 = v20 - 1;
          if (v22 < 0 == v21)
            *((_DWORD *)a2 + 14) = v22;
          v23 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v23 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v24 = *v23;
          if (v24 != 10)
            break;
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
        if (v24 != 18)
          continue;
        goto LABEL_39;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_34;
        break;
      case 3u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_58;
        goto LABEL_34;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_76;
        goto LABEL_34;
      case 5u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_90;
      default:
        v10 = TagFallback & 7;
LABEL_34:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    break;
  }
  while (1)
  {
    v27 = *((_DWORD *)this + 11);
    v28 = *((int *)this + 10);
    if ((int)v28 >= v27)
    {
      if (v27 == *((_DWORD *)this + 12))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
        v27 = *((_DWORD *)this + 11);
      }
      *((_DWORD *)this + 11) = v27 + 1;
      v30 = (awd::metrics::LocationAccessory_PerfRangeHistogram *)operator new();
      *((_QWORD *)v30 + 1) = 0;
      *((_QWORD *)v30 + 2) = 0;
      *(_QWORD *)v30 = &off_24D990400;
      v31 = *((_QWORD *)this + 4);
      v32 = *((int *)this + 10);
      *((_DWORD *)this + 10) = v32 + 1;
      *(_QWORD *)(v31 + 8 * v32) = v30;
    }
    else
    {
      v29 = *((_QWORD *)this + 4);
      *((_DWORD *)this + 10) = v28 + 1;
      v30 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v29 + 8 * v28);
    }
    v60 = 0;
    v33 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v60))
        return 0;
    }
    else
    {
      v60 = *v33;
      *((_QWORD *)a2 + 1) = v33 + 1;
    }
    v34 = *((_DWORD *)a2 + 14);
    v35 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v34 + 1;
    if (v34 >= v35)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(v30, a2)
      || !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v36 = *((_DWORD *)a2 + 14);
    v21 = __OFSUB__(v36, 1);
    v37 = v36 - 1;
    if (v37 < 0 == v21)
      *((_DWORD *)a2 + 14) = v37;
    v23 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v23 >= *((_QWORD *)a2 + 2))
      goto LABEL_2;
    v38 = *v23;
    if (v38 != 18)
    {
      if (v38 != 26)
        goto LABEL_2;
      while (1)
      {
        *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_58:
        v39 = *((_DWORD *)this + 17);
        v40 = *((int *)this + 16);
        if ((int)v40 >= v39)
        {
          if (v39 == *((_DWORD *)this + 18))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            v39 = *((_DWORD *)this + 17);
          }
          *((_DWORD *)this + 17) = v39 + 1;
          v42 = (awd::metrics::LocationAccessory_PerfRangeHistogram *)operator new();
          *((_QWORD *)v42 + 1) = 0;
          *((_QWORD *)v42 + 2) = 0;
          *(_QWORD *)v42 = &off_24D990400;
          v43 = *((_QWORD *)this + 7);
          v44 = *((int *)this + 16);
          *((_DWORD *)this + 16) = v44 + 1;
          *(_QWORD *)(v43 + 8 * v44) = v42;
        }
        else
        {
          v41 = *((_QWORD *)this + 7);
          *((_DWORD *)this + 16) = v40 + 1;
          v42 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v41 + 8 * v40);
        }
        v60 = 0;
        v45 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v45 >= *((_QWORD *)a2 + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v60))return 0;
        }
        else
        {
          v60 = *v45;
          *((_QWORD *)a2 + 1) = v45 + 1;
        }
        v46 = *((_DWORD *)a2 + 14);
        v47 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v46 + 1;
        if (v46 >= v47)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(v42, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v48 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v48, 1);
        v49 = v48 - 1;
        if (v49 < 0 == v21)
          *((_DWORD *)a2 + 14) = v49;
        v23 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2))
          goto LABEL_2;
        v50 = *v23;
        if (v50 != 26)
        {
          if (v50 != 34)
            goto LABEL_2;
          *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_76:
          *((_DWORD *)this + 24) |= 8u;
          v51 = *((_QWORD *)this + 10);
          if (!v51)
          {
            v51 = operator new();
            *(_QWORD *)v51 = &off_24D990388;
            *(_OWORD *)(v51 + 8) = 0u;
            *(_OWORD *)(v51 + 24) = 0u;
            *((_QWORD *)this + 10) = v51;
          }
          v60 = 0;
          v52 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v52 >= *((_QWORD *)a2 + 2) || *v52 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v60))return 0;
          }
          else
          {
            v60 = *v52;
            *((_QWORD *)a2 + 1) = v52 + 1;
          }
          v53 = *((_DWORD *)a2 + 14);
          v54 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v53 + 1;
          if (v53 >= v54)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream((awd::metrics::LocationAccessory_Statistics *)v51, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v55 = *((_DWORD *)a2 + 14);
          v21 = __OFSUB__(v55, 1);
          v56 = v55 - 1;
          if (v56 < 0 == v21)
            *((_DWORD *)a2 + 14) = v56;
          v57 = (_BYTE *)*((_QWORD *)a2 + 1);
          v25 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v57 < v25 && *v57 == 40)
          {
            v26 = v57 + 1;
            *((_QWORD *)a2 + 1) = v26;
LABEL_90:
            if ((unint64_t)v26 >= v25 || *v26 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
              if (!(_DWORD)result)
                return result;
              v58 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v25 = *((_QWORD *)a2 + 2);
            }
            else
            {
              *v7 = *v26;
              v58 = (unsigned __int8 *)(v26 + 1);
              *((_QWORD *)a2 + 1) = v58;
            }
            *((_DWORD *)this + 24) |= 0x10u;
            if (v58 == (unsigned __int8 *)v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          goto LABEL_2;
        }
      }
    }
LABEL_39:
    *((_QWORD *)a2 + 1) = v23 + 1;
  }
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 64));
  }
  v9 = *(_DWORD *)(v5 + 96);
  if ((v9 & 8) == 0)
  {
    if ((v9 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 88), (uint64_t)a2, a4);
  }
  v10 = *(_QWORD *)(v5 + 80);
  if (!v10)
    v10 = *(_QWORD *)(awd::metrics::LocationAccessory_PerformanceStats::default_instance_ + 80);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 96) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 88), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::ByteSize(awd::metrics::LocationAccessory_PerformanceStats *this)
{
  int v2;
  int v3;
  awd::metrics::LocationAccessory_Statistics *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;

  v2 = *((_DWORD *)this + 24);
  if ((v2 & 0x7F8) == 0)
  {
    v3 = 0;
    goto LABEL_16;
  }
  if ((v2 & 8) == 0)
  {
    v3 = 0;
    if ((v2 & 0x10) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v4 = (awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)this + 10);
  if (!v4)
    v4 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_PerformanceStats::default_instance_
                                                        + 80);
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v7 = 1;
  v3 = v6 + v7 + 1;
  if ((*((_DWORD *)this + 24) & 0x10) != 0)
  {
LABEL_12:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    else
      v9 = 2;
    v3 += v9;
  }
LABEL_16:
  v10 = *((_DWORD *)this + 4);
  v11 = v10 + v3;
  if (v10 >= 1)
  {
    v12 = 0;
    do
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((_QWORD *)this + 1) + 8 * v12));
      v14 = (int)v13;
      if (v13 >= 0x80)
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      else
        v15 = 1;
      v11 += v14 + v15;
      ++v12;
    }
    while (v12 < *((int *)this + 4));
  }
  v16 = *((_DWORD *)this + 10);
  v17 = v16 + v11;
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((_QWORD *)this + 4) + 8 * v18));
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v17 += v20 + v21;
      ++v18;
    }
    while (v18 < *((int *)this + 10));
  }
  v22 = *((_DWORD *)this + 16);
  v23 = (v22 + v17);
  if (v22 >= 1)
  {
    v24 = 0;
    do
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((_QWORD *)this + 7) + 8 * v24));
      v26 = (int)v25;
      if (v25 >= 0x80)
        v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      else
        v27 = 1;
      v23 = (v26 + v23 + v27);
      ++v24;
    }
    while (v24 < *((int *)this + 16));
  }
  *((_DWORD *)this + 23) = v23;
  return v23;
}

void awd::metrics::LocationAccessory_PerformanceStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PerformanceStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PerformanceStats::CopyFrom(awd::metrics::LocationAccessory_PerformanceStats *this, const awd::metrics::LocationAccessory_PerformanceStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PerformanceStats *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::IsInitialized(awd::metrics::LocationAccessory_PerformanceStats *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PerformanceStats *awd::metrics::LocationAccessory_PerformanceStats::Swap(awd::metrics::LocationAccessory_PerformanceStats *this, awd::metrics::LocationAccessory_PerformanceStats *a2)
{
  awd::metrics::LocationAccessory_PerformanceStats *v3;
  uint64_t v4;

  if (a2 != this)
  {
    v3 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationAccessory_PerformanceStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_QWORD *)v3 + 10);
    *((_QWORD *)v3 + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 22);
    *((_DWORD *)v3 + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 24);
    *((_DWORD *)v3 + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 23);
    *((_DWORD *)v3 + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v4;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_PerformanceStats::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PerformanceStats");
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::LocationAccessory_SpeedPerfRangeHistogram(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D9904F0;
  awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_218A2DC80(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *a2)
{
  int v4;
  unsigned int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 0xF)
        awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom();
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_218A2DD48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::~LocationAccessory_SpeedPerfRangeHistogram(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this)
{
  *(_QWORD *)this = &off_24D9904F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9904F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9904F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::New(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_24D9904F0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 0xE)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::ByteSize(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_17;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_17;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::CopyFrom(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::IsInitialized(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::Swap(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.SpeedPerfRangeHistogram");
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

awd::metrics::LocationAccessory_SpeedPerformanceStats *awd::metrics::LocationAccessory_SpeedPerformanceStats::LocationAccessory_SpeedPerformanceStats(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, const awd::metrics::LocationAccessory_SpeedPerformanceStats *a2)
{
  *(_QWORD *)this = &off_24D990568;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  awd::metrics::LocationAccessory_SpeedPerformanceStats::MergeFrom(this, a2);
  return this;
}

void sub_218A2E260(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;

  v4 = v3;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::MergeFrom(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, const awd::metrics::LocationAccessory_SpeedPerformanceStats *a2)
{
  uint64_t v4;
  const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  const awd::metrics::LocationAccessory_Statistics *v22;
  int v23;
  _BYTE v24[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = (awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *)operator new();
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *(_QWORD *)v9 = &off_24D9904F0;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(v8 + 8 * v7);
      }
      awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(*((_QWORD *)a2 + 4) + 8 * v12);
      v14 = *((_DWORD *)this + 11);
      v15 = *((int *)this + 10);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 32));
          v14 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v14 + 1;
        v17 = (awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *)operator new();
        *((_QWORD *)v17 + 1) = 0;
        *((_QWORD *)v17 + 2) = 0;
        *(_QWORD *)v17 = &off_24D9904F0;
        v18 = *((_QWORD *)this + 4);
        v19 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v15 + 1;
        v17 = *(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(v16 + 8 * v15);
      }
      awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 10));
  }
  v20 = *((_DWORD *)a2 + 18);
  if ((v20 & 0x3FC) != 0)
  {
    if ((v20 & 4) != 0)
    {
      *((_DWORD *)this + 18) |= 4u;
      v21 = *((_QWORD *)this + 7);
      if (!v21)
      {
        v21 = operator new();
        *(_QWORD *)v21 = &off_24D990388;
        *(_OWORD *)(v21 + 8) = 0u;
        *(_OWORD *)(v21 + 24) = 0u;
        *((_QWORD *)this + 7) = v21;
      }
      v22 = (const awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)a2 + 7);
      if (!v22)
        v22 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_
                                                                   + 56);
      awd::metrics::LocationAccessory_Statistics::MergeFrom((awd::metrics::LocationAccessory_Statistics *)v21, v22);
      v20 = *((_DWORD *)a2 + 18);
    }
    if ((v20 & 8) != 0)
    {
      v23 = *((_DWORD *)a2 + 16);
      *((_DWORD *)this + 18) |= 8u;
      *((_DWORD *)this + 16) = v23;
    }
  }
}

void sub_218A2E528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::~LocationAccessory_SpeedPerformanceStats(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D990568;
  if ((awd::metrics::LocationAccessory_SpeedPerformanceStats *)awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 7);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>((uint64_t *)this + 4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationAccessory_SpeedPerformanceStats::~LocationAccessory_SpeedPerformanceStats(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationAccessory_SpeedPerformanceStats::SharedDtor(_QWORD *this)
{
  if ((_QWORD *)awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_ != this)
  {
    this = (_QWORD *)this[7];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_;
  if (!awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::New(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D990568;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = this;
  v2 = *(_DWORD *)(this + 72);
  if ((v2 & 0x3FC) != 0)
  {
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 56);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
    *(_DWORD *)(this + 64) = 0;
  }
  if (*(int *)(this + 16) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  if (*(int *)(v1 + 40) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8 * v6);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v1 + 40));
  }
  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  unsigned int *v6;
  unsigned __int8 *v7;
  uint64_t TagFallback;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  unsigned __int8 *v22;
  int v23;
  unint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  int v40;
  int v41;
  int v42;
  int v43;
  _BYTE *v44;
  unsigned __int8 *v45;
  uint64_t result;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;

  v4 = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 8);
  v5 = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 32);
  v6 = (unsigned int *)((char *)this + 64);
LABEL_2:
  while (1)
  {
    v7 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || (char)*v7 < 0)
      break;
    TagFallback = *v7;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((_QWORD *)a2 + 1) = v7 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_32;
        while (1)
        {
          v10 = *((_DWORD *)this + 5);
          v11 = *((int *)this + 4);
          if ((int)v11 >= v10)
          {
            if (v10 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v10 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v10 + 1;
            v13 = (awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *)operator new();
            *((_QWORD *)v13 + 1) = 0;
            *((_QWORD *)v13 + 2) = 0;
            *(_QWORD *)v13 = &off_24D9904F0;
            v14 = *((_QWORD *)this + 1);
            v15 = *((int *)this + 4);
            *((_DWORD *)this + 4) = v15 + 1;
            *(_QWORD *)(v14 + 8 * v15) = v13;
          }
          else
          {
            v12 = *((_QWORD *)this + 1);
            *((_DWORD *)this + 4) = v11 + 1;
            v13 = *(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(v12 + 8 * v11);
          }
          v47 = 0;
          v16 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v47))return 0;
          }
          else
          {
            v47 = *v16;
            *((_QWORD *)a2 + 1) = v16 + 1;
          }
          v17 = *((_DWORD *)a2 + 14);
          v18 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v17 + 1;
          if (v17 >= v18)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergePartialFromCodedStream(v13, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v19 = *((_DWORD *)a2 + 14);
          v20 = __OFSUB__(v19, 1);
          v21 = v19 - 1;
          if (v21 < 0 == v20)
            *((_DWORD *)a2 + 14) = v21;
          v22 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v22 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v23 = *v22;
          if (v23 != 10)
            break;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        if (v23 != 18)
          continue;
        goto LABEL_37;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_32;
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_56;
        goto LABEL_32;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v24 = *((_QWORD *)a2 + 2);
        goto LABEL_70;
      default:
        v9 = TagFallback & 7;
LABEL_32:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    while (1)
    {
      v26 = *((_DWORD *)this + 11);
      v27 = *((int *)this + 10);
      if ((int)v27 >= v26)
      {
        if (v26 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
          v26 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v26 + 1;
        v29 = (awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *)operator new();
        *((_QWORD *)v29 + 1) = 0;
        *((_QWORD *)v29 + 2) = 0;
        *(_QWORD *)v29 = &off_24D9904F0;
        v30 = *((_QWORD *)this + 4);
        v31 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v31 + 1;
        *(_QWORD *)(v30 + 8 * v31) = v29;
      }
      else
      {
        v28 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v27 + 1;
        v29 = *(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(v28 + 8 * v27);
      }
      v48 = 0;
      v32 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))
          return 0;
      }
      else
      {
        v48 = *v32;
        *((_QWORD *)a2 + 1) = v32 + 1;
      }
      v33 = *((_DWORD *)a2 + 14);
      v34 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v33 + 1;
      if (v33 >= v34)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergePartialFromCodedStream(v29, a2)
        || !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v35 = *((_DWORD *)a2 + 14);
      v20 = __OFSUB__(v35, 1);
      v36 = v35 - 1;
      if (v36 < 0 == v20)
        *((_DWORD *)a2 + 14) = v36;
      v22 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v22 >= *((_QWORD *)a2 + 2))
        goto LABEL_2;
      v37 = *v22;
      if (v37 != 18)
        break;
LABEL_37:
      *((_QWORD *)a2 + 1) = v22 + 1;
    }
    if (v37 != 26)
      continue;
    *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_56:
    *((_DWORD *)this + 18) |= 4u;
    v38 = *((_QWORD *)this + 7);
    if (!v38)
    {
      v38 = operator new();
      *(_QWORD *)v38 = &off_24D990388;
      *(_OWORD *)(v38 + 8) = 0u;
      *(_OWORD *)(v38 + 24) = 0u;
      *((_QWORD *)this + 7) = v38;
    }
    v49 = 0;
    v39 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49))
        return 0;
    }
    else
    {
      v49 = *v39;
      *((_QWORD *)a2 + 1) = v39 + 1;
    }
    v40 = *((_DWORD *)a2 + 14);
    v41 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v40 + 1;
    if (v40 >= v41)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream((awd::metrics::LocationAccessory_Statistics *)v38, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v42 = *((_DWORD *)a2 + 14);
    v20 = __OFSUB__(v42, 1);
    v43 = v42 - 1;
    if (v43 < 0 == v20)
      *((_DWORD *)a2 + 14) = v43;
    v44 = (_BYTE *)*((_QWORD *)a2 + 1);
    v24 = *((_QWORD *)a2 + 2);
    if ((unint64_t)v44 < v24 && *v44 == 32)
    {
      v25 = v44 + 1;
      *((_QWORD *)a2 + 1) = v25;
LABEL_70:
      if ((unint64_t)v25 >= v24 || *v25 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
        if (!(_DWORD)result)
          return result;
        v45 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v24 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v6 = *v25;
        v45 = (unsigned __int8 *)(v25 + 1);
        *((_QWORD *)a2 + 1) = v45;
      }
      *((_DWORD *)this + 18) |= 8u;
      if (v45 == (unsigned __int8 *)v24 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
  }
  TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 4) == 0)
  {
    if ((v8 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  }
  v9 = *(_QWORD *)(v5 + 56);
  if (!v9)
    v9 = *(_QWORD *)(awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_ + 56);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::ByteSize(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
  int v2;
  int v3;
  awd::metrics::LocationAccessory_Statistics *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;

  v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x3FC) == 0)
  {
    v3 = 0;
    goto LABEL_16;
  }
  if ((v2 & 4) == 0)
  {
    v3 = 0;
    if ((v2 & 8) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v4 = (awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)this + 7);
  if (!v4)
    v4 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_
                                                        + 56);
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v7 = 1;
  v3 = v6 + v7 + 1;
  if ((*((_DWORD *)this + 18) & 8) != 0)
  {
LABEL_12:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    else
      v9 = 2;
    v3 += v9;
  }
LABEL_16:
  v10 = *((_DWORD *)this + 4);
  v11 = v10 + v3;
  if (v10 >= 1)
  {
    v12 = 0;
    do
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(*((_QWORD *)this + 1) + 8 * v12));
      v14 = (int)v13;
      if (v13 >= 0x80)
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      else
        v15 = 1;
      v11 += v14 + v15;
      ++v12;
    }
    while (v12 < *((int *)this + 4));
  }
  v16 = *((_DWORD *)this + 10);
  v17 = (v16 + v11);
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(*((_QWORD *)this + 4) + 8 * v18));
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *((int *)this + 10));
  }
  *((_DWORD *)this + 17) = v17;
  return v17;
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_SpeedPerformanceStats::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::CopyFrom(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, const awd::metrics::LocationAccessory_SpeedPerformanceStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_SpeedPerformanceStats *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_SpeedPerformanceStats::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::IsInitialized(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
  return 1;
}

awd::metrics::LocationAccessory_SpeedPerformanceStats *awd::metrics::LocationAccessory_SpeedPerformanceStats::Swap(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, awd::metrics::LocationAccessory_SpeedPerformanceStats *a2)
{
  awd::metrics::LocationAccessory_SpeedPerformanceStats *v3;
  uint64_t v4;

  if (a2 != this)
  {
    v3 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_QWORD *)v3 + 7);
    *((_QWORD *)v3 + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 16);
    *((_DWORD *)v3 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 18);
    *((_DWORD *)v3 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 17);
    *((_DWORD *)v3 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v4;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_SpeedPerformanceStats::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.SpeedPerformanceStats");
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_LatencyRangeHistogram *awd::metrics::LocationAccessory_LatencyRangeHistogram::LocationAccessory_LatencyRangeHistogram(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, const awd::metrics::LocationAccessory_LatencyRangeHistogram *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D9905E0;
  awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_218A2F010(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, const awd::metrics::LocationAccessory_LatencyRangeHistogram *a2)
{
  int v4;
  unsigned int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 6)
        awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom();
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_218A2F0D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::~LocationAccessory_LatencyRangeHistogram(awd::metrics::LocationAccessory_LatencyRangeHistogram *this)
{
  *(_QWORD *)this = &off_24D9905E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9905E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9905E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_LatencyRangeHistogram::New(awd::metrics::LocationAccessory_LatencyRangeHistogram *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_24D9905E0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 5)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::ByteSize(awd::metrics::LocationAccessory_LatencyRangeHistogram *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_17;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_17;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::CopyFrom(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, const awd::metrics::LocationAccessory_LatencyRangeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_LatencyRangeHistogram *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::IsInitialized(awd::metrics::LocationAccessory_LatencyRangeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_LatencyRangeHistogram *awd::metrics::LocationAccessory_LatencyRangeHistogram::Swap(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, awd::metrics::LocationAccessory_LatencyRangeHistogram *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_LatencyRangeHistogram::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.LatencyRangeHistogram");
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationAccessory_MessageHistogram *awd::metrics::LocationAccessory_MessageHistogram::LocationAccessory_MessageHistogram(awd::metrics::LocationAccessory_MessageHistogram *this, const awd::metrics::LocationAccessory_MessageHistogram *a2)
{
  uint64_t v3;

  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D990658;
  *((_QWORD *)this + 1) = v3;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationAccessory_MessageHistogram::MergeFrom(this, a2);
  return this;
}

void sub_218A2F5D0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_MessageHistogram::MergeFrom(awd::metrics::LocationAccessory_MessageHistogram *this, const awd::metrics::LocationAccessory_MessageHistogram *a2)
{
  int v4;
  const std::string *v5;
  std::string *v6;
  int v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = (const std::string *)*((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 1u;
      v6 = (std::string *)*((_QWORD *)this + 1);
      if (v6 == (std::string *)MEMORY[0x24BEDD958])
      {
        v6 = (std::string *)operator new();
        v6->__r_.__value_.__l.__size_ = 0;
        v6->__r_.__value_.__r.__words[2] = 0;
        v6->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 1) = v6;
      }
      std::string::operator=(v6, v5);
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v7 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 2u;
      *((_DWORD *)this + 4) = v7;
    }
  }
}

void sub_218A2F6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_MessageHistogram::~LocationAccessory_MessageHistogram(awd::metrics::LocationAccessory_MessageHistogram *this)
{
  *(_QWORD *)this = &off_24D990658;
  awd::metrics::LocationAccessory_MessageHistogram::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990658;
  awd::metrics::LocationAccessory_MessageHistogram::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990658;
  awd::metrics::LocationAccessory_MessageHistogram::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 8);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::default_instance(awd::metrics::LocationAccessory_MessageHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_MessageHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_MessageHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_MessageHistogram::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::New(awd::metrics::LocationAccessory_MessageHistogram *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)result = &off_24D990658;
  *(_QWORD *)(result + 8) = v2;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 24))
  {
    if ((*(_BYTE *)(this + 24) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(_BYTE **)v1 = 0;
          *(_QWORD *)(v1 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v1 = 0;
          *(_BYTE *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_MessageHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t result;
  _BYTE *v13;
  unsigned __int8 *v14;

  v4 = (unsigned int *)((char *)this + 16);
  v5 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_22;
      *((_DWORD *)this + 6) |= 1u;
      if (*((_QWORD *)this + 1) == v5)
      {
        v11 = (_QWORD *)operator new();
        v11[1] = 0;
        v11[2] = 0;
        *v11 = 0;
        *((_QWORD *)this + 1) = v11;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!(_DWORD)result)
        return result;
      v13 = (_BYTE *)*((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v13 < v9 && *v13 == 16)
      {
        v10 = v13 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_18:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v10;
          v14 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_18;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_22:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::ByteSize(awd::metrics::LocationAccessory_MessageHistogram *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 24);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((*((_BYTE *)this + 24) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 24) & 2) == 0)
      goto LABEL_19;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 1);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 6);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v9 + v5);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v11 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    else
      v12 = 2;
    v3 = (v12 + v3);
  }
LABEL_19:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_MessageHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_MessageHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_MessageHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_MessageHistogram::CopyFrom(awd::metrics::LocationAccessory_MessageHistogram *this, const awd::metrics::LocationAccessory_MessageHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_MessageHistogram *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_MessageHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::IsInitialized(awd::metrics::LocationAccessory_MessageHistogram *this)
{
  return 1;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::Swap(uint64_t this, awd::metrics::LocationAccessory_MessageHistogram *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::LocationAccessory_MessageHistogram *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_MessageHistogram::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.MessageHistogram");
}

_QWORD *awd::metrics::LocationAccessory_MessageStats::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[6] = 0;
  this[7] = 0;
  return this;
}

awd::metrics::LocationAccessory_MessageStats *awd::metrics::LocationAccessory_MessageStats::LocationAccessory_MessageStats(awd::metrics::LocationAccessory_MessageStats *this, const awd::metrics::LocationAccessory_MessageStats *a2)
{
  *(_QWORD *)this = &off_24D9906D0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::LocationAccessory_MessageStats::MergeFrom(this, a2);
  return this;
}

void sub_218A2FCD4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LatencyRangeHistogram>::TypeHandler>(v1 + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

float awd::metrics::LocationAccessory_MessageStats::MergeFrom(awd::metrics::LocationAccessory_MessageStats *this, const awd::metrics::LocationAccessory_MessageStats *a2)
{
  float result;
  uint64_t v5;
  const awd::metrics::LocationAccessory_LatencyRangeHistogram *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  awd::metrics::LocationAccessory_LatencyRangeHistogram *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  const awd::metrics::LocationAccessory_Statistics *v17;
  uint64_t v18;
  const awd::metrics::LocationAccessory_Statistics *v19;
  _BYTE v20[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_MessageStats *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const awd::metrics::LocationAccessory_LatencyRangeHistogram **)(*((_QWORD *)a2 + 3) + 8 * v5);
      v7 = *((_DWORD *)this + 9);
      v8 = *((int *)this + 8);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_MessageStats *)((char *)this + 24));
          v7 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v7 + 1;
        v10 = (awd::metrics::LocationAccessory_LatencyRangeHistogram *)operator new();
        *((_QWORD *)v10 + 1) = 0;
        *((_QWORD *)v10 + 2) = 0;
        *(_QWORD *)v10 = &off_24D9905E0;
        v11 = *((_QWORD *)this + 3);
        v12 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 3);
        *((_DWORD *)this + 8) = v8 + 1;
        v10 = *(awd::metrics::LocationAccessory_LatencyRangeHistogram **)(v9 + 8 * v8);
      }
      awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 8));
  }
  LOBYTE(v13) = *((_BYTE *)a2 + 60);
  if (!(_BYTE)v13)
    return result;
  if ((*((_BYTE *)a2 + 60) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 60) & 2) == 0)
      goto LABEL_14;
LABEL_18:
    v15 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 15) |= 2u;
    *((_DWORD *)this + 3) = v15;
    v13 = *((_DWORD *)a2 + 15);
    if ((v13 & 4) == 0)
    {
LABEL_15:
      if ((v13 & 0x10) == 0)
        return result;
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  v14 = *((_DWORD *)a2 + 2);
  *((_DWORD *)this + 15) |= 1u;
  *((_DWORD *)this + 2) = v14;
  v13 = *((_DWORD *)a2 + 15);
  if ((v13 & 2) != 0)
    goto LABEL_18;
LABEL_14:
  if ((v13 & 4) == 0)
    goto LABEL_15;
LABEL_19:
  *((_DWORD *)this + 15) |= 4u;
  v16 = *((_QWORD *)this + 2);
  if (!v16)
  {
    v16 = operator new();
    *(_QWORD *)v16 = &off_24D990388;
    *(_OWORD *)(v16 + 8) = 0u;
    *(_OWORD *)(v16 + 24) = 0u;
    *((_QWORD *)this + 2) = v16;
  }
  v17 = (const awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)a2 + 2);
  if (!v17)
    v17 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_MessageStats::default_instance_
                                                               + 16);
  result = awd::metrics::LocationAccessory_Statistics::MergeFrom((awd::metrics::LocationAccessory_Statistics *)v16, v17);
  if ((*((_DWORD *)a2 + 15) & 0x10) != 0)
  {
LABEL_24:
    *((_DWORD *)this + 15) |= 0x10u;
    v18 = *((_QWORD *)this + 6);
    if (!v18)
    {
      v18 = operator new();
      *(_QWORD *)v18 = &off_24D990388;
      *(_OWORD *)(v18 + 8) = 0u;
      *(_OWORD *)(v18 + 24) = 0u;
      *((_QWORD *)this + 6) = v18;
    }
    v19 = (const awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)a2 + 6);
    if (!v19)
      v19 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_MessageStats::default_instance_
                                                                 + 48);
    return awd::metrics::LocationAccessory_Statistics::MergeFrom((awd::metrics::LocationAccessory_Statistics *)v18, v19);
  }
  return result;
}

void sub_218A2FF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_MessageStats::~LocationAccessory_MessageStats(awd::metrics::LocationAccessory_MessageStats *this)
{
  uint64_t *v2;

  *(_QWORD *)this = &off_24D9906D0;
  v2 = (uint64_t *)((char *)this + 24);
  awd::metrics::LocationAccessory_MessageStats::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LatencyRangeHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationAccessory_MessageStats::~LocationAccessory_MessageStats(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationAccessory_MessageStats::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;

  if ((_QWORD *)awd::metrics::LocationAccessory_MessageStats::default_instance_ != this)
  {
    v1 = this;
    v2 = this[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    this = (_QWORD *)v1[6];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::default_instance(awd::metrics::LocationAccessory_MessageStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  if (!awd::metrics::LocationAccessory_MessageStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_MessageStats::default_instance_;
  }
  return result;
}

double awd::metrics::LocationAccessory_MessageStats::New(awd::metrics::LocationAccessory_MessageStats *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D9906D0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 60);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 60);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      v4 = *(_QWORD *)(this + 48);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
      }
    }
  }
  if (*(int *)(this + 32) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 60) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_MessageStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  int v14;
  uint64_t result;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  awd::metrics::LocationAccessory_LatencyRangeHistogram *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;

  v4 = (unsigned int *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 12);
  v6 = (awd::metrics::LocationAccessory_MessageStats *)((char *)this + 24);
  while (1)
  {
LABEL_2:
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 15) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_28;
        }
        continue;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_28:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v13;
          v16 = v13 + 1;
          *((_QWORD *)a2 + 1) = v16;
        }
        v14 = *((_DWORD *)this + 15) | 2;
        *((_DWORD *)this + 15) = v14;
        if ((unint64_t)v16 >= v10 || *v16 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_36:
        *((_DWORD *)this + 15) = v14 | 4;
        v17 = *((_QWORD *)this + 2);
        if (!v17)
        {
          v17 = operator new();
          *(_QWORD *)v17 = &off_24D990388;
          *(_OWORD *)(v17 + 8) = 0u;
          *(_OWORD *)(v17 + 24) = 0u;
          *((_QWORD *)this + 2) = v17;
        }
        v43 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43))return 0;
        }
        else
        {
          v43 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream((awd::metrics::LocationAccessory_Statistics *)v17, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 34)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_50:
          v25 = *((_DWORD *)this + 9);
          v26 = *((int *)this + 8);
          if ((int)v26 >= v25)
          {
            if (v25 == *((_DWORD *)this + 10))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
              v25 = *((_DWORD *)this + 9);
            }
            *((_DWORD *)this + 9) = v25 + 1;
            v28 = (awd::metrics::LocationAccessory_LatencyRangeHistogram *)operator new();
            *((_QWORD *)v28 + 1) = 0;
            *((_QWORD *)v28 + 2) = 0;
            *(_QWORD *)v28 = &off_24D9905E0;
            v29 = *((_QWORD *)this + 3);
            v30 = *((int *)this + 8);
            *((_DWORD *)this + 8) = v30 + 1;
            *(_QWORD *)(v29 + 8 * v30) = v28;
          }
          else
          {
            v27 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 8) = v26 + 1;
            v28 = *(awd::metrics::LocationAccessory_LatencyRangeHistogram **)(v27 + 8 * v26);
          }
          v44 = 0;
          v31 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0;
          }
          else
          {
            v44 = *v31;
            *((_QWORD *)a2 + 1) = v31 + 1;
          }
          v32 = *((_DWORD *)a2 + 14);
          v33 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v32 + 1;
          if (v32 >= v33)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_LatencyRangeHistogram::MergePartialFromCodedStream(v28, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v34 = *((_DWORD *)a2 + 14);
          v22 = __OFSUB__(v34, 1);
          v35 = v34 - 1;
          if (v35 < 0 == v22)
            *((_DWORD *)a2 + 14) = v35;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v24 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v36 = *v24;
        }
        while (v36 == 34);
        if (v36 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_68:
        *((_DWORD *)this + 15) |= 0x10u;
        v37 = *((_QWORD *)this + 6);
        if (!v37)
        {
          v37 = operator new();
          *(_QWORD *)v37 = &off_24D990388;
          *(_OWORD *)(v37 + 8) = 0u;
          *(_OWORD *)(v37 + 24) = 0u;
          *((_QWORD *)this + 6) = v37;
        }
        v45 = 0;
        v38 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v45))return 0;
        }
        else
        {
          v45 = *v38;
          *((_QWORD *)a2 + 1) = v38 + 1;
        }
        v39 = *((_DWORD *)a2 + 14);
        v40 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v39 + 1;
        if (v39 >= v40)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream((awd::metrics::LocationAccessory_Statistics *)v37, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v41 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v41, 1);
        v42 = v41 - 1;
        if (v42 < 0 == v22)
          *((_DWORD *)a2 + 14) = v42;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_20;
        v14 = *((_DWORD *)this + 15);
        goto LABEL_36;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_50;
        goto LABEL_20;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_20;
        goto LABEL_68;
      default:
        v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationAccessory_MessageStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_10;
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 4) == 0)
    goto LABEL_10;
LABEL_7:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(awd::metrics::LocationAccessory_MessageStats::default_instance_ + 16);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
LABEL_10:
  if (*(int *)(v5 + 32) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 32));
  }
  if ((*(_BYTE *)(v5 + 60) & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 48);
    if (!v9)
      v9 = *(_QWORD *)(awd::metrics::LocationAccessory_MessageStats::default_instance_ + 48);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::ByteSize(awd::metrics::LocationAccessory_MessageStats *this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  awd::metrics::LocationAccessory_Statistics *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  awd::metrics::LocationAccessory_Statistics *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;

  LOBYTE(v2) = *((_BYTE *)this + 60);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_29;
  }
  if ((*((_BYTE *)this + 60) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 15);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 60) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 0x10) == 0)
      goto LABEL_29;
    goto LABEL_23;
  }
  v7 = (awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)this + 2);
  if (!v7)
    v7 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_MessageStats::default_instance_
                                                        + 16);
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v7);
  v9 = (int)v8;
  if (v8 >= 0x80)
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
  else
    v10 = 1;
  v3 += v9 + v10 + 1;
  if ((*((_DWORD *)this + 15) & 0x10) != 0)
  {
LABEL_23:
    v11 = (awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)this + 6);
    if (!v11)
      v11 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_MessageStats::default_instance_
                                                           + 48);
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v11);
    v13 = (int)v12;
    if (v12 >= 0x80)
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    else
      v14 = 1;
    v3 += v13 + v14 + 1;
  }
LABEL_29:
  v15 = *((_DWORD *)this + 8);
  v16 = (v15 + v3);
  if (v15 >= 1)
  {
    v17 = 0;
    do
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_LatencyRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_LatencyRangeHistogram **)(*((_QWORD *)this + 3) + 8 * v17));
      v19 = (int)v18;
      if (v18 >= 0x80)
        v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      else
        v20 = 1;
      v16 = (v19 + v16 + v20);
      ++v17;
    }
    while (v17 < *((int *)this + 8));
  }
  *((_DWORD *)this + 14) = v16;
  return v16;
}

float awd::metrics::LocationAccessory_MessageStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_MessageStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::LocationAccessory_MessageStats::MergeFrom(this, lpsrc);
}

float awd::metrics::LocationAccessory_MessageStats::CopyFrom(awd::metrics::LocationAccessory_MessageStats *this, const awd::metrics::LocationAccessory_MessageStats *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_MessageStats *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::LocationAccessory_MessageStats::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::IsInitialized(awd::metrics::LocationAccessory_MessageStats *this)
{
  return 1;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::Swap(uint64_t this, awd::metrics::LocationAccessory_MessageStats *a2)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 != (awd::metrics::LocationAccessory_MessageStats *)this)
  {
    v3 = this;
    v4 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v4;
    v5 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v5;
    v6 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v6;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v7 = *(_QWORD *)(v3 + 48);
    *(_QWORD *)(v3 + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    LODWORD(v7) = *(_DWORD *)(v3 + 60);
    *(_DWORD *)(v3 + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v7;
    LODWORD(v7) = *(_DWORD *)(v3 + 56);
    *(_DWORD *)(v3 + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v7;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_MessageStats::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.MessageStats");
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::LocationAccessory_NMEAScreeningLocTypeHistogram(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, const awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D990748;
  awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_218A30A98(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, const awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *a2)
{
  int v4;
  unsigned int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 5)
        awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom();
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_218A30B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::~LocationAccessory_NMEAScreeningLocTypeHistogram(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this)
{
  *(_QWORD *)this = &off_24D990748;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990748;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990748;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::New(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_24D990748;
  return result;
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 4)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::ByteSize(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_17;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_17;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::CopyFrom(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, const awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::IsInitialized(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::Swap(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.NMEAScreeningLocTypeHistogram");
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = MEMORY[0x24BEDD958];
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationAccessory_LocationAppRunningTime *awd::metrics::LocationAccessory_LocationAppRunningTime::LocationAccessory_LocationAppRunningTime(awd::metrics::LocationAccessory_LocationAppRunningTime *this, const awd::metrics::LocationAccessory_LocationAppRunningTime *a2)
{
  uint64_t v3;

  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D9907C0;
  *((_QWORD *)this + 1) = v3;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationAccessory_LocationAppRunningTime::MergeFrom(this, a2);
  return this;
}

void sub_218A31058(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::MergeFrom(awd::metrics::LocationAccessory_LocationAppRunningTime *this, const awd::metrics::LocationAccessory_LocationAppRunningTime *a2)
{
  int v4;
  const std::string *v5;
  std::string *v6;
  int v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = (const std::string *)*((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 1u;
      v6 = (std::string *)*((_QWORD *)this + 1);
      if (v6 == (std::string *)MEMORY[0x24BEDD958])
      {
        v6 = (std::string *)operator new();
        v6->__r_.__value_.__l.__size_ = 0;
        v6->__r_.__value_.__r.__words[2] = 0;
        v6->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 1) = v6;
      }
      std::string::operator=(v6, v5);
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v7 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 2u;
      *((_DWORD *)this + 4) = v7;
    }
  }
}

void sub_218A31158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::~LocationAccessory_LocationAppRunningTime(awd::metrics::LocationAccessory_LocationAppRunningTime *this)
{
  *(_QWORD *)this = &off_24D9907C0;
  awd::metrics::LocationAccessory_LocationAppRunningTime::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9907C0;
  awd::metrics::LocationAccessory_LocationAppRunningTime::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9907C0;
  awd::metrics::LocationAccessory_LocationAppRunningTime::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 8);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance(awd::metrics::LocationAccessory_LocationAppRunningTime *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_;
  if (!awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::New(awd::metrics::LocationAccessory_LocationAppRunningTime *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  v2 = MEMORY[0x24BEDD958];
  *(_QWORD *)result = &off_24D9907C0;
  *(_QWORD *)(result + 8) = v2;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 24))
  {
    if ((*(_BYTE *)(this + 24) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(_BYTE **)v1 = 0;
          *(_QWORD *)(v1 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v1 = 0;
          *(_BYTE *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::MergePartialFromCodedStream(awd::metrics::LocationAccessory_LocationAppRunningTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t result;
  _BYTE *v13;
  unsigned __int8 *v14;

  v4 = (unsigned int *)((char *)this + 16);
  v5 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_22;
      *((_DWORD *)this + 6) |= 1u;
      if (*((_QWORD *)this + 1) == v5)
      {
        v11 = (_QWORD *)operator new();
        v11[1] = 0;
        v11[2] = 0;
        *v11 = 0;
        *((_QWORD *)this + 1) = v11;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!(_DWORD)result)
        return result;
      v13 = (_BYTE *)*((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v13 < v9 && *v13 == 16)
      {
        v10 = v13 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_18:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v10;
          v14 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_18;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_22:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::ByteSize(awd::metrics::LocationAccessory_LocationAppRunningTime *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 24);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((*((_BYTE *)this + 24) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 24) & 2) == 0)
      goto LABEL_19;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 1);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 6);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v9 + v5);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v11 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    else
      v12 = 2;
    v3 = (v12 + v3);
  }
LABEL_19:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_LocationAppRunningTime *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_LocationAppRunningTime::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::CopyFrom(awd::metrics::LocationAccessory_LocationAppRunningTime *this, const awd::metrics::LocationAccessory_LocationAppRunningTime *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_LocationAppRunningTime *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_LocationAppRunningTime::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::IsInitialized(awd::metrics::LocationAccessory_LocationAppRunningTime *this)
{
  return 1;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::Swap(uint64_t this, awd::metrics::LocationAccessory_LocationAppRunningTime *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::LocationAccessory_LocationAppRunningTime *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_LocationAppRunningTime::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.LocationAppRunningTime");
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_NavDynamicsHistogram *awd::metrics::LocationAccessory_NavDynamicsHistogram::LocationAccessory_NavDynamicsHistogram(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, const awd::metrics::LocationAccessory_NavDynamicsHistogram *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D990838;
  awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom(this, a2);
  return this;
}

void sub_218A31738(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, const awd::metrics::LocationAccessory_NavDynamicsHistogram *a2)
{
  int v4;
  unsigned int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 7)
        awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom();
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_218A31800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::~LocationAccessory_NavDynamicsHistogram(awd::metrics::LocationAccessory_NavDynamicsHistogram *this)
{
  *(_QWORD *)this = &off_24D990838;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990838;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990838;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_NavDynamicsHistogram::New(awd::metrics::LocationAccessory_NavDynamicsHistogram *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_24D990838;
  return result;
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 6)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::ByteSize(awd::metrics::LocationAccessory_NavDynamicsHistogram *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_17;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_17;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::CopyFrom(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, const awd::metrics::LocationAccessory_NavDynamicsHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_NavDynamicsHistogram *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::IsInitialized(awd::metrics::LocationAccessory_NavDynamicsHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_NavDynamicsHistogram *awd::metrics::LocationAccessory_NavDynamicsHistogram::Swap(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, awd::metrics::LocationAccessory_NavDynamicsHistogram *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_NavDynamicsHistogram::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.NavDynamicsHistogram");
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(_QWORD *)(this + 72) = 0;
  return this;
}

awd::metrics::LocationAccessory_PASCDRavenUsageStats *awd::metrics::LocationAccessory_PASCDRavenUsageStats::LocationAccessory_PASCDRavenUsageStats(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, const awd::metrics::LocationAccessory_PASCDRavenUsageStats *a2)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_24D9908B0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 20) = 0;
  awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergeFrom(this, a2);
  return this;
}

void sub_218A31D24(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;

  v4 = v3;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergeFrom(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, const awd::metrics::LocationAccessory_PASCDRavenUsageStats *a2)
{
  uint64_t v4;
  const awd::metrics::LocationAccessory_PerfRangeHistogram *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  awd::metrics::LocationAccessory_PerfRangeHistogram *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const awd::metrics::LocationAccessory_PerfRangeHistogram *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  awd::metrics::LocationAccessory_PerfRangeHistogram *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  _BYTE v26[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = (awd::metrics::LocationAccessory_PerfRangeHistogram *)operator new();
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *(_QWORD *)v9 = &off_24D990400;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v8 + 8 * v7);
      }
      awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((_QWORD *)a2 + 4) + 8 * v12);
      v14 = *((_DWORD *)this + 11);
      v15 = *((int *)this + 10);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 32));
          v14 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v14 + 1;
        v17 = (awd::metrics::LocationAccessory_PerfRangeHistogram *)operator new();
        *((_QWORD *)v17 + 1) = 0;
        *((_QWORD *)v17 + 2) = 0;
        *(_QWORD *)v17 = &off_24D990400;
        v18 = *((_QWORD *)this + 4);
        v19 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v15 + 1;
        v17 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v16 + 8 * v15);
      }
      awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 10));
  }
  v20 = *((_DWORD *)a2 + 20);
  if ((v20 & 0x3FC) != 0)
  {
    if ((v20 & 4) != 0)
    {
      v22 = *((_DWORD *)a2 + 14);
      *((_DWORD *)this + 20) |= 4u;
      *((_DWORD *)this + 14) = v22;
      v20 = *((_DWORD *)a2 + 20);
      if ((v20 & 8) == 0)
      {
LABEL_22:
        if ((v20 & 0x10) == 0)
          goto LABEL_23;
        goto LABEL_29;
      }
    }
    else if ((v20 & 8) == 0)
    {
      goto LABEL_22;
    }
    v23 = *((_DWORD *)a2 + 15);
    *((_DWORD *)this + 20) |= 8u;
    *((_DWORD *)this + 15) = v23;
    v20 = *((_DWORD *)a2 + 20);
    if ((v20 & 0x10) == 0)
    {
LABEL_23:
      if ((v20 & 0x20) == 0)
        goto LABEL_24;
      goto LABEL_30;
    }
LABEL_29:
    v24 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 20) |= 0x10u;
    *((_DWORD *)this + 16) = v24;
    v20 = *((_DWORD *)a2 + 20);
    if ((v20 & 0x20) == 0)
    {
LABEL_24:
      if ((v20 & 0x40) == 0)
        return;
      goto LABEL_25;
    }
LABEL_30:
    v25 = *((_DWORD *)a2 + 17);
    *((_DWORD *)this + 20) |= 0x20u;
    *((_DWORD *)this + 17) = v25;
    if ((*((_DWORD *)a2 + 20) & 0x40) == 0)
      return;
LABEL_25:
    v21 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 20) |= 0x40u;
    *((_DWORD *)this + 18) = v21;
  }
}

void sub_218A32008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::~LocationAccessory_PASCDRavenUsageStats(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
  *(_QWORD *)this = &off_24D9908B0;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t *)this + 4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationAccessory_PASCDRavenUsageStats::~LocationAccessory_PASCDRavenUsageStats(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 76) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::New(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D9908B0;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 72) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  if ((*(_WORD *)(this + 80) & 0x3FC) != 0)
  {
    *(_QWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 64) = 0;
    *(_DWORD *)(this + 72) = 0;
  }
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  if (*(int *)(v1 + 40) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 40));
  }
  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 80) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned __int8 *v9;
  uint64_t TagFallback;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  awd::metrics::LocationAccessory_PerfRangeHistogram *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  unsigned __int8 *v24;
  int v25;
  unint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  awd::metrics::LocationAccessory_PerfRangeHistogram *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  _BYTE *v44;
  uint64_t result;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  unsigned __int8 *v49;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v50;
  unsigned int *v51;
  unsigned int v52;
  unsigned int v53;

  v4 = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 8);
  v50 = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 32);
  v51 = (unsigned int *)((char *)this + 56);
  v5 = (unsigned int *)((char *)this + 60);
  v6 = (unsigned int *)((char *)this + 64);
  v7 = (unsigned int *)((char *)this + 68);
  v8 = (unsigned int *)((char *)this + 72);
LABEL_2:
  while (1)
  {
    v9 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || (char)*v9 < 0)
      break;
    TagFallback = *v9;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((_QWORD *)a2 + 1) = v9 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_38;
        while (1)
        {
          v12 = *((_DWORD *)this + 5);
          v13 = *((int *)this + 4);
          if ((int)v13 >= v12)
          {
            if (v12 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v12 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v12 + 1;
            v15 = (awd::metrics::LocationAccessory_PerfRangeHistogram *)operator new();
            *((_QWORD *)v15 + 1) = 0;
            *((_QWORD *)v15 + 2) = 0;
            *(_QWORD *)v15 = &off_24D990400;
            v16 = *((_QWORD *)this + 1);
            v17 = *((int *)this + 4);
            *((_DWORD *)this + 4) = v17 + 1;
            *(_QWORD *)(v16 + 8 * v17) = v15;
          }
          else
          {
            v14 = *((_QWORD *)this + 1);
            *((_DWORD *)this + 4) = v13 + 1;
            v15 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v14 + 8 * v13);
          }
          v52 = 0;
          v18 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0;
          }
          else
          {
            v52 = *v18;
            *((_QWORD *)a2 + 1) = v18 + 1;
          }
          v19 = *((_DWORD *)a2 + 14);
          v20 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v19 + 1;
          if (v19 >= v20)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(v15, a2)
            || !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v21 = *((_DWORD *)a2 + 14);
          v22 = __OFSUB__(v21, 1);
          v23 = v21 - 1;
          if (v23 < 0 == v22)
            *((_DWORD *)a2 + 14) = v23;
          v24 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v24 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v25 = *v24;
          if (v25 != 10)
            break;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        if (v25 != 18)
          continue;
        goto LABEL_43;
      case 2u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_38;
        break;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_62;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v28 = (char *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_70;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v29 = (char *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_78;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v30 = (char *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_86;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v31 = (char *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_94;
      default:
        v11 = TagFallback & 7;
LABEL_38:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    while (1)
    {
      v32 = *((_DWORD *)this + 11);
      v33 = *((int *)this + 10);
      if ((int)v33 >= v32)
      {
        if (v32 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v50);
          v32 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v32 + 1;
        v35 = (awd::metrics::LocationAccessory_PerfRangeHistogram *)operator new();
        *((_QWORD *)v35 + 1) = 0;
        *((_QWORD *)v35 + 2) = 0;
        *(_QWORD *)v35 = &off_24D990400;
        v36 = *((_QWORD *)this + 4);
        v37 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v37 + 1;
        *(_QWORD *)(v36 + 8 * v37) = v35;
      }
      else
      {
        v34 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v33 + 1;
        v35 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v34 + 8 * v33);
      }
      v53 = 0;
      v38 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))
          return 0;
      }
      else
      {
        v53 = *v38;
        *((_QWORD *)a2 + 1) = v38 + 1;
      }
      v39 = *((_DWORD *)a2 + 14);
      v40 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v39 + 1;
      if (v39 >= v40)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(v35, a2)
        || !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v41 = *((_DWORD *)a2 + 14);
      v22 = __OFSUB__(v41, 1);
      v42 = v41 - 1;
      if (v42 < 0 == v22)
        *((_DWORD *)a2 + 14) = v42;
      v24 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      v26 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v24 >= v26)
        goto LABEL_2;
      v43 = *v24;
      if (v43 != 18)
        break;
LABEL_43:
      *((_QWORD *)a2 + 1) = v24 + 1;
    }
    if (v43 != 24)
      continue;
    v27 = (char *)(v24 + 1);
    *((_QWORD *)a2 + 1) = v27;
LABEL_62:
    if ((unint64_t)v27 >= v26 || *v27 < 0)
    {
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51);
      if (!(_DWORD)result)
        return result;
      v44 = (_BYTE *)*((_QWORD *)a2 + 1);
      v26 = *((_QWORD *)a2 + 2);
    }
    else
    {
      *v51 = *v27;
      v44 = v27 + 1;
      *((_QWORD *)a2 + 1) = v44;
    }
    *((_DWORD *)this + 20) |= 4u;
    if ((unint64_t)v44 < v26 && *v44 == 32)
    {
      v28 = v44 + 1;
      *((_QWORD *)a2 + 1) = v28;
LABEL_70:
      if ((unint64_t)v28 >= v26 || *v28 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
        if (!(_DWORD)result)
          return result;
        v46 = (_BYTE *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v5 = *v28;
        v46 = v28 + 1;
        *((_QWORD *)a2 + 1) = v46;
      }
      *((_DWORD *)this + 20) |= 8u;
      if ((unint64_t)v46 < v26 && *v46 == 40)
      {
        v29 = v46 + 1;
        *((_QWORD *)a2 + 1) = v29;
LABEL_78:
        if ((unint64_t)v29 >= v26 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v47 = (_BYTE *)*((_QWORD *)a2 + 1);
          v26 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v29;
          v47 = v29 + 1;
          *((_QWORD *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 20) |= 0x10u;
        if ((unint64_t)v47 < v26 && *v47 == 48)
        {
          v30 = v47 + 1;
          *((_QWORD *)a2 + 1) = v30;
LABEL_86:
          if ((unint64_t)v30 >= v26 || *v30 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
            if (!(_DWORD)result)
              return result;
            v48 = (_BYTE *)*((_QWORD *)a2 + 1);
            v26 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *v7 = *v30;
            v48 = v30 + 1;
            *((_QWORD *)a2 + 1) = v48;
          }
          *((_DWORD *)this + 20) |= 0x20u;
          if ((unint64_t)v48 < v26 && *v48 == 56)
          {
            v31 = v48 + 1;
            *((_QWORD *)a2 + 1) = v31;
LABEL_94:
            if ((unint64_t)v31 >= v26 || *v31 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
              if (!(_DWORD)result)
                return result;
              v49 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v26 = *((_QWORD *)a2 + 2);
            }
            else
            {
              *v8 = *v31;
              v49 = (unsigned __int8 *)(v31 + 1);
              *((_QWORD *)a2 + 1) = v49;
            }
            *((_DWORD *)this + 20) |= 0x40u;
            if (v49 == (unsigned __int8 *)v26 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
        }
      }
    }
  }
  TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 4) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
    v8 = *(_DWORD *)(v5 + 80);
    if ((v8 & 8) == 0)
    {
LABEL_9:
      if ((v8 & 0x10) == 0)
        goto LABEL_10;
      goto LABEL_15;
    }
  }
  else if ((v8 & 8) == 0)
  {
    goto LABEL_9;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x10) == 0)
  {
LABEL_10:
    if ((v8 & 0x20) == 0)
      goto LABEL_11;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x20) == 0)
  {
LABEL_11:
    if ((v8 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 80) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::ByteSize(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;

  v2 = *((_DWORD *)this + 20);
  if ((v2 & 0x3FC) == 0)
  {
    v3 = 0;
    goto LABEL_30;
  }
  if ((v2 & 4) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 20);
      if ((v2 & 8) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 8) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((v2 & 8) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 20);
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if ((v2 & 0x10) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *((_DWORD *)this + 20);
    }
    else
    {
      v8 = 2;
    }
    v3 += v8;
    if ((v2 & 0x20) == 0)
    {
LABEL_16:
      if ((v2 & 0x40) == 0)
        goto LABEL_30;
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_16;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    v2 = *((_DWORD *)this + 20);
  }
  else
  {
    v10 = 2;
  }
  v3 += v10;
  if ((v2 & 0x40) != 0)
  {
LABEL_26:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if (v11 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    else
      v12 = 2;
    v3 += v12;
  }
LABEL_30:
  v13 = *((_DWORD *)this + 4);
  v14 = v13 + v3;
  if (v13 >= 1)
  {
    v15 = 0;
    do
    {
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((_QWORD *)this + 1) + 8 * v15));
      v17 = (int)v16;
      if (v16 >= 0x80)
        v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      else
        v18 = 1;
      v14 += v17 + v18;
      ++v15;
    }
    while (v15 < *((int *)this + 4));
  }
  v19 = *((_DWORD *)this + 10);
  v20 = (v19 + v14);
  if (v19 >= 1)
  {
    v21 = 0;
    do
    {
      v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((_QWORD *)this + 4) + 8 * v21));
      v23 = (int)v22;
      if (v22 >= 0x80)
        v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      else
        v24 = 1;
      v20 = (v23 + v20 + v24);
      ++v21;
    }
    while (v21 < *((int *)this + 10));
  }
  *((_DWORD *)this + 19) = v20;
  return v20;
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::CopyFrom(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, const awd::metrics::LocationAccessory_PASCDRavenUsageStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PASCDRavenUsageStats *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::IsInitialized(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PASCDRavenUsageStats *awd::metrics::LocationAccessory_PASCDRavenUsageStats::Swap(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, awd::metrics::LocationAccessory_PASCDRavenUsageStats *a2)
{
  awd::metrics::LocationAccessory_PASCDRavenUsageStats *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  if (a2 != this)
  {
    v3 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_DWORD *)v3 + 14);
    *((_DWORD *)v3 + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
    v5 = *((_DWORD *)v3 + 15);
    *((_DWORD *)v3 + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v5;
    v6 = *((_DWORD *)v3 + 16);
    *((_DWORD *)v3 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v6;
    v7 = *((_DWORD *)v3 + 17);
    *((_DWORD *)v3 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v7;
    v8 = *((_DWORD *)v3 + 18);
    *((_DWORD *)v3 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v8;
    v9 = *((_DWORD *)v3 + 20);
    *((_DWORD *)v3 + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v9;
    v10 = *((_DWORD *)v3 + 19);
    *((_DWORD *)v3 + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v10;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_PASCDRavenUsageStats::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PASCDRavenUsageStats");
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_PASCDTransmissionHistogram *awd::metrics::LocationAccessory_PASCDTransmissionHistogram::LocationAccessory_PASCDTransmissionHistogram(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, const awd::metrics::LocationAccessory_PASCDTransmissionHistogram *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D990928;
  awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom(this, a2);
  return this;
}

void sub_218A32C38(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, const awd::metrics::LocationAccessory_PASCDTransmissionHistogram *a2)
{
  int v4;
  unsigned int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 5)
        awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom();
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_218A32D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::~LocationAccessory_PASCDTransmissionHistogram(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this)
{
  *(_QWORD *)this = &off_24D990928;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990928;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990928;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_PASCDTransmissionHistogram::New(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_24D990928;
  return result;
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 4)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::ByteSize(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_17;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_17;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::CopyFrom(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, const awd::metrics::LocationAccessory_PASCDTransmissionHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::IsInitialized(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PASCDTransmissionHistogram *awd::metrics::LocationAccessory_PASCDTransmissionHistogram::Swap(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, awd::metrics::LocationAccessory_PASCDTransmissionHistogram *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_PASCDTransmissionHistogram::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PASCDTransmissionHistogram");
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::LocationAccessory_PASCDSampleSizeHistogram(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, const awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D9909A0;
  awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_218A331D4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergeFrom(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, const awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *a2)
{
  int v4;
  int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_218A33290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::~LocationAccessory_PASCDSampleSizeHistogram(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this)
{
  *(_QWORD *)this = &off_24D9909A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9909A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9909A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::New(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_24D9909A0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;

  v4 = (unsigned int *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v11 = (char *)*((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!(_DWORD)result)
          return result;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v4 = *v11;
        v12 = v11 + 1;
        *((_QWORD *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 5) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        v10 = v12 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v10;
          v13 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::ByteSize(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_14;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::CopyFrom(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, const awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::IsInitialized(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::Swap(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PASCDSampleSizeHistogram");
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

awd::metrics::LocationAccessory_PASCDStats *awd::metrics::LocationAccessory_PASCDStats::LocationAccessory_PASCDStats(awd::metrics::LocationAccessory_PASCDStats *this, const awd::metrics::LocationAccessory_PASCDStats *a2)
{
  *(_QWORD *)this = &off_24D990A18;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  awd::metrics::LocationAccessory_PASCDStats::MergeFrom(this, a2);
  return this;
}

void sub_218A33784(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;

  v4 = v3;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDSampleSizeHistogram>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDTransmissionHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDStats::MergeFrom(awd::metrics::LocationAccessory_PASCDStats *this, const awd::metrics::LocationAccessory_PASCDStats *a2)
{
  uint64_t v4;
  const awd::metrics::LocationAccessory_PASCDTransmissionHistogram *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  awd::metrics::LocationAccessory_PASCDTransmissionHistogram *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  const awd::metrics::LocationAccessory_PASCDRavenUsageStats *v22;
  int v23;
  _BYTE v24[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationAccessory_PASCDTransmissionHistogram **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = (awd::metrics::LocationAccessory_PASCDTransmissionHistogram *)operator new();
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *(_QWORD *)v9 = &off_24D990928;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(awd::metrics::LocationAccessory_PASCDTransmissionHistogram **)(v8 + 8 * v7);
      }
      awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const awd::metrics::LocationAccessory_PASCDSampleSizeHistogram **)(*((_QWORD *)a2 + 4) + 8 * v12);
      v14 = *((_DWORD *)this + 11);
      v15 = *((int *)this + 10);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 32));
          v14 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v14 + 1;
        v17 = (awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *)operator new();
        *((_QWORD *)v17 + 1) = 0;
        *((_QWORD *)v17 + 2) = 0;
        *(_QWORD *)v17 = &off_24D9909A0;
        v18 = *((_QWORD *)this + 4);
        v19 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v15 + 1;
        v17 = *(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram **)(v16 + 8 * v15);
      }
      awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergeFrom(v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 10));
  }
  v20 = *((_DWORD *)a2 + 18);
  if ((v20 & 0x3FC) != 0)
  {
    if ((v20 & 4) != 0)
    {
      *((_DWORD *)this + 18) |= 4u;
      v21 = *((_QWORD *)this + 7);
      if (!v21)
      {
        v21 = operator new();
        *(_QWORD *)(v21 + 8) = 0;
        *(_QWORD *)(v21 + 16) = 0;
        *(_QWORD *)v21 = &off_24D9908B0;
        *(_DWORD *)(v21 + 24) = 0;
        *(_QWORD *)(v21 + 32) = 0;
        *(_QWORD *)(v21 + 40) = 0;
        *(_DWORD *)(v21 + 48) = 0;
        *(_QWORD *)(v21 + 64) = 0;
        *(_QWORD *)(v21 + 72) = 0;
        *(_QWORD *)(v21 + 56) = 0;
        *(_DWORD *)(v21 + 80) = 0;
        *((_QWORD *)this + 7) = v21;
      }
      v22 = (const awd::metrics::LocationAccessory_PASCDRavenUsageStats *)*((_QWORD *)a2 + 7);
      if (!v22)
        v22 = *(const awd::metrics::LocationAccessory_PASCDRavenUsageStats **)(awd::metrics::LocationAccessory_PASCDStats::default_instance_
                                                                             + 56);
      awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergeFrom((awd::metrics::LocationAccessory_PASCDRavenUsageStats *)v21, v22);
      v20 = *((_DWORD *)a2 + 18);
    }
    if ((v20 & 8) != 0)
    {
      v23 = *((_DWORD *)a2 + 16);
      *((_DWORD *)this + 18) |= 8u;
      *((_DWORD *)this + 16) = v23;
    }
  }
}

void sub_218A33A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDStats::~LocationAccessory_PASCDStats(awd::metrics::LocationAccessory_PASCDStats *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D990A18;
  if ((awd::metrics::LocationAccessory_PASCDStats *)awd::metrics::LocationAccessory_PASCDStats::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 7);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDSampleSizeHistogram>::TypeHandler>((uint64_t *)this + 4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDTransmissionHistogram>::TypeHandler>((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationAccessory_PASCDStats::~LocationAccessory_PASCDStats(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationAccessory_PASCDStats::SharedDtor(_QWORD *this)
{
  if ((_QWORD *)awd::metrics::LocationAccessory_PASCDStats::default_instance_ != this)
  {
    this = (_QWORD *)this[7];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::default_instance(awd::metrics::LocationAccessory_PASCDStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_PASCDStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PASCDStats::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::New(awd::metrics::LocationAccessory_PASCDStats *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D990A18;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = this;
  v2 = *(_DWORD *)(this + 72);
  if ((v2 & 0x3FC) != 0)
  {
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 56);
      if (this)
        this = awd::metrics::LocationAccessory_PASCDRavenUsageStats::Clear(this);
    }
    *(_DWORD *)(v1 + 64) = 0;
  }
  if (*(int *)(v1 + 16) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  if (*(int *)(v1 + 40) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 40));
  }
  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PASCDStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  unsigned int *v6;
  unsigned __int8 *v7;
  uint64_t TagFallback;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  awd::metrics::LocationAccessory_PASCDTransmissionHistogram *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  unsigned __int8 *v22;
  int v23;
  unint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  int v40;
  int v41;
  int v42;
  int v43;
  _BYTE *v44;
  unsigned __int8 *v45;
  uint64_t result;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;

  v4 = (awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 8);
  v5 = (awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 32);
  v6 = (unsigned int *)((char *)this + 64);
LABEL_2:
  while (1)
  {
    v7 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || (char)*v7 < 0)
      break;
    TagFallback = *v7;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((_QWORD *)a2 + 1) = v7 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_32;
        while (1)
        {
          v10 = *((_DWORD *)this + 5);
          v11 = *((int *)this + 4);
          if ((int)v11 >= v10)
          {
            if (v10 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v10 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v10 + 1;
            v13 = (awd::metrics::LocationAccessory_PASCDTransmissionHistogram *)operator new();
            *((_QWORD *)v13 + 1) = 0;
            *((_QWORD *)v13 + 2) = 0;
            *(_QWORD *)v13 = &off_24D990928;
            v14 = *((_QWORD *)this + 1);
            v15 = *((int *)this + 4);
            *((_DWORD *)this + 4) = v15 + 1;
            *(_QWORD *)(v14 + 8 * v15) = v13;
          }
          else
          {
            v12 = *((_QWORD *)this + 1);
            *((_DWORD *)this + 4) = v11 + 1;
            v13 = *(awd::metrics::LocationAccessory_PASCDTransmissionHistogram **)(v12 + 8 * v11);
          }
          v47 = 0;
          v16 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v47))return 0;
          }
          else
          {
            v47 = *v16;
            *((_QWORD *)a2 + 1) = v16 + 1;
          }
          v17 = *((_DWORD *)a2 + 14);
          v18 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v17 + 1;
          if (v17 >= v18)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergePartialFromCodedStream(v13, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v19 = *((_DWORD *)a2 + 14);
          v20 = __OFSUB__(v19, 1);
          v21 = v19 - 1;
          if (v21 < 0 == v20)
            *((_DWORD *)a2 + 14) = v21;
          v22 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v22 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v23 = *v22;
          if (v23 != 10)
            break;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        if (v23 != 18)
          continue;
        goto LABEL_37;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_32;
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_56;
        goto LABEL_32;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v24 = *((_QWORD *)a2 + 2);
        goto LABEL_70;
      default:
        v9 = TagFallback & 7;
LABEL_32:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    while (1)
    {
      v26 = *((_DWORD *)this + 11);
      v27 = *((int *)this + 10);
      if ((int)v27 >= v26)
      {
        if (v26 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
          v26 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v26 + 1;
        v29 = (awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *)operator new();
        *((_QWORD *)v29 + 1) = 0;
        *((_QWORD *)v29 + 2) = 0;
        *(_QWORD *)v29 = &off_24D9909A0;
        v30 = *((_QWORD *)this + 4);
        v31 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v31 + 1;
        *(_QWORD *)(v30 + 8 * v31) = v29;
      }
      else
      {
        v28 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v27 + 1;
        v29 = *(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram **)(v28 + 8 * v27);
      }
      v48 = 0;
      v32 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))
          return 0;
      }
      else
      {
        v48 = *v32;
        *((_QWORD *)a2 + 1) = v32 + 1;
      }
      v33 = *((_DWORD *)a2 + 14);
      v34 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v33 + 1;
      if (v33 >= v34)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergePartialFromCodedStream(v29, a2)
        || !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v35 = *((_DWORD *)a2 + 14);
      v20 = __OFSUB__(v35, 1);
      v36 = v35 - 1;
      if (v36 < 0 == v20)
        *((_DWORD *)a2 + 14) = v36;
      v22 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v22 >= *((_QWORD *)a2 + 2))
        goto LABEL_2;
      v37 = *v22;
      if (v37 != 18)
        break;
LABEL_37:
      *((_QWORD *)a2 + 1) = v22 + 1;
    }
    if (v37 != 26)
      continue;
    *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_56:
    *((_DWORD *)this + 18) |= 4u;
    v38 = *((_QWORD *)this + 7);
    if (!v38)
    {
      v38 = operator new();
      *(_QWORD *)(v38 + 8) = 0;
      *(_QWORD *)(v38 + 16) = 0;
      *(_QWORD *)v38 = &off_24D9908B0;
      *(_DWORD *)(v38 + 24) = 0;
      *(_QWORD *)(v38 + 32) = 0;
      *(_QWORD *)(v38 + 40) = 0;
      *(_DWORD *)(v38 + 48) = 0;
      *(_QWORD *)(v38 + 64) = 0;
      *(_QWORD *)(v38 + 72) = 0;
      *(_QWORD *)(v38 + 56) = 0;
      *(_DWORD *)(v38 + 80) = 0;
      *((_QWORD *)this + 7) = v38;
    }
    v49 = 0;
    v39 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49))
        return 0;
    }
    else
    {
      v49 = *v39;
      *((_QWORD *)a2 + 1) = v39 + 1;
    }
    v40 = *((_DWORD *)a2 + 14);
    v41 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v40 + 1;
    if (v40 >= v41)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_PASCDRavenUsageStats *)v38, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v42 = *((_DWORD *)a2 + 14);
    v20 = __OFSUB__(v42, 1);
    v43 = v42 - 1;
    if (v43 < 0 == v20)
      *((_DWORD *)a2 + 14) = v43;
    v44 = (_BYTE *)*((_QWORD *)a2 + 1);
    v24 = *((_QWORD *)a2 + 2);
    if ((unint64_t)v44 < v24 && *v44 == 32)
    {
      v25 = v44 + 1;
      *((_QWORD *)a2 + 1) = v25;
LABEL_70:
      if ((unint64_t)v25 >= v24 || *v25 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
        if (!(_DWORD)result)
          return result;
        v45 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v24 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v6 = *v25;
        v45 = (unsigned __int8 *)(v25 + 1);
        *((_QWORD *)a2 + 1) = v45;
      }
      *((_DWORD *)this + 18) |= 8u;
      if (v45 == (unsigned __int8 *)v24 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
  }
  TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 4) == 0)
  {
    if ((v8 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  }
  v9 = *(_QWORD *)(v5 + 56);
  if (!v9)
    v9 = *(_QWORD *)(awd::metrics::LocationAccessory_PASCDStats::default_instance_ + 56);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::ByteSize(awd::metrics::LocationAccessory_PASCDStats *this)
{
  int v2;
  int v3;
  awd::metrics::LocationAccessory_PASCDRavenUsageStats *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;

  v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x3FC) == 0)
  {
    v3 = 0;
    goto LABEL_16;
  }
  if ((v2 & 4) == 0)
  {
    v3 = 0;
    if ((v2 & 8) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v4 = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)*((_QWORD *)this + 7);
  if (!v4)
    v4 = *(awd::metrics::LocationAccessory_PASCDRavenUsageStats **)(awd::metrics::LocationAccessory_PASCDStats::default_instance_
                                                                  + 56);
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PASCDRavenUsageStats::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v7 = 1;
  v3 = v6 + v7 + 1;
  if ((*((_DWORD *)this + 18) & 8) != 0)
  {
LABEL_12:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    else
      v9 = 2;
    v3 += v9;
  }
LABEL_16:
  v10 = *((_DWORD *)this + 4);
  v11 = v10 + v3;
  if (v10 >= 1)
  {
    v12 = 0;
    do
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PASCDTransmissionHistogram::ByteSize(*(awd::metrics::LocationAccessory_PASCDTransmissionHistogram **)(*((_QWORD *)this + 1) + 8 * v12));
      v14 = (int)v13;
      if (v13 >= 0x80)
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      else
        v15 = 1;
      v11 += v14 + v15;
      ++v12;
    }
    while (v12 < *((int *)this + 4));
  }
  v16 = *((_DWORD *)this + 10);
  v17 = (v16 + v11);
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram **)(*((_QWORD *)this + 4) + 8 * v18));
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *((int *)this + 10));
  }
  *((_DWORD *)this + 17) = v17;
  return v17;
}

void awd::metrics::LocationAccessory_PASCDStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PASCDStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory_PASCDStats::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PASCDStats::CopyFrom(awd::metrics::LocationAccessory_PASCDStats *this, const awd::metrics::LocationAccessory_PASCDStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PASCDStats *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory_PASCDStats::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::IsInitialized(awd::metrics::LocationAccessory_PASCDStats *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PASCDStats *awd::metrics::LocationAccessory_PASCDStats::Swap(awd::metrics::LocationAccessory_PASCDStats *this, awd::metrics::LocationAccessory_PASCDStats *a2)
{
  awd::metrics::LocationAccessory_PASCDStats *v3;
  uint64_t v4;

  if (a2 != this)
  {
    v3 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationAccessory_PASCDStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_QWORD *)v3 + 7);
    *((_QWORD *)v3 + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 16);
    *((_DWORD *)v3 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 18);
    *((_DWORD *)v3 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 17);
    *((_DWORD *)v3 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v4;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory_PASCDStats::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PASCDStats");
}

_QWORD *awd::metrics::LocationAccessory_Coordinate::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

awd::metrics::LocationAccessory_Coordinate *awd::metrics::LocationAccessory_Coordinate::LocationAccessory_Coordinate(awd::metrics::LocationAccessory_Coordinate *this, const awd::metrics::LocationAccessory_Coordinate *a2)
{
  *(_QWORD *)this = &off_24D990A90;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  awd::metrics::LocationAccessory_Coordinate::MergeFrom(this, a2);
  return this;
}

void sub_218A34558(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double awd::metrics::LocationAccessory_Coordinate::MergeFrom(awd::metrics::LocationAccessory_Coordinate *this, const awd::metrics::LocationAccessory_Coordinate *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_218A34614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_Coordinate::~LocationAccessory_Coordinate(awd::metrics::LocationAccessory_Coordinate *this)
{
  *(_QWORD *)this = &off_24D990A90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990A90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990A90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationAccessory_Coordinate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::default_instance(awd::metrics::LocationAccessory_Coordinate *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory_Coordinate::default_instance_;
  if (!awd::metrics::LocationAccessory_Coordinate::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_Coordinate::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_Coordinate::New(awd::metrics::LocationAccessory_Coordinate *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_24D990A90;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::MergePartialFromCodedStream(awd::metrics::LocationAccessory_Coordinate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  uint64_t result;
  unint64_t v9;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_21;
        v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && *v7 == 17)
        {
          *((_QWORD *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v6 = TagFallback & 7;
        goto LABEL_21;
      }
      v6 = TagFallback & 7;
      if (v6 == 1)
        break;
LABEL_21:
      if (v6 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_15:
    v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
      return 0;
    *((_QWORD *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  return this;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::ByteSize(awd::metrics::LocationAccessory_Coordinate *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 28);
  if (*((_BYTE *)this + 28))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double awd::metrics::LocationAccessory_Coordinate::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_Coordinate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::LocationAccessory_Coordinate::MergeFrom(this, lpsrc);
}

double awd::metrics::LocationAccessory_Coordinate::CopyFrom(awd::metrics::LocationAccessory_Coordinate *this, const awd::metrics::LocationAccessory_Coordinate *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_Coordinate *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::LocationAccessory_Coordinate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::IsInitialized(awd::metrics::LocationAccessory_Coordinate *this)
{
  return 1;
}

double awd::metrics::LocationAccessory_Coordinate::Swap(awd::metrics::LocationAccessory_Coordinate *this, awd::metrics::LocationAccessory_Coordinate *a2)
{
  uint64_t v2;
  double result;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

_QWORD *awd::metrics::LocationAccessory_Coordinate::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.Coordinate");
}

double awd::metrics::LocationAccessory::LocationAccessory(awd::metrics::LocationAccessory *this)
{
  uint64_t v1;
  double result;

  *((_QWORD *)this + 22) = 0;
  *((_QWORD *)this + 23) = 0;
  *((_DWORD *)this + 48) = 0;
  *((_QWORD *)this + 26) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 31) = 0;
  *((_DWORD *)this + 64) = 0;
  *((_QWORD *)this + 39) = 0;
  *((_DWORD *)this + 80) = 0;
  *((_DWORD *)this + 86) = 0;
  *(_QWORD *)this = &off_24D990B08;
  *((_QWORD *)this + 1) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = v1;
  *((_QWORD *)this + 4) = v1;
  *((_QWORD *)this + 5) = v1;
  *((_QWORD *)this + 6) = v1;
  *((_DWORD *)this + 14) = 0;
  *((_BYTE *)this + 60) = 0;
  result = 0.0;
  *((_QWORD *)this + 25) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *((_QWORD *)this + 37) = 0;
  *((_QWORD *)this + 38) = 0;
  *((_QWORD *)this + 41) = v1;
  *((_QWORD *)this + 42) = v1;
  *(_QWORD *)((char *)this + 348) = 0;
  return result;
}

double awd::metrics::LocationAccessory::SharedCtor(awd::metrics::LocationAccessory *this)
{
  uint64_t v1;
  double result;

  *((_DWORD *)this + 86) = 0;
  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_QWORD *)this + 3) = v1;
  *((_QWORD *)this + 4) = v1;
  *((_QWORD *)this + 5) = v1;
  *((_QWORD *)this + 6) = v1;
  *((_DWORD *)this + 14) = 0;
  *((_BYTE *)this + 60) = 0;
  result = 0.0;
  *((_QWORD *)this + 25) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_QWORD *)this + 37) = 0;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *((_QWORD *)this + 41) = v1;
  *((_QWORD *)this + 42) = v1;
  *(_QWORD *)((char *)this + 348) = 0;
  return result;
}

awd::metrics::LocationAccessory *awd::metrics::LocationAccessory::LocationAccessory(awd::metrics::LocationAccessory *this, const awd::metrics::LocationAccessory *a2)
{
  uint64_t v3;

  *((_QWORD *)this + 22) = 0;
  *((_QWORD *)this + 23) = 0;
  *((_QWORD *)this + 26) = 0;
  *((_DWORD *)this + 48) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 31) = 0;
  *((_DWORD *)this + 64) = 0;
  *((_QWORD *)this + 39) = 0;
  *((_DWORD *)this + 80) = 0;
  *((_DWORD *)this + 86) = 0;
  *(_QWORD *)this = &off_24D990B08;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = v3;
  *((_QWORD *)this + 4) = v3;
  *((_QWORD *)this + 5) = v3;
  *((_QWORD *)this + 6) = v3;
  *((_DWORD *)this + 14) = 0;
  *((_BYTE *)this + 60) = 0;
  *((_QWORD *)this + 25) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *((_QWORD *)this + 37) = 0;
  *((_QWORD *)this + 38) = 0;
  *((_QWORD *)this + 41) = v3;
  *((_QWORD *)this + 42) = v3;
  *(_QWORD *)((char *)this + 348) = 0;
  awd::metrics::LocationAccessory::MergeFrom(this, a2);
  return this;
}

void sub_218A34B88(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_MessageHistogram>::TypeHandler>(v5);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NavDynamicsHistogram>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LocationAppRunningTime>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory::MergeFrom(awd::metrics::LocationAccessory *this, const awd::metrics::LocationAccessory *a2)
{
  std::string *v4;
  uint64_t v5;
  const awd::metrics::LocationAccessory_LocationAppRunningTime *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const awd::metrics::LocationAccessory_NavDynamicsHistogram *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  awd::metrics::LocationAccessory_NavDynamicsHistogram *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const awd::metrics::LocationAccessory_MessageHistogram *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  char v38;
  uint64_t v39;
  const std::string *v40;
  std::string *v41;
  const std::string *v42;
  std::string *v43;
  const std::string *v44;
  std::string *v45;
  const std::string *v46;
  std::string *v47;
  const std::string *v48;
  std::string *v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  const awd::metrics::LocationAccessory_PerformanceStats *v57;
  uint64_t v58;
  const awd::metrics::LocationAccessory_PerformanceStats *v59;
  uint64_t v60;
  const awd::metrics::LocationAccessory_PerformanceStats *v61;
  int v62;
  int v63;
  int v64;
  const std::string *v65;
  std::string *v66;
  const std::string *v67;
  std::string *v68;
  uint64_t v69;
  const awd::metrics::LocationAccessory_PerformanceStats *v70;
  uint64_t v71;
  const awd::metrics::LocationAccessory_SpeedPerformanceStats *v72;
  uint64_t v73;
  const awd::metrics::LocationAccessory_MessageStats *v74;
  uint64_t v75;
  const awd::metrics::LocationAccessory_MessageStats *v76;
  uint64_t v77;
  const awd::metrics::LocationAccessory_MessageStats *v78;
  uint64_t v79;
  const awd::metrics::LocationAccessory_PASCDStats *v80;
  awd::metrics::LocationAccessory_Coordinate *v81;
  const awd::metrics::LocationAccessory_Coordinate *v82;
  int v83;
  int v84;
  uint64_t v85;
  const awd::metrics::LocationAccessory_DeviceChargingStats *v86;
  uint64_t v87;
  const awd::metrics::LocationAccessory_Statistics *v88;
  uint64_t v89;
  const awd::metrics::LocationAccessory_Statistics *v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  _BYTE v98[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v98);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 176));
  v4 = (std::string *)MEMORY[0x24BEDD958];
  if (*((int *)a2 + 46) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const awd::metrics::LocationAccessory_LocationAppRunningTime **)(*((_QWORD *)a2 + 22) + 8 * v5);
      v7 = *((_DWORD *)this + 47);
      v8 = *((int *)this + 46);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 48))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 176));
          v7 = *((_DWORD *)this + 47);
        }
        *((_DWORD *)this + 47) = v7 + 1;
        v10 = operator new();
        *(_QWORD *)v10 = &off_24D9907C0;
        *(_QWORD *)(v10 + 8) = v4;
        *(_QWORD *)(v10 + 16) = 0;
        *(_DWORD *)(v10 + 24) = 0;
        v11 = *((_QWORD *)this + 22);
        v12 = *((int *)this + 46);
        *((_DWORD *)this + 46) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 22);
        *((_DWORD *)this + 46) = v8 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v8);
      }
      awd::metrics::LocationAccessory_LocationAppRunningTime::MergeFrom((awd::metrics::LocationAccessory_LocationAppRunningTime *)v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 46));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 208));
  if (*((int *)a2 + 54) >= 1)
  {
    v13 = 0;
    do
    {
      v14 = *(const awd::metrics::LocationAccessory_NavDynamicsHistogram **)(*((_QWORD *)a2 + 26) + 8 * v13);
      v15 = *((_DWORD *)this + 55);
      v16 = *((int *)this + 54);
      if ((int)v16 >= v15)
      {
        if (v15 == *((_DWORD *)this + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 208));
          v15 = *((_DWORD *)this + 55);
        }
        *((_DWORD *)this + 55) = v15 + 1;
        v18 = (awd::metrics::LocationAccessory_NavDynamicsHistogram *)operator new();
        *((_QWORD *)v18 + 1) = 0;
        *((_QWORD *)v18 + 2) = 0;
        *(_QWORD *)v18 = &off_24D990838;
        v19 = *((_QWORD *)this + 26);
        v20 = *((int *)this + 54);
        *((_DWORD *)this + 54) = v20 + 1;
        *(_QWORD *)(v19 + 8 * v20) = v18;
      }
      else
      {
        v17 = *((_QWORD *)this + 26);
        *((_DWORD *)this + 54) = v16 + 1;
        v18 = *(awd::metrics::LocationAccessory_NavDynamicsHistogram **)(v17 + 8 * v16);
      }
      awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom(v18, v14);
      ++v13;
    }
    while (v13 < *((int *)a2 + 54));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 240));
  if (*((int *)a2 + 62) >= 1)
  {
    v21 = 0;
    do
    {
      v22 = *(const awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram **)(*((_QWORD *)a2 + 30) + 8 * v21);
      v23 = *((_DWORD *)this + 63);
      v24 = *((int *)this + 62);
      if ((int)v24 >= v23)
      {
        if (v23 == *((_DWORD *)this + 64))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 240));
          v23 = *((_DWORD *)this + 63);
        }
        *((_DWORD *)this + 63) = v23 + 1;
        v26 = (awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *)operator new();
        *((_QWORD *)v26 + 1) = 0;
        *((_QWORD *)v26 + 2) = 0;
        *(_QWORD *)v26 = &off_24D990748;
        v27 = *((_QWORD *)this + 30);
        v28 = *((int *)this + 62);
        *((_DWORD *)this + 62) = v28 + 1;
        *(_QWORD *)(v27 + 8 * v28) = v26;
      }
      else
      {
        v25 = *((_QWORD *)this + 30);
        *((_DWORD *)this + 62) = v24 + 1;
        v26 = *(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram **)(v25 + 8 * v24);
      }
      awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom(v26, v22);
      ++v21;
    }
    while (v21 < *((int *)a2 + 62));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 304));
  if (*((int *)a2 + 78) >= 1)
  {
    v29 = 0;
    do
    {
      v30 = *(const awd::metrics::LocationAccessory_MessageHistogram **)(*((_QWORD *)a2 + 38) + 8 * v29);
      v31 = *((int *)this + 78);
      v32 = *((_DWORD *)this + 79);
      if ((int)v31 >= v32)
      {
        if (v32 == *((_DWORD *)this + 80))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 304));
          v32 = *((_DWORD *)this + 79);
        }
        *((_DWORD *)this + 79) = v32 + 1;
        v34 = operator new();
        *(_QWORD *)v34 = &off_24D990658;
        *(_QWORD *)(v34 + 8) = v4;
        *(_QWORD *)(v34 + 16) = 0;
        *(_DWORD *)(v34 + 24) = 0;
        v35 = *((_QWORD *)this + 38);
        v36 = *((int *)this + 78);
        *((_DWORD *)this + 78) = v36 + 1;
        *(_QWORD *)(v35 + 8 * v36) = v34;
      }
      else
      {
        v33 = *((_QWORD *)this + 38);
        *((_DWORD *)this + 78) = v31 + 1;
        v34 = *(_QWORD *)(v33 + 8 * v31);
      }
      awd::metrics::LocationAccessory_MessageHistogram::MergeFrom((awd::metrics::LocationAccessory_MessageHistogram *)v34, v30);
      ++v29;
    }
    while (v29 < *((int *)a2 + 78));
  }
  v37 = *((_DWORD *)a2 + 87);
  if (!(_BYTE)v37)
    goto LABEL_45;
  if ((v37 & 1) != 0)
  {
    v39 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 87) |= 1u;
    *((_QWORD *)this + 1) = v39;
    v37 = *((_DWORD *)a2 + 87);
    if ((v37 & 2) == 0)
    {
LABEL_38:
      if ((v37 & 4) == 0)
        goto LABEL_39;
      goto LABEL_59;
    }
  }
  else if ((v37 & 2) == 0)
  {
    goto LABEL_38;
  }
  v40 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 87) |= 2u;
  v41 = (std::string *)*((_QWORD *)this + 2);
  if (v41 == v4)
  {
    v41 = (std::string *)operator new();
    v41->__r_.__value_.__l.__size_ = 0;
    v41->__r_.__value_.__r.__words[2] = 0;
    v41->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v41;
  }
  std::string::operator=(v41, v40);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 4) == 0)
  {
LABEL_39:
    if ((v37 & 8) == 0)
      goto LABEL_40;
    goto LABEL_62;
  }
LABEL_59:
  v42 = (const std::string *)*((_QWORD *)a2 + 3);
  *((_DWORD *)this + 87) |= 4u;
  v43 = (std::string *)*((_QWORD *)this + 3);
  if (v43 == v4)
  {
    v43 = (std::string *)operator new();
    v43->__r_.__value_.__l.__size_ = 0;
    v43->__r_.__value_.__r.__words[2] = 0;
    v43->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 3) = v43;
  }
  std::string::operator=(v43, v42);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 8) == 0)
  {
LABEL_40:
    if ((v37 & 0x10) == 0)
      goto LABEL_41;
    goto LABEL_65;
  }
LABEL_62:
  v44 = (const std::string *)*((_QWORD *)a2 + 4);
  *((_DWORD *)this + 87) |= 8u;
  v45 = (std::string *)*((_QWORD *)this + 4);
  if (v45 == v4)
  {
    v45 = (std::string *)operator new();
    v45->__r_.__value_.__l.__size_ = 0;
    v45->__r_.__value_.__r.__words[2] = 0;
    v45->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 4) = v45;
  }
  std::string::operator=(v45, v44);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x10) == 0)
  {
LABEL_41:
    if ((v37 & 0x20) == 0)
      goto LABEL_42;
LABEL_68:
    v48 = (const std::string *)*((_QWORD *)a2 + 6);
    *((_DWORD *)this + 87) |= 0x20u;
    v49 = (std::string *)*((_QWORD *)this + 6);
    if (v49 == v4)
    {
      v49 = (std::string *)operator new();
      v49->__r_.__value_.__l.__size_ = 0;
      v49->__r_.__value_.__r.__words[2] = 0;
      v49->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 6) = v49;
    }
    std::string::operator=(v49, v48);
    v37 = *((_DWORD *)a2 + 87);
    if ((v37 & 0x40) == 0)
    {
LABEL_43:
      if ((v37 & 0x80) == 0)
        goto LABEL_45;
      goto LABEL_44;
    }
    goto LABEL_71;
  }
LABEL_65:
  v46 = (const std::string *)*((_QWORD *)a2 + 5);
  *((_DWORD *)this + 87) |= 0x10u;
  v47 = (std::string *)*((_QWORD *)this + 5);
  if (v47 == v4)
  {
    v47 = (std::string *)operator new();
    v47->__r_.__value_.__l.__size_ = 0;
    v47->__r_.__value_.__r.__words[2] = 0;
    v47->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 5) = v47;
  }
  std::string::operator=(v47, v46);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x20) != 0)
    goto LABEL_68;
LABEL_42:
  if ((v37 & 0x40) == 0)
    goto LABEL_43;
LABEL_71:
  v50 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 87) |= 0x40u;
  *((_DWORD *)this + 14) = v50;
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x80) != 0)
  {
LABEL_44:
    v38 = *((_BYTE *)a2 + 60);
    *((_DWORD *)this + 87) |= 0x80u;
    *((_BYTE *)this + 60) = v38;
    v37 = *((_DWORD *)a2 + 87);
  }
LABEL_45:
  if ((v37 & 0xFF00) == 0)
    goto LABEL_93;
  if ((v37 & 0x100) != 0)
  {
    v51 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 87) |= 0x100u;
    *((_DWORD *)this + 16) = v51;
    v37 = *((_DWORD *)a2 + 87);
    if ((v37 & 0x200) == 0)
    {
LABEL_48:
      if ((v37 & 0x400) == 0)
        goto LABEL_49;
      goto LABEL_75;
    }
  }
  else if ((v37 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  v52 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 87) |= 0x200u;
  *((_DWORD *)this + 17) = v52;
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x400) == 0)
  {
LABEL_49:
    if ((v37 & 0x800) == 0)
      goto LABEL_50;
    goto LABEL_76;
  }
LABEL_75:
  v53 = *((_DWORD *)a2 + 18);
  *((_DWORD *)this + 87) |= 0x400u;
  *((_DWORD *)this + 18) = v53;
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x800) == 0)
  {
LABEL_50:
    if ((v37 & 0x1000) == 0)
      goto LABEL_51;
    goto LABEL_77;
  }
LABEL_76:
  v54 = *((_DWORD *)a2 + 19);
  *((_DWORD *)this + 87) |= 0x800u;
  *((_DWORD *)this + 19) = v54;
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x1000) == 0)
  {
LABEL_51:
    if ((v37 & 0x2000) == 0)
      goto LABEL_52;
    goto LABEL_78;
  }
LABEL_77:
  v55 = *((_DWORD *)a2 + 30);
  *((_DWORD *)this + 87) |= 0x1000u;
  *((_DWORD *)this + 30) = v55;
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x2000) == 0)
  {
LABEL_52:
    if ((v37 & 0x4000) == 0)
      goto LABEL_53;
    goto LABEL_83;
  }
LABEL_78:
  *((_DWORD *)this + 87) |= 0x2000u;
  v56 = *((_QWORD *)this + 10);
  if (!v56)
  {
    v56 = operator new();
    *(_QWORD *)(v56 + 8) = 0;
    *(_QWORD *)(v56 + 16) = 0;
    *(_QWORD *)v56 = &off_24D990478;
    *(_DWORD *)(v56 + 24) = 0;
    *(_QWORD *)(v56 + 32) = 0;
    *(_QWORD *)(v56 + 40) = 0;
    *(_DWORD *)(v56 + 48) = 0;
    *(_QWORD *)(v56 + 56) = 0;
    *(_QWORD *)(v56 + 64) = 0;
    *(_DWORD *)(v56 + 72) = 0;
    *(_QWORD *)(v56 + 80) = 0;
    *(_QWORD *)(v56 + 88) = 0;
    *(_DWORD *)(v56 + 96) = 0;
    *((_QWORD *)this + 10) = v56;
  }
  v57 = (const awd::metrics::LocationAccessory_PerformanceStats *)*((_QWORD *)a2 + 10);
  if (!v57)
    v57 = *(const awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                     + 80);
  awd::metrics::LocationAccessory_PerformanceStats::MergeFrom((awd::metrics::LocationAccessory_PerformanceStats *)v56, v57);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x4000) == 0)
  {
LABEL_53:
    if ((v37 & 0x8000) == 0)
      goto LABEL_93;
    goto LABEL_88;
  }
LABEL_83:
  *((_DWORD *)this + 87) |= 0x4000u;
  v58 = *((_QWORD *)this + 11);
  if (!v58)
  {
    v58 = operator new();
    *(_QWORD *)(v58 + 8) = 0;
    *(_QWORD *)(v58 + 16) = 0;
    *(_QWORD *)v58 = &off_24D990478;
    *(_DWORD *)(v58 + 24) = 0;
    *(_QWORD *)(v58 + 32) = 0;
    *(_QWORD *)(v58 + 40) = 0;
    *(_DWORD *)(v58 + 48) = 0;
    *(_QWORD *)(v58 + 56) = 0;
    *(_QWORD *)(v58 + 64) = 0;
    *(_DWORD *)(v58 + 72) = 0;
    *(_QWORD *)(v58 + 80) = 0;
    *(_QWORD *)(v58 + 88) = 0;
    *(_DWORD *)(v58 + 96) = 0;
    *((_QWORD *)this + 11) = v58;
  }
  v59 = (const awd::metrics::LocationAccessory_PerformanceStats *)*((_QWORD *)a2 + 11);
  if (!v59)
    v59 = *(const awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                     + 88);
  awd::metrics::LocationAccessory_PerformanceStats::MergeFrom((awd::metrics::LocationAccessory_PerformanceStats *)v58, v59);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x8000) != 0)
  {
LABEL_88:
    *((_DWORD *)this + 87) |= 0x8000u;
    v60 = *((_QWORD *)this + 12);
    if (!v60)
    {
      v60 = operator new();
      *(_QWORD *)(v60 + 8) = 0;
      *(_QWORD *)(v60 + 16) = 0;
      *(_QWORD *)v60 = &off_24D990478;
      *(_DWORD *)(v60 + 24) = 0;
      *(_QWORD *)(v60 + 32) = 0;
      *(_QWORD *)(v60 + 40) = 0;
      *(_DWORD *)(v60 + 48) = 0;
      *(_QWORD *)(v60 + 56) = 0;
      *(_QWORD *)(v60 + 64) = 0;
      *(_DWORD *)(v60 + 72) = 0;
      *(_QWORD *)(v60 + 80) = 0;
      *(_QWORD *)(v60 + 88) = 0;
      *(_DWORD *)(v60 + 96) = 0;
      *((_QWORD *)this + 12) = v60;
    }
    v61 = (const awd::metrics::LocationAccessory_PerformanceStats *)*((_QWORD *)a2 + 12);
    if (!v61)
      v61 = *(const awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                       + 96);
    awd::metrics::LocationAccessory_PerformanceStats::MergeFrom((awd::metrics::LocationAccessory_PerformanceStats *)v60, v61);
    v37 = *((_DWORD *)a2 + 87);
  }
LABEL_93:
  if ((v37 & 0xFF0000) == 0)
    goto LABEL_103;
  if ((v37 & 0x10000) != 0)
  {
    *((_DWORD *)this + 87) |= 0x10000u;
    v69 = *((_QWORD *)this + 13);
    if (!v69)
    {
      v69 = operator new();
      *(_QWORD *)(v69 + 8) = 0;
      *(_QWORD *)(v69 + 16) = 0;
      *(_QWORD *)v69 = &off_24D990478;
      *(_DWORD *)(v69 + 24) = 0;
      *(_QWORD *)(v69 + 32) = 0;
      *(_QWORD *)(v69 + 40) = 0;
      *(_DWORD *)(v69 + 48) = 0;
      *(_QWORD *)(v69 + 56) = 0;
      *(_QWORD *)(v69 + 64) = 0;
      *(_DWORD *)(v69 + 72) = 0;
      *(_QWORD *)(v69 + 80) = 0;
      *(_QWORD *)(v69 + 88) = 0;
      *(_DWORD *)(v69 + 96) = 0;
      *((_QWORD *)this + 13) = v69;
    }
    v70 = (const awd::metrics::LocationAccessory_PerformanceStats *)*((_QWORD *)a2 + 13);
    if (!v70)
      v70 = *(const awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                       + 104);
    awd::metrics::LocationAccessory_PerformanceStats::MergeFrom((awd::metrics::LocationAccessory_PerformanceStats *)v69, v70);
    v37 = *((_DWORD *)a2 + 87);
    if ((v37 & 0x20000) == 0)
    {
LABEL_96:
      if ((v37 & 0x40000) == 0)
        goto LABEL_97;
      goto LABEL_139;
    }
  }
  else if ((v37 & 0x20000) == 0)
  {
    goto LABEL_96;
  }
  *((_DWORD *)this + 87) |= 0x20000u;
  v71 = *((_QWORD *)this + 14);
  if (!v71)
  {
    v71 = operator new();
    *(_QWORD *)(v71 + 8) = 0;
    *(_QWORD *)(v71 + 16) = 0;
    *(_QWORD *)v71 = &off_24D990568;
    *(_DWORD *)(v71 + 24) = 0;
    *(_QWORD *)(v71 + 32) = 0;
    *(_QWORD *)(v71 + 40) = 0;
    *(_DWORD *)(v71 + 48) = 0;
    *(_QWORD *)(v71 + 56) = 0;
    *(_QWORD *)(v71 + 64) = 0;
    *(_DWORD *)(v71 + 72) = 0;
    *((_QWORD *)this + 14) = v71;
  }
  v72 = (const awd::metrics::LocationAccessory_SpeedPerformanceStats *)*((_QWORD *)a2 + 14);
  if (!v72)
    v72 = *(const awd::metrics::LocationAccessory_SpeedPerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                          + 112);
  awd::metrics::LocationAccessory_SpeedPerformanceStats::MergeFrom((awd::metrics::LocationAccessory_SpeedPerformanceStats *)v71, v72);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x40000) == 0)
  {
LABEL_97:
    if ((v37 & 0x80000) == 0)
      goto LABEL_98;
    goto LABEL_144;
  }
LABEL_139:
  *((_DWORD *)this + 87) |= 0x40000u;
  v73 = *((_QWORD *)this + 16);
  if (!v73)
  {
    v73 = operator new();
    *(_QWORD *)v73 = &off_24D9906D0;
    *(_QWORD *)(v73 + 48) = 0;
    *(_QWORD *)(v73 + 56) = 0;
    *(_OWORD *)(v73 + 8) = 0u;
    *(_OWORD *)(v73 + 24) = 0u;
    *(_DWORD *)(v73 + 40) = 0;
    *((_QWORD *)this + 16) = v73;
  }
  v74 = (const awd::metrics::LocationAccessory_MessageStats *)*((_QWORD *)a2 + 16);
  if (!v74)
    v74 = *(const awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                 + 128);
  awd::metrics::LocationAccessory_MessageStats::MergeFrom((awd::metrics::LocationAccessory_MessageStats *)v73, v74);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x80000) == 0)
  {
LABEL_98:
    if ((v37 & 0x100000) == 0)
      goto LABEL_99;
    goto LABEL_149;
  }
LABEL_144:
  *((_DWORD *)this + 87) |= 0x80000u;
  v75 = *((_QWORD *)this + 17);
  if (!v75)
  {
    v75 = operator new();
    *(_QWORD *)v75 = &off_24D9906D0;
    *(_QWORD *)(v75 + 48) = 0;
    *(_QWORD *)(v75 + 56) = 0;
    *(_OWORD *)(v75 + 8) = 0u;
    *(_OWORD *)(v75 + 24) = 0u;
    *(_DWORD *)(v75 + 40) = 0;
    *((_QWORD *)this + 17) = v75;
  }
  v76 = (const awd::metrics::LocationAccessory_MessageStats *)*((_QWORD *)a2 + 17);
  if (!v76)
    v76 = *(const awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                 + 136);
  awd::metrics::LocationAccessory_MessageStats::MergeFrom((awd::metrics::LocationAccessory_MessageStats *)v75, v76);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x100000) == 0)
  {
LABEL_99:
    if ((v37 & 0x200000) == 0)
      goto LABEL_100;
    goto LABEL_154;
  }
LABEL_149:
  *((_DWORD *)this + 87) |= 0x100000u;
  v77 = *((_QWORD *)this + 18);
  if (!v77)
  {
    v77 = operator new();
    *(_QWORD *)v77 = &off_24D9906D0;
    *(_QWORD *)(v77 + 48) = 0;
    *(_QWORD *)(v77 + 56) = 0;
    *(_OWORD *)(v77 + 8) = 0u;
    *(_OWORD *)(v77 + 24) = 0u;
    *(_DWORD *)(v77 + 40) = 0;
    *((_QWORD *)this + 18) = v77;
  }
  v78 = (const awd::metrics::LocationAccessory_MessageStats *)*((_QWORD *)a2 + 18);
  if (!v78)
    v78 = *(const awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                 + 144);
  awd::metrics::LocationAccessory_MessageStats::MergeFrom((awd::metrics::LocationAccessory_MessageStats *)v77, v78);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x200000) == 0)
  {
LABEL_100:
    if ((v37 & 0x400000) == 0)
      goto LABEL_101;
    goto LABEL_159;
  }
LABEL_154:
  *((_DWORD *)this + 87) |= 0x200000u;
  v79 = *((_QWORD *)this + 19);
  if (!v79)
  {
    v79 = operator new();
    *(_QWORD *)(v79 + 8) = 0;
    *(_QWORD *)(v79 + 16) = 0;
    *(_QWORD *)v79 = &off_24D990A18;
    *(_DWORD *)(v79 + 24) = 0;
    *(_QWORD *)(v79 + 32) = 0;
    *(_QWORD *)(v79 + 40) = 0;
    *(_DWORD *)(v79 + 48) = 0;
    *(_QWORD *)(v79 + 56) = 0;
    *(_QWORD *)(v79 + 64) = 0;
    *(_DWORD *)(v79 + 72) = 0;
    *((_QWORD *)this + 19) = v79;
  }
  v80 = (const awd::metrics::LocationAccessory_PASCDStats *)*((_QWORD *)a2 + 19);
  if (!v80)
    v80 = *(const awd::metrics::LocationAccessory_PASCDStats **)(awd::metrics::LocationAccessory::default_instance_ + 152);
  awd::metrics::LocationAccessory_PASCDStats::MergeFrom((awd::metrics::LocationAccessory_PASCDStats *)v79, v80);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x400000) == 0)
  {
LABEL_101:
    if ((v37 & 0x800000) == 0)
      goto LABEL_103;
    goto LABEL_102;
  }
LABEL_159:
  *((_DWORD *)this + 87) |= 0x400000u;
  v81 = (awd::metrics::LocationAccessory_Coordinate *)*((_QWORD *)this + 20);
  if (!v81)
  {
    v81 = (awd::metrics::LocationAccessory_Coordinate *)operator new();
    *(_QWORD *)v81 = &off_24D990A90;
    *((_QWORD *)v81 + 1) = 0;
    *((_QWORD *)v81 + 2) = 0;
    *((_QWORD *)v81 + 3) = 0;
    *((_QWORD *)this + 20) = v81;
  }
  v82 = (const awd::metrics::LocationAccessory_Coordinate *)*((_QWORD *)a2 + 20);
  if (!v82)
    v82 = *(const awd::metrics::LocationAccessory_Coordinate **)(awd::metrics::LocationAccessory::default_instance_ + 160);
  awd::metrics::LocationAccessory_Coordinate::MergeFrom(v81, v82);
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x800000) != 0)
  {
LABEL_102:
    v62 = *((_DWORD *)a2 + 31);
    *((_DWORD *)this + 87) |= 0x800000u;
    *((_DWORD *)this + 31) = v62;
    v37 = *((_DWORD *)a2 + 87);
  }
LABEL_103:
  if (!HIBYTE(v37))
    goto LABEL_110;
  if ((v37 & 0x1000000) != 0)
  {
    v92 = *((_DWORD *)a2 + 42);
    *((_DWORD *)this + 87) |= 0x1000000u;
    *((_DWORD *)this + 42) = v92;
    v37 = *((_DWORD *)a2 + 87);
    if ((v37 & 0x4000000) == 0)
    {
LABEL_106:
      if ((v37 & 0x8000000) == 0)
        goto LABEL_107;
      goto LABEL_186;
    }
  }
  else if ((v37 & 0x4000000) == 0)
  {
    goto LABEL_106;
  }
  v93 = *((_DWORD *)a2 + 43);
  *((_DWORD *)this + 87) |= 0x4000000u;
  *((_DWORD *)this + 43) = v93;
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x8000000) == 0)
  {
LABEL_107:
    if ((v37 & 0x10000000) == 0)
      goto LABEL_108;
    goto LABEL_187;
  }
LABEL_186:
  v94 = *((_DWORD *)a2 + 50);
  *((_DWORD *)this + 87) |= 0x8000000u;
  *((_DWORD *)this + 50) = v94;
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x10000000) == 0)
  {
LABEL_108:
    if ((v37 & 0x40000000) == 0)
      goto LABEL_109;
LABEL_188:
    v96 = *((_DWORD *)a2 + 58);
    *((_DWORD *)this + 87) |= 0x40000000u;
    *((_DWORD *)this + 58) = v96;
    if ((*((_DWORD *)a2 + 87) & 0x80000000) == 0)
      goto LABEL_110;
    goto LABEL_189;
  }
LABEL_187:
  v95 = *((_DWORD *)a2 + 51);
  *((_DWORD *)this + 87) |= 0x10000000u;
  *((_DWORD *)this + 51) = v95;
  v37 = *((_DWORD *)a2 + 87);
  if ((v37 & 0x40000000) != 0)
    goto LABEL_188;
LABEL_109:
  if ((v37 & 0x80000000) == 0)
    goto LABEL_110;
LABEL_189:
  v97 = *((_DWORD *)a2 + 59);
  *((_DWORD *)this + 87) |= 0x80000000;
  *((_DWORD *)this + 59) = v97;
LABEL_110:
  v63 = *((_DWORD *)a2 + 88);
  if (!(_BYTE)v63)
    goto LABEL_119;
  if ((v63 & 1) != 0)
  {
    v83 = *((_DWORD *)a2 + 66);
    *((_DWORD *)this + 88) |= 1u;
    *((_DWORD *)this + 66) = v83;
    v63 = *((_DWORD *)a2 + 88);
    if ((v63 & 4) == 0)
    {
LABEL_113:
      if ((v63 & 8) == 0)
        goto LABEL_114;
      goto LABEL_167;
    }
  }
  else if ((v63 & 4) == 0)
  {
    goto LABEL_113;
  }
  v84 = *((_DWORD *)a2 + 67);
  *((_DWORD *)this + 88) |= 4u;
  *((_DWORD *)this + 67) = v84;
  v63 = *((_DWORD *)a2 + 88);
  if ((v63 & 8) == 0)
  {
LABEL_114:
    if ((v63 & 0x10) == 0)
      goto LABEL_115;
    goto LABEL_172;
  }
LABEL_167:
  *((_DWORD *)this + 88) |= 8u;
  v85 = *((_QWORD *)this + 34);
  if (!v85)
  {
    v85 = operator new();
    *(_QWORD *)(v85 + 8) = 0;
    *(_QWORD *)(v85 + 16) = 0;
    *(_QWORD *)v85 = &off_24D990310;
    *(_DWORD *)(v85 + 24) = 0;
    *(_QWORD *)(v85 + 32) = 0;
    *(_DWORD *)(v85 + 40) = 0;
    *((_QWORD *)this + 34) = v85;
  }
  v86 = (const awd::metrics::LocationAccessory_DeviceChargingStats *)*((_QWORD *)a2 + 34);
  if (!v86)
    v86 = *(const awd::metrics::LocationAccessory_DeviceChargingStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                        + 272);
  awd::metrics::LocationAccessory_DeviceChargingStats::MergeFrom((awd::metrics::LocationAccessory_DeviceChargingStats *)v85, v86);
  v63 = *((_DWORD *)a2 + 88);
  if ((v63 & 0x10) == 0)
  {
LABEL_115:
    if ((v63 & 0x20) == 0)
      goto LABEL_116;
    goto LABEL_177;
  }
LABEL_172:
  *((_DWORD *)this + 88) |= 0x10u;
  v87 = *((_QWORD *)this + 35);
  if (!v87)
  {
    v87 = operator new();
    *(_QWORD *)v87 = &off_24D990388;
    *(_OWORD *)(v87 + 8) = 0u;
    *(_OWORD *)(v87 + 24) = 0u;
    *((_QWORD *)this + 35) = v87;
  }
  v88 = (const awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)a2 + 35);
  if (!v88)
    v88 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory::default_instance_ + 280);
  awd::metrics::LocationAccessory_Statistics::MergeFrom((awd::metrics::LocationAccessory_Statistics *)v87, v88);
  v63 = *((_DWORD *)a2 + 88);
  if ((v63 & 0x20) == 0)
  {
LABEL_116:
    if ((v63 & 0x40) == 0)
      goto LABEL_117;
    goto LABEL_182;
  }
LABEL_177:
  *((_DWORD *)this + 88) |= 0x20u;
  v89 = *((_QWORD *)this + 36);
  if (!v89)
  {
    v89 = operator new();
    *(_QWORD *)v89 = &off_24D990388;
    *(_OWORD *)(v89 + 8) = 0u;
    *(_OWORD *)(v89 + 24) = 0u;
    *((_QWORD *)this + 36) = v89;
  }
  v90 = (const awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)a2 + 36);
  if (!v90)
    v90 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory::default_instance_ + 288);
  awd::metrics::LocationAccessory_Statistics::MergeFrom((awd::metrics::LocationAccessory_Statistics *)v89, v90);
  v63 = *((_DWORD *)a2 + 88);
  if ((v63 & 0x40) == 0)
  {
LABEL_117:
    if ((v63 & 0x80) == 0)
      goto LABEL_119;
    goto LABEL_118;
  }
LABEL_182:
  v91 = *((_DWORD *)a2 + 74);
  *((_DWORD *)this + 88) |= 0x40u;
  *((_DWORD *)this + 74) = v91;
  v63 = *((_DWORD *)a2 + 88);
  if ((v63 & 0x80) != 0)
  {
LABEL_118:
    v64 = *((_DWORD *)a2 + 75);
    *((_DWORD *)this + 88) |= 0x80u;
    *((_DWORD *)this + 75) = v64;
    v63 = *((_DWORD *)a2 + 88);
  }
LABEL_119:
  if ((v63 & 0x1FE00) != 0)
  {
    if ((v63 & 0x200) != 0)
    {
      v65 = (const std::string *)*((_QWORD *)a2 + 41);
      *((_DWORD *)this + 88) |= 0x200u;
      v66 = (std::string *)*((_QWORD *)this + 41);
      if (v66 == v4)
      {
        v66 = (std::string *)operator new();
        v66->__r_.__value_.__l.__size_ = 0;
        v66->__r_.__value_.__r.__words[2] = 0;
        v66->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 41) = v66;
      }
      std::string::operator=(v66, v65);
      v63 = *((_DWORD *)a2 + 88);
    }
    if ((v63 & 0x400) != 0)
    {
      v67 = (const std::string *)*((_QWORD *)a2 + 42);
      *((_DWORD *)this + 88) |= 0x400u;
      v68 = (std::string *)*((_QWORD *)this + 42);
      if (v68 == v4)
      {
        v68 = (std::string *)operator new();
        v68->__r_.__value_.__l.__size_ = 0;
        v68->__r_.__value_.__r.__words[2] = 0;
        v68->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 42) = v68;
      }
      std::string::operator=(v68, v67);
    }
  }
}

void sub_218A35A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory::~LocationAccessory(awd::metrics::LocationAccessory *this)
{
  *(_QWORD *)this = &off_24D990B08;
  awd::metrics::LocationAccessory::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_MessageHistogram>::TypeHandler>((uint64_t *)this + 38);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram>::TypeHandler>((uint64_t *)this + 30);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NavDynamicsHistogram>::TypeHandler>((uint64_t *)this + 26);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LocationAppRunningTime>::TypeHandler>((uint64_t *)this + 22);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationAccessory::~LocationAccessory(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationAccessory::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = this;
  v2 = this[2];
  v3 = MEMORY[0x24BEDD958];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v2, 0x1012C40EC159624);
  }
  v5 = v1[3];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v5, 0x1012C40EC159624);
  }
  v7 = v1[4];
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v7, 0x1012C40EC159624);
  }
  v9 = v1[5];
  if (v9 != v3 && v9 != 0)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v9, 0x1012C40EC159624);
  }
  v11 = v1[6];
  if (v11 != v3 && v11)
  {
    if (*(char *)(v11 + 23) < 0)
      operator delete(*(void **)v11);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v11, 0x1012C40EC159624);
  }
  v12 = v1[41];
  if (v12 != v3 && v12)
  {
    if (*(char *)(v12 + 23) < 0)
      operator delete(*(void **)v12);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v12, 0x1012C40EC159624);
  }
  v13 = v1[42];
  if (v13 != v3 && v13)
  {
    if (*(char *)(v13 + 23) < 0)
      operator delete(*(void **)v13);
    this = (_QWORD *)MEMORY[0x219A1DC7C](v13, 0x1012C40EC159624);
  }
  if ((_QWORD *)awd::metrics::LocationAccessory::default_instance_ != v1)
  {
    v14 = v1[10];
    if (v14)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
    v15 = v1[11];
    if (v15)
      (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
    v16 = v1[12];
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v1[13];
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v1[14];
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = v1[16];
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
    v20 = v1[17];
    if (v20)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
    v21 = v1[18];
    if (v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
    v22 = v1[19];
    if (v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
    v23 = v1[20];
    if (v23)
      (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
    v24 = v1[34];
    if (v24)
      (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
    v25 = v1[35];
    if (v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
    this = (_QWORD *)v1[36];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 344) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory::default_instance(awd::metrics::LocationAccessory *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationAccessory::default_instance_;
  if (!awd::metrics::LocationAccessory::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory::default_instance_;
  }
  return result;
}

double awd::metrics::LocationAccessory::New(awd::metrics::LocationAccessory *this)
{
  awd::metrics::LocationAccessory *v1;

  v1 = (awd::metrics::LocationAccessory *)operator new();
  return awd::metrics::LocationAccessory::LocationAccessory(v1);
}

uint64_t awd::metrics::LocationAccessory::Clear(uint64_t this)
{
  uint64_t v1;
  _BYTE *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = this;
  v2 = (_BYTE *)(this + 348);
  v3 = *(_DWORD *)(this + 348);
  if ((_BYTE)v3)
  {
    *(_QWORD *)(this + 8) = 0;
    v4 = MEMORY[0x24BEDD958];
    if ((v3 & 2) != 0)
    {
      v5 = *(_QWORD *)(this + 16);
      if (v5 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*v2 & 4) != 0)
    {
      v6 = *(_QWORD *)(this + 24);
      if (v6 != v4)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
    if ((*v2 & 8) != 0)
    {
      v7 = *(_QWORD *)(this + 32);
      if (v7 != v4)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
    if ((*v2 & 0x10) != 0)
    {
      v8 = *(_QWORD *)(this + 40);
      if (v8 != v4)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(_BYTE **)v8 = 0;
          *(_QWORD *)(v8 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v8 = 0;
          *(_BYTE *)(v8 + 23) = 0;
        }
      }
    }
    if ((*v2 & 0x20) != 0)
    {
      v9 = *(_QWORD *)(this + 48);
      if (v9 != v4)
      {
        if (*(char *)(v9 + 23) < 0)
        {
          **(_BYTE **)v9 = 0;
          *(_QWORD *)(v9 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v9 = 0;
          *(_BYTE *)(v9 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 56) = 0;
    *(_BYTE *)(this + 60) = 0;
    v3 = *(_DWORD *)(this + 348);
  }
  if ((v3 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 120) = 0;
    *(_QWORD *)(this + 64) = 0;
    *(_QWORD *)(this + 72) = 0;
    if ((v3 & 0x2000) != 0)
    {
      this = *(_QWORD *)(this + 80);
      if (this)
      {
        this = awd::metrics::LocationAccessory_PerformanceStats::Clear(this);
        v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x4000) != 0)
    {
      this = *(_QWORD *)(v1 + 88);
      if (this)
      {
        this = awd::metrics::LocationAccessory_PerformanceStats::Clear(this);
        v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x8000) != 0)
    {
      this = *(_QWORD *)(v1 + 96);
      if (this)
      {
        this = awd::metrics::LocationAccessory_PerformanceStats::Clear(this);
        v3 = *(_DWORD *)v2;
      }
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      this = *(_QWORD *)(v1 + 104);
      if (this)
      {
        this = awd::metrics::LocationAccessory_PerformanceStats::Clear(this);
        v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x20000) != 0)
    {
      this = *(_QWORD *)(v1 + 112);
      if (this)
      {
        this = awd::metrics::LocationAccessory_SpeedPerformanceStats::Clear(this);
        v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x40000) != 0)
    {
      this = *(_QWORD *)(v1 + 128);
      if (this)
      {
        this = awd::metrics::LocationAccessory_MessageStats::Clear(this);
        v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x80000) != 0)
    {
      this = *(_QWORD *)(v1 + 136);
      if (this)
      {
        this = awd::metrics::LocationAccessory_MessageStats::Clear(this);
        v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x100000) != 0)
    {
      this = *(_QWORD *)(v1 + 144);
      if (this)
      {
        this = awd::metrics::LocationAccessory_MessageStats::Clear(this);
        v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x200000) != 0)
    {
      this = *(_QWORD *)(v1 + 152);
      if (this)
      {
        this = awd::metrics::LocationAccessory_PASCDStats::Clear(this);
        v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x400000) != 0)
    {
      v10 = *(_QWORD *)(v1 + 160);
      if (v10)
      {
        if (*(_BYTE *)(v10 + 28))
        {
          *(_QWORD *)(v10 + 8) = 0;
          *(_QWORD *)(v10 + 16) = 0;
        }
        *(_DWORD *)(v10 + 28) = 0;
        v3 = *(_DWORD *)v2;
      }
    }
    *(_DWORD *)(v1 + 124) = 0;
  }
  if (HIBYTE(v3))
  {
    *(_QWORD *)(v1 + 168) = 0;
    *(_QWORD *)(v1 + 200) = 0;
    *(_QWORD *)(v1 + 232) = 0;
  }
  v11 = *(_DWORD *)(v1 + 352);
  if ((_BYTE)v11)
  {
    *(_QWORD *)(v1 + 264) = 0;
    if ((v11 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 272);
      if (this)
      {
        this = awd::metrics::LocationAccessory_DeviceChargingStats::Clear(this);
        v11 = *(_DWORD *)(v1 + 352);
      }
    }
    if ((v11 & 0x10) != 0)
    {
      v12 = *(_QWORD *)(v1 + 280);
      if (v12)
      {
        if (*(_BYTE *)(v12 + 36))
        {
          *(_QWORD *)(v12 + 8) = 0;
          *(_QWORD *)(v12 + 16) = 0;
          *(_QWORD *)(v12 + 24) = 0;
        }
        *(_DWORD *)(v12 + 36) = 0;
        v11 = *(_DWORD *)(v1 + 352);
      }
    }
    if ((v11 & 0x20) != 0)
    {
      v13 = *(_QWORD *)(v1 + 288);
      if (v13)
      {
        if (*(_BYTE *)(v13 + 36))
        {
          *(_QWORD *)(v13 + 8) = 0;
          *(_QWORD *)(v13 + 16) = 0;
          *(_QWORD *)(v13 + 24) = 0;
        }
        *(_DWORD *)(v13 + 36) = 0;
        v11 = *(_DWORD *)(v1 + 352);
      }
    }
    *(_QWORD *)(v1 + 296) = 0;
  }
  if ((v11 & 0x1FE00) != 0)
  {
    if ((v11 & 0x200) != 0)
    {
      v14 = *(_QWORD *)(v1 + 328);
      if (v14 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v14 + 23) < 0)
        {
          **(_BYTE **)v14 = 0;
          *(_QWORD *)(v14 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v14 = 0;
          *(_BYTE *)(v14 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(v1 + 353) & 4) != 0)
    {
      v15 = *(_QWORD *)(v1 + 336);
      if (v15 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v15 + 23) < 0)
        {
          **(_BYTE **)v15 = 0;
          *(_QWORD *)(v15 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v15 = 0;
          *(_BYTE *)(v15 + 23) = 0;
        }
      }
    }
  }
  if (*(int *)(v1 + 184) >= 1)
  {
    v16 = 0;
    do
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v1 + 176) + 8 * v16);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 32))(v17);
      ++v16;
    }
    while (v16 < *(int *)(v1 + 184));
  }
  *(_DWORD *)(v1 + 184) = 0;
  if (*(int *)(v1 + 216) >= 1)
  {
    v18 = 0;
    do
    {
      v19 = *(_QWORD *)(*(_QWORD *)(v1 + 208) + 8 * v18);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
      ++v18;
    }
    while (v18 < *(int *)(v1 + 216));
  }
  *(_DWORD *)(v1 + 216) = 0;
  if (*(int *)(v1 + 248) >= 1)
  {
    v20 = 0;
    do
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v1 + 240) + 8 * v20);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 32))(v21);
      ++v20;
    }
    while (v20 < *(int *)(v1 + 248));
  }
  *(_DWORD *)(v1 + 248) = 0;
  if (*(int *)(v1 + 312) >= 1)
  {
    v22 = 0;
    do
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v1 + 304) + 8 * v22);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 32))(v23);
      ++v22;
    }
    while (v22 < *(int *)(v1 + 312));
  }
  *(_DWORD *)(v1 + 312) = 0;
  *(_QWORD *)v2 = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory::MergePartialFromCodedStream(awd::metrics::LocationAccessory *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  int v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  int v24;
  unint64_t v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  unint64_t v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unint64_t v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  unint64_t v36;
  unsigned __int8 *v37;
  int v38;
  unint64_t v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  uint64_t result;
  _QWORD *v43;
  _BYTE *v44;
  _QWORD *v45;
  _BYTE *v46;
  _QWORD *v47;
  _BYTE *v48;
  _QWORD *v49;
  _BYTE *v50;
  _QWORD *v51;
  _BYTE *v52;
  unsigned int v53;
  _BYTE *v54;
  unsigned int v55;
  _BYTE *v56;
  _BYTE *v57;
  _BYTE *v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  char *v63;
  int v64;
  int v65;
  int v66;
  BOOL v67;
  int v68;
  _BYTE *v69;
  uint64_t v70;
  char *v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned __int8 *v76;
  uint64_t v77;
  char *v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned __int8 *v83;
  uint64_t v84;
  char *v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned __int8 *v90;
  uint64_t v91;
  char *v92;
  int v93;
  int v94;
  int v95;
  int v96;
  unsigned __int8 *v97;
  uint64_t v98;
  char *v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned __int8 *v104;
  uint64_t v105;
  char *v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned __int8 *v111;
  uint64_t v112;
  char *v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned __int8 *v118;
  uint64_t v119;
  char *v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned __int8 *v125;
  awd::metrics::LocationAccessory_Coordinate *v126;
  char *v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unsigned __int8 *v132;
  unsigned __int8 *v133;
  unsigned __int8 *v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned __int8 *v148;
  unsigned __int8 *v149;
  unsigned __int8 *v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  awd::metrics::LocationAccessory_NavDynamicsHistogram *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  unsigned __int8 *v163;
  unsigned __int8 *v164;
  unsigned __int8 *v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned __int8 *v178;
  uint64_t v179;
  char *v180;
  int v181;
  int v182;
  int v183;
  int v184;
  unsigned __int8 *v185;
  uint64_t v186;
  char *v187;
  int v188;
  int v189;
  int v190;
  int v191;
  unsigned __int8 *v192;
  uint64_t v193;
  char *v194;
  int v195;
  int v196;
  int v197;
  int v198;
  unsigned __int8 *v199;
  unsigned __int8 *v200;
  unsigned __int8 *v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  _QWORD *v215;
  unsigned __int8 *v216;
  _QWORD *v217;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v218;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v219;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v220;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v221;
  unint64_t *v222;
  unsigned int *v223;
  unsigned int *v224;
  unsigned int *v225;
  unsigned int *v226;
  unsigned int *v227;
  unsigned int *v228;
  unsigned int *v229;
  unsigned int *v230;
  unsigned int *v231;
  unsigned int *v232;
  unsigned int *v233;
  unsigned int v234;

  v222 = (unint64_t *)((char *)this + 8);
  v4 = (unsigned int *)((char *)this + 64);
  v5 = (unsigned int *)((char *)this + 68);
  v6 = (unsigned int *)((char *)this + 72);
  v7 = (unsigned int *)((char *)this + 76);
  v8 = (unsigned int *)((char *)this + 120);
  v233 = (unsigned int *)((char *)this + 124);
  v226 = (unsigned int *)((char *)this + 200);
  v224 = (unsigned int *)((char *)this + 204);
  v220 = (awd::metrics::LocationAccessory *)((char *)this + 208);
  v221 = (awd::metrics::LocationAccessory *)((char *)this + 176);
  v230 = (unsigned int *)((char *)this + 232);
  v231 = (unsigned int *)((char *)this + 172);
  v225 = (unsigned int *)((char *)this + 236);
  v223 = (unsigned int *)((char *)this + 264);
  v219 = (awd::metrics::LocationAccessory *)((char *)this + 240);
  v228 = (unsigned int *)((char *)this + 168);
  v229 = (unsigned int *)((char *)this + 268);
  v232 = (unsigned int *)((char *)this + 296);
  v227 = (unsigned int *)((char *)this + 300);
  v218 = (awd::metrics::LocationAccessory *)((char *)this + 304);
LABEL_2:
  while (2)
  {
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v222);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v222 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        v15 = *((_DWORD *)this + 87) | 1;
        *((_DWORD *)this + 87) = v15;
        if ((unint64_t)v14 < v12 && *v14 == 18)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
          goto LABEL_104;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_96;
        v15 = *((_DWORD *)this + 87);
LABEL_104:
        *((_DWORD *)this + 87) = v15 | 2;
        if (*((_QWORD *)this + 2) == MEMORY[0x24BEDD958])
        {
          v43 = (_QWORD *)operator new();
          v43[1] = 0;
          v43[2] = 0;
          *v43 = 0;
          *((_QWORD *)this + 2) = v43;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v44 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v44 >= *((_QWORD *)a2 + 2) || *v44 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v44 + 1;
LABEL_110:
        *((_DWORD *)this + 87) |= 4u;
        if (*((_QWORD *)this + 3) == MEMORY[0x24BEDD958])
        {
          v45 = (_QWORD *)operator new();
          v45[1] = 0;
          v45[2] = 0;
          *v45 = 0;
          *((_QWORD *)this + 3) = v45;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v46 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v46 >= *((_QWORD *)a2 + 2) || *v46 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v46 + 1;
LABEL_116:
        *((_DWORD *)this + 87) |= 8u;
        if (*((_QWORD *)this + 4) == MEMORY[0x24BEDD958])
        {
          v47 = (_QWORD *)operator new();
          v47[1] = 0;
          v47[2] = 0;
          *v47 = 0;
          *((_QWORD *)this + 4) = v47;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v48 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v48 >= *((_QWORD *)a2 + 2) || *v48 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v48 + 1;
LABEL_122:
        *((_DWORD *)this + 87) |= 0x10u;
        if (*((_QWORD *)this + 5) == MEMORY[0x24BEDD958])
        {
          v49 = (_QWORD *)operator new();
          v49[1] = 0;
          v49[2] = 0;
          *v49 = 0;
          *((_QWORD *)this + 5) = v49;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v50 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v50 >= *((_QWORD *)a2 + 2) || *v50 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v50 + 1;
LABEL_128:
        *((_DWORD *)this + 87) |= 0x20u;
        if (*((_QWORD *)this + 6) == MEMORY[0x24BEDD958])
        {
          v51 = (_QWORD *)operator new();
          v51[1] = 0;
          v51[2] = 0;
          *v51 = 0;
          *((_QWORD *)this + 6) = v51;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v52 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v52 >= v16 || *v52 != 56)
          continue;
        v17 = v52 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_134:
        v234 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234);
          if (!(_DWORD)result)
            return result;
          v53 = v234;
          v54 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v53 = *v17;
          v54 = v17 + 1;
          *((_QWORD *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 14) = v53;
        *((_DWORD *)this + 87) |= 0x40u;
        if ((unint64_t)v54 >= v16 || *v54 != 64)
          continue;
        v18 = v54 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_142:
        v234 = 0;
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234);
          if (!(_DWORD)result)
            return result;
          v55 = v234;
          v56 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v55 = *v18;
          v56 = v18 + 1;
          *((_QWORD *)a2 + 1) = v56;
        }
        *((_BYTE *)this + 60) = v55 != 0;
        *((_DWORD *)this + 87) |= 0x80u;
        if ((unint64_t)v56 >= v16 || *v56 != 72)
          continue;
        v19 = v56 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_150:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v57 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v19;
          v57 = v19 + 1;
          *((_QWORD *)a2 + 1) = v57;
        }
        *((_DWORD *)this + 87) |= 0x100u;
        if ((unint64_t)v57 >= v16 || *v57 != 80)
          continue;
        v20 = v57 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_158:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v58 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v20;
          v58 = v20 + 1;
          *((_QWORD *)a2 + 1) = v58;
        }
        *((_DWORD *)this + 87) |= 0x200u;
        if ((unint64_t)v58 >= v16 || *v58 != 88)
          continue;
        v21 = v58 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_166:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v59 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v21;
          v59 = v21 + 1;
          *((_QWORD *)a2 + 1) = v59;
        }
        *((_DWORD *)this + 87) |= 0x400u;
        if ((unint64_t)v59 >= v16 || *v59 != 96)
          continue;
        v22 = v59 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_174:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v60 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v22;
          v60 = v22 + 1;
          *((_QWORD *)a2 + 1) = v60;
        }
        *((_DWORD *)this + 87) |= 0x800u;
        if ((unint64_t)v60 >= v16 || *v60 != 104)
          continue;
        v23 = v60 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_182:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v61 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v23;
          v61 = v23 + 1;
          *((_QWORD *)a2 + 1) = v61;
        }
        v24 = *((_DWORD *)this + 87) | 0x1000;
        *((_DWORD *)this + 87) = v24;
        if ((unint64_t)v61 >= v16 || *v61 != 114)
          continue;
        *((_QWORD *)a2 + 1) = v61 + 1;
LABEL_190:
        *((_DWORD *)this + 87) = v24 | 0x2000;
        v62 = *((_QWORD *)this + 10);
        if (!v62)
        {
          v62 = operator new();
          *(_QWORD *)(v62 + 8) = 0;
          *(_QWORD *)(v62 + 16) = 0;
          *(_QWORD *)v62 = &off_24D990478;
          *(_DWORD *)(v62 + 24) = 0;
          *(_QWORD *)(v62 + 32) = 0;
          *(_QWORD *)(v62 + 40) = 0;
          *(_DWORD *)(v62 + 48) = 0;
          *(_QWORD *)(v62 + 56) = 0;
          *(_QWORD *)(v62 + 64) = 0;
          *(_DWORD *)(v62 + 72) = 0;
          *(_QWORD *)(v62 + 80) = 0;
          *(_QWORD *)(v62 + 88) = 0;
          *(_DWORD *)(v62 + 96) = 0;
          *((_QWORD *)this + 10) = v62;
        }
        v234 = 0;
        v63 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v63 >= *((_QWORD *)a2 + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v63;
          *((_QWORD *)a2 + 1) = v63 + 1;
        }
        v64 = *((_DWORD *)a2 + 14);
        v65 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v64 + 1;
        if (v64 >= v65)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PerformanceStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_PerformanceStats *)v62, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v66 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v66, 1);
        v68 = v66 - 1;
        if (v68 < 0 == v67)
          *((_DWORD *)a2 + 14) = v68;
        v69 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v69 >= *((_QWORD *)a2 + 2) || *v69 != 122)
          continue;
        *((_QWORD *)a2 + 1) = v69 + 1;
LABEL_204:
        *((_DWORD *)this + 87) |= 0x4000u;
        v70 = *((_QWORD *)this + 11);
        if (!v70)
        {
          v70 = operator new();
          *(_QWORD *)(v70 + 8) = 0;
          *(_QWORD *)(v70 + 16) = 0;
          *(_QWORD *)v70 = &off_24D990478;
          *(_DWORD *)(v70 + 24) = 0;
          *(_QWORD *)(v70 + 32) = 0;
          *(_QWORD *)(v70 + 40) = 0;
          *(_DWORD *)(v70 + 48) = 0;
          *(_QWORD *)(v70 + 56) = 0;
          *(_QWORD *)(v70 + 64) = 0;
          *(_DWORD *)(v70 + 72) = 0;
          *(_QWORD *)(v70 + 80) = 0;
          *(_QWORD *)(v70 + 88) = 0;
          *(_DWORD *)(v70 + 96) = 0;
          *((_QWORD *)this + 11) = v70;
        }
        v234 = 0;
        v71 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v71 >= *((_QWORD *)a2 + 2) || *v71 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v71;
          *((_QWORD *)a2 + 1) = v71 + 1;
        }
        v72 = *((_DWORD *)a2 + 14);
        v73 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v72 + 1;
        if (v72 >= v73)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PerformanceStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_PerformanceStats *)v70, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v74 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v74, 1);
        v75 = v74 - 1;
        if (v75 < 0 == v67)
          *((_DWORD *)a2 + 14) = v75;
        v76 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v76 <= 1 || *v76 != 130 || v76[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v76 + 2;
LABEL_219:
        *((_DWORD *)this + 87) |= 0x8000u;
        v77 = *((_QWORD *)this + 12);
        if (!v77)
        {
          v77 = operator new();
          *(_QWORD *)(v77 + 8) = 0;
          *(_QWORD *)(v77 + 16) = 0;
          *(_QWORD *)v77 = &off_24D990478;
          *(_DWORD *)(v77 + 24) = 0;
          *(_QWORD *)(v77 + 32) = 0;
          *(_QWORD *)(v77 + 40) = 0;
          *(_DWORD *)(v77 + 48) = 0;
          *(_QWORD *)(v77 + 56) = 0;
          *(_QWORD *)(v77 + 64) = 0;
          *(_DWORD *)(v77 + 72) = 0;
          *(_QWORD *)(v77 + 80) = 0;
          *(_QWORD *)(v77 + 88) = 0;
          *(_DWORD *)(v77 + 96) = 0;
          *((_QWORD *)this + 12) = v77;
        }
        v234 = 0;
        v78 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v78 >= *((_QWORD *)a2 + 2) || *v78 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v78;
          *((_QWORD *)a2 + 1) = v78 + 1;
        }
        v79 = *((_DWORD *)a2 + 14);
        v80 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v79 + 1;
        if (v79 >= v80)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PerformanceStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_PerformanceStats *)v77, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v81 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v81, 1);
        v82 = v81 - 1;
        if (v82 < 0 == v67)
          *((_DWORD *)a2 + 14) = v82;
        v83 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v83 <= 1 || *v83 != 138 || v83[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v83 + 2;
LABEL_234:
        *((_DWORD *)this + 87) |= 0x10000u;
        v84 = *((_QWORD *)this + 13);
        if (!v84)
        {
          v84 = operator new();
          *(_QWORD *)(v84 + 8) = 0;
          *(_QWORD *)(v84 + 16) = 0;
          *(_QWORD *)v84 = &off_24D990478;
          *(_DWORD *)(v84 + 24) = 0;
          *(_QWORD *)(v84 + 32) = 0;
          *(_QWORD *)(v84 + 40) = 0;
          *(_DWORD *)(v84 + 48) = 0;
          *(_QWORD *)(v84 + 56) = 0;
          *(_QWORD *)(v84 + 64) = 0;
          *(_DWORD *)(v84 + 72) = 0;
          *(_QWORD *)(v84 + 80) = 0;
          *(_QWORD *)(v84 + 88) = 0;
          *(_DWORD *)(v84 + 96) = 0;
          *((_QWORD *)this + 13) = v84;
        }
        v234 = 0;
        v85 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v85 >= *((_QWORD *)a2 + 2) || *v85 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v85;
          *((_QWORD *)a2 + 1) = v85 + 1;
        }
        v86 = *((_DWORD *)a2 + 14);
        v87 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v86 + 1;
        if (v86 >= v87)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PerformanceStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_PerformanceStats *)v84, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v88 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v88, 1);
        v89 = v88 - 1;
        if (v89 < 0 == v67)
          *((_DWORD *)a2 + 14) = v89;
        v90 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v90 <= 1 || *v90 != 146 || v90[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v90 + 2;
LABEL_249:
        *((_DWORD *)this + 87) |= 0x20000u;
        v91 = *((_QWORD *)this + 14);
        if (!v91)
        {
          v91 = operator new();
          *(_QWORD *)(v91 + 8) = 0;
          *(_QWORD *)(v91 + 16) = 0;
          *(_QWORD *)v91 = &off_24D990568;
          *(_DWORD *)(v91 + 24) = 0;
          *(_QWORD *)(v91 + 32) = 0;
          *(_QWORD *)(v91 + 40) = 0;
          *(_DWORD *)(v91 + 48) = 0;
          *(_QWORD *)(v91 + 56) = 0;
          *(_QWORD *)(v91 + 64) = 0;
          *(_DWORD *)(v91 + 72) = 0;
          *((_QWORD *)this + 14) = v91;
        }
        v234 = 0;
        v92 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v92 >= *((_QWORD *)a2 + 2) || *v92 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v92;
          *((_QWORD *)a2 + 1) = v92 + 1;
        }
        v93 = *((_DWORD *)a2 + 14);
        v94 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v93 + 1;
        if (v93 >= v94)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_SpeedPerformanceStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_SpeedPerformanceStats *)v91, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v95 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v95, 1);
        v96 = v95 - 1;
        if (v96 < 0 == v67)
          *((_DWORD *)a2 + 14) = v96;
        v97 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v97 <= 1 || *v97 != 154 || v97[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v97 + 2;
LABEL_264:
        *((_DWORD *)this + 87) |= 0x40000u;
        v98 = *((_QWORD *)this + 16);
        if (!v98)
        {
          v98 = operator new();
          *(_QWORD *)v98 = &off_24D9906D0;
          *(_QWORD *)(v98 + 48) = 0;
          *(_QWORD *)(v98 + 56) = 0;
          *(_OWORD *)(v98 + 8) = 0u;
          *(_OWORD *)(v98 + 24) = 0u;
          *(_DWORD *)(v98 + 40) = 0;
          *((_QWORD *)this + 16) = v98;
        }
        v234 = 0;
        v99 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v99 >= *((_QWORD *)a2 + 2) || *v99 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v99;
          *((_QWORD *)a2 + 1) = v99 + 1;
        }
        v100 = *((_DWORD *)a2 + 14);
        v101 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v100 + 1;
        if (v100 >= v101)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_MessageStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_MessageStats *)v98, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v102 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v102, 1);
        v103 = v102 - 1;
        if (v103 < 0 == v67)
          *((_DWORD *)a2 + 14) = v103;
        v104 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v104 <= 1 || *v104 != 162 || v104[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v104 + 2;
LABEL_279:
        *((_DWORD *)this + 87) |= 0x80000u;
        v105 = *((_QWORD *)this + 17);
        if (!v105)
        {
          v105 = operator new();
          *(_QWORD *)v105 = &off_24D9906D0;
          *(_QWORD *)(v105 + 48) = 0;
          *(_QWORD *)(v105 + 56) = 0;
          *(_OWORD *)(v105 + 8) = 0u;
          *(_OWORD *)(v105 + 24) = 0u;
          *(_DWORD *)(v105 + 40) = 0;
          *((_QWORD *)this + 17) = v105;
        }
        v234 = 0;
        v106 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v106 >= *((_QWORD *)a2 + 2) || *v106 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v106;
          *((_QWORD *)a2 + 1) = v106 + 1;
        }
        v107 = *((_DWORD *)a2 + 14);
        v108 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v107 + 1;
        if (v107 >= v108)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_MessageStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_MessageStats *)v105, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v109 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v109, 1);
        v110 = v109 - 1;
        if (v110 < 0 == v67)
          *((_DWORD *)a2 + 14) = v110;
        v111 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v111 <= 1 || *v111 != 170 || v111[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v111 + 2;
LABEL_294:
        *((_DWORD *)this + 87) |= 0x100000u;
        v112 = *((_QWORD *)this + 18);
        if (!v112)
        {
          v112 = operator new();
          *(_QWORD *)v112 = &off_24D9906D0;
          *(_QWORD *)(v112 + 48) = 0;
          *(_QWORD *)(v112 + 56) = 0;
          *(_OWORD *)(v112 + 8) = 0u;
          *(_OWORD *)(v112 + 24) = 0u;
          *(_DWORD *)(v112 + 40) = 0;
          *((_QWORD *)this + 18) = v112;
        }
        v234 = 0;
        v113 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v113 >= *((_QWORD *)a2 + 2) || *v113 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v113;
          *((_QWORD *)a2 + 1) = v113 + 1;
        }
        v114 = *((_DWORD *)a2 + 14);
        v115 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v114 + 1;
        if (v114 >= v115)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_MessageStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_MessageStats *)v112, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v116 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v116, 1);
        v117 = v116 - 1;
        if (v117 < 0 == v67)
          *((_DWORD *)a2 + 14) = v117;
        v118 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v118 <= 1 || *v118 != 178 || v118[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v118 + 2;
LABEL_309:
        *((_DWORD *)this + 87) |= 0x200000u;
        v119 = *((_QWORD *)this + 19);
        if (!v119)
        {
          v119 = operator new();
          *(_QWORD *)(v119 + 8) = 0;
          *(_QWORD *)(v119 + 16) = 0;
          *(_QWORD *)v119 = &off_24D990A18;
          *(_DWORD *)(v119 + 24) = 0;
          *(_QWORD *)(v119 + 32) = 0;
          *(_QWORD *)(v119 + 40) = 0;
          *(_DWORD *)(v119 + 48) = 0;
          *(_QWORD *)(v119 + 56) = 0;
          *(_QWORD *)(v119 + 64) = 0;
          *(_DWORD *)(v119 + 72) = 0;
          *((_QWORD *)this + 19) = v119;
        }
        v234 = 0;
        v120 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v120 >= *((_QWORD *)a2 + 2) || *v120 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v120;
          *((_QWORD *)a2 + 1) = v120 + 1;
        }
        v121 = *((_DWORD *)a2 + 14);
        v122 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v121 + 1;
        if (v121 >= v122)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PASCDStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_PASCDStats *)v119, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v123 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v123, 1);
        v124 = v123 - 1;
        if (v124 < 0 == v67)
          *((_DWORD *)a2 + 14) = v124;
        v125 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v125 <= 1 || *v125 != 186 || v125[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v125 + 2;
LABEL_324:
        *((_DWORD *)this + 87) |= 0x400000u;
        v126 = (awd::metrics::LocationAccessory_Coordinate *)*((_QWORD *)this + 20);
        if (!v126)
        {
          v126 = (awd::metrics::LocationAccessory_Coordinate *)operator new();
          *(_QWORD *)v126 = &off_24D990A90;
          *((_QWORD *)v126 + 1) = 0;
          *((_QWORD *)v126 + 2) = 0;
          *((_QWORD *)v126 + 3) = 0;
          *((_QWORD *)this + 20) = v126;
        }
        v234 = 0;
        v127 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v127 >= *((_QWORD *)a2 + 2) || *v127 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v127;
          *((_QWORD *)a2 + 1) = v127 + 1;
        }
        v128 = *((_DWORD *)a2 + 14);
        v129 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v128 + 1;
        if (v128 >= v129)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_Coordinate::MergePartialFromCodedStream(v126, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v130 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v130, 1);
        v131 = v130 - 1;
        if (v131 < 0 == v67)
          *((_DWORD *)a2 + 14) = v131;
        v132 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        if ((int)v25 - (int)v132 <= 1 || *v132 != 192 || v132[1] != 1)
          continue;
        v26 = v132 + 2;
        *((_QWORD *)a2 + 1) = v26;
LABEL_339:
        if ((unint64_t)v26 >= v25 || (char)*v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v233);
          if (!(_DWORD)result)
            return result;
          v133 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v25 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v233 = *v26;
          v133 = v26 + 1;
          *((_QWORD *)a2 + 1) = v133;
        }
        *((_DWORD *)this + 87) |= 0x800000u;
        if ((int)v25 - (int)v133 < 2 || *v133 != 200 || v133[1] != 1)
          continue;
        v27 = v133 + 2;
        *((_QWORD *)a2 + 1) = v27;
LABEL_348:
        if ((unint64_t)v27 >= v25 || (char)*v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v228);
          if (!(_DWORD)result)
            return result;
          v134 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v25 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v228 = *v27;
          v134 = v27 + 1;
          *((_QWORD *)a2 + 1) = v134;
        }
        *((_DWORD *)this + 87) |= 0x1000000u;
        if ((int)v25 - (int)v134 < 2 || *v134 != 210 || v134[1] != 1)
          continue;
        while (1)
        {
          *((_QWORD *)a2 + 1) = v134 + 2;
LABEL_357:
          v135 = *((_DWORD *)this + 47);
          v136 = *((int *)this + 46);
          if ((int)v136 >= v135)
          {
            if (v135 == *((_DWORD *)this + 48))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v221);
              v135 = *((_DWORD *)this + 47);
            }
            *((_DWORD *)this + 47) = v135 + 1;
            v138 = operator new();
            v139 = MEMORY[0x24BEDD958];
            *(_QWORD *)v138 = &off_24D9907C0;
            *(_QWORD *)(v138 + 8) = v139;
            *(_QWORD *)(v138 + 16) = 0;
            *(_DWORD *)(v138 + 24) = 0;
            v140 = *((_QWORD *)this + 22);
            v141 = *((int *)this + 46);
            *((_DWORD *)this + 46) = v141 + 1;
            *(_QWORD *)(v140 + 8 * v141) = v138;
          }
          else
          {
            v137 = *((_QWORD *)this + 22);
            *((_DWORD *)this + 46) = v136 + 1;
            v138 = *(_QWORD *)(v137 + 8 * v136);
          }
          v234 = 0;
          v142 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v142 >= *((_QWORD *)a2 + 2) || *v142 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
          }
          else
          {
            v234 = *v142;
            *((_QWORD *)a2 + 1) = v142 + 1;
          }
          v143 = *((_DWORD *)a2 + 14);
          v144 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v143 + 1;
          if (v143 >= v144)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_LocationAppRunningTime::MergePartialFromCodedStream((awd::metrics::LocationAccessory_LocationAppRunningTime *)v138, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v145 = *((_DWORD *)a2 + 14);
          v67 = __OFSUB__(v145, 1);
          v146 = v145 - 1;
          if (v146 < 0 == v67)
            *((_DWORD *)a2 + 14) = v146;
          v134 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v28 = *((_QWORD *)a2 + 2);
          if ((int)v28 - (int)v134 <= 1)
            goto LABEL_2;
          v147 = *v134;
          if (v147 == 216)
            break;
          if (v147 != 210 || v134[1] != 1)
            goto LABEL_2;
        }
        if (v134[1] != 1)
          continue;
        v29 = v134 + 2;
        *((_QWORD *)a2 + 1) = v29;
LABEL_378:
        if ((unint64_t)v29 >= v28 || (char)*v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v231);
          if (!(_DWORD)result)
            return result;
          v148 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v28 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v231 = *v29;
          v148 = v29 + 1;
          *((_QWORD *)a2 + 1) = v148;
        }
        *((_DWORD *)this + 87) |= 0x4000000u;
        if ((int)v28 - (int)v148 < 2 || *v148 != 224 || v148[1] != 1)
          continue;
        v30 = v148 + 2;
        *((_QWORD *)a2 + 1) = v30;
LABEL_387:
        if ((unint64_t)v30 >= v28 || (char)*v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v226);
          if (!(_DWORD)result)
            return result;
          v149 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v28 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v226 = *v30;
          v149 = v30 + 1;
          *((_QWORD *)a2 + 1) = v149;
        }
        *((_DWORD *)this + 87) |= 0x8000000u;
        if ((int)v28 - (int)v149 < 2 || *v149 != 232 || v149[1] != 1)
          continue;
        v31 = v149 + 2;
        *((_QWORD *)a2 + 1) = v31;
LABEL_396:
        if ((unint64_t)v31 >= v28 || (char)*v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v224);
          if (!(_DWORD)result)
            return result;
          v150 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v28 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v224 = *v31;
          v150 = v31 + 1;
          *((_QWORD *)a2 + 1) = v150;
        }
        *((_DWORD *)this + 87) |= 0x10000000u;
        if ((int)v28 - (int)v150 < 2 || *v150 != 242 || v150[1] != 1)
          continue;
        while (1)
        {
          *((_QWORD *)a2 + 1) = v150 + 2;
LABEL_405:
          v151 = *((_DWORD *)this + 55);
          v152 = *((int *)this + 54);
          if ((int)v152 >= v151)
          {
            if (v151 == *((_DWORD *)this + 56))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v220);
              v151 = *((_DWORD *)this + 55);
            }
            *((_DWORD *)this + 55) = v151 + 1;
            v154 = (awd::metrics::LocationAccessory_NavDynamicsHistogram *)operator new();
            *((_QWORD *)v154 + 1) = 0;
            *((_QWORD *)v154 + 2) = 0;
            *(_QWORD *)v154 = &off_24D990838;
            v155 = *((_QWORD *)this + 26);
            v156 = *((int *)this + 54);
            *((_DWORD *)this + 54) = v156 + 1;
            *(_QWORD *)(v155 + 8 * v156) = v154;
          }
          else
          {
            v153 = *((_QWORD *)this + 26);
            *((_DWORD *)this + 54) = v152 + 1;
            v154 = *(awd::metrics::LocationAccessory_NavDynamicsHistogram **)(v153 + 8 * v152);
          }
          v234 = 0;
          v157 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v157 >= *((_QWORD *)a2 + 2) || *v157 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
          }
          else
          {
            v234 = *v157;
            *((_QWORD *)a2 + 1) = v157 + 1;
          }
          v158 = *((_DWORD *)a2 + 14);
          v159 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v158 + 1;
          if (v158 >= v159)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_NavDynamicsHistogram::MergePartialFromCodedStream(v154, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v160 = *((_DWORD *)a2 + 14);
          v67 = __OFSUB__(v160, 1);
          v161 = v160 - 1;
          if (v161 < 0 == v67)
            *((_DWORD *)a2 + 14) = v161;
          v150 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v32 = *((_QWORD *)a2 + 2);
          if ((int)v32 - (int)v150 <= 1)
            goto LABEL_2;
          v162 = *v150;
          if (v162 == 248)
            break;
          if (v162 != 242 || v150[1] != 1)
            goto LABEL_2;
        }
        if (v150[1] != 1)
          continue;
        v33 = v150 + 2;
        *((_QWORD *)a2 + 1) = v33;
LABEL_426:
        if ((unint64_t)v33 >= v32 || (char)*v33 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v230);
          if (!(_DWORD)result)
            return result;
          v163 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v32 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v230 = *v33;
          v163 = v33 + 1;
          *((_QWORD *)a2 + 1) = v163;
        }
        *((_DWORD *)this + 87) |= 0x40000000u;
        if ((int)v32 - (int)v163 < 2 || *v163 != 128 || v163[1] != 2)
          continue;
        v34 = v163 + 2;
        *((_QWORD *)a2 + 1) = v34;
LABEL_435:
        if ((unint64_t)v34 >= v32 || (char)*v34 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v225);
          if (!(_DWORD)result)
            return result;
          v164 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v32 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v225 = *v34;
          v164 = v34 + 1;
          *((_QWORD *)a2 + 1) = v164;
        }
        *((_DWORD *)this + 87) |= 0x80000000;
        if ((int)v32 - (int)v164 < 2 || *v164 != 136 || v164[1] != 2)
          continue;
        v35 = v164 + 2;
        *((_QWORD *)a2 + 1) = v35;
LABEL_444:
        if ((unint64_t)v35 >= v32 || (char)*v35 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v223);
          if (!(_DWORD)result)
            return result;
          v165 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v32 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v223 = *v35;
          v165 = v35 + 1;
          *((_QWORD *)a2 + 1) = v165;
        }
        *((_DWORD *)this + 88) |= 1u;
        if ((int)v32 - (int)v165 < 2 || *v165 != 146 || v165[1] != 2)
          continue;
        while (1)
        {
          *((_QWORD *)a2 + 1) = v165 + 2;
LABEL_453:
          v166 = *((_DWORD *)this + 63);
          v167 = *((int *)this + 62);
          if ((int)v167 >= v166)
          {
            if (v166 == *((_DWORD *)this + 64))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v219);
              v166 = *((_DWORD *)this + 63);
            }
            *((_DWORD *)this + 63) = v166 + 1;
            v169 = (awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *)operator new();
            *((_QWORD *)v169 + 1) = 0;
            *((_QWORD *)v169 + 2) = 0;
            *(_QWORD *)v169 = &off_24D990748;
            v170 = *((_QWORD *)this + 30);
            v171 = *((int *)this + 62);
            *((_DWORD *)this + 62) = v171 + 1;
            *(_QWORD *)(v170 + 8 * v171) = v169;
          }
          else
          {
            v168 = *((_QWORD *)this + 30);
            *((_DWORD *)this + 62) = v167 + 1;
            v169 = *(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram **)(v168 + 8 * v167);
          }
          v234 = 0;
          v172 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v172 >= *((_QWORD *)a2 + 2) || *v172 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
          }
          else
          {
            v234 = *v172;
            *((_QWORD *)a2 + 1) = v172 + 1;
          }
          v173 = *((_DWORD *)a2 + 14);
          v174 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v173 + 1;
          if (v173 >= v174)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergePartialFromCodedStream(v169, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v175 = *((_DWORD *)a2 + 14);
          v67 = __OFSUB__(v175, 1);
          v176 = v175 - 1;
          if (v176 < 0 == v67)
            *((_DWORD *)a2 + 14) = v176;
          v165 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v36 = *((_QWORD *)a2 + 2);
          if ((int)v36 - (int)v165 <= 1)
            goto LABEL_2;
          v177 = *v165;
          if (v177 == 152)
            break;
          if (v177 != 146 || v165[1] != 2)
            goto LABEL_2;
        }
        if (v165[1] != 2)
          continue;
        v37 = v165 + 2;
        *((_QWORD *)a2 + 1) = v37;
LABEL_474:
        if ((unint64_t)v37 >= v36 || (char)*v37 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v229);
          if (!(_DWORD)result)
            return result;
          v178 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v36 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v229 = *v37;
          v178 = v37 + 1;
          *((_QWORD *)a2 + 1) = v178;
        }
        v38 = *((_DWORD *)this + 88) | 4;
        *((_DWORD *)this + 88) = v38;
        if ((int)v36 - (int)v178 < 2 || *v178 != 162 || v178[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v178 + 2;
LABEL_483:
        *((_DWORD *)this + 88) = v38 | 8;
        v179 = *((_QWORD *)this + 34);
        if (!v179)
        {
          v179 = operator new();
          *(_QWORD *)(v179 + 8) = 0;
          *(_QWORD *)(v179 + 16) = 0;
          *(_QWORD *)v179 = &off_24D990310;
          *(_DWORD *)(v179 + 24) = 0;
          *(_QWORD *)(v179 + 32) = 0;
          *(_DWORD *)(v179 + 40) = 0;
          *((_QWORD *)this + 34) = v179;
        }
        v234 = 0;
        v180 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v180 >= *((_QWORD *)a2 + 2) || *v180 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v180;
          *((_QWORD *)a2 + 1) = v180 + 1;
        }
        v181 = *((_DWORD *)a2 + 14);
        v182 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v181 + 1;
        if (v181 >= v182)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_DeviceChargingStats::MergePartialFromCodedStream((awd::metrics::LocationAccessory_DeviceChargingStats *)v179, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v183 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v183, 1);
        v184 = v183 - 1;
        if (v184 < 0 == v67)
          *((_DWORD *)a2 + 14) = v184;
        v185 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v185 <= 1 || *v185 != 170 || v185[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v185 + 2;
LABEL_498:
        *((_DWORD *)this + 88) |= 0x10u;
        v186 = *((_QWORD *)this + 35);
        if (!v186)
        {
          v186 = operator new();
          *(_QWORD *)v186 = &off_24D990388;
          *(_OWORD *)(v186 + 8) = 0u;
          *(_OWORD *)(v186 + 24) = 0u;
          *((_QWORD *)this + 35) = v186;
        }
        v234 = 0;
        v187 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v187 >= *((_QWORD *)a2 + 2) || *v187 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v187;
          *((_QWORD *)a2 + 1) = v187 + 1;
        }
        v188 = *((_DWORD *)a2 + 14);
        v189 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v188 + 1;
        if (v188 >= v189)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream((awd::metrics::LocationAccessory_Statistics *)v186, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v190 = *((_DWORD *)a2 + 14);
        v67 = __OFSUB__(v190, 1);
        v191 = v190 - 1;
        if (v191 < 0 == v67)
          *((_DWORD *)a2 + 14) = v191;
        v192 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v192 <= 1 || *v192 != 178 || v192[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v192 + 2;
LABEL_513:
        *((_DWORD *)this + 88) |= 0x20u;
        v193 = *((_QWORD *)this + 36);
        if (!v193)
        {
          v193 = operator new();
          *(_QWORD *)v193 = &off_24D990388;
          *(_OWORD *)(v193 + 8) = 0u;
          *(_OWORD *)(v193 + 24) = 0u;
          *((_QWORD *)this + 36) = v193;
        }
        v234 = 0;
        v194 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v194 >= *((_QWORD *)a2 + 2) || *v194 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
        }
        else
        {
          v234 = *v194;
          *((_QWORD *)a2 + 1) = v194 + 1;
        }
        v195 = *((_DWORD *)a2 + 14);
        v196 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v195 + 1;
        if (v195 < v196)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream((awd::metrics::LocationAccessory_Statistics *)v193, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v197 = *((_DWORD *)a2 + 14);
              v67 = __OFSUB__(v197, 1);
              v198 = v197 - 1;
              if (v198 < 0 == v67)
                *((_DWORD *)a2 + 14) = v198;
              v199 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v39 = *((_QWORD *)a2 + 2);
              if ((int)v39 - (int)v199 > 1 && *v199 == 184 && v199[1] == 2)
              {
                v40 = v199 + 2;
                *((_QWORD *)a2 + 1) = v40;
LABEL_528:
                if ((unint64_t)v40 >= v39 || (char)*v40 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v232);
                  if (!(_DWORD)result)
                    return result;
                  v200 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                  v39 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  *v232 = *v40;
                  v200 = v40 + 1;
                  *((_QWORD *)a2 + 1) = v200;
                }
                *((_DWORD *)this + 88) |= 0x40u;
                if ((int)v39 - (int)v200 >= 2 && *v200 == 192 && v200[1] == 2)
                {
                  v41 = v200 + 2;
                  *((_QWORD *)a2 + 1) = v41;
LABEL_537:
                  if ((unint64_t)v41 >= v39 || (char)*v41 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v227);
                    if (!(_DWORD)result)
                      return result;
                    v201 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                    v39 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    *v227 = *v41;
                    v201 = v41 + 1;
                    *((_QWORD *)a2 + 1) = v201;
                  }
                  *((_DWORD *)this + 88) |= 0x80u;
                  if ((int)v39 - (int)v201 >= 2 && *v201 == 202 && v201[1] == 2)
                  {
                    while (1)
                    {
                      *((_QWORD *)a2 + 1) = v201 + 2;
LABEL_546:
                      v202 = *((int *)this + 78);
                      v203 = *((_DWORD *)this + 79);
                      if ((int)v202 >= v203)
                      {
                        if (v203 == *((_DWORD *)this + 80))
                        {
                          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v218);
                          v203 = *((_DWORD *)this + 79);
                        }
                        *((_DWORD *)this + 79) = v203 + 1;
                        v205 = operator new();
                        v206 = MEMORY[0x24BEDD958];
                        *(_QWORD *)v205 = &off_24D990658;
                        *(_QWORD *)(v205 + 8) = v206;
                        *(_QWORD *)(v205 + 16) = 0;
                        *(_DWORD *)(v205 + 24) = 0;
                        v207 = *((_QWORD *)this + 38);
                        v208 = *((int *)this + 78);
                        *((_DWORD *)this + 78) = v208 + 1;
                        *(_QWORD *)(v207 + 8 * v208) = v205;
                      }
                      else
                      {
                        v204 = *((_QWORD *)this + 38);
                        *((_DWORD *)this + 78) = v202 + 1;
                        v205 = *(_QWORD *)(v204 + 8 * v202);
                      }
                      v234 = 0;
                      v209 = (char *)*((_QWORD *)a2 + 1);
                      if ((unint64_t)v209 >= *((_QWORD *)a2 + 2) || *v209 < 0)
                      {
                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v234))return 0;
                      }
                      else
                      {
                        v234 = *v209;
                        *((_QWORD *)a2 + 1) = v209 + 1;
                      }
                      v210 = *((_DWORD *)a2 + 14);
                      v211 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v210 + 1;
                      if (v210 >= v211)
                        return 0;
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                      if (!awd::metrics::LocationAccessory_MessageHistogram::MergePartialFromCodedStream((awd::metrics::LocationAccessory_MessageHistogram *)v205, a2)|| !*((_BYTE *)a2 + 36))
                      {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                      v212 = *((_DWORD *)a2 + 14);
                      v67 = __OFSUB__(v212, 1);
                      v213 = v212 - 1;
                      if (v213 < 0 == v67)
                        *((_DWORD *)a2 + 14) = v213;
                      v201 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                      if (*((_DWORD *)a2 + 4) - (int)v201 <= 1)
                        goto LABEL_2;
                      v214 = *v201;
                      if (v214 == 210)
                        break;
                      if (v214 != 202 || v201[1] != 2)
                        goto LABEL_2;
                    }
                    if (v201[1] == 2)
                    {
                      *((_QWORD *)a2 + 1) = v201 + 2;
LABEL_567:
                      *((_DWORD *)this + 88) |= 0x200u;
                      if (*((_QWORD *)this + 41) == MEMORY[0x24BEDD958])
                      {
                        v215 = (_QWORD *)operator new();
                        v215[1] = 0;
                        v215[2] = 0;
                        *v215 = 0;
                        *((_QWORD *)this + 41) = v215;
                      }
                      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                      if (!(_DWORD)result)
                        return result;
                      v216 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                      if (*((_DWORD *)a2 + 4) - (int)v216 >= 2 && *v216 == 218 && v216[1] == 2)
                      {
                        *((_QWORD *)a2 + 1) = v216 + 2;
LABEL_574:
                        *((_DWORD *)this + 88) |= 0x400u;
                        if (*((_QWORD *)this + 42) == MEMORY[0x24BEDD958])
                        {
                          v217 = (_QWORD *)operator new();
                          v217[1] = 0;
                          v217[2] = 0;
                          *v217 = 0;
                          *((_QWORD *)this + 42) = v217;
                        }
                        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                        if (!(_DWORD)result)
                          return result;
                        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          result = 1;
                          *((_BYTE *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_110;
        goto LABEL_96;
      case 4u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_116;
        goto LABEL_96;
      case 5u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_122;
        goto LABEL_96;
      case 6u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_128;
        goto LABEL_96;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_134;
      case 8u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_142;
      case 9u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_150;
      case 0xAu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_158;
      case 0xBu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_166;
      case 0xCu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_174;
      case 0xDu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_182;
      case 0xEu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_96;
        v24 = *((_DWORD *)this + 87);
        goto LABEL_190;
      case 0xFu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_204;
        goto LABEL_96;
      case 0x10u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_219;
        goto LABEL_96;
      case 0x11u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_234;
        goto LABEL_96;
      case 0x12u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_249;
        goto LABEL_96;
      case 0x13u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_264;
        goto LABEL_96;
      case 0x14u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_279;
        goto LABEL_96;
      case 0x15u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_294;
        goto LABEL_96;
      case 0x16u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_309;
        goto LABEL_96;
      case 0x17u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_324;
        goto LABEL_96;
      case 0x18u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v26 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_339;
      case 0x19u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_348;
      case 0x1Au:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_357;
        goto LABEL_96;
      case 0x1Bu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v29 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        goto LABEL_378;
      case 0x1Cu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        goto LABEL_387;
      case 0x1Du:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        goto LABEL_396;
      case 0x1Eu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_405;
        goto LABEL_96;
      case 0x1Fu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v33 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v32 = *((_QWORD *)a2 + 2);
        goto LABEL_426;
      case 0x20u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v34 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v32 = *((_QWORD *)a2 + 2);
        goto LABEL_435;
      case 0x21u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v35 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v32 = *((_QWORD *)a2 + 2);
        goto LABEL_444;
      case 0x22u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_453;
        goto LABEL_96;
      case 0x23u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v37 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v36 = *((_QWORD *)a2 + 2);
        goto LABEL_474;
      case 0x24u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_96;
        v38 = *((_DWORD *)this + 88);
        goto LABEL_483;
      case 0x25u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_498;
        goto LABEL_96;
      case 0x26u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_513;
        goto LABEL_96;
      case 0x27u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v40 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v39 = *((_QWORD *)a2 + 2);
        goto LABEL_528;
      case 0x28u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_96;
        v41 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v39 = *((_QWORD *)a2 + 2);
        goto LABEL_537;
      case 0x29u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_546;
        goto LABEL_96;
      case 0x2Au:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_567;
        goto LABEL_96;
      case 0x2Bu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_96;
        goto LABEL_574;
      default:
        v11 = TagFallback & 7;
LABEL_96:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationAccessory::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = this;
  v6 = *(_DWORD *)(this + 348);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 348);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_61;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_62;
  }
LABEL_61:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_63;
  }
LABEL_62:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_64;
  }
LABEL_63:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_65;
  }
LABEL_64:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_66;
  }
LABEL_65:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_67;
  }
LABEL_66:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_68;
  }
LABEL_67:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_69;
  }
LABEL_68:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_70;
  }
LABEL_69:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_71;
  }
LABEL_70:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_72;
  }
LABEL_71:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 120), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_75;
  }
LABEL_72:
  v15 = *(_QWORD *)(v5 + 80);
  if (!v15)
    v15 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 80);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v15, a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_78;
  }
LABEL_75:
  v16 = *(_QWORD *)(v5 + 88);
  if (!v16)
    v16 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 88);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v16, a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_81;
  }
LABEL_78:
  v17 = *(_QWORD *)(v5 + 96);
  if (!v17)
    v17 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 96);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v17, a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_84;
  }
LABEL_81:
  v18 = *(_QWORD *)(v5 + 104);
  if (!v18)
    v18 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 104);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v18, a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_87;
  }
LABEL_84:
  v19 = *(_QWORD *)(v5 + 112);
  if (!v19)
    v19 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 112);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v19, a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_90;
  }
LABEL_87:
  v20 = *(_QWORD *)(v5 + 128);
  if (!v20)
    v20 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 128);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v20, a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_93;
  }
LABEL_90:
  v21 = *(_QWORD *)(v5 + 136);
  if (!v21)
    v21 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 136);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v21, a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_96;
  }
LABEL_93:
  v22 = *(_QWORD *)(v5 + 144);
  if (!v22)
    v22 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 144);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v22, a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_99;
  }
LABEL_96:
  v23 = *(_QWORD *)(v5 + 152);
  if (!v23)
    v23 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 152);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v23, a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_102;
  }
LABEL_99:
  v24 = *(_QWORD *)(v5 + 160);
  if (!v24)
    v24 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 160);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v24, a2, a4);
  v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_27;
    goto LABEL_26;
  }
LABEL_102:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned int *)(v5 + 124), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 348) & 0x1000000) != 0)
LABEL_26:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(unsigned int *)(v5 + 168), (uint64_t)a2, a4);
LABEL_27:
  if (*(int *)(v5 + 184) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, *(_QWORD *)(*(_QWORD *)(v5 + 176) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 184));
  }
  v8 = *(_DWORD *)(v5 + 348);
  if ((v8 & 0x4000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, *(unsigned int *)(v5 + 172), (uint64_t)a2, a4);
    v8 = *(_DWORD *)(v5 + 348);
    if ((v8 & 0x8000000) == 0)
    {
LABEL_32:
      if ((v8 & 0x10000000) == 0)
        goto LABEL_34;
      goto LABEL_33;
    }
  }
  else if ((v8 & 0x8000000) == 0)
  {
    goto LABEL_32;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(unsigned int *)(v5 + 200), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 348) & 0x10000000) != 0)
LABEL_33:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned int *)(v5 + 204), (uint64_t)a2, a4);
LABEL_34:
  if (*(int *)(v5 + 216) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(_QWORD *)(*(_QWORD *)(v5 + 208) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 216));
  }
  v10 = *(_DWORD *)(v5 + 348);
  if ((v10 & 0x40000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned int *)(v5 + 232), (uint64_t)a2, a4);
    v10 = *(_DWORD *)(v5 + 348);
  }
  if (v10 < 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned int *)(v5 + 236), (uint64_t)a2, a4);
  if ((*(_BYTE *)(v5 + 352) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, *(unsigned int *)(v5 + 264), (uint64_t)a2, a4);
  if (*(int *)(v5 + 248) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(_QWORD *)(*(_QWORD *)(v5 + 240) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 248));
  }
  v12 = *(_DWORD *)(v5 + 352);
  if ((v12 & 4) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned int *)(v5 + 268), (uint64_t)a2, a4);
    v12 = *(_DWORD *)(v5 + 352);
    if ((v12 & 8) == 0)
    {
LABEL_48:
      if ((v12 & 0x10) == 0)
        goto LABEL_49;
      goto LABEL_111;
    }
  }
  else if ((v12 & 8) == 0)
  {
    goto LABEL_48;
  }
  v25 = *(_QWORD *)(v5 + 272);
  if (!v25)
    v25 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 272);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, v25, a2, a4);
  v12 = *(_DWORD *)(v5 + 352);
  if ((v12 & 0x10) == 0)
  {
LABEL_49:
    if ((v12 & 0x20) == 0)
      goto LABEL_50;
    goto LABEL_114;
  }
LABEL_111:
  v26 = *(_QWORD *)(v5 + 280);
  if (!v26)
    v26 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 280);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, v26, a2, a4);
  v12 = *(_DWORD *)(v5 + 352);
  if ((v12 & 0x20) == 0)
  {
LABEL_50:
    if ((v12 & 0x40) == 0)
      goto LABEL_51;
    goto LABEL_117;
  }
LABEL_114:
  v27 = *(_QWORD *)(v5 + 288);
  if (!v27)
    v27 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 288);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, v27, a2, a4);
  v12 = *(_DWORD *)(v5 + 352);
  if ((v12 & 0x40) == 0)
  {
LABEL_51:
    if ((v12 & 0x80) == 0)
      goto LABEL_53;
    goto LABEL_52;
  }
LABEL_117:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(unsigned int *)(v5 + 296), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 352) & 0x80) != 0)
LABEL_52:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(unsigned int *)(v5 + 300), (uint64_t)a2, a4);
LABEL_53:
  if (*(int *)(v5 + 312) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(_QWORD *)(*(_QWORD *)(v5 + 304) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 312));
  }
  v14 = *(_DWORD *)(v5 + 352);
  if ((v14 & 0x200) == 0)
  {
    if ((v14 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if ((*(_DWORD *)(v5 + 352) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  return this;
}

uint64_t awd::metrics::LocationAccessory::ByteSize(awd::metrics::LocationAccessory *this)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v39;
  int v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  int v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  awd::metrics::LocationAccessory_PerformanceStats *v47;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v48;
  int v49;
  int v50;
  awd::metrics::LocationAccessory_PerformanceStats *v51;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v52;
  int v53;
  int v54;
  awd::metrics::LocationAccessory_PerformanceStats *v55;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v56;
  int v57;
  int v58;
  awd::metrics::LocationAccessory_PerformanceStats *v59;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v60;
  int v61;
  int v62;
  awd::metrics::LocationAccessory_SpeedPerformanceStats *v63;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v64;
  int v65;
  int v66;
  awd::metrics::LocationAccessory_MessageStats *v67;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v68;
  int v69;
  int v70;
  awd::metrics::LocationAccessory_MessageStats *v71;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v72;
  int v73;
  int v74;
  awd::metrics::LocationAccessory_MessageStats *v75;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v76;
  int v77;
  int v78;
  awd::metrics::LocationAccessory_PASCDStats *v79;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v80;
  int v81;
  int v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v87;
  int v88;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v89;
  int v90;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v91;
  int v92;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v93;
  int v94;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v95;
  int v96;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v97;
  int v98;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v99;
  int v100;
  int v101;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v102;
  int v103;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v104;
  int v105;
  awd::metrics::LocationAccessory_DeviceChargingStats *v106;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v107;
  int v108;
  int v109;
  awd::metrics::LocationAccessory_Statistics *v110;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v111;
  int v112;
  int v113;
  awd::metrics::LocationAccessory_Statistics *v114;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v115;
  int v116;
  int v117;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v118;
  int v119;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v120;
  int v121;
  uint64_t v122;
  int v123;
  char v124;
  uint64_t v125;
  unint64_t v126;
  int v127;
  uint64_t v128;
  int v129;
  char v130;
  uint64_t v131;
  unint64_t v132;
  int v133;
  int v134;
  int v135;
  uint64_t v136;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v137;
  int v138;
  int v139;
  int v140;
  int v141;
  uint64_t v142;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v143;
  int v144;
  int v145;
  int v146;
  int v147;
  uint64_t v148;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v149;
  int v150;
  int v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v155;
  int v156;
  int v157;

  v2 = *((_DWORD *)this + 87);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_67;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 87);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v2 = *((_DWORD *)this + 87);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v3 += v10 + v6 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v11 = *((_QWORD *)this + 3);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v2 = *((_DWORD *)this + 87);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v3 += v16 + v12 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_40;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v17 = *((_QWORD *)this + 4);
  v18 = *(unsigned __int8 *)(v17 + 23);
  v19 = v18;
  v20 = *(_QWORD *)(v17 + 8);
  if ((v18 & 0x80u) == 0)
    v21 = *(unsigned __int8 *)(v17 + 23);
  else
    v21 = v20;
  if (v21 >= 0x80)
  {
    v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21);
    v18 = *(unsigned __int8 *)(v17 + 23);
    v20 = *(_QWORD *)(v17 + 8);
    v2 = *((_DWORD *)this + 87);
    v19 = *(_BYTE *)(v17 + 23);
  }
  else
  {
    v22 = 1;
  }
  if (v19 < 0)
    v18 = v20;
  v3 += v22 + v18 + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
LABEL_49:
    v29 = *((_QWORD *)this + 6);
    v30 = *(unsigned __int8 *)(v29 + 23);
    v31 = v30;
    v32 = *(_QWORD *)(v29 + 8);
    if ((v30 & 0x80u) == 0)
      v33 = *(unsigned __int8 *)(v29 + 23);
    else
      v33 = v32;
    if (v33 >= 0x80)
    {
      v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v33);
      v30 = *(unsigned __int8 *)(v29 + 23);
      v32 = *(_QWORD *)(v29 + 8);
      v2 = *((_DWORD *)this + 87);
      v31 = *(_BYTE *)(v29 + 23);
    }
    else
    {
      v34 = 1;
    }
    if (v31 < 0)
      v30 = v32;
    v3 += v34 + v30 + 1;
    if ((v2 & 0x40) == 0)
      goto LABEL_64;
    goto LABEL_58;
  }
LABEL_40:
  v23 = *((_QWORD *)this + 5);
  v24 = *(unsigned __int8 *)(v23 + 23);
  v25 = v24;
  v26 = *(_QWORD *)(v23 + 8);
  if ((v24 & 0x80u) == 0)
    v27 = *(unsigned __int8 *)(v23 + 23);
  else
    v27 = v26;
  if (v27 >= 0x80)
  {
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27);
    v24 = *(unsigned __int8 *)(v23 + 23);
    v26 = *(_QWORD *)(v23 + 8);
    v2 = *((_DWORD *)this + 87);
    v25 = *(_BYTE *)(v23 + 23);
  }
  else
  {
    v28 = 1;
  }
  if (v25 < 0)
    v24 = v26;
  v3 += v28 + v24 + 1;
  if ((v2 & 0x20) != 0)
    goto LABEL_49;
LABEL_20:
  if ((v2 & 0x40) != 0)
  {
LABEL_58:
    v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v35 & 0x80000000) != 0)
    {
      v36 = 10;
    }
    else if (v35 >= 0x80)
    {
      v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
      v2 = *((_DWORD *)this + 87);
    }
    else
    {
      v36 = 1;
    }
    v3 += v36 + 1;
  }
LABEL_64:
  if ((v2 & 0x80) != 0)
    v4 = v3 + 2;
  else
    v4 = v3;
LABEL_67:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_115;
  if ((v2 & 0x100) != 0)
  {
    v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v37 >= 0x80)
    {
      v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
      v2 = *((_DWORD *)this + 87);
    }
    else
    {
      v38 = 1;
    }
    v4 += v38 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_70:
      if ((v2 & 0x400) == 0)
        goto LABEL_71;
      goto LABEL_85;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_70;
  }
  v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v39 >= 0x80)
  {
    v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
    v2 = *((_DWORD *)this + 87);
  }
  else
  {
    v40 = 1;
  }
  v4 += v40 + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_71:
    if ((v2 & 0x800) == 0)
      goto LABEL_72;
    goto LABEL_89;
  }
LABEL_85:
  v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
  if (v41 >= 0x80)
  {
    v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
    v2 = *((_DWORD *)this + 87);
  }
  else
  {
    v42 = 1;
  }
  v4 += v42 + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_72:
    if ((v2 & 0x1000) == 0)
      goto LABEL_73;
    goto LABEL_93;
  }
LABEL_89:
  v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if (v43 >= 0x80)
  {
    v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
    v2 = *((_DWORD *)this + 87);
  }
  else
  {
    v44 = 1;
  }
  v4 += v44 + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_73:
    if ((v2 & 0x2000) == 0)
      goto LABEL_74;
    goto LABEL_97;
  }
LABEL_93:
  v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
  if (v45 >= 0x80)
  {
    v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
    v2 = *((_DWORD *)this + 87);
  }
  else
  {
    v46 = 1;
  }
  v4 += v46 + 1;
  if ((v2 & 0x2000) == 0)
  {
LABEL_74:
    if ((v2 & 0x4000) == 0)
      goto LABEL_75;
    goto LABEL_103;
  }
LABEL_97:
  v47 = (awd::metrics::LocationAccessory_PerformanceStats *)*((_QWORD *)this + 10);
  if (!v47)
    v47 = *(awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_ + 80);
  v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerformanceStats::ByteSize(v47);
  v49 = (int)v48;
  if (v48 >= 0x80)
    v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48);
  else
    v50 = 1;
  v4 += v49 + v50 + 1;
  v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x4000) == 0)
  {
LABEL_75:
    if ((v2 & 0x8000) == 0)
      goto LABEL_115;
    goto LABEL_109;
  }
LABEL_103:
  v51 = (awd::metrics::LocationAccessory_PerformanceStats *)*((_QWORD *)this + 11);
  if (!v51)
    v51 = *(awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_ + 88);
  v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerformanceStats::ByteSize(v51);
  v53 = (int)v52;
  if (v52 >= 0x80)
    v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
  else
    v54 = 1;
  v4 += v53 + v54 + 1;
  v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x8000) != 0)
  {
LABEL_109:
    v55 = (awd::metrics::LocationAccessory_PerformanceStats *)*((_QWORD *)this + 12);
    if (!v55)
      v55 = *(awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                 + 96);
    v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerformanceStats::ByteSize(v55);
    v57 = (int)v56;
    if (v56 >= 0x80)
      v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56);
    else
      v58 = 1;
    v4 += v57 + v58 + 2;
    v2 = *((_DWORD *)this + 87);
  }
LABEL_115:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_173;
  if ((v2 & 0x10000) != 0)
  {
    v59 = (awd::metrics::LocationAccessory_PerformanceStats *)*((_QWORD *)this + 13);
    if (!v59)
      v59 = *(awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                 + 104);
    v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerformanceStats::ByteSize(v59);
    v61 = (int)v60;
    if (v60 >= 0x80)
      v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60);
    else
      v62 = 1;
    v4 += v61 + v62 + 2;
    v2 = *((_DWORD *)this + 87);
    if ((v2 & 0x20000) == 0)
    {
LABEL_118:
      if ((v2 & 0x40000) == 0)
        goto LABEL_119;
      goto LABEL_137;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_118;
  }
  v63 = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)*((_QWORD *)this + 14);
  if (!v63)
    v63 = *(awd::metrics::LocationAccessory_SpeedPerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                    + 112);
  v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_SpeedPerformanceStats::ByteSize(v63);
  v65 = (int)v64;
  if (v64 >= 0x80)
    v66 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64);
  else
    v66 = 1;
  v4 += v65 + v66 + 2;
  v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x40000) == 0)
  {
LABEL_119:
    if ((v2 & 0x80000) == 0)
      goto LABEL_120;
    goto LABEL_143;
  }
LABEL_137:
  v67 = (awd::metrics::LocationAccessory_MessageStats *)*((_QWORD *)this + 16);
  if (!v67)
    v67 = *(awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_ + 128);
  v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_MessageStats::ByteSize(v67);
  v69 = (int)v68;
  if (v68 >= 0x80)
    v70 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68);
  else
    v70 = 1;
  v4 += v69 + v70 + 2;
  v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x80000) == 0)
  {
LABEL_120:
    if ((v2 & 0x100000) == 0)
      goto LABEL_121;
    goto LABEL_149;
  }
LABEL_143:
  v71 = (awd::metrics::LocationAccessory_MessageStats *)*((_QWORD *)this + 17);
  if (!v71)
    v71 = *(awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_ + 136);
  v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_MessageStats::ByteSize(v71);
  v73 = (int)v72;
  if (v72 >= 0x80)
    v74 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72);
  else
    v74 = 1;
  v4 += v73 + v74 + 2;
  v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x100000) == 0)
  {
LABEL_121:
    if ((v2 & 0x200000) == 0)
      goto LABEL_122;
    goto LABEL_155;
  }
LABEL_149:
  v75 = (awd::metrics::LocationAccessory_MessageStats *)*((_QWORD *)this + 18);
  if (!v75)
    v75 = *(awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_ + 144);
  v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_MessageStats::ByteSize(v75);
  v77 = (int)v76;
  if (v76 >= 0x80)
    v78 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v76);
  else
    v78 = 1;
  v4 += v77 + v78 + 2;
  v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x200000) == 0)
  {
LABEL_122:
    if ((v2 & 0x400000) == 0)
      goto LABEL_123;
    goto LABEL_161;
  }
LABEL_155:
  v79 = (awd::metrics::LocationAccessory_PASCDStats *)*((_QWORD *)this + 19);
  if (!v79)
    v79 = *(awd::metrics::LocationAccessory_PASCDStats **)(awd::metrics::LocationAccessory::default_instance_ + 152);
  v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PASCDStats::ByteSize(v79);
  v81 = (int)v80;
  if (v80 >= 0x80)
    v82 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v80);
  else
    v82 = 1;
  v4 += v81 + v82 + 2;
  v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x400000) == 0)
  {
LABEL_123:
    if ((v2 & 0x800000) == 0)
      goto LABEL_173;
    goto LABEL_169;
  }
LABEL_161:
  v83 = *((_QWORD *)this + 20);
  if (!v83)
    v83 = *(_QWORD *)(awd::metrics::LocationAccessory::default_instance_ + 160);
  v84 = *(unsigned __int8 *)(v83 + 28);
  v85 = (v84 << 31 >> 31) & 9;
  if ((v84 & 2) != 0)
    v85 += 9;
  if (*(_BYTE *)(v83 + 28))
    v86 = v85;
  else
    v86 = 0;
  *(_DWORD *)(v83 + 24) = v86;
  v4 += v86 + 3;
  v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x800000) != 0)
  {
LABEL_169:
    v87 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 31);
    if (v87 >= 0x80)
    {
      v88 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v87);
      v2 = *((_DWORD *)this + 87);
    }
    else
    {
      v88 = 1;
    }
    v4 += v88 + 2;
  }
LABEL_173:
  if (!HIBYTE(v2))
    goto LABEL_205;
  if ((v2 & 0x1000000) != 0)
  {
    v89 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 42);
    if (v89 >= 0x80)
    {
      v90 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v89);
      v2 = *((_DWORD *)this + 87);
    }
    else
    {
      v90 = 1;
    }
    v4 += v90 + 2;
    if ((v2 & 0x4000000) == 0)
    {
LABEL_176:
      if ((v2 & 0x8000000) == 0)
        goto LABEL_177;
      goto LABEL_189;
    }
  }
  else if ((v2 & 0x4000000) == 0)
  {
    goto LABEL_176;
  }
  v91 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 43);
  if (v91 >= 0x80)
  {
    v92 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v91);
    v2 = *((_DWORD *)this + 87);
  }
  else
  {
    v92 = 1;
  }
  v4 += v92 + 2;
  if ((v2 & 0x8000000) == 0)
  {
LABEL_177:
    if ((v2 & 0x10000000) == 0)
      goto LABEL_178;
    goto LABEL_193;
  }
LABEL_189:
  v93 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 50);
  if (v93 >= 0x80)
  {
    v94 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v93);
    v2 = *((_DWORD *)this + 87);
  }
  else
  {
    v94 = 1;
  }
  v4 += v94 + 2;
  if ((v2 & 0x10000000) == 0)
  {
LABEL_178:
    if ((v2 & 0x40000000) == 0)
      goto LABEL_179;
    goto LABEL_197;
  }
LABEL_193:
  v95 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 51);
  if (v95 >= 0x80)
  {
    v96 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v95);
    v2 = *((_DWORD *)this + 87);
  }
  else
  {
    v96 = 1;
  }
  v4 += v96 + 2;
  if ((v2 & 0x40000000) == 0)
  {
LABEL_179:
    if ((v2 & 0x80000000) == 0)
      goto LABEL_205;
    goto LABEL_201;
  }
LABEL_197:
  v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 58);
  if (v97 >= 0x80)
  {
    v98 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v97);
    v2 = *((_DWORD *)this + 87);
  }
  else
  {
    v98 = 1;
  }
  v4 += v98 + 2;
  if ((v2 & 0x80000000) != 0)
  {
LABEL_201:
    v99 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 59);
    if (v99 >= 0x80)
      v100 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v99);
    else
      v100 = 1;
    v4 += v100 + 2;
  }
LABEL_205:
  v101 = *((_DWORD *)this + 88);
  if (!(_BYTE)v101)
    goto LABEL_248;
  if ((v101 & 1) != 0)
  {
    v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 66);
    if (v102 >= 0x80)
    {
      v103 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v102);
      v101 = *((_DWORD *)this + 88);
    }
    else
    {
      v103 = 1;
    }
    v4 += v103 + 2;
    if ((v101 & 4) == 0)
    {
LABEL_208:
      if ((v101 & 8) == 0)
        goto LABEL_209;
      goto LABEL_222;
    }
  }
  else if ((v101 & 4) == 0)
  {
    goto LABEL_208;
  }
  v104 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 67);
  if (v104 >= 0x80)
  {
    v105 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v104);
    v101 = *((_DWORD *)this + 88);
  }
  else
  {
    v105 = 1;
  }
  v4 += v105 + 2;
  if ((v101 & 8) == 0)
  {
LABEL_209:
    if ((v101 & 0x10) == 0)
      goto LABEL_210;
    goto LABEL_228;
  }
LABEL_222:
  v106 = (awd::metrics::LocationAccessory_DeviceChargingStats *)*((_QWORD *)this + 34);
  if (!v106)
    v106 = *(awd::metrics::LocationAccessory_DeviceChargingStats **)(awd::metrics::LocationAccessory::default_instance_
                                                                   + 272);
  v107 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_DeviceChargingStats::ByteSize(v106);
  v108 = (int)v107;
  if (v107 >= 0x80)
    v109 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v107);
  else
    v109 = 1;
  v4 += v108 + v109 + 2;
  v101 = *((_DWORD *)this + 88);
  if ((v101 & 0x10) == 0)
  {
LABEL_210:
    if ((v101 & 0x20) == 0)
      goto LABEL_211;
    goto LABEL_234;
  }
LABEL_228:
  v110 = (awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)this + 35);
  if (!v110)
    v110 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory::default_instance_ + 280);
  v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v110);
  v112 = (int)v111;
  if (v111 >= 0x80)
    v113 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v111);
  else
    v113 = 1;
  v4 += v112 + v113 + 2;
  v101 = *((_DWORD *)this + 88);
  if ((v101 & 0x20) == 0)
  {
LABEL_211:
    if ((v101 & 0x40) == 0)
      goto LABEL_212;
    goto LABEL_240;
  }
LABEL_234:
  v114 = (awd::metrics::LocationAccessory_Statistics *)*((_QWORD *)this + 36);
  if (!v114)
    v114 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory::default_instance_ + 288);
  v115 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v114);
  v116 = (int)v115;
  if (v115 >= 0x80)
    v117 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v115);
  else
    v117 = 1;
  v4 += v116 + v117 + 2;
  v101 = *((_DWORD *)this + 88);
  if ((v101 & 0x40) == 0)
  {
LABEL_212:
    if ((v101 & 0x80) == 0)
      goto LABEL_248;
    goto LABEL_244;
  }
LABEL_240:
  v118 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 74);
  if (v118 >= 0x80)
  {
    v119 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v118);
    v101 = *((_DWORD *)this + 88);
  }
  else
  {
    v119 = 1;
  }
  v4 += v119 + 2;
  if ((v101 & 0x80) != 0)
  {
LABEL_244:
    v120 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 75);
    if (v120 >= 0x80)
    {
      v121 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v120) + 2;
      v101 = *((_DWORD *)this + 88);
    }
    else
    {
      v121 = 3;
    }
    v4 += v121;
  }
LABEL_248:
  if ((v101 & 0x1FE00) != 0)
  {
    if ((v101 & 0x200) != 0)
    {
      v122 = *((_QWORD *)this + 41);
      v123 = *(unsigned __int8 *)(v122 + 23);
      v124 = v123;
      v125 = *(_QWORD *)(v122 + 8);
      if ((v123 & 0x80u) == 0)
        v126 = *(unsigned __int8 *)(v122 + 23);
      else
        v126 = v125;
      if (v126 >= 0x80)
      {
        v127 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v126);
        v123 = *(unsigned __int8 *)(v122 + 23);
        v125 = *(_QWORD *)(v122 + 8);
        v101 = *((_DWORD *)this + 88);
        v124 = *(_BYTE *)(v122 + 23);
      }
      else
      {
        v127 = 1;
      }
      if (v124 < 0)
        v123 = v125;
      v4 += v127 + v123 + 2;
    }
    if ((v101 & 0x400) != 0)
    {
      v128 = *((_QWORD *)this + 42);
      v129 = *(unsigned __int8 *)(v128 + 23);
      v130 = v129;
      v131 = *(_QWORD *)(v128 + 8);
      if ((v129 & 0x80u) == 0)
        v132 = *(unsigned __int8 *)(v128 + 23);
      else
        v132 = v131;
      if (v132 >= 0x80)
      {
        v133 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v132);
        v129 = *(unsigned __int8 *)(v128 + 23);
        v131 = *(_QWORD *)(v128 + 8);
        v130 = *(_BYTE *)(v128 + 23);
      }
      else
      {
        v133 = 1;
      }
      if (v130 < 0)
        v129 = v131;
      v4 += v133 + v129 + 2;
    }
  }
  v134 = *((_DWORD *)this + 46);
  v135 = v4 + 2 * v134;
  if (v134 >= 1)
  {
    v136 = 0;
    do
    {
      v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_LocationAppRunningTime::ByteSize(*(awd::metrics::LocationAccessory_LocationAppRunningTime **)(*((_QWORD *)this + 22) + 8 * v136));
      v138 = (int)v137;
      if (v137 >= 0x80)
        v139 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v137);
      else
        v139 = 1;
      v135 += v138 + v139;
      ++v136;
    }
    while (v136 < *((int *)this + 46));
  }
  v140 = *((_DWORD *)this + 54);
  v141 = v135 + 2 * v140;
  if (v140 >= 1)
  {
    v142 = 0;
    do
    {
      v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_NavDynamicsHistogram::ByteSize(*(awd::metrics::LocationAccessory_NavDynamicsHistogram **)(*((_QWORD *)this + 26) + 8 * v142));
      v144 = (int)v143;
      if (v143 >= 0x80)
        v145 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v143);
      else
        v145 = 1;
      v141 += v144 + v145;
      ++v142;
    }
    while (v142 < *((int *)this + 54));
  }
  v146 = *((_DWORD *)this + 62);
  v147 = v141 + 2 * v146;
  if (v146 >= 1)
  {
    v148 = 0;
    do
    {
      v149 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::ByteSize(*(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram **)(*((_QWORD *)this + 30) + 8 * v148));
      v150 = (int)v149;
      if (v149 >= 0x80)
        v151 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v149);
      else
        v151 = 1;
      v147 += v150 + v151;
      ++v148;
    }
    while (v148 < *((int *)this + 62));
  }
  v152 = *((_DWORD *)this + 78);
  v153 = (v147 + 2 * v152);
  if (v152 >= 1)
  {
    v154 = 0;
    do
    {
      v155 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_MessageHistogram::ByteSize(*(awd::metrics::LocationAccessory_MessageHistogram **)(*((_QWORD *)this + 38) + 8 * v154));
      v156 = (int)v155;
      if (v155 >= 0x80)
        v157 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v155);
      else
        v157 = 1;
      v153 = (v156 + v153 + v157);
      ++v154;
    }
    while (v154 < *((int *)this + 78));
  }
  *((_DWORD *)this + 86) = v153;
  return v153;
}

void awd::metrics::LocationAccessory::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationAccessory::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory::CopyFrom(awd::metrics::LocationAccessory *this, const awd::metrics::LocationAccessory *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationAccessory::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory::IsInitialized(awd::metrics::LocationAccessory *this)
{
  return 1;
}

uint64_t awd::metrics::LocationAccessory::Swap(uint64_t this, awd::metrics::LocationAccessory *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a2 != (awd::metrics::LocationAccessory *)this)
  {
    v3 = this;
    v4 = *(_QWORD *)(this + 8);
    v5 = *(_QWORD *)(this + 16);
    v6 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v6;
    *((_QWORD *)a2 + 1) = v4;
    *((_QWORD *)a2 + 2) = v5;
    v7 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v7;
    v8 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v8;
    v9 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v9;
    v10 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v10;
    LOBYTE(v10) = *(_BYTE *)(this + 60);
    *(_BYTE *)(this + 60) = *((_BYTE *)a2 + 60);
    *((_BYTE *)a2 + 60) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 76);
    *(_DWORD *)(this + 76) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 120);
    *(_DWORD *)(this + 120) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v10;
    v11 = *(_QWORD *)(this + 80);
    *(_QWORD *)(this + 80) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v11;
    v12 = *(_QWORD *)(this + 88);
    *(_QWORD *)(this + 88) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v12;
    v13 = *(_QWORD *)(this + 96);
    *(_QWORD *)(this + 96) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v13;
    v14 = *(_QWORD *)(this + 104);
    *(_QWORD *)(this + 104) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v14;
    v15 = *(_QWORD *)(this + 112);
    *(_QWORD *)(this + 112) = *((_QWORD *)a2 + 14);
    *((_QWORD *)a2 + 14) = v15;
    v16 = *(_QWORD *)(this + 128);
    *(_QWORD *)(this + 128) = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v16;
    v17 = *(_QWORD *)(this + 136);
    *(_QWORD *)(this + 136) = *((_QWORD *)a2 + 17);
    *((_QWORD *)a2 + 17) = v17;
    v18 = *(_QWORD *)(this + 144);
    *(_QWORD *)(this + 144) = *((_QWORD *)a2 + 18);
    *((_QWORD *)a2 + 18) = v18;
    v19 = *(_QWORD *)(this + 152);
    *(_QWORD *)(this + 152) = *((_QWORD *)a2 + 19);
    *((_QWORD *)a2 + 19) = v19;
    v20 = *(_QWORD *)(this + 160);
    *(_QWORD *)(this + 160) = *((_QWORD *)a2 + 20);
    *((_QWORD *)a2 + 20) = v20;
    LODWORD(v20) = *(_DWORD *)(this + 124);
    *(_DWORD *)(this + 124) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v20;
    LODWORD(v20) = *(_DWORD *)(this + 168);
    *(_DWORD *)(this + 168) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v20;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v21 = *(_DWORD *)(v3 + 172);
    *(_DWORD *)(v3 + 172) = *((_DWORD *)a2 + 43);
    *((_DWORD *)a2 + 43) = v21;
    v22 = *(_DWORD *)(v3 + 200);
    *(_DWORD *)(v3 + 200) = *((_DWORD *)a2 + 50);
    *((_DWORD *)a2 + 50) = v22;
    v23 = *(_DWORD *)(v3 + 204);
    *(_DWORD *)(v3 + 204) = *((_DWORD *)a2 + 51);
    *((_DWORD *)a2 + 51) = v23;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v24 = *(_DWORD *)(v3 + 232);
    *(_DWORD *)(v3 + 232) = *((_DWORD *)a2 + 58);
    *((_DWORD *)a2 + 58) = v24;
    v25 = *(_DWORD *)(v3 + 236);
    *(_DWORD *)(v3 + 236) = *((_DWORD *)a2 + 59);
    *((_DWORD *)a2 + 59) = v25;
    v26 = *(_DWORD *)(v3 + 264);
    *(_DWORD *)(v3 + 264) = *((_DWORD *)a2 + 66);
    *((_DWORD *)a2 + 66) = v26;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v27 = *(_DWORD *)(v3 + 268);
    *(_DWORD *)(v3 + 268) = *((_DWORD *)a2 + 67);
    *((_DWORD *)a2 + 67) = v27;
    v28 = *(_QWORD *)(v3 + 272);
    *(_QWORD *)(v3 + 272) = *((_QWORD *)a2 + 34);
    *((_QWORD *)a2 + 34) = v28;
    v29 = *(_QWORD *)(v3 + 280);
    *(_QWORD *)(v3 + 280) = *((_QWORD *)a2 + 35);
    *((_QWORD *)a2 + 35) = v29;
    v30 = *(_QWORD *)(v3 + 288);
    *(_QWORD *)(v3 + 288) = *((_QWORD *)a2 + 36);
    *((_QWORD *)a2 + 36) = v30;
    LODWORD(v30) = *(_DWORD *)(v3 + 296);
    *(_DWORD *)(v3 + 296) = *((_DWORD *)a2 + 74);
    *((_DWORD *)a2 + 74) = v30;
    LODWORD(v30) = *(_DWORD *)(v3 + 300);
    *(_DWORD *)(v3 + 300) = *((_DWORD *)a2 + 75);
    *((_DWORD *)a2 + 75) = v30;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v31 = *(_QWORD *)(v3 + 328);
    *(_QWORD *)(v3 + 328) = *((_QWORD *)a2 + 41);
    *((_QWORD *)a2 + 41) = v31;
    v32 = *(_QWORD *)(v3 + 336);
    *(_QWORD *)(v3 + 336) = *((_QWORD *)a2 + 42);
    *((_QWORD *)a2 + 42) = v32;
    LODWORD(v32) = *(_DWORD *)(v3 + 348);
    *(_DWORD *)(v3 + 348) = *((_DWORD *)a2 + 87);
    *((_DWORD *)a2 + 87) = v32;
    LODWORD(v32) = *(_DWORD *)(v3 + 352);
    *(_DWORD *)(v3 + 352) = *((_DWORD *)a2 + 88);
    *((_DWORD *)a2 + 88) = v32;
    LODWORD(v32) = *(_DWORD *)(v3 + 344);
    *(_DWORD *)(v3 + 344) = *((_DWORD *)a2 + 86);
    *((_DWORD *)a2 + 86) = v32;
  }
  return this;
}

_QWORD *awd::metrics::LocationAccessory::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory");
}

double awd::metrics::BaroAltitudeCalibrationInfo::SharedCtor(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = v1;
  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

awd::metrics::BaroAltitudeCalibrationInfo *awd::metrics::BaroAltitudeCalibrationInfo::BaroAltitudeCalibrationInfo(awd::metrics::BaroAltitudeCalibrationInfo *this, const awd::metrics::BaroAltitudeCalibrationInfo *a2)
{
  *(_QWORD *)this = &off_24D990B80;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 7) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::BaroAltitudeCalibrationInfo::MergeFrom(this, a2);
  return this;
}

void sub_218A39B48(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::BaroAltitudeCalibrationInfo::MergeFrom(awd::metrics::BaroAltitudeCalibrationInfo *this, const awd::metrics::BaroAltitudeCalibrationInfo *a2)
{
  float result;
  int v5;
  int v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  v5 = *((_DWORD *)a2 + 15);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 15) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 15) |= 2u;
  v9 = (std::string *)*((_QWORD *)this + 2);
  if (v9 == (std::string *)MEMORY[0x24BEDD958])
  {
    v9 = (std::string *)operator new();
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v9;
  }
  std::string::operator=(v9, v8);
  v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 15) |= 4u;
  *((_DWORD *)this + 6) = v10;
  v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 15) |= 8u;
  *((_DWORD *)this + 7) = v11;
  v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_26:
    v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 15) |= 0x20u;
    *((_DWORD *)this + 9) = v13;
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 15) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 0x20) != 0)
    goto LABEL_26;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_27:
  v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 15) |= 0x40u;
  *((_DWORD *)this + 10) = v14;
  v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 15) |= 0x80u;
    *((_DWORD *)this + 11) = v6;
    v5 = *((_DWORD *)a2 + 15);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      result = *((float *)a2 + 12);
      *((_DWORD *)this + 15) |= 0x100u;
      *((float *)this + 12) = result;
      v5 = *((_DWORD *)a2 + 15);
    }
    if ((v5 & 0x200) != 0)
    {
      result = *((float *)a2 + 13);
      *((_DWORD *)this + 15) |= 0x200u;
      *((float *)this + 13) = result;
    }
  }
  return result;
}

void sub_218A39D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::BaroAltitudeCalibrationInfo::~BaroAltitudeCalibrationInfo(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  *(_QWORD *)this = &off_24D990B80;
  awd::metrics::BaroAltitudeCalibrationInfo::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990B80;
  awd::metrics::BaroAltitudeCalibrationInfo::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D990B80;
  awd::metrics::BaroAltitudeCalibrationInfo::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::default_instance(awd::metrics::BaroAltitudeCalibrationInfo *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::BaroAltitudeCalibrationInfo::default_instance_;
  if (!awd::metrics::BaroAltitudeCalibrationInfo::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::BaroAltitudeCalibrationInfo::default_instance_;
  }
  return result;
}

double awd::metrics::BaroAltitudeCalibrationInfo::New(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D990B80;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 56) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 60);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 40) = 0;
    v1 = *(_DWORD *)(this + 60);
  }
  if ((v1 & 0xFF00) != 0)
    *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::MergePartialFromCodedStream(awd::metrics::BaroAltitudeCalibrationInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  int v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t result;
  _QWORD *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  unsigned int v35;
  unsigned int v36;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 24);
  v6 = (unsigned int *)((char *)this + 28);
  v7 = (unsigned int *)((char *)this + 32);
  v8 = (unsigned int *)((char *)this + 36);
  v9 = (unsigned int *)((char *)this + 40);
  v10 = (unsigned int *)((char *)this + 44);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
        }
        v17 = *((_DWORD *)this + 15) | 1;
        *((_DWORD *)this + 15) = v17;
        if ((unint64_t)v16 < v14 && *v16 == 18)
        {
          *((_QWORD *)a2 + 1) = v16 + 1;
          goto LABEL_38;
        }
        continue;
      case 2u:
        v13 = TagFallback & 7;
        if (v13 != 2)
          goto LABEL_30;
        v17 = *((_DWORD *)this + 15);
LABEL_38:
        *((_DWORD *)this + 15) = v17 | 2;
        if (*((_QWORD *)this + 2) == MEMORY[0x24BEDD958])
        {
          v26 = (_QWORD *)operator new();
          v26[1] = 0;
          v26[2] = 0;
          *v26 = 0;
          *((_QWORD *)this + 2) = v26;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v27 >= v18 || *v27 != 24)
          continue;
        v19 = v27 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_44:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v19;
          v28 = v19 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 15) |= 4u;
        if ((unint64_t)v28 >= v18 || *v28 != 32)
          continue;
        v20 = v28 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_52:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v20;
          v29 = v20 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 15) |= 8u;
        if ((unint64_t)v29 >= v18 || *v29 != 40)
          continue;
        v21 = v29 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_60:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v21;
          v30 = v21 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 15) |= 0x10u;
        if ((unint64_t)v30 >= v18 || *v30 != 48)
          continue;
        v22 = v30 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_68:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v22;
          v31 = v22 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 15) |= 0x20u;
        if ((unint64_t)v31 >= v18 || *v31 != 56)
          continue;
        v23 = v31 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_76:
        if ((unint64_t)v23 >= v18 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v23;
          v32 = v23 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 15) |= 0x40u;
        if ((unint64_t)v32 >= v18 || *v32 != 64)
          continue;
        v24 = v32 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_84:
        if ((unint64_t)v24 >= v18 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v24;
          v33 = v24 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 15) |= 0x80u;
        if ((unint64_t)v33 >= v18 || *v33 != 77)
          continue;
        *((_QWORD *)a2 + 1) = v33 + 1;
LABEL_92:
        v36 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v36) & 1) == 0)
          return 0;
        *((_DWORD *)this + 12) = v36;
        *((_DWORD *)this + 15) |= 0x100u;
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 != 85)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_96:
        v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v35) & 1) != 0)
        {
          *((_DWORD *)this + 13) = v35;
          *((_DWORD *)this + 15) |= 0x200u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_44;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_52;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_60;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_68;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_76;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_84;
      case 9u:
        v13 = TagFallback & 7;
        if (v13 == 5)
          goto LABEL_92;
        goto LABEL_30;
      case 0xAu:
        v13 = TagFallback & 7;
        if (v13 != 5)
          goto LABEL_30;
        goto LABEL_96;
      default:
        v13 = TagFallback & 7;
LABEL_30:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(float *)(v5 + 52), a3);
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 48), a3);
  if ((*(_DWORD *)(v5 + 60) & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(float *)(v5 + 52), a3);
  return this;
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::ByteSize(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  unsigned int v22;
  uint64_t result;

  v2 = *((_DWORD *)this + 15);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_47;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 15);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 2);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 15);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 += v9 + v5 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 15);
    }
    else
    {
      v11 = 2;
    }
    v3 += v11;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_31;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_35;
  }
LABEL_31:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_21;
    goto LABEL_39;
  }
LABEL_35:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_39:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v19 = 2;
  }
  v3 += v19;
  if ((v2 & 0x80) != 0)
  {
LABEL_43:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      v2 = *((_DWORD *)this + 15);
    }
    else
    {
      v21 = 2;
    }
    v3 += v21;
  }
LABEL_47:
  v22 = v3 + 5;
  if ((v2 & 0x100) == 0)
    v22 = v3;
  if ((v2 & 0x200) != 0)
    v22 += 5;
  if ((v2 & 0xFF00) != 0)
    result = v22;
  else
    result = v3;
  *((_DWORD *)this + 14) = result;
  return result;
}

float awd::metrics::BaroAltitudeCalibrationInfo::CheckTypeAndMergeFrom(awd::metrics::BaroAltitudeCalibrationInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::BaroAltitudeCalibrationInfo::MergeFrom(this, lpsrc);
}

float awd::metrics::BaroAltitudeCalibrationInfo::CopyFrom(awd::metrics::BaroAltitudeCalibrationInfo *this, const awd::metrics::BaroAltitudeCalibrationInfo *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::BaroAltitudeCalibrationInfo *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::BaroAltitudeCalibrationInfo::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::IsInitialized(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  return 1;
}

float awd::metrics::BaroAltitudeCalibrationInfo::Swap(awd::metrics::BaroAltitudeCalibrationInfo *this, awd::metrics::BaroAltitudeCalibrationInfo *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    v5 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    result = *((float *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((float *)a2 + 13) = result;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
  }
  return result;
}

_QWORD *awd::metrics::BaroAltitudeCalibrationInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.BaroAltitudeCalibrationInfo");
}

uint64_t awd::metrics::LocationServicesState::GetCachedSize(awd::metrics::LocationServicesState *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::LocationServicesApproval::GetCachedSize(awd::metrics::LocationServicesApproval *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationUpdateSession::GetCachedSize(awd::metrics::LocationUpdateSession *this)
{
  return *((unsigned int *)this + 33);
}

uint64_t awd::metrics::LocationMonitorSession::GetCachedSize(awd::metrics::LocationMonitorSession *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationMonitorTrigger::GetCachedSize(awd::metrics::LocationMonitorTrigger *this)
{
  return *((unsigned int *)this + 15);
}

uint64_t awd::metrics::LocationNetworkQueries::GetCachedSize(awd::metrics::LocationNetworkQueries *this)
{
  return *((unsigned int *)this + 18);
}

uint64_t awd::metrics::LocationWifiUsage::GetCachedSize(awd::metrics::LocationWifiUsage *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationEmergencySession::GetCachedSize(awd::metrics::LocationEmergencySession *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::GetCachedSize(awd::metrics::LocationEmergencySessionStatistics *this)
{
  return *((unsigned int *)this + 117);
}

uint64_t awd::metrics::LocationMapMatching::GetCachedSize(awd::metrics::LocationMapMatching *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationRealTimeHarvest::GetCachedSize(awd::metrics::LocationRealTimeHarvest *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::GetCachedSize(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::CompassSession_Rotation::GetCachedSize(awd::metrics::CompassSession_Rotation *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::CompassSession::GetCachedSize(awd::metrics::CompassSession *this)
{
  return *((unsigned int *)this + 52);
}

uint64_t awd::metrics::LocationCompassSaturations::GetCachedSize(awd::metrics::LocationCompassSaturations *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t awd::metrics::MotionState::GetCachedSize(awd::metrics::MotionState *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::MotionTrigger::GetCachedSize(awd::metrics::MotionTrigger *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t awd::metrics::MotionGyroMiniCal::GetCachedSize(awd::metrics::MotionGyroMiniCal *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t awd::metrics::MotionDropDetection::GetCachedSize(awd::metrics::MotionDropDetection *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::MotionPedometerCalibration::GetCachedSize(awd::metrics::MotionPedometerCalibration *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::GetCachedSize(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::MotionGyroBiasEstimation::GetCachedSize(awd::metrics::MotionGyroBiasEstimation *this)
{
  return *((unsigned int *)this + 18);
}

uint64_t awd::metrics::MotionFitnessSession::GetCachedSize(awd::metrics::MotionFitnessSession *this)
{
  return *((unsigned int *)this + 112);
}

uint64_t awd::metrics::MotionFitnessAllDay::GetCachedSize(awd::metrics::MotionFitnessAllDay *this)
{
  return *((unsigned int *)this + 216);
}

uint64_t awd::metrics::MotionPressureTemperature::GetCachedSize(awd::metrics::MotionPressureTemperature *this)
{
  return *((unsigned int *)this + 26);
}

uint64_t awd::metrics::MotionElevationAllDay::GetCachedSize(awd::metrics::MotionElevationAllDay *this)
{
  return *((unsigned int *)this + 82);
}

uint64_t awd::metrics::MotionPressureStats::GetCachedSize(awd::metrics::MotionPressureStats *this)
{
  return *((unsigned int *)this + 38);
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::GetCachedSize(awd::metrics::MotionNoGPSRunAllDay *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::MotionFitnessDaily::GetCachedSize(awd::metrics::MotionFitnessDaily *this)
{
  return *((unsigned int *)this + 24);
}

uint64_t awd::metrics::MotionFitnessPedometer::GetCachedSize(awd::metrics::MotionFitnessPedometer *this)
{
  return *((unsigned int *)this + 22);
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::GetCachedSize(awd::metrics::MotionFitnessStrideCalibration *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::GetCachedSize(awd::metrics::MotionFitnessAccelSampleRate *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t awd::metrics::MotionBarometerCalibration::GetCachedSize(awd::metrics::MotionBarometerCalibration *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::MotionGyroDaily::GetCachedSize(awd::metrics::MotionGyroDaily *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t awd::metrics::MotionSOSEvent::GetCachedSize(awd::metrics::MotionSOSEvent *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationBatteryState::GetCachedSize(awd::metrics::LocationBatteryState *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t awd::metrics::LocationNavigationSession::GetCachedSize(awd::metrics::LocationNavigationSession *this)
{
  return *((unsigned int *)this + 23);
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::GetCachedSize(awd::metrics::LocationMainHarvesterMetrics *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::GetCachedSize(awd::metrics::LocationSubHarvesterUploadAttempt *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::GetCachedSize(awd::metrics::LocationSubHarvesterMetrics *this)
{
  return *((unsigned int *)this + 22);
}

uint64_t awd::metrics::LocationBeaconMonitorSession::GetCachedSize(awd::metrics::LocationBeaconMonitorSession *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::GetCachedSize(awd::metrics::LocationBeaconMonitorTrigger *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationBeaconRangingSession::GetCachedSize(awd::metrics::LocationBeaconRangingSession *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationGPSSessionStatistics::GetCachedSize(awd::metrics::LocationGPSSessionStatistics *this)
{
  return *((unsigned int *)this + 339);
}

uint64_t awd::metrics::LocationCellTileUsage::GetCachedSize(awd::metrics::LocationCellTileUsage *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::GetCachedSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::GetCachedSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::GetCachedSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::GetCachedSize(awd::metrics::LocationGnssSWRecoveryStatistics *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::LocationVisibilityAssertion::GetCachedSize(awd::metrics::LocationVisibilityAssertion *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::GetCachedSize(awd::metrics::LocationPhoneNumberAvailability *this)
{
  return *((unsigned int *)this + 13);
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::GetCachedSize(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationMobileAssetStatistics::GetCachedSize(awd::metrics::LocationMobileAssetStatistics *this)
{
  return *((unsigned int *)this + 26);
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::GetCachedSize(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  return *((unsigned int *)this + 27);
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::GetCachedSize(awd::metrics::LocationAccessory_ChargingTypeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::GetCachedSize(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationAccessory_Statistics::GetCachedSize(awd::metrics::LocationAccessory_Statistics *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::GetCachedSize(awd::metrics::LocationAccessory_PerfRangeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::GetCachedSize(awd::metrics::LocationAccessory_PerformanceStats *this)
{
  return *((unsigned int *)this + 23);
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::GetCachedSize(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::GetCachedSize(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::GetCachedSize(awd::metrics::LocationAccessory_LatencyRangeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::GetCachedSize(awd::metrics::LocationAccessory_MessageHistogram *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationAccessory_MessageStats::GetCachedSize(awd::metrics::LocationAccessory_MessageStats *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::GetCachedSize(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::GetCachedSize(awd::metrics::LocationAccessory_LocationAppRunningTime *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::GetCachedSize(awd::metrics::LocationAccessory_NavDynamicsHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::GetCachedSize(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
  return *((unsigned int *)this + 19);
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::GetCachedSize(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::GetCachedSize(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::GetCachedSize(awd::metrics::LocationAccessory_PASCDStats *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationAccessory_Coordinate::GetCachedSize(awd::metrics::LocationAccessory_Coordinate *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t awd::metrics::LocationAccessory::GetCachedSize(awd::metrics::LocationAccessory *this)
{
  return *((unsigned int *)this + 86);
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::GetCachedSize(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  unsigned __int8 *v2;

  v2 = (unsigned __int8 *)*((_QWORD *)this + 1);
  if ((unint64_t)v2 >= *((_QWORD *)this + 2) || (char)*v2 < 0)
    return wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, a2);
  *a2 = *v2;
  *((_QWORD *)this + 1) = v2 + 1;
  return 1;
}

_DWORD *wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(_DWORD *result, int a2)
{
  int v2;
  _DWORD *v3;
  const void *v4;
  int v5;

  v2 = result[3];
  if (v2 < a2)
  {
    v3 = result;
    v4 = *(const void **)result;
    v5 = 2 * v2;
    if (v5 <= a2)
      v5 = a2;
    if (v5 <= 4)
      v5 = 4;
    result[3] = v5;
    result = (_DWORD *)operator new[]();
    *(_QWORD *)v3 = result;
    if (v4)
    {
      memcpy(result, v4, 4 * (int)v3[2]);
      JUMPOUT(0x219A1DC64);
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (*(int *)(result + 8) >= 1)
  {
    v1 = 0;
    do
    {
      v2 = *(_QWORD *)(*(_QWORD *)result + 8 * v1);
      if (*(char *)(v2 + 23) < 0)
      {
        **(_BYTE **)v2 = 0;
        *(_QWORD *)(v2 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v2 = 0;
        *(_BYTE *)(v2 + 23) = 0;
      }
      ++v1;
    }
    while (v1 < *(int *)(result + 8));
  }
  *(_DWORD *)(result + 8) = 0;
  return result;
}

_QWORD *std::string::basic_string[abi:ne180100]<0>(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:ne180100]();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("basic_string");
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_24D98DFC0, MEMORY[0x24BEDAAF0]);
}

void sub_218A3AE20(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8B8] + 16);
  return result;
}

_DWORD *wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(_DWORD *result, int a2)
{
  int v2;
  _DWORD *v3;
  const void *v4;
  int v5;

  v2 = result[3];
  if (v2 < a2)
  {
    v3 = result;
    v4 = *(const void **)result;
    v5 = 2 * v2;
    if (v5 <= a2)
      v5 = a2;
    if (v5 <= 4)
      v5 = 4;
    result[3] = v5;
    result = (_DWORD *)operator new[]();
    *(_QWORD *)v3 = result;
    if (v4)
    {
      memcpy(result, v4, 4 * (int)v3[2]);
      JUMPOUT(0x219A1DC64);
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(int *a1)
{
  uint64_t v2;
  uint64_t result;

  if (a1[3] >= 1)
  {
    v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < a1[3]);
  }
  result = *(_QWORD *)a1;
  if (*(_QWORD *)a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

_DWORD *wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(_DWORD *result, int a2)
{
  int v2;
  _DWORD *v3;
  const void *v4;
  int v5;

  v2 = result[3];
  if (v2 < a2)
  {
    v3 = result;
    v4 = *(const void **)result;
    v5 = 2 * v2;
    if (v5 <= a2)
      v5 = a2;
    if (v5 <= 4)
      v5 = 4;
    result[3] = v5;
    result = (_DWORD *)operator new[]();
    *(_QWORD *)v3 = result;
    if (v4)
    {
      memcpy(result, v4, 4 * (int)v3[2]);
      JUMPOUT(0x219A1DC64);
    }
  }
  return result;
}

_DWORD *wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve(_DWORD *result, int a2)
{
  int v2;
  _DWORD *v3;
  const void *v4;
  int v5;

  v2 = result[3];
  if (v2 < a2)
  {
    v3 = result;
    v4 = *(const void **)result;
    v5 = 2 * v2;
    if (v5 <= a2)
      v5 = a2;
    if (v5 <= 4)
      v5 = 4;
    result[3] = v5;
    result = (_DWORD *)operator new[]();
    *(_QWORD *)v3 = result;
    if (v4)
    {
      memcpy(result, v4, 8 * (int)v3[2]);
      JUMPOUT(0x219A1DC64);
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationBatteryState>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSubHarvesterUploadAttempt>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MotionActivityData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MovingStateData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MountedStateData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerStateData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChargerTypeData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ThermalLevelData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSForceOffReason>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSOnOffState>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_ChargingTypeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LatencyRangeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDTransmissionHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDSampleSizeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LocationAppRunningTime>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NavDynamicsHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_MessageHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

void OUTLINED_FUNCTION_0(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
  __assert_rtn(a1, a2, 348, a4);
}

void OUTLINED_FUNCTION_1()
{
  JUMPOUT(0x219A1DC64);
}

uint64_t awd::metrics::protobuf_ShutdownFile_LocationAlsCacheTiles_2eproto(awd::metrics *this)
{
  uint64_t result;

  if (awd::metrics::LocationTilesUsage::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationTilesUsage::default_instance_ + 8))(awd::metrics::LocationTilesUsage::default_instance_);
  if (awd::metrics::LocationALSCacheUsage::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationALSCacheUsage::default_instance_ + 8))(awd::metrics::LocationALSCacheUsage::default_instance_);
  if (awd::metrics::LocationALSNetworkUsage::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationALSNetworkUsage::default_instance_ + 8))(awd::metrics::LocationALSNetworkUsage::default_instance_);
  if (awd::metrics::LocationSessionDay::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationSessionDay::default_instance_ + 8))(awd::metrics::LocationSessionDay::default_instance_);
  if (awd::metrics::LocationTileFileUsage::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationTileFileUsage::default_instance_ + 8))(awd::metrics::LocationTileFileUsage::default_instance_);
  if (awd::metrics::LocationTileFile::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationTileFile::default_instance_ + 8))(awd::metrics::LocationTileFile::default_instance_);
  if (awd::metrics::LocationWifiAPLocationProviderSession::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationWifiAPLocationProviderSession::default_instance_
                                    + 8))(awd::metrics::LocationWifiAPLocationProviderSession::default_instance_);
  result = awd::metrics::LocationWifiTileSync::default_instance_;
  if (awd::metrics::LocationWifiTileSync::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationWifiTileSync::default_instance_ + 8))(awd::metrics::LocationWifiTileSync::default_instance_);
  return result;
}

void awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(awd::metrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(void)::already_here & 1) == 0)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(void)::already_here = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"codegen/cpp/LocationAlsCacheTiles.pb.cc", a4);
    v4 = operator new();
    *(_QWORD *)v4 = &off_24D9914B0;
    *(_QWORD *)(v4 + 8) = 0;
    *(_DWORD *)(v4 + 16) = 0;
    awd::metrics::LocationTilesUsage::default_instance_ = v4;
    v5 = operator new();
    *(_QWORD *)v5 = &off_24D991528;
    *(_OWORD *)(v5 + 8) = 0u;
    *(_OWORD *)(v5 + 24) = 0u;
    *(_QWORD *)(v5 + 40) = 0;
    awd::metrics::LocationALSCacheUsage::default_instance_ = v5;
    v6 = operator new();
    *(_QWORD *)v6 = &off_24D9915A0;
    *(_OWORD *)(v6 + 8) = 0u;
    *(_OWORD *)(v6 + 24) = 0u;
    *(_OWORD *)(v6 + 40) = 0u;
    *(_OWORD *)(v6 + 56) = 0u;
    awd::metrics::LocationALSNetworkUsage::default_instance_ = v6;
    v7 = operator new();
    *(_QWORD *)v7 = &off_24D991618;
    *(_OWORD *)(v7 + 8) = 0u;
    *(_OWORD *)(v7 + 24) = 0u;
    *(_OWORD *)(v7 + 40) = 0u;
    *(_OWORD *)(v7 + 56) = 0u;
    *(_OWORD *)(v7 + 68) = 0u;
    awd::metrics::LocationSessionDay::default_instance_ = v7;
    v8 = operator new();
    *(_QWORD *)v8 = &off_24D991690;
    *(_OWORD *)(v8 + 8) = 0u;
    *(_OWORD *)(v8 + 24) = 0u;
    *(_OWORD *)(v8 + 40) = 0u;
    *(_OWORD *)(v8 + 56) = 0u;
    *(_OWORD *)(v8 + 72) = 0u;
    *(_OWORD *)(v8 + 88) = 0u;
    *(_OWORD *)(v8 + 104) = 0u;
    *(_OWORD *)(v8 + 120) = 0u;
    *(_QWORD *)(v8 + 136) = 0;
    awd::metrics::LocationTileFileUsage::default_instance_ = v8;
    v9 = operator new();
    *(_QWORD *)(v9 + 40) = 0;
    *(_DWORD *)(v9 + 48) = 0;
    *(_QWORD *)v9 = &off_24D991708;
    *(_QWORD *)(v9 + 8) = 0;
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    *(_DWORD *)(v9 + 32) = 0;
    awd::metrics::LocationTileFile::default_instance_ = v9;
    v10 = operator new();
    *(_QWORD *)(v10 + 40) = 0;
    *(_QWORD *)(v10 + 48) = 0;
    *(_DWORD *)(v10 + 56) = 0;
    *(_QWORD *)(v10 + 64) = 0;
    *(_DWORD *)(v10 + 72) = 0;
    *(_QWORD *)v10 = &off_24D991780;
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_DWORD *)(v10 + 32) = 0;
    awd::metrics::LocationWifiAPLocationProviderSession::default_instance_ = v10;
    v11 = operator new();
    *(_QWORD *)v11 = &off_24D9917F8;
    *(_OWORD *)(v11 + 8) = 0u;
    *(_OWORD *)(v11 + 24) = 0u;
    *(_QWORD *)(v11 + 40) = 0;
    awd::metrics::LocationWifiTileSync::default_instance_ = v11;
    v13 = (_QWORD *)awd::metrics::LocationSessionDay::default_instance_;
    v14 = awd::metrics::LocationTilesUsage::default_instance_;
    if (!awd::metrics::LocationTilesUsage::default_instance_)
    {
      v11 = awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto((awd::metrics *)v11);
      v14 = awd::metrics::LocationTilesUsage::default_instance_;
    }
    v13[6] = v14;
    v15 = awd::metrics::LocationALSCacheUsage::default_instance_;
    if (!awd::metrics::LocationALSCacheUsage::default_instance_)
    {
      v11 = awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto((awd::metrics *)v11);
      v15 = awd::metrics::LocationALSCacheUsage::default_instance_;
    }
    v13[7] = v15;
    v16 = awd::metrics::LocationALSNetworkUsage::default_instance_;
    if (!awd::metrics::LocationALSNetworkUsage::default_instance_)
    {
      awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto((awd::metrics *)v11);
      v16 = awd::metrics::LocationALSNetworkUsage::default_instance_;
    }
    v13[8] = v16;
    wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)awd::metrics::protobuf_ShutdownFile_LocationAlsCacheTiles_2eproto, v12);
  }
}

uint64_t awd::metrics::LocationTilesUsage::LocationTilesUsage(uint64_t this)
{
  *(_QWORD *)this = &off_24D9914B0;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24D9914B0;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

double awd::metrics::LocationALSCacheUsage::LocationALSCacheUsage(awd::metrics::LocationALSCacheUsage *this)
{
  double result;

  *(_QWORD *)this = &off_24D991528;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991528;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

double awd::metrics::LocationALSNetworkUsage::LocationALSNetworkUsage(awd::metrics::LocationALSNetworkUsage *this)
{
  double result;

  *(_QWORD *)this = &off_24D9915A0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D9915A0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

double awd::metrics::LocationSessionDay::LocationSessionDay(awd::metrics::LocationSessionDay *this)
{
  double result;

  *(_QWORD *)this = &off_24D991618;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991618;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  return result;
}

double awd::metrics::LocationTileFileUsage::LocationTileFileUsage(awd::metrics::LocationTileFileUsage *this)
{
  double result;

  *(_QWORD *)this = &off_24D991690;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_QWORD *)this + 17) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991690;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_QWORD *)this + 17) = 0;
  return result;
}

uint64_t awd::metrics::LocationTileFile::LocationTileFile(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)this = &off_24D991708;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)this = &off_24D991708;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::LocationWifiAPLocationProviderSession(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(_QWORD *)this = &off_24D991780;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(_QWORD *)this = &off_24D991780;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double awd::metrics::LocationWifiTileSync::LocationWifiTileSync(awd::metrics::LocationWifiTileSync *this)
{
  double result;

  *(_QWORD *)this = &off_24D9917F8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D9917F8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

void awd::metrics::LocationSessionDay::InitAsDefaultInstance(awd::metrics::LocationSessionDay *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = awd::metrics::LocationTilesUsage::default_instance_;
  if (!awd::metrics::LocationTilesUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::LocationTilesUsage::default_instance_;
  }
  *((_QWORD *)this + 6) = v5;
  v6 = awd::metrics::LocationALSCacheUsage::default_instance_;
  if (!awd::metrics::LocationALSCacheUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(this, a2, a3, a4);
    v6 = awd::metrics::LocationALSCacheUsage::default_instance_;
  }
  *((_QWORD *)this + 7) = v6;
  v7 = awd::metrics::LocationALSNetworkUsage::default_instance_;
  if (!awd::metrics::LocationALSNetworkUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(this, a2, a3, a4);
    v7 = awd::metrics::LocationALSNetworkUsage::default_instance_;
  }
  *((_QWORD *)this + 8) = v7;
}

uint64_t awd::metrics::LocationTilesUsage::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationTilesUsage *awd::metrics::LocationTilesUsage::LocationTilesUsage(awd::metrics::LocationTilesUsage *this, const awd::metrics::LocationTilesUsage *a2)
{
  *(_QWORD *)this = &off_24D9914B0;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  awd::metrics::LocationTilesUsage::MergeFrom(this, a2);
  return this;
}

void sub_218A3C43C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTilesUsage::MergeFrom(awd::metrics::LocationTilesUsage *this, const awd::metrics::LocationTilesUsage *a2)
{
  int v4;
  _BYTE v5[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*((_BYTE *)a2 + 16) & 1) != 0)
  {
    v4 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 4) |= 1u;
    *((_DWORD *)this + 2) = v4;
  }
}

void sub_218A3C4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTilesUsage::~LocationTilesUsage(awd::metrics::LocationTilesUsage *this)
{
  *(_QWORD *)this = &off_24D9914B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9914B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9914B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationTilesUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t awd::metrics::LocationTilesUsage::default_instance(awd::metrics::LocationTilesUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationTilesUsage::default_instance_;
  if (!awd::metrics::LocationTilesUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationTilesUsage::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationTilesUsage::New(awd::metrics::LocationTilesUsage *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_24D9914B0;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t awd::metrics::LocationTilesUsage::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 16))
    *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t awd::metrics::LocationTilesUsage::MergePartialFromCodedStream(awd::metrics::LocationTilesUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  unint64_t v7;
  char *v8;
  unsigned __int8 *v9;
  uint64_t result;

  v4 = (unsigned int *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v8 = (char *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!(_DWORD)result)
          return result;
        v9 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v4 = *v8;
        v9 = (unsigned __int8 *)(v8 + 1);
        *((_QWORD *)a2 + 1) = v9;
      }
      *((_DWORD *)this + 4) |= 1u;
      if (v9 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t awd::metrics::LocationTilesUsage::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(this + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationTilesUsage::ByteSize(awd::metrics::LocationTilesUsage *this)
{
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;

  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v3 >= 0x80)
      result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    else
      result = 2;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 3) = result;
  return result;
}

void awd::metrics::LocationTilesUsage::CheckTypeAndMergeFrom(awd::metrics::LocationTilesUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationTilesUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationTilesUsage::CopyFrom(awd::metrics::LocationTilesUsage *this, const awd::metrics::LocationTilesUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationTilesUsage *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationTilesUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationTilesUsage::IsInitialized(awd::metrics::LocationTilesUsage *this)
{
  return 1;
}

awd::metrics::LocationTilesUsage *awd::metrics::LocationTilesUsage::Swap(awd::metrics::LocationTilesUsage *this, awd::metrics::LocationTilesUsage *a2)
{
  int v2;
  int v3;
  int v4;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    v4 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v4;
  }
  return this;
}

_QWORD *awd::metrics::LocationTilesUsage::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationTilesUsage");
}

double awd::metrics::LocationALSCacheUsage::SharedCtor(awd::metrics::LocationALSCacheUsage *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationALSCacheUsage *awd::metrics::LocationALSCacheUsage::LocationALSCacheUsage(awd::metrics::LocationALSCacheUsage *this, const awd::metrics::LocationALSCacheUsage *a2)
{
  *(_QWORD *)this = &off_24D991528;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  awd::metrics::LocationALSCacheUsage::MergeFrom(this, a2);
  return this;
}

void sub_218A3C894(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationALSCacheUsage::MergeFrom(awd::metrics::LocationALSCacheUsage *this, const awd::metrics::LocationALSCacheUsage *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 11) |= 1u;
      *((_DWORD *)this + 2) = v6;
      v4 = *((_DWORD *)a2 + 11);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_16;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 11) |= 2u;
    *((_DWORD *)this + 3) = v7;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_17;
    }
LABEL_16:
    v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 11) |= 4u;
    *((_DWORD *)this + 4) = v8;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_18;
    }
LABEL_17:
    v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 11) |= 8u;
    *((_DWORD *)this + 5) = v9;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_19;
    }
LABEL_18:
    v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 11) |= 0x10u;
    *((_DWORD *)this + 6) = v10;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_20;
    }
LABEL_19:
    v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 11) |= 0x20u;
    *((_DWORD *)this + 7) = v11;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        return;
      goto LABEL_12;
    }
LABEL_20:
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 11) |= 0x40u;
    *((_DWORD *)this + 8) = v12;
    if ((*((_DWORD *)a2 + 11) & 0x80) == 0)
      return;
LABEL_12:
    v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 11) |= 0x80u;
    *((_DWORD *)this + 9) = v5;
  }
}

void sub_218A3CA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationALSCacheUsage::~LocationALSCacheUsage(awd::metrics::LocationALSCacheUsage *this)
{
  *(_QWORD *)this = &off_24D991528;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991528;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991528;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationALSCacheUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationALSCacheUsage::default_instance(awd::metrics::LocationALSCacheUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationALSCacheUsage::default_instance_;
  if (!awd::metrics::LocationALSCacheUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationALSCacheUsage::default_instance_;
  }
  return result;
}

double awd::metrics::LocationALSCacheUsage::New(awd::metrics::LocationALSCacheUsage *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991528;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationALSCacheUsage::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationALSCacheUsage::MergePartialFromCodedStream(awd::metrics::LocationALSCacheUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  unsigned __int8 *v30;
  uint64_t result;
  unsigned int *v32;

  v32 = (unsigned int *)((char *)this + 8);
  v4 = (unsigned int *)((char *)this + 12);
  v5 = (unsigned int *)((char *)this + 16);
  v6 = (unsigned int *)((char *)this + 20);
  v7 = (unsigned int *)((char *)this + 24);
  v8 = (unsigned int *)((char *)this + 28);
  v9 = (unsigned int *)((char *)this + 32);
  v10 = (unsigned int *)((char *)this + 36);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v32 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_32:
          *((_DWORD *)this + 11) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_35;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_32;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_35:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v17;
          v24 = v17 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 11) |= 2u;
        if ((unint64_t)v24 >= v14 || *v24 != 24)
          continue;
        v18 = v24 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_43:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v18;
          v25 = v18 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 11) |= 4u;
        if ((unint64_t)v25 >= v14 || *v25 != 32)
          continue;
        v19 = v25 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_51:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v19;
          v26 = v19 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 11) |= 8u;
        if ((unint64_t)v26 >= v14 || *v26 != 40)
          continue;
        v20 = v26 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_59:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v20;
          v27 = v20 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 11) |= 0x10u;
        if ((unint64_t)v27 >= v14 || *v27 != 48)
          continue;
        v21 = v27 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_67:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v21;
          v28 = v21 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 11) |= 0x20u;
        if ((unint64_t)v28 >= v14 || *v28 != 56)
          continue;
        v22 = v28 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_75:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v22;
          v29 = v22 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 11) |= 0x40u;
        if ((unint64_t)v29 >= v14 || *v29 != 64)
          continue;
        v23 = v29 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_83:
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v23;
          v30 = (unsigned __int8 *)(v23 + 1);
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 11) |= 0x80u;
        if (v30 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_43;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_59;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_67;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      default:
        v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *awd::metrics::LocationALSCacheUsage::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = this;
  v6 = this[11];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], (uint64_t)a2, a4);
  }
LABEL_16:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], (uint64_t)a2, a4);
  if ((v5[11] & 0x80) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationALSCacheUsage::ByteSize(awd::metrics::LocationALSCacheUsage *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_45;
  }
  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 11);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 44) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *((_DWORD *)this + 11);
    }
    else
    {
      v8 = 2;
    }
    v3 = (v8 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v10 = 2;
  }
  v3 = (v10 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_33;
  }
LABEL_29:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v12 = 2;
  }
  v3 = (v12 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_37;
  }
LABEL_33:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v14 = 2;
  }
  v3 = (v14 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0)
      goto LABEL_45;
    goto LABEL_41;
  }
LABEL_37:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v16 = 2;
  }
  v3 = (v16 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_41:
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v17 >= 0x80)
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
    else
      v18 = 2;
    v3 = (v18 + v3);
  }
LABEL_45:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void awd::metrics::LocationALSCacheUsage::CheckTypeAndMergeFrom(awd::metrics::LocationALSCacheUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationALSCacheUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationALSCacheUsage::CopyFrom(awd::metrics::LocationALSCacheUsage *this, const awd::metrics::LocationALSCacheUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationALSCacheUsage *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationALSCacheUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationALSCacheUsage::IsInitialized(awd::metrics::LocationALSCacheUsage *this)
{
  return 1;
}

awd::metrics::LocationALSCacheUsage *awd::metrics::LocationALSCacheUsage::Swap(awd::metrics::LocationALSCacheUsage *this, awd::metrics::LocationALSCacheUsage *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    v8 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    v9 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
    v10 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v10;
    v11 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v11;
  }
  return this;
}

_QWORD *awd::metrics::LocationALSCacheUsage::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationALSCacheUsage");
}

double awd::metrics::LocationALSNetworkUsage::SharedCtor(awd::metrics::LocationALSNetworkUsage *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationALSNetworkUsage *awd::metrics::LocationALSNetworkUsage::LocationALSNetworkUsage(awd::metrics::LocationALSNetworkUsage *this, const awd::metrics::LocationALSNetworkUsage *a2)
{
  *(_QWORD *)this = &off_24D9915A0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  awd::metrics::LocationALSNetworkUsage::MergeFrom(this, a2);
  return this;
}

void sub_218A3D418(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationALSNetworkUsage::MergeFrom(awd::metrics::LocationALSNetworkUsage *this, const awd::metrics::LocationALSNetworkUsage *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _BYTE v19[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v4 = *((_DWORD *)a2 + 17);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 17) |= 1u;
    *((_DWORD *)this + 2) = v7;
    v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 17) |= 2u;
  *((_DWORD *)this + 3) = v8;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  v9 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 17) |= 4u;
  *((_DWORD *)this + 4) = v9;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  v10 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 17) |= 8u;
  *((_DWORD *)this + 5) = v10;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_27:
    v12 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 17) |= 0x20u;
    *((_DWORD *)this + 7) = v12;
    v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  v11 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 17) |= 0x10u;
  *((_DWORD *)this + 6) = v11;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x20) != 0)
    goto LABEL_27;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_28:
  v13 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 17) |= 0x40u;
  *((_DWORD *)this + 8) = v13;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 17) |= 0x80u;
    *((_DWORD *)this + 9) = v5;
    v4 = *((_DWORD *)a2 + 17);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v14 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 17) |= 0x100u;
    *((_DWORD *)this + 10) = v14;
    v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 17) |= 0x200u;
  *((_DWORD *)this + 11) = v15;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_33;
  }
LABEL_32:
  v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 17) |= 0x400u;
  *((_DWORD *)this + 12) = v16;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_34;
  }
LABEL_33:
  v17 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 17) |= 0x800u;
  *((_DWORD *)this + 13) = v17;
  v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      return;
    goto LABEL_20;
  }
LABEL_34:
  v18 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 17) |= 0x1000u;
  *((_DWORD *)this + 14) = v18;
  if ((*((_DWORD *)a2 + 17) & 0x2000) == 0)
    return;
LABEL_20:
  v6 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 17) |= 0x2000u;
  *((_DWORD *)this + 15) = v6;
}

void sub_218A3D668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationALSNetworkUsage::~LocationALSNetworkUsage(awd::metrics::LocationALSNetworkUsage *this)
{
  *(_QWORD *)this = &off_24D9915A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9915A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9915A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationALSNetworkUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t awd::metrics::LocationALSNetworkUsage::default_instance(awd::metrics::LocationALSNetworkUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationALSNetworkUsage::default_instance_;
  if (!awd::metrics::LocationALSNetworkUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationALSNetworkUsage::default_instance_;
  }
  return result;
}

double awd::metrics::LocationALSNetworkUsage::New(awd::metrics::LocationALSNetworkUsage *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D9915A0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  return result;
}

uint64_t awd::metrics::LocationALSNetworkUsage::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 68);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 56) = 0;
  }
  *(_DWORD *)(this + 68) = 0;
  return this;
}

uint64_t awd::metrics::LocationALSNetworkUsage::MergePartialFromCodedStream(awd::metrics::LocationALSNetworkUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  unsigned __int8 *v42;
  uint64_t result;
  unsigned int *v44;
  unsigned int *v45;
  unsigned int *v46;
  unsigned int *v47;
  unsigned int *v48;
  unsigned int *v49;
  unsigned int *v50;

  v44 = (unsigned int *)((char *)this + 8);
  v45 = (unsigned int *)((char *)this + 12);
  v46 = (unsigned int *)((char *)this + 16);
  v47 = (unsigned int *)((char *)this + 20);
  v48 = (unsigned int *)((char *)this + 24);
  v49 = (unsigned int *)((char *)this + 28);
  v50 = (unsigned int *)((char *)this + 32);
  v4 = (unsigned int *)((char *)this + 36);
  v5 = (unsigned int *)((char *)this + 40);
  v6 = (unsigned int *)((char *)this + 44);
  v7 = (unsigned int *)((char *)this + 48);
  v8 = (unsigned int *)((char *)this + 52);
  v9 = (unsigned int *)((char *)this + 56);
  v10 = (unsigned int *)((char *)this + 60);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v44 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_44:
          *((_DWORD *)this + 17) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_47;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v44);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_44;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_47:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v45 = *v17;
          v30 = v17 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 17) |= 2u;
        if ((unint64_t)v30 >= v14 || *v30 != 24)
          continue;
        v18 = v30 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_55:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v46);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v46 = *v18;
          v31 = v18 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 17) |= 4u;
        if ((unint64_t)v31 >= v14 || *v31 != 32)
          continue;
        v19 = v31 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_63:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v47);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v47 = *v19;
          v32 = v19 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 17) |= 8u;
        if ((unint64_t)v32 >= v14 || *v32 != 40)
          continue;
        v20 = v32 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_71:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v48);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v48 = *v20;
          v33 = v20 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 17) |= 0x10u;
        if ((unint64_t)v33 >= v14 || *v33 != 48)
          continue;
        v21 = v33 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_79:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v49 = *v21;
          v34 = v21 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 17) |= 0x20u;
        if ((unint64_t)v34 >= v14 || *v34 != 56)
          continue;
        v22 = v34 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_87:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v50);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v50 = *v22;
          v35 = v22 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 17) |= 0x40u;
        if ((unint64_t)v35 >= v14 || *v35 != 64)
          continue;
        v23 = v35 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_95:
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v23;
          v36 = v23 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 17) |= 0x80u;
        if ((unint64_t)v36 >= v14 || *v36 != 72)
          continue;
        v24 = v36 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_103:
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v24;
          v37 = v24 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 17) |= 0x100u;
        if ((unint64_t)v37 >= v14 || *v37 != 80)
          continue;
        v25 = v37 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_111:
        if ((unint64_t)v25 >= v14 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v25;
          v38 = v25 + 1;
          *((_QWORD *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 17) |= 0x200u;
        if ((unint64_t)v38 >= v14 || *v38 != 88)
          continue;
        v26 = v38 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_119:
        if ((unint64_t)v26 >= v14 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v26;
          v39 = v26 + 1;
          *((_QWORD *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 17) |= 0x400u;
        if ((unint64_t)v39 >= v14 || *v39 != 96)
          continue;
        v27 = v39 + 1;
        *((_QWORD *)a2 + 1) = v27;
LABEL_127:
        if ((unint64_t)v27 >= v14 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v27;
          v40 = v27 + 1;
          *((_QWORD *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 17) |= 0x800u;
        if ((unint64_t)v40 >= v14 || *v40 != 104)
          continue;
        v28 = v40 + 1;
        *((_QWORD *)a2 + 1) = v28;
LABEL_135:
        if ((unint64_t)v28 >= v14 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v41 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v28;
          v41 = v28 + 1;
          *((_QWORD *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 17) |= 0x1000u;
        if ((unint64_t)v41 >= v14 || *v41 != 112)
          continue;
        v29 = v41 + 1;
        *((_QWORD *)a2 + 1) = v29;
LABEL_143:
        if ((unint64_t)v29 >= v14 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v29;
          v42 = (unsigned __int8 *)(v29 + 1);
          *((_QWORD *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 17) |= 0x2000u;
        if (v42 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_55;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_63;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_71;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_87;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_95;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_103;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_111;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_119;
      case 0xCu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_127;
      case 0xDu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v28 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_135;
      case 0xEu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v29 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_143;
      default:
        v13 = TagFallback & 7;
LABEL_38:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *awd::metrics::LocationALSNetworkUsage::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = this;
  v6 = this[17];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    v6 = v5[17];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_28;
  }
LABEL_27:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], (uint64_t)a2, a4);
  v6 = v5[17];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      return this;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], (uint64_t)a2, a4);
  }
LABEL_28:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], (uint64_t)a2, a4);
  if ((v5[17] & 0x2000) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationALSNetworkUsage::ByteSize(awd::metrics::LocationALSNetworkUsage *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;

  v2 = *((_DWORD *)this + 17);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_45;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_10:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *((_DWORD *)this + 17);
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = *((_DWORD *)this + 17);
    }
    else
    {
      v9 = 1;
    }
    v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v11 = 1;
  }
  v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_33;
  }
LABEL_29:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v13 = 1;
  }
  v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_37;
  }
LABEL_33:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v15 = 1;
  }
  v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0)
      goto LABEL_45;
    goto LABEL_41;
  }
LABEL_37:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v17 = 2;
  }
  v3 = (v17 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_41:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      v2 = *((_DWORD *)this + 17);
    }
    else
    {
      v19 = 2;
    }
    v3 = (v19 + v3);
  }
LABEL_45:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_77;
  if ((v2 & 0x100) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      v2 = *((_DWORD *)this + 17);
    }
    else
    {
      v21 = 2;
    }
    v3 = (v21 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_48:
      if ((v2 & 0x400) == 0)
        goto LABEL_49;
      goto LABEL_61;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v23 = 2;
  }
  v3 = (v23 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0)
      goto LABEL_50;
    goto LABEL_65;
  }
LABEL_61:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v25 = 2;
  }
  v3 = (v25 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000) == 0)
      goto LABEL_51;
    goto LABEL_69;
  }
LABEL_65:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v27 = 2;
  }
  v3 = (v27 + v3);
  if ((v2 & 0x1000) == 0)
  {
LABEL_51:
    if ((v2 & 0x2000) == 0)
      goto LABEL_77;
    goto LABEL_73;
  }
LABEL_69:
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v28 >= 0x80)
  {
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    v2 = *((_DWORD *)this + 17);
  }
  else
  {
    v29 = 2;
  }
  v3 = (v29 + v3);
  if ((v2 & 0x2000) != 0)
  {
LABEL_73:
    v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if (v30 >= 0x80)
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    else
      v31 = 2;
    v3 = (v31 + v3);
  }
LABEL_77:
  *((_DWORD *)this + 16) = v3;
  return v3;
}

void awd::metrics::LocationALSNetworkUsage::CheckTypeAndMergeFrom(awd::metrics::LocationALSNetworkUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationALSNetworkUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationALSNetworkUsage::CopyFrom(awd::metrics::LocationALSNetworkUsage *this, const awd::metrics::LocationALSNetworkUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationALSNetworkUsage *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationALSNetworkUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationALSNetworkUsage::IsInitialized(awd::metrics::LocationALSNetworkUsage *this)
{
  return 1;
}

awd::metrics::LocationALSNetworkUsage *awd::metrics::LocationALSNetworkUsage::Swap(awd::metrics::LocationALSNetworkUsage *this, awd::metrics::LocationALSNetworkUsage *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    v8 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    v9 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
    v10 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v10;
    v11 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v11;
    v12 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v12;
    v13 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v13;
    v14 = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v14;
    v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v15;
    v16 = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v16;
    v17 = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v17;
  }
  return this;
}

_QWORD *awd::metrics::LocationALSNetworkUsage::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationALSNetworkUsage");
}

double awd::metrics::LocationSessionDay::SharedCtor(awd::metrics::LocationSessionDay *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 68) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationSessionDay *awd::metrics::LocationSessionDay::LocationSessionDay(awd::metrics::LocationSessionDay *this, const awd::metrics::LocationSessionDay *a2)
{
  *(_QWORD *)this = &off_24D991618;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  awd::metrics::LocationSessionDay::MergeFrom(this, a2);
  return this;
}

void sub_218A3E580(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSessionDay::MergeFrom(awd::metrics::LocationSessionDay *this, const awd::metrics::LocationSessionDay *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  const awd::metrics::LocationTilesUsage *v17;
  uint64_t v18;
  const awd::metrics::LocationALSCacheUsage *v19;
  uint64_t v20;
  const awd::metrics::LocationALSNetworkUsage *v21;
  _BYTE v22[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  v4 = *((_DWORD *)a2 + 20);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v6 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 20) |= 1u;
    *((_DWORD *)this + 2) = v6;
    v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v7 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 20) |= 2u;
  *((_DWORD *)this + 3) = v7;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 20) |= 4u;
  *((_DWORD *)this + 4) = v8;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 20) |= 8u;
  *((_DWORD *)this + 5) = v9;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_26:
    v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 20) |= 0x20u;
    *((_DWORD *)this + 7) = v11;
    v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 20) |= 0x10u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x20) != 0)
    goto LABEL_26;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_27:
  v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 20) |= 0x40u;
  *((_DWORD *)this + 8) = v12;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 20) |= 0x80u;
    *((_DWORD *)this + 9) = v5;
    v4 = *((_DWORD *)a2 + 20);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v13 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 20) |= 0x100u;
    *((_DWORD *)this + 10) = v13;
    v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_31;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v14 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 20) |= 0x200u;
  *((_DWORD *)this + 11) = v14;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_32;
  }
LABEL_31:
  v15 = *((_DWORD *)a2 + 18);
  *((_DWORD *)this + 20) |= 0x400u;
  *((_DWORD *)this + 18) = v15;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_37;
  }
LABEL_32:
  *((_DWORD *)this + 20) |= 0x800u;
  v16 = *((_QWORD *)this + 6);
  if (!v16)
  {
    v16 = operator new();
    *(_QWORD *)v16 = &off_24D9914B0;
    *(_QWORD *)(v16 + 8) = 0;
    *(_DWORD *)(v16 + 16) = 0;
    *((_QWORD *)this + 6) = v16;
  }
  v17 = (const awd::metrics::LocationTilesUsage *)*((_QWORD *)a2 + 6);
  if (!v17)
    v17 = *(const awd::metrics::LocationTilesUsage **)(awd::metrics::LocationSessionDay::default_instance_ + 48);
  awd::metrics::LocationTilesUsage::MergeFrom((awd::metrics::LocationTilesUsage *)v16, v17);
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      return;
    goto LABEL_42;
  }
LABEL_37:
  *((_DWORD *)this + 20) |= 0x1000u;
  v18 = *((_QWORD *)this + 7);
  if (!v18)
  {
    v18 = operator new();
    *(_QWORD *)v18 = &off_24D991528;
    *(_OWORD *)(v18 + 8) = 0u;
    *(_OWORD *)(v18 + 24) = 0u;
    *(_QWORD *)(v18 + 40) = 0;
    *((_QWORD *)this + 7) = v18;
  }
  v19 = (const awd::metrics::LocationALSCacheUsage *)*((_QWORD *)a2 + 7);
  if (!v19)
    v19 = *(const awd::metrics::LocationALSCacheUsage **)(awd::metrics::LocationSessionDay::default_instance_ + 56);
  awd::metrics::LocationALSCacheUsage::MergeFrom((awd::metrics::LocationALSCacheUsage *)v18, v19);
  if ((*((_DWORD *)a2 + 20) & 0x2000) != 0)
  {
LABEL_42:
    *((_DWORD *)this + 20) |= 0x2000u;
    v20 = *((_QWORD *)this + 8);
    if (!v20)
    {
      v20 = operator new();
      *(_QWORD *)v20 = &off_24D9915A0;
      *(_OWORD *)(v20 + 8) = 0u;
      *(_OWORD *)(v20 + 24) = 0u;
      *(_OWORD *)(v20 + 40) = 0u;
      *(_OWORD *)(v20 + 56) = 0u;
      *((_QWORD *)this + 8) = v20;
    }
    v21 = (const awd::metrics::LocationALSNetworkUsage *)*((_QWORD *)a2 + 8);
    if (!v21)
      v21 = *(const awd::metrics::LocationALSNetworkUsage **)(awd::metrics::LocationSessionDay::default_instance_ + 64);
    awd::metrics::LocationALSNetworkUsage::MergeFrom((awd::metrics::LocationALSNetworkUsage *)v20, v21);
  }
}

void sub_218A3E8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSessionDay::~LocationSessionDay(awd::metrics::LocationSessionDay *this)
{
  *(_QWORD *)this = &off_24D991618;
  awd::metrics::LocationSessionDay::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991618;
  awd::metrics::LocationSessionDay::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991618;
  awd::metrics::LocationSessionDay::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationSessionDay::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if ((_QWORD *)awd::metrics::LocationSessionDay::default_instance_ != this)
  {
    v1 = this;
    v2 = this[6];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[7];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    this = (_QWORD *)v1[8];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationSessionDay::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 76) = a2;
  return this;
}

uint64_t awd::metrics::LocationSessionDay::default_instance(awd::metrics::LocationSessionDay *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationSessionDay::default_instance_;
  if (!awd::metrics::LocationSessionDay::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationSessionDay::default_instance_;
  }
  return result;
}

double awd::metrics::LocationSessionDay::New(awd::metrics::LocationSessionDay *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991618;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 68) = 0u;
  return result;
}

uint64_t awd::metrics::LocationSessionDay::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v1 = *(_DWORD *)(this + 80);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 40) = 0;
    *(_DWORD *)(this + 72) = 0;
    if ((v1 & 0x800) != 0)
    {
      v2 = *(_QWORD *)(this + 48);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 16))
          *(_DWORD *)(v2 + 8) = 0;
        *(_DWORD *)(v2 + 16) = 0;
        v1 = *(_DWORD *)(this + 80);
      }
    }
    if ((v1 & 0x1000) != 0)
    {
      v3 = *(_QWORD *)(this + 56);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 44))
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 44) = 0;
        v1 = *(_DWORD *)(this + 80);
      }
    }
    if ((v1 & 0x2000) != 0)
    {
      v4 = *(_QWORD *)(this + 64);
      if (v4)
      {
        v5 = *(_DWORD *)(v4 + 68);
        if ((_BYTE)v5)
        {
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 8) = 0u;
        }
        if ((v5 & 0xFF00) != 0)
        {
          *(_QWORD *)(v4 + 40) = 0;
          *(_QWORD *)(v4 + 48) = 0;
          *(_QWORD *)(v4 + 56) = 0;
        }
        *(_DWORD *)(v4 + 68) = 0;
      }
    }
  }
  *(_DWORD *)(this + 80) = 0;
  return this;
}

uint64_t awd::metrics::LocationSessionDay::MergePartialFromCodedStream(awd::metrics::LocationSessionDay *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  int v24;
  unint64_t v25;
  char *v26;
  uint64_t result;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  int v39;
  int v40;
  int v41;
  BOOL v42;
  int v43;
  _BYTE *v44;
  uint64_t v45;
  char *v46;
  int v47;
  int v48;
  int v49;
  int v50;
  _BYTE *v51;
  uint64_t v52;
  char *v53;
  int v54;
  int v55;
  int v56;
  int v57;
  _BYTE *v58;
  unsigned __int8 *v59;
  unsigned int *v60;
  unsigned int *v61;
  unsigned int *v62;
  unsigned int *v63;
  unsigned int *v64;
  unsigned int *v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;

  v60 = (unsigned int *)((char *)this + 8);
  v61 = (unsigned int *)((char *)this + 12);
  v62 = (unsigned int *)((char *)this + 16);
  v63 = (unsigned int *)((char *)this + 24);
  v64 = (unsigned int *)((char *)this + 28);
  v65 = (unsigned int *)((char *)this + 32);
  v4 = (unsigned int *)((char *)this + 36);
  v5 = (unsigned int *)((char *)this + 40);
  v6 = (unsigned int *)((char *)this + 44);
  v7 = (unsigned int *)((char *)this + 72);
  v8 = (unsigned int *)((char *)this + 20);
  while (2)
  {
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v60 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 20) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)a2 + 1) = v15;
          goto LABEL_47;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
LABEL_47:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v61 = *v15;
          v28 = v15 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 20) |= 2u;
        if ((unint64_t)v28 >= v12 || *v28 != 24)
          continue;
        v16 = v28 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_55:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v62 = *v16;
          v29 = v16 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 20) |= 4u;
        if ((unint64_t)v29 >= v12 || *v29 != 32)
          continue;
        v17 = v29 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_63:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v63);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v63 = *v17;
          v30 = v17 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 20) |= 0x10u;
        if ((unint64_t)v30 >= v12 || *v30 != 40)
          continue;
        v18 = v30 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_71:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v64 = *v18;
          v31 = v18 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 20) |= 0x20u;
        if ((unint64_t)v31 >= v12 || *v31 != 48)
          continue;
        v19 = v31 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_79:
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v65);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v65 = *v19;
          v32 = v19 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 20) |= 0x40u;
        if ((unint64_t)v32 >= v12 || *v32 != 56)
          continue;
        v20 = v32 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_87:
        if ((unint64_t)v20 >= v12 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v20;
          v33 = v20 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 20) |= 0x80u;
        if ((unint64_t)v33 >= v12 || *v33 != 64)
          continue;
        v21 = v33 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_95:
        if ((unint64_t)v21 >= v12 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v21;
          v34 = v21 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 20) |= 0x100u;
        if ((unint64_t)v34 >= v12 || *v34 != 72)
          continue;
        v22 = v34 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_103:
        if ((unint64_t)v22 >= v12 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v22;
          v35 = v22 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 20) |= 0x200u;
        if ((unint64_t)v35 >= v12 || *v35 != 80)
          continue;
        v23 = v35 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_111:
        if ((unint64_t)v23 >= v12 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v23;
          v36 = v23 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        v24 = *((_DWORD *)this + 20) | 0x400;
        *((_DWORD *)this + 20) = v24;
        if ((unint64_t)v36 >= v12 || *v36 != 90)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_119:
        *((_DWORD *)this + 20) = v24 | 0x800;
        v37 = *((_QWORD *)this + 6);
        if (!v37)
        {
          v37 = operator new();
          *(_QWORD *)v37 = &off_24D9914B0;
          *(_QWORD *)(v37 + 8) = 0;
          *(_DWORD *)(v37 + 16) = 0;
          *((_QWORD *)this + 6) = v37;
        }
        v66 = 0;
        v38 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v66))return 0;
        }
        else
        {
          v66 = *v38;
          *((_QWORD *)a2 + 1) = v38 + 1;
        }
        v39 = *((_DWORD *)a2 + 14);
        v40 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v39 + 1;
        if (v39 >= v40)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationTilesUsage::MergePartialFromCodedStream((awd::metrics::LocationTilesUsage *)v37, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v41 = *((_DWORD *)a2 + 14);
        v42 = __OFSUB__(v41, 1);
        v43 = v41 - 1;
        if (v43 < 0 == v42)
          *((_DWORD *)a2 + 14) = v43;
        v44 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v44 >= *((_QWORD *)a2 + 2) || *v44 != 98)
          continue;
        *((_QWORD *)a2 + 1) = v44 + 1;
LABEL_133:
        *((_DWORD *)this + 20) |= 0x1000u;
        v45 = *((_QWORD *)this + 7);
        if (!v45)
        {
          v45 = operator new();
          *(_QWORD *)v45 = &off_24D991528;
          *(_OWORD *)(v45 + 8) = 0u;
          *(_OWORD *)(v45 + 24) = 0u;
          *(_QWORD *)(v45 + 40) = 0;
          *((_QWORD *)this + 7) = v45;
        }
        v67 = 0;
        v46 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v46 >= *((_QWORD *)a2 + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v67))return 0;
        }
        else
        {
          v67 = *v46;
          *((_QWORD *)a2 + 1) = v46 + 1;
        }
        v47 = *((_DWORD *)a2 + 14);
        v48 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v47 + 1;
        if (v47 >= v48)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationALSCacheUsage::MergePartialFromCodedStream((awd::metrics::LocationALSCacheUsage *)v45, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v49 = *((_DWORD *)a2 + 14);
        v42 = __OFSUB__(v49, 1);
        v50 = v49 - 1;
        if (v50 < 0 == v42)
          *((_DWORD *)a2 + 14) = v50;
        v51 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v51 >= *((_QWORD *)a2 + 2) || *v51 != 106)
          continue;
        *((_QWORD *)a2 + 1) = v51 + 1;
LABEL_147:
        *((_DWORD *)this + 20) |= 0x2000u;
        v52 = *((_QWORD *)this + 8);
        if (!v52)
        {
          v52 = operator new();
          *(_QWORD *)v52 = &off_24D9915A0;
          *(_OWORD *)(v52 + 8) = 0u;
          *(_OWORD *)(v52 + 24) = 0u;
          *(_OWORD *)(v52 + 40) = 0u;
          *(_OWORD *)(v52 + 56) = 0u;
          *((_QWORD *)this + 8) = v52;
        }
        v68 = 0;
        v53 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v53 >= *((_QWORD *)a2 + 2) || *v53 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0;
        }
        else
        {
          v68 = *v53;
          *((_QWORD *)a2 + 1) = v53 + 1;
        }
        v54 = *((_DWORD *)a2 + 14);
        v55 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v54 + 1;
        if (v54 < v55)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (awd::metrics::LocationALSNetworkUsage::MergePartialFromCodedStream((awd::metrics::LocationALSNetworkUsage *)v52, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v56 = *((_DWORD *)a2 + 14);
              v42 = __OFSUB__(v56, 1);
              v57 = v56 - 1;
              if (v57 < 0 == v42)
                *((_DWORD *)a2 + 14) = v57;
              v58 = (_BYTE *)*((_QWORD *)a2 + 1);
              v25 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v58 < v25 && *v58 == 112)
              {
                v26 = v58 + 1;
                *((_QWORD *)a2 + 1) = v26;
LABEL_161:
                if ((unint64_t)v26 >= v25 || *v26 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
                  if (!(_DWORD)result)
                    return result;
                  v59 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                  v25 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  *v8 = *v26;
                  v59 = (unsigned __int8 *)(v26 + 1);
                  *((_QWORD *)a2 + 1) = v59;
                }
                *((_DWORD *)this + 20) |= 8u;
                if (v59 == (unsigned __int8 *)v25
                  && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  result = 1;
                  *((_BYTE *)a2 + 36) = 1;
                  return result;
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_55;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_63;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_71;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_87;
      case 8u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_95;
      case 9u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_103;
      case 0xAu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_111;
      case 0xBu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_38;
        v24 = *((_DWORD *)this + 20);
        goto LABEL_119;
      case 0xCu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_133;
        goto LABEL_38;
      case 0xDu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_147;
        goto LABEL_38;
      case 0xEu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_161;
      default:
        v11 = TagFallback & 7;
LABEL_38:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationSessionDay::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 80);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x40) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x40) == 0)
  {
LABEL_7:
    if ((v6 & 0x80) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 0x100) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x100) == 0)
  {
LABEL_9:
    if ((v6 & 0x200) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x200) == 0)
  {
LABEL_10:
    if ((v6 & 0x400) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x400) == 0)
  {
LABEL_11:
    if ((v6 & 0x800) == 0)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x800) == 0)
  {
LABEL_12:
    if ((v6 & 0x1000) == 0)
      goto LABEL_13;
    goto LABEL_29;
  }
LABEL_26:
  v7 = *(_QWORD *)(v5 + 48);
  if (!v7)
    v7 = *(_QWORD *)(awd::metrics::LocationSessionDay::default_instance_ + 48);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x1000) == 0)
  {
LABEL_13:
    if ((v6 & 0x2000) == 0)
      goto LABEL_14;
    goto LABEL_32;
  }
LABEL_29:
  v8 = *(_QWORD *)(v5 + 56);
  if (!v8)
    v8 = *(_QWORD *)(awd::metrics::LocationSessionDay::default_instance_ + 56);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x2000) == 0)
  {
LABEL_14:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  }
LABEL_32:
  v9 = *(_QWORD *)(v5 + 64);
  if (!v9)
    v9 = *(_QWORD *)(awd::metrics::LocationSessionDay::default_instance_ + 64);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 80) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationSessionDay::ByteSize(awd::metrics::LocationSessionDay *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  uint64_t v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  awd::metrics::LocationALSCacheUsage *v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  int v33;
  awd::metrics::LocationALSNetworkUsage *v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  int v37;
  int v39;

  v2 = *((_DWORD *)this + 20);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_45;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 20);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_10:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *((_DWORD *)this + 20);
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = *((_DWORD *)this + 20);
    }
    else
    {
      v9 = 1;
    }
    v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    v2 = *((_DWORD *)this + 20);
  }
  else
  {
    v11 = 1;
  }
  v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_33;
  }
LABEL_29:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = *((_DWORD *)this + 20);
  }
  else
  {
    v13 = 1;
  }
  v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_37;
  }
LABEL_33:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 20);
  }
  else
  {
    v15 = 1;
  }
  v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0)
      goto LABEL_45;
    goto LABEL_41;
  }
LABEL_37:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = *((_DWORD *)this + 20);
  }
  else
  {
    v17 = 1;
  }
  v3 = (v3 + v17 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_41:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      v2 = *((_DWORD *)this + 20);
    }
    else
    {
      v19 = 1;
    }
    v3 = (v3 + v19 + 1);
  }
LABEL_45:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_86;
  if ((v2 & 0x100) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      v2 = *((_DWORD *)this + 20);
    }
    else
    {
      v21 = 2;
    }
    v3 = (v21 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_48:
      if ((v2 & 0x400) == 0)
        goto LABEL_49;
      goto LABEL_61;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    v2 = *((_DWORD *)this + 20);
  }
  else
  {
    v23 = 2;
  }
  v3 = (v23 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0)
      goto LABEL_50;
    goto LABEL_65;
  }
LABEL_61:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
  if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    v2 = *((_DWORD *)this + 20);
  }
  else
  {
    v25 = 2;
  }
  v3 = (v25 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000) == 0)
      goto LABEL_51;
    goto LABEL_74;
  }
LABEL_65:
  v26 = *((_QWORD *)this + 6);
  if (!v26)
    v26 = *(_QWORD *)(awd::metrics::LocationSessionDay::default_instance_ + 48);
  if ((*(_BYTE *)(v26 + 16) & 1) == 0)
  {
    v27 = 0;
LABEL_71:
    *(_DWORD *)(v26 + 12) = v27;
LABEL_72:
    v29 = 1;
    goto LABEL_73;
  }
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v26 + 8);
  if (v28 <= 0x7F)
  {
    v27 = 2;
    goto LABEL_71;
  }
  v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
  v27 = v39 + 1;
  *(_DWORD *)(v26 + 12) = v39 + 1;
  if ((v39 + 1) < 0x80)
    goto LABEL_72;
  v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v39 + 1));
LABEL_73:
  v3 = (v3 + v27 + v29 + 1);
  v2 = *((_DWORD *)this + 20);
  if ((v2 & 0x1000) == 0)
  {
LABEL_51:
    if ((v2 & 0x2000) == 0)
      goto LABEL_86;
    goto LABEL_80;
  }
LABEL_74:
  v30 = (awd::metrics::LocationALSCacheUsage *)*((_QWORD *)this + 7);
  if (!v30)
    v30 = *(awd::metrics::LocationALSCacheUsage **)(awd::metrics::LocationSessionDay::default_instance_ + 56);
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationALSCacheUsage::ByteSize(v30);
  v32 = (int)v31;
  if (v31 >= 0x80)
    v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
  else
    v33 = 1;
  v3 = (v3 + v32 + v33 + 1);
  if ((*((_DWORD *)this + 20) & 0x2000) != 0)
  {
LABEL_80:
    v34 = (awd::metrics::LocationALSNetworkUsage *)*((_QWORD *)this + 8);
    if (!v34)
      v34 = *(awd::metrics::LocationALSNetworkUsage **)(awd::metrics::LocationSessionDay::default_instance_ + 64);
    v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationALSNetworkUsage::ByteSize(v34);
    v36 = (int)v35;
    if (v35 >= 0x80)
      v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
    else
      v37 = 1;
    v3 = (v3 + v36 + v37 + 1);
  }
LABEL_86:
  *((_DWORD *)this + 19) = v3;
  return v3;
}

void awd::metrics::LocationSessionDay::CheckTypeAndMergeFrom(awd::metrics::LocationSessionDay *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationSessionDay::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationSessionDay::CopyFrom(awd::metrics::LocationSessionDay *this, const awd::metrics::LocationSessionDay *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationSessionDay *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationSessionDay::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationSessionDay::IsInitialized(awd::metrics::LocationSessionDay *this)
{
  return 1;
}

uint64_t awd::metrics::LocationSessionDay::Swap(uint64_t this, awd::metrics::LocationSessionDay *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2 != (awd::metrics::LocationSessionDay *)this)
  {
    v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    v7 = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    v8 = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    v9 = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
    v10 = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v10;
    v11 = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v11;
    v12 = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v12;
    v13 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v13;
    v14 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v14;
    v15 = *(_QWORD *)(this + 64);
    *(_QWORD *)(this + 64) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v15;
    LODWORD(v15) = *(_DWORD *)(this + 80);
    *(_DWORD *)(this + 80) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v15;
    LODWORD(v15) = *(_DWORD *)(this + 76);
    *(_DWORD *)(this + 76) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v15;
  }
  return this;
}

_QWORD *awd::metrics::LocationSessionDay::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationSessionDay");
}

double awd::metrics::LocationTileFileUsage::SharedCtor(awd::metrics::LocationTileFileUsage *this)
{
  double result;

  *((_QWORD *)this + 12) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 16) = 0;
  *((_QWORD *)this + 17) = 0;
  *((_QWORD *)this + 15) = 0;
  return result;
}

awd::metrics::LocationTileFileUsage *awd::metrics::LocationTileFileUsage::LocationTileFileUsage(awd::metrics::LocationTileFileUsage *this, const awd::metrics::LocationTileFileUsage *a2)
{
  *(_QWORD *)this = &off_24D991690;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_QWORD *)this + 17) = 0;
  awd::metrics::LocationTileFileUsage::MergeFrom(this, a2);
  return this;
}

void sub_218A3FBDC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *((_QWORD *)v1 + 13);
  if (v4)
    MEMORY[0x219A1DC64](v4, 0x1000C8052888210);
  awd::metrics::LocationTileFileUsage::LocationTileFileUsage(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTileFileUsage::MergeFrom(awd::metrics::LocationTileFileUsage *this, const awd::metrics::LocationTileFileUsage *a2)
{
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  _BYTE v31[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v31);
  }
  v4 = *((_DWORD *)a2 + 22);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((_DWORD *)this + 20, *((_DWORD *)this + 22) + v4);
    memcpy((void *)(*((_QWORD *)this + 10) + 4 * *((int *)this + 22)), *((const void **)a2 + 10), 4 * *((int *)a2 + 22));
    *((_DWORD *)this + 22) += *((_DWORD *)a2 + 22);
  }
  v5 = *((_DWORD *)a2 + 28);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((_DWORD *)this + 26, *((_DWORD *)this + 28) + v5);
    memcpy((void *)(*((_QWORD *)this + 13) + 4 * *((int *)this + 28)), *((const void **)a2 + 13), 4 * *((int *)a2 + 28));
    *((_DWORD *)this + 28) += *((_DWORD *)a2 + 28);
  }
  v6 = *((_DWORD *)a2 + 35);
  if (!(_BYTE)v6)
    goto LABEL_17;
  if ((v6 & 1) != 0)
  {
    v12 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 35) |= 1u;
    *((_DWORD *)this + 2) = v12;
    v6 = *((_DWORD *)a2 + 35);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0)
        goto LABEL_11;
      goto LABEL_43;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  v13 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 35) |= 2u;
  *((_DWORD *)this + 3) = v13;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0)
      goto LABEL_12;
    goto LABEL_44;
  }
LABEL_43:
  v14 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 35) |= 4u;
  *((_DWORD *)this + 4) = v14;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0)
      goto LABEL_13;
    goto LABEL_45;
  }
LABEL_44:
  v15 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 35) |= 8u;
  *((_DWORD *)this + 5) = v15;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0)
      goto LABEL_14;
LABEL_46:
    v17 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 35) |= 0x20u;
    *((_DWORD *)this + 7) = v17;
    v6 = *((_DWORD *)a2 + 35);
    if ((v6 & 0x40) == 0)
    {
LABEL_15:
      if ((v6 & 0x80) == 0)
        goto LABEL_17;
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_45:
  v16 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 35) |= 0x10u;
  *((_DWORD *)this + 6) = v16;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x20) != 0)
    goto LABEL_46;
LABEL_14:
  if ((v6 & 0x40) == 0)
    goto LABEL_15;
LABEL_47:
  v18 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 35) |= 0x40u;
  *((_DWORD *)this + 8) = v18;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x80) != 0)
  {
LABEL_16:
    v7 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 35) |= 0x80u;
    *((_DWORD *)this + 9) = v7;
    v6 = *((_DWORD *)a2 + 35);
  }
LABEL_17:
  if ((v6 & 0xFF00) == 0)
    goto LABEL_27;
  if ((v6 & 0x100) != 0)
  {
    v19 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 35) |= 0x100u;
    *((_DWORD *)this + 10) = v19;
    v6 = *((_DWORD *)a2 + 35);
    if ((v6 & 0x200) == 0)
    {
LABEL_20:
      if ((v6 & 0x400) == 0)
        goto LABEL_21;
      goto LABEL_51;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  v20 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 35) |= 0x200u;
  *((_DWORD *)this + 11) = v20;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x400) == 0)
  {
LABEL_21:
    if ((v6 & 0x800) == 0)
      goto LABEL_22;
    goto LABEL_52;
  }
LABEL_51:
  v21 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 35) |= 0x400u;
  *((_DWORD *)this + 12) = v21;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x800) == 0)
  {
LABEL_22:
    if ((v6 & 0x1000) == 0)
      goto LABEL_23;
    goto LABEL_53;
  }
LABEL_52:
  v22 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 35) |= 0x800u;
  *((_DWORD *)this + 13) = v22;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x1000) == 0)
  {
LABEL_23:
    if ((v6 & 0x2000) == 0)
      goto LABEL_24;
    goto LABEL_54;
  }
LABEL_53:
  v23 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 35) |= 0x1000u;
  *((_DWORD *)this + 14) = v23;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x2000) == 0)
  {
LABEL_24:
    if ((v6 & 0x4000) == 0)
      goto LABEL_25;
    goto LABEL_55;
  }
LABEL_54:
  v24 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 35) |= 0x2000u;
  *((_DWORD *)this + 15) = v24;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x4000) == 0)
  {
LABEL_25:
    if ((v6 & 0x8000) == 0)
      goto LABEL_27;
    goto LABEL_26;
  }
LABEL_55:
  v25 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 35) |= 0x4000u;
  *((_DWORD *)this + 16) = v25;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x8000) != 0)
  {
LABEL_26:
    v8 = *((_DWORD *)a2 + 17);
    *((_DWORD *)this + 35) |= 0x8000u;
    *((_DWORD *)this + 17) = v8;
    v6 = *((_DWORD *)a2 + 35);
  }
LABEL_27:
  if ((v6 & 0xFF0000) == 0)
    goto LABEL_35;
  if ((v6 & 0x10000) != 0)
  {
    v26 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 35) |= 0x10000u;
    *((_DWORD *)this + 18) = v26;
    v6 = *((_DWORD *)a2 + 35);
    if ((v6 & 0x20000) == 0)
    {
LABEL_30:
      if ((v6 & 0x40000) == 0)
        goto LABEL_31;
      goto LABEL_59;
    }
  }
  else if ((v6 & 0x20000) == 0)
  {
    goto LABEL_30;
  }
  v27 = *((_DWORD *)a2 + 19);
  *((_DWORD *)this + 35) |= 0x20000u;
  *((_DWORD *)this + 19) = v27;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x40000) == 0)
  {
LABEL_31:
    if ((v6 & 0x200000) == 0)
      goto LABEL_32;
    goto LABEL_60;
  }
LABEL_59:
  v28 = *((_DWORD *)a2 + 24);
  *((_DWORD *)this + 35) |= 0x40000u;
  *((_DWORD *)this + 24) = v28;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x200000) == 0)
  {
LABEL_32:
    if ((v6 & 0x400000) == 0)
      goto LABEL_33;
    goto LABEL_61;
  }
LABEL_60:
  v29 = *((_DWORD *)a2 + 25);
  *((_DWORD *)this + 35) |= 0x200000u;
  *((_DWORD *)this + 25) = v29;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x400000) == 0)
  {
LABEL_33:
    if ((v6 & 0x800000) == 0)
      goto LABEL_35;
    goto LABEL_34;
  }
LABEL_61:
  v30 = *((_DWORD *)a2 + 30);
  *((_DWORD *)this + 35) |= 0x400000u;
  *((_DWORD *)this + 30) = v30;
  v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x800000) != 0)
  {
LABEL_34:
    v9 = *((_DWORD *)a2 + 31);
    *((_DWORD *)this + 35) |= 0x800000u;
    *((_DWORD *)this + 31) = v9;
    v6 = *((_DWORD *)a2 + 35);
  }
LABEL_35:
  if (HIBYTE(v6))
  {
    if ((v6 & 0x1000000) != 0)
    {
      v10 = *((_DWORD *)a2 + 32);
      *((_DWORD *)this + 35) |= 0x1000000u;
      *((_DWORD *)this + 32) = v10;
      v6 = *((_DWORD *)a2 + 35);
    }
    if ((v6 & 0x2000000) != 0)
    {
      v11 = *((_DWORD *)a2 + 33);
      *((_DWORD *)this + 35) |= 0x2000000u;
      *((_DWORD *)this + 33) = v11;
    }
  }
}

void sub_218A40020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTileFileUsage::~LocationTileFileUsage(awd::metrics::LocationTileFileUsage *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24D991690;
  v2 = *((_QWORD *)this + 13);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8052888210);
  v3 = *((_QWORD *)this + 10);
  if (v3)
    MEMORY[0x219A1DC64](v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationTileFileUsage::~LocationTileFileUsage(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationTileFileUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 136) = a2;
  return this;
}

uint64_t awd::metrics::LocationTileFileUsage::default_instance(awd::metrics::LocationTileFileUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationTileFileUsage::default_instance_;
  if (!awd::metrics::LocationTileFileUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationTileFileUsage::default_instance_;
  }
  return result;
}

double awd::metrics::LocationTileFileUsage::New(awd::metrics::LocationTileFileUsage *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991690;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_QWORD *)(v1 + 136) = 0;
  return result;
}

uint64_t awd::metrics::LocationTileFileUsage::Clear(uint64_t this)
{
  unsigned int v1;

  v1 = *(_DWORD *)(this + 140);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 56) = 0u;
    *(_OWORD *)(this + 40) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_QWORD *)(this + 72) = 0;
    *(_QWORD *)(this + 96) = 0;
    *(_QWORD *)(this + 120) = 0;
  }
  if (HIBYTE(v1))
    *(_QWORD *)(this + 128) = 0;
  *(_DWORD *)(this + 88) = 0;
  *(_DWORD *)(this + 112) = 0;
  *(_DWORD *)(this + 140) = 0;
  return this;
}

uint64_t awd::metrics::LocationTileFileUsage::MergePartialFromCodedStream(awd::metrics::LocationTileFileUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  char *v33;
  char *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  unsigned __int8 *v38;
  char *v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  _BYTE *v50;
  _BYTE *v51;
  _BYTE *v52;
  unsigned __int8 *v53;
  unsigned __int8 *v54;
  unsigned __int8 *v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  unsigned int v58;
  int v59;
  uint64_t v60;
  int v61;
  int v62;
  unsigned __int8 *v63;
  unint64_t v64;
  unsigned int v65;
  int v66;
  uint64_t v67;
  int v68;
  unsigned int v69;
  int v70;
  uint64_t v71;
  int v72;
  int v73;
  unsigned __int8 *v74;
  unint64_t v75;
  unsigned int v76;
  int v77;
  uint64_t v78;
  int v79;
  unsigned __int8 *v80;
  unsigned __int8 *v81;
  unsigned __int8 *v82;
  unsigned __int8 *v83;
  unsigned __int8 *v84;
  uint64_t result;
  unsigned int *v86;
  unsigned int *v87;
  unsigned int *v88;
  unsigned int *v89;
  unsigned int *v90;
  unsigned int *v91;
  unsigned int *v92;
  unsigned int *v93;
  unsigned int *v94;
  unsigned int *v95;
  unsigned int *v96;
  unsigned int *v97;
  unsigned int *v98;
  unsigned int *v99;
  unsigned int *v100;
  unsigned int *v101;
  unsigned int *v102;
  unsigned int *v103;
  unsigned int *v104;
  unsigned int *v105;
  _DWORD *v106;
  unsigned int v107[14];

  v4 = (_DWORD *)((char *)this + 104);
  v106 = (_DWORD *)((char *)this + 80);
  v86 = (unsigned int *)((char *)this + 8);
  v95 = (unsigned int *)((char *)this + 12);
  v97 = (unsigned int *)((char *)this + 16);
  v98 = (unsigned int *)((char *)this + 20);
  v99 = (unsigned int *)((char *)this + 24);
  v100 = (unsigned int *)((char *)this + 28);
  v101 = (unsigned int *)((char *)this + 32);
  v102 = (unsigned int *)((char *)this + 36);
  v103 = (unsigned int *)((char *)this + 40);
  v104 = (unsigned int *)((char *)this + 44);
  v105 = (unsigned int *)((char *)this + 48);
  v5 = (unsigned int *)((char *)this + 52);
  v6 = (unsigned int *)((char *)this + 56);
  v7 = (unsigned int *)((char *)this + 60);
  v8 = (unsigned int *)((char *)this + 64);
  v88 = (unsigned int *)((char *)this + 96);
  v96 = (unsigned int *)((char *)this + 100);
  v93 = (unsigned int *)((char *)this + 120);
  v94 = (unsigned int *)((char *)this + 68);
  v91 = (unsigned int *)((char *)this + 124);
  v92 = (unsigned int *)((char *)this + 72);
  v89 = (unsigned int *)((char *)this + 128);
  v90 = (unsigned int *)((char *)this + 76);
  v87 = (unsigned int *)((char *)this + 132);
LABEL_2:
  while (2)
  {
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v86);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v86 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 35) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)a2 + 1) = v15;
          goto LABEL_77;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
LABEL_77:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v95 = *v15;
          v40 = v15 + 1;
          *((_QWORD *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 35) |= 2u;
        if ((unint64_t)v40 >= v12 || *v40 != 24)
          continue;
        v16 = v40 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_85:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v97);
          if (!(_DWORD)result)
            return result;
          v41 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v97 = *v16;
          v41 = v16 + 1;
          *((_QWORD *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 35) |= 4u;
        if ((unint64_t)v41 >= v12 || *v41 != 32)
          continue;
        v17 = v41 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_93:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v98);
          if (!(_DWORD)result)
            return result;
          v42 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v98 = *v17;
          v42 = v17 + 1;
          *((_QWORD *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 35) |= 8u;
        if ((unint64_t)v42 >= v12 || *v42 != 40)
          continue;
        v18 = v42 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_101:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v99);
          if (!(_DWORD)result)
            return result;
          v43 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v99 = *v18;
          v43 = v18 + 1;
          *((_QWORD *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 35) |= 0x10u;
        if ((unint64_t)v43 >= v12 || *v43 != 48)
          continue;
        v19 = v43 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_109:
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v100);
          if (!(_DWORD)result)
            return result;
          v44 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v100 = *v19;
          v44 = v19 + 1;
          *((_QWORD *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 35) |= 0x20u;
        if ((unint64_t)v44 >= v12 || *v44 != 56)
          continue;
        v20 = v44 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_117:
        if ((unint64_t)v20 >= v12 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v101);
          if (!(_DWORD)result)
            return result;
          v45 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v101 = *v20;
          v45 = v20 + 1;
          *((_QWORD *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 35) |= 0x40u;
        if ((unint64_t)v45 >= v12 || *v45 != 64)
          continue;
        v21 = v45 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_125:
        if ((unint64_t)v21 >= v12 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v102);
          if (!(_DWORD)result)
            return result;
          v46 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v102 = *v21;
          v46 = v21 + 1;
          *((_QWORD *)a2 + 1) = v46;
        }
        *((_DWORD *)this + 35) |= 0x80u;
        if ((unint64_t)v46 >= v12 || *v46 != 72)
          continue;
        v22 = v46 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_133:
        if ((unint64_t)v22 >= v12 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v47 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v103 = *v22;
          v47 = v22 + 1;
          *((_QWORD *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 35) |= 0x100u;
        if ((unint64_t)v47 >= v12 || *v47 != 80)
          continue;
        v23 = v47 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_141:
        if ((unint64_t)v23 >= v12 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v104);
          if (!(_DWORD)result)
            return result;
          v48 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v104 = *v23;
          v48 = v23 + 1;
          *((_QWORD *)a2 + 1) = v48;
        }
        *((_DWORD *)this + 35) |= 0x200u;
        if ((unint64_t)v48 >= v12 || *v48 != 88)
          continue;
        v24 = v48 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_149:
        if ((unint64_t)v24 >= v12 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v105);
          if (!(_DWORD)result)
            return result;
          v49 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v105 = *v24;
          v49 = v24 + 1;
          *((_QWORD *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 35) |= 0x400u;
        if ((unint64_t)v49 >= v12 || *v49 != 96)
          continue;
        v25 = v49 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_157:
        if ((unint64_t)v25 >= v12 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v50 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v25;
          v50 = v25 + 1;
          *((_QWORD *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 35) |= 0x800u;
        if ((unint64_t)v50 >= v12 || *v50 != 104)
          continue;
        v26 = v50 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_165:
        if ((unint64_t)v26 >= v12 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v51 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v26;
          v51 = v26 + 1;
          *((_QWORD *)a2 + 1) = v51;
        }
        *((_DWORD *)this + 35) |= 0x1000u;
        if ((unint64_t)v51 >= v12 || *v51 != 112)
          continue;
        v27 = v51 + 1;
        *((_QWORD *)a2 + 1) = v27;
LABEL_173:
        if ((unint64_t)v27 >= v12 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v52 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v27;
          v52 = v27 + 1;
          *((_QWORD *)a2 + 1) = v52;
        }
        *((_DWORD *)this + 35) |= 0x2000u;
        if ((unint64_t)v52 >= v12 || *v52 != 120)
          continue;
        v28 = v52 + 1;
        *((_QWORD *)a2 + 1) = v28;
LABEL_181:
        if ((unint64_t)v28 >= v12 || (char)*v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v53 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v28;
          v53 = v28 + 1;
          *((_QWORD *)a2 + 1) = v53;
        }
        *((_DWORD *)this + 35) |= 0x4000u;
        if ((int)v12 - (int)v53 < 2 || *v53 != 128 || v53[1] != 1)
          continue;
        v29 = v53 + 2;
        *((_QWORD *)a2 + 1) = v29;
LABEL_190:
        if ((unint64_t)v29 >= v12 || (char)*v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v94);
          if (!(_DWORD)result)
            return result;
          v54 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v94 = *v29;
          v54 = v29 + 1;
          *((_QWORD *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 35) |= 0x8000u;
        if ((int)v12 - (int)v54 < 2 || *v54 != 136 || v54[1] != 1)
          continue;
        v30 = v54 + 2;
        *((_QWORD *)a2 + 1) = v30;
LABEL_199:
        if ((unint64_t)v30 >= v12 || (char)*v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v92);
          if (!(_DWORD)result)
            return result;
          v55 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v92 = *v30;
          v55 = v30 + 1;
          *((_QWORD *)a2 + 1) = v55;
        }
        *((_DWORD *)this + 35) |= 0x10000u;
        if ((int)v12 - (int)v55 < 2 || *v55 != 144 || v55[1] != 1)
          continue;
        v31 = v55 + 2;
        *((_QWORD *)a2 + 1) = v31;
LABEL_208:
        if ((unint64_t)v31 >= v12 || (char)*v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v90);
          if (!(_DWORD)result)
            return result;
          v56 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v90 = *v31;
          v56 = v31 + 1;
          *((_QWORD *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 35) |= 0x20000u;
        if ((int)v12 - (int)v56 < 2 || *v56 != 152 || v56[1] != 1)
          continue;
        v32 = v56 + 2;
        *((_QWORD *)a2 + 1) = v32;
LABEL_217:
        if ((unint64_t)v32 >= v12 || (char)*v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v88);
          if (!(_DWORD)result)
            return result;
          v57 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v88 = *v32;
          v57 = v32 + 1;
          *((_QWORD *)a2 + 1) = v57;
        }
        *((_DWORD *)this + 35) |= 0x40000u;
        if ((int)v12 - (int)v57 >= 2 && *v57 == 160 && v57[1] == 1)
          goto LABEL_225;
        continue;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_85;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_93;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_101;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_109;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_117;
      case 8u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_125;
      case 9u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_133;
      case 0xAu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_141;
      case 0xBu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_149;
      case 0xCu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_157;
      case 0xDu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_165;
      case 0xEu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_173;
      case 0xFu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v28 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_181;
      case 0x10u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v29 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_190;
      case 0x11u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_199;
      case 0x12u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_208;
      case 0x13u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_217;
      case 0x14u:
        v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v33 = (char *)*((_QWORD *)a2 + 1);
            v12 = *((_QWORD *)a2 + 2);
            goto LABEL_226;
          }
          goto LABEL_64;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, v106);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v57 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
          if ((int)v12 - (int)v57 <= 1)
            goto LABEL_2;
          v68 = *v57;
          if (v68 == 168)
          {
            if (v57[1] != 1)
              goto LABEL_2;
            goto LABEL_252;
          }
          if (v68 != 160 || v57[1] != 1)
            goto LABEL_2;
LABEL_225:
          v33 = (char *)(v57 + 2);
          *((_QWORD *)a2 + 1) = v33;
LABEL_226:
          v107[0] = 0;
          if ((unint64_t)v33 >= v12 || *v33 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
            if (!(_DWORD)result)
              return result;
            v58 = v107[0];
          }
          else
          {
            v58 = *v33;
            *((_QWORD *)a2 + 1) = v33 + 1;
          }
          v59 = *((_DWORD *)this + 22);
          if (v59 == *((_DWORD *)this + 23))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(v106, v59 + 1);
            v59 = *((_DWORD *)this + 22);
          }
          v60 = *((_QWORD *)this + 10);
          *((_DWORD *)this + 22) = v59 + 1;
          *(_DWORD *)(v60 + 4 * v59) = v58;
          v61 = *((_DWORD *)this + 23) - *((_DWORD *)this + 22);
          if (v61 >= 1)
          {
            v62 = v61 + 1;
            do
            {
              v63 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v64 = *((_QWORD *)a2 + 2);
              if ((int)v64 - (int)v63 < 2 || *v63 != 160 || v63[1] != 1)
                break;
              *((_QWORD *)a2 + 1) = v63 + 2;
              v107[0] = 0;
              if ((unint64_t)(v63 + 2) >= v64 || (char)v63[2] < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
                if (!(_DWORD)result)
                  return result;
                v65 = v107[0];
              }
              else
              {
                v65 = v63[2];
                *((_QWORD *)a2 + 1) = v63 + 3;
              }
              v66 = *((_DWORD *)this + 22);
              if (v66 >= *((_DWORD *)this + 23))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v107);
                v66 = *((_DWORD *)this + 22);
              }
              v67 = *((_QWORD *)this + 10);
              *((_DWORD *)this + 22) = v66 + 1;
              *(_DWORD *)(v67 + 4 * v66) = v65;
              --v62;
            }
            while (v62 > 1);
          }
        }
      case 0x15u:
        v11 = TagFallback & 7;
        if (v11 == 2)
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, v4);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v57 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
            v12 = *((_QWORD *)a2 + 2);
            if ((int)v12 - (int)v57 <= 1)
              goto LABEL_2;
            v79 = *v57;
            if (v79 == 176)
            {
              if (v57[1] == 1)
              {
                v35 = v57 + 2;
                *((_QWORD *)a2 + 1) = v35;
LABEL_280:
                if ((unint64_t)v35 >= v12 || (char)*v35 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96);
                  if (!(_DWORD)result)
                    return result;
                  v80 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                  v12 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  *v96 = *v35;
                  v80 = v35 + 1;
                  *((_QWORD *)a2 + 1) = v80;
                }
                *((_DWORD *)this + 35) |= 0x200000u;
                if ((int)v12 - (int)v80 >= 2 && *v80 == 184 && v80[1] == 1)
                {
                  v36 = v80 + 2;
                  *((_QWORD *)a2 + 1) = v36;
LABEL_289:
                  if ((unint64_t)v36 >= v12 || (char)*v36 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v93);
                    if (!(_DWORD)result)
                      return result;
                    v81 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                    v12 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    *v93 = *v36;
                    v81 = v36 + 1;
                    *((_QWORD *)a2 + 1) = v81;
                  }
                  *((_DWORD *)this + 35) |= 0x400000u;
                  if ((int)v12 - (int)v81 >= 2 && *v81 == 192 && v81[1] == 1)
                  {
                    v37 = v81 + 2;
                    *((_QWORD *)a2 + 1) = v37;
LABEL_298:
                    if ((unint64_t)v37 >= v12 || (char)*v37 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v91);
                      if (!(_DWORD)result)
                        return result;
                      v82 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                      v12 = *((_QWORD *)a2 + 2);
                    }
                    else
                    {
                      *v91 = *v37;
                      v82 = v37 + 1;
                      *((_QWORD *)a2 + 1) = v82;
                    }
                    *((_DWORD *)this + 35) |= 0x800000u;
                    if ((int)v12 - (int)v82 >= 2 && *v82 == 200 && v82[1] == 1)
                    {
                      v38 = v82 + 2;
                      *((_QWORD *)a2 + 1) = v38;
LABEL_307:
                      if ((unint64_t)v38 >= v12 || (char)*v38 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v89);
                        if (!(_DWORD)result)
                          return result;
                        v83 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                        v12 = *((_QWORD *)a2 + 2);
                      }
                      else
                      {
                        *v89 = *v38;
                        v83 = v38 + 1;
                        *((_QWORD *)a2 + 1) = v83;
                      }
                      *((_DWORD *)this + 35) |= 0x1000000u;
                      if ((int)v12 - (int)v83 >= 2 && *v83 == 208 && v83[1] == 1)
                      {
                        v39 = (char *)(v83 + 2);
                        *((_QWORD *)a2 + 1) = v39;
LABEL_316:
                        if ((unint64_t)v39 >= v12 || *v39 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v87);
                          if (!(_DWORD)result)
                            return result;
                          v84 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                          v12 = *((_QWORD *)a2 + 2);
                        }
                        else
                        {
                          *v87 = *v39;
                          v84 = (unsigned __int8 *)(v39 + 1);
                          *((_QWORD *)a2 + 1) = v84;
                        }
                        *((_DWORD *)this + 35) |= 0x2000000u;
                        if (v84 == (unsigned __int8 *)v12
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          result = 1;
                          *((_BYTE *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              goto LABEL_2;
            }
            if (v79 != 168 || v57[1] != 1)
              goto LABEL_2;
LABEL_252:
            v34 = (char *)(v57 + 2);
            *((_QWORD *)a2 + 1) = v34;
LABEL_253:
            v107[0] = 0;
            if ((unint64_t)v34 >= v12 || *v34 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
              if (!(_DWORD)result)
                return result;
              v69 = v107[0];
            }
            else
            {
              v69 = *v34;
              *((_QWORD *)a2 + 1) = v34 + 1;
            }
            v70 = *((_DWORD *)this + 28);
            if (v70 == *((_DWORD *)this + 29))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(v4, v70 + 1);
              v70 = *((_DWORD *)this + 28);
            }
            v71 = *((_QWORD *)this + 13);
            *((_DWORD *)this + 28) = v70 + 1;
            *(_DWORD *)(v71 + 4 * v70) = v69;
            v72 = *((_DWORD *)this + 29) - *((_DWORD *)this + 28);
            if (v72 >= 1)
            {
              v73 = v72 + 1;
              do
              {
                v74 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v75 = *((_QWORD *)a2 + 2);
                if ((int)v75 - (int)v74 < 2 || *v74 != 168 || v74[1] != 1)
                  break;
                *((_QWORD *)a2 + 1) = v74 + 2;
                v107[0] = 0;
                if ((unint64_t)(v74 + 2) >= v75 || (char)v74[2] < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
                  if (!(_DWORD)result)
                    return result;
                  v76 = v107[0];
                }
                else
                {
                  v76 = v74[2];
                  *((_QWORD *)a2 + 1) = v74 + 3;
                }
                v77 = *((_DWORD *)this + 28);
                if (v77 >= *((_DWORD *)this + 29))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v107);
                  v77 = *((_DWORD *)this + 28);
                }
                v78 = *((_QWORD *)this + 13);
                *((_DWORD *)this + 28) = v77 + 1;
                *(_DWORD *)(v78 + 4 * v77) = v76;
                --v73;
              }
              while (v73 > 1);
            }
          }
        }
        if ((TagFallback & 7) == 0)
        {
          v34 = (char *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
          goto LABEL_253;
        }
LABEL_64:
        if (v11 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      case 0x16u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v35 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_280;
      case 0x17u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v36 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_289;
      case 0x18u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v37 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_298;
      case 0x19u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_307;
      case 0x1Au:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_64;
        v39 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_316;
      default:
        v11 = TagFallback & 7;
        goto LABEL_64;
    }
  }
}

void sub_218A41220(_Unwind_Exception *a1)
{
  uint64_t v1;

  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)(v1 - 136));
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::LocationTileFileUsage::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 140);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 140);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_35;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_48;
  }
LABEL_47:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_49;
  }
LABEL_48:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_21;
    goto LABEL_20;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 140) & 0x40000) != 0)
LABEL_20:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
LABEL_21:
  if (*(int *)(v5 + 88) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(*(_QWORD *)(v5 + 80) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 88));
  }
  if (*(int *)(v5 + 112) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(*(_QWORD *)(v5 + 104) + 4 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 112));
  }
  v9 = *(_DWORD *)(v5 + 140);
  if ((v9 & 0x200000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 100), (uint64_t)a2, a4);
    v9 = *(_DWORD *)(v5 + 140);
    if ((v9 & 0x400000) == 0)
    {
LABEL_29:
      if ((v9 & 0x800000) == 0)
        goto LABEL_30;
      goto LABEL_54;
    }
  }
  else if ((v9 & 0x400000) == 0)
  {
    goto LABEL_29;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned int *)(v5 + 120), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 140);
  if ((v9 & 0x800000) == 0)
  {
LABEL_30:
    if ((v9 & 0x1000000) == 0)
      goto LABEL_31;
    goto LABEL_55;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned int *)(v5 + 124), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 140);
  if ((v9 & 0x1000000) == 0)
  {
LABEL_31:
    if ((v9 & 0x2000000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, *(unsigned int *)(v5 + 132), (uint64_t)a2, a4);
  }
LABEL_55:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(unsigned int *)(v5 + 128), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 140) & 0x2000000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, *(unsigned int *)(v5 + 132), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationTileFileUsage::ByteSize(awd::metrics::LocationTileFileUsage *this)
{
  unsigned int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  int v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  int v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  int v41;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v42;
  int v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  int v45;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v46;
  int v47;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v48;
  int v49;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v60;
  int v61;
  uint64_t result;

  v2 = *((_DWORD *)this + 35);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_45;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v5 = 1;
  }
  v3 = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_10:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *((_DWORD *)this + 35);
    }
    else
    {
      v7 = 1;
    }
    v3 += v7 + 1;
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = *((_DWORD *)this + 35);
    }
    else
    {
      v9 = 1;
    }
    v3 += v9 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v11 = 1;
  }
  v3 += v11 + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_33;
  }
LABEL_29:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v13 = 1;
  }
  v3 += v13 + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_37;
  }
LABEL_33:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v15 = 1;
  }
  v3 += v15 + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0)
      goto LABEL_45;
    goto LABEL_41;
  }
LABEL_37:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v17 = 1;
  }
  v3 += v17 + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_41:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      v2 = *((_DWORD *)this + 35);
    }
    else
    {
      v19 = 1;
    }
    v3 += v19 + 1;
  }
LABEL_45:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_87;
  if ((v2 & 0x100) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v2 = *((_DWORD *)this + 35);
    }
    else
    {
      v21 = 1;
    }
    v3 += v21 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_48:
      if ((v2 & 0x400) == 0)
        goto LABEL_49;
      goto LABEL_63;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v23 = 1;
  }
  v3 += v23 + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0)
      goto LABEL_50;
    goto LABEL_67;
  }
LABEL_63:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v25 = 1;
  }
  v3 += v25 + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000) == 0)
      goto LABEL_51;
    goto LABEL_71;
  }
LABEL_67:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v27 = 1;
  }
  v3 += v27 + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_51:
    if ((v2 & 0x2000) == 0)
      goto LABEL_52;
    goto LABEL_75;
  }
LABEL_71:
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v28 >= 0x80)
  {
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v29 = 1;
  }
  v3 += v29 + 1;
  if ((v2 & 0x2000) == 0)
  {
LABEL_52:
    if ((v2 & 0x4000) == 0)
      goto LABEL_53;
    goto LABEL_79;
  }
LABEL_75:
  v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if (v30 >= 0x80)
  {
    v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v31 = 1;
  }
  v3 += v31 + 1;
  if ((v2 & 0x4000) == 0)
  {
LABEL_53:
    if ((v2 & 0x8000) == 0)
      goto LABEL_87;
    goto LABEL_83;
  }
LABEL_79:
  v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v32 >= 0x80)
  {
    v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v33 = 1;
  }
  v3 += v33 + 1;
  if ((v2 & 0x8000) != 0)
  {
LABEL_83:
    v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if (v34 >= 0x80)
    {
      v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34);
      v2 = *((_DWORD *)this + 35);
    }
    else
    {
      v35 = 1;
    }
    v3 += v35 + 2;
  }
LABEL_87:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_119;
  if ((v2 & 0x10000) != 0)
  {
    v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if (v36 >= 0x80)
    {
      v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
      v2 = *((_DWORD *)this + 35);
    }
    else
    {
      v37 = 1;
    }
    v3 += v37 + 2;
    if ((v2 & 0x20000) == 0)
    {
LABEL_90:
      if ((v2 & 0x40000) == 0)
        goto LABEL_91;
      goto LABEL_103;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_90;
  }
  v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if (v38 >= 0x80)
  {
    v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v39 = 1;
  }
  v3 += v39 + 2;
  if ((v2 & 0x40000) == 0)
  {
LABEL_91:
    if ((v2 & 0x200000) == 0)
      goto LABEL_92;
    goto LABEL_107;
  }
LABEL_103:
  v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 24);
  if (v40 >= 0x80)
  {
    v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40);
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v41 = 1;
  }
  v3 += v41 + 2;
  if ((v2 & 0x200000) == 0)
  {
LABEL_92:
    if ((v2 & 0x400000) == 0)
      goto LABEL_93;
    goto LABEL_111;
  }
LABEL_107:
  v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 25);
  if (v42 >= 0x80)
  {
    v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42) + 2;
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v43 = 3;
  }
  v3 += v43;
  if ((v2 & 0x400000) == 0)
  {
LABEL_93:
    if ((v2 & 0x800000) == 0)
      goto LABEL_119;
    goto LABEL_115;
  }
LABEL_111:
  v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
  if (v44 >= 0x80)
  {
    v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44) + 2;
    v2 = *((_DWORD *)this + 35);
  }
  else
  {
    v45 = 3;
  }
  v3 += v45;
  if ((v2 & 0x800000) != 0)
  {
LABEL_115:
    v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 31);
    if (v46 >= 0x80)
    {
      v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46) + 2;
      v2 = *((_DWORD *)this + 35);
    }
    else
    {
      v47 = 3;
    }
    v3 += v47;
  }
LABEL_119:
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
      if (v48 >= 0x80)
      {
        v49 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48) + 2;
        v2 = *((_DWORD *)this + 35);
      }
      else
      {
        v49 = 3;
      }
      v3 += v49;
    }
    if ((v2 & 0x2000000) != 0)
    {
      v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 33);
      if (v50 >= 0x80)
        v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50) + 2;
      else
        v51 = 3;
      v3 += v51;
    }
  }
  v52 = *((_DWORD *)this + 22);
  if (v52 < 1)
  {
    v54 = 0;
  }
  else
  {
    v53 = 0;
    v54 = 0;
    do
    {
      v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 10)
                                                                                             + 4 * v53);
      if ((v55 & 0x80000000) != 0)
      {
        v56 = 10;
      }
      else if (v55 >= 0x80)
      {
        v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
        v52 = *((_DWORD *)this + 22);
      }
      else
      {
        v56 = 1;
      }
      v54 += v56;
      ++v53;
    }
    while (v53 < v52);
  }
  v57 = *((_DWORD *)this + 28);
  if (v57 < 1)
  {
    v59 = 0;
  }
  else
  {
    v58 = 0;
    v59 = 0;
    do
    {
      v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 13)
                                                                                             + 4 * v58);
      if ((v60 & 0x80000000) != 0)
      {
        v61 = 10;
      }
      else if (v60 >= 0x80)
      {
        v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60);
        v57 = *((_DWORD *)this + 28);
      }
      else
      {
        v61 = 1;
      }
      v59 += v61;
      ++v58;
    }
    while (v58 < v57);
  }
  result = (v54 + v3 + v59 + 2 * (v57 + v52));
  *((_DWORD *)this + 34) = result;
  return result;
}

void awd::metrics::LocationTileFileUsage::CheckTypeAndMergeFrom(awd::metrics::LocationTileFileUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationTileFileUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationTileFileUsage::CopyFrom(awd::metrics::LocationTileFileUsage *this, const awd::metrics::LocationTileFileUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationTileFileUsage *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationTileFileUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationTileFileUsage::IsInitialized(awd::metrics::LocationTileFileUsage *this)
{
  return 1;
}

double awd::metrics::LocationTileFileUsage::Swap(awd::metrics::LocationTileFileUsage *this, awd::metrics::LocationTileFileUsage *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    v8 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    v9 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
    v10 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v10;
    v11 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v11;
    v12 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v12;
    v13 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v13;
    v14 = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v14;
    v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v15;
    v16 = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v16;
    v17 = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v17;
    v18 = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v18;
    v19 = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v19;
    v20 = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v20;
    v21 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    v22 = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 10) = v21;
    v23 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v22;
    *((_QWORD *)a2 + 11) = v23;
    v24 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    result = *((double *)a2 + 14);
    *((_QWORD *)a2 + 13) = v24;
    v26 = *((_QWORD *)this + 14);
    *((double *)this + 14) = result;
    *((_QWORD *)a2 + 14) = v26;
    LODWORD(v24) = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v24;
    LODWORD(v24) = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v24;
    LODWORD(v24) = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v24;
    LODWORD(v24) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v24;
    LODWORD(v24) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v24;
    LODWORD(v24) = *((_DWORD *)this + 35);
    *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
    *((_DWORD *)a2 + 35) = v24;
    LODWORD(v24) = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v24;
  }
  return result;
}

_QWORD *awd::metrics::LocationTileFileUsage::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationTileFileUsage");
}

double awd::metrics::LocationTileFile::SharedCtor(awd::metrics::LocationTileFile *this)
{
  double result;

  result = 0.0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return result;
}

awd::metrics::LocationTileFile *awd::metrics::LocationTileFile::LocationTileFile(awd::metrics::LocationTileFile *this, const awd::metrics::LocationTileFile *a2)
{
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *(_QWORD *)this = &off_24D991708;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  awd::metrics::LocationTileFile::MergeFrom(this, a2);
  return this;
}

void sub_218A41DAC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFileUsage>::TypeHandler>(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTileFile::MergeFrom(awd::metrics::LocationTileFile *this, const awd::metrics::LocationTileFile *a2)
{
  uint64_t v4;
  const awd::metrics::LocationTileFileUsage *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationTileFile *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationTileFileUsage **)(*((_QWORD *)a2 + 2) + 8 * v4);
      v6 = *((_DWORD *)this + 7);
      v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationTileFile *)((char *)this + 16));
          v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_24D991690;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *(_OWORD *)(v9 + 56) = 0u;
        *(_OWORD *)(v9 + 72) = 0u;
        *(_OWORD *)(v9 + 88) = 0u;
        *(_OWORD *)(v9 + 104) = 0u;
        *(_OWORD *)(v9 + 120) = 0u;
        *(_QWORD *)(v9 + 136) = 0;
        v10 = *((_QWORD *)this + 2);
        v11 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      awd::metrics::LocationTileFileUsage::MergeFrom((awd::metrics::LocationTileFileUsage *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  LOBYTE(v12) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v12)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      v14 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 12) |= 1u;
      *((_DWORD *)this + 2) = v14;
      v12 = *((_DWORD *)a2 + 12);
      if ((v12 & 2) == 0)
      {
LABEL_14:
        if ((v12 & 4) == 0)
          return;
        goto LABEL_15;
      }
    }
    else if ((*((_BYTE *)a2 + 48) & 2) == 0)
    {
      goto LABEL_14;
    }
    v15 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 12) |= 2u;
    *((_DWORD *)this + 3) = v15;
    if ((*((_DWORD *)a2 + 12) & 4) == 0)
      return;
LABEL_15:
    v13 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 12) |= 4u;
    *((_DWORD *)this + 10) = v13;
  }
}

void sub_218A41F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTileFile::~LocationTileFile(awd::metrics::LocationTileFile *this)
{
  *(_QWORD *)this = &off_24D991708;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFileUsage>::TypeHandler>((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationTileFile::~LocationTileFile(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationTileFile::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationTileFile::default_instance(awd::metrics::LocationTileFile *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationTileFile::default_instance_;
  if (!awd::metrics::LocationTileFile::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationTileFile::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationTileFile::New(awd::metrics::LocationTileFile *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)result = &off_24D991708;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t awd::metrics::LocationTileFile::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(_BYTE *)(this + 48))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 40) = 0;
  }
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationTileFile::MergePartialFromCodedStream(awd::metrics::LocationTileFile *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  unsigned __int8 *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  char *v12;
  char *v13;
  uint64_t result;
  unsigned int v15;
  _BYTE *v16;
  unsigned int v17;
  _BYTE *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  BOOL v29;
  int v30;
  _BYTE *v31;
  unsigned int v32;

  v4 = (awd::metrics::LocationTileFile *)((char *)this + 16);
  while (1)
  {
    v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || (char)*v5 < 0)
      break;
    TagFallback = *v5;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((_QWORD *)a2 + 1) = v5 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v32 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!(_DWORD)result)
            return result;
          v10 = v32;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v10 = *v9;
          v11 = v9 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 2) = v10;
        *((_DWORD *)this + 12) |= 1u;
        if ((unint64_t)v11 < v8 && *v11 == 16)
        {
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
          goto LABEL_26;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
LABEL_26:
        v32 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!(_DWORD)result)
            return result;
          v15 = v32;
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v15 = *v12;
          v16 = v12 + 1;
          *((_QWORD *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 3) = v15;
        *((_DWORD *)this + 12) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24)
          continue;
        v13 = v16 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_34:
        v32 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!(_DWORD)result)
            return result;
          v17 = v32;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v17 = *v13;
          v18 = v13 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 10) = v17;
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 34)
          continue;
        break;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_34;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        goto LABEL_42;
      default:
        v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    do
    {
      *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_42:
      v19 = *((_DWORD *)this + 7);
      v20 = *((int *)this + 6);
      if ((int)v20 >= v19)
      {
        if (v19 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
          v19 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v19 + 1;
        v22 = operator new();
        *(_QWORD *)v22 = &off_24D991690;
        *(_OWORD *)(v22 + 8) = 0u;
        *(_OWORD *)(v22 + 24) = 0u;
        *(_OWORD *)(v22 + 40) = 0u;
        *(_OWORD *)(v22 + 56) = 0u;
        *(_OWORD *)(v22 + 72) = 0u;
        *(_OWORD *)(v22 + 88) = 0u;
        *(_OWORD *)(v22 + 104) = 0u;
        *(_OWORD *)(v22 + 120) = 0u;
        *(_QWORD *)(v22 + 136) = 0;
        v23 = *((_QWORD *)this + 2);
        v24 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v24 + 1;
        *(_QWORD *)(v23 + 8 * v24) = v22;
      }
      else
      {
        v21 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v20 + 1;
        v22 = *(_QWORD *)(v21 + 8 * v20);
      }
      v32 = 0;
      v25 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))
          return 0;
      }
      else
      {
        v32 = *v25;
        *((_QWORD *)a2 + 1) = v25 + 1;
      }
      v26 = *((_DWORD *)a2 + 14);
      v27 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v26 + 1;
      if (v26 >= v27)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationTileFileUsage::MergePartialFromCodedStream((awd::metrics::LocationTileFileUsage *)v22, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v28 = *((_DWORD *)a2 + 14);
      v29 = __OFSUB__(v28, 1);
      v30 = v28 - 1;
      if (v30 < 0 == v29)
        *((_DWORD *)a2 + 14) = v30;
      v18 = (_BYTE *)*((_QWORD *)a2 + 1);
      v31 = (_BYTE *)*((_QWORD *)a2 + 2);
    }
    while (v18 < v31 && *v18 == 34);
    if (v18 == v31 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
  TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t awd::metrics::LocationTileFile::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 4) != 0)
LABEL_4:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
LABEL_5:
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t awd::metrics::LocationTileFile::ByteSize(awd::metrics::LocationTileFile *this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;

  LOBYTE(v2) = *((_BYTE *)this + 48);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_26;
  }
  if ((*((_BYTE *)this + 48) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 12);
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 48) & 2) == 0)
      goto LABEL_19;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 12);
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_19:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    }
    else
    {
      v8 = 2;
    }
    v3 += v8;
  }
LABEL_26:
  v9 = *((_DWORD *)this + 6);
  v10 = (v9 + v3);
  if (v9 >= 1)
  {
    v11 = 0;
    do
    {
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationTileFileUsage::ByteSize(*(awd::metrics::LocationTileFileUsage **)(*((_QWORD *)this + 2) + 8 * v11));
      v13 = (int)v12;
      if (v12 >= 0x80)
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
      else
        v14 = 1;
      v10 = (v13 + v10 + v14);
      ++v11;
    }
    while (v11 < *((int *)this + 6));
  }
  *((_DWORD *)this + 11) = v10;
  return v10;
}

void awd::metrics::LocationTileFile::CheckTypeAndMergeFrom(awd::metrics::LocationTileFile *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationTileFile::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationTileFile::CopyFrom(awd::metrics::LocationTileFile *this, const awd::metrics::LocationTileFile *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationTileFile *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationTileFile::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationTileFile::IsInitialized(awd::metrics::LocationTileFile *this)
{
  return 1;
}

awd::metrics::LocationTileFile *awd::metrics::LocationTileFile::Swap(awd::metrics::LocationTileFile *this, awd::metrics::LocationTileFile *a2)
{
  awd::metrics::LocationTileFile *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v4;
    v5 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v5;
    v6 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
    this = (awd::metrics::LocationTileFile *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v7 = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v7;
    v8 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v8;
  }
  return this;
}

_QWORD *awd::metrics::LocationTileFile::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationTileFile");
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

awd::metrics::LocationWifiAPLocationProviderSession *awd::metrics::LocationWifiAPLocationProviderSession::LocationWifiAPLocationProviderSession(awd::metrics::LocationWifiAPLocationProviderSession *this, const awd::metrics::LocationWifiAPLocationProviderSession *a2)
{
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  *(_QWORD *)this = &off_24D991780;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  awd::metrics::LocationWifiAPLocationProviderSession::MergeFrom(this, a2);
  return this;
}

void sub_218A42870(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFile>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSessionDay>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiAPLocationProviderSession::MergeFrom(awd::metrics::LocationWifiAPLocationProviderSession *this, const awd::metrics::LocationWifiAPLocationProviderSession *a2)
{
  uint64_t v4;
  const awd::metrics::LocationSessionDay *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const awd::metrics::LocationTileFile *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  _BYTE v23[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationSessionDay **)(*((_QWORD *)a2 + 2) + 8 * v4);
      v6 = *((_DWORD *)this + 7);
      v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 16));
          v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_24D991618;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *(_OWORD *)(v9 + 56) = 0u;
        *(_OWORD *)(v9 + 68) = 0u;
        v10 = *((_QWORD *)this + 2);
        v11 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      awd::metrics::LocationSessionDay::MergeFrom((awd::metrics::LocationSessionDay *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const awd::metrics::LocationTileFile **)(*((_QWORD *)a2 + 5) + 8 * v12);
      v14 = *((_DWORD *)this + 13);
      v15 = *((int *)this + 12);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 40));
          v14 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v14 + 1;
        v17 = operator new();
        *(_QWORD *)(v17 + 40) = 0;
        *(_DWORD *)(v17 + 48) = 0;
        *(_QWORD *)v17 = &off_24D991708;
        *(_QWORD *)(v17 + 8) = 0;
        *(_QWORD *)(v17 + 16) = 0;
        *(_QWORD *)(v17 + 24) = 0;
        *(_DWORD *)(v17 + 32) = 0;
        v18 = *((_QWORD *)this + 5);
        v19 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 5);
        *((_DWORD *)this + 12) = v15 + 1;
        v17 = *(_QWORD *)(v16 + 8 * v15);
      }
      awd::metrics::LocationTileFile::MergeFrom((awd::metrics::LocationTileFile *)v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 12));
  }
  LOBYTE(v20) = *((_BYTE *)a2 + 72);
  if ((_BYTE)v20)
  {
    if ((*((_BYTE *)a2 + 72) & 1) != 0)
    {
      v21 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 18) |= 1u;
      *((_QWORD *)this + 1) = v21;
      v20 = *((_DWORD *)a2 + 18);
    }
    if ((v20 & 2) != 0)
    {
      v22 = *((_DWORD *)a2 + 16);
      *((_DWORD *)this + 18) |= 2u;
      *((_DWORD *)this + 16) = v22;
    }
  }
}

void sub_218A42B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiAPLocationProviderSession::~LocationWifiAPLocationProviderSession(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
  *(_QWORD *)this = &off_24D991780;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFile>::TypeHandler>((uint64_t *)this + 5);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSessionDay>::TypeHandler>((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationWifiAPLocationProviderSession::~LocationWifiAPLocationProviderSession(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::default_instance(awd::metrics::LocationWifiAPLocationProviderSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationWifiAPLocationProviderSession::default_instance_;
  if (!awd::metrics::LocationWifiAPLocationProviderSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationWifiAPLocationProviderSession::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::New(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  *(_QWORD *)result = &off_24D991780;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  if (*(_BYTE *)(this + 72))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 64) = 0;
  }
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  if (*(int *)(v1 + 48) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  return this;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::MergePartialFromCodedStream(awd::metrics::LocationWifiAPLocationProviderSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  unsigned __int8 *v8;
  uint64_t TagFallback;
  int v10;
  unint64_t v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  uint64_t result;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  BOOL v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  int v40;
  _BYTE *v41;
  unsigned int v42;
  unsigned int v43;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 64);
  v6 = (awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 16);
  v7 = (awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 40);
LABEL_2:
  while (1)
  {
    v8 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || (char)*v8 < 0)
      break;
    TagFallback = *v8;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((_QWORD *)a2 + 1) = v8 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 18) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 16)
        {
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
          goto LABEL_26;
        }
        continue;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
LABEL_26:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v14;
          v16 = v14 + 1;
          *((_QWORD *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 18) |= 2u;
        if ((unint64_t)v16 >= v11 || *v16 != 26)
          continue;
        break;
      case 3u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_34;
        goto LABEL_18;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_18;
        goto LABEL_52;
      default:
        v10 = TagFallback & 7;
LABEL_18:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    do
    {
      *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_34:
      v17 = *((_DWORD *)this + 7);
      v18 = *((int *)this + 6);
      if ((int)v18 >= v17)
      {
        if (v17 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
          v17 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v17 + 1;
        v20 = operator new();
        *(_QWORD *)v20 = &off_24D991618;
        *(_OWORD *)(v20 + 8) = 0u;
        *(_OWORD *)(v20 + 24) = 0u;
        *(_OWORD *)(v20 + 40) = 0u;
        *(_OWORD *)(v20 + 56) = 0u;
        *(_OWORD *)(v20 + 68) = 0u;
        v21 = *((_QWORD *)this + 2);
        v22 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v22 + 1;
        *(_QWORD *)(v21 + 8 * v22) = v20;
      }
      else
      {
        v19 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v18 + 1;
        v20 = *(_QWORD *)(v19 + 8 * v18);
      }
      v42 = 0;
      v23 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42))
          return 0;
      }
      else
      {
        v42 = *v23;
        *((_QWORD *)a2 + 1) = v23 + 1;
      }
      v24 = *((_DWORD *)a2 + 14);
      v25 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v24 + 1;
      if (v24 >= v25)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationSessionDay::MergePartialFromCodedStream((awd::metrics::LocationSessionDay *)v20, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v26 = *((_DWORD *)a2 + 14);
      v27 = __OFSUB__(v26, 1);
      v28 = v26 - 1;
      if (v28 < 0 == v27)
        *((_DWORD *)a2 + 14) = v28;
      v16 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v16 >= *((_QWORD *)a2 + 2))
        goto LABEL_2;
      v29 = *v16;
    }
    while (v29 == 26);
    if (v29 == 34)
    {
      do
      {
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_52:
        v30 = *((_DWORD *)this + 13);
        v31 = *((int *)this + 12);
        if ((int)v31 >= v30)
        {
          if (v30 == *((_DWORD *)this + 14))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
            v30 = *((_DWORD *)this + 13);
          }
          *((_DWORD *)this + 13) = v30 + 1;
          v33 = operator new();
          *(_QWORD *)(v33 + 40) = 0;
          *(_DWORD *)(v33 + 48) = 0;
          *(_QWORD *)v33 = &off_24D991708;
          *(_QWORD *)(v33 + 8) = 0;
          *(_QWORD *)(v33 + 16) = 0;
          *(_QWORD *)(v33 + 24) = 0;
          *(_DWORD *)(v33 + 32) = 0;
          v34 = *((_QWORD *)this + 5);
          v35 = *((int *)this + 12);
          *((_DWORD *)this + 12) = v35 + 1;
          *(_QWORD *)(v34 + 8 * v35) = v33;
        }
        else
        {
          v32 = *((_QWORD *)this + 5);
          *((_DWORD *)this + 12) = v31 + 1;
          v33 = *(_QWORD *)(v32 + 8 * v31);
        }
        v43 = 0;
        v36 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43))return 0;
        }
        else
        {
          v43 = *v36;
          *((_QWORD *)a2 + 1) = v36 + 1;
        }
        v37 = *((_DWORD *)a2 + 14);
        v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationTileFile::MergePartialFromCodedStream((awd::metrics::LocationTileFile *)v33, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v39 = *((_DWORD *)a2 + 14);
        v27 = __OFSUB__(v39, 1);
        v40 = v39 - 1;
        if (v40 < 0 == v27)
          *((_DWORD *)a2 + 14) = v40;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v41 = (_BYTE *)*((_QWORD *)a2 + 2);
      }
      while (v16 < v41 && *v16 == 34);
      if (v16 == v41 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
  }
  TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
  }
  if ((v6 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 40) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  return this;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::ByteSize(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
  int v2;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;

  if (!*((_BYTE *)this + 72))
  {
    v2 = 0;
    goto LABEL_11;
  }
  if ((*((_BYTE *)this + 72) & 1) != 0)
  {
    v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    if ((*((_DWORD *)this + 18) & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v2 = 0;
    if ((*((_BYTE *)this + 72) & 2) == 0)
      goto LABEL_11;
  }
  v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v3 >= 0x80)
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
  else
    v4 = 2;
  v2 += v4;
LABEL_11:
  v5 = *((_DWORD *)this + 6);
  v6 = v5 + v2;
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationSessionDay::ByteSize(*(awd::metrics::LocationSessionDay **)(*((_QWORD *)this + 2) + 8 * v7));
      v9 = (int)v8;
      if (v8 >= 0x80)
        v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      else
        v10 = 1;
      v6 += v9 + v10;
      ++v7;
    }
    while (v7 < *((int *)this + 6));
  }
  v11 = *((_DWORD *)this + 12);
  v12 = (v11 + v6);
  if (v11 >= 1)
  {
    v13 = 0;
    do
    {
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationTileFile::ByteSize(*(awd::metrics::LocationTileFile **)(*((_QWORD *)this + 5) + 8 * v13));
      v15 = (int)v14;
      if (v14 >= 0x80)
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      else
        v16 = 1;
      v12 = (v15 + v12 + v16);
      ++v13;
    }
    while (v13 < *((int *)this + 12));
  }
  *((_DWORD *)this + 17) = v12;
  return v12;
}

void awd::metrics::LocationWifiAPLocationProviderSession::CheckTypeAndMergeFrom(awd::metrics::LocationWifiAPLocationProviderSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationWifiAPLocationProviderSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationWifiAPLocationProviderSession::CopyFrom(awd::metrics::LocationWifiAPLocationProviderSession *this, const awd::metrics::LocationWifiAPLocationProviderSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationWifiAPLocationProviderSession *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationWifiAPLocationProviderSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::IsInitialized(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
  return 1;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::Swap(uint64_t this, awd::metrics::LocationWifiAPLocationProviderSession *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != (awd::metrics::LocationWifiAPLocationProviderSession *)this)
  {
    v3 = this;
    v4 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v4;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *(_DWORD *)(v3 + 72);
    *(_DWORD *)(v3 + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v5;
    v6 = *(_DWORD *)(v3 + 68);
    *(_DWORD *)(v3 + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v6;
  }
  return this;
}

_QWORD *awd::metrics::LocationWifiAPLocationProviderSession::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationWifiAPLocationProviderSession");
}

double awd::metrics::LocationWifiTileSync::SharedCtor(awd::metrics::LocationWifiTileSync *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationWifiTileSync *awd::metrics::LocationWifiTileSync::LocationWifiTileSync(awd::metrics::LocationWifiTileSync *this, const awd::metrics::LocationWifiTileSync *a2)
{
  *(_QWORD *)this = &off_24D9917F8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  awd::metrics::LocationWifiTileSync::MergeFrom(this, a2);
  return this;
}

void sub_218A434E0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiTileSync::MergeFrom(awd::metrics::LocationWifiTileSync *this, const awd::metrics::LocationWifiTileSync *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _BYTE v12[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 11);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_15;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 11) |= 2u;
    *((_DWORD *)this + 4) = v7;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    v8 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 11) |= 4u;
    *((_DWORD *)this + 5) = v8;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_17;
    }
LABEL_16:
    v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 11) |= 8u;
    *((_DWORD *)this + 6) = v9;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_18;
    }
LABEL_17:
    v10 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 11) |= 0x10u;
    *((_DWORD *)this + 7) = v10;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        return;
      goto LABEL_11;
    }
LABEL_18:
    v11 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 11) |= 0x20u;
    *((_DWORD *)this + 8) = v11;
    if ((*((_DWORD *)a2 + 11) & 0x40) == 0)
      return;
LABEL_11:
    v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 11) |= 0x40u;
    *((_DWORD *)this + 9) = v5;
  }
}

void sub_218A43644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiTileSync::~LocationWifiTileSync(awd::metrics::LocationWifiTileSync *this)
{
  *(_QWORD *)this = &off_24D9917F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9917F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9917F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationWifiTileSync::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationWifiTileSync::default_instance(awd::metrics::LocationWifiTileSync *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationWifiTileSync::default_instance_;
  if (!awd::metrics::LocationWifiTileSync::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationWifiTileSync::default_instance_;
  }
  return result;
}

double awd::metrics::LocationWifiTileSync::New(awd::metrics::LocationWifiTileSync *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D9917F8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationWifiTileSync::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationWifiTileSync::MergePartialFromCodedStream(awd::metrics::LocationWifiTileSync *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  unsigned __int8 *v28;
  uint64_t result;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 16);
  v6 = (unsigned int *)((char *)this + 20);
  v7 = (unsigned int *)((char *)this + 24);
  v8 = (unsigned int *)((char *)this + 28);
  v9 = (unsigned int *)((char *)this + 32);
  v10 = (unsigned int *)((char *)this + 36);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v4 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_30:
          *((_DWORD *)this + 11) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_33;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_30;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_33:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v23 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v17;
          v23 = v17 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 11) |= 2u;
        if ((unint64_t)v23 >= v14 || *v23 != 24)
          continue;
        v18 = v23 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_41:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v18;
          v24 = v18 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 11) |= 4u;
        if ((unint64_t)v24 >= v14 || *v24 != 32)
          continue;
        v19 = v24 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_49:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v19;
          v25 = v19 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 11) |= 8u;
        if ((unint64_t)v25 >= v14 || *v25 != 40)
          continue;
        v20 = v25 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_57:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v20;
          v26 = v20 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 11) |= 0x10u;
        if ((unint64_t)v26 >= v14 || *v26 != 48)
          continue;
        v21 = v26 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_65:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v21;
          v27 = v21 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 11) |= 0x20u;
        if ((unint64_t)v27 >= v14 || *v27 != 56)
          continue;
        v22 = v27 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_73:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v28 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v22;
          v28 = (unsigned __int8 *)(v22 + 1);
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 11) |= 0x40u;
        if (v28 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_41;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_49;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_57;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_65;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_73;
      default:
        v13 = TagFallback & 7;
LABEL_24:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationWifiTileSync::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  if ((v5[11] & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationWifiTileSync::ByteSize(awd::metrics::LocationWifiTileSync *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_37;
  }
  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 11);
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 44) & 2) == 0)
      goto LABEL_11;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v5 = 2;
  }
  v3 = (v5 + v3);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      v2 = *((_DWORD *)this + 11);
    }
    else
    {
      v7 = 2;
    }
    v3 = (v7 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_25;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v9 = 2;
  }
  v3 = (v9 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0)
      goto LABEL_15;
    goto LABEL_29;
  }
LABEL_25:
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v11 = 2;
  }
  v3 = (v11 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0)
      goto LABEL_37;
    goto LABEL_33;
  }
LABEL_29:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_33:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v14 >= 0x80)
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    else
      v15 = 2;
    v3 = (v15 + v3);
  }
LABEL_37:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void awd::metrics::LocationWifiTileSync::CheckTypeAndMergeFrom(awd::metrics::LocationWifiTileSync *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationWifiTileSync::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationWifiTileSync::CopyFrom(awd::metrics::LocationWifiTileSync *this, const awd::metrics::LocationWifiTileSync *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationWifiTileSync *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationWifiTileSync::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationWifiTileSync::IsInitialized(awd::metrics::LocationWifiTileSync *this)
{
  return 1;
}

uint64_t awd::metrics::LocationWifiTileSync::Swap(uint64_t this, awd::metrics::LocationWifiTileSync *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::LocationWifiTileSync *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationWifiTileSync::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationWifiTileSync");
}

uint64_t awd::metrics::LocationTilesUsage::GetCachedSize(awd::metrics::LocationTilesUsage *this)
{
  return *((unsigned int *)this + 3);
}

uint64_t awd::metrics::LocationALSCacheUsage::GetCachedSize(awd::metrics::LocationALSCacheUsage *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationALSNetworkUsage::GetCachedSize(awd::metrics::LocationALSNetworkUsage *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t awd::metrics::LocationSessionDay::GetCachedSize(awd::metrics::LocationSessionDay *this)
{
  return *((unsigned int *)this + 19);
}

uint64_t awd::metrics::LocationTileFileUsage::GetCachedSize(awd::metrics::LocationTileFileUsage *this)
{
  return *((unsigned int *)this + 34);
}

uint64_t awd::metrics::LocationTileFile::GetCachedSize(awd::metrics::LocationTileFile *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::GetCachedSize(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationWifiTileSync::GetCachedSize(awd::metrics::LocationWifiTileSync *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFileUsage>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSessionDay>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFile>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

void OUTLINED_FUNCTION_0_0(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
  __assert_rtn(a1, a2, 348, a4);
}

uint64_t awd::metrics::protobuf_ShutdownFile_MicroLocation_2eproto(awd::metrics *this)
{
  uint64_t result;

  if (awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_);
  if (awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_);
  if (awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_);
  if (awd::metrics::LocationMicroLocationEventHistogram::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationEventHistogram::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationEventHistogram::default_instance_);
  if (awd::metrics::LocationMicroLocationClusteringByModel::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationClusteringByModel::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationClusteringByModel::default_instance_);
  if (awd::metrics::LocationMicroLocationMetaData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationMetaData::default_instance_ + 8))(awd::metrics::LocationMicroLocationMetaData::default_instance_);
  if (awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_);
  if (awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_);
  if (awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_);
  if (awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_);
  if (awd::metrics::LocationMicroLocationModelState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationModelState::default_instance_ + 8))(awd::metrics::LocationMicroLocationModelState::default_instance_);
  if (awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_);
  if (awd::metrics::LocationMicroLocationLearningState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationLearningState::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationLearningState::default_instance_);
  if (awd::metrics::LocationMicroLocationAnalyticsState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationAnalyticsState::default_instance_
                                    + 8))(awd::metrics::LocationMicroLocationAnalyticsState::default_instance_);
  result = awd::metrics::LocationMicroLocationStatistics::default_instance_;
  if (awd::metrics::LocationMicroLocationStatistics::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationMicroLocationStatistics::default_instance_
                                              + 8))(awd::metrics::LocationMicroLocationStatistics::default_instance_);
  return result;
}

void awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(awd::metrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  awd::metrics *inited;
  void (*v23)(void);
  uint64_t v24;
  uint64_t v25;

  if ((awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(void)::already_here & 1) == 0)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(void)::already_here = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"codegen/cpp/MicroLocation.pb.cc", a4);
    v4 = operator new();
    *(_QWORD *)v4 = &off_24D991930;
    *(_OWORD *)(v4 + 8) = 0u;
    *(_OWORD *)(v4 + 24) = 0u;
    awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_ = v4;
    v5 = operator new();
    *(_QWORD *)v5 = &off_24D9919A8;
    *(_OWORD *)(v5 + 8) = 0u;
    *(_OWORD *)(v5 + 24) = 0u;
    *(_OWORD *)(v5 + 36) = 0u;
    awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_ = v5;
    v6 = operator new();
    *(_QWORD *)(v6 + 24) = 1;
    v7 = MEMORY[0x24BEDD958];
    *(_QWORD *)v6 = &off_24D991A20;
    *(_QWORD *)(v6 + 8) = v7;
    *(_QWORD *)(v6 + 16) = 0;
    *(_DWORD *)(v6 + 32) = 0;
    awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_ = v6;
    v8 = operator new();
    *(_QWORD *)v8 = &off_24D991A98;
    *(_QWORD *)(v8 + 48) = 0;
    *(_OWORD *)(v8 + 8) = 0u;
    *(_OWORD *)(v8 + 24) = 0u;
    *(_DWORD *)(v8 + 40) = 0;
    awd::metrics::LocationMicroLocationEventHistogram::default_instance_ = v8;
    v9 = operator new();
    *(_QWORD *)(v9 + 8) = 0;
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)v9 = &off_24D991B10;
    *(_DWORD *)(v9 + 24) = 0;
    *(_OWORD *)(v9 + 32) = xmmword_218A5D3E0;
    awd::metrics::LocationMicroLocationClusteringByModel::default_instance_ = v9;
    v10 = (_QWORD *)operator new();
    *v10 = &off_24D991B88;
    v10[1] = 0;
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v7;
    v10[5] = 0;
    v10[6] = 0;
    awd::metrics::LocationMicroLocationMetaData::default_instance_ = (uint64_t)v10;
    v11 = operator new();
    *(_QWORD *)v11 = &off_24D991C00;
    *(_QWORD *)(v11 + 8) = 0;
    *(_QWORD *)(v11 + 64) = 0xFFFFFFFFLL;
    *(_DWORD *)(v11 + 72) = 0;
    *(_OWORD *)(v11 + 16) = 0u;
    *(_OWORD *)(v11 + 32) = 0u;
    *(_OWORD *)(v11 + 48) = 0u;
    awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_ = v11;
    v12 = operator new();
    *(_QWORD *)v12 = &off_24D991C78;
    *(_QWORD *)(v12 + 8) = 0;
    *(_DWORD *)(v12 + 48) = -1;
    *(_QWORD *)(v12 + 88) = 0;
    *(_OWORD *)(v12 + 16) = 0u;
    *(_OWORD *)(v12 + 32) = 0u;
    *(_OWORD *)(v12 + 52) = 0u;
    *(_OWORD *)(v12 + 68) = 0u;
    *(_DWORD *)(v12 + 84) = 0;
    awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_ = v12;
    v13 = operator new();
    *(_QWORD *)v13 = &off_24D991CF0;
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 0;
    *(_DWORD *)(v13 + 32) = 0;
    *(_QWORD *)(v13 + 8) = 0xFFFFFFFFLL;
    *(_QWORD *)(v13 + 40) = 0;
    awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_ = v13;
    v14 = operator new();
    *(_QWORD *)v14 = &off_24D991D68;
    *(_QWORD *)(v14 + 8) = 0;
    *(_QWORD *)(v14 + 40) = 0xFFFFFFFFLL;
    *(_DWORD *)(v14 + 48) = 0;
    *(_QWORD *)(v14 + 24) = 0;
    *(_QWORD *)(v14 + 32) = 0;
    *(_QWORD *)(v14 + 16) = 0;
    awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_ = v14;
    v15 = operator new();
    *(_QWORD *)v15 = &off_24D991DE0;
    *(_QWORD *)(v15 + 8) = 0;
    *(_DWORD *)(v15 + 16) = -1;
    *(_QWORD *)(v15 + 44) = 0;
    *(_QWORD *)(v15 + 20) = 0;
    *(_QWORD *)(v15 + 36) = 0;
    *(_QWORD *)(v15 + 28) = 0;
    awd::metrics::LocationMicroLocationModelState::default_instance_ = v15;
    v16 = operator new();
    *(_QWORD *)v16 = &off_24D991E58;
    *(_QWORD *)(v16 + 8) = 0;
    *(_DWORD *)(v16 + 48) = -1;
    *(_QWORD *)(v16 + 80) = 0;
    *(_OWORD *)(v16 + 16) = 0u;
    *(_OWORD *)(v16 + 32) = 0u;
    *(_QWORD *)(v16 + 52) = 0;
    *(_QWORD *)(v16 + 68) = 0;
    *(_QWORD *)(v16 + 60) = 0;
    *(_DWORD *)(v16 + 76) = 0;
    awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ = v16;
    v17 = operator new();
    *(_QWORD *)v17 = &off_24D991ED0;
    *(_QWORD *)(v17 + 8) = 0;
    *(_QWORD *)(v17 + 32) = 0xFFFFFFFFLL;
    *(_DWORD *)(v17 + 40) = 0;
    *(_QWORD *)(v17 + 16) = 0;
    *(_QWORD *)(v17 + 24) = 0;
    awd::metrics::LocationMicroLocationLearningState::default_instance_ = v17;
    v18 = operator new();
    *(_QWORD *)v18 = &off_24D991F48;
    *(_QWORD *)(v18 + 8) = 0;
    *(_QWORD *)(v18 + 32) = 0xFFFFFFFFLL;
    *(_DWORD *)(v18 + 40) = 0;
    *(_QWORD *)(v18 + 16) = 0;
    *(_QWORD *)(v18 + 24) = 0;
    awd::metrics::LocationMicroLocationAnalyticsState::default_instance_ = v18;
    v19 = operator new();
    *(_QWORD *)v19 = &off_24D991FC0;
    *(_QWORD *)(v19 + 48) = 0;
    *(_QWORD *)(v19 + 56) = 0;
    *(_DWORD *)(v19 + 64) = 0;
    *(_QWORD *)(v19 + 72) = 0;
    *(_QWORD *)(v19 + 80) = 0;
    *(_DWORD *)(v19 + 88) = 0;
    *(_QWORD *)(v19 + 96) = 0;
    *(_QWORD *)(v19 + 104) = 0;
    *(_DWORD *)(v19 + 112) = 0;
    *(_QWORD *)(v19 + 120) = 0;
    *(_QWORD *)(v19 + 128) = 0;
    *(_DWORD *)(v19 + 136) = 0;
    *(_QWORD *)(v19 + 144) = 0;
    *(_QWORD *)(v19 + 152) = 0;
    *(_DWORD *)(v19 + 160) = 0;
    *(_DWORD *)(v19 + 184) = 0;
    *(_QWORD *)(v19 + 168) = 0;
    *(_QWORD *)(v19 + 176) = 0;
    *(_QWORD *)(v19 + 192) = 0;
    *(_QWORD *)(v19 + 200) = 0;
    *(_DWORD *)(v19 + 208) = 0;
    *(_DWORD *)(v19 + 232) = 0;
    *(_QWORD *)(v19 + 216) = 0;
    *(_QWORD *)(v19 + 224) = 0;
    *(_QWORD *)(v19 + 240) = 0;
    *(_OWORD *)(v19 + 8) = 0u;
    *(_OWORD *)(v19 + 24) = 0u;
    *(_DWORD *)(v19 + 40) = 0;
    awd::metrics::LocationMicroLocationStatistics::default_instance_ = v19;
    v20 = awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_;
    v21 = awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_;
    if (!awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_)
    {
      awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)v19);
      v21 = awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_;
    }
    *(_QWORD *)(v20 + 32) = v21;
    inited = (awd::metrics *)awd::metrics::LocationMicroLocationClusteringStatistics::InitAsDefaultInstance((_QWORD *)awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_);
    v24 = awd::metrics::LocationMicroLocationStatistics::default_instance_;
    v25 = awd::metrics::LocationMicroLocationMetaData::default_instance_;
    if (!awd::metrics::LocationMicroLocationMetaData::default_instance_)
    {
      awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(inited);
      v25 = awd::metrics::LocationMicroLocationMetaData::default_instance_;
    }
    *(_QWORD *)(v24 + 16) = v25;
    wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)awd::metrics::protobuf_ShutdownFile_MicroLocation_2eproto, v23);
  }
}

double awd::metrics::LocationMicroLocationSignificanceMetric::LocationMicroLocationSignificanceMetric(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  double result;

  *(_QWORD *)this = &off_24D991930;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991930;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double awd::metrics::LocationMicroLocationEventSignificanceMetric::LocationMicroLocationEventSignificanceMetric(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  double result;

  *(_QWORD *)this = &off_24D9919A8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D9919A8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double awd::metrics::LocationMicroLocationEventTypeAndCount::LocationMicroLocationEventTypeAndCount(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  double result;
  uint64_t v2;

  *(_QWORD *)&result = 1;
  v2 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = 1;
  *(_QWORD *)this = &off_24D991A20;
  *((_QWORD *)this + 1) = v2;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  return result;
}

{
  double result;
  uint64_t v2;

  *(_QWORD *)&result = 1;
  v2 = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 3) = 1;
  *(_QWORD *)this = &off_24D991A20;
  *((_QWORD *)this + 1) = v2;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationEventHistogram::LocationMicroLocationEventHistogram(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  double result;

  *(_QWORD *)this = &off_24D991A98;
  *((_QWORD *)this + 6) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991A98;
  *((_QWORD *)this + 6) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationClusteringByModel::LocationMicroLocationClusteringByModel(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D991B10;
  *((_DWORD *)this + 6) = 0;
  result = NAN;
  *((_OWORD *)this + 2) = xmmword_218A5D3E0;
  return result;
}

{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D991B10;
  *((_DWORD *)this + 6) = 0;
  result = NAN;
  *((_OWORD *)this + 2) = xmmword_218A5D3E0;
  return result;
}

_QWORD *awd::metrics::LocationMicroLocationMetaData::LocationMicroLocationMetaData(_QWORD *this)
{
  uint64_t v1;

  *this = &off_24D991B88;
  this[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  this[2] = 0;
  this[3] = 0;
  this[4] = v1;
  this[5] = 0;
  this[6] = 0;
  return this;
}

{
  uint64_t v1;

  *this = &off_24D991B88;
  this[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  this[2] = 0;
  this[3] = 0;
  this[4] = v1;
  this[5] = 0;
  this[6] = 0;
  return this;
}

double awd::metrics::LocationMicroLocationMeasurementStatistics::LocationMicroLocationMeasurementStatistics(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  double result;

  *(_QWORD *)this = &off_24D991C00;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991C00;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

double awd::metrics::LocationMicroLocationUserEventStatistics::LocationMicroLocationUserEventStatistics(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  double result;

  *(_QWORD *)this = &off_24D991C78;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  *((_DWORD *)this + 21) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991C78;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  *((_DWORD *)this + 21) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationEventClusteringStatistics::LocationMicroLocationEventClusteringStatistics(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  double result;

  *(_QWORD *)this = &off_24D991CF0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 1) = 0xFFFFFFFFLL;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991CF0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 1) = 0xFFFFFFFFLL;
  *((_QWORD *)this + 5) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationLocalizationStatistics::LocationMicroLocationLocalizationStatistics(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  double result;

  *(_QWORD *)this = &off_24D991D68;
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 5) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 2) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991D68;
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 5) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 2) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationModelState::LocationMicroLocationModelState(uint64_t this)
{
  *(_QWORD *)this = &off_24D991DE0;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = -1;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 20) = 0;
  *(_QWORD *)(this + 36) = 0;
  *(_QWORD *)(this + 28) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24D991DE0;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = -1;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 20) = 0;
  *(_QWORD *)(this + 36) = 0;
  *(_QWORD *)(this + 28) = 0;
  return this;
}

double awd::metrics::LocationMicroLocationClusteringStatistics::LocationMicroLocationClusteringStatistics(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  double result;

  *(_QWORD *)this = &off_24D991E58;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((_QWORD *)this + 10) = 0;
  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 68) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991E58;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((_QWORD *)this + 10) = 0;
  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 68) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationLearningState::LocationMicroLocationLearningState(awd::metrics::LocationMicroLocationLearningState *this)
{
  double result;

  *(_QWORD *)this = &off_24D991ED0;
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991ED0;
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationAnalyticsState::LocationMicroLocationAnalyticsState(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  double result;

  *(_QWORD *)this = &off_24D991F48;
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991F48;
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationStatistics::LocationMicroLocationStatistics(awd::metrics::LocationMicroLocationStatistics *this)
{
  double result;

  *(_QWORD *)this = &off_24D991FC0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 13) = 0;
  *((_DWORD *)this + 28) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_QWORD *)this + 16) = 0;
  *((_DWORD *)this + 34) = 0;
  *((_QWORD *)this + 18) = 0;
  *((_QWORD *)this + 19) = 0;
  *((_DWORD *)this + 40) = 0;
  *((_DWORD *)this + 46) = 0;
  *((_QWORD *)this + 21) = 0;
  *((_QWORD *)this + 22) = 0;
  *((_QWORD *)this + 24) = 0;
  *((_QWORD *)this + 25) = 0;
  *((_DWORD *)this + 52) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_QWORD *)this + 28) = 0;
  *((_DWORD *)this + 58) = 0;
  *((_QWORD *)this + 30) = 0;
  *((_DWORD *)this + 10) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D991FC0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 13) = 0;
  *((_DWORD *)this + 28) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_QWORD *)this + 16) = 0;
  *((_DWORD *)this + 34) = 0;
  *((_QWORD *)this + 18) = 0;
  *((_QWORD *)this + 19) = 0;
  *((_DWORD *)this + 40) = 0;
  *((_DWORD *)this + 46) = 0;
  *((_QWORD *)this + 21) = 0;
  *((_QWORD *)this + 22) = 0;
  *((_QWORD *)this + 24) = 0;
  *((_QWORD *)this + 25) = 0;
  *((_DWORD *)this + 52) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_QWORD *)this + 28) = 0;
  *((_DWORD *)this + 58) = 0;
  *((_QWORD *)this + 30) = 0;
  *((_DWORD *)this + 10) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::InitAsDefaultInstance(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;

  v5 = awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_;
  if (!awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_;
  }
  *((_QWORD *)this + 4) = v5;
}

_QWORD *awd::metrics::LocationMicroLocationClusteringStatistics::InitAsDefaultInstance(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = this;
  v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_)
  {
    this[2] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
LABEL_4:
    v1[3] = v2;
LABEL_5:
    v1[4] = v2;
LABEL_6:
    v1[5] = v2;
LABEL_7:
    v1[7] = v2;
LABEL_8:
    v1[8] = v2;
    goto LABEL_9;
  }
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[2] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (v2)
    goto LABEL_4;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[3] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (v2)
    goto LABEL_5;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[4] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (v2)
    goto LABEL_6;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[5] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (v2)
    goto LABEL_7;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[7] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (v2)
    goto LABEL_8;
  this = (_QWORD *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[8] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (!v2)
  {
    this = (_QWORD *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
    v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  }
LABEL_9:
  v1[9] = v2;
  return this;
}

void awd::metrics::LocationMicroLocationStatistics::InitAsDefaultInstance(awd::metrics::LocationMicroLocationStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;

  v5 = awd::metrics::LocationMicroLocationMetaData::default_instance_;
  if (!awd::metrics::LocationMicroLocationMetaData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(this, a2, a3, a4);
    v5 = awd::metrics::LocationMicroLocationMetaData::default_instance_;
  }
  *((_QWORD *)this + 2) = v5;
}

BOOL awd::metrics::LocationMicroLocationGenerationAlgorithm_IsValid(awd::metrics *this)
{
  return this < 4;
}

BOOL awd::metrics::LOIType_IsValid(awd::metrics *this)
{
  return ((_DWORD)this + 1) < 3;
}

BOOL awd::metrics::LocationMicroLocationMetricType_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::MicroLocationRecordingEventType_IsValid(awd::metrics *this)
{
  return ((_DWORD)this - 1) < 0xA;
}

BOOL awd::metrics::LocationMicroLocationModelType_IsValid(awd::metrics *this)
{
  return this < 2;
}

double awd::metrics::LocationMicroLocationSignificanceMetric::SharedCtor(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationMicroLocationSignificanceMetric *awd::metrics::LocationMicroLocationSignificanceMetric::LocationMicroLocationSignificanceMetric(awd::metrics::LocationMicroLocationSignificanceMetric *this, const awd::metrics::LocationMicroLocationSignificanceMetric *a2)
{
  *(_QWORD *)this = &off_24D991930;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(this, a2);
  return this;
}

void sub_218A44B2C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(awd::metrics::LocationMicroLocationSignificanceMetric *this, const awd::metrics::LocationMicroLocationSignificanceMetric *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((_QWORD *)this + 2) = v7;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return;
LABEL_7:
    v5 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((_QWORD *)this + 3) = v5;
  }
}

void sub_218A44C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationSignificanceMetric::~LocationMicroLocationSignificanceMetric(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  *(_QWORD *)this = &off_24D991930;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991930;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991930;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::default_instance(awd::metrics::LocationMicroLocationSignificanceMetric *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (!awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationSignificanceMetric::New(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991930;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationSignificanceMetric *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  char *v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  _BYTE *v16;
  unsigned __int8 *v17;
  uint64_t result;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  v6 = (unint64_t *)((char *)this + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v7;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 9) |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)a2 + 1) = v15;
          goto LABEL_27;
        }
      }
      if (v9 != 2)
        break;
      v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v15 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_27:
      if ((unint64_t)v15 >= v11 || *v15 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
        if (!(_DWORD)result)
          return result;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v5 = *v15;
        v16 = v15 + 1;
        *((_QWORD *)a2 + 1) = v16;
      }
      *((_DWORD *)this + 9) |= 2u;
      if ((unint64_t)v16 < v11 && *v16 == 24)
      {
        v12 = v16 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_35:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v12;
          v17 = (unsigned __int8 *)(v12 + 1);
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 9) |= 4u;
        if (v17 == (unsigned __int8 *)v11 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  int v2;
  uint64_t v3;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_10;
  }
  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 36) & 2) != 0)
  {
LABEL_7:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    v2 = *((_DWORD *)this + 9);
  }
LABEL_8:
  if ((v2 & 4) != 0)
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationSignificanceMetric::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationSignificanceMetric *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationSignificanceMetric::CopyFrom(awd::metrics::LocationMicroLocationSignificanceMetric *this, const awd::metrics::LocationMicroLocationSignificanceMetric *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationSignificanceMetric *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::IsInitialized(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::Swap(uint64_t this, awd::metrics::LocationMicroLocationSignificanceMetric *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationMicroLocationSignificanceMetric *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationSignificanceMetric::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationSignificanceMetric");
}

double awd::metrics::LocationMicroLocationEventSignificanceMetric::SharedCtor(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance(awd::metrics::LocationMicroLocationEventTypeAndCount *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_;
  if (!awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_;
  }
  return result;
}

awd::metrics::LocationMicroLocationEventSignificanceMetric *awd::metrics::LocationMicroLocationEventSignificanceMetric::LocationMicroLocationEventSignificanceMetric(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, const awd::metrics::LocationMicroLocationEventSignificanceMetric *a2)
{
  *(_QWORD *)this = &off_24D9919A8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom(this, a2);
  return this;
}

void sub_218A451C4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, const awd::metrics::LocationMicroLocationEventSignificanceMetric *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const awd::metrics::LocationMicroLocationEventTypeAndCount *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _BYTE v12[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      v9 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((_QWORD *)this + 1) = v9;
      v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_18;
      }
    }
    else if ((*((_BYTE *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    v10 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 12) |= 2u;
    *((_QWORD *)this + 2) = v10;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_9;
      goto LABEL_8;
    }
LABEL_18:
    v11 = *((_DWORD *)a2 + 10);
    if (v11 >= 5)
      awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom();
    *((_DWORD *)this + 12) |= 4u;
    *((_DWORD *)this + 10) = v11;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 8) == 0)
      goto LABEL_9;
LABEL_8:
    v5 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 12) |= 8u;
    *((_QWORD *)this + 3) = v5;
    v4 = *((_DWORD *)a2 + 12);
LABEL_9:
    if ((v4 & 0x10) != 0)
    {
      *((_DWORD *)this + 12) |= 0x10u;
      v6 = *((_QWORD *)this + 4);
      if (!v6)
      {
        v6 = operator new();
        v7 = MEMORY[0x24BEDD958];
        *(_QWORD *)(v6 + 24) = 1;
        *(_QWORD *)v6 = &off_24D991A20;
        *(_QWORD *)(v6 + 8) = v7;
        *(_QWORD *)(v6 + 16) = 0;
        *(_DWORD *)(v6 + 32) = 0;
        *((_QWORD *)this + 4) = v6;
      }
      v8 = (const awd::metrics::LocationMicroLocationEventTypeAndCount *)*((_QWORD *)a2 + 4);
      if (!v8)
        v8 = *(const awd::metrics::LocationMicroLocationEventTypeAndCount **)(awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_
                                                                            + 32);
      awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom((awd::metrics::LocationMicroLocationEventTypeAndCount *)v6, v8);
    }
  }
}

void sub_218A4534C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::~LocationMicroLocationEventSignificanceMetric(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D9919A8;
  if ((awd::metrics::LocationMicroLocationEventSignificanceMetric *)awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 4);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationMicroLocationEventSignificanceMetric::~LocationMicroLocationEventSignificanceMetric(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationMicroLocationEventSignificanceMetric::SharedDtor(_QWORD *this)
{
  if ((_QWORD *)awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_ != this)
  {
    this = (_QWORD *)this[4];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_;
  if (!awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationEventSignificanceMetric::New(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D9919A8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::Clear(uint64_t this)
{
  uint64_t v1;
  char v2;

  v1 = this;
  v2 = *(_BYTE *)(this + 48);
  if (v2)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 8) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = *(_QWORD *)(this + 32);
      if (this)
        this = awd::metrics::LocationMicroLocationEventTypeAndCount::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 32);
  if (v1)
  {
    *(_DWORD *)(this + 24) = 1;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  char *v14;
  int v15;
  uint64_t result;
  _BYTE *v17;
  unsigned int v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  BOOL v26;
  int v27;
  unsigned int v28[2];

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  v6 = MEMORY[0x24BEDD958];
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 12) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_29;
        }
        continue;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_29:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v13;
          v17 = v13 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 12) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 24)
          continue;
        v14 = v17 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_37:
        v28[0] = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v28);
          if (!(_DWORD)result)
            return result;
          v18 = v28[0];
        }
        else
        {
          v18 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        if (v18 <= 4)
        {
          *((_DWORD *)this + 12) |= 4u;
          *((_DWORD *)this + 10) = v18;
        }
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_47:
        *(_QWORD *)v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v28) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v28;
        v15 = *((_DWORD *)this + 12) | 8;
        *((_DWORD *)this + 12) = v15;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_51:
        *((_DWORD *)this + 12) = v15 | 0x10;
        v21 = *((_QWORD *)this + 4);
        if (!v21)
        {
          v21 = operator new();
          *(_QWORD *)(v21 + 24) = 1;
          *(_QWORD *)v21 = &off_24D991A20;
          *(_QWORD *)(v21 + 8) = v6;
          *(_QWORD *)(v21 + 16) = 0;
          *(_DWORD *)(v21 + 32) = 0;
          *((_QWORD *)this + 4) = v21;
        }
        v28[0] = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v28))return 0;
        }
        else
        {
          v28[0] = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 < v24)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (awd::metrics::LocationMicroLocationEventTypeAndCount::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationEventTypeAndCount *)v21, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v25 = *((_DWORD *)a2 + 14);
              v26 = __OFSUB__(v25, 1);
              v27 = v25 - 1;
              if (v27 < 0 == v26)
                *((_DWORD *)a2 + 14) = v27;
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_37;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_47;
        goto LABEL_21;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_21;
        v15 = *((_DWORD *)this + 12);
        goto LABEL_51;
      default:
        v9 = TagFallback & 7;
LABEL_21:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
    if ((*(_DWORD *)(v5 + 48) & 0x10) == 0)
      return this;
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) != 0)
    goto LABEL_10;
LABEL_5:
  if ((v6 & 0x10) == 0)
    return this;
LABEL_11:
  v7 = *(_QWORD *)(v5 + 32);
  if (!v7)
    v7 = *(_QWORD *)(awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_ + 32);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::ByteSize(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  awd::metrics::LocationMicroLocationEventTypeAndCount *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;

  LOBYTE(v2) = *((_BYTE *)this + 48);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_25;
  }
  if ((*((_BYTE *)this + 48) & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((*((_BYTE *)this + 48) & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                            + 1))
              + 1;
  v2 = *((_DWORD *)this + 12);
  if ((v2 & 2) != 0)
  {
LABEL_7:
    LODWORD(v3) = v3
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 2))
                + 1;
    v2 = *((_DWORD *)this + 12);
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v4 & 0x80000000) != 0)
    {
      v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v5 = 2;
    }
    LODWORD(v3) = v5 + v3;
  }
  if ((v2 & 8) != 0)
    v3 = (v3 + 9);
  else
    v3 = v3;
  if ((v2 & 0x10) != 0)
  {
    v6 = (awd::metrics::LocationMicroLocationEventTypeAndCount *)*((_QWORD *)this + 4);
    if (!v6)
      v6 = *(awd::metrics::LocationMicroLocationEventTypeAndCount **)(awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_
                                                                    + 32);
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationEventTypeAndCount::ByteSize(v6);
    v8 = (int)v7;
    if (v7 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
    else
      v9 = 1;
    v3 = (v3 + v8 + v9 + 1);
  }
LABEL_25:
  *((_DWORD *)this + 11) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom(awd::metrics::LocationMicroLocationEventTypeAndCount *this, const awd::metrics::LocationMicroLocationEventTypeAndCount *a2)
{
  int v4;
  int v5;
  const std::string *v6;
  std::string *v7;
  uint64_t v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 6);
      if ((v5 - 1) >= 0xA)
        awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom();
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 6) = v5;
      v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 2) != 0)
    {
      v6 = (const std::string *)*((_QWORD *)a2 + 1);
      *((_DWORD *)this + 8) |= 2u;
      v7 = (std::string *)*((_QWORD *)this + 1);
      if (v7 == (std::string *)MEMORY[0x24BEDD958])
      {
        v7 = (std::string *)operator new();
        v7->__r_.__value_.__l.__size_ = 0;
        v7->__r_.__value_.__r.__words[2] = 0;
        v7->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 1) = v7;
      }
      std::string::operator=(v7, v6);
      v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 4) != 0)
    {
      v8 = *((_QWORD *)a2 + 2);
      *((_DWORD *)this + 8) |= 4u;
      *((_QWORD *)this + 2) = v8;
    }
  }
}

void sub_218A45C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::CopyFrom(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, const awd::metrics::LocationMicroLocationEventSignificanceMetric *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationEventSignificanceMetric *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::IsInitialized(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  return 1;
}

double awd::metrics::LocationMicroLocationEventSignificanceMetric::Swap(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, awd::metrics::LocationMicroLocationEventSignificanceMetric *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    LODWORD(v5) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
  }
  return result;
}

_QWORD *awd::metrics::LocationMicroLocationEventSignificanceMetric::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationEventSignificanceMetric");
}

double awd::metrics::LocationMicroLocationEventTypeAndCount::SharedCtor(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  double result;

  *(_QWORD *)&result = 1;
  *((_QWORD *)this + 3) = 1;
  *((_QWORD *)this + 1) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  return result;
}

awd::metrics::LocationMicroLocationEventTypeAndCount *awd::metrics::LocationMicroLocationEventTypeAndCount::LocationMicroLocationEventTypeAndCount(awd::metrics::LocationMicroLocationEventTypeAndCount *this, const awd::metrics::LocationMicroLocationEventTypeAndCount *a2)
{
  uint64_t v3;

  *((_QWORD *)this + 3) = 1;
  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)this = &off_24D991A20;
  *((_QWORD *)this + 1) = v3;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom(this, a2);
  return this;
}

void sub_218A45D8C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::~LocationMicroLocationEventTypeAndCount(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  *(_QWORD *)this = &off_24D991A20;
  awd::metrics::LocationMicroLocationEventTypeAndCount::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991A20;
  awd::metrics::LocationMicroLocationEventTypeAndCount::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991A20;
  awd::metrics::LocationMicroLocationEventTypeAndCount::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 8);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

double awd::metrics::LocationMicroLocationEventTypeAndCount::New(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  v1 = operator new();
  *(_QWORD *)&result = 1;
  v3 = MEMORY[0x24BEDD958];
  *(_QWORD *)(v1 + 24) = 1;
  *(_QWORD *)v1 = &off_24D991A20;
  *(_QWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationEventTypeAndCount *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  unsigned int v8;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  _BYTE *v14;
  _QWORD *v15;
  _BYTE *v16;
  unsigned __int8 *v17;
  uint64_t result;
  unsigned int v19;

  v4 = (unint64_t *)((char *)this + 16);
  v5 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v6 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v8 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v19 = 0;
        v12 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v19);
          if (!(_DWORD)result)
            return result;
          v13 = v19;
        }
        else
        {
          v13 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v13 - 1 <= 9)
        {
          *((_DWORD *)this + 8) |= 1u;
          *((_DWORD *)this + 6) = v13;
        }
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 < *((_QWORD *)a2 + 2) && *v14 == 18)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
          goto LABEL_29;
        }
      }
      if (v8 != 2)
        break;
      v9 = TagFallback & 7;
      if (v9 != 2)
        goto LABEL_19;
LABEL_29:
      *((_DWORD *)this + 8) |= 2u;
      if (*((_QWORD *)this + 1) == v5)
      {
        v15 = (_QWORD *)operator new();
        v15[1] = 0;
        v15[2] = 0;
        *v15 = 0;
        *((_QWORD *)this + 1) = v15;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!(_DWORD)result)
        return result;
      v16 = (_BYTE *)*((_QWORD *)a2 + 1);
      v10 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v16 < v10 && *v16 == 24)
      {
        v11 = v16 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_35:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v11;
          v17 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 8) |= 4u;
        if (v17 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v8 == 3)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_19:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 24), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::ByteSize(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_24;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_22;
LABEL_13:
    v5 = *((_QWORD *)this + 1);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v7 = v6;
    v8 = *(_QWORD *)(v5 + 8);
    if ((v6 & 0x80u) == 0)
      v9 = *(unsigned __int8 *)(v5 + 23);
    else
      v9 = v8;
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
      v6 = *(unsigned __int8 *)(v5 + 23);
      v8 = *(_QWORD *)(v5 + 8);
      v2 = *((_DWORD *)this + 8);
      v7 = *(_BYTE *)(v5 + 23);
    }
    else
    {
      v10 = 1;
    }
    if (v7 < 0)
      v6 = v8;
    v3 = (v3 + v10 + v6 + 1);
    goto LABEL_22;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v4 & 0x80000000) != 0)
  {
    v3 = 11;
    if ((v2 & 2) != 0)
      goto LABEL_13;
  }
  else
  {
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 8);
      if ((v2 & 2) == 0)
        goto LABEL_22;
      goto LABEL_13;
    }
    v3 = 2;
    if ((v2 & 2) != 0)
      goto LABEL_13;
  }
LABEL_22:
  if ((v2 & 4) != 0)
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
LABEL_24:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationEventTypeAndCount *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::CopyFrom(awd::metrics::LocationMicroLocationEventTypeAndCount *this, const awd::metrics::LocationMicroLocationEventTypeAndCount *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationEventTypeAndCount *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::IsInitialized(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::Swap(uint64_t this, awd::metrics::LocationMicroLocationEventTypeAndCount *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (awd::metrics::LocationMicroLocationEventTypeAndCount *)this)
  {
    v2 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 8);
    v4 = *(_QWORD *)(this + 16);
    v5 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v5;
    *((_QWORD *)a2 + 1) = v3;
    *((_QWORD *)a2 + 2) = v4;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationEventTypeAndCount::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationEventTypeAndCount");
}

_QWORD *awd::metrics::LocationMicroLocationEventHistogram::SharedCtor(_QWORD *this)
{
  this[6] = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

awd::metrics::LocationMicroLocationEventHistogram *awd::metrics::LocationMicroLocationEventHistogram::LocationMicroLocationEventHistogram(awd::metrics::LocationMicroLocationEventHistogram *this, const awd::metrics::LocationMicroLocationEventHistogram *a2)
{
  *(_QWORD *)this = &off_24D991A98;
  *((_QWORD *)this + 6) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::LocationMicroLocationEventHistogram::MergeFrom(this, a2);
  return this;
}

void sub_218A46408(_Unwind_Exception *a1)
{
  uint64_t *v1;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventTypeAndCount>::TypeHandler>(v1 + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventHistogram::MergeFrom(awd::metrics::LocationMicroLocationEventHistogram *this, const awd::metrics::LocationMicroLocationEventHistogram *a2)
{
  uint64_t v4;
  uint64_t v5;
  const awd::metrics::LocationMicroLocationEventTypeAndCount *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationEventHistogram *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    v4 = 0;
    v5 = MEMORY[0x24BEDD958];
    do
    {
      v6 = *(const awd::metrics::LocationMicroLocationEventTypeAndCount **)(*((_QWORD *)a2 + 3) + 8 * v4);
      v7 = *((_DWORD *)this + 9);
      v8 = *((int *)this + 8);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationEventHistogram *)((char *)this + 24));
          v7 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v7 + 1;
        v10 = operator new();
        *(_QWORD *)(v10 + 24) = 1;
        *(_QWORD *)v10 = &off_24D991A20;
        *(_QWORD *)(v10 + 8) = v5;
        *(_QWORD *)(v10 + 16) = 0;
        *(_DWORD *)(v10 + 32) = 0;
        v11 = *((_QWORD *)this + 3);
        v12 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 3);
        *((_DWORD *)this + 8) = v8 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v8);
      }
      awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom((awd::metrics::LocationMicroLocationEventTypeAndCount *)v10, v6);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  LOBYTE(v13) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v13)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      v14 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((_QWORD *)this + 1) = v14;
      v13 = *((_DWORD *)a2 + 13);
    }
    if ((v13 & 2) != 0)
    {
      v15 = *((_QWORD *)a2 + 2);
      *((_DWORD *)this + 13) |= 2u;
      *((_QWORD *)this + 2) = v15;
    }
  }
}

void sub_218A465D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventHistogram::~LocationMicroLocationEventHistogram(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  *(_QWORD *)this = &off_24D991A98;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventTypeAndCount>::TypeHandler>((uint64_t *)this + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationMicroLocationEventHistogram::~LocationMicroLocationEventHistogram(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::default_instance(awd::metrics::LocationMicroLocationEventHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationEventHistogram::default_instance_;
  if (!awd::metrics::LocationMicroLocationEventHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationEventHistogram::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationEventHistogram::New(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991A98;
  *(_QWORD *)(v1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(_BYTE *)(this + 52))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  if (*(int *)(this + 32) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationEventHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  uint64_t v7;
  char *v8;
  uint64_t TagFallback;
  unsigned int v10;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  uint64_t result;
  _BYTE *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  BOOL v28;
  int v29;
  _BYTE *v30;
  unsigned int v31;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  v6 = (awd::metrics::LocationMicroLocationEventHistogram *)((char *)this + 24);
  v7 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v8 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v8;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v8 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v10 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v11 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v13 = (char *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v13 >= v12 || *v13 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
            if (!(_DWORD)result)
              return result;
            v14 = (_BYTE *)*((_QWORD *)a2 + 1);
            v12 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *v4 = *v13;
            v14 = v13 + 1;
            *((_QWORD *)a2 + 1) = v14;
          }
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            v15 = v14 + 1;
            *((_QWORD *)a2 + 1) = v15;
            goto LABEL_27;
          }
        }
        if (v10 != 2)
          break;
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
LABEL_27:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v15;
          v17 = v15 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v17 < v12 && *v17 == 26)
          goto LABEL_34;
      }
      if (v10 != 3)
        break;
      v11 = TagFallback & 7;
      if (v11 != 2)
        goto LABEL_19;
      while (1)
      {
        v18 = *((_DWORD *)this + 9);
        v19 = *((int *)this + 8);
        if ((int)v19 >= v18)
        {
          if (v18 == *((_DWORD *)this + 10))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            v18 = *((_DWORD *)this + 9);
          }
          *((_DWORD *)this + 9) = v18 + 1;
          v21 = operator new();
          *(_QWORD *)(v21 + 24) = 1;
          *(_QWORD *)v21 = &off_24D991A20;
          *(_QWORD *)(v21 + 8) = v7;
          *(_QWORD *)(v21 + 16) = 0;
          *(_DWORD *)(v21 + 32) = 0;
          v22 = *((_QWORD *)this + 3);
          v23 = *((int *)this + 8);
          *((_DWORD *)this + 8) = v23 + 1;
          *(_QWORD *)(v22 + 8 * v23) = v21;
        }
        else
        {
          v20 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 8) = v19 + 1;
          v21 = *(_QWORD *)(v20 + 8 * v19);
        }
        v31 = 0;
        v24 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0;
        }
        else
        {
          v31 = *v24;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        v25 = *((_DWORD *)a2 + 14);
        v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationEventTypeAndCount::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationEventTypeAndCount *)v21, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v27 = *((_DWORD *)a2 + 14);
        v28 = __OFSUB__(v27, 1);
        v29 = v27 - 1;
        if (v29 < 0 == v28)
          *((_DWORD *)a2 + 14) = v29;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        v30 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v17 >= v30 || *v17 != 26)
          break;
LABEL_34:
        *((_QWORD *)a2 + 1) = v17 + 1;
      }
      if (v17 == v30 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v11 = TagFallback & 7;
LABEL_19:
    if (v11 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
  }
  if ((v6 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::ByteSize(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;

  if (!*((_BYTE *)this + 52))
  {
    v2 = 0;
    goto LABEL_8;
  }
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    if ((*((_DWORD *)this + 13) & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v2 = 0;
  if ((*((_BYTE *)this + 52) & 2) != 0)
LABEL_7:
    v2 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 2))
        + 1;
LABEL_8:
  v3 = *((_DWORD *)this + 8);
  v4 = (v3 + v2);
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationEventTypeAndCount::ByteSize(*(awd::metrics::LocationMicroLocationEventTypeAndCount **)(*((_QWORD *)this + 3) + 8 * v5));
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v4 = (v7 + v4 + v8);
      ++v5;
    }
    while (v5 < *((int *)this + 8));
  }
  *((_DWORD *)this + 12) = v4;
  return v4;
}

void awd::metrics::LocationMicroLocationEventHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationEventHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationEventHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationEventHistogram::CopyFrom(awd::metrics::LocationMicroLocationEventHistogram *this, const awd::metrics::LocationMicroLocationEventHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationEventHistogram *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationEventHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::IsInitialized(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  return 1;
}

awd::metrics::LocationMicroLocationEventHistogram *awd::metrics::LocationMicroLocationEventHistogram::Swap(awd::metrics::LocationMicroLocationEventHistogram *this, awd::metrics::LocationMicroLocationEventHistogram *a2)
{
  awd::metrics::LocationMicroLocationEventHistogram *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    this = (awd::metrics::LocationMicroLocationEventHistogram *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v6 = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v6;
    v7 = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v7;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationEventHistogram::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationEventHistogram");
}

double awd::metrics::LocationMicroLocationClusteringByModel::SharedCtor(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  double result;

  result = NAN;
  *((_OWORD *)this + 2) = xmmword_218A5D3E0;
  return result;
}

awd::metrics::LocationMicroLocationClusteringByModel *awd::metrics::LocationMicroLocationClusteringByModel::LocationMicroLocationClusteringByModel(awd::metrics::LocationMicroLocationClusteringByModel *this, const awd::metrics::LocationMicroLocationClusteringByModel *a2)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_24D991B10;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_OWORD *)this + 2) = xmmword_218A5D3E0;
  awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom(this, a2);
  return this;
}

void sub_218A46D68(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom(awd::metrics::LocationMicroLocationClusteringByModel *this, const awd::metrics::LocationMicroLocationClusteringByModel *a2)
{
  uint64_t v4;
  const awd::metrics::LocationMicroLocationEventHistogram *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  int v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationClusteringByModel *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationMicroLocationEventHistogram **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationClusteringByModel *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_24D991A98;
        *(_QWORD *)(v9 + 48) = 0;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_DWORD *)(v9 + 40) = 0;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      awd::metrics::LocationMicroLocationEventHistogram::MergeFrom((awd::metrics::LocationMicroLocationEventHistogram *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  LOBYTE(v12) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v12)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      v13 = *((_DWORD *)a2 + 8);
      if (v13 >= 2)
        awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom();
      *((_DWORD *)this + 11) |= 1u;
      *((_DWORD *)this + 8) = v13;
      v12 = *((_DWORD *)a2 + 11);
    }
    if ((v12 & 4) != 0)
    {
      v14 = *((_DWORD *)a2 + 9);
      if ((v14 + 1) >= 3)
        awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom();
      *((_DWORD *)this + 11) |= 4u;
      *((_DWORD *)this + 9) = v14;
    }
  }
}

void sub_218A46F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationClusteringByModel::~LocationMicroLocationClusteringByModel(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  *(_QWORD *)this = &off_24D991B10;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventHistogram>::TypeHandler>((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationMicroLocationClusteringByModel::~LocationMicroLocationClusteringByModel(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::default_instance(awd::metrics::LocationMicroLocationClusteringByModel *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationClusteringByModel::default_instance_;
  if (!awd::metrics::LocationMicroLocationClusteringByModel::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationClusteringByModel::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationClusteringByModel::New(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)v1 = &off_24D991B10;
  *(_DWORD *)(v1 + 24) = 0;
  result = NAN;
  *(_OWORD *)(v1 + 32) = xmmword_218A5D3E0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(_BYTE *)(this + 44))
    *(_QWORD *)(this + 32) = 0xFFFFFFFF00000000;
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationClusteringByModel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  char *v9;
  unint64_t v10;
  char *v11;
  unsigned int v12;
  uint64_t result;
  _BYTE *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  BOOL v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;

  v4 = (awd::metrics::LocationMicroLocationClusteringByModel *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
LABEL_2:
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v7 = TagFallback >> 3;
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v30 = 0;
      v11 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
        if (!(_DWORD)result)
          return result;
        v12 = v30;
      }
      else
      {
        v12 = *v11;
        *((_QWORD *)a2 + 1) = v11 + 1;
      }
      if (v12 <= 1)
      {
        *((_DWORD *)this + 11) |= 1u;
        *((_DWORD *)this + 8) = v12;
      }
      v14 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v14 < *((_QWORD *)a2 + 2) && *v14 == 18)
      {
        while (1)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_29:
          v15 = *((_DWORD *)this + 5);
          v16 = *((int *)this + 4);
          if ((int)v16 >= v15)
          {
            if (v15 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v15 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v15 + 1;
            v18 = operator new();
            *(_QWORD *)v18 = &off_24D991A98;
            *(_QWORD *)(v18 + 48) = 0;
            *(_OWORD *)(v18 + 8) = 0u;
            *(_OWORD *)(v18 + 24) = 0u;
            *(_DWORD *)(v18 + 40) = 0;
            v19 = *((_QWORD *)this + 1);
            v20 = *((int *)this + 4);
            *((_DWORD *)this + 4) = v20 + 1;
            *(_QWORD *)(v19 + 8 * v20) = v18;
          }
          else
          {
            v17 = *((_QWORD *)this + 1);
            *((_DWORD *)this + 4) = v16 + 1;
            v18 = *(_QWORD *)(v17 + 8 * v16);
          }
          v31 = 0;
          v21 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0;
          }
          else
          {
            v31 = *v21;
            *((_QWORD *)a2 + 1) = v21 + 1;
          }
          v22 = *((_DWORD *)a2 + 14);
          v23 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v22 + 1;
          if (v22 >= v23)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationMicroLocationEventHistogram::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationEventHistogram *)v18, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v24 = *((_DWORD *)a2 + 14);
          v25 = __OFSUB__(v24, 1);
          v26 = v24 - 1;
          if (v26 < 0 == v25)
            *((_DWORD *)a2 + 14) = v26;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v14 >= v10)
            break;
          v27 = *v14;
          if (v27 != 18)
          {
            if (v27 == 24)
            {
              v9 = v14 + 1;
              *((_QWORD *)a2 + 1) = v9;
LABEL_47:
              v29 = 0;
              if ((unint64_t)v9 >= v10 || *v9 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
                if (!(_DWORD)result)
                  return result;
                v28 = v29;
              }
              else
              {
                v28 = *v9;
                *((_QWORD *)a2 + 1) = v9 + 1;
              }
              if (v28 + 1 <= 2)
              {
                *((_DWORD *)this + 11) |= 4u;
                *((_DWORD *)this + 9) = v28;
              }
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v7 == 2)
    {
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_19;
      goto LABEL_29;
    }
    if (v7 == 3)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_47;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_19:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 32), (uint64_t)a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(_BYTE *)(v5 + 44) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::ByteSize(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  char v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  v2 = *((_BYTE *)this + 44);
  if (!v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 4) == 0)
        goto LABEL_19;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 11) & 4) == 0)
        goto LABEL_19;
    }
    else
    {
      v3 = 2;
      if ((v2 & 4) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 44) & 4) == 0)
      goto LABEL_19;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_19:
  v7 = *((_DWORD *)this + 4);
  v8 = (v7 + v3);
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationEventHistogram::ByteSize(*(awd::metrics::LocationMicroLocationEventHistogram **)(*((_QWORD *)this + 1) + 8 * v9));
      v11 = (int)v10;
      if (v10 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v12 = 1;
      v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 4));
  }
  *((_DWORD *)this + 10) = v8;
  return v8;
}

void awd::metrics::LocationMicroLocationClusteringByModel::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationClusteringByModel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationClusteringByModel::CopyFrom(awd::metrics::LocationMicroLocationClusteringByModel *this, const awd::metrics::LocationMicroLocationClusteringByModel *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationClusteringByModel *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::IsInitialized(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  return 1;
}

awd::metrics::LocationMicroLocationClusteringByModel *awd::metrics::LocationMicroLocationClusteringByModel::Swap(awd::metrics::LocationMicroLocationClusteringByModel *this, awd::metrics::LocationMicroLocationClusteringByModel *a2)
{
  awd::metrics::LocationMicroLocationClusteringByModel *v3;
  int v4;
  int v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    this = (awd::metrics::LocationMicroLocationClusteringByModel *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    v7 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationClusteringByModel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationClusteringByModel");
}

_QWORD *awd::metrics::LocationMicroLocationMetaData::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[4] = MEMORY[0x24BEDD958];
  this[5] = 0;
  this[6] = 0;
  return this;
}

awd::metrics::LocationMicroLocationMetaData *awd::metrics::LocationMicroLocationMetaData::LocationMicroLocationMetaData(awd::metrics::LocationMicroLocationMetaData *this, const awd::metrics::LocationMicroLocationMetaData *a2)
{
  *(_QWORD *)this = &off_24D991B88;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = MEMORY[0x24BEDD958];
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  awd::metrics::LocationMicroLocationMetaData::MergeFrom(this, a2);
  return this;
}

void sub_218A47704(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t v3;

  v3 = *((_QWORD *)v1 + 2);
  if (v3)
    MEMORY[0x219A1DC64](v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationMetaData::MergeFrom(awd::metrics::LocationMicroLocationMetaData *this, const awd::metrics::LocationMicroLocationMetaData *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((_DWORD *)this + 4, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((_QWORD *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      v7 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((_QWORD *)this + 1) = v7;
      v5 = *((_DWORD *)a2 + 13);
      if ((v5 & 4) == 0)
      {
LABEL_8:
        if ((v5 & 8) == 0)
          return;
        goto LABEL_9;
      }
    }
    else if ((*((_BYTE *)a2 + 52) & 4) == 0)
    {
      goto LABEL_8;
    }
    v8 = (const std::string *)*((_QWORD *)a2 + 4);
    *((_DWORD *)this + 13) |= 4u;
    v9 = (std::string *)*((_QWORD *)this + 4);
    if (v9 == (std::string *)MEMORY[0x24BEDD958])
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      v9->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 4) = v9;
    }
    std::string::operator=(v9, v8);
    if ((*((_DWORD *)a2 + 13) & 8) != 0)
    {
LABEL_9:
      v6 = *((_QWORD *)a2 + 5);
      *((_DWORD *)this + 13) |= 8u;
      *((_QWORD *)this + 5) = v6;
    }
  }
}

void sub_218A4788C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationMetaData::~LocationMicroLocationMetaData(awd::metrics::LocationMicroLocationMetaData *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D991B88;
  awd::metrics::LocationMicroLocationMetaData::SharedDtor((uint64_t)this);
  v2 = *((_QWORD *)this + 2);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationMicroLocationMetaData::~LocationMicroLocationMetaData(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationMetaData::SharedDtor(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 32);
  if (v1 != MEMORY[0x24BEDD958] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    JUMPOUT(0x219A1DC7CLL);
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMetaData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMetaData::default_instance(awd::metrics::LocationMicroLocationMetaData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationMetaData::default_instance_;
  if (!awd::metrics::LocationMicroLocationMetaData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationMetaData::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationMicroLocationMetaData::New(awd::metrics::LocationMicroLocationMetaData *this)
{
  _QWORD *result;
  uint64_t v2;

  result = (_QWORD *)operator new();
  *result = &off_24D991B88;
  result[1] = 0;
  v2 = MEMORY[0x24BEDD958];
  result[2] = 0;
  result[3] = 0;
  result[4] = v2;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationMetaData::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 52);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 4) != 0)
    {
      v2 = *(_QWORD *)(this + 32);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMetaData::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationMetaData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  unint64_t *v5;
  unint64_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  unint64_t v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  char *v14;
  unint64_t v15;
  char *v16;
  int v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  _BYTE *v22;
  unsigned __int8 *v23;
  uint64_t result;
  unsigned int v25;

  v4 = (_DWORD *)((char *)this + 16);
  v5 = (unint64_t *)((char *)this + 8);
  v6 = (unint64_t *)((char *)this + 40);
  v7 = MEMORY[0x24BEDD958];
LABEL_2:
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v12 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 >= v11 || (char)*v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 13) |= 1u;
        if ((unint64_t)v13 >= v11)
          continue;
        v17 = *v13;
        goto LABEL_40;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 == 2)
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline();
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
            v11 = *((_QWORD *)a2 + 2);
            if ((unint64_t)v13 >= v11)
              goto LABEL_2;
            v17 = *v13;
            if (v17 == 26)
              break;
LABEL_40:
            if (v17 != 16)
              goto LABEL_2;
            v14 = (char *)(v13 + 1);
            *((_QWORD *)a2 + 1) = v14;
LABEL_29:
            v25 = 0;
            if ((unint64_t)v14 >= v11 || *v14 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
              if (!(_DWORD)result)
                return result;
              v18 = v25;
            }
            else
            {
              v18 = *v14;
              *((_QWORD *)a2 + 1) = v14 + 1;
            }
            if (v18 + 1 <= 2)
            {
              v19 = *((_DWORD *)this + 6);
              if (v19 == *((_DWORD *)this + 7))
              {
                wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(v4, v19 + 1);
                v19 = *((_DWORD *)this + 6);
              }
              v20 = *((_QWORD *)this + 2);
              *((_DWORD *)this + 6) = v19 + 1;
              *(_DWORD *)(v20 + 4 * v19) = v18;
            }
          }
          *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_43:
          *((_DWORD *)this + 13) |= 4u;
          if (*((_QWORD *)this + 4) == v7)
          {
            v21 = (_QWORD *)operator new();
            v21[1] = 0;
            v21[2] = 0;
            *v21 = 0;
            *((_QWORD *)this + 4) = v21;
          }
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v22 < v15 && *v22 == 32)
          {
            v16 = v22 + 1;
            *((_QWORD *)a2 + 1) = v16;
LABEL_49:
            if ((unint64_t)v16 >= v15 || *v16 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
              if (!(_DWORD)result)
                return result;
              v23 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v15 = *((_QWORD *)a2 + 2);
            }
            else
            {
              *v6 = *v16;
              v23 = (unsigned __int8 *)(v16 + 1);
              *((_QWORD *)a2 + 1) = v23;
            }
            *((_DWORD *)this + 13) |= 8u;
            if (v23 == (unsigned __int8 *)v15 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v14 = (char *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          goto LABEL_29;
        }
LABEL_19:
        if (v10 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      case 3u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_43;
        goto LABEL_19;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_49;
      default:
        v10 = TagFallback & 7;
        goto LABEL_19;
    }
  }
}

uint64_t awd::metrics::LocationMicroLocationMetaData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  v5 = this;
  if ((*(_BYTE *)(this + 52) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(*(_QWORD *)(v5 + 16) + 4 * v6++), (uint64_t)a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 4) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    v7 = *(_DWORD *)(v5 + 52);
  }
  if ((v7 & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMetaData::ByteSize(awd::metrics::LocationMicroLocationMetaData *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 52);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 13);
    if ((v2 & 4) == 0)
      goto LABEL_16;
LABEL_7:
    v4 = *((_QWORD *)this + 4);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 8);
    if ((v5 & 0x80u) == 0)
      v8 = *(unsigned __int8 *)(v4 + 23);
    else
      v8 = v7;
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v7 = *(_QWORD *)(v4 + 8);
      v2 = *((_DWORD *)this + 13);
      v6 = *(_BYTE *)(v4 + 23);
    }
    else
    {
      v9 = 1;
    }
    if (v6 < 0)
      v5 = v7;
    v3 += v9 + v5 + 1;
    goto LABEL_16;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 52) & 4) != 0)
    goto LABEL_7;
LABEL_16:
  if ((v2 & 8) != 0)
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 5))
        + 1;
LABEL_18:
  v10 = *((_DWORD *)this + 6);
  if (v10 < 1)
  {
    v12 = 0;
  }
  else
  {
    v11 = 0;
    v12 = 0;
    do
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 2)
                                                                                             + 4 * v11);
      if ((v13 & 0x80000000) != 0)
      {
        v14 = 10;
      }
      else if (v13 >= 0x80)
      {
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
        v10 = *((_DWORD *)this + 6);
      }
      else
      {
        v14 = 1;
      }
      v12 += v14;
      ++v11;
    }
    while (v11 < v10);
  }
  result = (v12 + v3 + v10);
  *((_DWORD *)this + 12) = result;
  return result;
}

void awd::metrics::LocationMicroLocationMetaData::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationMetaData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationMetaData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationMetaData::CopyFrom(awd::metrics::LocationMicroLocationMetaData *this, const awd::metrics::LocationMicroLocationMetaData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationMetaData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationMetaData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationMetaData::IsInitialized(awd::metrics::LocationMicroLocationMetaData *this)
{
  return 1;
}

double awd::metrics::LocationMicroLocationMetaData::Swap(awd::metrics::LocationMicroLocationMetaData *this, awd::metrics::LocationMicroLocationMetaData *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *((_QWORD *)this + 4);
    v6 = *((_QWORD *)this + 5);
    v7 = *((_QWORD *)a2 + 5);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)this + 5) = v7;
    result = *((double *)a2 + 3);
    v9 = *((_QWORD *)this + 3);
    *((double *)this + 3) = result;
    *((_QWORD *)a2 + 3) = v9;
    *((_QWORD *)a2 + 4) = v5;
    *((_QWORD *)a2 + 5) = v6;
    LODWORD(v5) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return result;
}

_QWORD *awd::metrics::LocationMicroLocationMetaData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationMetaData");
}

double awd::metrics::LocationMicroLocationMeasurementStatistics::SharedCtor(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

awd::metrics::LocationMicroLocationMeasurementStatistics *awd::metrics::LocationMicroLocationMeasurementStatistics::LocationMicroLocationMeasurementStatistics(awd::metrics::LocationMicroLocationMeasurementStatistics *this, const awd::metrics::LocationMicroLocationMeasurementStatistics *a2)
{
  *(_QWORD *)this = &off_24D991C00;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A480DC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom(awd::metrics::LocationMicroLocationMeasurementStatistics *this, const awd::metrics::LocationMicroLocationMeasurementStatistics *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 72);
  if (!(_BYTE)v4)
    return;
  if ((*((_BYTE *)a2 + 72) & 1) != 0)
  {
    v5 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 18) |= 1u;
    *((_QWORD *)this + 1) = v5;
    v4 = *((_DWORD *)a2 + 18);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_DWORD *)a2 + 16);
    if ((v6 + 1) >= 3)
      awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom();
    *((_DWORD *)this + 18) |= 2u;
    *((_DWORD *)this + 16) = v6;
    v4 = *((_DWORD *)a2 + 18);
  }
  if ((v4 & 4) != 0)
  {
    v8 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 18) |= 4u;
    *((_QWORD *)this + 2) = v8;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 8) == 0)
    {
LABEL_11:
      if ((v4 & 0x10) == 0)
        goto LABEL_12;
      goto LABEL_19;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_11;
  }
  v9 = *((_QWORD *)a2 + 3);
  *((_DWORD *)this + 18) |= 8u;
  *((_QWORD *)this + 3) = v9;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0)
      goto LABEL_13;
LABEL_20:
    v11 = *((_QWORD *)a2 + 5);
    *((_DWORD *)this + 18) |= 0x20u;
    *((_QWORD *)this + 5) = v11;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0)
        return;
      goto LABEL_15;
    }
    goto LABEL_21;
  }
LABEL_19:
  v10 = *((_QWORD *)a2 + 4);
  *((_DWORD *)this + 18) |= 0x10u;
  *((_QWORD *)this + 4) = v10;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0)
    goto LABEL_20;
LABEL_13:
  if ((v4 & 0x40) == 0)
    goto LABEL_14;
LABEL_21:
  v12 = *((_QWORD *)a2 + 6);
  *((_DWORD *)this + 18) |= 0x40u;
  *((_QWORD *)this + 6) = v12;
  if ((*((_DWORD *)a2 + 18) & 0x80) != 0)
  {
LABEL_15:
    v7 = *((_QWORD *)a2 + 7);
    *((_DWORD *)this + 18) |= 0x80u;
    *((_QWORD *)this + 7) = v7;
  }
}

void sub_218A48268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::~LocationMicroLocationMeasurementStatistics(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  *(_QWORD *)this = &off_24D991C00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991C00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991C00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance(awd::metrics::LocationMicroLocationMeasurementStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationMeasurementStatistics::New(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991C00;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 64) = 0xFFFFFFFFLL;
  *(_DWORD *)(v1 + 72) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 72))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 64) = -1;
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    *(_OWORD *)(this + 48) = 0u;
  }
  *(_DWORD *)(this + 72) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationMeasurementStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  unint64_t *v7;
  unint64_t *v8;
  unint64_t *v9;
  unint64_t *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  unsigned int v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  unsigned __int8 *v32;
  uint64_t result;
  unsigned int v34;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  v6 = (unint64_t *)((char *)this + 24);
  v7 = (unint64_t *)((char *)this + 32);
  v8 = (unint64_t *)((char *)this + 40);
  v9 = (unint64_t *)((char *)this + 48);
  v10 = (unint64_t *)((char *)this + 56);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v4 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_32:
          *((_DWORD *)this + 18) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_35;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_32;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_35:
        v34 = 0;
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34);
          if (!(_DWORD)result)
            return result;
          v25 = v34;
        }
        else
        {
          v25 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        if (v25 + 1 <= 2)
        {
          *((_DWORD *)this + 18) |= 2u;
          *((_DWORD *)this + 16) = v25;
        }
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v26 >= v18 || *v26 != 24)
          continue;
        v19 = v26 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_45:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v19;
          v27 = v19 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 18) |= 4u;
        if ((unint64_t)v27 >= v18 || *v27 != 32)
          continue;
        v20 = v27 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_53:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v20;
          v28 = v20 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 18) |= 8u;
        if ((unint64_t)v28 >= v18 || *v28 != 40)
          continue;
        v21 = v28 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_61:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v21;
          v29 = v21 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 18) |= 0x10u;
        if ((unint64_t)v29 >= v18 || *v29 != 48)
          continue;
        v22 = v29 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_69:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v22;
          v30 = v22 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 18) |= 0x20u;
        if ((unint64_t)v30 >= v18 || *v30 != 56)
          continue;
        v23 = v30 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_77:
        if ((unint64_t)v23 >= v18 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v23;
          v31 = v23 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 18) |= 0x40u;
        if ((unint64_t)v31 >= v18 || *v31 != 64)
          continue;
        v24 = v31 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_85:
        if ((unint64_t)v24 >= v18 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v24;
          v32 = (unsigned __int8 *)(v24 + 1);
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 18) |= 0x80u;
        if (v32 != (unsigned __int8 *)v18 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_69;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_77;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_85;
      default:
        v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(v5 + 56), (uint64_t)a2, a4);
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(v5 + 48), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(v5 + 56), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::ByteSize(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;

  LOBYTE(v2) = *((_BYTE *)this + 72);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_20;
  }
  if ((*((_BYTE *)this + 72) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 18);
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 72) & 2) == 0)
      goto LABEL_13;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v5 = 2;
  }
  v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) != 0)
  {
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    v2 = *((_DWORD *)this + 18);
    if ((v2 & 8) == 0)
    {
LABEL_15:
      if ((v2 & 0x10) == 0)
        goto LABEL_16;
      goto LABEL_23;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_15;
  }
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 3))
     + 1;
  v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x10) == 0)
  {
LABEL_16:
    if ((v2 & 0x20) == 0)
      goto LABEL_17;
    goto LABEL_24;
  }
LABEL_23:
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 4))
     + 1;
  v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0)
      goto LABEL_18;
LABEL_25:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 6))
       + 1;
    if ((*((_DWORD *)this + 18) & 0x80) == 0)
      goto LABEL_20;
    goto LABEL_19;
  }
LABEL_24:
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 5))
     + 1;
  v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x40) != 0)
    goto LABEL_25;
LABEL_18:
  if ((v2 & 0x80) != 0)
LABEL_19:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 7))
       + 1;
LABEL_20:
  *((_DWORD *)this + 17) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationMeasurementStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::CopyFrom(awd::metrics::LocationMicroLocationMeasurementStatistics *this, const awd::metrics::LocationMicroLocationMeasurementStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationMeasurementStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::IsInitialized(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::Swap(uint64_t this, awd::metrics::LocationMicroLocationMeasurementStatistics *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 != (awd::metrics::LocationMicroLocationMeasurementStatistics *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    LODWORD(v8) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v8;
    LODWORD(v8) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationMeasurementStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationMeasurementStatistics");
}

double awd::metrics::LocationMicroLocationUserEventStatistics::SharedCtor(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  *((_DWORD *)this + 21) = 0;
  return result;
}

awd::metrics::LocationMicroLocationUserEventStatistics *awd::metrics::LocationMicroLocationUserEventStatistics::LocationMicroLocationUserEventStatistics(awd::metrics::LocationMicroLocationUserEventStatistics *this, const awd::metrics::LocationMicroLocationUserEventStatistics *a2)
{
  *(_QWORD *)this = &off_24D991C78;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((_QWORD *)this + 11) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  *((_DWORD *)this + 21) = 0;
  awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A48C44(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom(awd::metrics::LocationMicroLocationUserEventStatistics *this, const awd::metrics::LocationMicroLocationUserEventStatistics *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v4)
    goto LABEL_16;
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 23) |= 1u;
    *((_QWORD *)this + 1) = v5;
    v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_DWORD *)a2 + 12);
    if ((v6 + 1) >= 3)
      awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom();
    *((_DWORD *)this + 23) |= 2u;
    *((_DWORD *)this + 12) = v6;
    v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 4) != 0)
  {
    v11 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 23) |= 4u;
    *((_QWORD *)this + 2) = v11;
    v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 8) == 0)
    {
LABEL_11:
      if ((v4 & 0x10) == 0)
        goto LABEL_12;
      goto LABEL_28;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_11;
  }
  v12 = *((_QWORD *)a2 + 3);
  *((_DWORD *)this + 23) |= 8u;
  *((_QWORD *)this + 3) = v12;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0)
      goto LABEL_13;
LABEL_29:
    v14 = *((_QWORD *)a2 + 5);
    *((_DWORD *)this + 23) |= 0x20u;
    *((_QWORD *)this + 5) = v14;
    v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0)
        goto LABEL_16;
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_28:
  v13 = *((_QWORD *)a2 + 4);
  *((_DWORD *)this + 23) |= 0x10u;
  *((_QWORD *)this + 4) = v13;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x20) != 0)
    goto LABEL_29;
LABEL_13:
  if ((v4 & 0x40) == 0)
    goto LABEL_14;
LABEL_30:
  v15 = *((_QWORD *)a2 + 7);
  *((_DWORD *)this + 23) |= 0x40u;
  *((_QWORD *)this + 7) = v15;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x80) != 0)
  {
LABEL_15:
    v7 = *((_QWORD *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x80u;
    *((_QWORD *)this + 8) = v7;
    v4 = *((_DWORD *)a2 + 23);
  }
LABEL_16:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0)
      goto LABEL_19;
LABEL_22:
    v9 = *((_QWORD *)a2 + 10);
    *((_DWORD *)this + 23) |= 0x200u;
    *((_QWORD *)this + 10) = v9;
    if ((*((_DWORD *)a2 + 23) & 0x400) == 0)
      return;
    goto LABEL_23;
  }
  v8 = *((_QWORD *)a2 + 9);
  *((_DWORD *)this + 23) |= 0x100u;
  *((_QWORD *)this + 9) = v8;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x200) != 0)
    goto LABEL_22;
LABEL_19:
  if ((v4 & 0x400) == 0)
    return;
LABEL_23:
  v10 = *((_DWORD *)a2 + 13);
  if (v10 >= 2)
    awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom();
  *((_DWORD *)this + 23) |= 0x400u;
  *((_DWORD *)this + 13) = v10;
}

void sub_218A48E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationUserEventStatistics::~LocationMicroLocationUserEventStatistics(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  *(_QWORD *)this = &off_24D991C78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991C78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991C78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::default_instance(awd::metrics::LocationMicroLocationUserEventStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationUserEventStatistics::New(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991C78;
  *(_QWORD *)(v1 + 8) = 0;
  *(_DWORD *)(v1 + 48) = -1;
  *(_QWORD *)(v1 + 88) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 52) = 0u;
  *(_OWORD *)(v1 + 68) = 0u;
  *(_DWORD *)(v1 + 84) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 92);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 48) = -1;
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    *(_QWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 64) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 52) = 0;
    *(_QWORD *)(this + 72) = 0;
    *(_QWORD *)(this + 80) = 0;
  }
  *(_DWORD *)(this + 92) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationUserEventStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  unint64_t *v7;
  unint64_t *v8;
  unint64_t *v9;
  unint64_t *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  unsigned int v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  unsigned int v38;
  uint64_t result;
  unint64_t *v40;
  unint64_t *v41;
  unsigned int v42;
  unsigned int v43;

  v40 = (unint64_t *)((char *)this + 8);
  v41 = (unint64_t *)((char *)this + 16);
  v4 = (unint64_t *)((char *)this + 24);
  v5 = (unint64_t *)((char *)this + 32);
  v6 = (unint64_t *)((char *)this + 40);
  v7 = (unint64_t *)((char *)this + 56);
  v8 = (unint64_t *)((char *)this + 64);
  v9 = (unint64_t *)((char *)this + 72);
  v10 = (unint64_t *)((char *)this + 80);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v40 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_38:
          *((_DWORD *)this + 23) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_41;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v40);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_41:
        v43 = 0;
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!(_DWORD)result)
            return result;
          v28 = v43;
        }
        else
        {
          v28 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        if (v28 + 1 <= 2)
        {
          *((_DWORD *)this + 23) |= 2u;
          *((_DWORD *)this + 12) = v28;
        }
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v29 >= v18 || *v29 != 24)
          continue;
        v19 = v29 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_51:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v41);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v41 = *v19;
          v30 = v19 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 23) |= 4u;
        if ((unint64_t)v30 >= v18 || *v30 != 32)
          continue;
        v20 = v30 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_59:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v20;
          v31 = v20 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 23) |= 8u;
        if ((unint64_t)v31 >= v18 || *v31 != 40)
          continue;
        v21 = v31 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_67:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v21;
          v32 = v21 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        if ((unint64_t)v32 >= v18 || *v32 != 48)
          continue;
        v22 = v32 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_75:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v22;
          v33 = v22 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        if ((unint64_t)v33 >= v18 || *v33 != 56)
          continue;
        v23 = v33 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_83:
        if ((unint64_t)v23 >= v18 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v23;
          v34 = v23 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        if ((unint64_t)v34 >= v18 || *v34 != 64)
          continue;
        v24 = v34 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_91:
        if ((unint64_t)v24 >= v18 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v24;
          v35 = v24 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        if ((unint64_t)v35 >= v18 || *v35 != 72)
          continue;
        v25 = v35 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_99:
        if ((unint64_t)v25 >= v18 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v25;
          v36 = v25 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        if ((unint64_t)v36 >= v18 || *v36 != 80)
          continue;
        v26 = v36 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_107:
        if ((unint64_t)v26 >= v18 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v26;
          v37 = v26 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 23) |= 0x200u;
        if ((unint64_t)v37 >= v18 || *v37 != 88)
          continue;
        v27 = v37 + 1;
        *((_QWORD *)a2 + 1) = v27;
LABEL_115:
        v42 = 0;
        if ((unint64_t)v27 >= v18 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42);
          if (!(_DWORD)result)
            return result;
          v38 = v42;
        }
        else
        {
          v38 = *v27;
          *((_QWORD *)a2 + 1) = v27 + 1;
        }
        if (v38 <= 1)
        {
          *((_DWORD *)this + 23) |= 0x400u;
          *((_DWORD *)this + 13) = v38;
        }
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_59;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_67;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_91;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_99;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_107;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_115;
      default:
        v13 = TagFallback & 7;
LABEL_32:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_QWORD *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(v5 + 80), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 92) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::ByteSize(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v2 = *((_DWORD *)this + 23);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_20;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 23);
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 23);
  }
  else
  {
    v5 = 2;
  }
  v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) != 0)
  {
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    v2 = *((_DWORD *)this + 23);
    if ((v2 & 8) == 0)
    {
LABEL_15:
      if ((v2 & 0x10) == 0)
        goto LABEL_16;
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_15;
  }
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 3))
     + 1;
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x10) == 0)
  {
LABEL_16:
    if ((v2 & 0x20) == 0)
      goto LABEL_17;
    goto LABEL_28;
  }
LABEL_27:
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 4))
     + 1;
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0)
      goto LABEL_18;
    goto LABEL_29;
  }
LABEL_28:
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 5))
     + 1;
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0)
      goto LABEL_20;
    goto LABEL_19;
  }
LABEL_29:
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 7))
     + 1;
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x80) != 0)
  {
LABEL_19:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 8))
       + 1;
    v2 = *((_DWORD *)this + 23);
  }
LABEL_20:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_39;
  if ((v2 & 0x100) == 0)
  {
    if ((v2 & 0x200) == 0)
      goto LABEL_23;
LABEL_32:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 10))
       + 1;
    if ((*((_DWORD *)this + 23) & 0x400) == 0)
      goto LABEL_39;
    goto LABEL_33;
  }
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 9))
     + 1;
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x200) != 0)
    goto LABEL_32;
LABEL_23:
  if ((v2 & 0x400) == 0)
    goto LABEL_39;
LABEL_33:
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v6 & 0x80000000) != 0)
  {
    v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
  }
  else
  {
    v7 = 2;
  }
  v3 = (v7 + v3);
LABEL_39:
  *((_DWORD *)this + 22) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationUserEventStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationUserEventStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationUserEventStatistics::CopyFrom(awd::metrics::LocationMicroLocationUserEventStatistics *this, const awd::metrics::LocationMicroLocationUserEventStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationUserEventStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::IsInitialized(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::Swap(uint64_t this, awd::metrics::LocationMicroLocationUserEventStatistics *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a2 != (awd::metrics::LocationMicroLocationUserEventStatistics *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v7;
    v8 = *(_QWORD *)(this + 64);
    *(_QWORD *)(this + 64) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v8;
    v9 = *(_QWORD *)(this + 72);
    *(_QWORD *)(this + 72) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v9;
    v10 = *(_QWORD *)(this + 80);
    *(_QWORD *)(this + 80) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 92);
    *(_DWORD *)(this + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v10;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationUserEventStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationUserEventStatistics");
}

double awd::metrics::LocationMicroLocationEventClusteringStatistics::SharedCtor(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  double result;

  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 1) = 0xFFFFFFFFLL;
  *((_QWORD *)this + 5) = 0;
  return result;
}

awd::metrics::LocationMicroLocationEventClusteringStatistics *awd::metrics::LocationMicroLocationEventClusteringStatistics::LocationMicroLocationEventClusteringStatistics(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, const awd::metrics::LocationMicroLocationEventClusteringStatistics *a2)
{
  *(_QWORD *)this = &off_24D991CF0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 1) = 0xFFFFFFFFLL;
  *((_QWORD *)this + 5) = 0;
  awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A49A94(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventSignificanceMetric>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, const awd::metrics::LocationMicroLocationEventClusteringStatistics *a2)
{
  uint64_t v4;
  const awd::metrics::LocationMicroLocationEventSignificanceMetric *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationEventClusteringStatistics *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationMicroLocationEventSignificanceMetric **)(*((_QWORD *)a2 + 2) + 8 * v4);
      v6 = *((_DWORD *)this + 7);
      v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationEventClusteringStatistics *)((char *)this + 16));
          v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_24D9919A8;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 36) = 0u;
        v10 = *((_QWORD *)this + 2);
        v11 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom((awd::metrics::LocationMicroLocationEventSignificanceMetric *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  LOBYTE(v12) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v12)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      v13 = *((_DWORD *)a2 + 2);
      if ((v13 + 1) >= 3)
        awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom();
      *((_DWORD *)this + 11) |= 1u;
      *((_DWORD *)this + 2) = v13;
      v12 = *((_DWORD *)a2 + 11);
    }
    if ((v12 & 2) != 0)
    {
      v14 = *((_DWORD *)a2 + 3);
      if (v14 >= 2)
        awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom();
      *((_DWORD *)this + 11) |= 2u;
      *((_DWORD *)this + 3) = v14;
    }
  }
}

void sub_218A49C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::~LocationMicroLocationEventClusteringStatistics(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  *(_QWORD *)this = &off_24D991CF0;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventSignificanceMetric>::TypeHandler>((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationMicroLocationEventClusteringStatistics::~LocationMicroLocationEventClusteringStatistics(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationEventClusteringStatistics::New(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991CF0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 8) = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(_BYTE *)(this + 44))
    *(_QWORD *)(this + 8) = 0xFFFFFFFFLL;
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  char *v9;
  unsigned int v10;
  unint64_t v11;
  char *v12;
  uint64_t result;
  _BYTE *v14;
  unsigned int v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  BOOL v27;
  int v28;
  _BYTE *v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;

  v4 = (awd::metrics::LocationMicroLocationEventClusteringStatistics *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v5;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v31 = 0;
          v9 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31);
            if (!(_DWORD)result)
              return result;
            v10 = v31;
          }
          else
          {
            v10 = *v9;
            *((_QWORD *)a2 + 1) = v9 + 1;
          }
          if (v10 + 1 <= 2)
          {
            *((_DWORD *)this + 11) |= 1u;
            *((_DWORD *)this + 2) = v10;
          }
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v14 < v11 && *v14 == 16)
          {
            v12 = v14 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_29;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
LABEL_29:
        v30 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!(_DWORD)result)
            return result;
          v15 = v30;
        }
        else
        {
          v15 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v15 <= 1)
        {
          *((_DWORD *)this + 11) |= 2u;
          *((_DWORD *)this + 3) = v15;
        }
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 < *((_QWORD *)a2 + 2) && *v16 == 26)
          goto LABEL_38;
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_19;
      while (1)
      {
        v17 = *((_DWORD *)this + 7);
        v18 = *((int *)this + 6);
        if ((int)v18 >= v17)
        {
          if (v17 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v17 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v17 + 1;
          v20 = operator new();
          *(_QWORD *)v20 = &off_24D9919A8;
          *(_OWORD *)(v20 + 8) = 0u;
          *(_OWORD *)(v20 + 24) = 0u;
          *(_OWORD *)(v20 + 36) = 0u;
          v21 = *((_QWORD *)this + 2);
          v22 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v22 + 1;
          *(_QWORD *)(v21 + 8 * v22) = v20;
        }
        else
        {
          v19 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v18 + 1;
          v20 = *(_QWORD *)(v19 + 8 * v18);
        }
        v32 = 0;
        v23 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))return 0;
        }
        else
        {
          v32 = *v23;
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
        v24 = *((_DWORD *)a2 + 14);
        v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationEventSignificanceMetric::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationEventSignificanceMetric *)v20, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v26 = *((_DWORD *)a2 + 14);
        v27 = __OFSUB__(v26, 1);
        v28 = v26 - 1;
        if (v28 < 0 == v27)
          *((_DWORD *)a2 + 14) = v28;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v29 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v16 >= v29 || *v16 != 26)
          break;
LABEL_38:
        *((_QWORD *)a2 + 1) = v16 + 1;
      }
      if (v16 == v29 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_19:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
  }
  if ((v6 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::ByteSize(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  char v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  v2 = *((_BYTE *)this + 44);
  if (!v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 11) & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 44) & 2) == 0)
      goto LABEL_19;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_19:
  v7 = *((_DWORD *)this + 6);
  v8 = (v7 + v3);
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationEventSignificanceMetric::ByteSize(*(awd::metrics::LocationMicroLocationEventSignificanceMetric **)(*((_QWORD *)this + 2) + 8 * v9));
      v11 = (int)v10;
      if (v10 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v12 = 1;
      v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v8;
  return v8;
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::CopyFrom(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, const awd::metrics::LocationMicroLocationEventClusteringStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationEventClusteringStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::IsInitialized(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  return 1;
}

awd::metrics::LocationMicroLocationEventClusteringStatistics *awd::metrics::LocationMicroLocationEventClusteringStatistics::Swap(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, awd::metrics::LocationMicroLocationEventClusteringStatistics *a2)
{
  awd::metrics::LocationMicroLocationEventClusteringStatistics *v3;
  int v4;
  int v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v4;
    v5 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v5;
    this = (awd::metrics::LocationMicroLocationEventClusteringStatistics *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v6 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    v7 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationEventClusteringStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationEventClusteringStatistics");
}

double awd::metrics::LocationMicroLocationLocalizationStatistics::SharedCtor(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 5) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  return result;
}

awd::metrics::LocationMicroLocationLocalizationStatistics *awd::metrics::LocationMicroLocationLocalizationStatistics::LocationMicroLocationLocalizationStatistics(awd::metrics::LocationMicroLocationLocalizationStatistics *this, const awd::metrics::LocationMicroLocationLocalizationStatistics *a2)
{
  *(_QWORD *)this = &off_24D991D68;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 5) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 2) = 0;
  awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A4A428(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom(awd::metrics::LocationMicroLocationLocalizationStatistics *this, const awd::metrics::LocationMicroLocationLocalizationStatistics *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 12);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 10);
      if ((v6 + 1) >= 3)
        awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom();
      *((_DWORD *)this + 12) |= 2u;
      *((_DWORD *)this + 10) = v6;
      v4 = *((_DWORD *)a2 + 12);
    }
    if ((v4 & 4) != 0)
    {
      v8 = *((_QWORD *)a2 + 2);
      *((_DWORD *)this + 12) |= 4u;
      *((_QWORD *)this + 2) = v8;
      v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 8) == 0)
      {
LABEL_11:
        if ((v4 & 0x10) == 0)
          return;
        goto LABEL_12;
      }
    }
    else if ((v4 & 8) == 0)
    {
      goto LABEL_11;
    }
    v9 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 12) |= 8u;
    *((_QWORD *)this + 3) = v9;
    if ((*((_DWORD *)a2 + 12) & 0x10) != 0)
    {
LABEL_12:
      v7 = *((_QWORD *)a2 + 4);
      *((_DWORD *)this + 12) |= 0x10u;
      *((_QWORD *)this + 4) = v7;
    }
  }
}

void sub_218A4A554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::~LocationMicroLocationLocalizationStatistics(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  *(_QWORD *)this = &off_24D991D68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991D68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991D68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance(awd::metrics::LocationMicroLocationLocalizationStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationLocalizationStatistics::New(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991D68;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 40) = 0xFFFFFFFFLL;
  *(_DWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 48))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 40) = -1;
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationLocalizationStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  unint64_t *v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  unint64_t v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  unsigned int v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned __int8 *v23;
  uint64_t result;
  unsigned int v25;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  v6 = (unint64_t *)((char *)this + 24);
  v7 = (unint64_t *)((char *)this + 32);
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          *v4 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
LABEL_26:
          *((_DWORD *)this + 12) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            v14 = v13 + 1;
            *((_QWORD *)a2 + 1) = v14;
            goto LABEL_29;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
LABEL_29:
        v25 = 0;
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!(_DWORD)result)
            return result;
          v19 = v25;
        }
        else
        {
          v19 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        if (v19 + 1 <= 2)
        {
          *((_DWORD *)this + 12) |= 2u;
          *((_DWORD *)this + 10) = v19;
        }
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v20 >= v15 || *v20 != 24)
          continue;
        v16 = v20 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_39:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v16;
          v21 = v16 + 1;
          *((_QWORD *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v21 >= v15 || *v21 != 32)
          continue;
        v17 = v21 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_47:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v17;
          v22 = v17 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v22 >= v15 || *v22 != 40)
          continue;
        v18 = v22 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_55:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v23 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v18;
          v23 = (unsigned __int8 *)(v18 + 1);
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 12) |= 0x10u;
        if (v23 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_39;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_47;
      case 5u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_55;
      default:
        v10 = TagFallback & 7;
LABEL_20:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::ByteSize(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;

  LOBYTE(v2) = *((_BYTE *)this + 48);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_17;
  }
  if ((*((_BYTE *)this + 48) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 12);
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 48) & 2) == 0)
      goto LABEL_13;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 12);
  }
  else
  {
    v5 = 2;
  }
  v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_15;
LABEL_19:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
    if ((*((_DWORD *)this + 12) & 0x10) == 0)
      goto LABEL_17;
    goto LABEL_16;
  }
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 2))
     + 1;
  v2 = *((_DWORD *)this + 12);
  if ((v2 & 8) != 0)
    goto LABEL_19;
LABEL_15:
  if ((v2 & 0x10) != 0)
LABEL_16:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4))
       + 1;
LABEL_17:
  *((_DWORD *)this + 11) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationLocalizationStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::CopyFrom(awd::metrics::LocationMicroLocationLocalizationStatistics *this, const awd::metrics::LocationMicroLocationLocalizationStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationLocalizationStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::IsInitialized(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::Swap(uint64_t this, awd::metrics::LocationMicroLocationLocalizationStatistics *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (awd::metrics::LocationMicroLocationLocalizationStatistics *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationLocalizationStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationLocalizationStatistics");
}

uint64_t awd::metrics::LocationMicroLocationModelState::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = -1;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 20) = 0;
  *(_QWORD *)(this + 36) = 0;
  *(_QWORD *)(this + 28) = 0;
  return this;
}

awd::metrics::LocationMicroLocationModelState *awd::metrics::LocationMicroLocationModelState::LocationMicroLocationModelState(awd::metrics::LocationMicroLocationModelState *this, const awd::metrics::LocationMicroLocationModelState *a2)
{
  *(_QWORD *)this = &off_24D991DE0;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = -1;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  *(_QWORD *)((char *)this + 20) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  *(_QWORD *)((char *)this + 28) = 0;
  awd::metrics::LocationMicroLocationModelState::MergeFrom(this, a2);
  return this;
}

void sub_218A4ACD0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationModelState::MergeFrom(awd::metrics::LocationMicroLocationModelState *this, const awd::metrics::LocationMicroLocationModelState *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  _BYTE v11[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 12);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 4);
      if ((v6 + 1) >= 3)
        awd::metrics::LocationMicroLocationModelState::MergeFrom();
      *((_DWORD *)this + 12) |= 2u;
      *((_DWORD *)this + 4) = v6;
      v4 = *((_DWORD *)a2 + 12);
    }
    if ((v4 & 4) != 0)
    {
      v7 = *((_DWORD *)a2 + 5);
      if (v7 >= 4)
        awd::metrics::LocationMicroLocationModelState::MergeFrom();
      *((_DWORD *)this + 12) |= 4u;
      *((_DWORD *)this + 5) = v7;
      v4 = *((_DWORD *)a2 + 12);
    }
    if ((v4 & 8) != 0)
    {
      v8 = *((_QWORD *)a2 + 3);
      *((_DWORD *)this + 12) |= 8u;
      *((_QWORD *)this + 3) = v8;
      v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 0x10) == 0)
      {
LABEL_14:
        if ((v4 & 0x20) == 0)
          return;
LABEL_18:
        v10 = *((_DWORD *)a2 + 10);
        if (v10 >= 2)
          awd::metrics::LocationMicroLocationModelState::MergeFrom();
        *((_DWORD *)this + 12) |= 0x20u;
        *((_DWORD *)this + 10) = v10;
        return;
      }
    }
    else if ((v4 & 0x10) == 0)
    {
      goto LABEL_14;
    }
    v9 = *((_QWORD *)a2 + 4);
    *((_DWORD *)this + 12) |= 0x10u;
    *((_QWORD *)this + 4) = v9;
    if ((*((_DWORD *)a2 + 12) & 0x20) == 0)
      return;
    goto LABEL_18;
  }
}

void sub_218A4AE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationModelState::~LocationMicroLocationModelState(awd::metrics::LocationMicroLocationModelState *this)
{
  *(_QWORD *)this = &off_24D991DE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991DE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991DE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationModelState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationModelState::default_instance(awd::metrics::LocationMicroLocationModelState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationModelState::default_instance_;
  if (!awd::metrics::LocationMicroLocationModelState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationModelState::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationMicroLocationModelState::New(awd::metrics::LocationMicroLocationModelState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_24D991DE0;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = -1;
  *(_DWORD *)(result + 44) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 20) = 0;
  *(_QWORD *)(result + 36) = 0;
  *(_QWORD *)(result + 28) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationModelState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 48))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 16) = -1;
    *(_QWORD *)(this + 20) = 0;
    *(_QWORD *)(this + 36) = 0;
    *(_QWORD *)(this + 28) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationModelState::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationModelState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  unsigned int v20;
  _BYTE *v21;
  unsigned int v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  unsigned int v26;
  uint64_t result;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 24);
  v6 = (unint64_t *)((char *)this + 32);
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
LABEL_28:
          *((_DWORD *)this + 12) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            v13 = v12 + 1;
            *((_QWORD *)a2 + 1) = v13;
            goto LABEL_31;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_31:
        v30 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!(_DWORD)result)
            return result;
          v20 = v30;
        }
        else
        {
          v20 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        if (v20 + 1 <= 2)
        {
          *((_DWORD *)this + 12) |= 2u;
          *((_DWORD *)this + 4) = v20;
        }
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v21 >= v14 || *v21 != 24)
          continue;
        v15 = v21 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_41:
        v29 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
          if (!(_DWORD)result)
            return result;
          v22 = v29;
        }
        else
        {
          v22 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        if (v22 <= 3)
        {
          *((_DWORD *)this + 12) |= 4u;
          *((_DWORD *)this + 5) = v22;
        }
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v23 >= v16 || *v23 != 32)
          continue;
        v17 = v23 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_51:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v17;
          v24 = v17 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v24 >= v16 || *v24 != 40)
          continue;
        v18 = v24 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_59:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v18;
          v25 = v18 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 12) |= 0x10u;
        if ((unint64_t)v25 >= v16 || *v25 != 48)
          continue;
        v19 = v25 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_67:
        v28 = 0;
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!(_DWORD)result)
            return result;
          v26 = v28;
        }
        else
        {
          v26 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        if (v26 <= 1)
        {
          *((_DWORD *)this + 12) |= 0x20u;
          *((_DWORD *)this + 10) = v26;
        }
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_41;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_59;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_67;
      default:
        v9 = TagFallback & 7;
LABEL_22:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationModelState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationModelState::ByteSize(awd::metrics::LocationMicroLocationModelState *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v2) = *((_BYTE *)this + 48);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_32;
  }
  if ((*((_BYTE *)this + 48) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 12);
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 48) & 2) == 0)
      goto LABEL_13;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 12);
  }
  else
  {
    v5 = 2;
  }
  v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v7 = 2;
    }
    v3 = (v7 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_15:
      if ((v2 & 0x10) == 0)
        goto LABEL_16;
LABEL_25:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4))
         + 1;
      if ((*((_DWORD *)this + 12) & 0x20) == 0)
        goto LABEL_32;
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_15;
  }
  v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 3))
     + 1;
  v2 = *((_DWORD *)this + 12);
  if ((v2 & 0x10) != 0)
    goto LABEL_25;
LABEL_16:
  if ((v2 & 0x20) == 0)
    goto LABEL_32;
LABEL_26:
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v8 & 0x80000000) != 0)
  {
    v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
  }
  else
  {
    v9 = 2;
  }
  v3 = (v9 + v3);
LABEL_32:
  *((_DWORD *)this + 11) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationModelState::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationModelState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationModelState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationModelState::CopyFrom(awd::metrics::LocationMicroLocationModelState *this, const awd::metrics::LocationMicroLocationModelState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationModelState *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationModelState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationModelState::IsInitialized(awd::metrics::LocationMicroLocationModelState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationModelState::Swap(uint64_t this, awd::metrics::LocationMicroLocationModelState *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationMicroLocationModelState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    v3 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v3;
    v4 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationModelState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationModelState");
}

double awd::metrics::LocationMicroLocationClusteringStatistics::SharedCtor(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((_QWORD *)this + 10) = 0;
  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 68) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  return result;
}

awd::metrics::LocationMicroLocationClusteringStatistics *awd::metrics::LocationMicroLocationClusteringStatistics::LocationMicroLocationClusteringStatistics(awd::metrics::LocationMicroLocationClusteringStatistics *this, const awd::metrics::LocationMicroLocationClusteringStatistics *a2)
{
  *(_QWORD *)this = &off_24D991E58;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((_QWORD *)this + 10) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 68) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A4B6E0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom(awd::metrics::LocationMicroLocationClusteringStatistics *this, const awd::metrics::LocationMicroLocationClusteringStatistics *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  const awd::metrics::LocationMicroLocationSignificanceMetric *v8;
  uint64_t v9;
  const awd::metrics::LocationMicroLocationSignificanceMetric *v10;
  uint64_t v11;
  const awd::metrics::LocationMicroLocationSignificanceMetric *v12;
  uint64_t v13;
  const awd::metrics::LocationMicroLocationSignificanceMetric *v14;
  uint64_t v15;
  const awd::metrics::LocationMicroLocationSignificanceMetric *v16;
  uint64_t v17;
  const awd::metrics::LocationMicroLocationSignificanceMetric *v18;
  uint64_t v19;
  const awd::metrics::LocationMicroLocationSignificanceMetric *v20;
  unsigned int v21;
  _BYTE v22[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  v4 = *((_DWORD *)a2 + 21);
  if (!(_BYTE)v4)
    goto LABEL_46;
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 21) |= 1u;
    *((_QWORD *)this + 1) = v5;
    v4 = *((_DWORD *)a2 + 21);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_DWORD *)a2 + 12);
    if ((v6 + 1) >= 3)
      awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom();
    *((_DWORD *)this + 21) |= 2u;
    *((_DWORD *)this + 12) = v6;
    v4 = *((_DWORD *)a2 + 21);
  }
  if ((v4 & 4) != 0)
  {
    *((_DWORD *)this + 21) |= 4u;
    v7 = *((_QWORD *)this + 2);
    if (!v7)
    {
      v7 = operator new();
      *(_QWORD *)v7 = &off_24D991930;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *((_QWORD *)this + 2) = v7;
    }
    v8 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)a2 + 2);
    if (!v8)
      v8 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                           + 16);
    awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom((awd::metrics::LocationMicroLocationSignificanceMetric *)v7, v8);
    v4 = *((_DWORD *)a2 + 21);
    if ((v4 & 8) == 0)
    {
LABEL_11:
      if ((v4 & 0x10) == 0)
        goto LABEL_12;
      goto LABEL_26;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_11;
  }
  *((_DWORD *)this + 21) |= 8u;
  v9 = *((_QWORD *)this + 3);
  if (!v9)
  {
    v9 = operator new();
    *(_QWORD *)v9 = &off_24D991930;
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *((_QWORD *)this + 3) = v9;
  }
  v10 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)a2 + 3);
  if (!v10)
    v10 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                          + 24);
  awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom((awd::metrics::LocationMicroLocationSignificanceMetric *)v9, v10);
  v4 = *((_DWORD *)a2 + 21);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0)
      goto LABEL_13;
LABEL_31:
    *((_DWORD *)this + 21) |= 0x20u;
    v13 = *((_QWORD *)this + 5);
    if (!v13)
    {
      v13 = operator new();
      *(_QWORD *)v13 = &off_24D991930;
      *(_OWORD *)(v13 + 8) = 0u;
      *(_OWORD *)(v13 + 24) = 0u;
      *((_QWORD *)this + 5) = v13;
    }
    v14 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)a2 + 5);
    if (!v14)
      v14 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                            + 40);
    awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom((awd::metrics::LocationMicroLocationSignificanceMetric *)v13, v14);
    v4 = *((_DWORD *)a2 + 21);
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0)
        goto LABEL_46;
      goto LABEL_41;
    }
    goto LABEL_36;
  }
LABEL_26:
  *((_DWORD *)this + 21) |= 0x10u;
  v11 = *((_QWORD *)this + 4);
  if (!v11)
  {
    v11 = operator new();
    *(_QWORD *)v11 = &off_24D991930;
    *(_OWORD *)(v11 + 8) = 0u;
    *(_OWORD *)(v11 + 24) = 0u;
    *((_QWORD *)this + 4) = v11;
  }
  v12 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)a2 + 4);
  if (!v12)
    v12 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                          + 32);
  awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom((awd::metrics::LocationMicroLocationSignificanceMetric *)v11, v12);
  v4 = *((_DWORD *)a2 + 21);
  if ((v4 & 0x20) != 0)
    goto LABEL_31;
LABEL_13:
  if ((v4 & 0x40) == 0)
    goto LABEL_14;
LABEL_36:
  *((_DWORD *)this + 21) |= 0x40u;
  v15 = *((_QWORD *)this + 7);
  if (!v15)
  {
    v15 = operator new();
    *(_QWORD *)v15 = &off_24D991930;
    *(_OWORD *)(v15 + 8) = 0u;
    *(_OWORD *)(v15 + 24) = 0u;
    *((_QWORD *)this + 7) = v15;
  }
  v16 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)a2 + 7);
  if (!v16)
    v16 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                          + 56);
  awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom((awd::metrics::LocationMicroLocationSignificanceMetric *)v15, v16);
  v4 = *((_DWORD *)a2 + 21);
  if ((v4 & 0x80) != 0)
  {
LABEL_41:
    *((_DWORD *)this + 21) |= 0x80u;
    v17 = *((_QWORD *)this + 8);
    if (!v17)
    {
      v17 = operator new();
      *(_QWORD *)v17 = &off_24D991930;
      *(_OWORD *)(v17 + 8) = 0u;
      *(_OWORD *)(v17 + 24) = 0u;
      *((_QWORD *)this + 8) = v17;
    }
    v18 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)a2 + 8);
    if (!v18)
      v18 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                            + 64);
    awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom((awd::metrics::LocationMicroLocationSignificanceMetric *)v17, v18);
    v4 = *((_DWORD *)a2 + 21);
  }
LABEL_46:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      *((_DWORD *)this + 21) |= 0x100u;
      v19 = *((_QWORD *)this + 9);
      if (!v19)
      {
        v19 = operator new();
        *(_QWORD *)v19 = &off_24D991930;
        *(_OWORD *)(v19 + 8) = 0u;
        *(_OWORD *)(v19 + 24) = 0u;
        *((_QWORD *)this + 9) = v19;
      }
      v20 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)a2 + 9);
      if (!v20)
        v20 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                              + 72);
      awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom((awd::metrics::LocationMicroLocationSignificanceMetric *)v19, v20);
      v4 = *((_DWORD *)a2 + 21);
    }
    if ((v4 & 0x200) != 0)
    {
      v21 = *((_DWORD *)a2 + 13);
      if (v21 >= 2)
        awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom();
      *((_DWORD *)this + 21) |= 0x200u;
      *((_DWORD *)this + 13) = v21;
    }
  }
}

void sub_218A4BAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationClusteringStatistics::~LocationMicroLocationClusteringStatistics(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  *(_QWORD *)this = &off_24D991E58;
  awd::metrics::LocationMicroLocationClusteringStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991E58;
  awd::metrics::LocationMicroLocationClusteringStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991E58;
  awd::metrics::LocationMicroLocationClusteringStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationMicroLocationClusteringStatistics::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((_QWORD *)awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ != this)
  {
    v1 = this;
    v2 = this[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = v1[4];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = v1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = v1[7];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = v1[8];
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    this = (_QWORD *)v1[9];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 80) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::default_instance(awd::metrics::LocationMicroLocationClusteringStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationClusteringStatistics::New(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991E58;
  *(_QWORD *)(v1 + 8) = 0;
  *(_DWORD *)(v1 + 48) = -1;
  *(_QWORD *)(v1 + 80) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_QWORD *)(v1 + 52) = 0;
  *(_QWORD *)(v1 + 68) = 0;
  *(_QWORD *)(v1 + 60) = 0;
  *(_DWORD *)(v1 + 76) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_DWORD *)(this + 84);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 48) = -1;
    if ((v1 & 4) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 84);
      }
    }
    if ((v1 & 8) != 0)
    {
      v3 = *(_QWORD *)(this + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v1 = *(_DWORD *)(this + 84);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      v4 = *(_QWORD *)(this + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        v1 = *(_DWORD *)(this + 84);
      }
    }
    if ((v1 & 0x20) != 0)
    {
      v5 = *(_QWORD *)(this + 40);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 36))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
          *(_QWORD *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        v1 = *(_DWORD *)(this + 84);
      }
    }
    if ((v1 & 0x40) != 0)
    {
      v6 = *(_QWORD *)(this + 56);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 36))
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_QWORD *)(v6 + 16) = 0;
          *(_QWORD *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        v1 = *(_DWORD *)(this + 84);
      }
    }
    if ((v1 & 0x80) != 0)
    {
      v7 = *(_QWORD *)(this + 64);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 36))
        {
          *(_QWORD *)(v7 + 8) = 0;
          *(_QWORD *)(v7 + 16) = 0;
          *(_QWORD *)(v7 + 24) = 0;
        }
        *(_DWORD *)(v7 + 36) = 0;
        v1 = *(_DWORD *)(this + 84);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      v8 = *(_QWORD *)(this + 72);
      if (v8)
      {
        if (*(_BYTE *)(v8 + 36))
        {
          *(_QWORD *)(v8 + 8) = 0;
          *(_QWORD *)(v8 + 16) = 0;
          *(_QWORD *)(v8 + 24) = 0;
        }
        *(_DWORD *)(v8 + 36) = 0;
      }
    }
    *(_DWORD *)(this + 52) = 0;
  }
  *(_DWORD *)(this + 84) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationClusteringStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  unint64_t v12;
  char *v13;
  uint64_t result;
  unsigned int v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  uint64_t v25;
  char *v26;
  int v27;
  int v28;
  int v29;
  int v30;
  _BYTE *v31;
  uint64_t v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  _BYTE *v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  int v44;
  _BYTE *v45;
  uint64_t v46;
  char *v47;
  int v48;
  int v49;
  int v50;
  int v51;
  _BYTE *v52;
  uint64_t v53;
  char *v54;
  int v55;
  int v56;
  int v57;
  int v58;
  _BYTE *v59;
  uint64_t v60;
  char *v61;
  int v62;
  int v63;
  int v64;
  int v65;
  _BYTE *v66;
  unsigned int v67;
  unsigned int v68;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *((_DWORD *)this + 21) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 16)
        {
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
          goto LABEL_39;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
LABEL_39:
        v68 = 0;
        if ((unint64_t)v11 >= v8 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68);
          if (!(_DWORD)result)
            return result;
          v15 = v68;
        }
        else
        {
          v15 = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        if (v15 + 1 <= 2)
        {
          *((_DWORD *)this + 21) |= 2u;
          *((_DWORD *)this + 12) = v15;
        }
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_49:
        *((_DWORD *)this + 21) |= 4u;
        v17 = *((_QWORD *)this + 2);
        if (!v17)
        {
          v17 = operator new();
          *(_QWORD *)v17 = &off_24D991930;
          *(_OWORD *)(v17 + 8) = 0u;
          *(_OWORD *)(v17 + 24) = 0u;
          *((_QWORD *)this + 2) = v17;
        }
        v68 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0;
        }
        else
        {
          v68 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationSignificanceMetric *)v17, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_63:
        *((_DWORD *)this + 21) |= 8u;
        v25 = *((_QWORD *)this + 3);
        if (!v25)
        {
          v25 = operator new();
          *(_QWORD *)v25 = &off_24D991930;
          *(_OWORD *)(v25 + 8) = 0u;
          *(_OWORD *)(v25 + 24) = 0u;
          *((_QWORD *)this + 3) = v25;
        }
        v68 = 0;
        v26 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0;
        }
        else
        {
          v68 = *v26;
          *((_QWORD *)a2 + 1) = v26 + 1;
        }
        v27 = *((_DWORD *)a2 + 14);
        v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationSignificanceMetric *)v25, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v29 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v29, 1);
        v30 = v29 - 1;
        if (v30 < 0 == v22)
          *((_DWORD *)a2 + 14) = v30;
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v31 + 1;
LABEL_77:
        *((_DWORD *)this + 21) |= 0x10u;
        v32 = *((_QWORD *)this + 4);
        if (!v32)
        {
          v32 = operator new();
          *(_QWORD *)v32 = &off_24D991930;
          *(_OWORD *)(v32 + 8) = 0u;
          *(_OWORD *)(v32 + 24) = 0u;
          *((_QWORD *)this + 4) = v32;
        }
        v68 = 0;
        v33 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0;
        }
        else
        {
          v68 = *v33;
          *((_QWORD *)a2 + 1) = v33 + 1;
        }
        v34 = *((_DWORD *)a2 + 14);
        v35 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v34 + 1;
        if (v34 >= v35)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationSignificanceMetric *)v32, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v36 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v36, 1);
        v37 = v36 - 1;
        if (v37 < 0 == v22)
          *((_DWORD *)a2 + 14) = v37;
        v38 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v38 + 1;
LABEL_91:
        *((_DWORD *)this + 21) |= 0x20u;
        v39 = *((_QWORD *)this + 5);
        if (!v39)
        {
          v39 = operator new();
          *(_QWORD *)v39 = &off_24D991930;
          *(_OWORD *)(v39 + 8) = 0u;
          *(_OWORD *)(v39 + 24) = 0u;
          *((_QWORD *)this + 5) = v39;
        }
        v68 = 0;
        v40 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0;
        }
        else
        {
          v68 = *v40;
          *((_QWORD *)a2 + 1) = v40 + 1;
        }
        v41 = *((_DWORD *)a2 + 14);
        v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 >= v42)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationSignificanceMetric *)v39, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v43 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v43, 1);
        v44 = v43 - 1;
        if (v44 < 0 == v22)
          *((_DWORD *)a2 + 14) = v44;
        v45 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v45 >= *((_QWORD *)a2 + 2) || *v45 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v45 + 1;
LABEL_105:
        *((_DWORD *)this + 21) |= 0x40u;
        v46 = *((_QWORD *)this + 7);
        if (!v46)
        {
          v46 = operator new();
          *(_QWORD *)v46 = &off_24D991930;
          *(_OWORD *)(v46 + 8) = 0u;
          *(_OWORD *)(v46 + 24) = 0u;
          *((_QWORD *)this + 7) = v46;
        }
        v68 = 0;
        v47 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v47 >= *((_QWORD *)a2 + 2) || *v47 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0;
        }
        else
        {
          v68 = *v47;
          *((_QWORD *)a2 + 1) = v47 + 1;
        }
        v48 = *((_DWORD *)a2 + 14);
        v49 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v48 + 1;
        if (v48 >= v49)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationSignificanceMetric *)v46, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v50 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v50, 1);
        v51 = v50 - 1;
        if (v51 < 0 == v22)
          *((_DWORD *)a2 + 14) = v51;
        v52 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v52 >= *((_QWORD *)a2 + 2) || *v52 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v52 + 1;
LABEL_119:
        *((_DWORD *)this + 21) |= 0x80u;
        v53 = *((_QWORD *)this + 8);
        if (!v53)
        {
          v53 = operator new();
          *(_QWORD *)v53 = &off_24D991930;
          *(_OWORD *)(v53 + 8) = 0u;
          *(_OWORD *)(v53 + 24) = 0u;
          *((_QWORD *)this + 8) = v53;
        }
        v68 = 0;
        v54 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v54 >= *((_QWORD *)a2 + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0;
        }
        else
        {
          v68 = *v54;
          *((_QWORD *)a2 + 1) = v54 + 1;
        }
        v55 = *((_DWORD *)a2 + 14);
        v56 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v55 + 1;
        if (v55 >= v56)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationSignificanceMetric *)v53, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v57 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v57, 1);
        v58 = v57 - 1;
        if (v58 < 0 == v22)
          *((_DWORD *)a2 + 14) = v58;
        v59 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v59 >= *((_QWORD *)a2 + 2) || *v59 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v59 + 1;
LABEL_133:
        *((_DWORD *)this + 21) |= 0x100u;
        v60 = *((_QWORD *)this + 9);
        if (!v60)
        {
          v60 = operator new();
          *(_QWORD *)v60 = &off_24D991930;
          *(_OWORD *)(v60 + 8) = 0u;
          *(_OWORD *)(v60 + 24) = 0u;
          *((_QWORD *)this + 9) = v60;
        }
        v68 = 0;
        v61 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v61 >= *((_QWORD *)a2 + 2) || *v61 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0;
        }
        else
        {
          v68 = *v61;
          *((_QWORD *)a2 + 1) = v61 + 1;
        }
        v62 = *((_DWORD *)a2 + 14);
        v63 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v62 + 1;
        if (v62 >= v63)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationSignificanceMetric *)v60, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v64 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v64, 1);
        v65 = v64 - 1;
        if (v65 < 0 == v22)
          *((_DWORD *)a2 + 14) = v65;
        v66 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v66 < v12 && *v66 == 80)
        {
          v13 = v66 + 1;
          *((_QWORD *)a2 + 1) = v13;
LABEL_147:
          v68 = 0;
          if ((unint64_t)v13 >= v12 || *v13 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68);
            if (!(_DWORD)result)
              return result;
            v67 = v68;
          }
          else
          {
            v67 = *v13;
            *((_QWORD *)a2 + 1) = v13 + 1;
          }
          if (v67 <= 1)
          {
            *((_DWORD *)this + 21) |= 0x200u;
            *((_DWORD *)this + 13) = v67;
          }
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_49;
        goto LABEL_30;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_63;
        goto LABEL_30;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_77;
        goto LABEL_30;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_91;
        goto LABEL_30;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_105;
        goto LABEL_30;
      case 8u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_119;
        goto LABEL_30;
      case 9u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_133;
        goto LABEL_30;
      case 0xAu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_147;
      default:
        v7 = TagFallback & 7;
LABEL_30:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = this;
  v6 = *(_DWORD *)(this + 84);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_14:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 16);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_17:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
    v8 = *(_QWORD *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 24);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_20:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
    v9 = *(_QWORD *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 32);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_23:
  v10 = *(_QWORD *)(v5 + 40);
  if (!v10)
    v10 = *(_QWORD *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 40);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_29;
  }
LABEL_26:
  v11 = *(_QWORD *)(v5 + 56);
  if (!v11)
    v11 = *(_QWORD *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 56);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_32;
  }
LABEL_29:
  v12 = *(_QWORD *)(v5 + 64);
  if (!v12)
    v12 = *(_QWORD *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 64);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  }
LABEL_32:
  v13 = *(_QWORD *)(v5 + 72);
  if (!v13)
    v13 = *(_QWORD *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 72);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v13, a2, a4);
  if ((*(_DWORD *)(v5 + 84) & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::ByteSize(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  awd::metrics::LocationMicroLocationSignificanceMetric *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  awd::metrics::LocationMicroLocationSignificanceMetric *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  awd::metrics::LocationMicroLocationSignificanceMetric *v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  awd::metrics::LocationMicroLocationSignificanceMetric *v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  awd::metrics::LocationMicroLocationSignificanceMetric *v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  int v25;
  awd::metrics::LocationMicroLocationSignificanceMetric *v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  int v29;
  awd::metrics::LocationMicroLocationSignificanceMetric *v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  int v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  int v35;

  v2 = *((_DWORD *)this + 21);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_56;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 21);
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 21);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v3 + v5 + 1);
LABEL_13:
  if ((v2 & 4) != 0)
  {
    v6 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)this + 2);
    if (!v6)
      v6 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                     + 16);
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v6);
    v8 = (int)v7;
    if (v7 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
    else
      v9 = 1;
    v3 = (v3 + v8 + v9 + 1);
    v2 = *((_DWORD *)this + 21);
    if ((v2 & 8) == 0)
    {
LABEL_15:
      if ((v2 & 0x10) == 0)
        goto LABEL_16;
      goto LABEL_32;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_15;
  }
  v10 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)this + 3);
  if (!v10)
    v10 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                    + 24);
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v10);
  v12 = (int)v11;
  if (v11 >= 0x80)
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
  else
    v13 = 1;
  v3 = (v3 + v12 + v13 + 1);
  v2 = *((_DWORD *)this + 21);
  if ((v2 & 0x10) == 0)
  {
LABEL_16:
    if ((v2 & 0x20) == 0)
      goto LABEL_17;
    goto LABEL_38;
  }
LABEL_32:
  v14 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)this + 4);
  if (!v14)
    v14 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                    + 32);
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v14);
  v16 = (int)v15;
  if (v15 >= 0x80)
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
  else
    v17 = 1;
  v3 = (v3 + v16 + v17 + 1);
  v2 = *((_DWORD *)this + 21);
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0)
      goto LABEL_18;
    goto LABEL_44;
  }
LABEL_38:
  v18 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)this + 5);
  if (!v18)
    v18 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                    + 40);
  v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v18);
  v20 = (int)v19;
  if (v19 >= 0x80)
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
  else
    v21 = 1;
  v3 = (v3 + v20 + v21 + 1);
  v2 = *((_DWORD *)this + 21);
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0)
      goto LABEL_56;
    goto LABEL_50;
  }
LABEL_44:
  v22 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)this + 7);
  if (!v22)
    v22 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                    + 56);
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v22);
  v24 = (int)v23;
  if (v23 >= 0x80)
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
  else
    v25 = 1;
  v3 = (v3 + v24 + v25 + 1);
  v2 = *((_DWORD *)this + 21);
  if ((v2 & 0x80) != 0)
  {
LABEL_50:
    v26 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)this + 8);
    if (!v26)
      v26 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                      + 64);
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v26);
    v28 = (int)v27;
    if (v27 >= 0x80)
      v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
    else
      v29 = 1;
    v3 = (v3 + v28 + v29 + 1);
    v2 = *((_DWORD *)this + 21);
  }
LABEL_56:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v30 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((_QWORD *)this + 9);
      if (!v30)
        v30 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
                                                                        + 72);
      v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v30);
      v32 = (int)v31;
      if (v31 >= 0x80)
        v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      else
        v33 = 1;
      v3 = (v3 + v32 + v33 + 1);
      v2 = *((_DWORD *)this + 21);
    }
    if ((v2 & 0x200) != 0)
    {
      v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
      if ((v34 & 0x80000000) != 0)
      {
        v35 = 11;
      }
      else if (v34 >= 0x80)
      {
        v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34) + 1;
      }
      else
      {
        v35 = 2;
      }
      v3 = (v35 + v3);
    }
  }
  *((_DWORD *)this + 20) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationClusteringStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationClusteringStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationClusteringStatistics::CopyFrom(awd::metrics::LocationMicroLocationClusteringStatistics *this, const awd::metrics::LocationMicroLocationClusteringStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationClusteringStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::IsInitialized(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::Swap(uint64_t this, awd::metrics::LocationMicroLocationClusteringStatistics *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a2 != (awd::metrics::LocationMicroLocationClusteringStatistics *)this)
  {
    v2 = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    v3 = *(_QWORD *)(this + 8);
    v4 = *(_QWORD *)(this + 16);
    v5 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v5;
    *((_QWORD *)a2 + 1) = v3;
    *((_QWORD *)a2 + 2) = v4;
    v6 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v6;
    v7 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v7;
    v8 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v8;
    v9 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v9;
    v10 = *(_QWORD *)(this + 64);
    *(_QWORD *)(this + 64) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v10;
    v11 = *(_QWORD *)(this + 72);
    *(_QWORD *)(this + 72) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 84);
    *(_DWORD *)(this + 84) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 80);
    *(_DWORD *)(this + 80) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v11;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationClusteringStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationClusteringStatistics");
}

double awd::metrics::LocationMicroLocationLearningState::SharedCtor(awd::metrics::LocationMicroLocationLearningState *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 3) = 0;
  return result;
}

awd::metrics::LocationMicroLocationLearningState *awd::metrics::LocationMicroLocationLearningState::LocationMicroLocationLearningState(awd::metrics::LocationMicroLocationLearningState *this, const awd::metrics::LocationMicroLocationLearningState *a2)
{
  *(_QWORD *)this = &off_24D991ED0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  awd::metrics::LocationMicroLocationLearningState::MergeFrom(this, a2);
  return this;
}

void sub_218A4CDFC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationLearningState::MergeFrom(awd::metrics::LocationMicroLocationLearningState *this, const awd::metrics::LocationMicroLocationLearningState *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 8);
      if ((v6 + 1) >= 3)
        awd::metrics::LocationMicroLocationLearningState::MergeFrom();
      *((_DWORD *)this + 10) |= 2u;
      *((_DWORD *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 4) != 0)
    {
      v7 = *((_QWORD *)a2 + 2);
      *((_DWORD *)this + 10) |= 4u;
      *((_QWORD *)this + 2) = v7;
      v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 8) != 0)
    {
      v8 = *((_QWORD *)a2 + 3);
      *((_DWORD *)this + 10) |= 8u;
      *((_QWORD *)this + 3) = v8;
    }
  }
}

void sub_218A4CF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationLearningState::~LocationMicroLocationLearningState(awd::metrics::LocationMicroLocationLearningState *this)
{
  *(_QWORD *)this = &off_24D991ED0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991ED0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991ED0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationLearningState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationLearningState::default_instance(awd::metrics::LocationMicroLocationLearningState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationLearningState::default_instance_;
  if (!awd::metrics::LocationMicroLocationLearningState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationLearningState::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationLearningState::New(awd::metrics::LocationMicroLocationLearningState *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991ED0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 32) = 0xFFFFFFFFLL;
  *(_DWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationLearningState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 40))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = -1;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationLearningState::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationLearningState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  unint64_t v14;
  char *v15;
  char *v16;
  unsigned int v17;
  _BYTE *v18;
  _BYTE *v19;
  unsigned __int8 *v20;
  uint64_t result;
  unsigned int v22;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  v6 = (unint64_t *)((char *)this + 24);
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
LABEL_24:
          *((_DWORD *)this + 10) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            v13 = v12 + 1;
            *((_QWORD *)a2 + 1) = v13;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_27:
        v22 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!(_DWORD)result)
            return result;
          v17 = v22;
        }
        else
        {
          v17 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        if (v17 + 1 <= 2)
        {
          *((_DWORD *)this + 10) |= 2u;
          *((_DWORD *)this + 8) = v17;
        }
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v18 >= v14 || *v18 != 24)
          continue;
        v15 = v18 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_37:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v15;
          v19 = v15 + 1;
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 10) |= 4u;
        if ((unint64_t)v19 >= v14 || *v19 != 32)
          continue;
        v16 = v19 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_45:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v20 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v16;
          v20 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 10) |= 8u;
        if (v20 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_37;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      default:
        v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationLearningState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationLearningState::ByteSize(awd::metrics::LocationMicroLocationLearningState *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_16;
  }
  if ((*((_BYTE *)this + 40) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_13;
LABEL_7:
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v5 = 2;
    }
    v3 = (v5 + v3);
    goto LABEL_13;
  }
  v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 1))
     + 1;
  v2 = *((_DWORD *)this + 10);
  if ((v2 & 2) != 0)
    goto LABEL_7;
LABEL_13:
  if ((v2 & 4) != 0)
  {
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    if ((*((_DWORD *)this + 10) & 8) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }
  if ((v2 & 8) != 0)
LABEL_15:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
LABEL_16:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationLearningState::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationLearningState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationLearningState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationLearningState::CopyFrom(awd::metrics::LocationMicroLocationLearningState *this, const awd::metrics::LocationMicroLocationLearningState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationLearningState *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationLearningState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationLearningState::IsInitialized(awd::metrics::LocationMicroLocationLearningState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationLearningState::Swap(uint64_t this, awd::metrics::LocationMicroLocationLearningState *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationMicroLocationLearningState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationLearningState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationLearningState");
}

double awd::metrics::LocationMicroLocationAnalyticsState::SharedCtor(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 3) = 0;
  return result;
}

awd::metrics::LocationMicroLocationAnalyticsState *awd::metrics::LocationMicroLocationAnalyticsState::LocationMicroLocationAnalyticsState(awd::metrics::LocationMicroLocationAnalyticsState *this, const awd::metrics::LocationMicroLocationAnalyticsState *a2)
{
  *(_QWORD *)this = &off_24D991F48;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom(this, a2);
  return this;
}

void sub_218A4D59C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom(awd::metrics::LocationMicroLocationAnalyticsState *this, const awd::metrics::LocationMicroLocationAnalyticsState *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 8);
      if ((v6 + 1) >= 3)
        awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom();
      *((_DWORD *)this + 10) |= 2u;
      *((_DWORD *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 4) != 0)
    {
      v7 = *((_QWORD *)a2 + 2);
      *((_DWORD *)this + 10) |= 4u;
      *((_QWORD *)this + 2) = v7;
      v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 8) != 0)
    {
      v8 = *((_QWORD *)a2 + 3);
      *((_DWORD *)this + 10) |= 8u;
      *((_QWORD *)this + 3) = v8;
    }
  }
}

void sub_218A4D6A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationAnalyticsState::~LocationMicroLocationAnalyticsState(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  *(_QWORD *)this = &off_24D991F48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991F48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D991F48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::default_instance(awd::metrics::LocationMicroLocationAnalyticsState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationAnalyticsState::default_instance_;
  if (!awd::metrics::LocationMicroLocationAnalyticsState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationAnalyticsState::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationAnalyticsState::New(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991F48;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 32) = 0xFFFFFFFFLL;
  *(_DWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 40))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = -1;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationAnalyticsState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  unint64_t v14;
  char *v15;
  char *v16;
  unsigned int v17;
  _BYTE *v18;
  _BYTE *v19;
  unsigned __int8 *v20;
  uint64_t result;
  unsigned int v22;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  v6 = (unint64_t *)((char *)this + 24);
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
LABEL_24:
          *((_DWORD *)this + 10) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            v13 = v12 + 1;
            *((_QWORD *)a2 + 1) = v13;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_27:
        v22 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!(_DWORD)result)
            return result;
          v17 = v22;
        }
        else
        {
          v17 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        if (v17 + 1 <= 2)
        {
          *((_DWORD *)this + 10) |= 2u;
          *((_DWORD *)this + 8) = v17;
        }
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v18 >= v14 || *v18 != 24)
          continue;
        v15 = v18 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_37:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v15;
          v19 = v15 + 1;
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 10) |= 4u;
        if ((unint64_t)v19 >= v14 || *v19 != 32)
          continue;
        v16 = v19 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_45:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v20 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v16;
          v20 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 10) |= 8u;
        if (v20 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_37;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      default:
        v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::ByteSize(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_16;
  }
  if ((*((_BYTE *)this + 40) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_13;
LABEL_7:
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v5 = 2;
    }
    v3 = (v5 + v3);
    goto LABEL_13;
  }
  v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 1))
     + 1;
  v2 = *((_DWORD *)this + 10);
  if ((v2 & 2) != 0)
    goto LABEL_7;
LABEL_13:
  if ((v2 & 4) != 0)
  {
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    if ((*((_DWORD *)this + 10) & 8) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }
  if ((v2 & 8) != 0)
LABEL_15:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
LABEL_16:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationAnalyticsState::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationAnalyticsState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationAnalyticsState::CopyFrom(awd::metrics::LocationMicroLocationAnalyticsState *this, const awd::metrics::LocationMicroLocationAnalyticsState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationAnalyticsState *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::IsInitialized(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::Swap(uint64_t this, awd::metrics::LocationMicroLocationAnalyticsState *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (awd::metrics::LocationMicroLocationAnalyticsState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationAnalyticsState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationAnalyticsState");
}

_QWORD *awd::metrics::LocationMicroLocationStatistics::SharedCtor(_QWORD *this)
{
  this[30] = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

awd::metrics::LocationMicroLocationStatistics *awd::metrics::LocationMicroLocationStatistics::LocationMicroLocationStatistics(awd::metrics::LocationMicroLocationStatistics *this, const awd::metrics::LocationMicroLocationStatistics *a2)
{
  *(_QWORD *)this = &off_24D991FC0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 13) = 0;
  *((_DWORD *)this + 28) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 16) = 0;
  *((_DWORD *)this + 34) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_QWORD *)this + 19) = 0;
  *((_QWORD *)this + 18) = 0;
  *((_DWORD *)this + 40) = 0;
  *((_DWORD *)this + 46) = 0;
  *((_QWORD *)this + 21) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 24) = 0;
  *((_QWORD *)this + 22) = 0;
  *((_QWORD *)this + 25) = 0;
  *((_DWORD *)this + 52) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_QWORD *)this + 28) = 0;
  *((_DWORD *)this + 58) = 0;
  *((_QWORD *)this + 30) = 0;
  *((_DWORD *)this + 10) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  awd::metrics::LocationMicroLocationStatistics::MergeFrom(this, a2);
  return this;
}

void sub_218A4DE24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  wireless_diagnostics::google::protobuf::MessageLite *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventClusteringStatistics>::TypeHandler>(v16);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringByModel>::TypeHandler>(v19);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringStatistics>::TypeHandler>(v18);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationAnalyticsState>::TypeHandler>(v17);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLearningState>::TypeHandler>(v15);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationModelState>::TypeHandler>(v14);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLocalizationStatistics>::TypeHandler>(v12);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationUserEventStatistics>::TypeHandler>(v11);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationMeasurementStatistics>::TypeHandler>(v13);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v10);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationStatistics::MergeFrom(awd::metrics::LocationMicroLocationStatistics *this, const awd::metrics::LocationMicroLocationStatistics *a2)
{
  uint64_t v4;
  const awd::metrics::LocationMicroLocationMeasurementStatistics *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const awd::metrics::LocationMicroLocationUserEventStatistics *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const awd::metrics::LocationMicroLocationLocalizationStatistics *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const awd::metrics::LocationMicroLocationModelState *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const awd::metrics::LocationMicroLocationLearningState *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const awd::metrics::LocationMicroLocationAnalyticsState *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const awd::metrics::LocationMicroLocationClusteringStatistics *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  const awd::metrics::LocationMicroLocationClusteringByModel *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  const awd::metrics::LocationMicroLocationEventClusteringStatistics *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  awd::metrics::LocationMicroLocationMetaData *v78;
  uint64_t v79;
  const awd::metrics::LocationMicroLocationMetaData *v80;
  _BYTE v81[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v81);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationMicroLocationMeasurementStatistics **)(*((_QWORD *)a2 + 3) + 8 * v4);
      v6 = *((_DWORD *)this + 9);
      v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 24));
          v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_24D991C00;
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 64) = 0xFFFFFFFFLL;
        *(_DWORD *)(v9 + 72) = 0;
        *(_OWORD *)(v9 + 16) = 0u;
        *(_OWORD *)(v9 + 32) = 0u;
        *(_OWORD *)(v9 + 48) = 0u;
        v10 = *((_QWORD *)this + 3);
        v11 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 3);
        *((_DWORD *)this + 8) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom((awd::metrics::LocationMicroLocationMeasurementStatistics *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 48));
  if (*((int *)a2 + 14) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const awd::metrics::LocationMicroLocationUserEventStatistics **)(*((_QWORD *)a2 + 6) + 8 * v12);
      v14 = *((_DWORD *)this + 15);
      v15 = *((int *)this + 14);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 16))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 48));
          v14 = *((_DWORD *)this + 15);
        }
        *((_DWORD *)this + 15) = v14 + 1;
        v17 = operator new();
        *(_QWORD *)v17 = &off_24D991C78;
        *(_QWORD *)(v17 + 8) = 0;
        *(_DWORD *)(v17 + 48) = -1;
        *(_QWORD *)(v17 + 88) = 0;
        *(_OWORD *)(v17 + 16) = 0u;
        *(_OWORD *)(v17 + 32) = 0u;
        *(_OWORD *)(v17 + 52) = 0u;
        *(_OWORD *)(v17 + 68) = 0u;
        *(_DWORD *)(v17 + 84) = 0;
        v18 = *((_QWORD *)this + 6);
        v19 = *((int *)this + 14);
        *((_DWORD *)this + 14) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 6);
        *((_DWORD *)this + 14) = v15 + 1;
        v17 = *(_QWORD *)(v16 + 8 * v15);
      }
      awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom((awd::metrics::LocationMicroLocationUserEventStatistics *)v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 14));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 72));
  if (*((int *)a2 + 20) >= 1)
  {
    v20 = 0;
    do
    {
      v21 = *(const awd::metrics::LocationMicroLocationLocalizationStatistics **)(*((_QWORD *)a2 + 9) + 8 * v20);
      v22 = *((_DWORD *)this + 21);
      v23 = *((int *)this + 20);
      if ((int)v23 >= v22)
      {
        if (v22 == *((_DWORD *)this + 22))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 72));
          v22 = *((_DWORD *)this + 21);
        }
        *((_DWORD *)this + 21) = v22 + 1;
        v25 = operator new();
        *(_QWORD *)v25 = &off_24D991D68;
        *(_QWORD *)(v25 + 8) = 0;
        *(_QWORD *)(v25 + 40) = 0xFFFFFFFFLL;
        *(_DWORD *)(v25 + 48) = 0;
        *(_QWORD *)(v25 + 24) = 0;
        *(_QWORD *)(v25 + 32) = 0;
        *(_QWORD *)(v25 + 16) = 0;
        v26 = *((_QWORD *)this + 9);
        v27 = *((int *)this + 20);
        *((_DWORD *)this + 20) = v27 + 1;
        *(_QWORD *)(v26 + 8 * v27) = v25;
      }
      else
      {
        v24 = *((_QWORD *)this + 9);
        *((_DWORD *)this + 20) = v23 + 1;
        v25 = *(_QWORD *)(v24 + 8 * v23);
      }
      awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom((awd::metrics::LocationMicroLocationLocalizationStatistics *)v25, v21);
      ++v20;
    }
    while (v20 < *((int *)a2 + 20));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 96));
  if (*((int *)a2 + 26) >= 1)
  {
    v28 = 0;
    do
    {
      v29 = *(const awd::metrics::LocationMicroLocationModelState **)(*((_QWORD *)a2 + 12) + 8 * v28);
      v30 = *((_DWORD *)this + 27);
      v31 = *((int *)this + 26);
      if ((int)v31 >= v30)
      {
        if (v30 == *((_DWORD *)this + 28))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 96));
          v30 = *((_DWORD *)this + 27);
        }
        *((_DWORD *)this + 27) = v30 + 1;
        v33 = operator new();
        *(_QWORD *)v33 = &off_24D991DE0;
        *(_QWORD *)(v33 + 8) = 0;
        *(_DWORD *)(v33 + 16) = -1;
        *(_DWORD *)(v33 + 44) = 0;
        *(_DWORD *)(v33 + 48) = 0;
        *(_QWORD *)(v33 + 20) = 0;
        *(_QWORD *)(v33 + 36) = 0;
        *(_QWORD *)(v33 + 28) = 0;
        v34 = *((_QWORD *)this + 12);
        v35 = *((int *)this + 26);
        *((_DWORD *)this + 26) = v35 + 1;
        *(_QWORD *)(v34 + 8 * v35) = v33;
      }
      else
      {
        v32 = *((_QWORD *)this + 12);
        *((_DWORD *)this + 26) = v31 + 1;
        v33 = *(_QWORD *)(v32 + 8 * v31);
      }
      awd::metrics::LocationMicroLocationModelState::MergeFrom((awd::metrics::LocationMicroLocationModelState *)v33, v29);
      ++v28;
    }
    while (v28 < *((int *)a2 + 26));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 120));
  if (*((int *)a2 + 32) >= 1)
  {
    v36 = 0;
    do
    {
      v37 = *(const awd::metrics::LocationMicroLocationLearningState **)(*((_QWORD *)a2 + 15) + 8 * v36);
      v38 = *((_DWORD *)this + 33);
      v39 = *((int *)this + 32);
      if ((int)v39 >= v38)
      {
        if (v38 == *((_DWORD *)this + 34))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 120));
          v38 = *((_DWORD *)this + 33);
        }
        *((_DWORD *)this + 33) = v38 + 1;
        v41 = operator new();
        *(_QWORD *)v41 = &off_24D991ED0;
        *(_QWORD *)(v41 + 8) = 0;
        *(_QWORD *)(v41 + 32) = 0xFFFFFFFFLL;
        *(_DWORD *)(v41 + 40) = 0;
        *(_QWORD *)(v41 + 16) = 0;
        *(_QWORD *)(v41 + 24) = 0;
        v42 = *((_QWORD *)this + 15);
        v43 = *((int *)this + 32);
        *((_DWORD *)this + 32) = v43 + 1;
        *(_QWORD *)(v42 + 8 * v43) = v41;
      }
      else
      {
        v40 = *((_QWORD *)this + 15);
        *((_DWORD *)this + 32) = v39 + 1;
        v41 = *(_QWORD *)(v40 + 8 * v39);
      }
      awd::metrics::LocationMicroLocationLearningState::MergeFrom((awd::metrics::LocationMicroLocationLearningState *)v41, v37);
      ++v36;
    }
    while (v36 < *((int *)a2 + 32));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 144));
  if (*((int *)a2 + 38) >= 1)
  {
    v44 = 0;
    do
    {
      v45 = *(const awd::metrics::LocationMicroLocationAnalyticsState **)(*((_QWORD *)a2 + 18) + 8 * v44);
      v46 = *((_DWORD *)this + 39);
      v47 = *((int *)this + 38);
      if ((int)v47 >= v46)
      {
        if (v46 == *((_DWORD *)this + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 144));
          v46 = *((_DWORD *)this + 39);
        }
        *((_DWORD *)this + 39) = v46 + 1;
        v49 = operator new();
        *(_QWORD *)v49 = &off_24D991F48;
        *(_QWORD *)(v49 + 8) = 0;
        *(_QWORD *)(v49 + 32) = 0xFFFFFFFFLL;
        *(_DWORD *)(v49 + 40) = 0;
        *(_QWORD *)(v49 + 16) = 0;
        *(_QWORD *)(v49 + 24) = 0;
        v50 = *((_QWORD *)this + 18);
        v51 = *((int *)this + 38);
        *((_DWORD *)this + 38) = v51 + 1;
        *(_QWORD *)(v50 + 8 * v51) = v49;
      }
      else
      {
        v48 = *((_QWORD *)this + 18);
        *((_DWORD *)this + 38) = v47 + 1;
        v49 = *(_QWORD *)(v48 + 8 * v47);
      }
      awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom((awd::metrics::LocationMicroLocationAnalyticsState *)v49, v45);
      ++v44;
    }
    while (v44 < *((int *)a2 + 38));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 168));
  if (*((int *)a2 + 44) >= 1)
  {
    v52 = 0;
    do
    {
      v53 = *(const awd::metrics::LocationMicroLocationClusteringStatistics **)(*((_QWORD *)a2 + 21) + 8 * v52);
      v54 = *((_DWORD *)this + 45);
      v55 = *((int *)this + 44);
      if ((int)v55 >= v54)
      {
        if (v54 == *((_DWORD *)this + 46))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 168));
          v54 = *((_DWORD *)this + 45);
        }
        *((_DWORD *)this + 45) = v54 + 1;
        v57 = operator new();
        *(_QWORD *)v57 = &off_24D991E58;
        *(_QWORD *)(v57 + 8) = 0;
        *(_DWORD *)(v57 + 48) = -1;
        *(_QWORD *)(v57 + 80) = 0;
        *(_OWORD *)(v57 + 16) = 0u;
        *(_OWORD *)(v57 + 32) = 0u;
        *(_QWORD *)(v57 + 52) = 0;
        *(_QWORD *)(v57 + 68) = 0;
        *(_QWORD *)(v57 + 60) = 0;
        *(_DWORD *)(v57 + 76) = 0;
        v58 = *((_QWORD *)this + 21);
        v59 = *((int *)this + 44);
        *((_DWORD *)this + 44) = v59 + 1;
        *(_QWORD *)(v58 + 8 * v59) = v57;
      }
      else
      {
        v56 = *((_QWORD *)this + 21);
        *((_DWORD *)this + 44) = v55 + 1;
        v57 = *(_QWORD *)(v56 + 8 * v55);
      }
      awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom((awd::metrics::LocationMicroLocationClusteringStatistics *)v57, v53);
      ++v52;
    }
    while (v52 < *((int *)a2 + 44));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 192));
  if (*((int *)a2 + 50) >= 1)
  {
    v60 = 0;
    do
    {
      v61 = *(const awd::metrics::LocationMicroLocationClusteringByModel **)(*((_QWORD *)a2 + 24) + 8 * v60);
      v62 = *((_DWORD *)this + 51);
      v63 = *((int *)this + 50);
      if ((int)v63 >= v62)
      {
        if (v62 == *((_DWORD *)this + 52))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 192));
          v62 = *((_DWORD *)this + 51);
        }
        *((_DWORD *)this + 51) = v62 + 1;
        v65 = operator new();
        *(_QWORD *)(v65 + 8) = 0;
        *(_QWORD *)(v65 + 16) = 0;
        *(_QWORD *)v65 = &off_24D991B10;
        *(_DWORD *)(v65 + 24) = 0;
        *(_OWORD *)(v65 + 32) = xmmword_218A5D3E0;
        v66 = *((_QWORD *)this + 24);
        v67 = *((int *)this + 50);
        *((_DWORD *)this + 50) = v67 + 1;
        *(_QWORD *)(v66 + 8 * v67) = v65;
      }
      else
      {
        v64 = *((_QWORD *)this + 24);
        *((_DWORD *)this + 50) = v63 + 1;
        v65 = *(_QWORD *)(v64 + 8 * v63);
      }
      awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom((awd::metrics::LocationMicroLocationClusteringByModel *)v65, v61);
      ++v60;
    }
    while (v60 < *((int *)a2 + 50));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 216));
  if (*((int *)a2 + 56) >= 1)
  {
    v68 = 0;
    do
    {
      v69 = *(const awd::metrics::LocationMicroLocationEventClusteringStatistics **)(*((_QWORD *)a2 + 27) + 8 * v68);
      v70 = *((_DWORD *)this + 57);
      v71 = *((int *)this + 56);
      if ((int)v71 >= v70)
      {
        if (v70 == *((_DWORD *)this + 58))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 216));
          v70 = *((_DWORD *)this + 57);
        }
        *((_DWORD *)this + 57) = v70 + 1;
        v73 = operator new();
        *(_QWORD *)v73 = &off_24D991CF0;
        *(_QWORD *)(v73 + 16) = 0;
        *(_QWORD *)(v73 + 24) = 0;
        *(_DWORD *)(v73 + 32) = 0;
        *(_QWORD *)(v73 + 8) = 0xFFFFFFFFLL;
        *(_QWORD *)(v73 + 40) = 0;
        v74 = *((_QWORD *)this + 27);
        v75 = *((int *)this + 56);
        *((_DWORD *)this + 56) = v75 + 1;
        *(_QWORD *)(v74 + 8 * v75) = v73;
      }
      else
      {
        v72 = *((_QWORD *)this + 27);
        *((_DWORD *)this + 56) = v71 + 1;
        v73 = *(_QWORD *)(v72 + 8 * v71);
      }
      awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom((awd::metrics::LocationMicroLocationEventClusteringStatistics *)v73, v69);
      ++v68;
    }
    while (v68 < *((int *)a2 + 56));
  }
  LOBYTE(v76) = *((_BYTE *)a2 + 244);
  if ((_BYTE)v76)
  {
    if ((*((_BYTE *)a2 + 244) & 1) != 0)
    {
      v77 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 61) |= 1u;
      *((_QWORD *)this + 1) = v77;
      v76 = *((_DWORD *)a2 + 61);
    }
    if ((v76 & 2) != 0)
    {
      *((_DWORD *)this + 61) |= 2u;
      v78 = (awd::metrics::LocationMicroLocationMetaData *)*((_QWORD *)this + 2);
      if (!v78)
      {
        v78 = (awd::metrics::LocationMicroLocationMetaData *)operator new();
        *(_QWORD *)v78 = &off_24D991B88;
        *((_QWORD *)v78 + 1) = 0;
        v79 = MEMORY[0x24BEDD958];
        *((_QWORD *)v78 + 2) = 0;
        *((_QWORD *)v78 + 3) = 0;
        *((_QWORD *)v78 + 4) = v79;
        *((_QWORD *)v78 + 5) = 0;
        *((_QWORD *)v78 + 6) = 0;
        *((_QWORD *)this + 2) = v78;
      }
      v80 = (const awd::metrics::LocationMicroLocationMetaData *)*((_QWORD *)a2 + 2);
      if (!v80)
        v80 = *(const awd::metrics::LocationMicroLocationMetaData **)(awd::metrics::LocationMicroLocationStatistics::default_instance_
                                                                    + 16);
      awd::metrics::LocationMicroLocationMetaData::MergeFrom(v78, v80);
    }
  }
}

void sub_218A4E7A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationStatistics::~LocationMicroLocationStatistics(awd::metrics::LocationMicroLocationStatistics *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24D991FC0;
  if ((awd::metrics::LocationMicroLocationStatistics *)awd::metrics::LocationMicroLocationStatistics::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventClusteringStatistics>::TypeHandler>((uint64_t *)this + 27);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringByModel>::TypeHandler>((uint64_t *)this + 24);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringStatistics>::TypeHandler>((uint64_t *)this + 21);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationAnalyticsState>::TypeHandler>((uint64_t *)this + 18);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLearningState>::TypeHandler>((uint64_t *)this + 15);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationModelState>::TypeHandler>((uint64_t *)this + 12);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLocalizationStatistics>::TypeHandler>((uint64_t *)this + 9);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationUserEventStatistics>::TypeHandler>((uint64_t *)this + 6);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationMeasurementStatistics>::TypeHandler>((uint64_t *)this + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationMicroLocationStatistics::~LocationMicroLocationStatistics(this);
  JUMPOUT(0x219A1DC7CLL);
}

_QWORD *awd::metrics::LocationMicroLocationStatistics::SharedDtor(_QWORD *this)
{
  if ((_QWORD *)awd::metrics::LocationMicroLocationStatistics::default_instance_ != this)
  {
    this = (_QWORD *)this[2];
    if (this)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*this + 8))(this);
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 240) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationStatistics::default_instance(awd::metrics::LocationMicroLocationStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationMicroLocationStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationStatistics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationMicroLocationStatistics::New(awd::metrics::LocationMicroLocationStatistics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D991FC0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_DWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 80) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 96) = 0;
  *(_QWORD *)(v1 + 104) = 0;
  *(_DWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = 0;
  *(_QWORD *)(v1 + 128) = 0;
  *(_DWORD *)(v1 + 136) = 0;
  *(_QWORD *)(v1 + 144) = 0;
  *(_QWORD *)(v1 + 152) = 0;
  *(_DWORD *)(v1 + 160) = 0;
  *(_DWORD *)(v1 + 184) = 0;
  *(_QWORD *)(v1 + 168) = 0;
  *(_QWORD *)(v1 + 176) = 0;
  *(_QWORD *)(v1 + 192) = 0;
  *(_QWORD *)(v1 + 200) = 0;
  *(_DWORD *)(v1 + 208) = 0;
  *(_QWORD *)(v1 + 216) = 0;
  *(_QWORD *)(v1 + 224) = 0;
  *(_DWORD *)(v1 + 232) = 0;
  *(_QWORD *)(v1 + 240) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 8) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationStatistics::Clear(uint64_t this)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = this;
  v2 = *(_BYTE *)(this + 244);
  if (v2)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = awd::metrics::LocationMicroLocationMetaData::Clear(this);
    }
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(int *)(v1 + 56) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 56));
  }
  *(_DWORD *)(v1 + 56) = 0;
  if (*(int *)(v1 + 80) >= 1)
  {
    v7 = 0;
    do
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v1 + 72) + 8 * v7);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 32))(v8);
      ++v7;
    }
    while (v7 < *(int *)(v1 + 80));
  }
  *(_DWORD *)(v1 + 80) = 0;
  if (*(int *)(v1 + 104) >= 1)
  {
    v9 = 0;
    do
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v1 + 96) + 8 * v9);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 32))(v10);
      ++v9;
    }
    while (v9 < *(int *)(v1 + 104));
  }
  *(_DWORD *)(v1 + 104) = 0;
  if (*(int *)(v1 + 128) >= 1)
  {
    v11 = 0;
    do
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v1 + 120) + 8 * v11);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 32))(v12);
      ++v11;
    }
    while (v11 < *(int *)(v1 + 128));
  }
  *(_DWORD *)(v1 + 128) = 0;
  if (*(int *)(v1 + 152) >= 1)
  {
    v13 = 0;
    do
    {
      v14 = *(_QWORD *)(*(_QWORD *)(v1 + 144) + 8 * v13);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 32))(v14);
      ++v13;
    }
    while (v13 < *(int *)(v1 + 152));
  }
  *(_DWORD *)(v1 + 152) = 0;
  if (*(int *)(v1 + 176) >= 1)
  {
    v15 = 0;
    do
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 168) + 8 * v15);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      ++v15;
    }
    while (v15 < *(int *)(v1 + 176));
  }
  *(_DWORD *)(v1 + 176) = 0;
  if (*(int *)(v1 + 200) >= 1)
  {
    v17 = 0;
    do
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v1 + 192) + 8 * v17);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 32))(v18);
      ++v17;
    }
    while (v17 < *(int *)(v1 + 200));
  }
  *(_DWORD *)(v1 + 200) = 0;
  if (*(int *)(v1 + 224) >= 1)
  {
    v19 = 0;
    do
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v1 + 216) + 8 * v19);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 32))(v20);
      ++v19;
    }
    while (v19 < *(int *)(v1 + 224));
  }
  *(_DWORD *)(v1 + 224) = 0;
  *(_DWORD *)(v1 + 244) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  int v15;
  uint64_t result;
  awd::metrics::LocationMicroLocationMetaData *v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  int v128;
  int v129;
  int v130;
  int v131;
  _BYTE *v132;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v133;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v134;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v135;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v136;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v137;
  unsigned int v138;

  v4 = (unint64_t *)((char *)this + 8);
  v133 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 24);
  v134 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 48);
  v135 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 72);
  v136 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 96);
  v137 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 120);
  v5 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 144);
  v6 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 168);
  v7 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 192);
  v8 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 216);
  while (1)
  {
LABEL_2:
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && (*v9 & 0x80000000) == 0)
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        v15 = *((_DWORD *)this + 61) | 1;
        *((_DWORD *)this + 61) = v15;
        if ((unint64_t)v14 < v12 && *v14 == 18)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
          goto LABEL_40;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_32;
        v15 = *((_DWORD *)this + 61);
LABEL_40:
        *((_DWORD *)this + 61) = v15 | 2;
        v17 = (awd::metrics::LocationMicroLocationMetaData *)*((_QWORD *)this + 2);
        if (!v17)
        {
          v17 = (awd::metrics::LocationMicroLocationMetaData *)operator new();
          *(_QWORD *)v17 = &off_24D991B88;
          *((_QWORD *)v17 + 1) = 0;
          *((_QWORD *)v17 + 2) = 0;
          *((_QWORD *)v17 + 3) = 0;
          *((_QWORD *)v17 + 4) = MEMORY[0x24BEDD958];
          *((_QWORD *)v17 + 5) = 0;
          *((_QWORD *)v17 + 6) = 0;
          *((_QWORD *)this + 2) = v17;
        }
        v138 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
        }
        else
        {
          v138 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationMetaData::MergePartialFromCodedStream(v17, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 < *((_QWORD *)a2 + 2) && *v24 == 26)
        {
          do
          {
            *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_54:
            v25 = *((_DWORD *)this + 9);
            v26 = *((int *)this + 8);
            if ((int)v26 >= v25)
            {
              if (v25 == *((_DWORD *)this + 10))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v133);
                v25 = *((_DWORD *)this + 9);
              }
              *((_DWORD *)this + 9) = v25 + 1;
              v28 = operator new();
              *(_QWORD *)v28 = &off_24D991C00;
              *(_QWORD *)(v28 + 8) = 0;
              *(_QWORD *)(v28 + 64) = 0xFFFFFFFFLL;
              *(_DWORD *)(v28 + 72) = 0;
              *(_OWORD *)(v28 + 16) = 0u;
              *(_OWORD *)(v28 + 32) = 0u;
              *(_OWORD *)(v28 + 48) = 0u;
              v29 = *((_QWORD *)this + 3);
              v30 = *((int *)this + 8);
              *((_DWORD *)this + 8) = v30 + 1;
              *(_QWORD *)(v29 + 8 * v30) = v28;
            }
            else
            {
              v27 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 8) = v26 + 1;
              v28 = *(_QWORD *)(v27 + 8 * v26);
            }
            v138 = 0;
            v31 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
            }
            else
            {
              v138 = *v31;
              *((_QWORD *)a2 + 1) = v31 + 1;
            }
            v32 = *((_DWORD *)a2 + 14);
            v33 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v32 + 1;
            if (v32 >= v33)
              return 0;
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (!awd::metrics::LocationMicroLocationMeasurementStatistics::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationMeasurementStatistics *)v28, a2)|| !*((_BYTE *)a2 + 36))
            {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            v34 = *((_DWORD *)a2 + 14);
            v22 = __OFSUB__(v34, 1);
            v35 = v34 - 1;
            if (v35 < 0 == v22)
              *((_DWORD *)a2 + 14) = v35;
            v24 = (_BYTE *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v24 >= *((_QWORD *)a2 + 2))
              goto LABEL_2;
            v36 = *v24;
          }
          while (v36 == 26);
          if (v36 == 34)
          {
            do
            {
              *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_72:
              v37 = *((_DWORD *)this + 15);
              v38 = *((int *)this + 14);
              if ((int)v38 >= v37)
              {
                if (v37 == *((_DWORD *)this + 16))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v134);
                  v37 = *((_DWORD *)this + 15);
                }
                *((_DWORD *)this + 15) = v37 + 1;
                v40 = operator new();
                *(_QWORD *)v40 = &off_24D991C78;
                *(_QWORD *)(v40 + 8) = 0;
                *(_DWORD *)(v40 + 48) = -1;
                *(_QWORD *)(v40 + 88) = 0;
                *(_OWORD *)(v40 + 16) = 0u;
                *(_OWORD *)(v40 + 32) = 0u;
                *(_OWORD *)(v40 + 52) = 0u;
                *(_OWORD *)(v40 + 68) = 0u;
                *(_DWORD *)(v40 + 84) = 0;
                v41 = *((_QWORD *)this + 6);
                v42 = *((int *)this + 14);
                *((_DWORD *)this + 14) = v42 + 1;
                *(_QWORD *)(v41 + 8 * v42) = v40;
              }
              else
              {
                v39 = *((_QWORD *)this + 6);
                *((_DWORD *)this + 14) = v38 + 1;
                v40 = *(_QWORD *)(v39 + 8 * v38);
              }
              v138 = 0;
              v43 = (char *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
              }
              else
              {
                v138 = *v43;
                *((_QWORD *)a2 + 1) = v43 + 1;
              }
              v44 = *((_DWORD *)a2 + 14);
              v45 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v44 + 1;
              if (v44 >= v45)
                return 0;
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!awd::metrics::LocationMicroLocationUserEventStatistics::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationUserEventStatistics *)v40, a2)|| !*((_BYTE *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v46 = *((_DWORD *)a2 + 14);
              v22 = __OFSUB__(v46, 1);
              v47 = v46 - 1;
              if (v47 < 0 == v22)
                *((_DWORD *)a2 + 14) = v47;
              v24 = (_BYTE *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v24 >= *((_QWORD *)a2 + 2))
                goto LABEL_2;
              v48 = *v24;
            }
            while (v48 == 34);
            if (v48 == 42)
            {
              do
              {
                *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_90:
                v49 = *((_DWORD *)this + 21);
                v50 = *((int *)this + 20);
                if ((int)v50 >= v49)
                {
                  if (v49 == *((_DWORD *)this + 22))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v135);
                    v49 = *((_DWORD *)this + 21);
                  }
                  *((_DWORD *)this + 21) = v49 + 1;
                  v52 = operator new();
                  *(_QWORD *)v52 = &off_24D991D68;
                  *(_QWORD *)(v52 + 8) = 0;
                  *(_QWORD *)(v52 + 40) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v52 + 48) = 0;
                  *(_QWORD *)(v52 + 24) = 0;
                  *(_QWORD *)(v52 + 32) = 0;
                  *(_QWORD *)(v52 + 16) = 0;
                  v53 = *((_QWORD *)this + 9);
                  v54 = *((int *)this + 20);
                  *((_DWORD *)this + 20) = v54 + 1;
                  *(_QWORD *)(v53 + 8 * v54) = v52;
                }
                else
                {
                  v51 = *((_QWORD *)this + 9);
                  *((_DWORD *)this + 20) = v50 + 1;
                  v52 = *(_QWORD *)(v51 + 8 * v50);
                }
                v138 = 0;
                v55 = (char *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v55 >= *((_QWORD *)a2 + 2) || *v55 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
                }
                else
                {
                  v138 = *v55;
                  *((_QWORD *)a2 + 1) = v55 + 1;
                }
                v56 = *((_DWORD *)a2 + 14);
                v57 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v56 + 1;
                if (v56 >= v57)
                  return 0;
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!awd::metrics::LocationMicroLocationLocalizationStatistics::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationLocalizationStatistics *)v52, a2)|| !*((_BYTE *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                v58 = *((_DWORD *)a2 + 14);
                v22 = __OFSUB__(v58, 1);
                v59 = v58 - 1;
                if (v59 < 0 == v22)
                  *((_DWORD *)a2 + 14) = v59;
                v24 = (_BYTE *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v24 >= *((_QWORD *)a2 + 2))
                  goto LABEL_2;
                v60 = *v24;
              }
              while (v60 == 42);
              if (v60 == 50)
              {
                do
                {
                  *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_108:
                  v61 = *((_DWORD *)this + 27);
                  v62 = *((int *)this + 26);
                  if ((int)v62 >= v61)
                  {
                    if (v61 == *((_DWORD *)this + 28))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v136);
                      v61 = *((_DWORD *)this + 27);
                    }
                    *((_DWORD *)this + 27) = v61 + 1;
                    v64 = operator new();
                    *(_QWORD *)v64 = &off_24D991DE0;
                    *(_QWORD *)(v64 + 8) = 0;
                    *(_DWORD *)(v64 + 16) = -1;
                    *(_DWORD *)(v64 + 44) = 0;
                    *(_DWORD *)(v64 + 48) = 0;
                    *(_QWORD *)(v64 + 20) = 0;
                    *(_QWORD *)(v64 + 36) = 0;
                    *(_QWORD *)(v64 + 28) = 0;
                    v65 = *((_QWORD *)this + 12);
                    v66 = *((int *)this + 26);
                    *((_DWORD *)this + 26) = v66 + 1;
                    *(_QWORD *)(v65 + 8 * v66) = v64;
                  }
                  else
                  {
                    v63 = *((_QWORD *)this + 12);
                    *((_DWORD *)this + 26) = v62 + 1;
                    v64 = *(_QWORD *)(v63 + 8 * v62);
                  }
                  v138 = 0;
                  v67 = (char *)*((_QWORD *)a2 + 1);
                  if ((unint64_t)v67 >= *((_QWORD *)a2 + 2) || *v67 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
                  }
                  else
                  {
                    v138 = *v67;
                    *((_QWORD *)a2 + 1) = v67 + 1;
                  }
                  v68 = *((_DWORD *)a2 + 14);
                  v69 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v68 + 1;
                  if (v68 >= v69)
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!awd::metrics::LocationMicroLocationModelState::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationModelState *)v64, a2)|| !*((_BYTE *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  v70 = *((_DWORD *)a2 + 14);
                  v22 = __OFSUB__(v70, 1);
                  v71 = v70 - 1;
                  if (v71 < 0 == v22)
                    *((_DWORD *)a2 + 14) = v71;
                  v24 = (_BYTE *)*((_QWORD *)a2 + 1);
                  if ((unint64_t)v24 >= *((_QWORD *)a2 + 2))
                    goto LABEL_2;
                  v72 = *v24;
                }
                while (v72 == 50);
                if (v72 == 58)
                {
                  do
                  {
                    *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_126:
                    v73 = *((_DWORD *)this + 33);
                    v74 = *((int *)this + 32);
                    if ((int)v74 >= v73)
                    {
                      if (v73 == *((_DWORD *)this + 34))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v137);
                        v73 = *((_DWORD *)this + 33);
                      }
                      *((_DWORD *)this + 33) = v73 + 1;
                      v76 = operator new();
                      *(_QWORD *)v76 = &off_24D991ED0;
                      *(_QWORD *)(v76 + 8) = 0;
                      *(_QWORD *)(v76 + 32) = 0xFFFFFFFFLL;
                      *(_DWORD *)(v76 + 40) = 0;
                      *(_QWORD *)(v76 + 16) = 0;
                      *(_QWORD *)(v76 + 24) = 0;
                      v77 = *((_QWORD *)this + 15);
                      v78 = *((int *)this + 32);
                      *((_DWORD *)this + 32) = v78 + 1;
                      *(_QWORD *)(v77 + 8 * v78) = v76;
                    }
                    else
                    {
                      v75 = *((_QWORD *)this + 15);
                      *((_DWORD *)this + 32) = v74 + 1;
                      v76 = *(_QWORD *)(v75 + 8 * v74);
                    }
                    v138 = 0;
                    v79 = (char *)*((_QWORD *)a2 + 1);
                    if ((unint64_t)v79 >= *((_QWORD *)a2 + 2) || *v79 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
                    }
                    else
                    {
                      v138 = *v79;
                      *((_QWORD *)a2 + 1) = v79 + 1;
                    }
                    v80 = *((_DWORD *)a2 + 14);
                    v81 = *((_DWORD *)a2 + 15);
                    *((_DWORD *)a2 + 14) = v80 + 1;
                    if (v80 >= v81)
                      return 0;
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                    if (!awd::metrics::LocationMicroLocationLearningState::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationLearningState *)v76, a2)|| !*((_BYTE *)a2 + 36))
                    {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                    v82 = *((_DWORD *)a2 + 14);
                    v22 = __OFSUB__(v82, 1);
                    v83 = v82 - 1;
                    if (v83 < 0 == v22)
                      *((_DWORD *)a2 + 14) = v83;
                    v24 = (_BYTE *)*((_QWORD *)a2 + 1);
                    if ((unint64_t)v24 >= *((_QWORD *)a2 + 2))
                      goto LABEL_2;
                    v84 = *v24;
                  }
                  while (v84 == 58);
                  if (v84 == 66)
                  {
                    do
                    {
                      *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_144:
                      v85 = *((_DWORD *)this + 39);
                      v86 = *((int *)this + 38);
                      if ((int)v86 >= v85)
                      {
                        if (v85 == *((_DWORD *)this + 40))
                        {
                          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
                          v85 = *((_DWORD *)this + 39);
                        }
                        *((_DWORD *)this + 39) = v85 + 1;
                        v88 = operator new();
                        *(_QWORD *)v88 = &off_24D991F48;
                        *(_QWORD *)(v88 + 8) = 0;
                        *(_QWORD *)(v88 + 32) = 0xFFFFFFFFLL;
                        *(_DWORD *)(v88 + 40) = 0;
                        *(_QWORD *)(v88 + 16) = 0;
                        *(_QWORD *)(v88 + 24) = 0;
                        v89 = *((_QWORD *)this + 18);
                        v90 = *((int *)this + 38);
                        *((_DWORD *)this + 38) = v90 + 1;
                        *(_QWORD *)(v89 + 8 * v90) = v88;
                      }
                      else
                      {
                        v87 = *((_QWORD *)this + 18);
                        *((_DWORD *)this + 38) = v86 + 1;
                        v88 = *(_QWORD *)(v87 + 8 * v86);
                      }
                      v138 = 0;
                      v91 = (char *)*((_QWORD *)a2 + 1);
                      if ((unint64_t)v91 >= *((_QWORD *)a2 + 2) || *v91 < 0)
                      {
                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
                      }
                      else
                      {
                        v138 = *v91;
                        *((_QWORD *)a2 + 1) = v91 + 1;
                      }
                      v92 = *((_DWORD *)a2 + 14);
                      v93 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v92 + 1;
                      if (v92 >= v93)
                        return 0;
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                      if (!awd::metrics::LocationMicroLocationAnalyticsState::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationAnalyticsState *)v88, a2)|| !*((_BYTE *)a2 + 36))
                      {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                      v94 = *((_DWORD *)a2 + 14);
                      v22 = __OFSUB__(v94, 1);
                      v95 = v94 - 1;
                      if (v95 < 0 == v22)
                        *((_DWORD *)a2 + 14) = v95;
                      v24 = (_BYTE *)*((_QWORD *)a2 + 1);
                      if ((unint64_t)v24 >= *((_QWORD *)a2 + 2))
                        goto LABEL_2;
                      v96 = *v24;
                    }
                    while (v96 == 66);
                    if (v96 == 74)
                    {
                      do
                      {
                        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_162:
                        v97 = *((_DWORD *)this + 45);
                        v98 = *((int *)this + 44);
                        if ((int)v98 >= v97)
                        {
                          if (v97 == *((_DWORD *)this + 46))
                          {
                            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
                            v97 = *((_DWORD *)this + 45);
                          }
                          *((_DWORD *)this + 45) = v97 + 1;
                          v100 = operator new();
                          *(_QWORD *)v100 = &off_24D991E58;
                          *(_QWORD *)(v100 + 8) = 0;
                          *(_DWORD *)(v100 + 48) = -1;
                          *(_QWORD *)(v100 + 80) = 0;
                          *(_OWORD *)(v100 + 16) = 0u;
                          *(_OWORD *)(v100 + 32) = 0u;
                          *(_QWORD *)(v100 + 52) = 0;
                          *(_QWORD *)(v100 + 68) = 0;
                          *(_QWORD *)(v100 + 60) = 0;
                          *(_DWORD *)(v100 + 76) = 0;
                          v101 = *((_QWORD *)this + 21);
                          v102 = *((int *)this + 44);
                          *((_DWORD *)this + 44) = v102 + 1;
                          *(_QWORD *)(v101 + 8 * v102) = v100;
                        }
                        else
                        {
                          v99 = *((_QWORD *)this + 21);
                          *((_DWORD *)this + 44) = v98 + 1;
                          v100 = *(_QWORD *)(v99 + 8 * v98);
                        }
                        v138 = 0;
                        v103 = (char *)*((_QWORD *)a2 + 1);
                        if ((unint64_t)v103 >= *((_QWORD *)a2 + 2) || *v103 < 0)
                        {
                          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
                        }
                        else
                        {
                          v138 = *v103;
                          *((_QWORD *)a2 + 1) = v103 + 1;
                        }
                        v104 = *((_DWORD *)a2 + 14);
                        v105 = *((_DWORD *)a2 + 15);
                        *((_DWORD *)a2 + 14) = v104 + 1;
                        if (v104 >= v105)
                          return 0;
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                        if (!awd::metrics::LocationMicroLocationClusteringStatistics::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationClusteringStatistics *)v100, a2)|| !*((_BYTE *)a2 + 36))
                        {
                          return 0;
                        }
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                        v106 = *((_DWORD *)a2 + 14);
                        v22 = __OFSUB__(v106, 1);
                        v107 = v106 - 1;
                        if (v107 < 0 == v22)
                          *((_DWORD *)a2 + 14) = v107;
                        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
                        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2))
                          goto LABEL_2;
                        v108 = *v24;
                      }
                      while (v108 == 74);
                      if (v108 == 82)
                      {
                        do
                        {
                          *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_180:
                          v109 = *((_DWORD *)this + 51);
                          v110 = *((int *)this + 50);
                          if ((int)v110 >= v109)
                          {
                            if (v109 == *((_DWORD *)this + 52))
                            {
                              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
                              v109 = *((_DWORD *)this + 51);
                            }
                            *((_DWORD *)this + 51) = v109 + 1;
                            v112 = operator new();
                            *(_QWORD *)(v112 + 8) = 0;
                            *(_QWORD *)(v112 + 16) = 0;
                            *(_QWORD *)v112 = &off_24D991B10;
                            *(_DWORD *)(v112 + 24) = 0;
                            *(_OWORD *)(v112 + 32) = xmmword_218A5D3E0;
                            v113 = *((_QWORD *)this + 24);
                            v114 = *((int *)this + 50);
                            *((_DWORD *)this + 50) = v114 + 1;
                            *(_QWORD *)(v113 + 8 * v114) = v112;
                          }
                          else
                          {
                            v111 = *((_QWORD *)this + 24);
                            *((_DWORD *)this + 50) = v110 + 1;
                            v112 = *(_QWORD *)(v111 + 8 * v110);
                          }
                          v138 = 0;
                          v115 = (char *)*((_QWORD *)a2 + 1);
                          if ((unint64_t)v115 >= *((_QWORD *)a2 + 2) || *v115 < 0)
                          {
                            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
                          }
                          else
                          {
                            v138 = *v115;
                            *((_QWORD *)a2 + 1) = v115 + 1;
                          }
                          v116 = *((_DWORD *)a2 + 14);
                          v117 = *((_DWORD *)a2 + 15);
                          *((_DWORD *)a2 + 14) = v116 + 1;
                          if (v116 >= v117)
                            return 0;
                          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                          if (!awd::metrics::LocationMicroLocationClusteringByModel::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationClusteringByModel *)v112, a2)|| !*((_BYTE *)a2 + 36))
                          {
                            return 0;
                          }
                          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                          v118 = *((_DWORD *)a2 + 14);
                          v22 = __OFSUB__(v118, 1);
                          v119 = v118 - 1;
                          if (v119 < 0 == v22)
                            *((_DWORD *)a2 + 14) = v119;
                          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
                          if ((unint64_t)v24 >= *((_QWORD *)a2 + 2))
                            goto LABEL_2;
                          v120 = *v24;
                        }
                        while (v120 == 82);
                        if (v120 == 90)
                        {
                          do
                          {
                            *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_198:
                            v121 = *((_DWORD *)this + 57);
                            v122 = *((int *)this + 56);
                            if ((int)v122 >= v121)
                            {
                              if (v121 == *((_DWORD *)this + 58))
                              {
                                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8);
                                v121 = *((_DWORD *)this + 57);
                              }
                              *((_DWORD *)this + 57) = v121 + 1;
                              v124 = operator new();
                              *(_QWORD *)v124 = &off_24D991CF0;
                              *(_QWORD *)(v124 + 16) = 0;
                              *(_QWORD *)(v124 + 24) = 0;
                              *(_DWORD *)(v124 + 32) = 0;
                              *(_QWORD *)(v124 + 8) = 0xFFFFFFFFLL;
                              *(_QWORD *)(v124 + 40) = 0;
                              v125 = *((_QWORD *)this + 27);
                              v126 = *((int *)this + 56);
                              *((_DWORD *)this + 56) = v126 + 1;
                              *(_QWORD *)(v125 + 8 * v126) = v124;
                            }
                            else
                            {
                              v123 = *((_QWORD *)this + 27);
                              *((_DWORD *)this + 56) = v122 + 1;
                              v124 = *(_QWORD *)(v123 + 8 * v122);
                            }
                            v138 = 0;
                            v127 = (char *)*((_QWORD *)a2 + 1);
                            if ((unint64_t)v127 >= *((_QWORD *)a2 + 2) || *v127 < 0)
                            {
                              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v138))return 0;
                            }
                            else
                            {
                              v138 = *v127;
                              *((_QWORD *)a2 + 1) = v127 + 1;
                            }
                            v128 = *((_DWORD *)a2 + 14);
                            v129 = *((_DWORD *)a2 + 15);
                            *((_DWORD *)a2 + 14) = v128 + 1;
                            if (v128 >= v129)
                              return 0;
                            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                            if (!awd::metrics::LocationMicroLocationEventClusteringStatistics::MergePartialFromCodedStream((awd::metrics::LocationMicroLocationEventClusteringStatistics *)v124, a2)|| !*((_BYTE *)a2 + 36))
                            {
                              return 0;
                            }
                            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                            v130 = *((_DWORD *)a2 + 14);
                            v22 = __OFSUB__(v130, 1);
                            v131 = v130 - 1;
                            if (v131 < 0 == v22)
                              *((_DWORD *)a2 + 14) = v131;
                            v24 = (_BYTE *)*((_QWORD *)a2 + 1);
                            v132 = (_BYTE *)*((_QWORD *)a2 + 2);
                          }
                          while (v24 < v132 && *v24 == 90);
                          if (v24 == v132 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                          {
                            *((_DWORD *)a2 + 8) = 0;
                            result = 1;
                            *((_BYTE *)a2 + 36) = 1;
                            return result;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        break;
      case 3u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_54;
        goto LABEL_32;
      case 4u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_72;
        goto LABEL_32;
      case 5u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_90;
        goto LABEL_32;
      case 6u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_108;
        goto LABEL_32;
      case 7u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_126;
        goto LABEL_32;
      case 8u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_144;
        goto LABEL_32;
      case 9u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_162;
        goto LABEL_32;
      case 0xAu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_180;
        goto LABEL_32;
      case 0xBu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_32;
        goto LABEL_198;
      default:
        v11 = TagFallback & 7;
LABEL_32:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationMicroLocationStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = this;
  v6 = *(_DWORD *)(this + 244);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 244);
  }
  if ((v6 & 2) != 0)
  {
    v7 = *(_QWORD *)(v5 + 16);
    if (!v7)
      v7 = *(_QWORD *)(awd::metrics::LocationMicroLocationStatistics::default_instance_ + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(*(_QWORD *)(v5 + 72) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(*(_QWORD *)(v5 + 96) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 104));
  }
  if (*(int *)(v5 + 128) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(*(_QWORD *)(v5 + 120) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 128));
  }
  if (*(int *)(v5 + 152) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(*(_QWORD *)(v5 + 144) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 152));
  }
  if (*(int *)(v5 + 176) >= 1)
  {
    v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_QWORD *)(*(_QWORD *)(v5 + 168) + 8 * v14++), a2, a4);
    while (v14 < *(int *)(v5 + 176));
  }
  if (*(int *)(v5 + 200) >= 1)
  {
    v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(*(_QWORD *)(v5 + 192) + 8 * v15++), a2, a4);
    while (v15 < *(int *)(v5 + 200));
  }
  if (*(int *)(v5 + 224) >= 1)
  {
    v16 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_QWORD *)(*(_QWORD *)(v5 + 216) + 8 * v16++), a2, a4);
    while (v16 < *(int *)(v5 + 224));
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationStatistics::ByteSize(awd::metrics::LocationMicroLocationStatistics *this)
{
  int v2;
  awd::metrics::LocationMicroLocationMetaData *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v58;
  int v59;
  int v60;

  if (!*((_BYTE *)this + 244))
  {
    v2 = 0;
    goto LABEL_13;
  }
  if ((*((_BYTE *)this + 244) & 1) != 0)
  {
    v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    if ((*((_DWORD *)this + 61) & 2) == 0)
      goto LABEL_13;
  }
  else
  {
    v2 = 0;
    if ((*((_BYTE *)this + 244) & 2) == 0)
      goto LABEL_13;
  }
  v3 = (awd::metrics::LocationMicroLocationMetaData *)*((_QWORD *)this + 2);
  if (!v3)
    v3 = *(awd::metrics::LocationMicroLocationMetaData **)(awd::metrics::LocationMicroLocationStatistics::default_instance_
                                                         + 16);
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationMetaData::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 += v5 + v6 + 1;
LABEL_13:
  v7 = *((_DWORD *)this + 8);
  v8 = v7 + v2;
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationMeasurementStatistics::ByteSize(*(awd::metrics::LocationMicroLocationMeasurementStatistics **)(*((_QWORD *)this + 3) + 8 * v9));
      v11 = (int)v10;
      if (v10 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v12 = 1;
      v8 += v11 + v12;
      ++v9;
    }
    while (v9 < *((int *)this + 8));
  }
  v13 = *((_DWORD *)this + 14);
  v14 = v13 + v8;
  if (v13 >= 1)
  {
    v15 = 0;
    do
    {
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationUserEventStatistics::ByteSize(*(awd::metrics::LocationMicroLocationUserEventStatistics **)(*((_QWORD *)this + 6) + 8 * v15));
      v17 = (int)v16;
      if (v16 >= 0x80)
        v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      else
        v18 = 1;
      v14 += v17 + v18;
      ++v15;
    }
    while (v15 < *((int *)this + 14));
  }
  v19 = *((_DWORD *)this + 20);
  v20 = v19 + v14;
  if (v19 >= 1)
  {
    v21 = 0;
    do
    {
      v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationLocalizationStatistics::ByteSize(*(awd::metrics::LocationMicroLocationLocalizationStatistics **)(*((_QWORD *)this + 9) + 8 * v21));
      v23 = (int)v22;
      if (v22 >= 0x80)
        v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      else
        v24 = 1;
      v20 += v23 + v24;
      ++v21;
    }
    while (v21 < *((int *)this + 20));
  }
  v25 = *((_DWORD *)this + 26);
  v26 = v25 + v20;
  if (v25 >= 1)
  {
    v27 = 0;
    do
    {
      v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationModelState::ByteSize(*(awd::metrics::LocationMicroLocationModelState **)(*((_QWORD *)this + 12) + 8 * v27));
      v29 = (int)v28;
      if (v28 >= 0x80)
        v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
      else
        v30 = 1;
      v26 += v29 + v30;
      ++v27;
    }
    while (v27 < *((int *)this + 26));
  }
  v31 = *((_DWORD *)this + 32);
  v32 = v31 + v26;
  if (v31 >= 1)
  {
    v33 = 0;
    do
    {
      v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationLearningState::ByteSize(*(awd::metrics::LocationMicroLocationLearningState **)(*((_QWORD *)this + 15) + 8 * v33));
      v35 = (int)v34;
      if (v34 >= 0x80)
        v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34);
      else
        v36 = 1;
      v32 += v35 + v36;
      ++v33;
    }
    while (v33 < *((int *)this + 32));
  }
  v37 = *((_DWORD *)this + 38);
  v38 = v37 + v32;
  if (v37 >= 1)
  {
    v39 = 0;
    do
    {
      v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationAnalyticsState::ByteSize(*(awd::metrics::LocationMicroLocationAnalyticsState **)(*((_QWORD *)this + 18) + 8 * v39));
      v41 = (int)v40;
      if (v40 >= 0x80)
        v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40);
      else
        v42 = 1;
      v38 += v41 + v42;
      ++v39;
    }
    while (v39 < *((int *)this + 38));
  }
  v43 = *((_DWORD *)this + 44);
  v44 = v43 + v38;
  if (v43 >= 1)
  {
    v45 = 0;
    do
    {
      v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationClusteringStatistics::ByteSize(*(awd::metrics::LocationMicroLocationClusteringStatistics **)(*((_QWORD *)this + 21) + 8 * v45));
      v47 = (int)v46;
      if (v46 >= 0x80)
        v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46);
      else
        v48 = 1;
      v44 += v47 + v48;
      ++v45;
    }
    while (v45 < *((int *)this + 44));
  }
  v49 = *((_DWORD *)this + 50);
  v50 = v49 + v44;
  if (v49 >= 1)
  {
    v51 = 0;
    do
    {
      v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationClusteringByModel::ByteSize(*(awd::metrics::LocationMicroLocationClusteringByModel **)(*((_QWORD *)this + 24) + 8 * v51));
      v53 = (int)v52;
      if (v52 >= 0x80)
        v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
      else
        v54 = 1;
      v50 += v53 + v54;
      ++v51;
    }
    while (v51 < *((int *)this + 50));
  }
  v55 = *((_DWORD *)this + 56);
  v56 = (v55 + v50);
  if (v55 >= 1)
  {
    v57 = 0;
    do
    {
      v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationEventClusteringStatistics::ByteSize(*(awd::metrics::LocationMicroLocationEventClusteringStatistics **)(*((_QWORD *)this + 27) + 8 * v57));
      v59 = (int)v58;
      if (v58 >= 0x80)
        v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58);
      else
        v60 = 1;
      v56 = (v59 + v56 + v60);
      ++v57;
    }
    while (v57 < *((int *)this + 56));
  }
  *((_DWORD *)this + 60) = v56;
  return v56;
}

void awd::metrics::LocationMicroLocationStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationMicroLocationStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationStatistics::CopyFrom(awd::metrics::LocationMicroLocationStatistics *this, const awd::metrics::LocationMicroLocationStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationStatistics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationMicroLocationStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationStatistics::IsInitialized(awd::metrics::LocationMicroLocationStatistics *this)
{
  return 1;
}

awd::metrics::LocationMicroLocationStatistics *awd::metrics::LocationMicroLocationStatistics::Swap(awd::metrics::LocationMicroLocationStatistics *this, awd::metrics::LocationMicroLocationStatistics *a2)
{
  awd::metrics::LocationMicroLocationStatistics *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    v5 = *((_QWORD *)this + 2);
    v6 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v6;
    *((_QWORD *)a2 + 1) = v4;
    *((_QWORD *)a2 + 2) = v5;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationMicroLocationStatistics *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v7 = *((_DWORD *)v3 + 61);
    *((_DWORD *)v3 + 61) = *((_DWORD *)a2 + 61);
    *((_DWORD *)a2 + 61) = v7;
    v8 = *((_DWORD *)v3 + 60);
    *((_DWORD *)v3 + 60) = *((_DWORD *)a2 + 60);
    *((_DWORD *)a2 + 60) = v8;
  }
  return this;
}

_QWORD *awd::metrics::LocationMicroLocationStatistics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationStatistics");
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::GetCachedSize(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::GetCachedSize(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::GetCachedSize(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::GetCachedSize(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::GetCachedSize(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationMicroLocationMetaData::GetCachedSize(awd::metrics::LocationMicroLocationMetaData *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::GetCachedSize(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::GetCachedSize(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  return *((unsigned int *)this + 22);
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::GetCachedSize(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::GetCachedSize(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationMicroLocationModelState::GetCachedSize(awd::metrics::LocationMicroLocationModelState *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::GetCachedSize(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t awd::metrics::LocationMicroLocationLearningState::GetCachedSize(awd::metrics::LocationMicroLocationLearningState *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::GetCachedSize(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationMicroLocationStatistics::GetCachedSize(awd::metrics::LocationMicroLocationStatistics *this)
{
  return *((unsigned int *)this + 60);
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventTypeAndCount>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventSignificanceMetric>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationMeasurementStatistics>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationUserEventStatistics>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLocalizationStatistics>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationModelState>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLearningState>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationAnalyticsState>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringStatistics>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringByModel>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventClusteringStatistics>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

void OUTLINED_FUNCTION_0_1(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
  __assert_rtn(a1, a2, 348, a4);
}

uint64_t awd::metrics::protobuf_ShutdownFile_LocationPeerRanging_2eproto(awd::metrics *this)
{
  uint64_t result;

  if (awd::metrics::LocationPeerRangingMetaData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationPeerRangingMetaData::default_instance_ + 8))(awd::metrics::LocationPeerRangingMetaData::default_instance_);
  if (awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_
                                    + 8))(awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_);
  if (awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_
                                    + 8))(awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_);
  if (awd::metrics::LocationPeerRangingBurstMetrics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationPeerRangingBurstMetrics::default_instance_ + 8))(awd::metrics::LocationPeerRangingBurstMetrics::default_instance_);
  if (awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_
                                    + 8))(awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_);
  if (awd::metrics::LocationPeerRangingDecision::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationPeerRangingDecision::default_instance_ + 8))(awd::metrics::LocationPeerRangingDecision::default_instance_);
  if (awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_
                                    + 8))(awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_);
  result = awd::metrics::LocationPeerRangingMetrics::default_instance_;
  if (awd::metrics::LocationPeerRangingMetrics::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)awd::metrics::LocationPeerRangingMetrics::default_instance_
                                              + 8))(awd::metrics::LocationPeerRangingMetrics::default_instance_);
  return result;
}

void awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(awd::metrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);

  if ((awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(void)::already_here & 1) == 0)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(void)::already_here = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"codegen/cpp/LocationPeerRanging.pb.cc", a4);
    v4 = (_QWORD *)operator new();
    v4[1] = 0;
    v4[2] = 0;
    *v4 = &off_24D9921A0;
    awd::metrics::LocationPeerRangingMetaData::default_instance_ = (uint64_t)v4;
    v5 = operator new();
    *(_QWORD *)v5 = &off_24D992218;
    *(_DWORD *)(v5 + 8) = 0;
    *(_WORD *)(v5 + 12) = 0;
    *(_QWORD *)(v5 + 24) = 0;
    *(_QWORD *)(v5 + 32) = 0;
    *(_QWORD *)(v5 + 16) = 0;
    awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_ = v5;
    v6 = operator new();
    *(_QWORD *)v6 = &off_24D992290;
    *(_QWORD *)(v6 + 60) = 0;
    *(_OWORD *)(v6 + 8) = 0u;
    *(_OWORD *)(v6 + 24) = 0u;
    *(_OWORD *)(v6 + 40) = 0u;
    *(_BYTE *)(v6 + 56) = 0;
    awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_ = v6;
    v7 = operator new();
    *(_QWORD *)v7 = &off_24D992308;
    *(_OWORD *)(v7 + 8) = 0u;
    *(_OWORD *)(v7 + 24) = 0u;
    *(_QWORD *)(v7 + 40) = 0;
    awd::metrics::LocationPeerRangingBurstMetrics::default_instance_ = v7;
    v8 = operator new();
    *(_QWORD *)(v8 + 28) = 0;
    *(_QWORD *)(v8 + 8) = 0;
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)v8 = &off_24D992380;
    *(_BYTE *)(v8 + 24) = 0;
    awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_ = v8;
    v9 = operator new();
    *(_QWORD *)(v9 + 8) = 0;
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)v9 = &off_24D9923F8;
    *(_DWORD *)(v9 + 24) = 0;
    awd::metrics::LocationPeerRangingDecision::default_instance_ = v9;
    v10 = operator new();
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)v10 = &off_24D992470;
    *(_DWORD *)(v10 + 24) = 0;
    *(_QWORD *)(v10 + 40) = 0;
    *(_QWORD *)(v10 + 48) = 0;
    *(_QWORD *)(v10 + 32) = 0;
    awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_ = v10;
    v11 = operator new();
    *(_QWORD *)(v11 + 40) = 0;
    *(_QWORD *)(v11 + 48) = 0;
    *(_DWORD *)(v11 + 56) = 0;
    *(_QWORD *)(v11 + 64) = 0;
    *(_QWORD *)(v11 + 72) = 0;
    *(_DWORD *)(v11 + 80) = 0;
    *(_QWORD *)(v11 + 88) = 0;
    *(_QWORD *)(v11 + 96) = 0;
    *(_DWORD *)(v11 + 104) = 0;
    *(_QWORD *)(v11 + 112) = 0;
    *(_QWORD *)(v11 + 120) = 0;
    *(_DWORD *)(v11 + 128) = 0;
    *(_QWORD *)(v11 + 136) = 0;
    *(_QWORD *)(v11 + 144) = 0;
    *(_DWORD *)(v11 + 152) = 0;
    *(_QWORD *)(v11 + 160) = 0;
    *(_DWORD *)(v11 + 32) = 0;
    *(_QWORD *)v11 = &off_24D9924E8;
    *(_QWORD *)(v11 + 8) = 0;
    awd::metrics::LocationPeerRangingMetrics::default_instance_ = v11;
    *(_QWORD *)(v11 + 16) = 0;
    *(_QWORD *)(v11 + 24) = 0;
    wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)awd::metrics::protobuf_ShutdownFile_LocationPeerRanging_2eproto, v12);
  }
}

_QWORD *awd::metrics::LocationPeerRangingMetaData::LocationPeerRangingMetaData(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D9921A0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_24D9921A0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::LocationPeerRangingEstimatorConfiguration(uint64_t this)
{
  *(_QWORD *)this = &off_24D992218;
  *(_DWORD *)(this + 8) = 0;
  *(_WORD *)(this + 12) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24D992218;
  *(_DWORD *)(this + 8) = 0;
  *(_WORD *)(this + 12) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

double awd::metrics::LocationPeerRangingMeasurementMetrics::LocationPeerRangingMeasurementMetrics(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  double result;

  *(_QWORD *)this = &off_24D992290;
  *((_DWORD *)this + 15) = 0;
  *((_DWORD *)this + 16) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_BYTE *)this + 56) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D992290;
  *((_DWORD *)this + 15) = 0;
  *((_DWORD *)this + 16) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_BYTE *)this + 56) = 0;
  return result;
}

double awd::metrics::LocationPeerRangingBurstMetrics::LocationPeerRangingBurstMetrics(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  double result;

  *(_QWORD *)this = &off_24D992308;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_24D992308;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::LocationPeerRangingEarlyTerminateMetrics(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D992380;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D992380;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingDecision::LocationPeerRangingDecision(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D9923F8;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D9923F8;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::LocationPeerRangingUnlockDecisionMetrics(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D992470;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_24D992470;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetrics::LocationPeerRangingMetrics(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(_QWORD *)(this + 88) = 0;
  *(_QWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 104) = 0;
  *(_QWORD *)(this + 112) = 0;
  *(_QWORD *)(this + 120) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(_QWORD *)(this + 136) = 0;
  *(_QWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 152) = 0;
  *(_QWORD *)(this + 160) = 0;
  *(_QWORD *)this = &off_24D9924E8;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(_QWORD *)(this + 88) = 0;
  *(_QWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 104) = 0;
  *(_QWORD *)(this + 112) = 0;
  *(_QWORD *)(this + 120) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(_QWORD *)(this + 136) = 0;
  *(_QWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 152) = 0;
  *(_QWORD *)(this + 160) = 0;
  *(_QWORD *)this = &off_24D9924E8;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

BOOL awd::metrics::LocationPeerRangingUnlockDecisionAlgorithm_IsValid(awd::metrics *this)
{
  return this < 6;
}

BOOL awd::metrics::LocationPeerRangingDecisionReason_IsValid(awd::metrics *this)
{
  return this < 7;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationPeerRangingMetaData *awd::metrics::LocationPeerRangingMetaData::LocationPeerRangingMetaData(awd::metrics::LocationPeerRangingMetaData *this, const awd::metrics::LocationPeerRangingMetaData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D9921A0;
  awd::metrics::LocationPeerRangingMetaData::MergeFrom(this, a2);
  return this;
}

void sub_218A50D24(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMetaData::MergeFrom(awd::metrics::LocationPeerRangingMetaData *this, const awd::metrics::LocationPeerRangingMetaData *a2)
{
  uint64_t v4;
  _BYTE v5[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*((_BYTE *)a2 + 20) & 1) != 0)
  {
    v4 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 5) |= 1u;
    *((_QWORD *)this + 1) = v4;
  }
}

void sub_218A50DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMetaData::~LocationPeerRangingMetaData(awd::metrics::LocationPeerRangingMetaData *this)
{
  *(_QWORD *)this = &off_24D9921A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9921A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9921A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationPeerRangingMetaData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::default_instance(awd::metrics::LocationPeerRangingMetaData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationPeerRangingMetaData::default_instance_;
  if (!awd::metrics::LocationPeerRangingMetaData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingMetaData::default_instance_;
  }
  return result;
}

_QWORD *awd::metrics::LocationPeerRangingMetaData::New(awd::metrics::LocationPeerRangingMetaData *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_24D9921A0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingMetaData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  unint64_t v7;
  char *v8;
  unsigned __int8 *v9;
  uint64_t result;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v8 = (char *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (!(_DWORD)result)
          return result;
        v9 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v4 = *v8;
        v9 = (unsigned __int8 *)(v8 + 1);
        *((_QWORD *)a2 + 1) = v9;
      }
      *((_DWORD *)this + 5) |= 1u;
      if (v9 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(this + 20) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  uint64_t result;

  if ((*((_BYTE *)this + 20) & 1) != 0)
    result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
  else
    result = 0;
  *((_DWORD *)this + 4) = result;
  return result;
}

void awd::metrics::LocationPeerRangingMetaData::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingMetaData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationPeerRangingMetaData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingMetaData::CopyFrom(awd::metrics::LocationPeerRangingMetaData *this, const awd::metrics::LocationPeerRangingMetaData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingMetaData *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationPeerRangingMetaData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingMetaData::IsInitialized(awd::metrics::LocationPeerRangingMetaData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::Swap(uint64_t this, awd::metrics::LocationPeerRangingMetaData *a2)
{
  uint64_t v2;

  if (a2 != (awd::metrics::LocationPeerRangingMetaData *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

_QWORD *awd::metrics::LocationPeerRangingMetaData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingMetaData");
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 8) = 0;
  *(_WORD *)(this + 12) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationPeerRangingEstimatorConfiguration *awd::metrics::LocationPeerRangingEstimatorConfiguration::LocationPeerRangingEstimatorConfiguration(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, const awd::metrics::LocationPeerRangingEstimatorConfiguration *a2)
{
  *(_QWORD *)this = &off_24D992218;
  *((_DWORD *)this + 2) = 0;
  *((_WORD *)this + 6) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 2) = 0;
  awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom(this, a2);
  return this;
}

void sub_218A5116C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, const awd::metrics::LocationPeerRangingEstimatorConfiguration *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if (!(_BYTE)v4)
    return;
  if ((*((_BYTE *)a2 + 36) & 1) != 0)
  {
    v5 = *((_DWORD *)a2 + 2);
    if (v5 >= 6)
      awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom();
    *((_DWORD *)this + 9) |= 1u;
    *((_DWORD *)this + 2) = v5;
    v4 = *((_DWORD *)a2 + 9);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0)
      goto LABEL_9;
LABEL_14:
    v8 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 9) |= 4u;
    *((_QWORD *)this + 2) = v8;
    v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0)
        return;
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  v7 = *((_BYTE *)a2 + 12);
  *((_DWORD *)this + 9) |= 2u;
  *((_BYTE *)this + 12) = v7;
  v4 = *((_DWORD *)a2 + 9);
  if ((v4 & 4) != 0)
    goto LABEL_14;
LABEL_9:
  if ((v4 & 8) == 0)
    goto LABEL_10;
LABEL_15:
  v9 = *((_BYTE *)a2 + 13);
  *((_DWORD *)this + 9) |= 8u;
  *((_BYTE *)this + 13) = v9;
  if ((*((_DWORD *)a2 + 9) & 0x10) != 0)
  {
LABEL_11:
    v6 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 9) |= 0x10u;
    *((_QWORD *)this + 3) = v6;
  }
}

void sub_218A51298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::~LocationPeerRangingEstimatorConfiguration(awd::metrics::LocationPeerRangingEstimatorConfiguration *this)
{
  *(_QWORD *)this = &off_24D992218;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D992218;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D992218;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_;
  if (!awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::New(awd::metrics::LocationPeerRangingEstimatorConfiguration *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_24D992218;
  *(_DWORD *)(result + 8) = 0;
  *(_WORD *)(result + 12) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_DWORD *)(this + 8) = 0;
    *(_WORD *)(this + 12) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  uint64_t result;
  _BYTE *v14;
  unsigned int v15;
  _BYTE *v16;
  _BYTE *v17;
  unsigned int v18;
  _BYTE *v19;
  unsigned int v20[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v20[0] = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
          if (!(_DWORD)result)
            return result;
          v8 = v20[0];
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 5)
        {
          *((_DWORD *)this + 9) |= 1u;
          *((_DWORD *)this + 2) = v8;
        }
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v14 < v9 && *v14 == 16)
        {
          v10 = v14 + 1;
          *((_QWORD *)a2 + 1) = v10;
          goto LABEL_29;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_29:
        v20[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
          if (!(_DWORD)result)
            return result;
          v15 = v20[0];
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v15 = *v10;
          v16 = v10 + 1;
          *((_QWORD *)a2 + 1) = v16;
        }
        *((_BYTE *)this + 12) = v15 != 0;
        *((_DWORD *)this + 9) |= 2u;
        if ((unint64_t)v16 >= v9 || *v16 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_37:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v20;
        *((_DWORD *)this + 9) |= 4u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v17 >= v11 || *v17 != 32)
          continue;
        v12 = v17 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_41:
        v20[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
          if (!(_DWORD)result)
            return result;
          v18 = v20[0];
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v12;
          v19 = v12 + 1;
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 13) = v18 != 0;
        *((_DWORD *)this + 9) |= 8u;
        if ((unint64_t)v19 >= v11 || *v19 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_49:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) != 0)
        {
          *((_QWORD *)this + 3) = *(_QWORD *)v20;
          *((_DWORD *)this + 9) |= 0x10u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_37;
        goto LABEL_19;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_41;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_19;
        goto LABEL_49;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 24), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 13), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 24), a3);
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::ByteSize(awd::metrics::LocationPeerRangingEstimatorConfiguration *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 36) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v5 & 0x80000000) != 0)
      {
        v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *((_DWORD *)this + 9);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 2;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 2;
    if ((v2 & 0x10) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 8) = result;
  return result;
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::CopyFrom(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, const awd::metrics::LocationPeerRangingEstimatorConfiguration *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingEstimatorConfiguration *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::IsInitialized(awd::metrics::LocationPeerRangingEstimatorConfiguration *this)
{
  return 1;
}

double awd::metrics::LocationPeerRangingEstimatorConfiguration::Swap(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, awd::metrics::LocationPeerRangingEstimatorConfiguration *a2)
{
  int v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 12);
    *((_BYTE *)this + 12) = *((_BYTE *)a2 + 12);
    *((_BYTE *)a2 + 12) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LOBYTE(v2) = *((_BYTE *)this + 13);
    *((_BYTE *)this + 13) = *((_BYTE *)a2 + 13);
    *((_BYTE *)a2 + 13) = v2;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *awd::metrics::LocationPeerRangingEstimatorConfiguration::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingEstimatorConfiguration");
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::SharedCtor(uint64_t this)
{
  *(_BYTE *)(this + 56) = 0;
  *(_DWORD *)(this + 60) = 0;
  *(_DWORD *)(this + 64) = 0;
  return this;
}

awd::metrics::LocationPeerRangingMeasurementMetrics *awd::metrics::LocationPeerRangingMeasurementMetrics::LocationPeerRangingMeasurementMetrics(awd::metrics::LocationPeerRangingMeasurementMetrics *this, const awd::metrics::LocationPeerRangingMeasurementMetrics *a2)
{
  *(_QWORD *)this = &off_24D992290;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 15) = 0;
  *((_DWORD *)this + 16) = 0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_BYTE *)this + 56) = 0;
  awd::metrics::LocationPeerRangingMeasurementMetrics::MergeFrom(this, a2);
  return this;
}

void sub_218A51990(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v5;

  v5 = *((_QWORD *)v1 + 5);
  if (v5)
    MEMORY[0x219A1DC64](v5, 0x1000C8000313F17);
  awd::metrics::LocationPeerRangingMeasurementMetrics::LocationPeerRangingMeasurementMetrics(v3, v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::MergeFrom(awd::metrics::LocationPeerRangingMeasurementMetrics *this, const awd::metrics::LocationPeerRangingMeasurementMetrics *a2)
{
  int v4;
  int v5;
  int v6;
  char v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v4 = *((_DWORD *)a2 + 4);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((_DWORD *)this + 2, *((_DWORD *)this + 4) + v4);
    memcpy((void *)(*((_QWORD *)this + 1) + 8 * *((int *)this + 4)), *((const void **)a2 + 1), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
  v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((_DWORD *)this + 6, *((_DWORD *)this + 8) + v5);
    memcpy((void *)(*((_QWORD *)this + 3) + 8 * *((int *)this + 8)), *((const void **)a2 + 3), 8 * *((int *)a2 + 8));
    *((_DWORD *)this + 8) += *((_DWORD *)a2 + 8);
  }
  v6 = *((_DWORD *)a2 + 12);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((_DWORD *)this + 10, *((_DWORD *)this + 12) + v6);
    memcpy((void *)(*((_QWORD *)this + 5) + 8 * *((int *)this + 12)), *((const void **)a2 + 5), 8 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  if ((*((_BYTE *)a2 + 64) & 2) != 0)
  {
    v7 = *((_BYTE *)a2 + 56);
    *((_DWORD *)this + 16) |= 2u;
    *((_BYTE *)this + 56) = v7;
  }
}

void sub_218A51B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::~LocationPeerRangingMeasurementMetrics(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24D992290;
  v2 = *((_QWORD *)this + 5);
  if (v2)
    MEMORY[0x219A1DC64](v2, 0x1000C8000313F17);
  v3 = *((_QWORD *)this + 3);
  if (v3)
    MEMORY[0x219A1DC64](v3, 0x1000C8000313F17);
  v4 = *((_QWORD *)this + 1);
  if (v4)
    MEMORY[0x219A1DC64](v4, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationPeerRangingMeasurementMetrics::~LocationPeerRangingMeasurementMetrics(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 60) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance(awd::metrics::LocationPeerRangingMeasurementMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_;
  if (!awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationPeerRangingMeasurementMetrics::New(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D992290;
  *(_DWORD *)(v1 + 60) = 0;
  *(_DWORD *)(v1 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_BYTE *)(v1 + 56) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::Clear(uint64_t this)
{
  if ((*(_WORD *)(this + 64) & 0x1FE) != 0)
    *(_BYTE *)(this + 56) = 0;
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 64) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingMeasurementMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  _DWORD *v5;
  _DWORD *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t result;
  int v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  _BYTE *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  int v27;
  unsigned int v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  _BYTE *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  _BYTE *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unsigned int v52[12];

  v4 = (_DWORD *)((char *)this + 40);
  v5 = (_DWORD *)((char *)this + 24);
  v6 = (_DWORD *)((char *)this + 8);
LABEL_2:
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
        {
          if ((TagFallback & 7) != 0)
            goto LABEL_20;
          v11 = (char *)*((_QWORD *)a2 + 1);
          v10 = (char *)*((_QWORD *)a2 + 2);
          while (1)
          {
            v51 = 0;
            if (v11 >= v10 || *v11 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0;
            }
            else
            {
              v51 = *v11;
              *((_QWORD *)a2 + 1) = v11 + 1;
            }
            v16 = *((_DWORD *)this + 4);
            v17 = *((_DWORD *)this + 5);
            if (v16 == v17)
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve(v6, v16 + 1);
              v16 = *((_DWORD *)this + 4);
              v17 = *((_DWORD *)this + 5);
            }
            v18 = v51;
            v19 = *((_QWORD *)this + 1);
            v20 = v16 + 1;
            *((_DWORD *)this + 4) = v16 + 1;
            *(_QWORD *)(v19 + 8 * v16) = v18;
            if (v17 - (v16 + 1) >= 1)
            {
              v21 = v17 - v16;
              do
              {
                v22 = (_BYTE *)*((_QWORD *)a2 + 1);
                v23 = *((_QWORD *)a2 + 2);
                if ((unint64_t)v22 >= v23 || *v22 != 8)
                  break;
                *((_QWORD *)a2 + 1) = v22 + 1;
                if ((unint64_t)(v22 + 1) >= v23 || (char)v22[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0;
                  v20 = *((_DWORD *)this + 4);
                }
                else
                {
                  v51 = v22[1];
                  *((_QWORD *)a2 + 1) = v22 + 2;
                }
                if (v20 >= *((_DWORD *)this + 5))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                  v20 = *((_DWORD *)this + 4);
                }
                v24 = v51;
                v25 = *((_QWORD *)this + 1);
                *((_DWORD *)this + 4) = v20 + 1;
                *(_QWORD *)(v25 + 8 * v20) = v24;
                --v21;
                ++v20;
              }
              while (v21 > 1);
            }
LABEL_47:
            v26 = (char *)*((_QWORD *)a2 + 1);
            v10 = (char *)*((_QWORD *)a2 + 2);
            if (v26 >= v10)
              goto LABEL_2;
            v27 = *v26;
            if (v27 == 16)
            {
              v12 = v26 + 1;
              *((_QWORD *)a2 + 1) = v12;
              goto LABEL_52;
            }
            if (v27 != 8)
              goto LABEL_2;
            v11 = v26 + 1;
            *((_QWORD *)a2 + 1) = v11;
          }
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, v6);
        if ((_DWORD)result)
          goto LABEL_47;
        return result;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v10 = (char *)*((_QWORD *)a2 + 2);
LABEL_52:
        v52[0] = 0;
        if (v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52);
          if (!(_DWORD)result)
            return result;
          v28 = v52[0];
          v29 = (char *)*((_QWORD *)a2 + 1);
          v10 = (char *)*((_QWORD *)a2 + 2);
        }
        else
        {
          v28 = *v12;
          v29 = v12 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_BYTE *)this + 56) = v28 != 0;
        *((_DWORD *)this + 16) |= 2u;
        if (v29 >= v10)
          continue;
        v30 = *v29;
        goto LABEL_79;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v13 = (char *)*((_QWORD *)a2 + 1);
            v10 = (char *)*((_QWORD *)a2 + 2);
            goto LABEL_59;
          }
          goto LABEL_20;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, v5);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v29 = (char *)*((_QWORD *)a2 + 1);
          v10 = (char *)*((_QWORD *)a2 + 2);
          if (v29 >= v10)
            goto LABEL_2;
          v30 = *v29;
          if (v30 == 32)
            goto LABEL_101;
LABEL_79:
          if (v30 != 24)
            goto LABEL_2;
          v13 = v29 + 1;
          *((_QWORD *)a2 + 1) = v13;
LABEL_59:
          v51 = 0;
          if (v13 >= v10 || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0;
          }
          else
          {
            v51 = *v13;
            *((_QWORD *)a2 + 1) = v13 + 1;
          }
          v31 = *((_DWORD *)this + 8);
          v32 = *((_DWORD *)this + 9);
          if (v31 == v32)
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve(v5, v31 + 1);
            v31 = *((_DWORD *)this + 8);
            v32 = *((_DWORD *)this + 9);
          }
          v33 = v51;
          v34 = *((_QWORD *)this + 3);
          v35 = v31 + 1;
          *((_DWORD *)this + 8) = v31 + 1;
          *(_QWORD *)(v34 + 8 * v31) = v33;
          if (v32 - (v31 + 1) >= 1)
          {
            v36 = v32 - v31;
            do
            {
              v37 = (_BYTE *)*((_QWORD *)a2 + 1);
              v38 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v37 >= v38 || *v37 != 24)
                break;
              *((_QWORD *)a2 + 1) = v37 + 1;
              if ((unint64_t)(v37 + 1) >= v38 || (char)v37[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0;
                v35 = *((_DWORD *)this + 8);
              }
              else
              {
                v51 = v37[1];
                *((_QWORD *)a2 + 1) = v37 + 2;
              }
              if (v35 >= *((_DWORD *)this + 9))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                v35 = *((_DWORD *)this + 8);
              }
              v39 = v51;
              v40 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 8) = v35 + 1;
              *(_QWORD *)(v40 + 8 * v35) = v39;
              --v36;
              ++v35;
            }
            while (v36 > 1);
          }
        }
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, v4);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v29 = (char *)*((_QWORD *)a2 + 1);
            v10 = (char *)*((_QWORD *)a2 + 2);
            if (v29 >= v10 || *v29 != 32)
              break;
LABEL_101:
            v14 = v29 + 1;
            *((_QWORD *)a2 + 1) = v14;
LABEL_81:
            v51 = 0;
            if (v14 >= v10 || *v14 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0;
            }
            else
            {
              v51 = *v14;
              *((_QWORD *)a2 + 1) = v14 + 1;
            }
            v41 = *((_DWORD *)this + 12);
            v42 = *((_DWORD *)this + 13);
            if (v41 == v42)
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve(v4, v41 + 1);
              v41 = *((_DWORD *)this + 12);
              v42 = *((_DWORD *)this + 13);
            }
            v43 = v51;
            v44 = *((_QWORD *)this + 5);
            v45 = v41 + 1;
            *((_DWORD *)this + 12) = v41 + 1;
            *(_QWORD *)(v44 + 8 * v41) = v43;
            if (v42 - (v41 + 1) >= 1)
            {
              v46 = v42 - v41;
              do
              {
                v47 = (_BYTE *)*((_QWORD *)a2 + 1);
                v48 = *((_QWORD *)a2 + 2);
                if ((unint64_t)v47 >= v48 || *v47 != 32)
                  break;
                *((_QWORD *)a2 + 1) = v47 + 1;
                if ((unint64_t)(v47 + 1) >= v48 || (char)v47[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0;
                  v45 = *((_DWORD *)this + 12);
                }
                else
                {
                  v51 = v47[1];
                  *((_QWORD *)a2 + 1) = v47 + 2;
                }
                if (v45 >= *((_DWORD *)this + 13))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                  v45 = *((_DWORD *)this + 12);
                }
                v49 = v51;
                v50 = *((_QWORD *)this + 5);
                *((_DWORD *)this + 12) = v45 + 1;
                *(_QWORD *)(v50 + 8 * v45) = v49;
                --v46;
                ++v45;
              }
              while (v46 > 1);
            }
          }
          if (v29 == v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v14 = (char *)*((_QWORD *)a2 + 1);
          v10 = (char *)*((_QWORD *)a2 + 2);
          goto LABEL_81;
        }
LABEL_20:
        if (v9 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      default:
        v9 = TagFallback & 7;
        goto LABEL_20;
    }
  }
}

void sub_218A522D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), (uint64_t)a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(_BYTE *)(v5 + 64) & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 56), (uint64_t)a2, a4);
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 40) + 8 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::ByteSize(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t result;

  v2 = *((_DWORD *)this + 16);
  LODWORD(v3) = *((_DWORD *)this + 4);
  if ((int)v3 < 1)
  {
    v5 = 0;
  }
  else
  {
    v4 = 0;
    v5 = 0;
    do
    {
      v5 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)this + 1) + 8 * v4++));
      v3 = *((int *)this + 4);
    }
    while (v4 < v3);
  }
  LODWORD(v6) = *((_DWORD *)this + 8);
  if ((int)v6 < 1)
  {
    v8 = 0;
  }
  else
  {
    v7 = 0;
    v8 = 0;
    do
    {
      v8 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)this + 3) + 8 * v7++));
      v6 = *((int *)this + 8);
    }
    while (v7 < v6);
  }
  LODWORD(v9) = *((_DWORD *)this + 12);
  if ((int)v9 < 1)
  {
    v11 = 0;
  }
  else
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v11 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)this + 5) + 8 * v10++));
      v9 = *((int *)this + 12);
    }
    while (v10 < v9);
  }
  v12 = v2 & 2;
  if ((v2 & 0x1FE) == 0)
    v12 = 0;
  result = (v5 + v3 + v8 + v12 + v9 + v6 + v11);
  *((_DWORD *)this + 15) = result;
  return result;
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingMeasurementMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationPeerRangingMeasurementMetrics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::CopyFrom(awd::metrics::LocationPeerRangingMeasurementMetrics *this, const awd::metrics::LocationPeerRangingMeasurementMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingMeasurementMetrics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationPeerRangingMeasurementMetrics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::IsInitialized(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  return 1;
}

double awd::metrics::LocationPeerRangingMeasurementMetrics::Swap(awd::metrics::LocationPeerRangingMeasurementMetrics *this, awd::metrics::LocationPeerRangingMeasurementMetrics *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    v3 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = v2;
    v4 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = v3;
    *((_QWORD *)a2 + 2) = v4;
    LOBYTE(v2) = *((_BYTE *)this + 56);
    *((_BYTE *)this + 56) = *((_BYTE *)a2 + 56);
    *((_BYTE *)a2 + 56) = v2;
    v5 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    v6 = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 3) = v5;
    v7 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = v6;
    *((_QWORD *)a2 + 4) = v7;
    v8 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    result = *((double *)a2 + 6);
    *((_QWORD *)a2 + 5) = v8;
    v10 = *((_QWORD *)this + 6);
    *((double *)this + 6) = result;
    *((_QWORD *)a2 + 6) = v10;
    LODWORD(v8) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v8;
    LODWORD(v8) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v8;
  }
  return result;
}

_QWORD *awd::metrics::LocationPeerRangingMeasurementMetrics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingMeasurementMetrics");
}

double awd::metrics::LocationPeerRangingBurstMetrics::SharedCtor(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationPeerRangingBurstMetrics *awd::metrics::LocationPeerRangingBurstMetrics::LocationPeerRangingBurstMetrics(awd::metrics::LocationPeerRangingBurstMetrics *this, const awd::metrics::LocationPeerRangingBurstMetrics *a2)
{
  *(_QWORD *)this = &off_24D992308;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  awd::metrics::LocationPeerRangingBurstMetrics::MergeFrom(this, a2);
  return this;
}

void sub_218A526A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double awd::metrics::LocationPeerRangingBurstMetrics::MergeFrom(awd::metrics::LocationPeerRangingBurstMetrics *this, const awd::metrics::LocationPeerRangingBurstMetrics *a2)
{
  double result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      v7 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((_QWORD *)this + 1) = v7;
      v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((_QWORD *)this + 2) = v8;
    v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_8;
    }
LABEL_12:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0)
      return result;
LABEL_8:
    v6 = *((_QWORD *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((_QWORD *)this + 4) = v6;
  }
  return result;
}

void sub_218A527A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingBurstMetrics::~LocationPeerRangingBurstMetrics(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  *(_QWORD *)this = &off_24D992308;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D992308;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D992308;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::default_instance(awd::metrics::LocationPeerRangingBurstMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationPeerRangingBurstMetrics::default_instance_;
  if (!awd::metrics::LocationPeerRangingBurstMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingBurstMetrics::default_instance_;
  }
  return result;
}

double awd::metrics::LocationPeerRangingBurstMetrics::New(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_24D992308;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingBurstMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  unint64_t v14;
  char *v15;
  uint64_t result;
  _BYTE *v17;
  _BYTE *v18;
  unsigned __int8 *v19;
  unint64_t v20;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  v6 = (unint64_t *)((char *)this + 32);
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 11) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_27;
        }
        continue;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_27:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v13;
          v17 = v13 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 11) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_35:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v20) & 1) != 0)
        {
          *((_QWORD *)this + 3) = v20;
          *((_DWORD *)this + 11) |= 4u;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v18 < v14 && *v18 == 32)
          {
            v15 = v18 + 1;
            *((_QWORD *)a2 + 1) = v15;
LABEL_39:
            if ((unint64_t)v15 >= v14 || *v15 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
              if (!(_DWORD)result)
                return result;
              v19 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v14 = *((_QWORD *)a2 + 2);
            }
            else
            {
              *v6 = *v15;
              v19 = (unsigned __int8 *)(v15 + 1);
              *((_QWORD *)a2 + 1) = v19;
            }
            *((_DWORD *)this + 11) |= 8u;
            if (v19 == (unsigned __int8 *)v14 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_35;
        goto LABEL_18;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_39;
      default:
        v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::ByteSize(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  int v2;
  uint64_t v3;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_13;
  }
  if ((*((_BYTE *)this + 44) & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((*((_BYTE *)this + 44) & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                            + 1))
              + 1;
  v2 = *((_DWORD *)this + 11);
  if ((v2 & 2) != 0)
  {
LABEL_7:
    LODWORD(v3) = v3
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 2))
                + 1;
    v2 = *((_DWORD *)this + 11);
  }
LABEL_8:
  if ((v2 & 4) != 0)
    v3 = (v3 + 9);
  else
    v3 = v3;
  if ((v2 & 8) != 0)
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4))
       + 1;
LABEL_13:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

double awd::metrics::LocationPeerRangingBurstMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingBurstMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::LocationPeerRangingBurstMetrics::MergeFrom(this, lpsrc);
}

double awd::metrics::LocationPeerRangingBurstMetrics::CopyFrom(awd::metrics::LocationPeerRangingBurstMetrics *this, const awd::metrics::LocationPeerRangingBurstMetrics *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingBurstMetrics *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::LocationPeerRangingBurstMetrics::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::IsInitialized(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  return 1;
}

double awd::metrics::LocationPeerRangingBurstMetrics::Swap(awd::metrics::LocationPeerRangingBurstMetrics *this, awd::metrics::LocationPeerRangingBurstMetrics *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return result;
}

_QWORD *awd::metrics::LocationPeerRangingBurstMetrics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingBurstMetrics");
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationPeerRangingEarlyTerminateMetrics *awd::metrics::LocationPeerRangingEarlyTerminateMetrics::LocationPeerRangingEarlyTerminateMetrics(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, const awd::metrics::LocationPeerRangingEarlyTerminateMetrics *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D992380;
  *((_BYTE *)this + 24) = 0;
  awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergeFrom(this, a2);
  return this;
}

void sub_218A52DD4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergeFrom(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, const awd::metrics::LocationPeerRangingEarlyTerminateMetrics *a2)
{
  double result;
  int v5;
  uint64_t v6;
  char v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v7 = *((_BYTE *)a2 + 24);
      *((_DWORD *)this + 8) |= 1u;
      *((_BYTE *)this + 24) = v7;
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 1);
    *((_DWORD *)this + 8) |= 2u;
    *((double *)this + 1) = result;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return result;
LABEL_7:
    v6 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 8) |= 4u;
    *((_QWORD *)this + 2) = v6;
  }
  return result;
}

void sub_218A52EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingEarlyTerminateMetrics::~LocationPeerRangingEarlyTerminateMetrics(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this)
{
  *(_QWORD *)this = &off_24D992380;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D992380;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D992380;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_;
  if (!awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::New(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D992380;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_BYTE *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  unsigned int v13;
  _BYTE *v14;
  uint64_t result;
  _BYTE *v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unint64_t v19;

  v4 = (unint64_t *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v18 = 0;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18);
          if (!(_DWORD)result)
            return result;
          v13 = v18;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v13 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_BYTE *)this + 24) = v13 != 0;
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 17)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
          goto LABEL_27;
        }
      }
      if (v7 != 2)
        break;
      v8 = TagFallback & 7;
      if (v8 != 1)
        goto LABEL_19;
LABEL_27:
      v19 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v19) & 1) == 0)
        return 0;
      *((_QWORD *)this + 1) = v19;
      *((_DWORD *)this + 8) |= 2u;
      v16 = (_BYTE *)*((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v16 < v9 && *v16 == 24)
      {
        v10 = v16 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_31:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v10;
          v17 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 8) |= 4u;
        if (v17 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_31;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_19:
    if (v8 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 24), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 8), a3);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::ByteSize(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this)
{
  int v2;
  uint64_t v3;

  v2 = *((_DWORD *)this + 8);
  if ((_BYTE)v2)
  {
    if ((v2 & 2) != 0)
      v3 = (2 * (v2 & 1)) | 9u;
    else
      v3 = 2 * (v2 & 1u);
    if ((v2 & 4) != 0)
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
         + 1;
  }
  else
  {
    v3 = 0;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

double awd::metrics::LocationPeerRangingEarlyTerminateMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergeFrom(this, lpsrc);
}

double awd::metrics::LocationPeerRangingEarlyTerminateMetrics::CopyFrom(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, const awd::metrics::LocationPeerRangingEarlyTerminateMetrics *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *))(*(_QWORD *)this + 32))(this);
    return awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::IsInitialized(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this)
{
  return 1;
}

double awd::metrics::LocationPeerRangingEarlyTerminateMetrics::Swap(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, awd::metrics::LocationPeerRangingEarlyTerminateMetrics *a2)
{
  char v2;
  double result;
  uint64_t v4;

  if (a2 != this)
  {
    v2 = *((_BYTE *)this + 24);
    *((_BYTE *)this + 24) = *((_BYTE *)a2 + 24);
    *((_BYTE *)a2 + 24) = v2;
    result = *((double *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((double *)a2 + 1) = result;
    v4 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v4;
    LODWORD(v4) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    LODWORD(v4) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
  }
  return result;
}

_QWORD *awd::metrics::LocationPeerRangingEarlyTerminateMetrics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingEarlyTerminateMetrics");
}

uint64_t awd::metrics::LocationPeerRangingDecision::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationPeerRangingDecision *awd::metrics::LocationPeerRangingDecision::LocationPeerRangingDecision(awd::metrics::LocationPeerRangingDecision *this, const awd::metrics::LocationPeerRangingDecision *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D9923F8;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationPeerRangingDecision::MergeFrom(this, a2);
  return this;
}

void sub_218A533F8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingDecision::MergeFrom(awd::metrics::LocationPeerRangingDecision *this, const awd::metrics::LocationPeerRangingDecision *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 7)
        awd::metrics::LocationPeerRangingDecision::MergeFrom();
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((_QWORD *)this + 1) = v6;
    }
  }
}

void sub_218A534C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingDecision::~LocationPeerRangingDecision(awd::metrics::LocationPeerRangingDecision *this)
{
  *(_QWORD *)this = &off_24D9923F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9923F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(_QWORD *)this = &off_24D9923F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationPeerRangingDecision::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingDecision::default_instance(awd::metrics::LocationPeerRangingDecision *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationPeerRangingDecision::default_instance_;
  if (!awd::metrics::LocationPeerRangingDecision::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingDecision::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationPeerRangingDecision::New(awd::metrics::LocationPeerRangingDecision *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D9923F8;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingDecision::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingDecision::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingDecision *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 6)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationPeerRangingDecision::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationPeerRangingDecision::ByteSize(awd::metrics::LocationPeerRangingDecision *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) == 0)
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0)
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationPeerRangingDecision::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingDecision *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationPeerRangingDecision::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingDecision::CopyFrom(awd::metrics::LocationPeerRangingDecision *this, const awd::metrics::LocationPeerRangingDecision *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingDecision *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationPeerRangingDecision::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingDecision::IsInitialized(awd::metrics::LocationPeerRangingDecision *this)
{
  return 1;
}

uint64_t awd::metrics::LocationPeerRangingDecision::Swap(uint64_t this, awd::metrics::LocationPeerRangingDecision *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (awd::metrics::LocationPeerRangingDecision *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *awd::metrics::LocationPeerRangingDecision::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingDecision");
}

_QWORD *awd::metrics::LocationPeerRangingUnlockDecisionMetrics::SharedCtor(_QWORD *this)
{
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  return this;
}

awd::metrics::LocationPeerRangingUnlockDecisionMetrics *awd::metrics::LocationPeerRangingUnlockDecisionMetrics::LocationPeerRangingUnlockDecisionMetrics(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, const awd::metrics::LocationPeerRangingUnlockDecisionMetrics *a2)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_24D992470;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergeFrom(this, a2);
  return this;
}

void sub_218A539B8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingDecision>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergeFrom(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, const awd::metrics::LocationPeerRangingUnlockDecisionMetrics *a2)
{
  uint64_t v4;
  const awd::metrics::LocationPeerRangingDecision *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingUnlockDecisionMetrics *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationPeerRangingDecision **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingUnlockDecisionMetrics *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
        *(_QWORD *)v9 = &off_24D9923F8;
        *(_DWORD *)(v9 + 24) = 0;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      awd::metrics::LocationPeerRangingDecision::MergeFrom((awd::metrics::LocationPeerRangingDecision *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  v12 = *((_DWORD *)a2 + 13);
  if ((v12 & 0x1FE) != 0)
  {
    if ((v12 & 2) != 0)
    {
      v13 = *((_QWORD *)a2 + 4);
      *((_DWORD *)this + 13) |= 2u;
      *((_QWORD *)this + 4) = v13;
      v12 = *((_DWORD *)a2 + 13);
    }
    if ((v12 & 4) != 0)
    {
      v14 = *((_QWORD *)a2 + 5);
      *((_DWORD *)this + 13) |= 4u;
      *((_QWORD *)this + 5) = v14;
    }
  }
}

void sub_218A53B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::~LocationPeerRangingUnlockDecisionMetrics(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
  *(_QWORD *)this = &off_24D992470;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingDecision>::TypeHandler>((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationPeerRangingUnlockDecisionMetrics::~LocationPeerRangingUnlockDecisionMetrics(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_;
  if (!awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::New(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24D992470;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if ((*(_WORD *)(this + 52) & 0x1FE) != 0)
  {
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 40) = 0;
  }
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  unsigned __int8 *v25;
  int v26;
  char *v27;
  _BYTE *v28;
  uint64_t result;
  unsigned __int8 *v30;
  unsigned int v31;

  v4 = (awd::metrics::LocationPeerRangingUnlockDecisionMetrics *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 32);
  v6 = (unint64_t *)((char *)this + 40);
  while (1)
  {
    while (1)
    {
LABEL_2:
      v7 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v7;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v9 = TagFallback >> 3;
      if (TagFallback >> 3 == 1)
      {
        v10 = TagFallback & 7;
        if (v10 == 2)
        {
          while (1)
          {
            v13 = *((_DWORD *)this + 5);
            v14 = *((int *)this + 4);
            if ((int)v14 >= v13)
            {
              if (v13 == *((_DWORD *)this + 6))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
                v13 = *((_DWORD *)this + 5);
              }
              *((_DWORD *)this + 5) = v13 + 1;
              v16 = operator new();
              *(_QWORD *)(v16 + 8) = 0;
              *(_QWORD *)(v16 + 16) = 0;
              *(_QWORD *)v16 = &off_24D9923F8;
              *(_DWORD *)(v16 + 24) = 0;
              v17 = *((_QWORD *)this + 1);
              v18 = *((int *)this + 4);
              *((_DWORD *)this + 4) = v18 + 1;
              *(_QWORD *)(v17 + 8 * v18) = v16;
            }
            else
            {
              v15 = *((_QWORD *)this + 1);
              *((_DWORD *)this + 4) = v14 + 1;
              v16 = *(_QWORD *)(v15 + 8 * v14);
            }
            v31 = 0;
            v19 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0;
            }
            else
            {
              v31 = *v19;
              *((_QWORD *)a2 + 1) = v19 + 1;
            }
            v20 = *((_DWORD *)a2 + 14);
            v21 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v20 + 1;
            if (v20 >= v21)
              return 0;
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (!awd::metrics::LocationPeerRangingDecision::MergePartialFromCodedStream((awd::metrics::LocationPeerRangingDecision *)v16, a2)|| !*((_BYTE *)a2 + 36))
            {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            v22 = *((_DWORD *)a2 + 14);
            v23 = __OFSUB__(v22, 1);
            v24 = v22 - 1;
            if (v24 < 0 == v23)
              *((_DWORD *)a2 + 14) = v24;
            v25 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
            v11 = *((_QWORD *)a2 + 2);
            if ((unint64_t)v25 >= v11)
              goto LABEL_2;
            v26 = *v25;
            if (v26 != 10)
            {
              if (v26 != 16)
                goto LABEL_2;
              v27 = (char *)(v25 + 1);
              *((_QWORD *)a2 + 1) = v27;
              goto LABEL_32;
            }
            *((_QWORD *)a2 + 1) = v25 + 1;
          }
        }
        goto LABEL_36;
      }
      if (v9 != 2)
        break;
      v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_36;
      v27 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_32:
      if ((unint64_t)v27 >= v11 || *v27 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
        if (!(_DWORD)result)
          return result;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v5 = *v27;
        v28 = v27 + 1;
        *((_QWORD *)a2 + 1) = v28;
      }
      *((_DWORD *)this + 13) |= 2u;
      if ((unint64_t)v28 < v11 && *v28 == 24)
      {
        v12 = v28 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_46:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v12;
          v30 = (unsigned __int8 *)(v12 + 1);
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 13) |= 4u;
        if (v30 == (unsigned __int8 *)v11 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_46;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_36:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
    v7 = *(_DWORD *)(v5 + 52);
  }
  if ((v7 & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  return this;
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::ByteSize(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;

  v2 = *((_DWORD *)this + 13);
  if ((v2 & 0x1FE) == 0)
  {
    v3 = 0;
    goto LABEL_8;
  }
  if ((v2 & 2) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 4))
       + 1;
    if ((*((_DWORD *)this + 13) & 4) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = 0;
  if ((v2 & 4) != 0)
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 5))
        + 1;
LABEL_8:
  v4 = *((_DWORD *)this + 4);
  v5 = (v4 + v3);
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingDecision::ByteSize(*(awd::metrics::LocationPeerRangingDecision **)(*((_QWORD *)this + 1) + 8 * v6));
      v8 = (int)v7;
      if (v7 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      else
        v9 = 1;
      v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *((int *)this + 4));
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::CopyFrom(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, const awd::metrics::LocationPeerRangingUnlockDecisionMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::IsInitialized(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
  return 1;
}

awd::metrics::LocationPeerRangingUnlockDecisionMetrics *awd::metrics::LocationPeerRangingUnlockDecisionMetrics::Swap(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, awd::metrics::LocationPeerRangingUnlockDecisionMetrics *a2)
{
  awd::metrics::LocationPeerRangingUnlockDecisionMetrics *v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != this)
  {
    v3 = this;
    this = (awd::metrics::LocationPeerRangingUnlockDecisionMetrics *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_QWORD *)v3 + 4);
    *((_QWORD *)v3 + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    v5 = *((_QWORD *)v3 + 5);
    *((_QWORD *)v3 + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return this;
}

_QWORD *awd::metrics::LocationPeerRangingUnlockDecisionMetrics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingUnlockDecisionMetrics");
}

uint64_t awd::metrics::LocationPeerRangingMetrics::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 160) = 0;
  return this;
}

awd::metrics::LocationPeerRangingMetrics *awd::metrics::LocationPeerRangingMetrics::LocationPeerRangingMetrics(awd::metrics::LocationPeerRangingMetrics *this, const awd::metrics::LocationPeerRangingMetrics *a2)
{
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 18) = 0;
  *((_DWORD *)this + 38) = 0;
  *((_QWORD *)this + 17) = 0;
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_24D9924E8;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 3) = 0;
  awd::metrics::LocationPeerRangingMetrics::MergeFrom(this, a2);
  return this;
}

void sub_218A54358(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;

  v8 = v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingUnlockDecisionMetrics>::TypeHandler>(v8);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEarlyTerminateMetrics>::TypeHandler>(v7);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingBurstMetrics>::TypeHandler>(v6);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMeasurementMetrics>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEstimatorConfiguration>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMetaData>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMetrics::MergeFrom(awd::metrics::LocationPeerRangingMetrics *this, const awd::metrics::LocationPeerRangingMetrics *a2)
{
  uint64_t v4;
  const awd::metrics::LocationPeerRangingMetaData *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  awd::metrics::LocationPeerRangingMetaData *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const awd::metrics::LocationPeerRangingEstimatorConfiguration *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const awd::metrics::LocationPeerRangingMeasurementMetrics *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const awd::metrics::LocationPeerRangingBurstMetrics *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const awd::metrics::LocationPeerRangingEarlyTerminateMetrics *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const awd::metrics::LocationPeerRangingUnlockDecisionMetrics *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v53);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const awd::metrics::LocationPeerRangingMetaData **)(*((_QWORD *)a2 + 2) + 8 * v4);
      v6 = *((_DWORD *)this + 7);
      v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 16));
          v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        v9 = (awd::metrics::LocationPeerRangingMetaData *)operator new();
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *(_QWORD *)v9 = &off_24D9921A0;
        v10 = *((_QWORD *)this + 2);
        v11 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v7 + 1;
        v9 = *(awd::metrics::LocationPeerRangingMetaData **)(v8 + 8 * v7);
      }
      awd::metrics::LocationPeerRangingMetaData::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const awd::metrics::LocationPeerRangingEstimatorConfiguration **)(*((_QWORD *)a2 + 5) + 8 * v12);
      v14 = *((_DWORD *)this + 13);
      v15 = *((int *)this + 12);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 40));
          v14 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v14 + 1;
        v17 = operator new();
        *(_QWORD *)v17 = &off_24D992218;
        *(_DWORD *)(v17 + 8) = 0;
        *(_WORD *)(v17 + 12) = 0;
        *(_QWORD *)(v17 + 24) = 0;
        *(_QWORD *)(v17 + 32) = 0;
        *(_QWORD *)(v17 + 16) = 0;
        v18 = *((_QWORD *)this + 5);
        v19 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 5);
        *((_DWORD *)this + 12) = v15 + 1;
        v17 = *(_QWORD *)(v16 + 8 * v15);
      }
      awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom((awd::metrics::LocationPeerRangingEstimatorConfiguration *)v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 12));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 64));
  if (*((int *)a2 + 18) >= 1)
  {
    v20 = 0;
    do
    {
      v21 = *(const awd::metrics::LocationPeerRangingMeasurementMetrics **)(*((_QWORD *)a2 + 8) + 8 * v20);
      v22 = *((_DWORD *)this + 19);
      v23 = *((int *)this + 18);
      if ((int)v23 >= v22)
      {
        if (v22 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 64));
          v22 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v22 + 1;
        v25 = operator new();
        *(_QWORD *)v25 = &off_24D992290;
        *(_DWORD *)(v25 + 60) = 0;
        *(_DWORD *)(v25 + 64) = 0;
        *(_OWORD *)(v25 + 8) = 0u;
        *(_OWORD *)(v25 + 24) = 0u;
        *(_OWORD *)(v25 + 40) = 0u;
        *(_BYTE *)(v25 + 56) = 0;
        v26 = *((_QWORD *)this + 8);
        v27 = *((int *)this + 18);
        *((_DWORD *)this + 18) = v27 + 1;
        *(_QWORD *)(v26 + 8 * v27) = v25;
      }
      else
      {
        v24 = *((_QWORD *)this + 8);
        *((_DWORD *)this + 18) = v23 + 1;
        v25 = *(_QWORD *)(v24 + 8 * v23);
      }
      awd::metrics::LocationPeerRangingMeasurementMetrics::MergeFrom((awd::metrics::LocationPeerRangingMeasurementMetrics *)v25, v21);
      ++v20;
    }
    while (v20 < *((int *)a2 + 18));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 88));
  if (*((int *)a2 + 24) >= 1)
  {
    v28 = 0;
    do
    {
      v29 = *(const awd::metrics::LocationPeerRangingBurstMetrics **)(*((_QWORD *)a2 + 11) + 8 * v28);
      v30 = *((_DWORD *)this + 25);
      v31 = *((int *)this + 24);
      if ((int)v31 >= v30)
      {
        if (v30 == *((_DWORD *)this + 26))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 88));
          v30 = *((_DWORD *)this + 25);
        }
        *((_DWORD *)this + 25) = v30 + 1;
        v33 = operator new();
        *(_QWORD *)v33 = &off_24D992308;
        *(_OWORD *)(v33 + 8) = 0u;
        *(_OWORD *)(v33 + 24) = 0u;
        *(_QWORD *)(v33 + 40) = 0;
        v34 = *((_QWORD *)this + 11);
        v35 = *((int *)this + 24);
        *((_DWORD *)this + 24) = v35 + 1;
        *(_QWORD *)(v34 + 8 * v35) = v33;
      }
      else
      {
        v32 = *((_QWORD *)this + 11);
        *((_DWORD *)this + 24) = v31 + 1;
        v33 = *(_QWORD *)(v32 + 8 * v31);
      }
      awd::metrics::LocationPeerRangingBurstMetrics::MergeFrom((awd::metrics::LocationPeerRangingBurstMetrics *)v33, v29);
      ++v28;
    }
    while (v28 < *((int *)a2 + 24));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 112));
  if (*((int *)a2 + 30) >= 1)
  {
    v36 = 0;
    do
    {
      v37 = *(const awd::metrics::LocationPeerRangingEarlyTerminateMetrics **)(*((_QWORD *)a2 + 14) + 8 * v36);
      v38 = *((_DWORD *)this + 31);
      v39 = *((int *)this + 30);
      if ((int)v39 >= v38)
      {
        if (v38 == *((_DWORD *)this + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 112));
          v38 = *((_DWORD *)this + 31);
        }
        *((_DWORD *)this + 31) = v38 + 1;
        v41 = operator new();
        *(_DWORD *)(v41 + 28) = 0;
        *(_DWORD *)(v41 + 32) = 0;
        *(_QWORD *)(v41 + 8) = 0;
        *(_QWORD *)(v41 + 16) = 0;
        *(_QWORD *)v41 = &off_24D992380;
        *(_BYTE *)(v41 + 24) = 0;
        v42 = *((_QWORD *)this + 14);
        v43 = *((int *)this + 30);
        *((_DWORD *)this + 30) = v43 + 1;
        *(_QWORD *)(v42 + 8 * v43) = v41;
      }
      else
      {
        v40 = *((_QWORD *)this + 14);
        *((_DWORD *)this + 30) = v39 + 1;
        v41 = *(_QWORD *)(v40 + 8 * v39);
      }
      awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergeFrom((awd::metrics::LocationPeerRangingEarlyTerminateMetrics *)v41, v37);
      ++v36;
    }
    while (v36 < *((int *)a2 + 30));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 136));
  if (*((int *)a2 + 36) >= 1)
  {
    v44 = 0;
    do
    {
      v45 = *(const awd::metrics::LocationPeerRangingUnlockDecisionMetrics **)(*((_QWORD *)a2 + 17) + 8 * v44);
      v46 = *((_DWORD *)this + 37);
      v47 = *((int *)this + 36);
      if ((int)v47 >= v46)
      {
        if (v46 == *((_DWORD *)this + 38))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 136));
          v46 = *((_DWORD *)this + 37);
        }
        *((_DWORD *)this + 37) = v46 + 1;
        v49 = operator new();
        *(_QWORD *)(v49 + 8) = 0;
        *(_QWORD *)(v49 + 16) = 0;
        *(_QWORD *)v49 = &off_24D992470;
        *(_DWORD *)(v49 + 24) = 0;
        *(_QWORD *)(v49 + 40) = 0;
        *(_QWORD *)(v49 + 48) = 0;
        *(_QWORD *)(v49 + 32) = 0;
        v50 = *((_QWORD *)this + 17);
        v51 = *((int *)this + 36);
        *((_DWORD *)this + 36) = v51 + 1;
        *(_QWORD *)(v50 + 8 * v51) = v49;
      }
      else
      {
        v48 = *((_QWORD *)this + 17);
        *((_DWORD *)this + 36) = v47 + 1;
        v49 = *(_QWORD *)(v48 + 8 * v47);
      }
      awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergeFrom((awd::metrics::LocationPeerRangingUnlockDecisionMetrics *)v49, v45);
      ++v44;
    }
    while (v44 < *((int *)a2 + 36));
  }
  if ((*((_BYTE *)a2 + 164) & 1) != 0)
  {
    v52 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 41) |= 1u;
    *((_QWORD *)this + 1) = v52;
  }
}

void sub_218A54958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMetrics::~LocationPeerRangingMetrics(awd::metrics::LocationPeerRangingMetrics *this)
{
  *(_QWORD *)this = &off_24D9924E8;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingUnlockDecisionMetrics>::TypeHandler>((uint64_t *)this + 17);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEarlyTerminateMetrics>::TypeHandler>((uint64_t *)this + 14);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingBurstMetrics>::TypeHandler>((uint64_t *)this + 11);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMeasurementMetrics>::TypeHandler>((uint64_t *)this + 8);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEstimatorConfiguration>::TypeHandler>((uint64_t *)this + 5);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMetaData>::TypeHandler>((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  awd::metrics::LocationPeerRangingMetrics::~LocationPeerRangingMetrics(this);
  JUMPOUT(0x219A1DC7CLL);
}

uint64_t awd::metrics::LocationPeerRangingMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 160) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetrics::default_instance(awd::metrics::LocationPeerRangingMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = awd::metrics::LocationPeerRangingMetrics::default_instance_;
  if (!awd::metrics::LocationPeerRangingMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingMetrics::default_instance_;
  }
  return result;
}

uint64_t awd::metrics::LocationPeerRangingMetrics::New(awd::metrics::LocationPeerRangingMetrics *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  *(_QWORD *)(result + 88) = 0;
  *(_QWORD *)(result + 96) = 0;
  *(_DWORD *)(result + 104) = 0;
  *(_QWORD *)(result + 112) = 0;
  *(_QWORD *)(result + 120) = 0;
  *(_DWORD *)(result + 128) = 0;
  *(_QWORD *)(result + 136) = 0;
  *(_QWORD *)(result + 144) = 0;
  *(_DWORD *)(result + 152) = 0;
  *(_QWORD *)(result + 160) = 0;
  *(_QWORD *)result = &off_24D9924E8;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingMetrics::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = this;
  if (*(_BYTE *)(this + 164))
    *(_QWORD *)(this + 8) = 0;
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  if (*(int *)(v1 + 48) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  if (*(int *)(v1 + 72) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v1 + 64) + 8 * v6);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v1 + 72));
  }
  *(_DWORD *)(v1 + 72) = 0;
  if (*(int *)(v1 + 96) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v1 + 88) + 8 * v8);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9);
      ++v8;
    }
    while (v8 < *(int *)(v1 + 96));
  }
  *(_DWORD *)(v1 + 96) = 0;
  if (*(int *)(v1 + 120) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v1 + 112) + 8 * v10);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 32))(v11);
      ++v10;
    }
    while (v10 < *(int *)(v1 + 120));
  }
  *(_DWORD *)(v1 + 120) = 0;
  if (*(int *)(v1 + 144) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v1 + 136) + 8 * v12);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 32))(v13);
      ++v12;
    }
    while (v12 < *(int *)(v1 + 144));
  }
  *(_DWORD *)(v1 + 144) = 0;
  *(_DWORD *)(v1 + 164) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetrics::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  char *v12;
  unint64_t v13;
  _BYTE *v14;
  uint64_t result;
  int v16;
  uint64_t v17;
  uint64_t v18;
  awd::metrics::LocationPeerRangingMetaData *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  BOOL v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  int v84;
  int v85;
  int v86;
  int v87;
  _BYTE *v88;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v89;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v90;
  unsigned int v91;

  v4 = (unint64_t *)((char *)this + 8);
  v89 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 16);
  v90 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 40);
  v5 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 64);
  v6 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 88);
  v7 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 112);
  v8 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 136);
  while (1)
  {
LABEL_2:
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && (*v9 & 0x80000000) == 0)
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 >= v13 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 41) |= 1u;
        if ((unint64_t)v14 >= v13 || *v14 != 18)
          continue;
        goto LABEL_31;
      case 2u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_24;
        while (2)
        {
          v16 = *((_DWORD *)this + 7);
          v17 = *((int *)this + 6);
          if ((int)v17 >= v16)
          {
            if (v16 == *((_DWORD *)this + 8))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v89);
              v16 = *((_DWORD *)this + 7);
            }
            *((_DWORD *)this + 7) = v16 + 1;
            v19 = (awd::metrics::LocationPeerRangingMetaData *)operator new();
            *((_QWORD *)v19 + 1) = 0;
            *((_QWORD *)v19 + 2) = 0;
            *(_QWORD *)v19 = &off_24D9921A0;
            v20 = *((_QWORD *)this + 2);
            v21 = *((int *)this + 6);
            *((_DWORD *)this + 6) = v21 + 1;
            *(_QWORD *)(v20 + 8 * v21) = v19;
          }
          else
          {
            v18 = *((_QWORD *)this + 2);
            *((_DWORD *)this + 6) = v17 + 1;
            v19 = *(awd::metrics::LocationPeerRangingMetaData **)(v18 + 8 * v17);
          }
          v91 = 0;
          v22 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))return 0;
          }
          else
          {
            v91 = *v22;
            *((_QWORD *)a2 + 1) = v22 + 1;
          }
          v23 = *((_DWORD *)a2 + 14);
          v24 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v23 + 1;
          if (v23 >= v24)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationPeerRangingMetaData::MergePartialFromCodedStream(v19, a2)
            || !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v25 = *((_DWORD *)a2 + 14);
          v26 = __OFSUB__(v25, 1);
          v27 = v25 - 1;
          if (v27 < 0 == v26)
            *((_DWORD *)a2 + 14) = v27;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v14 < *((_QWORD *)a2 + 2))
          {
            v28 = *v14;
            if (v28 == 18)
            {
LABEL_31:
              *((_QWORD *)a2 + 1) = v14 + 1;
              continue;
            }
            if (v28 == 26)
            {
              do
              {
                *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_50:
                v29 = *((_DWORD *)this + 13);
                v30 = *((int *)this + 12);
                if ((int)v30 >= v29)
                {
                  if (v29 == *((_DWORD *)this + 14))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v90);
                    v29 = *((_DWORD *)this + 13);
                  }
                  *((_DWORD *)this + 13) = v29 + 1;
                  v32 = operator new();
                  *(_QWORD *)v32 = &off_24D992218;
                  *(_DWORD *)(v32 + 8) = 0;
                  *(_WORD *)(v32 + 12) = 0;
                  *(_QWORD *)(v32 + 24) = 0;
                  *(_QWORD *)(v32 + 32) = 0;
                  *(_QWORD *)(v32 + 16) = 0;
                  v33 = *((_QWORD *)this + 5);
                  v34 = *((int *)this + 12);
                  *((_DWORD *)this + 12) = v34 + 1;
                  *(_QWORD *)(v33 + 8 * v34) = v32;
                }
                else
                {
                  v31 = *((_QWORD *)this + 5);
                  *((_DWORD *)this + 12) = v30 + 1;
                  v32 = *(_QWORD *)(v31 + 8 * v30);
                }
                v91 = 0;
                v35 = (char *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))return 0;
                }
                else
                {
                  v91 = *v35;
                  *((_QWORD *)a2 + 1) = v35 + 1;
                }
                v36 = *((_DWORD *)a2 + 14);
                v37 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v36 + 1;
                if (v36 >= v37)
                  return 0;
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!awd::metrics::LocationPeerRangingEstimatorConfiguration::MergePartialFromCodedStream((awd::metrics::LocationPeerRangingEstimatorConfiguration *)v32, a2)|| !*((_BYTE *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                v38 = *((_DWORD *)a2 + 14);
                v26 = __OFSUB__(v38, 1);
                v39 = v38 - 1;
                if (v39 < 0 == v26)
                  *((_DWORD *)a2 + 14) = v39;
                v14 = (_BYTE *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v14 >= *((_QWORD *)a2 + 2))
                  goto LABEL_2;
                v40 = *v14;
              }
              while (v40 == 26);
              if (v40 == 34)
              {
                do
                {
                  *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_68:
                  v41 = *((_DWORD *)this + 19);
                  v42 = *((int *)this + 18);
                  if ((int)v42 >= v41)
                  {
                    if (v41 == *((_DWORD *)this + 20))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
                      v41 = *((_DWORD *)this + 19);
                    }
                    *((_DWORD *)this + 19) = v41 + 1;
                    v44 = operator new();
                    *(_QWORD *)v44 = &off_24D992290;
                    *(_DWORD *)(v44 + 60) = 0;
                    *(_DWORD *)(v44 + 64) = 0;
                    *(_OWORD *)(v44 + 8) = 0u;
                    *(_OWORD *)(v44 + 24) = 0u;
                    *(_OWORD *)(v44 + 40) = 0u;
                    *(_BYTE *)(v44 + 56) = 0;
                    v45 = *((_QWORD *)this + 8);
                    v46 = *((int *)this + 18);
                    *((_DWORD *)this + 18) = v46 + 1;
                    *(_QWORD *)(v45 + 8 * v46) = v44;
                  }
                  else
                  {
                    v43 = *((_QWORD *)this + 8);
                    *((_DWORD *)this + 18) = v42 + 1;
                    v44 = *(_QWORD *)(v43 + 8 * v42);
                  }
                  v91 = 0;
                  v47 = (char *)*((_QWORD *)a2 + 1);
                  if ((unint64_t)v47 >= *((_QWORD *)a2 + 2) || *v47 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))return 0;
                  }
                  else
                  {
                    v91 = *v47;
                    *((_QWORD *)a2 + 1) = v47 + 1;
                  }
                  v48 = *((_DWORD *)a2 + 14);
                  v49 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v48 + 1;
                  if (v48 >= v49)
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!awd::metrics::LocationPeerRangingMeasurementMetrics::MergePartialFromCodedStream((awd::metrics::LocationPeerRangingMeasurementMetrics *)v44, a2)|| !*((_BYTE *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  v50 = *((_DWORD *)a2 + 14);
                  v26 = __OFSUB__(v50, 1);
                  v51 = v50 - 1;
                  if (v51 < 0 == v26)
                    *((_DWORD *)a2 + 14) = v51;
                  v14 = (_BYTE *)*((_QWORD *)a2 + 1);
                  if ((unint64_t)v14 >= *((_QWORD *)a2 + 2))
                    goto LABEL_2;
                  v52 = *v14;
                }
                while (v52 == 34);
                if (v52 == 42)
                {
                  do
                  {
                    *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_86:
                    v53 = *((_DWORD *)this + 25);
                    v54 = *((int *)this + 24);
                    if ((int)v54 >= v53)
                    {
                      if (v53 == *((_DWORD *)this + 26))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
                        v53 = *((_DWORD *)this + 25);
                      }
                      *((_DWORD *)this + 25) = v53 + 1;
                      v56 = operator new();
                      *(_QWORD *)v56 = &off_24D992308;
                      *(_OWORD *)(v56 + 8) = 0u;
                      *(_OWORD *)(v56 + 24) = 0u;
                      *(_QWORD *)(v56 + 40) = 0;
                      v57 = *((_QWORD *)this + 11);
                      v58 = *((int *)this + 24);
                      *((_DWORD *)this + 24) = v58 + 1;
                      *(_QWORD *)(v57 + 8 * v58) = v56;
                    }
                    else
                    {
                      v55 = *((_QWORD *)this + 11);
                      *((_DWORD *)this + 24) = v54 + 1;
                      v56 = *(_QWORD *)(v55 + 8 * v54);
                    }
                    v91 = 0;
                    v59 = (char *)*((_QWORD *)a2 + 1);
                    if ((unint64_t)v59 >= *((_QWORD *)a2 + 2) || *v59 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))return 0;
                    }
                    else
                    {
                      v91 = *v59;
                      *((_QWORD *)a2 + 1) = v59 + 1;
                    }
                    v60 = *((_DWORD *)a2 + 14);
                    v61 = *((_DWORD *)a2 + 15);
                    *((_DWORD *)a2 + 14) = v60 + 1;
                    if (v60 >= v61)
                      return 0;
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                    if (!awd::metrics::LocationPeerRangingBurstMetrics::MergePartialFromCodedStream((awd::metrics::LocationPeerRangingBurstMetrics *)v56, a2)|| !*((_BYTE *)a2 + 36))
                    {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                    v62 = *((_DWORD *)a2 + 14);
                    v26 = __OFSUB__(v62, 1);
                    v63 = v62 - 1;
                    if (v63 < 0 == v26)
                      *((_DWORD *)a2 + 14) = v63;
                    v14 = (_BYTE *)*((_QWORD *)a2 + 1);
                    if ((unint64_t)v14 >= *((_QWORD *)a2 + 2))
                      goto LABEL_2;
                    v64 = *v14;
                  }
                  while (v64 == 42);
                  if (v64 == 50)
                  {
                    do
                    {
                      *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_104:
                      v65 = *((_DWORD *)this + 31);
                      v66 = *((int *)this + 30);
                      if ((int)v66 >= v65)
                      {
                        if (v65 == *((_DWORD *)this + 32))
                        {
                          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
                          v65 = *((_DWORD *)this + 31);
                        }
                        *((_DWORD *)this + 31) = v65 + 1;
                        v68 = operator new();
                        *(_DWORD *)(v68 + 28) = 0;
                        *(_DWORD *)(v68 + 32) = 0;
                        *(_QWORD *)(v68 + 8) = 0;
                        *(_QWORD *)(v68 + 16) = 0;
                        *(_QWORD *)v68 = &off_24D992380;
                        *(_BYTE *)(v68 + 24) = 0;
                        v69 = *((_QWORD *)this + 14);
                        v70 = *((int *)this + 30);
                        *((_DWORD *)this + 30) = v70 + 1;
                        *(_QWORD *)(v69 + 8 * v70) = v68;
                      }
                      else
                      {
                        v67 = *((_QWORD *)this + 14);
                        *((_DWORD *)this + 30) = v66 + 1;
                        v68 = *(_QWORD *)(v67 + 8 * v66);
                      }
                      v91 = 0;
                      v71 = (char *)*((_QWORD *)a2 + 1);
                      if ((unint64_t)v71 >= *((_QWORD *)a2 + 2) || *v71 < 0)
                      {
                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))return 0;
                      }
                      else
                      {
                        v91 = *v71;
                        *((_QWORD *)a2 + 1) = v71 + 1;
                      }
                      v72 = *((_DWORD *)a2 + 14);
                      v73 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v72 + 1;
                      if (v72 >= v73)
                        return 0;
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                      if (!awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergePartialFromCodedStream((awd::metrics::LocationPeerRangingEarlyTerminateMetrics *)v68, a2)|| !*((_BYTE *)a2 + 36))
                      {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                      v74 = *((_DWORD *)a2 + 14);
                      v26 = __OFSUB__(v74, 1);
                      v75 = v74 - 1;
                      if (v75 < 0 == v26)
                        *((_DWORD *)a2 + 14) = v75;
                      v14 = (_BYTE *)*((_QWORD *)a2 + 1);
                      if ((unint64_t)v14 >= *((_QWORD *)a2 + 2))
                        goto LABEL_2;
                      v76 = *v14;
                    }
                    while (v76 == 50);
                    if (v76 == 58)
                    {
                      do
                      {
                        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_122:
                        v77 = *((_DWORD *)this + 37);
                        v78 = *((int *)this + 36);
                        if ((int)v78 >= v77)
                        {
                          if (v77 == *((_DWORD *)this + 38))
                          {
                            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8);
                            v77 = *((_DWORD *)this + 37);
                          }
                          *((_DWORD *)this + 37) = v77 + 1;
                          v80 = operator new();
                          *(_QWORD *)(v80 + 8) = 0;
                          *(_QWORD *)(v80 + 16) = 0;
                          *(_QWORD *)v80 = &off_24D992470;
                          *(_DWORD *)(v80 + 24) = 0;
                          *(_QWORD *)(v80 + 40) = 0;
                          *(_QWORD *)(v80 + 48) = 0;
                          *(_QWORD *)(v80 + 32) = 0;
                          v81 = *((_QWORD *)this + 17);
                          v82 = *((int *)this + 36);
                          *((_DWORD *)this + 36) = v82 + 1;
                          *(_QWORD *)(v81 + 8 * v82) = v80;
                        }
                        else
                        {
                          v79 = *((_QWORD *)this + 17);
                          *((_DWORD *)this + 36) = v78 + 1;
                          v80 = *(_QWORD *)(v79 + 8 * v78);
                        }
                        v91 = 0;
                        v83 = (char *)*((_QWORD *)a2 + 1);
                        if ((unint64_t)v83 >= *((_QWORD *)a2 + 2) || *v83 < 0)
                        {
                          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))return 0;
                        }
                        else
                        {
                          v91 = *v83;
                          *((_QWORD *)a2 + 1) = v83 + 1;
                        }
                        v84 = *((_DWORD *)a2 + 14);
                        v85 = *((_DWORD *)a2 + 15);
                        *((_DWORD *)a2 + 14) = v84 + 1;
                        if (v84 >= v85)
                          return 0;
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                        if (!awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergePartialFromCodedStream((awd::metrics::LocationPeerRangingUnlockDecisionMetrics *)v80, a2)|| !*((_BYTE *)a2 + 36))
                        {
                          return 0;
                        }
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                        v86 = *((_DWORD *)a2 + 14);
                        v26 = __OFSUB__(v86, 1);
                        v87 = v86 - 1;
                        if (v87 < 0 == v26)
                          *((_DWORD *)a2 + 14) = v87;
                        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
                        v88 = (_BYTE *)*((_QWORD *)a2 + 2);
                      }
                      while (v14 < v88 && *v14 == 58);
                      if (v14 == v88 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                      {
                        *((_DWORD *)a2 + 8) = 0;
                        result = 1;
                        *((_BYTE *)a2 + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
            }
          }
          break;
        }
        break;
      case 3u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_50;
        goto LABEL_24;
      case 4u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_68;
        goto LABEL_24;
      case 5u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_86;
        goto LABEL_24;
      case 6u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_104;
        goto LABEL_24;
      case 7u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_24;
        goto LABEL_122;
      default:
        v11 = TagFallback & 7;
LABEL_24:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t awd::metrics::LocationPeerRangingMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = this;
  if ((*(_BYTE *)(this + 164) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 40) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 48));
  }
  if (*(int *)(v5 + 72) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 64) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 72));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(*(_QWORD *)(v5 + 88) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 96));
  }
  if (*(int *)(v5 + 120) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(*(_QWORD *)(v5 + 112) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 120));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 144));
  }
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetrics::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  int v2;
  int v3;
  int v4;
  uint64_t i;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;

  if ((*((_BYTE *)this + 164) & 1) != 0)
    v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
  else
    v2 = 0;
  v3 = *((_DWORD *)this + 6);
  v4 = v3 + v2;
  if (v3 >= 1)
  {
    for (i = 0; i < *((int *)this + 6); ++i)
    {
      v6 = *((_QWORD *)this[2] + i);
      if ((*(_BYTE *)(v6 + 20) & 1) != 0)
      {
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8));
        v7 = v8 + 1;
        *(_DWORD *)(v6 + 16) = v8 + 1;
        if ((v8 + 1) >= 0x80)
        {
          v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v8 + 1));
          goto LABEL_11;
        }
      }
      else
      {
        v7 = 0;
        *(_DWORD *)(v6 + 16) = 0;
      }
      v9 = 1;
LABEL_11:
      v4 += v7 + v9;
    }
  }
  v10 = *((_DWORD *)this + 12);
  v11 = v10 + v4;
  if (v10 >= 1)
  {
    v12 = 0;
    do
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingEstimatorConfiguration::ByteSize(*((awd::metrics::LocationPeerRangingEstimatorConfiguration **)this[5] + v12));
      v14 = (int)v13;
      if (v13 >= 0x80)
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      else
        v15 = 1;
      v11 += v14 + v15;
      ++v12;
    }
    while (v12 < *((int *)this + 12));
  }
  v16 = *((_DWORD *)this + 18);
  v17 = v16 + v11;
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingMeasurementMetrics::ByteSize(*((awd::metrics::LocationPeerRangingMeasurementMetrics **)this[8] + v18));
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v17 += v20 + v21;
      ++v18;
    }
    while (v18 < *((int *)this + 18));
  }
  v22 = *((_DWORD *)this + 24);
  v23 = v22 + v17;
  if (v22 >= 1)
  {
    v24 = 0;
    do
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingBurstMetrics::ByteSize(*((awd::metrics::LocationPeerRangingBurstMetrics **)this[11] + v24));
      v26 = (int)v25;
      if (v25 >= 0x80)
        v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      else
        v27 = 1;
      v23 += v26 + v27;
      ++v24;
    }
    while (v24 < *((int *)this + 24));
  }
  v28 = *((_DWORD *)this + 30);
  v29 = v28 + v23;
  if (v28 >= 1)
  {
    v30 = 0;
    do
    {
      v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingEarlyTerminateMetrics::ByteSize(*((awd::metrics::LocationPeerRangingEarlyTerminateMetrics **)this[14] + v30));
      v32 = (int)v31;
      if (v31 >= 0x80)
        v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      else
        v33 = 1;
      v29 += v32 + v33;
      ++v30;
    }
    while (v30 < *((int *)this + 30));
  }
  v34 = *((_DWORD *)this + 36);
  v35 = (v34 + v29);
  if (v34 >= 1)
  {
    v36 = 0;
    do
    {
      v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingUnlockDecisionMetrics::ByteSize(*((awd::metrics::LocationPeerRangingUnlockDecisionMetrics **)this[17] + v36));
      v38 = (int)v37;
      if (v37 >= 0x80)
        v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
      else
        v39 = 1;
      v35 = (v38 + v35 + v39);
      ++v36;
    }
    while (v36 < *((int *)this + 36));
  }
  *((_DWORD *)this + 40) = v35;
  return v35;
}

void awd::metrics::LocationPeerRangingMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  awd::metrics::LocationPeerRangingMetrics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingMetrics::CopyFrom(awd::metrics::LocationPeerRangingMetrics *this, const awd::metrics::LocationPeerRangingMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingMetrics *))(*(_QWORD *)this + 32))(this);
    awd::metrics::LocationPeerRangingMetrics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingMetrics::IsInitialized(awd::metrics::LocationPeerRangingMetrics *this)
{
  return 1;
}

awd::metrics::LocationPeerRangingMetrics *awd::metrics::LocationPeerRangingMetrics::Swap(awd::metrics::LocationPeerRangingMetrics *this, awd::metrics::LocationPeerRangingMetrics *a2)
{
  awd::metrics::LocationPeerRangingMetrics *v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationPeerRangingMetrics *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 41);
    *((_DWORD *)v3 + 41) = *((_DWORD *)a2 + 41);
    *((_DWORD *)a2 + 41) = v5;
    v6 = *((_DWORD *)v3 + 40);
    *((_DWORD *)v3 + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v6;
  }
  return this;
}

_QWORD *awd::metrics::LocationPeerRangingMetrics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingMetrics");
}

uint64_t awd::metrics::LocationPeerRangingMetaData::GetCachedSize(awd::metrics::LocationPeerRangingMetaData *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::GetCachedSize(awd::metrics::LocationPeerRangingEstimatorConfiguration *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::GetCachedSize(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  return *((unsigned int *)this + 15);
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::GetCachedSize(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::GetCachedSize(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t awd::metrics::LocationPeerRangingDecision::GetCachedSize(awd::metrics::LocationPeerRangingDecision *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::GetCachedSize(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationPeerRangingMetrics::GetCachedSize(awd::metrics::LocationPeerRangingMetrics *this)
{
  return *((unsigned int *)this + 40);
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingDecision>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMetaData>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEstimatorConfiguration>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMeasurementMetrics>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingBurstMetrics>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEarlyTerminateMetrics>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingUnlockDecisionMetrics>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x219A1DC64);
  return result;
}

void OUTLINED_FUNCTION_0_2(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
  __assert_rtn(a1, a2, 348, a4);
}

void awd::metrics::LocationServicesState::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationServicesApproval::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationUpdateSession::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMonitorSession::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMonitorTrigger::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationNetworkQueries::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationWifiUsage::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationEmergencySession::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationEmergencySessionStatistics::MergeFrom()
{
  __assert_rtn("set_medicalconditionsavailability", "Location.pb.h", 25590, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_emergencycontactsavailability", "Location.pb.h", 25567, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_medicationsavailability", "Location.pb.h", 25544, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_allergydetailavailability", "Location.pb.h", 25521, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_medicalnotesavailability", "Location.pb.h", 25498, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_bloodtypeavailability", "Location.pb.h", 25475, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_heightavailability", "Location.pb.h", 25452, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_weightavailability", "Location.pb.h", 25429, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_ageavailability", "Location.pb.h", 25406, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_nameavailability", "Location.pb.h", 25383, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_dsaavailability", "Location.pb.h", 25360, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_calltriggertype", "Location.pb.h", 25337, "::awd::metrics::LocationEmergencySessionStatistics_CallTriggerType_IsValid(value)");
}

{
  __assert_rtn("set_callmode", "Location.pb.h", 25248, "::awd::metrics::LocationEmergencySessionStatistics_CallMode_IsValid(value)");
}

{
  __assert_rtn("set_discardedposmsgtype", "Location.pb.h", 25159, "::awd::metrics::LocationEmergencySessionStatistics_DiscardedPosMsgType_IsValid(value)");
}

{
  __assert_rtn("set_supersededcommtype", "Location.pb.h", 24600, "::awd::metrics::LocationEmergencySessionStatistics_CommunicationType_IsValid(value)");
}

{
  __assert_rtn("set_supersededsessiontype", "Location.pb.h", 24577, "::awd::metrics::LocationEmergencySessionStatistics_PositionSession_IsValid(value)");
}

{
  __assert_rtn("set_abortcause", "Location.pb.h", 24554, "::awd::metrics::LocationEmergencySessionStatistics_AbortCauseType_IsValid(value)");
}

{
  __assert_rtn("set_envtype", "Location.pb.h", 24509, "::awd::metrics::LocationEmergencySessionStatistics_GnssSignalEnvironmentType_IsValid(value)");
}

{
  __assert_rtn("set_commtype", "Location.pb.h", 24486, "::awd::metrics::LocationEmergencySessionStatistics_CommunicationType_IsValid(value)");
}

{
  __assert_rtn("set_phonenumbersavailable", "Location.pb.h", 24309, "::awd::metrics::LocationEmergencySessionStatistics_PhoneNumberAvailability_IsValid(value)");
}

{
  __assert_rtn("set_tandemcapability", "Location.pb.h", 24000, "::awd::metrics::LocationEmergencySessionStatistics_TandemCapability_IsValid(value)");
}

{
  __assert_rtn("set_heloused", "Location.pb.h", 23779, "::awd::metrics::LocationEmergencySessionStatistics_HELOUsage_IsValid(value)");
}

{
  __assert_rtn("set_errorcode", "Location.pb.h", 23712, "::awd::metrics::LocationEmergencySessionStatistics_SessionErrorCode_IsValid(value)");
}

{
  __assert_rtn("set_requestedpositionreporttype", "Location.pb.h", 23645, "::awd::metrics::LocationEmergencySessionStatistics_PositionReport_IsValid(value)");
}

{
  __assert_rtn("set_rattype", "Location.pb.h", 23490, "::awd::metrics::LocationEmergencySessionStatistics_RadioAccessTechnology_IsValid(value)");
}

{
  __assert_rtn("set_protocoltype", "Location.pb.h", 23467, "::awd::metrics::LocationEmergencySessionStatistics_PositionProtocol_IsValid(value)");
}

{
  __assert_rtn("set_sessiontype", "Location.pb.h", 23444, "::awd::metrics::LocationEmergencySessionStatistics_PositionSession_IsValid(value)");
}

{
  __assert_rtn("set_methodtype", "Location.pb.h", 23421, "::awd::metrics::LocationEmergencySessionStatistics_PositionMethod_IsValid(value)");
}

void awd::metrics::LocationEmergencySessionStatistics::set_envtype()
{
  __assert_rtn("set_envtype", "Location.pb.h", 24509, "::awd::metrics::LocationEmergencySessionStatistics_GnssSignalEnvironmentType_IsValid(value)");
}

void awd::metrics::LocationEmergencySessionStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMapMatching::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationRealTimeHarvest::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationSecondaryDeviceRequest::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::CompassSession_Rotation::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::CompassSession::MergeFrom()
{
  __assert_rtn("set_coverkeyboardstate", "Location.pb.h", 27420, "::awd::metrics::CompassSession_CoverState_IsValid(value)");
}

{
  __assert_rtn("set_initstate", "Location.pb.h", 27221, "::awd::metrics::CompassSession_CalibrationLevel_IsValid(value)");
}

void awd::metrics::CompassSession::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationCompassSaturations::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionState::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionTrigger::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionGyroMiniCal::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionDropDetection::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionPedometerCalibration::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionGyroBiasEstimation::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessSession::MergeFrom()
{
  __assert_rtn("set_activitytypewhenstartdisabled", "Location.pb.h", 30976, "::awd::metrics::MotionFitnessSession_WorkoutType_IsValid(value)");
}

{
  __assert_rtn("set_activitytypewhenstopdisabled", "Location.pb.h", 30953, "::awd::metrics::MotionFitnessSession_WorkoutType_IsValid(value)");
}

{
  __assert_rtn("set_runcalibrationstatus", "Location.pb.h", 29277, "::awd::metrics::MotionFitnessSession_StrideCalibrationStatus_IsValid(value)");
}

{
  __assert_rtn("set_walkcalibrationstatus", "Location.pb.h", 29254, "::awd::metrics::MotionFitnessSession_StrideCalibrationStatus_IsValid(value)");
}

{
  __assert_rtn("set_vo2maxestimationstatus", "Location.pb.h", 29143, "::awd::metrics::MotionFitnessSession_MotionCalibrationStatus_IsValid(value)");
}

{
  __assert_rtn("set_palestimationstatus", "Location.pb.h", 29120, "::awd::metrics::MotionFitnessSession_MotionCalibrationStatus_IsValid(value)");
}

{
  __assert_rtn("set_hrsource", "Location.pb.h", 29075, "::awd::metrics::MotionFitnessSession_HRSource_IsValid(value)");
}

{
  __assert_rtn("set_workouttype", "Location.pb.h", 28850, "::awd::metrics::MotionFitnessSession_WorkoutType_IsValid(value)");
}

void awd::metrics::MotionFitnessSession::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessAllDay::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

uint64_t awd::metrics::MotionPressureTemperature::MotionPressureTemperature(_QWORD *a1, _QWORD *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t result;

  if (*a1)
    OUTLINED_FUNCTION_1();
  if (*a2)
    OUTLINED_FUNCTION_1();
  if (*a3)
    OUTLINED_FUNCTION_1();
  result = *a4;
  if (*a4)
    JUMPOUT(0x219A1DC64);
  return result;
}

void awd::metrics::MotionPressureTemperature::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionElevationAllDay::MergeFrom()
{
  __assert_rtn("set_haswetworkouts", "Location.pb.h", 34902, "::awd::metrics::MotionElevationAllDay_HasWetWorkouts_IsValid(value)");
}

void awd::metrics::MotionElevationAllDay::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionPressureStats::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionNoGPSRunAllDay::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessDaily::MergeFrom()
{
  __assert_rtn("set_wearabletype", "Location.pb.h", 35733, "::awd::metrics::MotionFitnessDaily_WearableType_IsValid(value)");
}

void awd::metrics::MotionFitnessDaily::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessPedometer::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessStrideCalibration::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessAccelSampleRate::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionBarometerCalibration::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionGyroDaily::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionSOSEvent::MergeFrom()
{
  __assert_rtn("set_workouttype", "Location.pb.h", 37236, "::awd::metrics::MotionSOSEvent_WorkoutType_IsValid(value)");
}

void awd::metrics::MotionSOSEvent::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationBatteryState::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationNavigationSession::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMainHarvesterMetrics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationSubHarvesterUploadAttempt::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationSubHarvesterMetrics::MergeFrom()
{
  __assert_rtn("set_subharvesteridentifier", "Location.pb.h", 38064, "::awd::metrics::LocationSubHarvesterIdentifier_IsValid(value)");
}

void awd::metrics::LocationSubHarvesterMetrics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationBeaconMonitorSession::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationBeaconMonitorTrigger::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationBeaconRangingSession::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom()
{
  __assert_rtn("set_uncertaintyrange", "Location.pb.h", 39075, "::awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeType_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom()
{
  __assert_rtn("set_svcnorange", "Location.pb.h", 39124, "::awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeType_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom()
{
  __assert_rtn("set_svcountrange", "Location.pb.h", 39173, "::awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeType_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom()
{
  __assert_rtn("set_activity", "Location.pb.h", 39222, "::awd::metrics::LocationGPSSessionStatistics_MotionActivityType_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom()
{
  __assert_rtn("set_signalenvironment", "Location.pb.h", 39271, "::awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentType_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom()
{
  __assert_rtn("set_mountedstate", "Location.pb.h", 39320, "::awd::metrics::LocationGPSSessionStatistics_MountedStateType_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom()
{
  __assert_rtn("set_movingstate", "Location.pb.h", 39369, "::awd::metrics::LocationGPSSessionStatistics_MovingStateType_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom()
{
  __assert_rtn("set_powerstate", "Location.pb.h", 39418, "::awd::metrics::LocationGPSSessionStatistics_PowerStateType_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom()
{
  __assert_rtn("set_deviceorientation", "Location.pb.h", 39541, "::awd::metrics::LocationGPSSessionStatistics_DeviceOrientationType_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom()
{
  __assert_rtn("set_powermeasurement", "Location.pb.h", 39590, "::awd::metrics::LocationGPSSessionStatistics_PowerMeasurementRange_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom()
{
  __assert_rtn("set_last_gpsd_exception_category", "Location.pb.h", 39934, "::awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics_GpsdExceptionCategory_IsValid(value)");
}

{
  __assert_rtn("set_last_gpsd_exit_category", "Location.pb.h", 39735, "::awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics_GpsdExitCategory_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics::MergeFrom()
{
  __assert_rtn("set_ephemerisfileintegritycheckresult", "Location.pb.h", 41800, "::awd::metrics::LocationGPSSessionStatistics_EphemerisFileIntegrityCheckType_IsValid(value)");
}

{
  __assert_rtn("set_ratoccupancy", "Location.pb.h", 41526, "::awd::metrics::LocationGPSSessionStatistics_RadioAccessTechnology_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationCellTileUsage::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGnssSWRecoveryStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationVisibilityAssertion::MergeFrom()
{
  __assert_rtn("set_authorizationstate", "Location.pb.h", 44154, "::awd::metrics::LocationAuthorizationState_IsValid(value)");
}

{
  __assert_rtn("set_invalidationreason", "Location.pb.h", 44131, "::awd::metrics::LocationVisibilityAssertion_InvalidationReason_IsValid(value)");
}

void awd::metrics::LocationVisibilityAssertion::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPhoneNumberAvailability::MergeFrom()
{
  __assert_rtn("set_phonenumberavailability", "Location.pb.h", 44273, "::awd::metrics::LocationPhoneNumberAvailability_SubscriptionAndPhoneNumberStatus_IsValid(value)");
}

void awd::metrics::LocationPhoneNumberAvailability::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMobileAssetStatistics::MergeFrom()
{
  __assert_rtn("set_component", "Location.pb.h", 44754, "::awd::metrics::LocationMobileAssetStatistics_AssetComponent_IsValid(value)");
}

{
  __assert_rtn("set_assettype", "Location.pb.h", 44731, "::awd::metrics::LocationMobileAssetStatistics_AssetType_IsValid(value)");
}

{
  __assert_rtn("set_assetevent", "Location.pb.h", 44708, "::awd::metrics::LocationMobileAssetStatistics_AssetEvent_IsValid(value)");
}

void awd::metrics::LocationMobileAssetStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationEmergencyPOIStatistics::MergeFrom()
{
  __assert_rtn("set_dsaresult", "Location.pb.h", 45419, "::awd::metrics::LocationEmergencyPOIStatistics_DSAResult_IsValid(value)");
}

{
  __assert_rtn("set_submissiontype", "Location.pb.h", 45396, "::awd::metrics::LocationEmergencyPOIStatistics_SubmissionType_IsValid(value)");
}

{
  __assert_rtn("set_loiqueryresult", "Location.pb.h", 45373, "::awd::metrics::LocationEmergencyPOIStatistics_LOIQueryResult_IsValid(value)");
}

{
  __assert_rtn("set_nearestpoitype", "Location.pb.h", 45306, "::awd::metrics::LocationEmergencyPOIStatistics_POIType_IsValid(value)");
}

{
  __assert_rtn("set_nearestpoisource", "Location.pb.h", 45283, "::awd::metrics::LocationEmergencyPOIStatistics_POISource_IsValid(value)");
}

void awd::metrics::LocationEmergencyPOIStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom()
{
  __assert_rtn("set_battery_charging_type", "Location.pb.h", 45622, "::awd::metrics::LocationAccessory_BatteryChargingType_IsValid(value)");
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_DeviceChargingStats::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_Statistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom()
{
  __assert_rtn("set_range_type", "Location.pb.h", 45858, "::awd::metrics::LocationAccessory_PerfRangeType_IsValid(value)");
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PerformanceStats::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom()
{
  __assert_rtn("set_range_type", "Location.pb.h", 46050, "::awd::metrics::LocationAccessory_SpeedPerfRangeType_IsValid(value)");
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom()
{
  __assert_rtn("set_range_type", "Location.pb.h", 46217, "::awd::metrics::LocationAccessory_LatencyRangeType_IsValid(value)");
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_MessageHistogram::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_MessageStats::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom()
{
  __assert_rtn("set_location_type", "Location.pb.h", 46519, "::awd::metrics::LocationAccessory_NMEAscreeningLocType_IsValid(value)");
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom()
{
  __assert_rtn("set_nav_type", "Location.pb.h", 46664, "::awd::metrics::LocationAccessory_NavDynamicsType_IsValid(value)");
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom()
{
  __assert_rtn("set_pascd_transmission_state", "Location.pb.h", 46877, "::awd::metrics::LocationAccessory_PASCDTransmissionStateType_IsValid(value)");
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PASCDStats::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_Coordinate::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::BaroAltitudeCalibrationInfo::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationTilesUsage::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationALSCacheUsage::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationALSNetworkUsage::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationSessionDay::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

uint64_t awd::metrics::LocationTileFileUsage::LocationTileFileUsage(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result)
    JUMPOUT(0x219A1DC64);
  return result;
}

void awd::metrics::LocationTileFileUsage::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationTileFile::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationWifiAPLocationProviderSession::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationWifiTileSync::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_0("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationSignificanceMetric::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom()
{
  __assert_rtn("set_metrictype", "MicroLocation.pb.h", 2240, "::awd::metrics::LocationMicroLocationMetricType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom()
{
  __assert_rtn("set_eventtype", "MicroLocation.pb.h", 2331, "::awd::metrics::MicroLocationRecordingEventType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationEventHistogram::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom()
{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 2571, "::awd::metrics::LOIType_IsValid(value)");
}

{
  __assert_rtn("set_modeltype", "MicroLocation.pb.h", 2523, "::awd::metrics::LocationMicroLocationModelType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationClusteringByModel::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationMetaData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom()
{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 2765, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom()
{
  __assert_rtn("set_modeltype", "MicroLocation.pb.h", 3145, "::awd::metrics::LocationMicroLocationModelType_IsValid(value)");
}

{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 2946, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationUserEventStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom()
{
  __assert_rtn("set_modeltype", "MicroLocation.pb.h", 3195, "::awd::metrics::LocationMicroLocationModelType_IsValid(value)");
}

{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 3172, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom()
{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 3269, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationModelState::MergeFrom()
{
  __assert_rtn("set_modeltype", "MicroLocation.pb.h", 3474, "::awd::metrics::LocationMicroLocationModelType_IsValid(value)");
}

{
  __assert_rtn("set_generationalgorithm", "MicroLocation.pb.h", 3407, "::awd::metrics::LocationMicroLocationGenerationAlgorithm_IsValid(value)");
}

{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 3384, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationModelState::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom()
{
  __assert_rtn("set_modeltype", "MicroLocation.pb.h", 3840, "::awd::metrics::LocationMicroLocationModelType_IsValid(value)");
}

{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 3523, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationClusteringStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationLearningState::MergeFrom()
{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 3889, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationLearningState::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom()
{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 3982, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationAnalyticsState::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationStatistics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingMetaData::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_2("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom()
{
  __assert_rtn("set_locationpeerrangingunlockdecisionalgorithm", "LocationPeerRanging.pb.h", 1027, "::awd::metrics::LocationPeerRangingUnlockDecisionAlgorithm_IsValid(value)");
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_2("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::LocationPeerRangingMeasurementMetrics(_QWORD *a1, uint64_t *a2)
{
  uint64_t result;

  if (*a1)
  {
    OUTLINED_FUNCTION_1_0();
    MEMORY[0x219A1DC64]();
  }
  result = *a2;
  if (*a2)
  {
    OUTLINED_FUNCTION_1_0();
    JUMPOUT(0x219A1DC64);
  }
  return result;
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_2("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingBurstMetrics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_2("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingEarlyTerminateMetrics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_2("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingDecision::MergeFrom()
{
  __assert_rtn("set_reason", "LocationPeerRanging.pb.h", 1405, "::awd::metrics::LocationPeerRangingDecisionReason_IsValid(value)");
}

void awd::metrics::LocationPeerRangingDecision::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_2("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_2("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingMetrics::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_2("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

void wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  MEMORY[0x24BEDD698](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x24BEDD6D8](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  return MEMORY[0x24BEDD6E0](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  return MEMORY[0x24BEDD6E8](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  return MEMORY[0x24BEDD6F8](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  return MEMORY[0x24BEDD700](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x24BEDD708](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x24BEDD720](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x24BEDD728](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x24BEDD748](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x24BEDD750](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x24BEDD778](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage()
{
  return MEMORY[0x24BEDD7E0]();
}

void wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage(wireless_diagnostics::google::protobuf::internal::LogMessage *this)
{
  MEMORY[0x24BEDD7E8](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<()
{
  return MEMORY[0x24BEDD7F0]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::OnShutdown(wireless_diagnostics::google::protobuf::internal *this, void (*a2)(void))
{
  return MEMORY[0x24BEDD808](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=()
{
  return MEMORY[0x24BEDD810]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::VerifyVersion(wireless_diagnostics::google::protobuf::internal *this, uint64_t a2, uint64_t a3, const char *a4)
{
  return MEMORY[0x24BEDD960](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString()
{
  return MEMORY[0x24BEDD968]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes()
{
  return MEMORY[0x24BEDD970]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, float a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x24BEDD978](this, a2, a4, a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x24BEDD988](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x24BEDD990](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, double a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x24BEDD998](this, a2, a4, a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x24BEDD9A0](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString()
{
  return MEMORY[0x24BEDD9B0]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x24BEDD9B8](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x24BEDD9C0](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, const wireless_diagnostics::google::protobuf::MessageLite *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x24BEDD9D8](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline()
{
  return MEMORY[0x24BEDD9F8]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes()
{
  return MEMORY[0x24BEDDA10]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  return MEMORY[0x24BEDDA18](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x24BEDDA20](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x24BEDDA28](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap()
{
  return MEMORY[0x24BEDDA40]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  return MEMORY[0x24BEDDA48](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *this)
{
  return MEMORY[0x24BEDDA50](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete()
{
  return MEMORY[0x24BEDDA58]();
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x24BEDDAB8](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x24BEDAAA8](this, a2);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x24BEDAD00](this, __str);
}

void std::terminate(void)
{
  MEMORY[0x24BEDB6C0]();
}

uint64_t operator delete[]()
{
  return off_24D98DFD0();
}

void operator delete(void *__p)
{
  off_24D98DFD8(__p);
}

uint64_t operator delete()
{
  return off_24D98DFE0();
}

uint64_t operator new[]()
{
  return off_24D98DFE8();
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_24D98DFF0(__sz);
}

uint64_t operator new()
{
  return off_24D98DFF8();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x24BDAC7A0](a1, a2, *(_QWORD *)&a3, a4);
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x24BEDB8F8](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x24BEDB910](a1);
}

void __cxa_free_exception(void *a1)
{
  MEMORY[0x24BEDB930](a1);
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x24BEDB960](a1, lptinfo, a3);
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)MEMORY[0x24BEDB968](lpsrc, lpstype, lpdtype, s2d);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

