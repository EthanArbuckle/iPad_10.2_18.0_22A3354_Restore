BOOL sub_1000042D0(uint64_t a1, uint64_t a2, std::string *a3)
{
  std::string *v4;
  char *v5;
  uint64_t v6;
  unsigned __int8 *v7;
  NSObject *v8;
  std::string *v9;
  NSObject *v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::string *v18;
  NSObject *v19;
  unsigned __int8 v20;
  std::string *v21;
  int v22;
  int v23;
  _BYTE __p[12];
  char v26;

  v4 = (std::string *)a2;
  v5 = (char *)(a2 + 23);
  if (*(char *)(a2 + 23) < 0)
  {
    v6 = *(_QWORD *)(a2 + 8);
    if (!v6)
      return v6 != 0;
  }
  else
  {
    v6 = *(unsigned __int8 *)(a2 + 23);
    if (!*(_BYTE *)(a2 + 23))
      return v6 != 0;
  }
  v7 = sub_100004578((_QWORD *)(a1 + 112), (unsigned __int8 *)a2);
  if (!v7)
  {
    v7 = sub_100004578(qword_10085FD08, (unsigned __int8 *)v4);
    if (!v7)
    {
      v8 = qword_10085EEF8;
      if (os_log_type_enabled((os_log_t)qword_10085EEF8, OS_LOG_TYPE_DEFAULT))
      {
        v9 = v4;
        if (*v5 < 0)
          v9 = (std::string *)v4->__r_.__value_.__r.__words[0];
        *(_DWORD *)__p = 136315138;
        *(_QWORD *)&__p[4] = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "regulatory,comp,getRegulatoryCountryParams,cantFind,country,%s", __p, 0xCu);
      }
      sub_10000BF04(__p, off_100853218[0]);
      v7 = sub_100004578(qword_10085FD08, __p);
      if (v26 < 0)
        operator delete(*(void **)__p);
      v10 = qword_10085EEF8;
      v11 = os_log_type_enabled((os_log_t)qword_10085EEF8, OS_LOG_TYPE_DEFAULT);
      if (!v7)
        sub_1003F0A30(v11, v10, v12, v13, v14, v15, v16, v17);
      if (v11)
      {
        v18 = v4;
        if (*v5 < 0)
          v18 = (std::string *)v4->__r_.__value_.__r.__words[0];
        *(_DWORD *)__p = 136315138;
        *(_QWORD *)&__p[4] = v18;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "regulatory,comp,getRegulatoryCountryParams,cantFind,country,%s,setting it to unknown.", __p, 0xCu);
      }
      std::string::assign(v4, off_100853218[0]);
    }
  }
  v19 = qword_10085EEF8;
  if (os_log_type_enabled((os_log_t)qword_10085EEF8, OS_LOG_TYPE_DEBUG))
    sub_1003F0AA4(v5, v4, v19);
  std::string::operator=(a3, (const std::string *)(v7 + 40));
  std::string::operator=(a3 + 1, (const std::string *)(v7 + 64));
  v20 = v7[90];
  LOWORD(a3[2].__r_.__value_.__l.__data_) = *((_WORD *)v7 + 44);
  v21 = a3 + 2;
  v21->__r_.__value_.__s.__data_[2] = v20;
  v22 = *v5;
  if (v22 < 0)
  {
    if (v4->__r_.__value_.__l.__size_ != 2)
      return v6 != 0;
    v4 = (std::string *)v4->__r_.__value_.__r.__words[0];
  }
  else if (v22 != 2)
  {
    return v6 != 0;
  }
  if (LOWORD(v4->__r_.__value_.__l.__data_) == 20035)
  {
    v23 = *((_DWORD *)sub_100004784() + 144);
    if ((v23 - 19) < 5 || (v23 - 118) <= 3)
    {
      if (os_log_type_enabled((os_log_t)qword_10085EEF8, OS_LOG_TYPE_DEBUG))
        sub_1003F0A78();
      v21->__r_.__value_.__s.__data_[0] = 0;
    }
  }
  return v6 != 0;
}

void sub_100004554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unsigned __int8 *sub_100004578(_QWORD *a1, unsigned __int8 *a2)
{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 **v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;

  v4 = sub_10003AAC4((uint64_t)(a1 + 3), (uint64_t)a2);
  v5 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v5)
    return 0;
  v6 = v4;
  v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    v9 = v4;
    if (v4 >= *(_QWORD *)&v5)
      v9 = v4 % *(_QWORD *)&v5;
  }
  else
  {
    v9 = (*(_QWORD *)&v5 - 1) & v4;
  }
  v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10)
    return 0;
  v11 = *v10;
  if (*v10)
  {
    v12 = (uint64_t)(a1 + 4);
    do
    {
      v13 = *((_QWORD *)v11 + 1);
      if (v13 == v6)
      {
        if ((sub_10003AF6C(v12, v11 + 16, a2) & 1) != 0)
          return v11;
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(_QWORD *)&v5)
            v13 %= *(_QWORD *)&v5;
        }
        else
        {
          v13 &= *(_QWORD *)&v5 - 1;
        }
        if (v13 != v9)
          return 0;
      }
      v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

void *sub_100004678(_BYTE *__dst, void *__src, unint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8)
      sub_10000BD6C();
    v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17)
      v6 = a3 | 7;
    v7 = v6 + 1;
    v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *v5 = v8;
    v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }
  return memmove(v5, __src, a3 + 1);
}

BOOL sub_100004704(uint64_t a1)
{
  void **v2;
  stat v4;

  sub_100004784();
  sub_100004814(off_100852A10, (std::string *)&v4);
  v2 = (void **)(a1 + 64);
  if (*(char *)(a1 + 87) < 0)
    operator delete(*v2);
  *(_OWORD *)v2 = *(_OWORD *)&v4.st_dev;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)&v4.st_uid;
  if (*(char *)(a1 + 87) < 0)
    v2 = (void **)*v2;
  return stat((const char *)v2, &v4) == 0;
}

void *sub_100004784()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008509C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_1008509C0))
  {
    sub_100394ED4(&unk_1008506D0);
    __cxa_atexit((void (*)(void *))sub_10000BB00, &unk_1008506D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008509C0);
  }
  return &unk_1008506D0;
}

void sub_1000047FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008509C0);
  _Unwind_Resume(a1);
}

void sub_100004814(char *a1@<X1>, std::string *a2@<X8>)
{
  void **v4;
  std::string::size_type v5;
  std::string *v6;
  void *__p[2];
  unsigned __int8 v8;
  std::string v9;

  sub_100008E7C((uint64_t)&v9);
  sub_10000BF04(__p, a1);
  if ((v8 & 0x80u) == 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v5 = v8;
  else
    v5 = (std::string::size_type)__p[1];
  v6 = std::string::append(&v9, (const std::string::value_type *)v4, v5);
  *a2 = *v6;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if ((char)v8 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v9.__r_.__value_.__l.__data_);
}

void sub_1000048B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_1000048E8(uint64_t a1)
{
  NSObject *v2;
  int v3;
  NSObject *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  int v13;
  const char *v14;
  __int16 v15;
  int v16;
  __int16 v17;
  const char *v18;

  if (!*(_WORD *)(a1 + 400))
  {
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_FAULT))
      sub_1003E6394();
    v12 = qword_10085B6F0;
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_INFO))
    {
      v13 = 136315650;
      v14 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      v15 = 1024;
      v16 = 445;
      v17 = 2080;
      v18 = "_releaseAssertion";
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", (uint8_t *)&v13, 0x1Cu);
    }
LABEL_19:
    abort();
  }
  --*(_WORD *)(a1 + 400);
  v2 = qword_10085B6F0;
  if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_INFO))
  {
    v3 = *(unsigned __int16 *)(a1 + 400);
    v13 = 67109120;
    LODWORD(v14) = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "regulatory,geo,loc,checkRegulatoryIso,refCountForReleasingAssertion,%d", (uint8_t *)&v13, 8u);
  }
  if (!*(_WORD *)(a1 + 400))
  {
    v4 = qword_10085B6F0;
    if (*(_QWORD *)(a1 + 392))
    {
      v5 = (uint64_t *)(a1 + 392);
      if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_INFO))
      {
        LOWORD(v13) = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "regulatory,geo,loc,checkRegulatoryIso,releaseAssertion", (uint8_t *)&v13, 2u);
      }
      sub_1001D8660(v5, 0, v6, v7, v8, v9, v10, v11);
      return;
    }
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_FAULT))
      sub_1003E63C0();
    v12 = qword_10085B6F0;
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_INFO))
    {
      v13 = 136315650;
      v14 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      v15 = 1024;
      v16 = 451;
      v17 = 2080;
      v18 = "_releaseAssertion";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
}

void sub_100004B10(uint64_t a1)
{
  int v1;
  NSObject *v3;
  int v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  _DWORD __p[3];
  __int16 v9;
  int v10;
  __int16 v11;
  const char *v12;

  v1 = *(unsigned __int16 *)(a1 + 400);
  if (v1 == 0xFFFF)
  {
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_FAULT))
      sub_1003E6268();
    v6 = qword_10085B6F0;
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_INFO))
    {
      __p[0] = 136315650;
      *(_QWORD *)&__p[1] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      v9 = 1024;
      v10 = 432;
      v11 = 2080;
      v12 = "_acquireAssertion";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", (uint8_t *)__p, 0x1Cu);
    }
    abort();
  }
  *(_WORD *)(a1 + 400) = v1 + 1;
  v3 = qword_10085B6F0;
  if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_INFO))
  {
    v4 = *(unsigned __int16 *)(a1 + 400);
    __p[0] = 67109120;
    __p[1] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "regulatory,geo,loc,checkRegulatoryIso,refCountForAcquiringAssertion,%d", (uint8_t *)__p, 8u);
  }
  if (*(_WORD *)(a1 + 400) == 1)
  {
    v5 = qword_10085B6F0;
    if (!*(_QWORD *)(a1 + 392))
    {
      if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_INFO))
      {
        LOWORD(__p[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "regulatory,geo,loc,checkRegulatoryIso,acquireAssertion", (uint8_t *)__p, 2u);
      }
      operator new();
    }
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_FAULT))
      sub_1003E6294();
    v7 = qword_10085B6F0;
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_INFO))
    {
      __p[0] = 136315650;
      *(_QWORD *)&__p[1] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      v9 = 1024;
      v10 = 438;
      v11 = 2080;
      v12 = "_acquireAssertion";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", (uint8_t *)__p, 0x1Cu);
    }
    abort();
  }
}

void sub_100004DAC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  operator delete();
}

uint64_t sub_100004DF0(uint64_t a1, const void **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;
  uint64_t *v8;

  v2 = a1 + 8;
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
    return v2;
  v5 = a1 + 16;
  v6 = a1 + 8;
  do
  {
    v7 = sub_1000272FC(v5, (const void **)(v3 + 32), a2);
    v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      v8 = (uint64_t *)v3;
      v6 = v3;
    }
    v3 = *v8;
  }
  while (*v8);
  if (v6 == v2 || sub_1000272FC(v5, a2, (const void **)(v6 + 32)))
    return v2;
  return v6;
}

void sub_100004E7C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  char **v16;
  NSObject *v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  std::string __str;
  _QWORD v25[6];
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint8_t buf[4];
  _BYTE v35[10];
  uint64_t v36;
  _BYTE v37[10];

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(a1 + 32);
  v30 = 0;
  v31 = &v30;
  v32 = 0x2020000000;
  v33 = 1;
  v26 = 0;
  v27 = &v26;
  v28 = 0x2020000000;
  v29 = 1;
  sub_1000048E8(v7);
  v8 = qword_10085B6F0;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_ERROR))
      sub_1003E6324((uint64_t)v6, v8);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_DEBUG))
      sub_1003E62C0((uint64_t)v5, v8, v9, v10, v11, v12, v13, v14);
    *((_BYTE *)v31 + 24) = 0;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    v25[2] = sub_1002A5A38;
    v25[3] = &unk_100812210;
    v25[4] = &v30;
    v25[5] = &v26;
    objc_msgSend(v5, "enumerateObjectsUsingBlock:", v25);
  }
  v15 = qword_10085B6F0;
  if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_DEBUG))
  {
    v18 = *((unsigned __int8 *)v27 + 24);
    v19 = *(unsigned __int8 *)(a1 + 64);
    v20 = *((unsigned __int8 *)v31 + 24);
    *(_DWORD *)buf = 67175425;
    *(_DWORD *)v35 = v18;
    *(_WORD *)&v35[4] = 1025;
    *(_DWORD *)&v35[6] = v19;
    LOWORD(v36) = 1025;
    *(_DWORD *)((char *)&v36 + 2) = v6 == 0;
    HIWORD(v36) = 1025;
    *(_DWORD *)v37 = v20;
    _os_log_debug_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "regulatory,geo,loc,checkRegulatoryIso,tileMapCoversRegion,%{private}d,tileMapUnrestricted,%{private}d,geoServicesAvailable,%{private}d,geoServicesUnrestricted,%{private}d", buf, 0x1Au);
  }
  memset(&__str, 0, sizeof(__str));
  if (*((_BYTE *)v27 + 24) && *(_BYTE *)(a1 + 64) || !v6 && *((_BYTE *)v31 + 24))
    v16 = off_100853240;
  else
    v16 = off_100853238;
  std::string::assign(&__str, *v16);
  std::string::operator=((std::string *)(v7 + 8), &__str);
  if (*(_QWORD *)(v7 + 120))
  {
    v17 = qword_10085B6F0;
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_DEBUG))
    {
      v21 = v7 + 8;
      if (*(char *)(v7 + 31) < 0)
        v21 = *(_QWORD *)(v7 + 8);
      v22 = *(_QWORD *)(a1 + 40);
      v23 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 136315651;
      *(_QWORD *)v35 = v21;
      *(_WORD *)&v35[8] = 2049;
      v36 = v22;
      *(_WORD *)v37 = 2049;
      *(_QWORD *)&v37[2] = v23;
      _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "regulatory,geo,loc,fOnRegulatoryRegion,%s,ll,%{private}.6f,%{private}.6f", buf, 0x20u);
    }
    sub_100008B6C(v7 + 96, v7 + 8, *(_BYTE *)(a1 + 65), *(double *)(a1 + 56));
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  _Block_object_dispose(&v26, 8);
  _Block_object_dispose(&v30, 8);

}

void sub_100005170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  void *v26;
  void *v27;

  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a26, 8);

  _Unwind_Resume(a1);
}

void sub_1000051BC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v10;
  std::string *v11;
  __int128 v12;
  std::mutex *v13;
  void **v14;
  std::string v15;
  void *__p[2];
  int64_t v17;
  va_list v18;

  v18 = (va_list)&a9;
  v10 = sub_1000053D0();
  sub_100005370((uint64_t)v10, (uint64_t)a1, (uint64_t)&a9);
  sub_10000BF04(&v15, a1);
  v11 = std::string::append(&v15, "\n");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  v17 = v11->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v15.__r_.__value_.__l.__data_);
  v13 = (std::mutex *)sub_1000052EC();
  if (v17 >= 0)
    v14 = __p;
  else
    v14 = (void **)__p[0];
  sub_10000529C(v13, (const char *)v14, v18);
  if (SHIBYTE(v17) < 0)
    operator delete(__p[0]);
}

void sub_10000526C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10000529C(std::mutex *a1, const char *a2, va_list a3)
{
  std::mutex::lock(a1);
  vprintf(a2, a3);
  fflush(__stdoutp);
  std::mutex::unlock(a1);
}

uint64_t *sub_1000052EC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100853200);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_100853200))
  {
    qword_1008531C0 = 850045863;
    unk_1008531C8 = 0u;
    unk_1008531D8 = 0u;
    unk_1008531E8 = 0u;
    qword_1008531F8 = 0;
    __cxa_atexit((void (*)(void *))std::mutex::~mutex, &qword_1008531C0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_100853200);
  }
  return &qword_1008531C0;
}

void sub_100005370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  std::mutex *v7;

  v7 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  os_log_with_args(*(_QWORD *)a1, 0, a2, a3, v3);
  std::mutex::unlock(v7);
}

uint64_t *sub_1000053D0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008531B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_1008531B8))
  {
    qword_100853178 = 850045863;
    xmmword_100853180 = 0u;
    unk_100853190 = 0u;
    xmmword_1008531A0 = 0u;
    qword_1008531B0 = 0;
    qword_100853170 = (uint64_t)os_log_create("com.apple.librose", "client");
    __cxa_atexit((void (*)(void *))sub_10036CDC4, &qword_100853170, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008531B8);
  }
  return &qword_100853170;
}

uint64_t start()
{
  void *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  NSString *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  unsigned int v18;
  PRDaemon *v19;
  void *v20;
  void *v21;
  void *v22;
  unsigned __int8 v23;
  id v25;
  const char *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  id v36;
  uint8_t buf[4];
  const char *v38;
  __int16 v39;
  int v40;
  __int16 v41;
  const char *v42;
  NSFileAttributeKey v43;
  _UNKNOWN **v44;

  v0 = objc_autoreleasePoolPush();
  sub_1000496F8();
  if ((_set_user_dir_suffix("com.apple.nearbyd") & 1) == 0)
  {
    v1 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
      sub_1003CC990(v1, v2, v3, v4, v5, v6, v7, v8);
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v43 = NSFilePosixPermissions;
  v44 = &off_10082BE90;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v44, &v43, 1));
  v11 = NSTemporaryDirectory();
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  v36 = 0;
  objc_msgSend(v9, "setAttributes:ofItemAtPath:error:", v10, v12, &v36);
  v13 = v36;

  if (v13)
  {
    v14 = (id)qword_10085F520;
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      v25 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "description")));
      v26 = (const char *)objc_msgSend(v25, "UTF8String");
      *(_DWORD *)buf = 136315138;
      v38 = v26;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Error while trying to set permissions on temporary directory: %s", buf, 0xCu);

    }
  }
  v15 = objc_autoreleasePoolPush();
  v16 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "starting daemon - ranging service", buf, 2u);
  }
  if (+[NIPlatformInfo isInternalBuild](NIPlatformInfo, "isInternalBuild"))
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    v18 = objc_msgSend(v17, "BOOLForKey:", CFSTR("ForceCrash_Startup"));

    if (v18)
    {
      v27 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
        sub_1003CC95C(v27, v28, v29, v30, v31, v32, v33, v34);
      v35 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315650;
        v38 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/nearbyd.mm";
        v39 = 1024;
        v40 = 48;
        v41 = 2080;
        v42 = "main";
        _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", buf, 0x1Cu);
      }
      abort();
    }
  }
  v19 = objc_alloc_init(PRDaemon);
  -[PRDaemon run](v19, "run");
  objc_autoreleasePoolPop(v15);
  do
  {
    v20 = objc_autoreleasePoolPush();
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop currentRunLoop](NSRunLoop, "currentRunLoop"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate distantFuture](NSDate, "distantFuture"));
    v23 = objc_msgSend(v21, "runMode:beforeDate:", NSDefaultRunLoopMode, v22);

    objc_autoreleasePoolPop(v20);
  }
  while ((v23 & 1) != 0);

  objc_autoreleasePoolPop(v0);
  return 0;
}

void sub_100005828(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1000058A8(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "didDiscoverDevice:", v3);

}

void sub_1000058F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100005A28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_100005A8C(uint64_t a1, int a2, double a3, double a4, double a5, double a6, double a7)
{
  sub_100005A94(*(_QWORD *)(a1 + 32), a2, a3, a4, a5, a6, a7);
}

void sub_100005A94(uint64_t a1, int a2, double a3, double a4, double a5, double a6, double a7)
{
  void *v10;
  unsigned int v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  v18 = a4;
  v19 = a3;
  v16 = a6;
  v17 = a5;
  v10 = sub_100007824();
  v11 = a2 & ~sub_100005B90((uint64_t)v10, &v19, &v18, &v17, &v16);
  v13 = v18;
  v12 = v19;
  v14 = v16;
  v15 = v17;
  *(double *)(a1 + 48) = v19;
  *(double *)(a1 + 56) = v13;
  *(double *)(a1 + 64) = v15;
  *(double *)(a1 + 72) = v14;
  *(_BYTE *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  sub_100005B28(a1 + 160, v12, v13, v14, a7);
  sub_100005C88(a1, v11, v19, v18, v16, a7);
}

uint64_t sub_100005B28(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  double v7;
  double v8;
  double v9;
  double v10;

  v10 = a2;
  v8 = a4;
  v9 = a3;
  v7 = a5;
  v5 = *(_QWORD *)(a1 + 24);
  if (!v5)
    sub_100027BC4();
  return (*(uint64_t (**)(uint64_t, double *, double *, double *, double *))(*(_QWORD *)v5 + 48))(v5, &v10, &v9, &v8, &v7);
}

void sub_100005B74(uint64_t a1, double *a2, double *a3, double *a4, double *a5)
{
  sub_10000614C((double *)(*(_QWORD *)(a1 + 8) + 1040), *a2, *a3, *a4, *a5);
}

uint64_t sub_100005B90(uint64_t a1, double *a2, double *a3, _QWORD *a4, double *a5)
{
  _BOOL4 v9;
  _BOOL4 v10;
  BOOL v12;
  char v15;

  v15 = 0;
  v9 = 0;
  v10 = 0;
  if (sub_1000078EC((uint64_t)off_100853278[0], &v15) && v15 != 0)
  {
    v10 = sub_1003915AC((uint64_t)off_100853280[0], a2);
    v9 = sub_1003915AC((uint64_t)off_100853288[0], a3);
    v12 = sub_1003915AC((uint64_t)off_100853290[0], a5);
    if (v10 && v9)
    {
      if (os_log_type_enabled((os_log_t)qword_10085EEF8, OS_LOG_TYPE_DEBUG))
        sub_1003F0CB4();
      *a4 = 0;
    }
    if (!v12)
      *a5 = 0.0;
  }
  return v10 & v9;
}

void sub_100005C88(uint64_t a1, int a2, double a3, double a4, double a5, double a6)
{
  double v12;
  double v13;
  NSObject *v14;
  char v15;
  id v16;
  uint64_t v17;
  _QWORD v18[8];
  char v19;
  char v20;
  double v21;
  double v22;
  uint8_t buf[4];
  double v24;
  __int16 v25;
  double v26;
  __int16 v27;
  double v28;
  __int16 v29;
  int v30;
  __int16 v31;
  double v32;
  __int16 v33;
  uint64_t v34;

  v21 = a4;
  v22 = a3;
  v12 = sub_10000883C();
  if (!*(_BYTE *)(a1 + 32))
    goto LABEL_4;
  v13 = *(double *)(a1 + 40);
  if (v12 <= v13)
    sub_1003E6240();
  if (v12 - v13 >= 600.0)
  {
LABEL_4:
    v14 = qword_10085B6F0;
    if (os_log_type_enabled((os_log_t)qword_10085B6F0, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134284801;
      v24 = a3;
      v25 = 2049;
      v26 = a4;
      v27 = 2049;
      v28 = a5;
      v29 = 1025;
      v30 = a2;
      v31 = 2049;
      v32 = a6;
      v33 = 2048;
      v34 = 0x4082C00000000000;
      _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "regulatory,geo,loc,checkRegulatoryIso,lat,%{private}.6f,lon,%{private}.6f,unc,%{private}.2f,isLastKnownLocation,%{private}d,ts,%{private}.2f,checkInterval,%.2f", buf, 0x3Au);
    }
    *(double *)(a1 + 40) = v12;
    *(_BYTE *)(a1 + 32) = 1;
    if (sub_100004704(a1 + 224))
      v15 = sub_100005EBC(a1 + 224, &v22, &v21);
    else
      v15 = 1;
    sub_100004B10(a1);
    v16 = objc_msgSend(objc_alloc((Class)GEOLocation), "initWithGEOCoordinate:", v22, v21);
    objc_msgSend(v16, "setHorizontalAccuracy:", a5);
    v17 = *(_QWORD *)a1;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100004E7C;
    v18[3] = &unk_100812230;
    v18[4] = a1;
    v19 = v15;
    *(double *)&v18[5] = v22;
    *(double *)&v18[6] = v21;
    v20 = a2;
    *(double *)&v18[7] = a6;
    +[GEOGeographicMetadataRequester fetchPossibleTerritoriesForLocation:responseQueue:responseBlock:](GEOGeographicMetadataRequester, "fetchPossibleTerritoriesForLocation:responseQueue:responseBlock:", v16, v17, v18);

  }
}

void sub_100005EA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_100005EBC(uint64_t a1, double *a2, long double *a3)
{
  int v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  _DWORD *v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t v30;
  _BYTE v31[15];

  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEBUG))
    sub_1003D2090();
  v6 = vcvtmd_s64_f64((*a2 + 90.0) * 10.0) + (int)(floor(*a3 * 10.0) * 100000.0);
  v7 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEBUG))
    sub_1003D2000((unsigned __int8 *)a1, v6, v7);
  if (*(_BYTE *)a1 && v6 == *(_DWORD *)(a1 + 4))
  {
    v8 = *(unsigned __int8 *)(a1 + 8);
    v9 = (_DWORD)v8 != 0;
    v10 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEBUG))
      sub_1003D1F98(v8, v10, v11, v12, v13, v14, v15, v16);
  }
  else
  {
    v17 = a1 + 16;
    v18 = *(_QWORD *)(a1 + 24);
    if (v18 == a1 + 16)
    {
LABEL_14:
      *(_BYTE *)a1 = 0;
      *(_DWORD *)(a1 + 4) = 0;
      *(_BYTE *)(a1 + 8) = 0;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEBUG))
        sub_1003D1E9C();
      v9 = sub_100179C50(a1, *a2, *a3);
      if ((_DWORD)v9)
      {
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEBUG))
          sub_1003D1E70();
        v20 = operator new(0x18uLL);
        v20[4] = v6;
        v21 = *(_QWORD *)(a1 + 16);
        *(_QWORD *)v20 = v21;
        *((_QWORD *)v20 + 1) = v17;
        *(_QWORD *)(v21 + 8) = v20;
        *(_QWORD *)(a1 + 16) = v20;
        ++*(_QWORD *)(a1 + 32);
      }
      *(_BYTE *)a1 = 1;
      *(_DWORD *)(a1 + 4) = v6;
      *(_BYTE *)(a1 + 8) = v9;
      v22 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEBUG))
        sub_1003D1E08(v9, v22, v23, v24, v25, v26, v27, v28);
    }
    else
    {
      while (1)
      {
        v19 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEBUG))
          sub_1003D1F5C(&v30, v31, v19);
        if (v6 == *(_DWORD *)(v18 + 16))
          break;
        v18 = *(_QWORD *)(v18 + 8);
        if (v18 == v17)
          goto LABEL_14;
      }
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEBUG))
        sub_1003D1F30();
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEBUG))
        sub_1003D1F04();
      return 1;
    }
  }
  return v9;
}

void sub_10000614C(double *a1, double a2, double a3, double a4, double a5)
{
  double v9;

  v9 = CFAbsoluteTimeGetCurrent() - a5;
  if (v9 < a1[2])
  {
    a1[67] = a2;
    a1[68] = a3;
    a1[69] = a4;
    a1[70] = v9;
    sub_1000061C4((uint64_t)(a1 + 35), 2);
    *(_OWORD *)(a1 + 67) = 0u;
    *(_OWORD *)(a1 + 69) = 0u;
  }
}

uint64_t sub_1000061C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unsigned int v6;
  uint64_t **v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t);
  _QWORD *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t **v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  int v22;
  uint64_t v23;
  uint64_t **v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  int v29;
  int v30;
  int *v31;

  ++*(_DWORD *)(a1 + 112);
  v2 = *(unsigned int *)(a1 + 4);
  v30 = *(_DWORD *)(a1 + 4);
  v3 = *(_QWORD *)(a1 + 32);
  if (!v3)
    sub_1003D2C24();
  if (!*(_BYTE *)(a1 + 48))
    sub_1003D2C4C();
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    goto LABEL_13;
  v6 = a2;
  v7 = (uint64_t **)(a1 + 8);
  v8 = a1 + 16;
  do
  {
    v9 = *(_DWORD *)(v5 + 32);
    v10 = v9 < (int)v2;
    if (v9 >= (int)v2)
      v11 = (uint64_t *)v5;
    else
      v11 = (uint64_t *)(v5 + 8);
    if (!v10)
      v8 = v5;
    v5 = *v11;
  }
  while (*v11);
  if (v8 == a1 + 16 || (int)v2 < *(_DWORD *)(v8 + 32))
LABEL_13:
    sub_1003D2C74();
  v13 = *(uint64_t (**)(_QWORD *, uint64_t))(v8 + 40);
  v12 = *(_QWORD *)(v8 + 48);
  v14 = (_QWORD *)(v3 + (v12 >> 1));
  if ((v12 & 1) != 0)
    v13 = *(uint64_t (**)(_QWORD *, uint64_t))(*v14 + v13);
  v15 = v13(v14, a2);
  v16 = v15;
  v29 = v15;
  if (v6 <= 1 && v15 != (_DWORD)v2)
    sub_1003D2CEC();
  if (v15 != (_DWORD)v2)
  {
    v17 = *(_QWORD *)(a1 + 32);
    v31 = &v30;
    v18 = sub_1001842C8(v7, &v30, (uint64_t)&unk_100472CF8, &v31);
    v19 = v18[5];
    v20 = (uint64_t)v18[6];
    v21 = (_QWORD *)(v17 + (v20 >> 1));
    if ((v20 & 1) != 0)
      v19 = *(uint64_t **)(*v21 + v19);
    v22 = ((uint64_t (*)(_QWORD *, uint64_t))v19)(v21, 1);
    if (v22 != v30)
      sub_1003D2CC4();
    *(_DWORD *)(a1 + 4) = v16;
    v23 = *(_QWORD *)(a1 + 32);
    v31 = &v29;
    v24 = sub_1001842C8(v7, &v29, (uint64_t)&unk_100472CF8, &v31);
    v25 = v24[5];
    v26 = (uint64_t)v24[6];
    v27 = (_QWORD *)(v23 + (v26 >> 1));
    if ((v26 & 1) != 0)
      v25 = *(uint64_t **)(*v27 + v25);
    v2 = ((uint64_t (*)(_QWORD *, _QWORD))v25)(v27, 0);
    if ((_DWORD)v2 != v29)
      sub_1003D2C9C();
  }
  --*(_DWORD *)(a1 + 112);
  return v2;
}

uint64_t sub_100006370(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  if (a2 == 7)
  {
    result = sub_10026416C(a1);
    if ((_DWORD)result)
    {
      if (*(_BYTE *)(a1 + 440))
        return 2;
      else
        return 1;
    }
  }
  else
  {
    if (!a2)
    {
      v5 = 1;
      v3 = *(_QWORD *)(a1 + 472);
      if (!v3)
        sub_100027BC4();
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v3 + 48))(v3, &v5);
    }
    return 0;
  }
  return result;
}

id sub_1000063F0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "isInterestedInSamplesForDevice:", *(_QWORD *)(a1 + 40));
  if ((_DWORD)result)
    return objc_msgSend(*(id *)(a1 + 32), "consumeBluetoothSample:", *(_QWORD *)(a1 + 48));
  return result;
}

void sub_1000064A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1000064C0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  unsigned __int8 v8;
  NSObject *v9;
  uint8_t v10[16];

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = atomic_load((unsigned __int8 *)(v7 + 144));
  if ((v8 & 1) != 0)
  {
    if (v5 && v6)
      sub_100006584(v7, v5, v6);
  }
  else
  {
    v9 = qword_10085B8B0;
    if (os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,geo,mcc,notMonitoring", v10, 2u);
    }
  }

}

void sub_100006570(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100006584(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  char v9;
  uint64_t **v10;
  uint64_t *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  NSObject *v21;
  int v22;
  uint64_t **v23;
  void **v24;
  const char *v25;
  uint64_t **v26;
  _QWORD *v27;
  void *__p[2];
  uint64_t *v29;
  void *v30[2];
  char v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL4 v35;
  int *v36;
  _BYTE buf[12];
  __int16 v38;
  int v39;
  __int16 v40;
  const char *v41;
  __int16 v42;
  _QWORD *v43;

  v5 = a2;
  v6 = a3;
  if (*(_BYTE *)(a1 + 112) == 1)
  {
    v7 = qword_10085B8B0;
    if (os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,geo,mcc,processCellInfo,ignoreInAirplaneMode", buf, 2u);
    }
  }
  else
  {
    v35 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v8 = sub_100006910(a1, v5, &v35);
    if ((_DWORD)v8)
    {
      v9 = sub_100006A04(v8, v6, (uint64_t)&v32);
      *(_QWORD *)buf = &v35;
      v10 = sub_10000725C((uint64_t **)(a1 + 32), (int *)&v35, (uint64_t)&unk_100472CF8, (_DWORD **)buf);
      if (*((char *)v10 + 63) < 0)
        v11 = v10[6];
      else
        v11 = (uint64_t *)*((unsigned __int8 *)v10 + 63);
      if (v11)
        v20 = v9;
      else
        v20 = 1;
      if ((v20 & 1) != 0)
      {
        sub_1000070F0(a1, v35, (uint64_t)&v32, 0);
      }
      else
      {
        v21 = (id)qword_10085B8B0;
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
        {
          v24 = v30;
          sub_1002C52F0(v35, v30);
          if (v31 < 0)
            v24 = (void **)v30[0];
          if (SHIBYTE(v34) < 0)
          {
            if (v33)
              v25 = (const char *)v32;
            else
              v25 = "__";
          }
          else if (HIBYTE(v34))
          {
            v25 = (const char *)&v32;
          }
          else
          {
            v25 = "__";
          }
          v36 = (int *)&v35;
          v26 = sub_10000725C((uint64_t **)(a1 + 32), (int *)&v35, (uint64_t)&unk_100472CF8, &v36);
          v27 = v26 + 5;
          if (*((char *)v26 + 63) < 0)
            v27 = (_QWORD *)*v27;
          *(_DWORD *)buf = 136315906;
          *(_QWORD *)&buf[4] = v24;
          v38 = 1024;
          v39 = 0;
          v40 = 2080;
          v41 = v25;
          v42 = 2080;
          v43 = v27;
          _os_log_debug_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "#regulatory,regulatory,geo,mcc,onCellMonitorUpdate,slot:%s,mccValid:%d,mcc:%s,fCurrentIsoFromMcc:%s,downgradingCurrentToLastKnown", buf, 0x26u);
          if (v31 < 0)
            operator delete(v30[0]);
        }

        v22 = v35;
        *(_QWORD *)buf = &v35;
        v23 = sub_10000725C((uint64_t **)(a1 + 32), (int *)&v35, (uint64_t)&unk_100472CF8, (_DWORD **)buf);
        if (*((char *)v23 + 63) < 0)
        {
          sub_100004678(__p, v23[5], (unint64_t)v23[6]);
        }
        else
        {
          *(_OWORD *)__p = *(_OWORD *)(v23 + 5);
          v29 = v23[7];
        }
        sub_100007320(a1, v22, (const char *)__p, 1);
        if (SHIBYTE(v29) < 0)
          operator delete(__p[0]);
      }
    }
    else
    {
      v12 = qword_10085B8B0;
      if (os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_ERROR))
        sub_1003E758C(v12, v13, v14, v15, v16, v17, v18, v19);
    }
    if (SHIBYTE(v34) < 0)
      operator delete(v32);
  }

}

void sub_1000068A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  void *v27;
  void *v28;
  void *v29;

  if (a21 < 0)
    operator delete(__p);

  if (a27 < 0)
    operator delete(a22);

  _Unwind_Resume(a1);
}

uint64_t sub_100006910(uint64_t a1, void *a2, _BOOL4 *a3)
{
  id v5;
  _BOOL4 v6;
  id v7;
  uint64_t v8;

  v5 = a2;
  if (sub_1000069CC(*(_DWORD *)(a1 + 116)))
  {
    if (objc_msgSend(v5, "slotID") == (id)1 || objc_msgSend(v5, "slotID") == (id)2)
    {
      v6 = objc_msgSend(v5, "slotID") != (id)1;
LABEL_7:
      *a3 = v6;
      v8 = 1;
      goto LABEL_9;
    }
LABEL_8:
    v8 = 0;
    goto LABEL_9;
  }
  if (!sub_100360F30(*(_DWORD *)(a1 + 116)))
    goto LABEL_8;
  v7 = objc_msgSend(v5, "slotID");
  v6 = 0;
  v8 = 0;
  if (v7 == (id)1)
    goto LABEL_7;
LABEL_9:

  return v8;
}

void sub_1000069BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL sub_1000069CC(int a1)
{
  return (a1 - 100) >= 0x16 && (a1 - 200) >= 2 && a1 != 999 && a1 != 997;
}

uint64_t sub_100006A04(uint64_t a1, void *a2, uint64_t a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  CFIndex Count;
  CFIndex v9;
  const __CFDictionary *ValueAtIndex;
  const __CFDictionary *v11;
  CFTypeID v12;
  const void *Value;
  const void *v14;
  CFTypeID v15;
  const __CFNumber *v16;
  const __CFNumber *v17;
  CFTypeID v18;
  NSObject *v19;
  const void *v20;
  const void *v21;
  CFTypeID v22;
  _BOOL4 v23;
  const __CFNumber *v24;
  const __CFNumber *v25;
  CFTypeID v26;
  NSObject *v27;
  const __CFNumber *v28;
  const __CFNumber *v29;
  CFTypeID v30;
  int v31;
  int v32;
  NSObject *v33;
  uint64_t v34;
  NSObject *v35;
  const char *v36;
  uint64_t v37;
  NSObject *v38;
  const __CFArray *v39;
  const __CFArray *v40;
  CFTypeID v41;
  const __CFNumber *v42;
  CFTypeID v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  CFTypeRef v49;
  CFTypeRef v50;
  void *v51;
  void *v52;
  void *v53;
  CFTypeRef v54;
  void *v55;
  void *v56;
  CFTypeRef cf2;
  void *key;
  uint64_t v59;
  int __val;
  std::string buf;

  v4 = a2;
  v5 = v4;
  __val = -1;
  if (*(char *)(a3 + 23) < 0)
  {
    **(_BYTE **)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    if (!v4)
    {
LABEL_71:
      v47 = 0;
      goto LABEL_72;
    }
  }
  else
  {
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 23) = 0;
    if (!v4)
      goto LABEL_71;
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "legacyInfo"));

  if (!v6)
    goto LABEL_71;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "legacyInfo"));

  Count = CFArrayGetCount((CFArrayRef)v7);
  if (Count < 1)
    goto LABEL_71;
  v9 = 0;
  key = (void *)kCTCellMonitorCellType;
  cf2 = (CFTypeRef)kCTCellMonitorCellTypeServing;
  v56 = (void *)kCTCellMonitorMCC;
  v55 = (void *)kCTCellMonitorCellRadioAccessTechnology;
  v54 = (CFTypeRef)kCTCellMonitorRadioAccessTechnologyCDMA1x;
  v50 = (CFTypeRef)kCTCellMonitorRadioAccessTechnologyCDMAEVDO;
  v49 = (CFTypeRef)kCTCellMonitorRadioAccessTechnologyCDMAHybrid;
  v51 = (void *)kCTCellMonitorDerivedMCC;
  v53 = (void *)kCTCellMonitorSID;
  v52 = (void *)kCTCellMonitorNID;
  while (1)
  {
    ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex((CFArrayRef)v7, v9);
    v11 = ValueAtIndex;
    if (!ValueAtIndex || (v12 = CFGetTypeID(ValueAtIndex), v12 != CFDictionaryGetTypeID()))
    {
      v34 = qword_10085B8B0;
      if (!os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEFAULT))
        goto LABEL_44;
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      v35 = v34;
      v36 = "#regulatory,lvalue cellDict is not of type CFDictionary";
LABEL_43:
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, v36, (uint8_t *)&buf, 2u);
      goto LABEL_44;
    }
    Value = CFDictionaryGetValue(v11, key);
    v14 = Value;
    if (!Value || (v15 = CFGetTypeID(Value), v15 != CFStringGetTypeID()))
    {
      v37 = qword_10085B8B0;
      if (!os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEFAULT))
        goto LABEL_44;
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      v35 = v37;
      v36 = "#regulatory,lvalue cellType is not of type CFString";
      goto LABEL_43;
    }
    if (!CFEqual(v14, cf2))
      goto LABEL_44;
    v16 = (const __CFNumber *)CFDictionaryGetValue(v11, v56);
    v17 = v16;
    if (!v16 || (v18 = CFGetTypeID(v16), v18 != CFNumberGetTypeID()))
    {
      v19 = qword_10085B8B0;
      if (os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#regulatory,lvalue mccRef is not of type CFNumber", (uint8_t *)&buf, 2u);
      }
      v17 = 0;
    }
    v20 = CFDictionaryGetValue(v11, v55);
    v21 = v20;
    if (!v20 || (v22 = CFGetTypeID(v20), v22 != CFStringGetTypeID()))
    {
      v38 = qword_10085B8B0;
      if (os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "#regulatory,lvalue ratStr is not of type CFString", (uint8_t *)&buf, 2u);
      }
      if (v17)
        goto LABEL_65;
      goto LABEL_44;
    }
    if (!CFEqual(v21, v54) && !CFEqual(v21, v50))
      break;
    v23 = 1;
    if (v17)
      goto LABEL_23;
LABEL_51:
    if (v17)
      goto LABEL_65;
    if (v23 && CFDictionaryContainsKey(v11, v51))
    {
      v39 = (const __CFArray *)CFDictionaryGetValue(v11, v51);
      v40 = v39;
      if (!v39 || (v41 = CFGetTypeID(v39), v41 != CFArrayGetTypeID()))
      {
        v45 = qword_10085B8B0;
        if (!os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEFAULT))
          goto LABEL_44;
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        v35 = v45;
        v36 = "#regulatory,lvalue derivedMccList is not of type CFArray";
        goto LABEL_43;
      }
      if (CFArrayGetCount(v40) >= 1)
      {
        v42 = (const __CFNumber *)CFArrayGetValueAtIndex(v40, 0);
        v17 = v42;
        if (v42)
        {
          v43 = CFGetTypeID(v42);
          if (v43 == CFNumberGetTypeID())
            goto LABEL_65;
        }
        v44 = qword_10085B8B0;
        if (os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(buf.__r_.__value_.__l.__data_) = 0;
          v35 = v44;
          v36 = "#regulatory,lvalue mccRef is not of type CFNumber";
          goto LABEL_43;
        }
      }
    }
LABEL_44:
    if (Count == ++v9)
      goto LABEL_71;
  }
  v23 = CFEqual(v21, v49) != 0;
  if (!v17)
    goto LABEL_51;
LABEL_23:
  if (!v23)
    goto LABEL_51;
  v59 = -1;
  if (!CFDictionaryContainsKey(v11, v53) || !CFDictionaryContainsKey(v11, v52))
    goto LABEL_65;
  v24 = (const __CFNumber *)CFDictionaryGetValue(v11, v53);
  v25 = v24;
  if (!v24 || (v26 = CFGetTypeID(v24), v26 != CFNumberGetTypeID()))
  {
    v27 = qword_10085B8B0;
    if (os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "#regulatory,lvalue sid is not of type CFNumber", (uint8_t *)&buf, 2u);
    }
    v25 = 0;
  }
  v28 = (const __CFNumber *)CFDictionaryGetValue(v11, v52);
  v29 = v28;
  if (v28)
  {
    v30 = CFGetTypeID(v28);
    if (v30 == CFNumberGetTypeID())
    {
      if (!v25)
        goto LABEL_65;
      v31 = CFNumberGetValue(v25, kCFNumberIntType, (char *)&v59 + 4);
      v32 = CFNumberGetValue(v29, kCFNumberIntType, &v59);
      if (!v31 || !v32 || v59)
        goto LABEL_65;
      v33 = qword_10085B8B0;
      if (os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(buf.__r_.__value_.__l.__data_) = 138412802;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
        *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = HIDWORD(v59);
        WORD1(buf.__r_.__value_.__r.__words[2]) = 1024;
        HIDWORD(buf.__r_.__value_.__r.__words[2]) = v59;
        _os_log_debug_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "#regulatory,regulatory,geo,mcc,cdmaRatWithInvalidContents,mcc:%@,sid:%d,nid:%d", (uint8_t *)&buf, 0x18u);
      }
      goto LABEL_44;
    }
  }
  v46 = qword_10085B8B0;
  if (os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "#regulatory,lvalue nid is not of type CFNumber", (uint8_t *)&buf, 2u);
  }
LABEL_65:
  if (!CFNumberGetValue(v17, kCFNumberIntType, &__val) || !__val)
  {
    std::string::assign((std::string *)a3, "000");
    goto LABEL_71;
  }
  std::to_string(&buf, __val);
  if (*(char *)(a3 + 23) < 0)
    operator delete(*(void **)a3);
  *(std::string *)a3 = buf;
  v47 = 1;
LABEL_72:

  return v47;
}

void sub_10000709C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000070F0(uint64_t a1, int a2, uint64_t a3, int a4)
{
  NSObject *v4;
  uint64_t v7;
  uint64_t **v8;
  int v9;
  std::string __p;
  std::string v11;
  std::string __str;
  int v13;

  v13 = a2;
  if (*(_BYTE *)(a1 + 112) == 1)
  {
    v4 = qword_10085B8B0;
    if (os_log_type_enabled((os_log_t)qword_10085B8B0, OS_LOG_TYPE_DEBUG))
      sub_1003E7688(v4);
  }
  else
  {
    memset(&__str, 0, sizeof(__str));
    v7 = *(unsigned __int8 *)(a3 + 23);
    if ((v7 & 0x80u) != 0)
      v7 = *(_QWORD *)(a3 + 8);
    if (v7)
    {
      sub_100008F54(a1, (const void **)a3, (__int128 *)&v11);
      __str = v11;
    }
    v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v13;
    v8 = sub_10000725C((uint64_t **)(a1 + 32), &v13, (uint64_t)&unk_100472CF8, &v11);
    std::string::operator=((std::string *)(v8 + 5), &__str);
    v9 = v13;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      sub_100004678(&__p, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
    else
      __p = __str;
    sub_100007320(a1, v9, (const char *)&__p, a4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_100007224(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_10000725C(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t *v6;
  uint64_t **v7;
  int v8;
  uint64_t **v9;
  int v10;
  _DWORD *v11;

  v7 = a1 + 1;
  v6 = a1[1];
  if (v6)
  {
    v8 = *a2;
    while (1)
    {
      while (1)
      {
        v9 = (uint64_t **)v6;
        v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10)
          break;
        v6 = *v9;
        v7 = v9;
        if (!*v9)
          goto LABEL_10;
      }
      if (v10 >= v8)
        break;
      v6 = v9[1];
      if (!v6)
      {
        v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v9 = a1 + 1;
LABEL_10:
    v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((_QWORD *)v11 + 6) = 0;
    *((_QWORD *)v11 + 7) = 0;
    *((_QWORD *)v11 + 5) = 0;
    sub_1000272A8(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

uint64_t sub_100007320(uint64_t a1, int a2, const char *a3, int a4)
{
  uint64_t result;
  int v8;
  double v9;
  uint64_t **v10;
  double v11;
  int v12;
  uint64_t **v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  int v17;
  const void **v18;
  const char *v19;
  _BOOL4 v20;
  int v21;
  NSObject *v22;
  int v23;
  uint64_t **v24;
  void **v25;
  char *v26;
  void *__p[2];
  uint64_t v28;
  void *v29[2];
  char v30;
  int v31;
  _BYTE buf[12];
  __int16 v33;
  char *v34;
  __int16 v35;
  int v36;
  __int16 v37;
  int v38;
  __int16 v39;
  _BOOL4 v40;

  v31 = a2;
  sub_100007824();
  result = sub_1000078B4();
  if (!*(_QWORD *)(a1 + 80))
    return result;
  v8 = result;
  if ((_DWORD)result)
  {
    a4 = 0;
    if (a3[23] < 0)
    {
      **(_BYTE **)a3 = 0;
      *((_QWORD *)a3 + 1) = 0;
    }
    else
    {
      *a3 = 0;
      *((_BYTE *)a3 + 23) = 0;
    }
  }
  v9 = sub_10000883C();
  v10 = (uint64_t **)(a1 + 120);
  *(_QWORD *)buf = &v31;
  v11 = v9 - *((double *)sub_100007758((uint64_t **)(a1 + 120), &v31, (uint64_t)&unk_100472CF8, (_DWORD **)buf) + 10);
  if (v11 > 3600.0)
    goto LABEL_27;
  v12 = v31;
  *(_QWORD *)buf = &v31;
  if (!*((_BYTE *)sub_100007758((uint64_t **)(a1 + 120), &v31, (uint64_t)&unk_100472CF8, (_DWORD **)buf) + 40))
    goto LABEL_27;
  *(_QWORD *)buf = &v31;
  v13 = sub_100007758((uint64_t **)(a1 + 120), &v31, (uint64_t)&unk_100472CF8, (_DWORD **)buf);
  v14 = *((unsigned __int8 *)v13 + 71);
  if ((v14 & 0x80u) == 0)
    v15 = (uint64_t *)*((unsigned __int8 *)v13 + 71);
  else
    v15 = v13[7];
  v16 = (uint64_t *)*((unsigned __int8 *)a3 + 23);
  v17 = (char)v16;
  if ((char)v16 < 0)
    v16 = (uint64_t *)*((_QWORD *)a3 + 1);
  if (v15 != v16)
    goto LABEL_27;
  v18 = (const void **)(v13 + 6);
  if (v17 >= 0)
    v19 = a3;
  else
    v19 = *(const char **)a3;
  if ((v14 & 0x80) == 0)
  {
    if (*((_BYTE *)v13 + 71))
    {
      while (*(unsigned __int8 *)v18 == *(unsigned __int8 *)v19)
      {
        v18 = (const void **)((char *)v18 + 1);
        ++v19;
        if (!--v14)
          goto LABEL_23;
      }
      goto LABEL_27;
    }
LABEL_23:
    v20 = (v12 & 0xFFFFFFFE) == 2;
    *(_QWORD *)buf = &v31;
    result = (uint64_t)sub_100007758((uint64_t **)(a1 + 120), &v31, (uint64_t)&unk_100472CF8, (_DWORD **)buf);
    v21 = *(unsigned __int8 *)(result + 72) != a4 || v20;
    if (v21 != 1)
      return result;
    goto LABEL_27;
  }
  if (!memcmp(*v18, v19, (size_t)v13[7]))
    goto LABEL_23;
LABEL_27:
  v22 = (id)qword_10085B8B0;
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
  {
    sub_10000BF04(v29, off_1008136E8[v31]);
    v25 = v30 >= 0 ? v29 : (void **)v29[0];
    if (a3[23] < 0)
      v26 = *((_QWORD *)a3 + 1) ? *(char **)a3 : "__";
    else
      v26 = a3[23] ? (char *)a3 : "__";
    *(_DWORD *)buf = 136316162;
    *(_QWORD *)&buf[4] = v25;
    v33 = 2080;
    v34 = v26;
    v35 = 1024;
    v36 = a4;
    v37 = 1024;
    v38 = v8;
    v39 = 1024;
    v40 = v11 > 3600.0;
    _os_log_debug_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "#regulatory,regulatory,geo,mcc,bubbledUp,slot:%s,mcc:%s,isLastKnown:%d,simulateOOS:%d,isMccUpdateOld:%d", buf, 0x28u);
    if (v30 < 0)
      operator delete(v29[0]);
  }

  v23 = v31;
  if (a3[23] < 0)
  {
    sub_100004678(__p, *(void **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v28 = *((_QWORD *)a3 + 2);
  }
  sub_1002C6574(a1 + 56, v23, (uint64_t)__p, a4);
  if (SHIBYTE(v28) < 0)
    operator delete(__p[0]);
  *(_QWORD *)buf = &v31;
  *((_BYTE *)sub_100007758(v10, &v31, (uint64_t)&unk_100472CF8, (_DWORD **)buf) + 40) = 1;
  *(_QWORD *)buf = &v31;
  v24 = sub_100007758(v10, &v31, (uint64_t)&unk_100472CF8, (_DWORD **)buf);
  std::string::operator=((std::string *)v24 + 2, (const std::string *)a3);
  *(_QWORD *)buf = &v31;
  *((_BYTE *)sub_100007758(v10, &v31, (uint64_t)&unk_100472CF8, (_DWORD **)buf) + 72) = a4;
  *(_QWORD *)buf = &v31;
  result = (uint64_t)sub_100007758(v10, &v31, (uint64_t)&unk_100472CF8, (_DWORD **)buf);
  *(double *)(result + 80) = v9;
  return result;
}

void sub_100007728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

uint64_t **sub_100007758(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t *v6;
  uint64_t **v7;
  int v8;
  uint64_t **v9;
  int v10;
  char *v11;

  v7 = a1 + 1;
  v6 = a1[1];
  if (v6)
  {
    v8 = *a2;
    while (1)
    {
      while (1)
      {
        v9 = (uint64_t **)v6;
        v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10)
          break;
        v6 = *v9;
        v7 = v9;
        if (!*v9)
          goto LABEL_10;
      }
      if (v10 >= v8)
        break;
      v6 = v9[1];
      if (!v6)
      {
        v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v9 = a1 + 1;
LABEL_10:
    v11 = (char *)operator new(0x58uLL);
    *((_DWORD *)v11 + 8) = **a4;
    *(_OWORD *)(v11 + 72) = 0u;
    *(_OWORD *)(v11 + 56) = 0u;
    *(_OWORD *)(v11 + 40) = 0u;
    sub_1000272A8(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

void *sub_100007824()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100852918);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_100852918))
  {
    sub_10038F838(&unk_100852838);
    __cxa_atexit((void (*)(void *))sub_1001D8D70, &unk_100852838, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_100852918);
  }
  return &unk_100852838;
}

void sub_10000789C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100852918);
  _Unwind_Resume(a1);
}

uint64_t sub_1000078B4()
{
  uint64_t result;
  char v1;

  v1 = 0;
  LODWORD(result) = sub_1000078EC((uint64_t)off_1008532A8[0], &v1);
  if (v1)
    return result;
  else
    return 0;
}

BOOL sub_1000078EC(uint64_t a1, _BYTE *a2)
{
  void *v3;
  void *v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v5 = v4;
  if (v4)
    *a2 = objc_msgSend(v4, "BOOLForKey:", v3);

  return v5 != 0;
}

void sub_100007964(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100008050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_1000085F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  void *v33;

  if (a33 < 0)
    operator delete(__p);

  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

double sub_100008778(unint64_t a1)
{
  double v2;
  uint32_t denom;
  uint32_t numer;
  uint32_t v5;
  unsigned int v6;
  uint32_t v7;
  uint32_t v8;
  mach_timebase_info info;

  v2 = *(double *)&qword_100853A18;
  if (*(double *)&qword_100853A18 == 0.0)
  {
    if (mach_timebase_info(&info))
      sub_1003CB7AC();
    if (info.denom)
    {
      denom = info.denom;
      numer = info.numer;
      do
      {
        v5 = denom;
        denom = numer % denom;
        numer = v5;
      }
      while (denom);
    }
    else
    {
      v5 = info.numer;
    }
    v6 = 1000000000;
    v7 = info.numer / v5;
    do
    {
      v8 = v7;
      v7 = v6;
      v6 = v8 % v6;
    }
    while (v6);
    v2 = (double)(info.numer / v5 / v7) / (double)(0x3B9ACA00 / v7 * (unint64_t)(info.denom / v5));
    *(double *)&qword_100853A18 = v2;
  }
  return v2 * (double)a1;
}

double sub_10000883C()
{
  uint64_t v0;

  v0 = mach_continuous_time();
  return sub_100008778(v0);
}

uint64_t *sub_100008850@<X0>(unsigned int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t *result;
  __int128 v7;

  v3 = qword_100859D68;
  if (!qword_100859D68)
    return sub_10000BF04(a2, "");
  v4 = *a1;
  while (1)
  {
    v5 = *(_DWORD *)(v3 + 32);
    if (v4 >= v5)
      break;
LABEL_6:
    v3 = *(_QWORD *)v3;
    if (!v3)
      return sub_10000BF04(a2, "");
  }
  if (v5 < v4)
  {
    v3 += 8;
    goto LABEL_6;
  }
  result = sub_100231D18((uint64_t)&unk_100859D60, a1);
  if (*((char *)result + 23) < 0)
    return (uint64_t *)sub_100004678(a2, (void *)*result, result[1]);
  v7 = *(_OWORD *)result;
  a2[2] = result[2];
  *(_OWORD *)a2 = v7;
  return result;
}

void sub_100008900(uint64_t a1, const std::string *a2, int a3, double a4)
{
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  std::string::size_type size;
  int v12;
  const std::string *v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  const std::string *v16;
  int v17;
  const std::string *v18;
  __int16 v19;
  int v20;
  __int16 v21;
  double v22;

  v8 = qword_100857F00;
  if (os_log_type_enabled((os_log_t)qword_100857F00, OS_LOG_TYPE_DEBUG))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = a2;
    else
      v16 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    v17 = 136315650;
    v18 = v16;
    v19 = 1024;
    v20 = a3;
    v21 = 2048;
    v22 = a4;
    _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "regulatory,geo,monitor,processLocation:%s,isLastKnown:%d,ts:%.2f", (uint8_t *)&v17, 0x1Cu);
  }
  v9 = *(unsigned __int8 *)(a1 + 239);
  if ((v9 & 0x80u) == 0)
    v10 = *(unsigned __int8 *)(a1 + 239);
  else
    v10 = *(_QWORD *)(a1 + 224);
  size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  v12 = (char)size;
  if ((size & 0x80u) != 0)
    size = a2->__r_.__value_.__l.__size_;
  if (v10 != size)
    goto LABEL_21;
  if (v12 >= 0)
    v13 = a2;
  else
    v13 = (const std::string *)a2->__r_.__value_.__r.__words[0];
  if ((v9 & 0x80) != 0)
  {
    if (memcmp(*(const void **)(a1 + 216), v13, *(_QWORD *)(a1 + 224)))
      goto LABEL_21;
  }
  else if (*(_BYTE *)(a1 + 239))
  {
    v14 = (unsigned __int8 *)(a1 + 216);
    while (*v14 == v13->__r_.__value_.__s.__data_[0])
    {
      ++v14;
      v13 = (const std::string *)((char *)v13 + 1);
      if (!--v9)
        goto LABEL_18;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (sub_100008B08(a1 + 216) && !*(_BYTE *)(a1 + 433) && !*(_BYTE *)(a1 + 432))
  {
    *(double *)(a1 + 248) = a4;
    v15 = (_BYTE *)(a1 + 240);
    goto LABEL_26;
  }
LABEL_21:
  std::string::operator=((std::string *)(a1 + 216), a2);
  *(_BYTE *)(a1 + 240) = a3;
  v15 = (_BYTE *)(a1 + 240);
  *(double *)(a1 + 248) = a4;
  if (!sub_1001D7098((_QWORD *)(a1 + 216)) && sub_1001D7524(a1 + 376))
  {
    std::string::assign((std::string *)(a1 + 376), off_100853240[0]);
    if (os_log_type_enabled((os_log_t)qword_100857F00, OS_LOG_TYPE_DEBUG))
      sub_1003D9588();
  }
  sub_1001D6668(a1);
LABEL_26:
  *v15 = 1;
}

BOOL sub_100008B08(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
  {
    if (*(_QWORD *)(a1 + 8))
      return CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 32) < *(double *)&qword_100852830;
  }
  else if (*(_BYTE *)(a1 + 23))
  {
    return CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 32) < *(double *)&qword_100852830;
  }
  return 0;
}

void sub_100008B5C(uint64_t a1, const std::string *a2, unsigned __int8 *a3, double *a4)
{
  sub_100008900(*(_QWORD *)(a1 + 8), a2, *a3, *a4);
}

uint64_t sub_100008B6C(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v4;
  double v6;
  char v7;

  v7 = a3;
  v6 = a4;
  v4 = *(_QWORD *)(a1 + 24);
  if (!v4)
    sub_100027BC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, double *))(*(_QWORD *)v4 + 48))(v4, a2, &v7, &v6);
}

uint64_t sub_100008BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v9 = sub_100008CC8(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_100008D6C(a1, v10, v11, v12, v13, v14, v15, v16);
  if ((v9 & 1) == 0)
    sub_10036CC84("Unable to release a power assertion", v17, v18, v19, v20, v21, v22, v23, v25);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

_QWORD *sub_100008C04(_QWORD *__dst, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v8 = a4;
  v9 = a3;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_100004678(__dst, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    v11 = *(_OWORD *)a2;
    __dst[2] = *(_QWORD *)(a2 + 16);
    *(_OWORD *)__dst = v11;
  }
  *((_DWORD *)__dst + 6) = 0;
  __dst[4] = 0;
  if (v9 && (sub_1003A1D38((uint64_t)__dst, a2, a3, a4, a5, a6, a7, a8) & 1) == 0)
    sub_10036CC84("Unable to create a power assertion", a2, a3, a4, a5, a6, a7, a8, v27);
  if (v8 && (sub_100008DDC((uint64_t)__dst, a2, a3, a4, a5, a6, a7, a8) & 1) == 0)
  {
    sub_100008CC8((uint64_t)__dst, v12, v13, v14, v15, v16, v17, v18);
    sub_10036CC84("Unable to create an OS transaction", v19, v20, v21, v22, v23, v24, v25, v27);
  }
  return __dst;
}

void sub_100008CA8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100008CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  IOPMAssertionID v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = a1;
  v9 = *(_DWORD *)(a1 + 24);
  if (v9)
  {
    if (IOPMAssertionRelease(v9))
    {
      sub_10036CAF0("Failed to release powerAssertionId (%u) for %s, return value: 0x%x", v10, v11, v12, v13, v14, v15, v16, *(unsigned int *)(v8 + 24));
      return 0;
    }
    sub_1000051BC("Successfully released powerAssertionId (%u) for %s", v10, v11, v12, v13, v14, v15, v16, *(unsigned int *)(v8 + 24));
    *(_DWORD *)(v8 + 24) = 0;
  }
  else
  {
    if (*(char *)(v8 + 23) < 0)
      v8 = *(_QWORD *)v8;
    sub_1000051BC("power assertion ID is already null for %s", a2, a3, a4, a5, a6, a7, a8, v8);
  }
  return 1;
}

uint64_t sub_100008D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = a1;
  v9 = *(void **)(a1 + 32);
  if (v9)
  {
    os_release(v9);
    *(_QWORD *)(v8 + 32) = 0;
    if (*(char *)(v8 + 23) < 0)
      v8 = *(_QWORD *)v8;
    sub_1000051BC("Successfully released os transaction for %s", v10, v11, v12, v13, v14, v15, v16, v8);
  }
  else
  {
    if (*(char *)(v8 + 23) < 0)
      v8 = *(_QWORD *)v8;
    sub_1000051BC("os transaction ID is already null for %s", a2, a3, a4, a5, a6, a7, a8, v8);
  }
  return 1;
}

uint64_t sub_100008DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  v8 = a1;
  v9 = *(char *)(a1 + 23);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v9 < 0)
      v8 = *(_QWORD *)a1;
    sub_1000051BC("os transaction ID already created for %s", a2, a3, a4, a5, a6, a7, a8, v8);
    return 1;
  }
  if (v9 < 0)
    a1 = *(_QWORD *)a1;
  v10 = os_transaction_create(a1);
  *(_QWORD *)(v8 + 32) = v10;
  v18 = *(char *)(v8 + 23);
  if (v10)
  {
    if (v18 < 0)
      v8 = *(_QWORD *)v8;
    sub_1000051BC("Successfully created os transaction for %s", v11, v12, v13, v14, v15, v16, v17, v8);
    return 1;
  }
  if (v18 < 0)
    v8 = *(_QWORD *)v8;
  sub_10036CAF0("Failed to create os transaction for %s", v11, v12, v13, v14, v15, v16, v17, v8);
  return 0;
}

void sub_100008E7C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_10085F020);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_10085F020))
  {
    xmmword_10085F008 = 0uLL;
    unk_10085F018 = 0;
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10085F008, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10085F020);
  }
  if (qword_10085F028 != -1)
    dispatch_once(&qword_10085F028, &stru_1008179D8);
  if (byte_10085F01F < 0)
  {
    sub_100004678((_BYTE *)a1, (void *)xmmword_10085F008, *((unint64_t *)&xmmword_10085F008 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_10085F008;
    *(_QWORD *)(a1 + 16) = unk_10085F018;
  }
}

void sub_100008F54(uint64_t a1@<X0>, const void **a2@<X1>, __int128 *a3@<X8>)
{
  uint64_t **v6;
  uint64_t v7;
  __int128 v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;

  v6 = (uint64_t **)(a1 + 88);
  v7 = sub_100004DF0(a1 + 88, a2);
  if (a1 + 96 == v7)
  {
    sub_1002C6118(a1, (unsigned __int16 *)a2, a3);
    sub_1002C685C((char *)v9, (__int128 *)a2, a3);
    sub_1002C6BC4(v6, (const void **)v9, (uint64_t)v9);
    if (v12 < 0)
      operator delete(__p);
    if (v10 < 0)
      operator delete(v9[0]);
  }
  else if (*(char *)(v7 + 79) < 0)
  {
    sub_100004678(a3, *(void **)(v7 + 56), *(_QWORD *)(v7 + 64));
  }
  else
  {
    v8 = *(_OWORD *)(v7 + 56);
    *((_QWORD *)a3 + 2) = *(_QWORD *)(v7 + 72);
    *a3 = v8;
  }
}

void sub_10000902C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_1001D5744((uint64_t)&a9);
  if (*(char *)(v9 + 23) < 0)
    operator delete(*(void **)v9);
  _Unwind_Resume(a1);
}

void sub_100009140(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1000091A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100009410(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  id *v3;
  id *v4;
  id *v5;
  id *v6;
  uint64_t v7;

  objc_destroyWeak(v6);
  objc_destroyWeak(v3);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak((id *)(v7 - 96));
  objc_destroyWeak((id *)(v7 - 88));

  _Unwind_Resume(a1);
}

void sub_100009484(uint64_t a1)
{
  NSObject *v2;
  int v3;
  id WeakRetained;
  id v5;
  _DWORD v6[2];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection interrupted for pid: %d", (uint8_t *)v6, 8u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(WeakRetained, "handleXPCDisconnection:", v5);

  }
}

void sub_100009558(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100009578(uint64_t a1)
{
  NSObject *v2;
  int v3;
  id WeakRetained;
  id v5;
  _DWORD v6[2];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection invalidated for pid: %d", (uint8_t *)v6, 8u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(WeakRetained, "handleXPCDisconnection:", v5);

  }
}

void sub_10000964C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100009804(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1000098D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id PRErrorWithCodeAndUserInfo(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  const NSErrorUserInfoKey *v6;
  const __CFString *v7;
  void *v8;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v5 = v4;
  if (a1 > 199)
  {
    if (a1 > 998)
    {
      switch(a1)
      {
        case 999:
          v7 = CFSTR("Internal Error");
          goto LABEL_30;
        case 2000:
          v7 = CFSTR("Unsupported global parameters combination.");
          goto LABEL_30;
        case 2002:
          v7 = CFSTR("Time conversion failed.");
          goto LABEL_30;
      }
    }
    else
    {
      switch(a1)
      {
        case 200:
          v7 = CFSTR("Failed to start estimating proximity to peer.");
          goto LABEL_30;
        case 201:
          v7 = CFSTR("Failed to stop estimating proximity to peer.");
          goto LABEL_30;
        case 202:
          v7 = CFSTR("Failed to consume RSSI sample.");
LABEL_30:
          v6 = &NSLocalizedDescriptionKey;
          goto LABEL_31;
      }
    }
LABEL_15:
    v7 = CFSTR("Undefined Error");
    goto LABEL_30;
  }
  v6 = &NSLocalizedDescriptionKey;
  v7 = CFSTR("Failed to place service request.");
  switch(a1)
  {
    case 'd':
      objc_msgSend(v4, "setObject:forKeyedSubscript:", CFSTR("Unsupported ranging configuration."), NSLocalizedDescriptionKey);
      objc_msgSend(v5, "setObject:forKeyedSubscript:", CFSTR("Missing parameters or invalid values provided."), NSLocalizedFailureReasonErrorKey);
      v7 = CFSTR("Make sure that the values provided are supported in this version.");
      v6 = &NSLocalizedRecoverySuggestionErrorKey;
      break;
    case 'e':
      break;
    case 'f':
      v7 = CFSTR("Failed to initiate a ranging session.");
      break;
    case 'g':
      v7 = CFSTR("Failed to stop a ranging session.");
      break;
    case 'h':
      v7 = CFSTR("Failed to set Rose config.");
      break;
    case 'i':
    case 'k':
      goto LABEL_15;
    case 'j':
      v7 = CFSTR("Invalid peer information.");
      break;
    case 'l':
      v7 = CFSTR("Invalid ticket id.");
      break;
    case 'm':
      v7 = CFSTR("Rose Provider not ready.");
      break;
    case 'n':
      v7 = CFSTR("Timeout.");
      break;
    case 'o':
      v7 = CFSTR("Unexpected service state.");
      break;
    case 'p':
      v7 = CFSTR("Not user triggered request.");
      break;
    case 'q':
      v7 = CFSTR("Client has no registered request.");
      break;
    default:
      if (a1 != 10)
        goto LABEL_15;
      objc_msgSend(v4, "setObject:forKeyedSubscript:", CFSTR("Unsupported operation."), NSLocalizedDescriptionKey);
      v7 = CFSTR("This platform does not support the operation requested.");
      v6 = &NSLocalizedFailureReasonErrorKey;
      break;
  }
LABEL_31:
  objc_msgSend(v5, "setObject:forKeyedSubscript:", v7, *v6);
  if (v3)
    objc_msgSend(v5, "addEntriesFromDictionary:", v3);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.Proximity.ErrorDomain"), a1, v5));

  return v8;
}

_QWORD *sub_100009B68@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  char *v2;

  if (a1)
    v2 = "TriggerRequired";
  else
    v2 = "NoTriggerRequired";
  return sub_10000BF04(a2, v2);
}

_QWORD *sub_100009B88@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  char *v2;

  if (a1)
    v2 = "BTAidedAcquisition";
  else
    v2 = "DirectAcquisition";
  return sub_10000BF04(a2, v2);
}

_QWORD *sub_100009BA8@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  char *v2;

  if (a1 == 100)
  {
    v2 = "Unspecified";
  }
  else if (a1 == 1)
  {
    v2 = "Responder";
  }
  else
  {
    v2 = "Initiator";
  }
  return sub_10000BF04(a2, v2);
}

_QWORD *sub_100009BE4@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007F9F50[a1]);
}

_QWORD *sub_100009BF8@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007F9FA8[a1]);
}

_QWORD *sub_100009C0C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007F9FF0[a1]);
}

_QWORD *sub_100009C20@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA010[a1]);
}

unint64_t sub_100009C34(unsigned int a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

uint64_t sub_100009C44(uint64_t a1)
{
  void *v2;

  v2 = *(void **)a1;
  if (v2)
  {
    *(_QWORD *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_100009CF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100009FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

id sub_10000A04C(void *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "valueForEntitlement:", CFSTR("com.apple.private.nearbyd.regulatory-assistance")));
  if (v2 && (v3 = objc_opt_class(NSNumber, v1), (objc_opt_isKindOfClass(v2, v3) & 1) != 0))
    v4 = objc_msgSend(v2, "BOOLValue");
  else
    v4 = 0;

  return v4;
}

void sub_10000A0B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000A0C4(uint64_t a1)
{
  NSObject *v2;
  int v3;
  id WeakRetained;
  void *v5;
  _DWORD v6[2];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 40);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection interrupted for pid: %d", (uint8_t *)v6, 8u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained, "handleXPCDisconnection");

}

void sub_10000A184(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000A19C(uint64_t a1)
{
  NSObject *v2;
  int v3;
  id WeakRetained;
  void *v5;
  _DWORD v6[2];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 40);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection invalidated for pid: %d", (uint8_t *)v6, 8u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained, "handleXPCDisconnection");

}

void sub_10000A25C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000A328(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10000A3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10000A408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10000A4BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_10000BA78((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_10000A590(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10000A640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10000A6F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10000A7A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10000AB20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  void *v31;

  sub_10000BA78((uint64_t)&a9);
  if (a29 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_10000ABA4(id a1, id a2, id a3, BOOL *a4)
{
  id v5;
  id v6;
  NSObject *v7;
  int v8;
  id v9;
  __int16 v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 138412546;
    v9 = v5;
    v10 = 2112;
    v11 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "    %@ : %@", (uint8_t *)&v8, 0x16u);
  }

}

void sub_10000AC70(id a1, NSString *a2, unint64_t a3, BOOL *a4)
{
  NSString *v4;
  NSObject *v5;
  int v6;
  NSString *v7;

  v4 = a2;
  v5 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138477827;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{private}@", (uint8_t *)&v6, 0xCu);
  }

}

void sub_10000AD18(id a1, NSString *a2, unint64_t a3, BOOL *a4)
{
  NSString *v4;
  NSObject *v5;
  int v6;
  NSString *v7;

  v4 = a2;
  v5 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138543362;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}@", (uint8_t *)&v6, 0xCu);
  }

}

void sub_10000AE8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10000AF3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000AF98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10000AFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10000B06C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10000B120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10000B274(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000B320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10000B3BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10000B52C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10000B724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  void *v15;

  if (a14 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_10000B7D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000B9CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10000BA44()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
}

uint64_t sub_10000BA78(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 112))
  {
    sub_10000BAB8(a1 + 32);
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_10000BAB8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 64))
  {
    if (*(char *)(a1 + 63) < 0)
      operator delete(*(void **)(a1 + 40));
    if (*(char *)(a1 + 31) < 0)
      operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_10000BB00(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (_QWORD *)(a1 + 712);
  v3 = *(_QWORD **)(a1 + 736);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  std::mutex::~mutex((std::mutex *)(a1 + 648));
  std::mutex::~mutex((std::mutex *)(a1 + 584));
  sub_10000BB68(a1 + 216);
  return sub_10000BA78(a1);
}

uint64_t sub_10000BB68(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void **v7;

  if (*(_BYTE *)(a1 + 352))
  {
    v7 = (void **)(a1 + 328);
    sub_10000BC08(&v7);
    if (*(_BYTE *)(a1 + 312))
    {
      v2 = *(void **)(a1 + 288);
      if (v2)
      {
        *(_QWORD *)(a1 + 296) = v2;
        operator delete(v2);
      }
    }
    if (*(_BYTE *)(a1 + 248))
    {
      v3 = *(void **)(a1 + 224);
      if (v3)
      {
        *(_QWORD *)(a1 + 232) = v3;
        operator delete(v3);
      }
    }
    if (*(_BYTE *)(a1 + 184))
    {
      v4 = *(void **)(a1 + 160);
      if (v4)
      {
        *(_QWORD *)(a1 + 168) = v4;
        operator delete(v4);
      }
    }
    if (*(_BYTE *)(a1 + 120))
    {
      v5 = *(void **)(a1 + 96);
      if (v5)
      {
        *(_QWORD *)(a1 + 104) = v5;
        operator delete(v5);
      }
    }
  }
  return a1;
}

void sub_10000BC08(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_10000BC48((uint64_t *)v2);
    operator delete(**a1);
  }
}

void sub_10000BC48(uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;
  void *v4;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 40)
  {
    v4 = *(void **)(i - 24);
    if (v4)
    {
      *(_QWORD *)(i - 16) = v4;
      operator delete(v4);
    }
  }
  a1[1] = v2;
}

_BYTE *sub_10000BC94(_BYTE *__dst, uint64_t a2)
{
  *__dst = 0;
  __dst[112] = 0;
  if (*(_BYTE *)(a2 + 112))
  {
    sub_10000BCE8(__dst, (__int128 *)a2);
    __dst[112] = 1;
  }
  return __dst;
}

void sub_10000BCD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10000BA78(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_10000BCE8(_QWORD *__dst, __int128 *a2)
{
  __int128 v4;

  if (*((char *)a2 + 23) < 0)
  {
    sub_100004678(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    __dst[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  *((_DWORD *)__dst + 6) = *((_DWORD *)a2 + 6);
  sub_10000BDF4((_BYTE *)__dst + 32, (uint64_t)(a2 + 2));
  __dst[13] = *((_QWORD *)a2 + 13);
  return __dst;
}

void sub_10000BD50(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_10000BD6C()
{
  sub_10000BD80("basic_string");
}

void sub_10000BD80(const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_10000BDD0(exception, a1);
}

void sub_10000BDBC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_10000BDD0(std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  return result;
}

_BYTE *sub_10000BDF4(_BYTE *a1, uint64_t a2)
{
  *a1 = 0;
  a1[64] = 0;
  if (*(_BYTE *)(a2 + 64))
  {
    sub_10000BE48((uint64_t)a1, (int *)a2);
    a1[64] = 1;
  }
  return a1;
}

void sub_10000BE34(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10000BAB8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10000BE48(uint64_t a1, int *a2)
{
  int v4;
  __int128 v5;
  _BYTE *v6;
  __int128 v7;

  v4 = *a2;
  *(_WORD *)(a1 + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)a1 = v4;
  if (*((char *)a2 + 31) < 0)
  {
    sub_100004678((_BYTE *)(a1 + 8), *((void **)a2 + 1), *((_QWORD *)a2 + 2));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_OWORD *)(a1 + 8) = v5;
  }
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  v6 = (_BYTE *)(a1 + 40);
  if (*((char *)a2 + 63) < 0)
  {
    sub_100004678(v6, *((void **)a2 + 5), *((_QWORD *)a2 + 6));
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 10);
    *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
    *(_OWORD *)v6 = v7;
  }
  return a1;
}

void sub_10000BEE8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_10000BF04(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_10000BD6C();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void sub_10000BFB4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10000BFCC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_10000C048(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_10000C060()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_10000C0DC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_10000C0F4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_10000C170(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_10000C188()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_10000C204(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_10000C21C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_10000C298(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_10000C2B0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_10000C32C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_10000C344()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_10000C3C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_10000C3D8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_10000C454(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_10000C46C()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456530;
      v1[1] = unk_100456540;
      v1[2] = xmmword_100456550;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_10000C50C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_10000C524()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853328 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853318 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853318, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853340 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853330 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853330, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100853358 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853348 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853348, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853370 = v15->__r_.__value_.__r.__words[2];
  xmmword_100853360 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853360, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100853388 = v19->__r_.__value_.__r.__words[2];
  xmmword_100853378 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853378, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008533A0 = v23->__r_.__value_.__r.__words[2];
  xmmword_100853390 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853390, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008533B8 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008533A8 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008533A8, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008533D0 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008533C0 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008533C0, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008533E8 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008533D8 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008533D8, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10000CB18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void sub_10000CC44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000CEB0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  id *v5;
  id *v6;
  id *v7;
  uint64_t v8;

  objc_destroyWeak(v7);
  objc_destroyWeak(v6);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v8 - 104));
  _Unwind_Resume(a1);
}

void sub_10000CF18()
{
  JUMPOUT(0x10000CEF0);
}

void sub_10000CF20()
{
  JUMPOUT(0x10000CEF8);
}

void sub_10000CF28()
{
  JUMPOUT(0x10000CF00);
}

void sub_10000CF30(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "didLoseDevice:", v3);

}

void sub_10000CF78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10000CF90(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "didDiscoverDevice:", v3);

}

void sub_10000CFD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10000CFF0(uint64_t a1)
{
  id WeakRetained;

  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
    sub_1003C8E6C();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "bluetoothServiceInterrupted");

}

void sub_10000D048(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000D058(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "didFailWithError:", v3);

}

void sub_10000D0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10000D0B8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "bluetoothStateChanged");

}

void sub_10000D0EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10000D100(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "bluetoothAdvertisingAddressChanged");

}

void sub_10000D134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10000D148(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "systemOverrideNotification");

}

void sub_10000D17C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10000D1CC(id a1)
{
  void *v1;
  NSObject *v2;
  const __CFString *v3;
  int v4;
  const __CFString *v5;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  byte_1008533F8 = objc_msgSend(v1, "BOOLForKey:", CFSTR("EnableMarconiBypass"));
  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    if (byte_1008533F8)
      v3 = CFSTR("Yes");
    else
      v3 = CFSTR("No");
    v4 = 138412290;
    v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ble,Marconi bypass enabled: %@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_10000D2B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000D69C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_10000D6E8(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  double v5;
  char *WeakRetained;
  id *v7;
  double v8;
  _DWORD *v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  int v26;
  double v27;
  NSErrorUserInfoKey v28;
  const __CFString *v29;

  v3 = a2;
  v4 = sub_10000883C();
  v5 = *(double *)(a1 + 48);
  WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 40));
  v7 = (id *)WeakRetained;
  if (WeakRetained)
  {
    v8 = v4 - v5;
    v9 = WeakRetained + 16;
    if (*((_DWORD *)WeakRetained + 4) == 1)
    {
      v10 = objc_loadWeakRetained((id *)WeakRetained + 3);
      if (v3)
      {
        v11 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003C9044((uint64_t)v3, v11, v12, v8);
        *v9 = 3;
        objc_msgSend(v10, "didFinishActivatingWithDiscoveryTokenData:error:", 0, v3);
      }
      else
      {
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7[1], "tokenData"));

        v14 = qword_10085F520;
        if (v13)
        {
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
          {
            v26 = 134217984;
            v27 = v8;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#ble,Activation succeeded [%0.6f s]", (uint8_t *)&v26, 0xCu);
          }
          *v9 = 2;
          v15 = (void *)objc_claimAutoreleasedReturnValue(+[NIServerSpatialInteractionPayloadAggregator sharedInstance](NIServerSpatialInteractionPayloadAggregator, "sharedInstance"));
          objc_msgSend(v15, "addPayloadChangeObserver:", *(_QWORD *)(a1 + 32));

          objc_msgSend(v7, "_executeActivationPendingOperations");
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7[1], "tokenData"));
          objc_msgSend(v10, "didFinishActivatingWithDiscoveryTokenData:error:", v16, 0);

          objc_msgSend(v7, "bluetoothStateChanged");
          objc_msgSend(v7, "bluetoothAdvertisingAddressChanged");
        }
        else
        {
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
            sub_1003C8FDC(v14, v17, v18, v19, v20, v21, v22, v23);
          *v9 = 3;
          v28 = NSLocalizedFailureReasonErrorKey;
          v29 = CFSTR("Activated session had no token");
          v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v29, &v28, 1));
          v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.NearbyInteraction"), -10017, v24));
          objc_msgSend(v10, "didFinishActivatingWithDiscoveryTokenData:error:", 0, v25);

        }
      }

    }
    else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
    {
      sub_1003C90B8();
    }
  }

}

void sub_10000D990(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_10000DD64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_10000DD9C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addPeerDiscoveryToken:", a2);
}

void sub_10000DEF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000E160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_10000E1B4(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  double v5;
  id *WeakRetained;
  double v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  int v16;
  void *v17;
  __int16 v18;
  double v19;
  __int16 v20;
  id v21;

  v3 = a2;
  v4 = sub_10000883C();
  v5 = *(double *)(a1 + 48);
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v7 = v4 - v5;
    v8 = (id)qword_10085F520;
    v9 = v8;
    if (v3)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        v14 = CUPrintNSObjectMasked(*(_QWORD *)(a1 + 32), v10);
        v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
        v16 = 138478339;
        v17 = v15;
        v18 = 2048;
        v19 = v7;
        v20 = 2112;
        v21 = v3;
        _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "#ble,addPeerToken %{private}@ failed [%0.6f s]. Error: %@", (uint8_t *)&v16, 0x20u);

      }
      objc_msgSend(WeakRetained[6], "removeObject:", *(_QWORD *)(a1 + 32));
    }
    else
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        v12 = CUPrintNSObjectMasked(*(_QWORD *)(a1 + 32), v11);
        v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
        v16 = 138478083;
        v17 = v13;
        v18 = 2048;
        v19 = v7;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#ble,addPeerToken %{private}@ succeeded [%0.6f s]", (uint8_t *)&v16, 0x16u);

      }
    }
  }

}

void sub_10000E34C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10000E66C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  v20 = v19;

  _Unwind_Resume(a1);
}

void sub_10000E6E0(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  double v5;
  id WeakRetained;
  double v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v16;
  void *v17;
  __int16 v18;
  double v19;
  __int16 v20;
  id v21;

  v3 = a2;
  v4 = sub_10000883C();
  v5 = *(double *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v7 = v4 - v5;
    v8 = (id)qword_10085F520;
    v9 = v8;
    if (v3)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        v11 = CUPrintNSObjectMasked(*(_QWORD *)(a1 + 32), v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
        v16 = 138478339;
        v17 = v12;
        v18 = 2048;
        v19 = v7;
        v20 = 2112;
        v21 = v3;
        _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "#ble,removePeerToken %{private}@ failed [%0.6f s]. Error: %@", (uint8_t *)&v16, 0x20u);

      }
    }
    else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v14 = CUPrintNSObjectMasked(*(_QWORD *)(a1 + 32), v13);
      v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      v16 = 138478083;
      v17 = v15;
      v18 = 2048;
      v19 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#ble,removePeerToken %{private}@ succeeded [%0.6f s]", (uint8_t *)&v16, 0x16u);

    }
  }

}

void sub_10000E85C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10000EA48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000EFA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10000F4CC(uint64_t a1)
{
  id *WeakRetained;
  id *v3;
  NSObject *v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  unsigned int v10;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained[1], "setScanRate:", 30);
    v4 = (id)qword_10085F520;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)(a1 + 40);
      v6 = objc_msgSend(v3[1], "scanRate");
      v7 = 134218240;
      v8 = v5;
      v9 = 1024;
      v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#ble,startScanningWithBurstPeriod burst expired [%0.1f s]. Setting BT scan rate to %d.", (uint8_t *)&v7, 0x12u);
    }

    objc_msgSend(v3, "_cancelScanRateAdjustmentTimer");
  }

}

void sub_10000F5BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10000F83C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_10000F854(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "removePeerDiscoveryToken:", a2);
}

void sub_10000F9E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10000FF14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v2;

  _Unwind_Resume(a1);
}

void sub_1000100F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t sub_10001014C(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = a1;
  if (objc_msgSend(v1, "length") != (id)6)
    __assert_rtn("PRBluetoothAdvertisingAddressToU64Identifier", "PRBLEDiscoverySession.mm", 1029, "[bluetoothAddress length] == kPRBluetoothAdvertisingAddressLengthBytes");
  v6 = 0;
  v2 = objc_msgSend(v1, "copy");
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_reverse"));
  objc_msgSend(v3, "getBytes:length:", &v6, objc_msgSend(v1, "length"));

  v4 = v6;
  return v4;
}

void sub_1000101F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100010384(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000103F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1000106C4(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_100010750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100010950(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100010A94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100010AA8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_100010AB8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_100010AC8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_100010B04(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_100010B14(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(float *)a6 = a1;
  *(_QWORD *)(a6 + 4) = v7;
  *(_WORD *)(a6 + 12) = 2080;
  *(_QWORD *)(a6 + 14) = v6;
}

_QWORD *sub_100010B58@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA220[a1]);
}

_QWORD *sub_100010B6C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA278[a1]);
}

_QWORD *sub_100010B80@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA2C0[a1]);
}

_QWORD *sub_100010B94@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA2E0[a1]);
}

uint64_t sub_100010BA8(void *a1, unsigned __int8 *a2, _QWORD *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  unsigned __int16 v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  unsigned __int8 v28;
  NSObject *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  NSObject *v34;
  int v35;
  unsigned __int8 v36;
  NSObject *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  NSObject *v43;
  int v44;
  unsigned __int8 v45;
  NSObject *v46;
  int v47;
  unsigned __int8 v48;
  NSObject *v49;
  int v50;
  id v51;
  uint64_t v52;
  NSObject *v53;
  NSObject *v54;
  id v55;
  id v56;
  NSObject *v57;
  id v58;
  NSObject *v59;
  id v60;
  NSObject *v61;
  id v62;
  NSObject *v63;
  id v64;
  NSObject *v65;
  id v66;
  unsigned __int8 v67;
  unsigned __int8 v68;
  unsigned __int8 v69;
  NSObject *v70;
  int v71;
  NSObject *v72;
  int v73;
  int v74;
  uint64_t v75;
  unsigned __int16 v76;
  NSObject *v77;
  int v78;
  uint64_t v79;
  NSObject *v80;
  uint8_t *v81;
  uint64_t v82;
  NSObject *v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  id v88;
  NSObject *v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  id v94;
  NSObject *v95;
  uint8_t *v96;
  uint64_t v97;
  NSObject *v98;
  id v99;
  unsigned __int16 v100;
  NSObject *v101;
  int v102;
  uint64_t v103;
  unsigned __int8 v104;
  NSObject *v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  void *v110;
  id v111;
  unsigned __int8 v112;
  NSObject *v113;
  int v114;
  NSObject *v115;
  void *v116;
  id v117;
  unsigned __int8 v118;
  NSObject *v119;
  int v120;
  uint64_t v121;
  int v122;
  NSObject *v123;
  void *v124;
  id v125;
  void *v126;
  NSObject *v127;
  id v128;
  unsigned int v129;
  NSObject *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  signed int v134;
  NSObject *v135;
  NSObject *v136;
  id v137;
  NSObject *v138;
  void *v139;
  id v140;
  unsigned __int16 v141;
  NSObject *v142;
  int v143;
  NSObject *v144;
  void *v145;
  id v146;
  unsigned __int16 v147;
  int v148;
  uint64_t v149;
  unsigned __int8 v150;
  NSObject *v151;
  int v152;
  uint64_t v153;
  unsigned __int8 v154;
  int v155;
  void *v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  uint8_t v176[4];
  int v177;
  NSErrorUserInfoKey v178;
  const __CFString *v179;
  uint8_t v180[4];
  int v181;
  NSErrorUserInfoKey v182;
  const __CFString *v183;
  NSErrorUserInfoKey v184;
  const __CFString *v185;
  NSErrorUserInfoKey v186;
  const __CFString *v187;
  NSErrorUserInfoKey v188;
  const __CFString *v189;
  uint8_t v190[4];
  int v191;
  NSErrorUserInfoKey v192;
  const __CFString *v193;
  NSErrorUserInfoKey v194;
  const __CFString *v195;
  NSErrorUserInfoKey v196;
  const __CFString *v197;
  NSErrorUserInfoKey v198;
  const __CFString *v199;
  NSErrorUserInfoKey v200;
  const __CFString *v201;
  NSErrorUserInfoKey v202;
  const __CFString *v203;
  uint8_t buf[8];
  char v205;
  uint8_t v206[4];
  uint8_t *v207;
  NSErrorUserInfoKey v208;
  const __CFString *v209;
  NSErrorUserInfoKey v210;
  const __CFString *v211;
  NSErrorUserInfoKey v212;
  const __CFString *v213;
  NSErrorUserInfoKey v214;
  const __CFString *v215;
  NSErrorUserInfoKey v216;
  const __CFString *v217;
  NSErrorUserInfoKey v218;
  const __CFString *v219;
  NSErrorUserInfoKey v220;
  const __CFString *v221;

  v5 = a1;
  v6 = v5;
  if (v5)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKey:", PRP2PArgsRangingRole));
    v175 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRP2PArgsRangingInterval));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRP2PArgsTxAntennaMask));
    v174 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRP2PArgsRxAntennaMask));
    v165 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRP2PArgsRxSyncSearchAntennaMask));
    v170 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRDebugConfigArgTxAntennaMask2));
    v164 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRDebugConfigArgRxAntennaMask2));
    v157 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRDebugConfigArgRxSyncSearchAntennaMask2));
    v169 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRDebugConfigArgSOIRSSIThreshold2));
    v173 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRP2PArgsTxPreamble));
    v172 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRP2PArgsRxPreamble));
    v171 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRP2PArgsTxPacketType));
    v167 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRP2PArgsRxPacketType));
    v168 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRP2PArgsRoseDebugFlags));
    v166 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRP2PArgsDualRangingMode));
    v163 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRDebugConfigArgNAccessSlotsMin));
    v159 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRDebugConfigArgNAccessSlotsMax));
    v162 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRDebugConfigArgRangingIntervalMin));
    v158 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRDebugConfigArgRangingIntervalMax));
    v160 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRDebugConfigArgRxMiniSlotSize));
    v161 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", PRDebugConfigArgTxMiniSlotSize));
    v10 = *((_DWORD *)sub_100004784() + 187);
    if (v7)
    {
      v11 = objc_opt_class(NSNumber, v9);
      if ((objc_opt_isKindOfClass(v7, v11) & 1) != 0)
      {
        v12 = objc_msgSend(v7, "intValue");
        sub_10036B968(v12, v13, v14, v15, v16, v17, v18, v19);
        v20 = objc_msgSend(v7, "integerValue");
        if (!a2[1])
          a2[1] = 1;
        *a2 = v20;
        v21 = (id)qword_10085F520;
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[1])
            sub_10000BA44();
          v22 = *a2;
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = v22;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "[Range Params] got role: %d", buf, 8u);
        }

      }
    }
    if (v175)
    {
      v23 = objc_opt_class(NSNumber, v9);
      if ((objc_opt_isKindOfClass(v175, v23) & 1) != 0)
      {
        v24 = (unsigned __int16)objc_msgSend(v175, "integerValue");
        if (!a2[78])
          a2[78] = 1;
        *((_WORD *)a2 + 38) = v24;
        v25 = (id)qword_10085F520;
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[78])
            sub_10000BA44();
          v26 = *((unsigned __int16 *)a2 + 38);
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = v26;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "[Range Params] got interval_ms: %d", buf, 8u);
        }

      }
    }
    if (v8)
    {
      v27 = objc_opt_class(NSNumber, v9);
      if ((objc_opt_isKindOfClass(v8, v27) & 1) != 0)
      {
        if (!sub_1000131E8(v8))
        {
          v53 = (id)qword_10085F520;
          if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
            sub_1003C9C34((uint64_t)buf, (int)objc_msgSend(v8, "intValue"));

          if (!a3)
            goto LABEL_314;
          v218 = NSLocalizedDescriptionKey;
          v219 = CFSTR("got invalid tx_ant_mask.");
          v54 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v219, &v218, 1));
          v55 = PRErrorWithCodeAndUserInfo(100, v54);
          v56 = (id)objc_claimAutoreleasedReturnValue(v55);
          goto LABEL_236;
        }
        v28 = objc_msgSend(v8, "integerValue");
        if (!a2[3])
          a2[3] = 1;
        a2[2] = v28;
        v29 = (id)qword_10085F520;
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[3])
            sub_10000BA44();
          v30 = a2[2];
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = v30;
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_ant_mask: 0x%x", buf, 8u);
        }

      }
    }
    if (v174)
    {
      v31 = objc_opt_class(NSNumber, v9);
      if ((objc_opt_isKindOfClass(v174, v31) & (v165 != 0)) == 1)
      {
        v32 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v165, v32) & 1) != 0)
        {
          if (!sub_100013268(v174))
          {
            v57 = (id)qword_10085F520;
            if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
              sub_1003C9C00((uint64_t)buf, (int)objc_msgSend(v174, "intValue"));

            if (!a3)
              goto LABEL_314;
            v216 = NSLocalizedDescriptionKey;
            v217 = CFSTR("got invalid rx_ant_mask.");
            v54 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v217, &v216, 1));
            v58 = PRErrorWithCodeAndUserInfo(100, v54);
            v56 = (id)objc_claimAutoreleasedReturnValue(v58);
            goto LABEL_236;
          }
          v33 = objc_msgSend(v174, "integerValue");
          if (!a2[5])
            a2[5] = 1;
          a2[4] = v33;
          v34 = (id)qword_10085F520;
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[5])
              sub_10000BA44();
            v35 = a2[4];
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&buf[4] = v35;
            _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_ant_mask: 0x%x", buf, 8u);
          }

          if ((sub_1000132C0(v165, v174) & 1) == 0)
          {
            v59 = (id)qword_10085F520;
            if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR))
              sub_1003C9BCC((uint64_t)buf, (int)objc_msgSend(v165, "intValue"));

            if (!a3)
              goto LABEL_314;
            v214 = NSLocalizedDescriptionKey;
            v215 = CFSTR("got invalid rx_sync_search_ant_mask.");
            v54 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v215, &v214, 1));
            v60 = PRErrorWithCodeAndUserInfo(100, v54);
            v56 = (id)objc_claimAutoreleasedReturnValue(v60);
            goto LABEL_236;
          }
          v36 = objc_msgSend(v165, "integerValue");
          if (!a2[7])
            a2[7] = 1;
          a2[6] = v36;
          v37 = (id)qword_10085F520;
          if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[7])
              sub_10000BA44();
            v38 = a2[6];
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&buf[4] = v38;
            _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_sync_search_ant_mask: 0x%x", buf, 8u);
          }

        }
      }
    }
    if (!v170
      || (v39 = objc_opt_class(NSNumber, v9),
          (objc_opt_isKindOfClass(v170, v39) & (v164 != 0)) != 1)
      || (v40 = objc_opt_class(NSNumber, v9),
          (objc_opt_isKindOfClass(v164, v40) & (v157 != 0)) != 1)
      || (v41 = objc_opt_class(NSNumber, v9), (objc_opt_isKindOfClass(v157, v41) & 1) == 0))
    {
LABEL_114:
      if (v169)
      {
        v75 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v169, v75) & 1) != 0)
        {
          v76 = (unsigned __int16)objc_msgSend(v169, "integerValue");
          if (!a2[74])
            a2[74] = 1;
          *((_WORD *)a2 + 36) = v76;
          v77 = (id)qword_10085F520;
          if (os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[74])
              sub_10000BA44();
            v78 = *((__int16 *)a2 + 36);
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&buf[4] = v78;
            _os_log_impl((void *)&_mh_execute_header, v77, OS_LOG_TYPE_DEFAULT, "[Range Params] got soi_rssi_thd2: 0x%x", buf, 8u);
          }

        }
      }
      if (v173)
      {
        v79 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v173, v79) & 1) != 0)
        {
          sub_10036B5AC(objc_msgSend(v173, "intValue"), 1);
          *((_WORD *)a2 + 4) = sub_10036B5AC(objc_msgSend(v173, "integerValue"), v10) | 0x100;
          v80 = (id)qword_10085F520;
          if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[9])
              sub_10000BA44();
            sub_10036B730(a2[8]);
            if (v205 >= 0)
              v81 = buf;
            else
              v81 = *(uint8_t **)buf;
            *(_DWORD *)v206 = 136315138;
            v207 = v81;
            _os_log_impl((void *)&_mh_execute_header, v80, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_preamble: %s", v206, 0xCu);
            if (v205 < 0)
              operator delete(*(void **)buf);
          }

        }
      }
      if (v172)
      {
        v82 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v172, v82) & 1) != 0)
        {
          sub_10036B5AC(objc_msgSend(v172, "intValue"), v10);
          *((_WORD *)a2 + 5) = sub_10036B5AC(objc_msgSend(v172, "integerValue"), v10) | 0x100;
          v83 = (id)qword_10085F520;
          if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[11])
              sub_10000BA44();
            sub_10036B730(a2[10]);
            if (v205 >= 0)
              v84 = buf;
            else
              v84 = *(uint8_t **)buf;
            *(_DWORD *)v206 = 136315138;
            v207 = v84;
            _os_log_impl((void *)&_mh_execute_header, v83, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_preamble: %s", v206, 0xCu);
            if (v205 < 0)
              operator delete(*(void **)buf);
          }

        }
      }
      if (v171)
      {
        v85 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v171, v85) & 1) != 0)
        {
          v86 = sub_10036C6D0(objc_msgSend(v171, "intValue"));
          if ((v86 & 0xFF0000) == 0)
          {
            v87 = (id)qword_10085F520;
            if (os_log_type_enabled(v87, OS_LOG_TYPE_ERROR))
              sub_1003C9A94((uint64_t)buf, (int)objc_msgSend(v171, "intValue"));

            if (a3)
            {
              v202 = NSLocalizedDescriptionKey;
              v203 = CFSTR("got invalid tx_pkt_type.");
              v54 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v203, &v202, 1));
              v88 = PRErrorWithCodeAndUserInfo(100, v54);
              v56 = (id)objc_claimAutoreleasedReturnValue(v88);
              goto LABEL_236;
            }
LABEL_314:
            v52 = 0;
            goto LABEL_315;
          }
          if (!a2[14])
            a2[14] = 1;
          *((_WORD *)a2 + 6) = v86;
          v89 = (id)qword_10085F520;
          if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[14])
              sub_10000BA44();
            sub_10036C798(a2 + 12);
            if (v205 >= 0)
              v90 = buf;
            else
              v90 = *(uint8_t **)buf;
            *(_DWORD *)v206 = 136315138;
            v207 = v90;
            _os_log_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_pkt_type: %s", v206, 0xCu);
            if (v205 < 0)
              operator delete(*(void **)buf);
          }

        }
      }
      if (v167)
      {
        v91 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v167, v91) & 1) != 0)
        {
          v92 = sub_10036C6D0(objc_msgSend(v167, "intValue"));
          if ((v92 & 0xFF0000) == 0)
          {
            v93 = (id)qword_10085F520;
            if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR))
              sub_1003C9A60((uint64_t)buf, (int)objc_msgSend(v171, "intValue"));

            if (a3)
            {
              v200 = NSLocalizedDescriptionKey;
              v201 = CFSTR("got invalid tx_pkt_type.");
              v54 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v201, &v200, 1));
              v94 = PRErrorWithCodeAndUserInfo(100, v54);
              v56 = (id)objc_claimAutoreleasedReturnValue(v94);
              goto LABEL_236;
            }
            goto LABEL_314;
          }
          if (!a2[17])
            a2[17] = 1;
          *(_WORD *)(a2 + 15) = v92;
          v95 = (id)qword_10085F520;
          if (os_log_type_enabled(v95, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[17])
              sub_10000BA44();
            sub_10036C798(a2 + 15);
            if (v205 >= 0)
              v96 = buf;
            else
              v96 = *(uint8_t **)buf;
            *(_DWORD *)v206 = 136315138;
            v207 = v96;
            _os_log_impl((void *)&_mh_execute_header, v95, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_pkt_type: %s", v206, 0xCu);
            if (v205 < 0)
              operator delete(*(void **)buf);
          }

        }
      }
      if (v168)
      {
        v97 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v168, v97) & 1) != 0)
        {
          if ((objc_msgSend(v168, "intValue") & 0x80000000) != 0
            || (int)objc_msgSend(v168, "intValue") >= 0x10000)
          {
            v98 = (id)qword_10085F520;
            if (os_log_type_enabled(v98, OS_LOG_TYPE_ERROR))
              sub_1003C9A2C((uint64_t)buf, (int)objc_msgSend(v168, "intValue"));

            if (a3)
            {
              v198 = NSLocalizedDescriptionKey;
              v199 = CFSTR("got invalid debug_flags.");
              v54 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v199, &v198, 1));
              v99 = PRErrorWithCodeAndUserInfo(100, v54);
              v56 = (id)objc_claimAutoreleasedReturnValue(v99);
              goto LABEL_236;
            }
            goto LABEL_314;
          }
          v100 = (unsigned __int16)objc_msgSend(v168, "integerValue");
          if (!a2[24])
            a2[24] = 1;
          *((_WORD *)a2 + 11) = v100;
          v101 = (id)qword_10085F520;
          if (os_log_type_enabled(v101, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[24])
              sub_10000BA44();
            v102 = *((unsigned __int16 *)a2 + 11);
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&buf[4] = v102;
            _os_log_impl((void *)&_mh_execute_header, v101, OS_LOG_TYPE_DEFAULT, "[Range Params] got debug_flags: %d", buf, 8u);
          }

        }
      }
      if (v166)
      {
        v103 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v166, v103) & 1) != 0)
        {
          if (objc_msgSend(v166, "intValue") && objc_msgSend(v166, "intValue") != 1)
          {
            v127 = (id)qword_10085F520;
            if (os_log_type_enabled(v127, OS_LOG_TYPE_ERROR))
              sub_1003C99F8((uint64_t)buf, (int)objc_msgSend(v166, "intValue"));

            if (a3)
            {
              v196 = NSLocalizedDescriptionKey;
              v197 = CFSTR("got invalid dual_ranging_enable.");
              v54 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v197, &v196, 1));
              v128 = PRErrorWithCodeAndUserInfo(100, v54);
              v56 = (id)objc_claimAutoreleasedReturnValue(v128);
              goto LABEL_236;
            }
            goto LABEL_314;
          }
          v104 = objc_msgSend(v166, "integerValue");
          if (!a2[65])
            a2[65] = 1;
          a2[64] = v104;
          v105 = (id)qword_10085F520;
          if (os_log_type_enabled(v105, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[65])
              sub_10000BA44();
            v106 = a2[64];
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&buf[4] = v106;
            _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_DEFAULT, "[Range Params] got dual_ranging_enable: %d", buf, 8u);
          }

        }
      }
      if (v163)
      {
        v107 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v163, v107) & (v159 != 0)) == 1)
        {
          v108 = objc_opt_class(NSNumber, v9);
          if ((objc_opt_isKindOfClass(v159, v108) & 1) != 0)
          {
            if ((int)objc_msgSend(v163, "intValue") <= 0)
            {
              v109 = (id)qword_10085F520;
              if (os_log_type_enabled(v109, OS_LOG_TYPE_ERROR))
                sub_1003C99C4((uint64_t)buf, (int)objc_msgSend(v163, "intValue"));

              if (a3)
              {
                v194 = NSLocalizedDescriptionKey;
                v195 = CFSTR("got invalid naccess_slots_min.");
                v110 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v195, &v194, 1));
                v111 = PRErrorWithCodeAndUserInfo(100, v110);
                *a3 = (id)objc_claimAutoreleasedReturnValue(v111);

              }
            }
            v112 = objc_msgSend(v163, "integerValue");
            if (!a2[105])
              a2[105] = 1;
            a2[104] = v112;
            v113 = (id)qword_10085F520;
            if (os_log_type_enabled(v113, OS_LOG_TYPE_DEFAULT))
            {
              if (!a2[105])
                sub_10000BA44();
              v114 = a2[104];
              *(_DWORD *)v206 = 67109120;
              LODWORD(v207) = v114;
              _os_log_impl((void *)&_mh_execute_header, v113, OS_LOG_TYPE_DEFAULT, "[Range Params] got naccess_slots_min: %d", v206, 8u);
            }

            if ((int)objc_msgSend(v159, "intValue") <= 0)
            {
              v115 = (id)qword_10085F520;
              if (os_log_type_enabled(v115, OS_LOG_TYPE_ERROR))
                sub_1003C99C4((uint64_t)v206, (int)objc_msgSend(v159, "intValue"));

              if (a3)
              {
                v192 = NSLocalizedDescriptionKey;
                v193 = CFSTR("got invalid naccess_slots_max.");
                v116 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v193, &v192, 1));
                v117 = PRErrorWithCodeAndUserInfo(100, v116);
                *a3 = (id)objc_claimAutoreleasedReturnValue(v117);

              }
            }
            v118 = objc_msgSend(v159, "integerValue");
            if (!a2[107])
              a2[107] = 1;
            a2[106] = v118;
            v119 = (id)qword_10085F520;
            if (os_log_type_enabled(v119, OS_LOG_TYPE_DEFAULT))
            {
              if (!a2[107])
                sub_10000BA44();
              v120 = a2[106];
              *(_DWORD *)v190 = 67109120;
              v191 = v120;
              _os_log_impl((void *)&_mh_execute_header, v119, OS_LOG_TYPE_DEFAULT, "[Range Params] got naccess_slots_max: %d", v190, 8u);
            }

            if (v7)
            {
              v121 = objc_opt_class(NSNumber, v9);
              if ((objc_opt_isKindOfClass(v7, v121) & 1) != 0)
              {
                if (objc_msgSend(v7, "intValue"))
                {
                  if (objc_msgSend(v7, "intValue") == 1)
                  {
                    v122 = objc_msgSend(v163, "intValue");
                    if (v122 > (int)objc_msgSend(v159, "intValue"))
                    {
                      v123 = (id)qword_10085F520;
                      if (os_log_type_enabled(v123, OS_LOG_TYPE_ERROR))
                        sub_1003C9998();

                      if (a3)
                      {
                        v186 = NSLocalizedDescriptionKey;
                        v187 = CFSTR("naccess_slots_min must be less than or equal to naccess_slots_max for responder.");
                        v124 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v187, &v186, 1));
                        v125 = PRErrorWithCodeAndUserInfo(100, v124);
                        v126 = (void *)objc_claimAutoreleasedReturnValue(v125);
LABEL_242:
                        *a3 = v126;

                      }
                    }
                  }
                }
                else
                {
                  v129 = objc_msgSend(v163, "intValue");
                  if (v129 != objc_msgSend(v159, "intValue"))
                  {
                    v130 = (id)qword_10085F520;
                    if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR))
                      sub_1003C996C();

                    if (a3)
                    {
                      v188 = NSLocalizedDescriptionKey;
                      v189 = CFSTR("naccess_slots_min must equal naccess_slots_max for initiator.");
                      v124 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v189, &v188, 1));
                      v131 = PRErrorWithCodeAndUserInfo(100, v124);
                      v126 = (void *)objc_claimAutoreleasedReturnValue(v131);
                      goto LABEL_242;
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (v162)
      {
        v132 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v162, v132) & (v158 != 0)) == 1)
        {
          v133 = objc_opt_class(NSNumber, v9);
          if ((objc_opt_isKindOfClass(v158, v133) & 1) != 0)
          {
            v134 = objc_msgSend(v162, "intValue");
            if ((uint64_t)objc_msgSend(v158, "integerValue") >= v134)
            {
              if ((int)objc_msgSend(v162, "intValue") >= 0x10000)
              {
                v138 = (id)qword_10085F520;
                if (os_log_type_enabled(v138, OS_LOG_TYPE_ERROR))
                  sub_1003C9938((uint64_t)v190, (int)objc_msgSend(v162, "intValue"));

                if (a3)
                {
                  v182 = NSLocalizedDescriptionKey;
                  v183 = CFSTR("got invalid interval_min_ms.");
                  v139 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v183, &v182, 1));
                  v140 = PRErrorWithCodeAndUserInfo(100, v139);
                  *a3 = (id)objc_claimAutoreleasedReturnValue(v140);

                }
              }
              v141 = (unsigned __int16)objc_msgSend(v162, "integerValue");
              if (!a2[98])
                a2[98] = 1;
              *((_WORD *)a2 + 48) = v141;
              v142 = (id)qword_10085F520;
              if (os_log_type_enabled(v142, OS_LOG_TYPE_DEFAULT))
              {
                if (!a2[98])
                  sub_10000BA44();
                v143 = *((unsigned __int16 *)a2 + 48);
                *(_DWORD *)v180 = 67109120;
                v181 = v143;
                _os_log_impl((void *)&_mh_execute_header, v142, OS_LOG_TYPE_DEFAULT, "[Range Params] got interval_min_ms: %d", v180, 8u);
              }

              if ((int)objc_msgSend(v158, "intValue") >= 0x10000)
              {
                v144 = (id)qword_10085F520;
                if (os_log_type_enabled(v144, OS_LOG_TYPE_ERROR))
                  sub_1003C9904((uint64_t)v180, (int)objc_msgSend(v158, "intValue"));

                if (a3)
                {
                  v178 = NSLocalizedDescriptionKey;
                  v179 = CFSTR("got invalid interval_max_ms.");
                  v145 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v179, &v178, 1));
                  v146 = PRErrorWithCodeAndUserInfo(100, v145);
                  *a3 = (id)objc_claimAutoreleasedReturnValue(v146);

                }
              }
              v147 = (unsigned __int16)objc_msgSend(v158, "integerValue");
              if (!a2[102])
                a2[102] = 1;
              *((_WORD *)a2 + 50) = v147;
              v136 = (id)qword_10085F520;
              if (os_log_type_enabled(v136, OS_LOG_TYPE_DEFAULT))
              {
                if (!a2[102])
                  sub_10000BA44();
                v148 = *((unsigned __int16 *)a2 + 50);
                *(_DWORD *)v176 = 67109120;
                v177 = v148;
                _os_log_impl((void *)&_mh_execute_header, v136, OS_LOG_TYPE_DEFAULT, "[Range Params] got interval_max_ms: %d", v176, 8u);
              }
            }
            else
            {
              v135 = (id)qword_10085F520;
              if (os_log_type_enabled(v135, OS_LOG_TYPE_ERROR))
                sub_1003C98D8();

              if (!a3)
                goto LABEL_272;
              v184 = NSLocalizedDescriptionKey;
              v185 = CFSTR("interval_min_ms must be less than or equal to interval_max_ms.");
              v136 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v185, &v184, 1));
              v137 = PRErrorWithCodeAndUserInfo(100, v136);
              *a3 = (id)objc_claimAutoreleasedReturnValue(v137);
            }

          }
        }
      }
LABEL_272:
      if (v160)
      {
        v149 = objc_opt_class(NSNumber, v9);
        if ((objc_opt_isKindOfClass(v160, v149) & 1) != 0)
        {
          v150 = objc_msgSend(v160, "integerValue");
          if (!a2[21])
            a2[21] = 1;
          a2[20] = v150;
          v151 = (id)qword_10085F520;
          if (os_log_type_enabled(v151, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[21])
              sub_10000BA44();
            v152 = a2[20];
            *(_DWORD *)v176 = 67109120;
            v177 = v152;
            _os_log_impl((void *)&_mh_execute_header, v151, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_mslot_sz_250us: %d", v176, 8u);
          }

        }
      }
      if (!v161 || (v153 = objc_opt_class(NSNumber, v9), (objc_opt_isKindOfClass(v161, v153) & 1) == 0))
      {
        v52 = 1;
        goto LABEL_315;
      }
      v154 = objc_msgSend(v161, "integerValue");
      if (!a2[19])
        a2[19] = 1;
      a2[18] = v154;
      v54 = (id)qword_10085F520;
      if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[19])
          sub_10000BA44();
        v155 = a2[18];
        *(_DWORD *)v176 = 67109120;
        v177 = v155;
        _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_mslot_sz_250us: %d", v176, 8u);
      }
      v52 = 1;
LABEL_288:

LABEL_315:
      goto LABEL_316;
    }
    if (!objc_msgSend(v170, "intValue")
      && !objc_msgSend(v164, "intValue")
      && !objc_msgSend(v157, "intValue"))
    {
      v67 = objc_msgSend(v170, "integerValue");
      if (!a2[67])
        a2[67] = 1;
      a2[66] = v67;
      v68 = objc_msgSend(v164, "integerValue");
      if (!a2[69])
        a2[69] = 1;
      a2[68] = v68;
      v69 = objc_msgSend(v157, "integerValue");
      if (!a2[71])
        a2[71] = 1;
      a2[70] = v69;
      v70 = (id)qword_10085F520;
      if (os_log_type_enabled(v70, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[67])
          sub_10000BA44();
        v71 = a2[66];
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&buf[4] = v71;
        _os_log_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_ant_mask2: 0x%x", buf, 8u);
      }

      v72 = (id)qword_10085F520;
      if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[69])
          sub_10000BA44();
        v73 = a2[68];
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&buf[4] = v73;
        _os_log_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_ant_mask2: 0x%x", buf, 8u);
      }

      v49 = (id)qword_10085F520;
      if (!os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
        goto LABEL_113;
      if (!a2[71])
        sub_10000BA44();
      v74 = a2[70];
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = v74;
      goto LABEL_112;
    }
    if (sub_1000131E8(v170))
    {
      v42 = objc_msgSend(v170, "integerValue");
      if (!a2[67])
        a2[67] = 1;
      a2[66] = v42;
      v43 = (id)qword_10085F520;
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[67])
          sub_10000BA44();
        v44 = a2[66];
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&buf[4] = v44;
        _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_ant_mask2: 0x%x", buf, 8u);
      }

      if (sub_100013268(v164))
      {
        v45 = objc_msgSend(v164, "integerValue");
        if (!a2[69])
          a2[69] = 1;
        a2[68] = v45;
        v46 = (id)qword_10085F520;
        if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[69])
            sub_10000BA44();
          v47 = a2[68];
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = v47;
          _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_ant_mask2: 0x%x", buf, 8u);
        }

        if ((sub_1000132C0(v157, v164) & 1) != 0)
        {
          v48 = objc_msgSend(v157, "integerValue");
          if (!a2[71])
            a2[71] = 1;
          a2[70] = v48;
          v49 = (id)qword_10085F520;
          if (!os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
            goto LABEL_113;
          if (!a2[71])
            sub_10000BA44();
          v50 = a2[70];
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = v50;
LABEL_112:
          _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_sync_search_ant_mask2: 0x%x", buf, 8u);
LABEL_113:

          goto LABEL_114;
        }
        v65 = (id)qword_10085F520;
        if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR))
          sub_1003C9B30((uint64_t)buf, (int)objc_msgSend(v157, "intValue"));

        if (!a3)
          goto LABEL_314;
        v208 = NSLocalizedDescriptionKey;
        v209 = CFSTR("got invalid rx_sync_search_ant_mask2.");
        v54 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v209, &v208, 1));
        v66 = PRErrorWithCodeAndUserInfo(100, v54);
        v56 = (id)objc_claimAutoreleasedReturnValue(v66);
      }
      else
      {
        v63 = (id)qword_10085F520;
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
          sub_1003C9B64((uint64_t)buf, (int)objc_msgSend(v164, "intValue"));

        if (!a3)
          goto LABEL_314;
        v210 = NSLocalizedDescriptionKey;
        v211 = CFSTR("got invalid rx_ant_mask2.");
        v54 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v211, &v210, 1));
        v64 = PRErrorWithCodeAndUserInfo(100, v54);
        v56 = (id)objc_claimAutoreleasedReturnValue(v64);
      }
    }
    else
    {
      v61 = (id)qword_10085F520;
      if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
        sub_1003C9B98((uint64_t)buf, (int)objc_msgSend(v170, "intValue"));

      if (!a3)
        goto LABEL_314;
      v212 = NSLocalizedDescriptionKey;
      v213 = CFSTR("got invalid tx_ant_mask2.");
      v54 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v213, &v212, 1));
      v62 = PRErrorWithCodeAndUserInfo(100, v54);
      v56 = (id)objc_claimAutoreleasedReturnValue(v62);
    }
LABEL_236:
    v52 = 0;
    *a3 = v56;
    goto LABEL_288;
  }
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
    sub_1003C98AC();
  if (a3)
  {
    v220 = NSLocalizedDescriptionKey;
    v221 = CFSTR("No user debug options provided.");
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v221, &v220, 1));
    v51 = PRErrorWithCodeAndUserInfo(100, v7);
    v52 = 0;
    *a3 = (id)objc_claimAutoreleasedReturnValue(v51);
LABEL_316:

    goto LABEL_317;
  }
  v52 = 0;
LABEL_317:

  return v52;
}

void sub_100013028()
{
  void *v0;

  __cxa_end_catch();
  JUMPOUT(0x100013124);
}

void sub_10001304C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_1000131D8(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_100013060()
{
  void *v0;

  JUMPOUT(0x1000131C4);
}

void sub_10001306C()
{
  JUMPOUT(0x1000131C4);
}

void sub_100013120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28)
{
  void *v28;
  void *v29;
  void *v30;

  _Unwind_Resume(a1);
}

void sub_1000131D8(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

BOOL sub_1000131E8(void *a1)
{
  id v1;
  _BOOL8 v2;

  v1 = a1;
  v2 = objc_msgSend(v1, "intValue") == 1
    || objc_msgSend(v1, "intValue") == 2
    || objc_msgSend(v1, "intValue") == 4
    || objc_msgSend(v1, "intValue") == 8;

  return v2;
}

void sub_100013258(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL sub_100013268(void *a1)
{
  id v1;
  _BOOL8 v2;

  v1 = a1;
  if (objc_msgSend(v1, "intValue"))
    v2 = (int)objc_msgSend(v1, "intValue") < 15;
  else
    v2 = 0;

  return v2;
}

void sub_1000132B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1000132C0(void *a1, void *a2)
{
  id v3;
  id v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;

  v3 = a1;
  v4 = a2;
  v5 = 0;
  v6 = 0;
  LOBYTE(v7) = objc_msgSend(v3, "intValue") != 0;
  do
  {
    v8 = objc_msgSend(v3, "intValue");
    if (v8 >> v6 >= 0)
      v9 = (v8 >> v6) & 1;
    else
      v9 = -((v8 >> v6) & 1);
    v5 += v9;
    v7 = (v5 < 3) & v7;
    ++v6;
  }
  while (v6 != 4);
  v10 = objc_msgSend(v3, "intValue");
  v11 = objc_msgSend(v4, "intValue");
  if ((v11 & v10) == objc_msgSend(v3, "intValue"))
    v12 = v7;
  else
    v12 = 0;

  return v12;
}

void sub_100013380(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_100013398(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  void *v19;
  NSErrorUserInfoKey v21;
  const __CFString *v22;
  uint8_t buf[4];
  void *v24;
  NSErrorUserInfoKey v25;
  const __CFString *v26;

  v3 = a1;
  v4 = v3;
  if (v3)
  {
    v5 = PRDebugConfigArgDebugLevel;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", PRDebugConfigArgDebugLevel));
    if (v7)
    {
      v8 = objc_opt_class(NSNumber, v6);
      if ((objc_opt_isKindOfClass(v7, v8) & 1) != 0)
      {
        v9 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v24 = v7;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[Debug Options] got debugLevel: %@", buf, 0xCu);
        }
        if ((int)objc_msgSend(v7, "intValue") < 1 || (int)objc_msgSend(v7, "intValue") >= 4)
        {
          if (!a2)
          {
            v12 = 0;
            goto LABEL_21;
          }
          v21 = NSLocalizedDescriptionKey;
          v22 = CFSTR("Invalid debug level. Only 1-3 allowed.");
          v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v22, &v21, 1));
          v11 = PRErrorWithCodeAndUserInfo(100, v10);
          v12 = 0;
          *a2 = (id)objc_claimAutoreleasedReturnValue(v11);
          goto LABEL_20;
        }
        v14 = (void *)objc_claimAutoreleasedReturnValue(+[PRGlobalDebugSettings sharedSettings](PRGlobalDebugSettings, "sharedSettings"));
        objc_msgSend(v14, "setObject:forKey:", v7, v5);

      }
    }
    v15 = PRDebugConfigArgLeadingEdgeThresholds;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", PRDebugConfigArgLeadingEdgeThresholds));
    if (v10)
    {
      v17 = objc_opt_class(NSArray, v16);
      if ((objc_opt_isKindOfClass(v10, v17) & 1) != 0)
      {
        v18 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v24 = v10;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "[Debug Options] got LE thresholds: %@", buf, 0xCu);
        }
        v19 = (void *)objc_claimAutoreleasedReturnValue(+[PRGlobalDebugSettings sharedSettings](PRGlobalDebugSettings, "sharedSettings"));
        objc_msgSend(v19, "setObject:forKey:", v10, v15);

      }
    }
    v12 = 1;
LABEL_20:

    goto LABEL_21;
  }
  if (a2)
  {
    v25 = NSLocalizedDescriptionKey;
    v26 = CFSTR("No user global debug options provided.");
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v26, &v25, 1));
    v13 = PRErrorWithCodeAndUserInfo(999, v7);
    v12 = 0;
    *a2 = (id)objc_claimAutoreleasedReturnValue(v13);
LABEL_21:

    goto LABEL_22;
  }
  v12 = 0;
LABEL_22:

  return v12;
}

void sub_100013668(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1000136D0(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, a5, 8u);
}

uint64_t sub_1000136E0(uint64_t result, int a2, float a3)
{
  *(float *)result = a3;
  *(_DWORD *)(result + 4) = a2;
  return result;
}

void sub_1000136EC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_100013768(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_100013780()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_1000137FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_100013814()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_100013890(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_1000138A8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_100013924(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_10001393C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_1000139B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_1000139D0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_100013A4C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_100013A64()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_100013AE0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_100013AF8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_100013B74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_100013B8C()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_1004565E8;
      v1[1] = unk_1004565F8;
      v1[2] = xmmword_100456608;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_100013C2C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_100013C44()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853410 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853400 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853400, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853428 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853418 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853418, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100853440 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853430 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853430, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853458 = v15->__r_.__value_.__r.__words[2];
  xmmword_100853448 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853448, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100853470 = v19->__r_.__value_.__r.__words[2];
  xmmword_100853460 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853460, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100853488 = v23->__r_.__value_.__r.__words[2];
  xmmword_100853478 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853478, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008534A0 = v27->__r_.__value_.__r.__words[2];
  xmmword_100853490 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853490, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008534B8 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008534A8 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008534A8, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008534D0 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008534C0 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008534C0, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100014238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1000142AC@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA430[a1]);
}

_QWORD *sub_1000142C0@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA488[a1]);
}

_QWORD *sub_1000142D4@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA4D0[a1]);
}

_QWORD *sub_1000142E8@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA4F0[a1]);
}

void sub_1000145A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id location)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

uint64_t sub_1000145E8(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v3 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void sub_100014780(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1000149D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11, uint64_t a12, char a13)
{
  if (a10)
    std::__shared_weak_count::__release_weak(a10);
  sub_10001AE68((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_100014B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10001AE68((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100014C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100014CA0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003C9C9C();
  }
  else
  {
    objc_msgSend(v5, "didFailWithError:", *(_QWORD *)(a1 + 32));
  }

}

void sub_100014D1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100014E60(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "handleError:", *(_QWORD *)(a1 + 32));

}

void sub_100014E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100014F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);

  sub_10001AE30((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100014F74(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003C9C9C();
  }
  else
  {
    objc_msgSend(v5, "didReceiveNewSolutions:", *(_QWORD *)(a1 + 32));
  }

}

void sub_100014FF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100015054(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003C9C9C();
  }
  else
  {
    objc_msgSend(v5, "rangingServiceDidUpdateState:cause:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  }

}

void sub_1000150D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100015160(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10001AE30(v1 - 32);
  _Unwind_Resume(a1);
}

void sub_100015174(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003C9C9C();
  }
  else
  {
    objc_msgSend(v5, "rangingRequestDidUpdateStatus:", *(_QWORD *)(a1 + 32));
  }

}

void sub_1000151F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100015464(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100015538(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  _DWORD *v4;
  NSObject *v5;
  void *v6;
  id v7;
  void *v8;
  NSObject *v9;
  void *v10;
  id v11;
  void *v12;
  int v13;
  NSObject *v14;
  void *v15;
  id v16;
  void *v17;
  NSObject *v18;
  NSObject *v19;
  void *v20;
  id v21;
  void *v22;
  uint8_t v23[8];
  NSErrorUserInfoKey v24;
  const __CFString *v25;
  NSErrorUserInfoKey v26;
  const __CFString *v27;
  NSErrorUserInfoKey v28;
  const __CFString *v29;
  NSErrorUserInfoKey v30;
  const __CFString *v31;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v4 = objc_loadWeakRetained(v2);
    switch(*(_QWORD *)(a1 + 48))
    {
      case 0:
        v5 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PRRangingManager PRRangingRequestStatusUnknown #companion-retry", v23, 2u);
        }
        v24 = NSLocalizedDescriptionKey;
        v25 = CFSTR("Unexpected PRRangingRequestStatusUnknown");
        v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v25, &v24, 1));
        v7 = PRErrorWithCodeAndUserInfo(999, v6);
        v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

        objc_msgSend(v4, "handleError:", v8);
        break;
      case 1:
        v9 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "PRRangingManager PRRangingRequestStatusDidStart #companion-retry", v23, 2u);
        }
        if (v4[16] != 3)
        {
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
            sub_1003C9CFC();
          v30 = NSLocalizedDescriptionKey;
          v31 = CFSTR("Unexpected PRRangingRequestStatusDidStart");
          v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v31, &v30, 1));
          v11 = PRErrorWithCodeAndUserInfo(999, v10);
          v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

          objc_msgSend(v4, "handleError:", v12);
        }
        v13 = 4;
        goto LABEL_30;
      case 2:
        v14 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "PRRangingManager PRRangingRequestStatusStopped #companion-retry", v23, 2u);
        }
        if ((v4[16] & 0xFFFFFFFE) != 4)
        {
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
            sub_1003C9D54();
          v26 = NSLocalizedDescriptionKey;
          v27 = CFSTR("Unexpected PRRangingRequestStatusStopped");
          v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v27, &v26, 1));
          v16 = PRErrorWithCodeAndUserInfo(999, v15);
          v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

          objc_msgSend(v4, "handleError:", v17);
        }
        v4[16] = 1;
        objc_msgSend(v4, "combineAndReportLocalAndCompanionRangingRequestStatus");
        break;
      case 3:
        v18 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "PRRangingManager PRRangingRequestStatusInvalidated #companion-retry", v23, 2u);
        }
        objc_msgSend(v4, "reportRangingRequestStatusUpdate:", *(_QWORD *)(a1 + 48));
        break;
      case 4:
        v19 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "PRRangingManager PRRangingRequestStatusFailedToStart #companion-retry", v23, 2u);
        }
        if (v4[16] != 3)
        {
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
            sub_1003C9D28();
          v28 = NSLocalizedDescriptionKey;
          v29 = CFSTR("Unexpected PRRangingRequestStatusFailedToStart");
          v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v29, &v28, 1));
          v21 = PRErrorWithCodeAndUserInfo(999, v20);
          v22 = (void *)objc_claimAutoreleasedReturnValue(v21);

          objc_msgSend(v4, "handleError:", v22);
        }
        v13 = 1;
LABEL_30:
        v4[16] = v13;
        objc_msgSend(*(id *)(a1 + 32), "combineAndReportLocalAndCompanionRangingRequestStatus");
        break;
      default:
        break;
    }

  }
}

void sub_100015970(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100015A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_100015A90(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003C9C9C();
  }
  else
  {
    objc_msgSend(v5, "remoteDevice:didChangeState:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  }

}

void sub_100015B0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100015BD4(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  _BOOL4 v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  unsigned __int16 v15;
  id v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  int v36;
  void *v37;
  NSErrorUserInfoKey v38;
  const __CFString *v39;
  NSErrorUserInfoKey v40;
  const __CFString *v41;
  NSErrorUserInfoKey v42;
  const __CFString *v43;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v4 = (id *)objc_loadWeakRetained(v2);
    v5 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v36) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PRRangingManager didReceiveSessionStartNotification #companion-retry", (uint8_t *)&v36, 2u);
    }
    if (*((_DWORD *)v4 + 16) == 2)
    {
      if (*((_DWORD *)v4 + 17) == 3)
      {
        v6 = *(void **)(a1 + 32);
        if (!v6
          || !objc_msgSend(v6, "notificationType")
          && (v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bluetoothConnectionEventCounterValue")),
              v8 = v7 == 0,
              v7,
              v8))
        {
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
            sub_1003C9D80();
          v38 = NSLocalizedDescriptionKey;
          v39 = CFSTR("Unexpected didReceiveSessionStartNotification notification values");
          v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v39, &v38, 1));
          v10 = PRErrorWithCodeAndUserInfo(999, v9);
          v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

          objc_msgSend(v4, "handleError:", v11);
        }
        *((_DWORD *)v4 + 16) = 3;
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bluetoothConnectionEventCounterValue"));
        v13 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          v36 = 138412290;
          v37 = v12;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "PRRangingManager futureEventCounterValue == %@ #companion-retry", (uint8_t *)&v36, 0xCu);
        }
        v14 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v36) = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "_companionRangingManager startRangingWithParameters #companion-retry", (uint8_t *)&v36, 2u);
        }
        v15 = (unsigned __int16)objc_msgSend(v12, "intValue");
        v16 = v4[13];
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4[14], "UUID"));
        objc_msgSend(v16, "startRangingOnDevice:targetEventCounter:", v17, v15);

        *((_DWORD *)v4 + 17) = 4;
      }
      else
      {
        v27 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003C9DB8((uint64_t)v4 + 68, v27, v28, v29, v30, v31, v32, v33);
        v40 = NSLocalizedDescriptionKey;
        v41 = CFSTR("Unexpected didReceiveSessionStartNotification due to companionRangingState");
        v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v41, &v40, 1));
        v35 = PRErrorWithCodeAndUserInfo(999, v34);
        v12 = (void *)objc_claimAutoreleasedReturnValue(v35);

        objc_msgSend(v4, "handleError:", v12);
      }
    }
    else
    {
      v18 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
        sub_1003C9E20((uint64_t)(v4 + 8), v18, v19, v20, v21, v22, v23, v24);
      v42 = NSLocalizedDescriptionKey;
      v43 = CFSTR("Unexpected didReceiveSessionStartNotification due to localRangingState");
      v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v43, &v42, 1));
      v26 = PRErrorWithCodeAndUserInfo(999, v25);
      v12 = (void *)objc_claimAutoreleasedReturnValue(v26);

      objc_msgSend(v4, "handleError:", v12);
    }

  }
}

void sub_100015F48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100016B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, void *a11, void *a12, char a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,std::__shared_weak_count *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;

  objc_sync_exit(v33);
  sub_10001AE68((uint64_t)&a18);

  _Unwind_Resume(a1);
}

void sub_100017198(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1000173CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100017890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100017B38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100018040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_10001832C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, char a13)
{
  void *v13;
  void *v14;

  if (a11)
    std::__shared_weak_count::__release_weak(a11);
  sub_10001AE68((uint64_t)&a13);

  _Unwind_Resume(a1);
}

void sub_1000184C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100018630(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100018B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  void *v11;
  va_list va;

  va_start(va, a11);

  sub_10001AE68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100018DBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100019000(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1000192E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1000195DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1000199DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100019D5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10001A048(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10001A4B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10001A714(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10001A9A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10001AAAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10001AC80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

_QWORD *sub_10001ADBC(_QWORD *a1, _QWORD *a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;

  v3 = (std::__shared_weak_count *)a2[1];
  *a1 = *a2;
  if (!v3)
  {
    a1[1] = 0;
LABEL_5:
    sub_10001ADFC();
  }
  v4 = std::__shared_weak_count::lock(v3);
  a1[1] = v4;
  if (!v4)
    goto LABEL_5;
  return a1;
}

void sub_10001ADFC()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
}

uint64_t sub_10001AE30(uint64_t a1)
{

  return a1;
}

uint64_t sub_10001AE68(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_10001AEC0(id *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;

  v4 = operator new(0x48uLL);
  sub_10001AF20(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_10001B020((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_10001AF0C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_10001AF20(_QWORD *a1, id *location)
{
  char v4;

  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1007FA3F0;
  sub_10001AFCC((int)&v4, (uint64_t)(a1 + 3), location);
  return a1;
}

void sub_10001AF68(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_10001AF7C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007FA3F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10001AF8C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007FA3F0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_10001AFBC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_10001AFCC(int a1, uint64_t a2, id *location)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained(location);
  sub_1002A0EE4(a2, WeakRetained);

}

void sub_10001B00C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10001B020(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *p_shared_weak_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  if (a2)
  {
    v4 = (std::__shared_weak_count *)a2[1];
    if (!v4 || v4->__shared_owners_ == -1)
    {
      v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        p_shared_weak_owners = (unint64_t *)&v5->__shared_weak_owners_;
        do
          v9 = __ldxr(p_shared_weak_owners);
        while (__stxr(v9 + 1, p_shared_weak_owners));
        v4 = (std::__shared_weak_count *)a2[1];
      }
      *a2 = a3;
      a2[1] = v5;
      if (v4)
        std::__shared_weak_count::__release_weak(v4);
      if (v5)
      {
        v10 = (unint64_t *)&v5->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
    }
  }
}

void sub_10001B0D0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_10001B0FC(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x12u);
}

void sub_10001B134()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_10001B1B0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_10001B1C8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_10001B244(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_10001B25C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_10001B2D8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_10001B2F0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_10001B36C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_10001B384()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_10001B400(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_10001B418()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_10001B494(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_10001B4AC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_10001B528(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_10001B540()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_10001B5BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_10001B5D4()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456648;
      v1[1] = unk_100456658;
      v1[2] = xmmword_100456668;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_10001B674(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_10001B68C()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008534E8 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008534D8 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008534D8, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853500 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008534F0 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008534F0, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100853518 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853508 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853508, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853530 = v15->__r_.__value_.__r.__words[2];
  xmmword_100853520 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853520, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100853548 = v19->__r_.__value_.__r.__words[2];
  xmmword_100853538 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853538, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100853560 = v23->__r_.__value_.__r.__words[2];
  xmmword_100853550 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853550, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100853578 = v27->__r_.__value_.__r.__words[2];
  xmmword_100853568 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853568, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100853590 = v31->__r_.__value_.__r.__words[2];
  xmmword_100853580 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853580, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008535A8 = v35->__r_.__value_.__r.__words[2];
  xmmword_100853598 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853598, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10001BC80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_10001BCF4@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA588[a1]);
}

_QWORD *sub_10001BD08@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA5E0[a1]);
}

_QWORD *sub_10001BD1C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA628[a1]);
}

_QWORD *sub_10001BD30@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA648[a1]);
}

void sub_10001BD70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10001BF54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10001C0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10001C214(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10001C308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_10001C334(uint64_t a1, void *a2)
{
  _xpc_activity_s *v3;
  xpc_activity_state_t state;
  NSObject *v5;
  xpc_object_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  id v18;
  uint8_t buf[4];
  xpc_activity_state_t v20;

  v3 = a2;
  state = xpc_activity_get_state(v3);
  v5 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v20 = state;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PRXPCActivityManager state: %ld", buf, 0xCu);
  }
  if (state == 2)
  {
    v7 = *(_QWORD *)(a1 + 40);
    v8 = *(void **)(a1 + 48);
    v9 = *(NSObject **)(v7 + 8);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_10001C4C0;
    v17[3] = &unk_1007FA518;
    v17[4] = v7;
    v18 = v8;
    dispatch_sync(v9, v17);

  }
  else if (state)
  {
    v10 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
      sub_1003CA344(state, v10, v11, v12, v13, v14, v15, v16);
  }
  else
  {
    v6 = xpc_activity_copy_criteria(v3);
    if (!v6)
      xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));

  }
}

void sub_10001C4A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_10001C4C0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "runActivityWithIdentifier:", *(_QWORD *)(a1 + 40));
}

void sub_10001C654(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10001C900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

id sub_10001C92C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10001C964(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_10001C974()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_10001C9F0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_10001CA08()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_10001CA84(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_10001CA9C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_10001CB18(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_10001CB30()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_10001CBAC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_10001CBC4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_10001CC40(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_10001CC58()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_10001CCD4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_10001CCEC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_10001CD68(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_10001CD80()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_10001CDFC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_10001CE14()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_1004566C8;
      v1[1] = unk_1004566D8;
      v1[2] = xmmword_1004566E8;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_10001CEB4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_10001CECC()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008535C0 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008535B0 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008535B0, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008535D8 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008535C8 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008535C8, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008535F0 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008535E0 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008535E0, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853608 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008535F8 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008535F8, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100853620 = v19->__r_.__value_.__r.__words[2];
  xmmword_100853610 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853610, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100853638 = v23->__r_.__value_.__r.__words[2];
  xmmword_100853628 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853628, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100853650 = v27->__r_.__value_.__r.__words[2];
  xmmword_100853640 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853640, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100853668 = v31->__r_.__value_.__r.__words[2];
  xmmword_100853658 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853658, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100853680 = v35->__r_.__value_.__r.__words[2];
  xmmword_100853670 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853670, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10001D4C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void *sub_10001D534()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100853860);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_100853860))
  {
    sub_10001F2E4((uint64_t)&unk_100853688);
    __cxa_atexit((void (*)(void *))sub_10001D5C4, &unk_100853688, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_100853860);
  }
  return &unk_100853688;
}

void sub_10001D5AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100853860);
  _Unwind_Resume(a1);
}

unint64_t sub_10001D5C8(uint64_t a1, void *a2)
{
  id v3;
  std::mutex *v4;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  const mach_header_64 *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  id v21;

  v3 = a2;
  v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_10001D778() & 1) != 0)
  {
    v5 = objc_msgSend(v3, "length");
    v6 = qword_10085F520;
    if (v5 == (id)6)
    {
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
      {
        v20 = 138412290;
        v21 = v3;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#wifi-service,New self ID: %@", (uint8_t *)&v20, 0xCu);
      }
      v7 = objc_msgSend(v3, "copy");
      v8 = *(void **)(a1 + 192);
      *(_QWORD *)(a1 + 192) = v7;

      *(_BYTE *)(a1 + 54) = 1;
      sub_10001DB48(a1, 0.0);
      v9 = 0;
      v10 = 0;
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
        sub_1003CA4A4(v6, v12, v13, v14, v15, v16, v17, v18);
      v9 = &_mh_execute_header;
      v10 = 2;
    }
  }
  else
  {
    v11 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
    {
      LOWORD(v20) = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "#wifi-service,ignoring self id on unsupported platform", (uint8_t *)&v20, 2u);
    }
    v10 = 0;
    v9 = &_mh_execute_header;
  }
  std::mutex::unlock(v4);

  return v10 | (unint64_t)v9;
}

void sub_10001D750(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_10001D778()
{
  id v0;
  void *v1;
  __CFString *v2;
  void *v3;
  NSObject *v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  const char *v8;
  NSObject *v10;
  const char *v11;
  int v12;
  void *v13;

  v0 = sub_1001FDAFC();
  v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  v2 = sub_1001FD9AC();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v12 = 138412290;
    v13 = v1;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi-service,wifi chipset: %@", (uint8_t *)&v12, 0xCu);
  }
  v5 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v12 = 138412290;
    v13 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,productType: %@", (uint8_t *)&v12, 0xCu);
  }
  if (v1)
  {
    if (((objc_msgSend(v1, "hasPrefix:", CFSTR("4357")) & 1) != 0
       || (objc_msgSend(v1, "hasPrefix:", CFSTR("4377")) & 1) != 0
       || (objc_msgSend(v1, "hasPrefix:", CFSTR("4378")) & 1) != 0
       || (objc_msgSend(v1, "hasPrefix:", CFSTR("4387")) & 1) != 0
       || (objc_msgSend(v1, "hasPrefix:", CFSTR("4388")) & 1) != 0
       || (objc_msgSend(v1, "hasPrefix:", CFSTR("4399")) & 1) != 0
       || objc_msgSend(v1, "hasPrefix:", CFSTR("marconi")))
      && ((objc_msgSend(v3, "hasPrefix:", CFSTR("iPhone")) & 1) != 0
       || (objc_msgSend(v3, "hasPrefix:", CFSTR("AudioAccessory1")) & 1) != 0
       || (objc_msgSend(v3, "hasPrefix:", CFSTR("Mac")) & 1) != 0
       || (objc_msgSend(v3, "hasPrefix:", CFSTR("iMac")) & 1) != 0
       || (objc_msgSend(v3, "hasPrefix:", CFSTR("RealityDevice")) & 1) != 0
       || (objc_msgSend(v3, "hasPrefix:", CFSTR("Watch")) & 1) != 0
       || (objc_msgSend(v3, "hasPrefix:", CFSTR("AudioAccessory6,1")) & 1) != 0
       || objc_msgSend(v3, "hasPrefix:", CFSTR("AudioAccessory5,"))))
    {
      v6 = qword_10085F520;
      v7 = 1;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
      {
        LOWORD(v12) = 0;
        v8 = "#wifi-service,Found ranging supported capability via chipset.";
LABEL_31:
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, v8, (uint8_t *)&v12, 2u);
        goto LABEL_35;
      }
      goto LABEL_35;
    }
    v10 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
    {
      LOWORD(v12) = 0;
      v11 = "#wifi-service,Ranging not supported - via chipset.";
      goto LABEL_40;
    }
    goto LABEL_34;
  }
  if (!v3)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CA510();
    goto LABEL_34;
  }
  if ((objc_msgSend(v3, "hasPrefix:", CFSTR("Watch")) & 1) == 0
    && (objc_msgSend(v3, "hasPrefix:", CFSTR("Mac")) & 1) == 0
    && (objc_msgSend(v3, "hasPrefix:", CFSTR("iMac")) & 1) == 0
    && (objc_msgSend(v3, "hasPrefix:", CFSTR("AudioAccessory6,1")) & 1) == 0
    && !objc_msgSend(v3, "hasPrefix:", CFSTR("AudioAccessory5,")))
  {
    v10 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
    {
      LOWORD(v12) = 0;
      v11 = "#wifi-service,Ranging not supported - via product type.";
LABEL_40:
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, v11, (uint8_t *)&v12, 2u);
    }
LABEL_34:
    v7 = 0;
    goto LABEL_35;
  }
  v6 = qword_10085F520;
  v7 = 1;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
  {
    LOWORD(v12) = 0;
    v8 = "#wifi-service,Found ranging supported capability via product type.";
    goto LABEL_31;
  }
LABEL_35:

  return v7;
}

void sub_10001DB24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10001DB48(uint64_t a1, double a2)
{
  dispatch_time_t v3;
  NSObject *v4;
  NSObject *v5;
  _QWORD v6[5];
  _QWORD block[5];

  if (!*(_BYTE *)(a1 + 49))
  {
    *(_BYTE *)(a1 + 49) = 1;
    if (a2 <= 0.0)
    {
      v5 = *(NSObject **)(a1 + 80);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100020694;
      block[3] = &unk_1007FA668;
      block[4] = a1;
      dispatch_async(v5, block);
    }
    else
    {
      v3 = dispatch_time(0, (uint64_t)(a2 * 1000000000.0));
      v4 = *(NSObject **)(a1 + 80);
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_100020CA4;
      v6[3] = &unk_1007FA668;
      v6[4] = a1;
      dispatch_after(v3, v4, v6);
    }
  }
}

uint64_t sub_10001DC18(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  NSObject *v4;
  uint8_t v6[16];

  v2 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_10001D778() & 1) != 0)
  {
    v3 = *(_QWORD *)(a1 + 416);
    if (!v3)
    {
      v3 = 1;
      *(_QWORD *)(a1 + 416) = 1;
    }
    *(_QWORD *)(a1 + 416) = v3 + 1;
  }
  else
  {
    v4 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#wifi-service,ignoring ticket IDs on unsupported platform", v6, 2u);
    }
    v3 = 0;
  }
  std::mutex::unlock(v2);
  return v3;
}

void sub_10001DCC8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10001DCDC(uint64_t a1, __int128 *a2, uint64_t a3, void *a4)
{
  id v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  id v15;
  void *__p[2];
  char v17;
  _BYTE v18[24];
  _BYTE *v19;
  id v20;

  v7 = a4;
  std::mutex::lock((std::mutex *)(a1 + 88));
  sub_100027674((uint64_t)v13, a3);
  v8 = v7;
  v15 = v8;
  sub_10002602C(__p, a2, (uint64_t)v13);
  sub_100027114((uint64_t **)(a1 + 424), (const void **)__p, (__int128 *)__p);

  v9 = v19;
  if (v19 == v18)
  {
    v10 = 4;
    v9 = v18;
  }
  else
  {
    if (!v19)
      goto LABEL_6;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_6:
  if (v17 < 0)
    operator delete(__p[0]);

  v11 = v14;
  if (v14 == v13)
  {
    v12 = 4;
    v11 = v13;
    goto LABEL_12;
  }
  if (v14)
  {
    v12 = 5;
LABEL_12:
    (*(void (**)(void))(*v11 + 8 * v12))();
  }
  std::mutex::unlock((std::mutex *)(a1 + 88));

}

void sub_10001DE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, id a13, char a14)
{
  std::mutex *v14;
  void *v15;
  uint64_t *v17;
  uint64_t v18;

  sub_10001DE98((uint64_t)&a14);

  v17 = a12;
  if (a12 == &a9)
  {
    v18 = 4;
    v17 = &a9;
  }
  else
  {
    if (!a12)
      goto LABEL_6;
    v18 = 5;
  }
  (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_6:
  std::mutex::unlock(v14);

  _Unwind_Resume(a1);
}

uint64_t sub_10001DE98(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (_QWORD *)(a1 + 24);

  v3 = *(_QWORD **)(a1 + 48);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_10001DF00(uint64_t a1, const void **a2)
{
  std::mutex *v4;

  v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  sub_1000276D8((uint64_t **)(a1 + 424), a2);
  std::mutex::unlock(v4);
}

void sub_10001DF44(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_10001DF58(uint64_t a1, uint64_t *a2)
{
  std::mutex *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double v15;
  int v16;
  NSObject *v17;
  uint64_t v18;
  const mach_header_64 *v19;
  double v21;
  NSObject *v22;
  NSObject *v23;
  NSObject *v24;
  uint64_t v25;
  _OWORD v26[2];
  id v27;
  id v28;
  _BYTE v29[24];
  _BYTE *v30;
  _BYTE v31[24];
  _BYTE *v32;
  _BYTE v33[24];
  _BYTE *v34;
  id v35;

  v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_10001D778() & 1) != 0)
  {
    if (a2[1] != *a2)
    {
      v5 = sub_100048CBC(*a2);
      v6 = *a2;
      v7 = a2[1];
      if (*a2 != v7)
      {
        do
        {
          sub_1000260D8((uint64_t)v26, v6);
          v8 = sub_100048CBC((uint64_t)v26);

          v9 = v34;
          if (v34 == v33)
          {
            v9 = v33;
            v10 = 4;
          }
          else
          {
            if (!v34)
              goto LABEL_9;
            v10 = 5;
          }
          (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_9:
          v11 = v32;
          if (v32 == v31)
          {
            v11 = v31;
            v12 = 4;
          }
          else
          {
            if (!v32)
              goto LABEL_14;
            v12 = 5;
          }
          (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_14:
          v13 = v30;
          if (v30 == v29)
          {
            v13 = v29;
            v14 = 4;
          }
          else
          {
            if (!v30)
              goto LABEL_19;
            v14 = 5;
          }
          (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_19:

          if (v8 != v5)
          {
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              sub_1003CA618();
            goto LABEL_37;
          }
          v6 += 168;
        }
        while (v6 != v7);
      }
      if (!v5)
      {
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003CA568();
        goto LABEL_37;
      }
      v15 = sub_10000883C();
      v16 = *(_DWORD *)(a1 + 448);
      switch(v16)
      {
        case 0:
          v21 = v15;
          if (v5 == 2)
          {
            v23 = qword_10085F520;
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(v26[0]) = 0;
              _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#wifi-service,setting self role to responder", (uint8_t *)v26, 2u);
            }
            if (sub_10001E538(a1) && os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              sub_1003CA594();
            *(_DWORD *)(a1 + 448) = 2;
            sub_10001E5A0(a1, (id **)a2);
            sub_1002ADB60(*(_QWORD *)(a1 + 64), 1022611261 * ((unint64_t)(a2[1] - *a2) >> 3), v21);
          }
          else if (v5 == 1)
          {
            v22 = qword_10085F520;
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(v26[0]) = 0;
              _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#wifi-service,setting self role to initiator", (uint8_t *)v26, 2u);
            }
            if (sub_10001E538(a1) && os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              sub_1003CA594();
            *(_DWORD *)(a1 + 448) = 1;
            sub_10001E5A0(a1, (id **)a2);
            sub_1002ADB94(*(_QWORD *)(a1 + 64), 1022611261 * ((unint64_t)(a2[1] - *a2) >> 3), v21);
          }
          goto LABEL_57;
        case 1:
          if (v5 != 1)
          {
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              sub_1003CA5C0();
            goto LABEL_37;
          }
          break;
        case 2:
          if (v5 != 2)
          {
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              sub_1003CA5EC();
            goto LABEL_37;
          }
          break;
        default:
LABEL_57:
          v24 = qword_10085F520;
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
          {
            v25 = *(_QWORD *)(a1 + 232);
            LODWORD(v26[0]) = 134217984;
            *(_QWORD *)((char *)v26 + 4) = v25;
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "#wifi-service,start ranging - peer map holds %lu peers", (uint8_t *)v26, 0xCu);
          }
          sub_10001DB48(a1, 0.0);
          v19 = 0;
          v18 = 0;
          goto LABEL_38;
      }
      sub_10001E5A0(a1, (id **)a2);
      goto LABEL_57;
    }
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CA53C();
LABEL_37:
    v19 = &_mh_execute_header;
    v18 = 2;
  }
  else
  {
    v17 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
    {
      LOWORD(v26[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "#wifi-service,ignoring range request on unsupported platform", (uint8_t *)v26, 2u);
    }
    v18 = 0;
    v19 = &_mh_execute_header;
  }
LABEL_38:
  std::mutex::unlock(v4);
  return v18 | (unint64_t)v19;
}

void sub_10001E428(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10001E460(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v2 = *(_QWORD **)(a1 + 136);
  if (v2 == (_QWORD *)(a1 + 112))
  {
    v3 = 4;
    v2 = (_QWORD *)(a1 + 112);
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  v4 = *(_QWORD **)(a1 + 104);
  if (v4 == (_QWORD *)(a1 + 80))
  {
    v5 = 4;
    v4 = (_QWORD *)(a1 + 80);
  }
  else
  {
    if (!v4)
      goto LABEL_11;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_11:
  v6 = *(_QWORD **)(a1 + 72);
  if (v6 == (_QWORD *)(a1 + 48))
  {
    v7 = 4;
    v6 = (_QWORD *)(a1 + 48);
    goto LABEL_15;
  }
  if (v6)
  {
    v7 = 5;
LABEL_15:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  return a1;
}

BOOL sub_10001E538(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 232);
  if (!v1)
  {
    if (*(_DWORD *)(a1 + 448))
    {
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
        sub_1003CA644();
      v1 = *(_QWORD *)(a1 + 232);
    }
    else
    {
      v1 = 0;
    }
  }
  return v1 != 0;
}

void sub_10001E5A0(uint64_t a1, id **a2)
{
  NSObject *v4;
  _BOOL8 v5;
  id *v6;
  NSObject *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  _BOOL4 v21;
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;
  BOOL v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  unsigned __int8 v46;
  NSObject *v47;
  id v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t **v63;
  _QWORD *v64;
  id *v65;
  id **v66;
  void **v67;
  void **v68;
  char v69;
  char v70[7];
  void ***v71;
  char v72;
  id *v73;
  id v74;
  _QWORD v75[4];
  _BYTE v76[24];
  _BYTE *v77;
  _BYTE v78[24];
  _BYTE *v79;
  _BYTE v80[24];
  _BYTE *v81;
  id v82;
  char v83[16];
  _BYTE buf[22];
  __int16 v85;
  void *v86;
  id v87;
  id v88;
  _BYTE v89[24];
  _BYTE *v90;
  _BYTE v91[24];
  _BYTE *v92;
  _BYTE v93[24];
  _BYTE *v94;
  id v95;
  _QWORD v96[3];

  if (!*(_BYTE *)(a1 + 56))
  {
    v4 = qword_10085F520;
    v5 = os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi-service,Peers added while not ready", buf, 2u);
    }
    sub_100022560(v5, 1, a2);
  }
  v6 = *a2;
  v65 = a2[1];
  if (*a2 == v65)
    return;
  v63 = (uint64_t **)(a1 + 216);
  v64 = (_QWORD *)(a1 + 224);
  do
  {
    v7 = (id)qword_10085F520;
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = sub_100048CA4(v6);
      v9 = (id)objc_claimAutoreleasedReturnValue(v8);
      v10 = sub_100048CC4((uint64_t)v6);
      v11 = (id)objc_claimAutoreleasedReturnValue(v10);
      v12 = sub_100048CD4((uint64_t)v6);
      v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      *(_DWORD *)buf = 138412802;
      *(_QWORD *)&buf[4] = v9;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v11;
      v85 = 2112;
      v86 = v13;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#wifi-service,Adding to map peer ID: %@; client queue: %@, peer mac: %@",
        buf,
        0x20u);

    }
    v14 = (id *)sub_100048CDC((uint64_t)v6);
    v15 = sub_100048CA4(v6);
    v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    if (!v16)
      goto LABEL_27;
    v17 = sub_100048CAC((uint64_t)v6);
    v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    if (!v18)
    {

LABEL_27:
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
        sub_1003CA670(&v69, v70);
      sub_1000260D8((uint64_t)buf, (uint64_t)v6);
      v73 = 0;
      v74 = 0;
      v75[0] = 0;
      v66 = &v73;
      LOBYTE(v67) = 0;
      v73 = (id *)operator new(0xA8uLL);
      v74 = v73;
      v75[0] = v73 + 21;
      v74 = (id)sub_100027FB8((uint64_t)v75, (uint64_t)buf, (uint64_t)v96, (uint64_t)v73);
      sub_100021F4C((uint64_t)v74, v29, &v73);
      v66 = &v73;
      sub_100027F34((void ***)&v66);

      v30 = v94;
      if (v94 == v93)
      {
        v30 = v93;
        v31 = 4;
      }
      else
      {
        if (!v94)
          goto LABEL_34;
        v31 = 5;
      }
      (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_34:
      v32 = v92;
      if (v92 == v91)
      {
        v32 = v91;
        v33 = 4;
      }
      else
      {
        if (!v92)
          goto LABEL_39;
        v33 = 5;
      }
      (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_39:
      v34 = v90;
      if (v90 == v89)
      {
        v34 = v89;
        v35 = 4;
      }
      else
      {
        if (!v90)
          goto LABEL_57;
        v35 = 5;
      }
      (*(void (**)(void))(*v34 + 8 * v35))();
      goto LABEL_57;
    }
    v19 = sub_100048CB4((uint64_t)v6);
    v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
    v21 = v20 == 0;

    if (v21)
      goto LABEL_27;
    v22 = (_QWORD *)*v64;
    if (!*v64)
      goto LABEL_23;
    v23 = v64;
    do
    {
      v24 = v22[4];
      v25 = v24 >= (unint64_t)v14;
      if (v24 >= (unint64_t)v14)
        v26 = v22;
      else
        v26 = v22 + 1;
      if (v25)
        v23 = v22;
      v22 = (_QWORD *)*v26;
    }
    while (*v26);
    if (v23 == v64 || (unint64_t)v14 < v23[4])
    {
LABEL_23:
      sub_1000260D8((uint64_t)buf, (uint64_t)v6);
      v66 = 0;
      v67 = 0;
      v68 = 0;
      v71 = (void ***)&v66;
      v72 = 0;
      v66 = (id **)operator new(0xA8uLL);
      v67 = (void **)v66;
      v68 = (void **)(v66 + 21);
      v67 = (void **)sub_100027FB8((uint64_t)&v68, (uint64_t)buf, (uint64_t)v96, (uint64_t)v66);
      v73 = v14;
      v75[0] = 0;
      v75[1] = 0;
      v74 = 0;
      sub_100027C20(&v74, (uint64_t)v66, (uint64_t)v67, 0xCF3CF3CF3CF3CF3DLL * (((char *)v67 - (char *)v66) >> 3));
      sub_100028058(v63, (unint64_t *)&v73, (uint64_t)&v73);
      v71 = (void ***)&v74;
      sub_100027F34((void ***)&v71);
      v71 = (void ***)&v66;
      sub_100027F34((void ***)&v71);

      v27 = v94;
      if (v94 == v93)
      {
        v27 = v93;
        v28 = 4;
LABEL_46:
        (*(void (**)(void))(*v27 + 8 * v28))();
      }
      else if (v94)
      {
        v28 = 5;
        goto LABEL_46;
      }
      v36 = v92;
      if (v92 == v91)
      {
        v36 = v91;
        v37 = 4;
LABEL_51:
        (*(void (**)(void))(*v36 + 8 * v37))();
      }
      else if (v92)
      {
        v37 = 5;
        goto LABEL_51;
      }
      v38 = v90;
      if (v90 == v89)
      {
        v38 = v89;
        v39 = 4;
LABEL_56:
        (*(void (**)(void))(*v38 + 8 * v39))();
      }
      else if (v90)
      {
        v39 = 5;
        goto LABEL_56;
      }
LABEL_57:

      goto LABEL_58;
    }
    v40 = v23[5];
    v41 = v23[6];
    if (v40 == v41)
      goto LABEL_97;
    do
    {
      sub_1000260D8((uint64_t)buf, v40);
      v42 = sub_100048CAC((uint64_t)buf);
      v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
      v44 = sub_100048CAC((uint64_t)v6);
      v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
      v46 = objc_msgSend(v43, "isEqualToData:", v45);

      if ((v46 & 1) != 0)
        goto LABEL_80;
      v47 = (id)qword_10085F520;
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
      {
        v48 = sub_100048CA4(v6);
        objc_claimAutoreleasedReturnValue(v48);
        sub_1003CA69C();
      }

      sub_1000260D8((uint64_t)&v73, (uint64_t)v6);
      v66 = 0;
      v67 = 0;
      v68 = 0;
      v71 = (void ***)&v66;
      v72 = 0;
      v66 = (id **)operator new(0xA8uLL);
      v67 = (void **)v66;
      v68 = (void **)(v66 + 21);
      v67 = (void **)sub_100027FB8((uint64_t)&v68, (uint64_t)&v73, (uint64_t)v83, (uint64_t)v66);
      sub_100021F4C((uint64_t)v67, v49, (id **)&v66);
      v71 = (void ***)&v66;
      sub_100027F34((void ***)&v71);

      v50 = v81;
      if (v81 == v80)
      {
        v50 = v80;
        v51 = 4;
      }
      else
      {
        if (!v81)
          goto LABEL_69;
        v51 = 5;
      }
      (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_69:
      v52 = v79;
      if (v79 == v78)
      {
        v52 = v78;
        v53 = 4;
      }
      else
      {
        if (!v79)
          goto LABEL_74;
        v53 = 5;
      }
      (*(void (**)(void))(*v52 + 8 * v53))();
LABEL_74:
      v54 = v77;
      if (v77 == v76)
      {
        v54 = v76;
        v55 = 4;
        goto LABEL_78;
      }
      if (v77)
      {
        v55 = 5;
LABEL_78:
        (*(void (**)(void))(*v54 + 8 * v55))();
      }

LABEL_80:
      v56 = v94;
      if (v94 == v93)
      {
        v56 = v93;
        v57 = 4;
      }
      else
      {
        if (!v94)
          goto LABEL_85;
        v57 = 5;
      }
      (*(void (**)(void))(*v56 + 8 * v57))();
LABEL_85:
      v58 = v92;
      if (v92 == v91)
      {
        v58 = v91;
        v59 = 4;
      }
      else
      {
        if (!v92)
          goto LABEL_90;
        v59 = 5;
      }
      (*(void (**)(void))(*v58 + 8 * v59))();
LABEL_90:
      v60 = v90;
      if (v90 == v89)
      {
        v60 = v89;
        v61 = 4;
      }
      else
      {
        if (!v90)
          goto LABEL_95;
        v61 = 5;
      }
      (*(void (**)(void))(*v60 + 8 * v61))();
LABEL_95:

      v40 += 168;
    }
    while (v40 != v41);
    v40 = v23[6];
LABEL_97:
    if (v40 >= v23[7])
    {
      v62 = sub_100028128(v23 + 5, (uint64_t)v6);
    }
    else
    {
      sub_1000260D8(v40, (uint64_t)v6);
      v62 = v40 + 168;
      v23[6] = v40 + 168;
    }
    v23[6] = v62;
LABEL_58:
    v6 += 21;
  }
  while (v6 != v65);
}

void sub_10001EDB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  uint64_t v55;
  uint64_t v56;

  *(_QWORD *)(v56 + 48) = v55;
  _Unwind_Resume(exception_object);
}

void sub_10001EEF4(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  NSObject *v5;
  uint8_t v6[16];

  v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_10001D778() & 1) != 0)
  {
    if (sub_10001E538(a1))
    {
      if (*(_QWORD *)(a2 + 8) == *(_QWORD *)a2)
      {
        sub_100027B24(a1 + 216, *(char **)(a1 + 224));
        *(_QWORD *)(a1 + 216) = a1 + 224;
        *(_QWORD *)(a1 + 224) = 0;
        *(_QWORD *)(a1 + 232) = 0;
      }
      else
      {
        sub_10001F01C(a1, (id **)a2);
        if (*(_QWORD *)(a1 + 232))
        {
LABEL_12:
          sub_10001DB48(a1, 0.0);
          goto LABEL_13;
        }
      }
      *(_DWORD *)(a1 + 448) = 0;
      goto LABEL_12;
    }
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CA6D8();
  }
  else
  {
    v5 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#wifi-service,ignoring ranging stop on unsupported platform", v6, 2u);
    }
  }
LABEL_13:
  std::mutex::unlock(v4);
}

void sub_10001F008(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10001F01C(uint64_t a1, id **a2)
{
  id *v2;
  id *v3;
  _QWORD *v4;
  NSObject *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  _QWORD *v15;
  NSObject *v16;
  id v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  uint64_t **v24;
  uint8_t buf[4];
  id v26;
  __int16 v27;
  void *v28;

  v2 = *a2;
  v3 = a2[1];
  if (*a2 != v3)
  {
    v4 = (_QWORD *)(a1 + 224);
    v24 = (uint64_t **)(a1 + 216);
    do
    {
      v5 = (id)qword_10085F520;
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        v6 = sub_100048CA4(v2);
        v7 = (id)objc_claimAutoreleasedReturnValue(v6);
        v8 = sub_100048CC4((uint64_t)v2);
        v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
        *(_DWORD *)buf = 138412546;
        v26 = v7;
        v27 = 2112;
        v28 = v9;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,Removing from map peer ID: %@; client queue: %@",
          buf,
          0x16u);

      }
      v10 = sub_100048CDC((uint64_t)v2);
      v11 = (_QWORD *)*v4;
      if (!*v4)
        goto LABEL_16;
      v12 = (uint64_t)v4;
      do
      {
        v13 = v11[4];
        v14 = v13 >= v10;
        if (v13 >= v10)
          v15 = v11;
        else
          v15 = v11 + 1;
        if (v14)
          v12 = (uint64_t)v11;
        v11 = (_QWORD *)*v15;
      }
      while (*v15);
      if ((_QWORD *)v12 != v4 && v10 >= *(_QWORD *)(v12 + 32))
      {
        v18 = *(_QWORD *)(v12 + 40);
        if (v18 == *(_QWORD *)(v12 + 48))
        {
          sub_1000287C8(v24, v12);
        }
        else
        {
          v19 = 0;
          do
          {
            if (sub_100048B68(v18, (uint64_t)v2))
            {
              sub_10002860C((uint64_t *)(v18 + 168), *(uint64_t **)(v12 + 48), v18);
              v21 = v20;
              for (i = *(_QWORD *)(v12 + 48); i != v21; sub_100027E64(v12 + 56, i))
                i -= 168;
              *(_QWORD *)(v12 + 48) = v21;
              v19 = 1;
            }
            else
            {
              v18 += 168;
              v21 = *(_QWORD *)(v12 + 48);
            }
          }
          while (v18 != v21);
          if (*(_QWORD *)(v12 + 40) == v21)
            sub_1000287C8(v24, v12);
          if ((v19 & 1) != 0)
            goto LABEL_19;
        }
        v16 = (id)qword_10085F520;
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          v23 = sub_100048CA4(v2);
          objc_claimAutoreleasedReturnValue(v23);
          sub_1003CA740();
        }
      }
      else
      {
LABEL_16:
        v16 = (id)qword_10085F520;
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          v17 = sub_100048CA4(v2);
          objc_claimAutoreleasedReturnValue(v17);
          sub_1003CA704();
        }
      }

LABEL_19:
      v2 += 21;
    }
    while (v2 != v3);
  }
}

void sub_10001F2B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_10001F2E4(uint64_t a1)
{
  dispatch_queue_attr_t v2;
  NSObject *v3;
  dispatch_queue_t v4;
  void *v5;

  *(_DWORD *)a1 = 1084227584;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  *(_DWORD *)(a1 + 49) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 88) = 850045863;
  *(_BYTE *)(a1 + 56) = 1;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_BYTE *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_BYTE *)(a1 + 160) = 0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_BYTE *)(a1 + 240) = 0;
  *(_QWORD *)(a1 + 216) = a1 + 224;
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_BYTE *)(a1 + 408) = 0;
  *(_QWORD *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 432) = 0;
  *(_QWORD *)(a1 + 424) = a1 + 432;
  *(_QWORD *)(a1 + 440) = 0;
  *(_QWORD *)(a1 + 448) = 0;
  *(_DWORD *)(a1 + 456) = 0;
  if (sub_10001D778())
  {
    v2 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
    v3 = objc_claimAutoreleasedReturnValue(v2);
    v4 = dispatch_queue_create("com.apple.nearbyd.WiFiRanging", v3);
    v5 = *(void **)(a1 + 80);
    *(_QWORD *)(a1 + 80) = v4;

    sub_10001F484(a1);
    *(_QWORD *)(a1 + 460) = 0;

  }
  return a1;
}

void sub_10001F410(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  std::mutex *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v8 = v7;

  sub_100027B7C(v6, *(_QWORD **)(v1 + 432));
  sub_100026218(v5);
  sub_100027B24(v4, *(char **)(v1 + 224));

  std::mutex::~mutex(v3);
  sub_10001AE68(v2);
  _Unwind_Resume(a1);
}

const void *sub_10001F484(uint64_t a1)
{
  const void *result;
  const void *v3;
  _BOOL4 v4;
  NSObject *v5;
  const void *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const void *v39;
  NSObject *v40;
  NSObject *v41;
  uint8_t v42[16];
  pthread_attr_t buf;

  if (!sub_10001D778())
    return 0;
  result = *(const void **)(a1 + 16);
  if (result)
  {
    if (*(_BYTE *)(a1 + 55))
      return result;
    v3 = (const void *)WiFiManagerClientCopyInterfaces(result);
    v4 = os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR);
    if (v3)
    {
      if (v4)
        sub_1003CA994();
      CFRelease(v3);
      *(_BYTE *)(a1 + 55) = 1;
      return *(const void **)(a1 + 16);
    }
    if (v4)
      sub_1003CA968();
    goto LABEL_32;
  }
  v5 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf.__sig) = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,calling WiFiManagerClientCreate", (uint8_t *)&buf, 2u);
  }
  v6 = (const void *)WiFiManagerClientCreate(kCFAllocatorDefault, 0);
  *(_QWORD *)(a1 + 16) = v6;
  if (!v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CA77C();
    sub_10001F9E8(a1, 1);
    sub_10001FCD0(a1);
    return 0;
  }
  CFRetain(v6);
  if (pthread_attr_init(&buf))
  {
    v7 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
      sub_1003CA8F8(v7, v8, v9, v10, v11, v12, v13, v14);
  }
  else if (pthread_attr_setdetachstate(&buf, 2))
  {
    v15 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
      sub_1003CA888(v15, v16, v17, v18, v19, v20, v21, v22);
  }
  else if (pthread_create((pthread_t *)(a1 + 8), &buf, (void *(__cdecl *)(void *))sub_1000227F4, *(void **)(a1 + 16)))
  {
    v23 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
      sub_1003CA818(v23, v24, v25, v26, v27, v28, v29, v30);
  }
  else
  {
    if (!pthread_attr_destroy(&buf))
    {
      v39 = (const void *)WiFiManagerClientCopyInterfaces(*(_QWORD *)(a1 + 16));
      if (v39)
      {
        CFRelease(v39);
        v40 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v42 = 0;
          _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_INFO, "#wifi-service,Interfaces found at manager creation.", v42, 2u);
        }
        *(_BYTE *)(a1 + 55) = 1;
      }
      else
      {
        v41 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v42 = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "#wifi-service,No interfaces when creating manager. Setting up attachment callback.", v42, 2u);
        }
        WiFiManagerClientRegisterDeviceAttachmentCallback(*(_QWORD *)(a1 + 16), sub_1000266EC, a1);
      }
      return *(const void **)(a1 + 16);
    }
    v31 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
      sub_1003CA7A8(v31, v32, v33, v34, v35, v36, v37, v38);
  }
  sub_10001F9E8(a1, 1);
  sub_10001FCD0(a1);
LABEL_32:
  result = *(const void **)(a1 + 16);
  if (result)
  {
    CFRelease(result);
    result = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  return result;
}

uint64_t sub_10001F788(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  if (*(_QWORD *)(a1 + 8))
  {
    v2 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi-service,cancelling wifi ranging runloop thread", v4, 2u);
    }
    pthread_cancel(*(pthread_t *)(a1 + 8));
  }
  sub_100027B7C(a1 + 424, *(_QWORD **)(a1 + 432));
  sub_100026218(a1 + 240);
  sub_100027B24(a1 + 216, *(char **)(a1 + 224));

  std::mutex::~mutex((std::mutex *)(a1 + 88));
  sub_10001AE68(a1 + 64);
  return a1;
}

void sub_10001F860(uint64_t a1)
{
  char v2;
  NSObject *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  uint8_t v8[16];
  uint8_t buf[16];

  v2 = sub_10001D778();
  v3 = qword_10085F520;
  if ((v2 & 1) != 0)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,creating awdl request", buf, 2u);
    }
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v5 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,starting awdl in follow mode", v8, 2u);
    }
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 1));
    objc_msgSend(v4, "setValue:forKey:", v6, CFSTR("APPLE80211KEY_AWDL_INFO_ASSISTED_DISCOVERY_FOLLOW"));

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 1));
    objc_msgSend(v4, "setValue:forKey:", v7, CFSTR("AWDL_INFO_PEER_PREFERRED_BAND"));

    sub_10001FDAC(a1, v4);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CA9C0();
    sub_10001F9E8(a1, 0);
    sub_10001FCD0(a1);
  }
}

void sub_10001F9C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10001F9E8(uint64_t a1, int a2)
{
  _QWORD *v2;
  id *v4;
  id *v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  void ***v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  BOOL v17;
  _QWORD *v18;
  id *v19;
  id *v20;
  uint64_t v21;
  _QWORD block[4];
  _BYTE v23[24];
  _BYTE *v24;
  int v25;
  void **v26[3];
  void ***v27;

  v2 = *(_QWORD **)(a1 + 216);
  v18 = (_QWORD *)(a1 + 224);
  if (v2 == (_QWORD *)(a1 + 224))
    return;
  do
  {
    v19 = 0;
    v20 = 0;
    v21 = 0;
    sub_100027C20(&v19, v2[5], v2[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v2[6] - v2[5]) >> 3));
    v4 = v19;
    v5 = v20;
    while (v4 != v5)
    {
      sub_100048CF0((uint64_t)v4, (uint64_t)v26);
      if (!v27)
      {
        v9 = (id)qword_10085F520;
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
          v10 = sub_100048CA4(v4);
          objc_claimAutoreleasedReturnValue(v10);
          sub_1003CA9EC();
        }

        goto LABEL_18;
      }
      v6 = sub_100048CC4((uint64_t)v4);
      v7 = objc_claimAutoreleasedReturnValue(v6);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_1000221C0;
      block[3] = &unk_1007FA688;
      v8 = (uint64_t)v27;
      if (v27)
      {
        if (v27 == v26)
        {
          v24 = v23;
          (*((void (**)(void ***, _BYTE *))v26[0] + 3))(v26, v23);
          goto LABEL_13;
        }
        v8 = ((uint64_t (*)(void))(*v27)[2])();
      }
      v24 = (_BYTE *)v8;
LABEL_13:
      v25 = a2;
      dispatch_async(v7, block);

      v11 = v24;
      if (v24 == v23)
      {
        v11 = v23;
        v12 = 4;
      }
      else
      {
        if (!v24)
          goto LABEL_18;
        v12 = 5;
      }
      (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_18:
      v13 = v27;
      if (v27 == v26)
      {
        v13 = v26;
        v14 = 4;
      }
      else
      {
        if (!v27)
          goto LABEL_23;
        v14 = 5;
      }
      ((void (*)(void))(*v13)[v14])();
LABEL_23:
      v4 += 21;
    }
    v26[0] = (void **)&v19;
    sub_100027F34(v26);
    v15 = (_QWORD *)v2[1];
    if (v15)
    {
      do
      {
        v16 = v15;
        v15 = (_QWORD *)*v15;
      }
      while (v15);
    }
    else
    {
      do
      {
        v16 = (_QWORD *)v2[2];
        v17 = *v16 == (_QWORD)v2;
        v2 = v16;
      }
      while (!v17);
    }
    v2 = v16;
  }
  while (v16 != v18);
}

void sub_10001FC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void **a27,uint64_t a28,uint64_t a29,void ***a30)
{
  void *v30;
  void ***v32;
  uint64_t v33;

  v32 = a30;
  if (a30 == &a27)
  {
    v33 = 4;
    v32 = &a27;
  }
  else
  {
    if (!a30)
      goto LABEL_6;
    v33 = 5;
  }
  ((void (*)(void))(*v32)[v33])();
LABEL_6:
  a27 = (void **)&a12;
  sub_100027F34(&a27);
  _Unwind_Resume(a1);
}

void sub_10001FCD0(uint64_t a1)
{
  uint64_t v2;
  const void *v3;
  const void *v4;
  const void *v5;

  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
    sub_1003CAA28();
  sub_100027B24(a1 + 216, *(char **)(a1 + 224));
  *(_QWORD *)(a1 + 216) = a1 + 224;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 232) = 0;
  *(_DWORD *)(a1 + 448) = 0;
  *(_DWORD *)(a1 + 456) = 0;
  *(_WORD *)(a1 + 50) = 0;
  *(_BYTE *)(a1 + 52) = 0;
  if (*(_BYTE *)(a1 + 184))
    *(_BYTE *)(a1 + 184) = 0;
  *(_WORD *)(a1 + 54) = 0;
  if (*(_QWORD *)(a1 + 40))
  {
    if (sub_100020460(a1))
    {
      v2 = sub_100020460(a1);
      WiFiDeviceClientStopNetwork(v2, *(_QWORD *)(a1 + 40), sub_10002669C, a1);
    }
    v3 = *(const void **)(a1 + 40);
    if (v3)
    {
      CFRelease(v3);
      *(_QWORD *)(a1 + 40) = 0;
    }
  }
  v4 = *(const void **)(a1 + 32);
  if (v4)
  {
    CFRelease(v4);
    *(_QWORD *)(a1 + 32) = 0;
  }
  v5 = *(const void **)(a1 + 24);
  if (v5)
  {
    CFRelease(v5);
    *(_QWORD *)(a1 + 24) = 0;
  }
}

void sub_10001FDAC(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  NSObject *v5;
  uint64_t v6;
  int started;
  int v8;
  dispatch_time_t v9;
  NSObject *v10;
  double v11;
  uint8_t v12[8];
  _QWORD block[5];

  v3 = a2;
  if (sub_100020460(a1))
  {
    if ((sub_100022950(a1, 0) & 1) != 0)
    {
      if (*(_BYTE *)(a1 + 53))
      {
        v4 = sub_10002D190();
        if (!*(_BYTE *)(a1 + 168))
          __assert_rtn("startNetwork", "PRWiFiRangingService_MW.mm", 1211, "fStartNetworkCallbackWaitStartTime.has_value()");
        if (v4 - *(double *)(a1 + 160) <= 5.0)
        {
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
            sub_1003CAB90();
          goto LABEL_37;
        }
        *(_BYTE *)(a1 + 52) = 0;
        if (*(_BYTE *)(a1 + 184))
          *(_BYTE *)(a1 + 184) = 0;
      }
      v5 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,starting network", v12, 2u);
      }
      v6 = sub_100020460(a1);
      started = WiFiDeviceClientStartNetwork(v6, 4, v3, sub_10002673C, a1);
      *(_DWORD *)(a1 + 456) = 1;
      *(_BYTE *)(a1 + 53) = 1;
      *(double *)(a1 + 160) = sub_10002D190();
      *(_BYTE *)(a1 + 168) = 1;
      if (!started)
      {
        v11 = 0.0;
        goto LABEL_36;
      }
      *(_DWORD *)(a1 + 456) = 0;
      *(_BYTE *)(a1 + 53) = 0;
      *(_BYTE *)(a1 + 168) = 0;
      if (started <= 36)
      {
        if (started != -3930)
        {
          if (started == 1)
          {
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              sub_1003CAB0C();
            v8 = -1;
            goto LABEL_32;
          }
          goto LABEL_29;
        }
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003CAAE0();
        v11 = 1.0;
LABEL_36:
        sub_10001DB48(a1, v11);
        goto LABEL_37;
      }
      if (started != 37)
      {
        if (started == 82)
        {
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
            sub_1003CAB64();
          goto LABEL_31;
        }
LABEL_29:
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003CAA80();
LABEL_31:
        v8 = 1;
LABEL_32:
        sub_10001F9E8(a1, v8);
        sub_10001FCD0(a1);
        goto LABEL_37;
      }
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
        sub_1003CAB38();
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
        sub_1003CABBC();
      v9 = dispatch_time(0, 1000000000);
      v10 = *(NSObject **)(a1 + 80);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100022BF4;
      block[3] = &unk_1007FA668;
      block[4] = a1;
      dispatch_after(v9, v10, block);
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CAA54();
  }
LABEL_37:

}

void sub_1000200BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000200D4(uint64_t a1)
{
  NSObject *v2;
  double v3;
  NSObject *v4;
  uint64_t v5;
  double v6;
  NSObject *v7;
  double v8;
  double v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  NSObject *v16;
  int v17;
  double v18;
  __int16 v19;
  uint64_t v20;

  if (*(_BYTE *)(a1 + 52))
  {
    v2 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v17) = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi-service,Not stopping AWDL due to lingering results callback", (uint8_t *)&v17, 2u);
    }
    if (!*(_BYTE *)(a1 + 184))
      sub_1003CACF4();
    v3 = sub_10002D190();
    v4 = (id)qword_10085F520;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      if (!*(_BYTE *)(a1 + 184))
        sub_10000BA44();
      v5 = *(_QWORD *)(a1 + 176);
      v17 = 134218240;
      v18 = v3;
      v19 = 2048;
      v20 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi-service,time: %f, time of results callback: %f", (uint8_t *)&v17, 0x16u);
    }

    if (!*(_BYTE *)(a1 + 184))
      sub_10000BA44();
    if (v3 - *(double *)(a1 + 176) > 5.0)
    {
      *(_BYTE *)(a1 + 52) = 0;
      *(_BYTE *)(a1 + 184) = 0;
    }
    v6 = 0.5;
LABEL_23:
    sub_10001DB48(a1, v6);
    return;
  }
  if (*(_BYTE *)(a1 + 53))
  {
    v7 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v17) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#wifi-service,not stopping AWDL due to lingering start network callback", (uint8_t *)&v17, 2u);
    }
    v8 = sub_10002D190();
    if (!*(_BYTE *)(a1 + 168))
      sub_1003CACCC();
    v9 = v8;
    v10 = (id)qword_10085F520;
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      if (!*(_BYTE *)(a1 + 168))
        sub_10000BA44();
      v11 = *(_QWORD *)(a1 + 160);
      v17 = 134218240;
      v18 = v9;
      v19 = 2048;
      v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#wifi-service,time: %f, time of start network callback: %f", (uint8_t *)&v17, 0x16u);
    }

    if (!*(_BYTE *)(a1 + 168))
      sub_10000BA44();
    if (v9 - *(double *)(a1 + 160) > 5.0)
    {
      *(_BYTE *)(a1 + 53) = 0;
      *(_BYTE *)(a1 + 168) = 0;
    }
    v6 = 1.0;
    goto LABEL_23;
  }
  *(_BYTE *)(a1 + 50) = 0;
  v12 = sub_100020460(a1);
  v13 = v12;
  if (!v12 || (v14 = *(_QWORD *)(a1 + 40)) == 0)
  {
    v16 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CABE8(v13, a1, v16);
    goto LABEL_29;
  }
  v15 = WiFiDeviceClientStopNetwork(v12, v14, sub_1000262F8, a1);
  *(_DWORD *)(a1 + 456) = 4;
  if (v15)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CAC6C();
LABEL_29:
    sub_10001F9E8(a1, 1);
    sub_10001FCD0(a1);
    return;
  }
  sub_10001DB48(a1, 0.0);
}

void sub_100020444(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_100020460(uint64_t a1)
{
  uint64_t result;
  NSObject *v3;
  uint64_t v4;
  const __CFArray *v5;
  const __CFArray *v6;
  CFIndex Count;
  CFIndex v8;
  CFIndex v9;
  const void *ValueAtIndex;
  const void *v11;
  NSObject *v12;
  NSObject *v13;
  int v14;
  const void *v15;

  result = *(_QWORD *)(a1 + 32);
  if (!result)
  {
    result = sub_10001F484(a1);
    if (result)
    {
      v3 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
      {
        LOWORD(v14) = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#wifi-service,Calling WiFiManagerClientCopyInterfaces for AWDL interface", (uint8_t *)&v14, 2u);
      }
      v4 = sub_10001F484(a1);
      v5 = (const __CFArray *)WiFiManagerClientCopyInterfaces(v4);
      if (v5)
      {
        v6 = v5;
        Count = CFArrayGetCount(v5);
        if (Count >= 1)
        {
          v8 = Count;
          v9 = 0;
          while (1)
          {
            ValueAtIndex = CFArrayGetValueAtIndex(v6, v9);
            if (ValueAtIndex)
            {
              v11 = ValueAtIndex;
              v12 = qword_10085F520;
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
              {
                LOWORD(v14) = 0;
                _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "#wifi-service,Calling WiFiDeviceClientIsInterfaceAWDL", (uint8_t *)&v14, 2u);
              }
              if (WiFiDeviceClientIsInterfaceAWDL(v11))
                break;
            }
            if (v8 == ++v9)
              goto LABEL_21;
          }
          v13 = qword_10085F520;
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
          {
            v14 = 138412290;
            v15 = v11;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientIsInterfaceAWDL returned true for %@", (uint8_t *)&v14, 0xCu);
          }
          *(_QWORD *)(a1 + 32) = v11;
          CFRetain(v11);
          sub_1000228A0(a1);
        }
LABEL_21:
        CFRelease(v6);
        result = *(_QWORD *)(a1 + 32);
        if (!result)
        {
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
            sub_1003CAD48();
          sub_10001F9E8(a1, 1);
          sub_10001FCD0(a1);
          return *(_QWORD *)(a1 + 32);
        }
      }
      else
      {
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003CAD1C();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100020694(uint64_t a1)
{
  return sub_10002069C(*(_QWORD *)(a1 + 32));
}

void sub_10002069C(uint64_t a1)
{
  std::mutex *v2;
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  BOOL v7;
  NSObject *v8;
  _BOOL4 v9;
  const char *v10;
  NSObject *v11;
  NSObject *v12;
  int v13;
  NSObject *v14;
  _BOOL4 v15;
  int v16;
  uint64_t v17;
  const char *v18;
  NSObject *v19;
  NSObject *v20;
  NSObject *v21;
  NSObject *v22;
  NSObject *v23;
  NSObject *v24;
  uint8_t v25[16];

  v2 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  *(_BYTE *)(a1 + 49) = 0;
  if (*(_BYTE *)(a1 + 55))
  {
    switch(*(_DWORD *)(a1 + 456))
    {
      case 0:
        v3 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is down", v25, 2u);
        }
        if (sub_10001E538(a1))
        {
          v4 = qword_10085F520;
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)v25 = 0;
            _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is down - starting awdl", v25, 2u);
          }
          sub_10001F860(a1);
        }
        else if (*(_DWORD *)(a1 + 448))
        {
          v19 = qword_10085F520;
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)v25 = 0;
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "#wifi-service,Setting ranging role to unspecified", v25, 2u);
          }
          *(_DWORD *)(a1 + 448) = 0;
        }
        goto LABEL_55;
      case 1:
        v7 = sub_10001E538(a1);
        v8 = qword_10085F520;
        v9 = os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT);
        if (!v7)
        {
          if (!v9)
            goto LABEL_54;
          *(_WORD *)v25 = 0;
          v18 = "#wifi-service,Current AWDL state is starting but we don't have a range request active!";
          goto LABEL_53;
        }
        if (v9)
        {
          *(_WORD *)v25 = 0;
          v10 = "#wifi-service,Current AWDL state is starting";
          v11 = v8;
          goto LABEL_36;
        }
        goto LABEL_55;
      case 2:
        v12 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is up", v25, 2u);
        }
        if (!sub_10001E538(a1))
        {
          v8 = qword_10085F520;
          if (!os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
            goto LABEL_54;
          *(_WORD *)v25 = 0;
          v18 = "#wifi-service,Current AWDL state is up - stopping awdl";
          goto LABEL_53;
        }
        v13 = *(_DWORD *)(a1 + 448);
        switch(v13)
        {
          case 2:
            v21 = qword_10085F520;
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)v25 = 0;
              _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is up - waiting to respond", v25, 2u);
            }
            if (*(_QWORD *)(a1 + 192))
              goto LABEL_71;
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              goto LABEL_60;
            break;
          case 1:
            v22 = qword_10085F520;
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)v25 = 0;
              _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is up - waiting to initiate", v25, 2u);
            }
            if (*(_QWORD *)(a1 + 192))
              goto LABEL_71;
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
            {
LABEL_60:
              sub_1003CADCC();
              goto LABEL_55;
            }
            break;
          case 0:
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              sub_1003CADA0();
            goto LABEL_54;
          default:
            goto LABEL_55;
        }
        goto LABEL_55;
      case 3:
        v14 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is ready for ranging", v25, 2u);
        }
        v15 = sub_10001E538(a1);
        v16 = *(_DWORD *)(a1 + 448);
        if (!v15)
        {
          if (v16 == 2)
          {
            v20 = qword_10085F520;
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)v25 = 0;
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is ready for ranging - stopping responder ranging", v25, 2u);
            }
            sub_100021160(a1);
          }
          v8 = qword_10085F520;
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)v25 = 0;
            v18 = "#wifi-service,Current AWDL state is ready for ranging - stopping awdl";
            goto LABEL_53;
          }
          goto LABEL_54;
        }
        switch(v16)
        {
          case 2:
            if (!*(_BYTE *)(a1 + 54))
            {
              v23 = qword_10085F520;
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)v25 = 0;
                _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is ready for ranging - requesting responder ranging", v25, 2u);
              }
              sub_100021160(a1);
              goto LABEL_55;
            }
            break;
          case 1:
            if (!*(_BYTE *)(a1 + 54))
            {
              v24 = qword_10085F520;
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)v25 = 0;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is ready for ranging - requesting initiator ranging", v25, 2u);
              }
              sub_100020E6C(a1);
              goto LABEL_55;
            }
            break;
          case 0:
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              sub_1003CADF8();
            goto LABEL_54;
          default:
            goto LABEL_55;
        }
LABEL_71:
        sub_100020CAC(a1);
        goto LABEL_55;
      case 4:
        v17 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v25 = 0;
          v10 = "#wifi-service,Current AWDL state is stopping";
          v11 = v17;
LABEL_36:
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, v25, 2u);
        }
        goto LABEL_55;
      case 5:
        v8 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v25 = 0;
          v18 = "#wifi-service,Current AWDL state is unavailable";
LABEL_53:
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v18, v25, 2u);
        }
LABEL_54:
        sub_1000200D4(a1);
        goto LABEL_55;
      default:
        goto LABEL_55;
    }
  }
  v5 = sub_10001F484(a1);
  v6 = qword_10085F520;
  if (v5)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#wifi-service,State machine cannot continue until wifi device is attached.", v25, 2u);
    }
    sub_10001DB48(a1, 0.5);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CAD74();
  }
LABEL_55:
  std::mutex::unlock(v2);
}

void sub_100020C90(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100020CA4(uint64_t a1)
{
  return sub_10002069C(*(_QWORD *)(a1 + 32));
}

void sub_100020CAC(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  if (*(_QWORD *)(a1 + 192))
  {
    if ((*(_DWORD *)(a1 + 456) & 0xFFFFFFFE) == 2)
    {
      v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
      objc_msgSend(v2, "setValue:forKey:", *(_QWORD *)(a1 + 192), CFSTR("RANGING_TOKEN_ID"));
      v3 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
      {
        v4 = *(_QWORD *)(a1 + 192);
        v6 = 138412290;
        v7 = v4;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,setting self ranging ID to %@", (uint8_t *)&v6, 0xCu);
      }
      v5 = sub_1000219E8(a1);
      if (WiFiDeviceClientSetRangingIdentifier(v5, v2))
      {
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003CAE50();
        sub_10001F9E8(a1, 1);
        sub_10001FCD0(a1);
      }
      else
      {
        *(_DWORD *)(a1 + 456) = 3;
        *(_BYTE *)(a1 + 54) = 0;
        sub_10001DB48(a1, 0.0);
      }

    }
    else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
    {
      sub_1003CAEB0();
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CAE24();
  }
}

void sub_100020E50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100020E6C(uint64_t a1)
{
  double v2;
  const __CFArray *v3;
  double Count;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int started;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  dispatch_time_t v12;
  NSObject *v13;
  _QWORD block[5];
  uint8_t buf[4];
  CFIndex v16;
  __int16 v17;
  double v18;

  if (*(_BYTE *)(a1 + 56))
  {
    if (*(_BYTE *)(a1 + 52))
    {
      v2 = sub_10002D190();
      if (!*(_BYTE *)(a1 + 184))
        sub_1003CB004();
      if (v2 - *(double *)(a1 + 176) > 5.0)
      {
        *(_BYTE *)(a1 + 52) = 0;
        *(_BYTE *)(a1 + 184) = 0;
      }
      sub_10001DB48(a1, 0.5);
      return;
    }
    v3 = (const __CFArray *)sub_10002132C(a1);
    if (CFArrayGetCount(v3) < 1)
    {
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
        sub_1003CAFD8();
    }
    else
    {
      Count = (double)CFArrayGetCount(v3);
      v5 = (id)qword_10085F520;
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134349312;
        v16 = CFArrayGetCount(v3);
        v17 = 2050;
        v18 = Count;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingStartAsync, num peers, %{public}ld, timeout, %{public}lf", buf, 0x16u);
      }

      v6 = sub_1000219E8(a1);
      WiFiDeviceClientRegisterRangingReportCallback(v6, sub_100026474, a1);
      *(_BYTE *)(a1 + 52) = 1;
      *(double *)(a1 + 176) = sub_10002D190();
      *(_BYTE *)(a1 + 184) = 1;
      v7 = sub_1000219E8(a1);
      started = WiFiDeviceClientRangingStartAsync(v7, v3, sub_100026348, a1, Count);
      if (!started)
        goto LABEL_27;
      if (started == -3930)
      {
        v9 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003CAF68(v9, v10, v11);
        *(_BYTE *)(a1 + 52) = 0;
        if (*(_BYTE *)(a1 + 184))
          *(_BYTE *)(a1 + 184) = 0;
        v12 = dispatch_time(0, 1000000000);
        v13 = *(NSObject **)(a1 + 80);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100021C14;
        block[3] = &unk_1007FA668;
        block[4] = a1;
        dispatch_after(v12, v13, block);
        return;
      }
      *(_BYTE *)(a1 + 52) = 0;
      if (*(_BYTE *)(a1 + 184))
        *(_BYTE *)(a1 + 184) = 0;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
        sub_1003CAF08();
      *(_DWORD *)(a1 + 456) = 5;
    }
    sub_10001DB48(a1, 0.0);
LABEL_27:
    CFRelease(v3);
    return;
  }
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
    sub_1003CAEDC();
}

void sub_100021148(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100021160(uint64_t a1)
{
  const __CFArray *v2;
  CFIndex Count;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  CFIndex v10;

  v2 = (const __CFArray *)sub_10002132C(a1);
  Count = CFArrayGetCount(v2);
  v4 = qword_10085F520;
  if (Count < 1)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientSetRangeable FALSE", (uint8_t *)&v9, 2u);
    }
    v8 = sub_1000219E8(a1);
    if (!WiFiDeviceClientSetRangeable(v8, 0, v2))
      goto LABEL_13;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      goto LABEL_11;
    goto LABEL_12;
  }
  v5 = (id)qword_10085F520;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 134349056;
    v10 = CFArrayGetCount(v2);
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientSetRangeable TRUE, num peers, %{public}ld", (uint8_t *)&v9, 0xCu);
  }

  v6 = sub_1000219E8(a1);
  WiFiDeviceClientRegisterRangingReportCallback(v6, sub_100026588, a1);
  v7 = sub_1000219E8(a1);
  if (WiFiDeviceClientSetRangeable(v7, 1, v2))
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
LABEL_11:
      sub_1003CB02C();
LABEL_12:
    *(_DWORD *)(a1 + 456) = 5;
LABEL_13:
    sub_10001DB48(a1, 0.0);
  }
  CFRelease(v2);
}

void sub_100021314(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_10002132C(uint64_t a1)
{
  id v1;
  __CFString *v2;
  __int128 v3;
  _QWORD *v4;
  unint64_t v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  _BOOL4 v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  NSObject *v27;
  NSObject *v28;
  id v29;
  void *v30;
  id v31;
  NSObject *v32;
  int v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  BOOL v42;
  __int128 v44;
  void *v46;
  void *v47;
  char v48;
  _BYTE v49[15];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char **v53;
  char *v54[2];
  uint8_t buf[4];
  id v56;
  void **v57[6];
  _BYTE v58[24];
  _BYTE *v59;
  _BYTE v60[24];
  _BYTE *v61;
  _BYTE v62[24];
  _BYTE *v63;
  id v64;
  uint8_t v65[4];
  _DWORD v66[3];
  uint8_t v67[4];
  int8x8_t v68;

  v1 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", 4);
  v54[0] = 0;
  v54[1] = 0;
  v53 = v54;
  v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 4));
  v2 = sub_1001FD9AC();
  v47 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD **)(a1 + 216);
  if (v4 != (_QWORD *)(a1 + 224))
  {
    *(_QWORD *)&v3 = 67109120;
    v44 = v3;
    do
    {
      v50 = 0;
      v51 = 0;
      v52 = 0;
      v5 = v4[4];
      sub_100027C20(&v50, v4[5], v4[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v4[6] - v4[5]) >> 3));
      if (v51 == v50)
      {
        v7 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003CB08C(v67, v5, &v68, v7);
        goto LABEL_45;
      }
      if (objc_msgSend(v1, "count") == (id)4)
      {
        v6 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003CB134(v65, v66, v6);
        goto LABEL_45;
      }
      sub_1000260D8((uint64_t)v57, v50);
      v8 = v50;
      v9 = v51;
      while (v8 != v9)
      {
        v10 = sub_100048CB4(v8);
        v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        v12 = sub_100048CB4((uint64_t)v57);
        v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
        v14 = v11 > v13;

        if (v14)
          sub_100022BFC((uint64_t)v57, v8);
        v8 += 168;
      }
      v15 = sub_100048CA4((id *)v57);
      v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
      v17 = objc_msgSend(v16, "copy");

      v18 = sub_100048CAC((uint64_t)v57);
      v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      v20 = objc_msgSend(v19, "copy");

      v21 = sub_100048CB4((uint64_t)v57);
      v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
      v23 = objc_msgSend(v22, "copy");

      v24 = sub_100048CD4((uint64_t)v57);
      v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
      v26 = objc_msgSend(v25, "copy");

      v27 = qword_10085F520;
      if (v17 && v20 && v23)
      {
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v56 = v26;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "#wifi-service,peer mac addr: %@", buf, 0xCu);
        }
        v28 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v56 = v17;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "#wifi-service,array of peers ranging ID %@", buf, 0xCu);
        }
        v29 = objc_alloc_init((Class)NSMutableDictionary);
        objc_msgSend(v29, "setValue:forKey:", v26, CFSTR("STATION_MAC"));
        objc_msgSend(v29, "setValue:forKey:", v17, CFSTR("RANGING_TOKEN_ID"));
        objc_msgSend(v29, "setValue:forKey:", v20, CFSTR("RANGING_PMK"));
        objc_msgSend(v29, "setValue:forKey:", v23, CFSTR("RANGING_NUM_MEASUREMENTS"));
        v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 1));
        objc_msgSend(v29, "setValue:forKey:", v30, CFSTR("APPLE80211KEY_AWDL_INFO_ASSISTED_DISCOVERY_FOLLOW"));

        if ((objc_msgSend(v47, "hasPrefix:", CFSTR("iPhone")) & 1) != 0
          || objc_msgSend(v47, "hasPrefix:", CFSTR("RealityDevice")))
        {
          objc_msgSend(v29, "setValue:forKey:", v46, CFSTR("RANGING_CORE_MASK"), v44);
        }
        v31 = objc_msgSend(v29, "copy", v44);
        objc_msgSend(v1, "addObject:", v31);

        v32 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          v33 = *(unsigned __int8 *)(a1 + 48);
          *(_DWORD *)buf = v44;
          LODWORD(v56) = v33;
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "#wifi-service,follow mode for peer dict: %i", buf, 8u);
        }

      }
      else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      {
        sub_1003CB17C(&v48, v49);
      }

      v34 = v63;
      if (v63 == v62)
      {
        v34 = v62;
        v35 = 4;
      }
      else
      {
        if (!v63)
          goto LABEL_34;
        v35 = 5;
      }
      (*(void (**)(void))(*v34 + 8 * v35))();
LABEL_34:
      v36 = v61;
      if (v61 == v60)
      {
        v36 = v60;
        v37 = 4;
      }
      else
      {
        if (!v61)
          goto LABEL_39;
        v37 = 5;
      }
      (*(void (**)(void))(*v36 + 8 * v37))();
LABEL_39:
      v38 = v59;
      if (v59 == v58)
      {
        v38 = v58;
        v39 = 4;
        goto LABEL_43;
      }
      if (v59)
      {
        v39 = 5;
LABEL_43:
        (*(void (**)(void))(*v38 + 8 * v39))();
      }

LABEL_45:
      v57[0] = (void **)&v50;
      sub_100027F34(v57);
      v40 = (_QWORD *)v4[1];
      if (v40)
      {
        do
        {
          v41 = v40;
          v40 = (_QWORD *)*v40;
        }
        while (v40);
      }
      else
      {
        do
        {
          v41 = (_QWORD *)v4[2];
          v42 = *v41 == (_QWORD)v4;
          v4 = v41;
        }
        while (!v42);
      }
      v4 = v41;
    }
    while (v41 != (_QWORD *)(a1 + 224));
  }

  sub_100027B24((uint64_t)&v53, v54[0]);
  return v1;
}

void sub_1000218E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,char *a29)
{
  void *v29;

  sub_100027B24((uint64_t)&a28, a29);
  _Unwind_Resume(a1);
}

uint64_t sub_1000219E8(uint64_t a1)
{
  uint64_t result;
  NSObject *v3;
  uint64_t v4;
  const __CFArray *v5;
  const __CFArray *v6;
  CFIndex Count;
  CFIndex v8;
  CFIndex v9;
  const void *ValueAtIndex;
  const void *v11;
  NSObject *v12;
  NSObject *v13;
  int v14;
  const void *v15;

  result = *(_QWORD *)(a1 + 24);
  if (!result)
  {
    result = sub_10001F484(a1);
    if (result)
    {
      v3 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
      {
        LOWORD(v14) = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#wifi-service,Calling WiFiManagerClientCopyInterfaces for device interface", (uint8_t *)&v14, 2u);
      }
      v4 = sub_10001F484(a1);
      v5 = (const __CFArray *)WiFiManagerClientCopyInterfaces(v4);
      if (v5)
      {
        v6 = v5;
        Count = CFArrayGetCount(v5);
        if (Count >= 1)
        {
          v8 = Count;
          v9 = 0;
          while (1)
          {
            ValueAtIndex = CFArrayGetValueAtIndex(v6, v9);
            if (ValueAtIndex)
            {
              v11 = ValueAtIndex;
              v12 = qword_10085F520;
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
              {
                LOWORD(v14) = 0;
                _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "#wifi-service,Calling WiFiDeviceClientGetInterfaceRoleIndex", (uint8_t *)&v14, 2u);
              }
              if (!WiFiDeviceClientGetInterfaceRoleIndex(v11))
                break;
            }
            if (v8 == ++v9)
              goto LABEL_21;
          }
          v13 = qword_10085F520;
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
          {
            v14 = 138412290;
            v15 = v11;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "#wifi-service,WiFiDeviceClientGetInterfaceRoleIndex is main interface, device, %@", (uint8_t *)&v14, 0xCu);
          }
          *(_QWORD *)(a1 + 24) = v11;
          CFRetain(v11);
        }
LABEL_21:
        CFRelease(v6);
        result = *(_QWORD *)(a1 + 24);
        if (!result)
        {
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
            sub_1003CB1A8();
          sub_10001F9E8(a1, 1);
          sub_10001FCD0(a1);
          return *(_QWORD *)(a1 + 24);
        }
      }
      else
      {
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003CAD1C();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100021C14(uint64_t a1)
{
  return sub_10002069C(*(_QWORD *)(a1 + 32));
}

_QWORD *sub_100021C1C(uint64_t a1, uint64_t *a2)
{
  return sub_100021C24((_QWORD *)(a1 + 64), a2);
}

_QWORD *sub_100021C24(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v4 = *a2;
  v3 = a2[1];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = (std::__shared_weak_count *)a1[1];
  *a1 = v4;
  a1[1] = v3;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return a1;
}

void sub_100021C9C(uint64_t a1, int a2)
{
  id *v3;
  id v4;
  NSObject *v5;
  _QWORD *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  id v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD block[4];
  _BYTE v24[24];
  _BYTE *v25;
  int v26;
  _QWORD v27[3];
  _QWORD *v28;

  if (!*(_BYTE *)(a1 + 408))
  {
    v8 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
      sub_1003CB1D4(v8, v9, v10, v11, v12, v13, v14, v15);
    return;
  }
  v3 = (id *)(a1 + 240);
  sub_100048CF0(a1 + 240, (uint64_t)v27);
  if (!v28)
  {
    v16 = (id)qword_10085F520;
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      v17 = sub_100048CA4(v3);
      v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
      sub_1003CB244(v18, (uint64_t)&v22, v16);
    }

    goto LABEL_18;
  }
  v4 = sub_100048CC4((uint64_t)v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100021ED0;
  block[3] = &unk_1007FA688;
  v6 = v24;
  v7 = (uint64_t)v28;
  if (!v28)
    goto LABEL_6;
  if (v28 != v27)
  {
    v7 = (*(uint64_t (**)(_QWORD *))(*v28 + 16))(v28);
LABEL_6:
    v25 = (_BYTE *)v7;
    goto LABEL_13;
  }
  v25 = v24;
  (*(void (**)(_QWORD *, _BYTE *))(v27[0] + 24))(v27, v24);
LABEL_13:
  v26 = a2;
  dispatch_async(v5, block);

  if (v25 == v24)
  {
    v19 = 4;
    goto LABEL_17;
  }
  if (v25)
  {
    v19 = 5;
    v6 = v25;
LABEL_17:
    (*(void (**)(_QWORD *))(*v6 + 8 * v19))(v6);
  }
LABEL_18:
  v20 = v28;
  if (v28 == v27)
  {
    v21 = 4;
    v20 = v27;
  }
  else
  {
    if (!v28)
      return;
    v21 = 5;
  }
  (*(void (**)(void))(*v20 + 8 * v21))();
}

void sub_100021E74(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 - 48);
  if (v4 == (_QWORD *)(v2 - 72))
  {
    v5 = 4;
    v4 = (_QWORD *)(v2 - 72);
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  _Unwind_Resume(a1);
}

uint64_t sub_100021ED0(uint64_t a1)
{
  uint64_t v1;
  int v3;

  v3 = *(_DWORD *)(a1 + 64);
  v1 = *(_QWORD *)(a1 + 56);
  if (!v1)
    sub_100027BC4();
  return (*(uint64_t (**)(uint64_t, int *))(*(_QWORD *)v1 + 48))(v1, &v3);
}

uint64_t sub_100021F0C(uint64_t a1, uint64_t a2)
{
  return sub_100027674(a1 + 32, a2 + 32);
}

_QWORD *sub_100021F18(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 32);
  result = *(_QWORD **)(a1 + 56);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_100021F4C(uint64_t a1, uint64_t a2, id **a3)
{
  id *v3;
  id *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD block[4];
  _BYTE v15[24];
  _BYTE *v16;
  _QWORD v17[3];
  _QWORD *v18;

  v3 = *a3;
  v4 = a3[1];
  if (*a3 != v4)
  {
    do
    {
      sub_100048CF0((uint64_t)v3, (uint64_t)v17);
      if (!v18)
      {
        v8 = (id)qword_10085F520;
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          v9 = sub_100048CA4(v3);
          objc_claimAutoreleasedReturnValue(v9);
          sub_1003CA9EC();
        }

        goto LABEL_16;
      }
      v5 = sub_100048CC4((uint64_t)v3);
      v6 = objc_claimAutoreleasedReturnValue(v5);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_100022184;
      block[3] = &unk_1007FA6B8;
      v7 = (uint64_t)v18;
      if (v18)
      {
        if (v18 == v17)
        {
          v16 = v15;
          (*(void (**)(_QWORD *, _BYTE *))(v17[0] + 24))(v17, v15);
          goto LABEL_11;
        }
        v7 = (*(uint64_t (**)(void))(*v18 + 16))();
      }
      v16 = (_BYTE *)v7;
LABEL_11:
      dispatch_async(v6, block);

      v10 = v16;
      if (v16 == v15)
      {
        v10 = v15;
        v11 = 4;
      }
      else
      {
        if (!v16)
          goto LABEL_16;
        v11 = 5;
      }
      (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_16:
      v12 = v18;
      if (v18 == v17)
      {
        v12 = v17;
        v13 = 4;
        goto LABEL_20;
      }
      if (v18)
      {
        v13 = 5;
LABEL_20:
        (*(void (**)(void))(*v12 + 8 * v13))();
      }
      v3 += 21;
    }
    while (v3 != v4);
  }
}

void sub_100022128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char *a23)
{
  void *v23;
  char *v25;
  uint64_t v26;

  v25 = a23;
  if (a23 == &a20)
  {
    v26 = 4;
    v25 = &a20;
  }
  else
  {
    if (!a23)
      goto LABEL_6;
    v26 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v25 + 8 * v26))();
LABEL_6:
  _Unwind_Resume(a1);
}

uint64_t sub_100022184(uint64_t a1)
{
  uint64_t v1;
  int v3;

  v3 = 2;
  v1 = *(_QWORD *)(a1 + 56);
  if (!v1)
    sub_100027BC4();
  return (*(uint64_t (**)(uint64_t, int *))(*(_QWORD *)v1 + 48))(v1, &v3);
}

uint64_t sub_1000221C0(uint64_t a1)
{
  uint64_t v1;
  int v3;

  v3 = *(_DWORD *)(a1 + 64);
  v1 = *(_QWORD *)(a1 + 56);
  if (!v1)
    sub_100027BC4();
  return (*(uint64_t (**)(uint64_t, int *))(*(_QWORD *)v1 + 48))(v1, &v3);
}

void sub_1000221FC(uint64_t a1, int a2)
{
  _QWORD *v2;
  id *v4;
  id *v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  void ***v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  BOOL v17;
  _QWORD *v18;
  id *v19;
  id *v20;
  uint64_t v21;
  _QWORD block[4];
  _BYTE v23[24];
  _BYTE *v24;
  int v25;
  void **v26[3];
  void ***v27;

  v2 = *(_QWORD **)(a1 + 216);
  v18 = (_QWORD *)(a1 + 224);
  if (v2 == (_QWORD *)(a1 + 224))
    return;
  do
  {
    v19 = 0;
    v20 = 0;
    v21 = 0;
    sub_100027C20(&v19, v2[5], v2[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v2[6] - v2[5]) >> 3));
    v4 = v19;
    v5 = v20;
    while (v4 != v5)
    {
      sub_100048CFC((uint64_t)v4, (uint64_t)v26);
      if (!v27)
      {
        v9 = (id)qword_10085F520;
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
          v10 = sub_100048CA4(v4);
          objc_claimAutoreleasedReturnValue(v10);
          sub_1003CB28C();
        }

        goto LABEL_18;
      }
      v6 = sub_100048CC4((uint64_t)v4);
      v7 = objc_claimAutoreleasedReturnValue(v6);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_1000224E4;
      block[3] = &unk_1007FA6E8;
      v8 = (uint64_t)v27;
      if (v27)
      {
        if (v27 == v26)
        {
          v24 = v23;
          (*((void (**)(void ***, _BYTE *))v26[0] + 3))(v26, v23);
          goto LABEL_13;
        }
        v8 = ((uint64_t (*)(void))(*v27)[2])();
      }
      v24 = (_BYTE *)v8;
LABEL_13:
      v25 = a2;
      dispatch_async(v7, block);

      v11 = v24;
      if (v24 == v23)
      {
        v11 = v23;
        v12 = 4;
      }
      else
      {
        if (!v24)
          goto LABEL_18;
        v12 = 5;
      }
      (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_18:
      v13 = v27;
      if (v27 == v26)
      {
        v13 = v26;
        v14 = 4;
      }
      else
      {
        if (!v27)
          goto LABEL_23;
        v14 = 5;
      }
      ((void (*)(void))(*v13)[v14])();
LABEL_23:
      v4 += 21;
    }
    v26[0] = (void **)&v19;
    sub_100027F34(v26);
    v15 = (_QWORD *)v2[1];
    if (v15)
    {
      do
      {
        v16 = v15;
        v15 = (_QWORD *)*v15;
      }
      while (v15);
    }
    else
    {
      do
      {
        v16 = (_QWORD *)v2[2];
        v17 = *v16 == (_QWORD)v2;
        v2 = v16;
      }
      while (!v17);
    }
    v2 = v16;
  }
  while (v16 != v18);
}

void sub_100022470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void **a27,uint64_t a28,uint64_t a29,void ***a30)
{
  void *v30;
  void ***v32;
  uint64_t v33;

  v32 = a30;
  if (a30 == &a27)
  {
    v33 = 4;
    v32 = &a27;
  }
  else
  {
    if (!a30)
      goto LABEL_6;
    v33 = 5;
  }
  ((void (*)(void))(*v32)[v33])();
LABEL_6:
  a27 = (void **)&a12;
  sub_100027F34(&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_1000224E4(uint64_t a1)
{
  uint64_t v1;
  int v3;

  v3 = *(_DWORD *)(a1 + 64);
  v1 = *(_QWORD *)(a1 + 56);
  if (!v1)
    sub_100027BC4();
  return (*(uint64_t (**)(uint64_t, int *))(*(_QWORD *)v1 + 48))(v1, &v3);
}

uint64_t sub_100022520(uint64_t a1, uint64_t a2)
{
  return sub_100027674(a1 + 32, a2 + 32);
}

_QWORD *sub_10002252C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 32);
  result = *(_QWORD **)(a1 + 56);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_100022560(uint64_t a1, int a2, id **a3)
{
  id *v3;
  id *v4;
  id v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD block[4];
  _BYTE v16[24];
  _BYTE *v17;
  int v18;
  _QWORD v19[3];
  _QWORD *v20;

  v3 = *a3;
  v4 = a3[1];
  if (*a3 != v4)
  {
    do
    {
      sub_100048CFC((uint64_t)v3, (uint64_t)v19);
      if (!v20)
      {
        v9 = (id)qword_10085F520;
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
          v10 = sub_100048CA4(v3);
          objc_claimAutoreleasedReturnValue(v10);
          sub_1003CB28C();
        }

        goto LABEL_16;
      }
      v6 = sub_100048CC4((uint64_t)v3);
      v7 = objc_claimAutoreleasedReturnValue(v6);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_1000227A0;
      block[3] = &unk_1007FA6E8;
      v8 = (uint64_t)v20;
      if (v20)
      {
        if (v20 == v19)
        {
          v17 = v16;
          (*(void (**)(_QWORD *, _BYTE *))(v19[0] + 24))(v19, v16);
          goto LABEL_11;
        }
        v8 = (*(uint64_t (**)(void))(*v20 + 16))();
      }
      v17 = (_BYTE *)v8;
LABEL_11:
      v18 = a2;
      dispatch_async(v7, block);

      v11 = v17;
      if (v17 == v16)
      {
        v11 = v16;
        v12 = 4;
      }
      else
      {
        if (!v17)
          goto LABEL_16;
        v12 = 5;
      }
      (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_16:
      v13 = v20;
      if (v20 == v19)
      {
        v13 = v19;
        v14 = 4;
        goto LABEL_20;
      }
      if (v20)
      {
        v14 = 5;
LABEL_20:
        (*(void (**)(void))(*v13 + 8 * v14))();
      }
      v3 += 21;
    }
    while (v3 != v4);
  }
}

void sub_100022744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char *a23)
{
  void *v23;
  char *v25;
  uint64_t v26;

  v25 = a23;
  if (a23 == &a20)
  {
    v26 = 4;
    v25 = &a20;
  }
  else
  {
    if (!a23)
      goto LABEL_6;
    v26 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v25 + 8 * v26))();
LABEL_6:
  _Unwind_Resume(a1);
}

uint64_t sub_1000227A0(uint64_t a1)
{
  uint64_t v1;
  int v3;

  v3 = *(_DWORD *)(a1 + 64);
  v1 = *(_QWORD *)(a1 + 56);
  if (!v1)
    sub_100027BC4();
  return (*(uint64_t (**)(uint64_t, int *))(*(_QWORD *)v1 + 48))(v1, &v3);
}

uint64_t sub_1000227DC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 460) == 1)
    return 0;
  else
    return sub_10001D778();
}

uint64_t sub_1000227F4(uint64_t a1)
{
  NSObject *v2;
  CFRunLoopRef Current;
  uint8_t buf[16];

  if (a1)
  {
    v2 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiManagerClientScheduleWithRunLoop", buf, 2u);
    }
    Current = CFRunLoopGetCurrent();
    WiFiManagerClientScheduleWithRunLoop(a1, Current, kCFRunLoopDefaultMode);
    while (1)
      CFRunLoopRun();
  }
  printf("%s: managerClient is NULL!", "__wifiManagerEventsThread");
  return 0;
}

void sub_1000228A0(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint8_t v4[16];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "#wifi-service,registerfForStateChanges", v4, 2u);
  }
  v3 = sub_100020460(a1);
  if (v3)
  {
    WiFiDeviceClientRegisterVirtualInterfaceStateChangeCallback(v3, sub_1000257A8, a1);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB2C8();
  }
}

BOOL sub_100022950(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL8 v10;
  NSObject *v11;
  const char *v12;
  NSObject *v13;
  _QWORD block[5];
  uint8_t buf[24];

  v3 = a2;
  if (!v3)
  {
    v4 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#wifi-service,checkRangingReady - copying interface state info", buf, 2u);
    }
    *(_QWORD *)buf = 0;
    v5 = sub_100020460(a1);
    WiFiDeviceClientCopyInterfaceStateInfo(v5, buf);
    v3 = *(id *)buf;
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("RANGING_ALLOWED")));
  v7 = v6;
  if (v6)
  {
    if (objc_msgSend(v6, "BOOLValue"))
    {
      if (!*(_BYTE *)(a1 + 56))
      {
        v8 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#wifi-service,checkRangingReady - true - report to clients", buf, 2u);
        }
        sub_1000221FC(a1, 0);
        if (sub_10001E538(a1))
        {
          v9 = *(NSObject **)(a1 + 80);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_100022BEC;
          block[3] = &unk_1007FA668;
          block[4] = a1;
          dispatch_async(v9, block);
        }
      }
      v10 = 1;
      *(_BYTE *)(a1 + 56) = 1;
    }
    else
    {
      if (*(_BYTE *)(a1 + 56))
      {
        v13 = qword_10085F520;
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#wifi-service,checkRangingReady - false - report to clients", buf, 2u);
        }
        sub_1000221FC(a1, 1);
      }
      v10 = 0;
      *(_BYTE *)(a1 + 56) = 0;
    }
  }
  else
  {
    v11 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
    {
      if (*(_BYTE *)(a1 + 56))
        v12 = "true";
      else
        v12 = "false";
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)&buf[4] = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "#wifi-service,checkRangingReady - no info - currently %s", buf, 0xCu);
    }
    v10 = *(_BYTE *)(a1 + 56) != 0;
  }

  return v10;
}

void sub_100022BC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100022BEC(uint64_t a1)
{
  sub_10002069C(*(_QWORD *)(a1 + 32));
}

uint64_t sub_100022BF4(uint64_t a1)
{
  return sub_10002069C(*(_QWORD *)(a1 + 32));
}

uint64_t sub_100022BFC(uint64_t a1, uint64_t a2)
{
  objc_storeStrong((id *)a1, *(id *)a2);
  objc_storeStrong((id *)(a1 + 8), *(id *)(a2 + 8));
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  objc_storeStrong((id *)(a1 + 32), *(id *)(a2 + 32));
  objc_storeStrong((id *)(a1 + 40), *(id *)(a2 + 40));
  sub_100026790((_QWORD *)(a1 + 48), a2 + 48);
  sub_100026828((_QWORD *)(a1 + 80), a2 + 80);
  sub_1000268C0((_QWORD *)(a1 + 112), a2 + 112);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  objc_storeStrong((id *)(a1 + 152), *(id *)(a2 + 152));
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  return a1;
}

id sub_100022C94(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  __CFString *v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", 4);
  if (*(_BYTE *)(a1 + 408))
  {
    v3 = a1 + 240;
    v4 = sub_100048CA4((id *)(a1 + 240));
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    v6 = objc_msgSend(v5, "copy");

    v7 = sub_100048CAC(v3);
    v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    v9 = objc_msgSend(v8, "copy");

    v10 = sub_100048CB4(v3);
    v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    v12 = objc_msgSend(v11, "copy");

    v13 = sub_100048CD4(v3);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    v15 = objc_msgSend(v14, "copy");

    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 4));
    v17 = sub_1001FD9AC();
    v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    if (v6 && v9 && v12)
    {
      v19 = objc_alloc_init((Class)NSMutableDictionary);
      objc_msgSend(v19, "setValue:forKey:", v15, CFSTR("STATION_MAC"));
      objc_msgSend(v19, "setValue:forKey:", v6, CFSTR("RANGING_TOKEN_ID"));
      objc_msgSend(v19, "setValue:forKey:", v9, CFSTR("RANGING_PMK"));
      objc_msgSend(v19, "setValue:forKey:", v12, CFSTR("RANGING_NUM_MEASUREMENTS"));
      if ((objc_msgSend(v18, "hasPrefix:", CFSTR("iPhone")) & 1) != 0
        || objc_msgSend(v18, "hasPrefix:", CFSTR("RealityDevice")))
      {
        objc_msgSend(v19, "setValue:forKey:", v16, CFSTR("RANGING_CORE_MASK"));
      }
      v20 = objc_msgSend(v19, "copy");
      objc_msgSend(v2, "addObject:", v20);

    }
    else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
    {
      sub_1003CB364();
    }

  }
  else
  {
    v21 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
      sub_1003CB2F4(v21, v22, v23, v24, v25, v26, v27, v28);
  }
  return v2;
}

void sub_100022EBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v10 = v9;

  _Unwind_Resume(a1);
}

void sub_100022F60(uint64_t a1@<X0>, const __CFArray *a2@<X1>, __int128 *a3@<X8>)
{
  CFIndex Count;
  NSObject *v6;
  CFIndex i;
  const __CFDictionary *ValueAtIndex;
  const __CFDictionary *v9;
  CFTypeID v10;
  void *v11;
  void *v12;
  CFTypeID v13;
  id v14;
  uint64_t v15;
  void **v16;
  NSObject *v17;
  const char *v18;
  uint64_t v19;
  void **v20;
  id v21;
  void *v22;
  NSObject *v23;
  const __CFNumber *Value;
  const __CFNumber *v25;
  CFTypeID v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  uint64_t v30;
  _WORD *v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  void *v35;
  const __CFNumber *v36;
  const __CFNumber *v37;
  CFTypeID v38;
  const __CFNumber *v39;
  const __CFNumber *v40;
  CFTypeID v41;
  uint64_t v42;
  void **v43;
  NSObject *v44;
  const char *v45;
  NSObject *v46;
  void **v47;
  const __CFNumber *v48;
  const __CFNumber *v49;
  CFTypeID v50;
  NSObject *v51;
  void **v52;
  const __CFNumber *v53;
  const __CFNumber *v54;
  CFTypeID v55;
  uint64_t v56;
  void **v57;
  uint64_t v58;
  void **v59;
  void **v60;
  const __CFArray *v61;
  CFTypeID v62;
  BOOL v63;
  const __CFArray *v64;
  CFIndex v65;
  CFIndex v66;
  const __CFDictionary *v67;
  const __CFDictionary *v68;
  CFTypeID v69;
  const __CFNumber *v70;
  const __CFNumber *v71;
  CFTypeID v72;
  const __CFNumber *v73;
  const __CFNumber *v74;
  CFTypeID v75;
  const __CFNumber *v76;
  const __CFNumber *v77;
  CFTypeID v78;
  const __CFNumber *v79;
  const __CFNumber *v80;
  CFTypeID v81;
  const __CFNumber *v82;
  const __CFNumber *v83;
  CFTypeID v84;
  NSObject *v85;
  uint64_t v86;
  void **v87;
  NSObject *v88;
  const char *v89;
  uint64_t v90;
  void **v91;
  uint64_t v92;
  void **v93;
  uint64_t v94;
  void **v95;
  uint64_t v96;
  void **v97;
  uint64_t v98;
  void **v99;
  NSObject *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  CFIndex v106;
  NSObject *v107;
  void **v108;
  void **v109;
  __int128 *v110;
  CFIndex v111;
  const __CFArray *cf;
  CFIndex v113;
  char v115;
  _BYTE v116[7];
  uint64_t v117;
  unsigned __int8 v118;
  unsigned __int8 v119;
  int v120;
  int v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int16 v127;
  double v128;
  int valuePtr;
  uint64_t v130;
  void *v131[2];
  char v132;
  __int128 v133;
  unint64_t v134;
  _BYTE buf[24];
  _BYTE v136[24];
  int v137;
  uint64_t v138;

  v133 = 0uLL;
  v134 = 0;
  sub_10000BF04(v131, "Dictionary error,");
  if (a2)
    Count = CFArrayGetCount(a2);
  else
    Count = 0;
  v6 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 134349056;
    *(_QWORD *)&buf[4] = Count;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#wifi-service,parsing wifi callback data, nPeers %{public}ld", buf, 0xCu);
  }
  if (*(_BYTE *)(a1 + 48) || *(_BYTE *)(a1 + 408))
  {
    if (Count >= 1)
    {
      for (i = 0; i != Count; ++i)
      {
        ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(a2, i);
        v9 = ValueAtIndex;
        if (ValueAtIndex && (v10 = CFGetTypeID(ValueAtIndex), v10 == CFDictionaryGetTypeID()))
        {
          if (!*(_BYTE *)(a1 + 48))
          {
            v21 = sub_100048CD4(a1 + 240);
            v14 = (id)objc_claimAutoreleasedReturnValue(v21);
LABEL_26:
            v22 = v14;
            v138 = 0;
            objc_msgSend(v14, "getBytes:length:", &v138, 6);
            v130 = v138;
            v23 = qword_10085F520;
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              *(_QWORD *)&buf[4] = v22;
              _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#wifi-service,macAddress %@", buf, 0xCu);
            }
            valuePtr = 0;
            Value = (const __CFNumber *)CFDictionaryGetValue(v9, CFSTR("RANGING_STATUS"));
            v25 = Value;
            if (Value && (v26 = CFGetTypeID(Value), v26 == CFNumberGetTypeID()))
            {
              CFNumberGetValue(v25, kCFNumberSInt32Type, &valuePtr);
            }
            else
            {
              v27 = qword_10085F520;
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              {
                v60 = v131;
                if (v132 < 0)
                  v60 = (void **)v131[0];
                *(_DWORD *)buf = 136446210;
                *(_QWORD *)&buf[4] = v60;
                _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "#wifi-service,%{public}s status type", buf, 0xCu);
              }
            }
            v28 = qword_10085F520;
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412546;
              *(_QWORD *)&buf[4] = v22;
              *(_WORD *)&buf[12] = 1024;
              *(_DWORD *)&buf[14] = valuePtr;
              _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_INFO, "#wifi-service,Ranging result from %@ resulted in status value of: %d", buf, 0x12u);
            }
            if (*(_DWORD *)(a1 + 448) == 2 || *(_DWORD *)(a1 + 452) == 2)
            {
              v29 = qword_10085F520;
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138412290;
                *(_QWORD *)&buf[4] = v22;
                _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "#wifi-service,received responder indicator of ranging to %@", buf, 0xCu);
              }
              v30 = v130;
              v31 = operator new(0x18uLL);
              *(_QWORD *)v31 = 0xFFFFFF9CFFFEFB67;
              v31[4] = 0;
              *((_QWORD *)v31 + 2) = 0;
              *(_QWORD *)buf = v30;
              *(_QWORD *)&buf[8] = 0;
              *(_DWORD *)&buf[16] = -998637568;
              memset(v136, 0, sizeof(v136));
              sub_100026DB4(v136, v31, (uint64_t)(v31 + 12), 1uLL);
              v137 = 0;
              operator delete(v31);
              v32 = *((_QWORD *)&v133 + 1);
              if (*((_QWORD *)&v133 + 1) < v134)
              {
                v33 = *(_OWORD *)buf;
                *(_DWORD *)(*((_QWORD *)&v133 + 1) + 16) = *(_DWORD *)&buf[16];
                *(_OWORD *)v32 = v33;
                *(_QWORD *)(v32 + 32) = 0;
                *(_QWORD *)(v32 + 40) = 0;
                *(_QWORD *)(v32 + 24) = 0;
                *(_OWORD *)(v32 + 24) = *(_OWORD *)v136;
                *(_QWORD *)(v32 + 40) = *(_QWORD *)&v136[16];
                memset(v136, 0, sizeof(v136));
                *(_DWORD *)(v32 + 48) = v137;
                *((_QWORD *)&v133 + 1) = v32 + 56;
LABEL_141:

                continue;
              }
              v34 = sub_10002889C((uint64_t *)&v133, (uint64_t)buf);
              v35 = *(void **)v136;
              *((_QWORD *)&v133 + 1) = v34;
              if (!*(_QWORD *)v136)
                goto LABEL_141;
              *(_QWORD *)&v136[8] = *(_QWORD *)v136;
LABEL_42:
              operator delete(v35);
              goto LABEL_141;
            }
            v128 = 0.0;
            v36 = (const __CFNumber *)CFDictionaryGetValue(v9, CFSTR("RANGING_DISTANCE"));
            v37 = v36;
            if (!v36 || (v38 = CFGetTypeID(v36), v38 != CFNumberGetTypeID()))
            {
              v42 = qword_10085F520;
              if (!os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                goto LABEL_141;
              v43 = v131;
              if (v132 < 0)
                v43 = (void **)v131[0];
              *(_DWORD *)buf = 136446210;
              *(_QWORD *)&buf[4] = v43;
              v44 = v42;
              v45 = "#wifi-service,%{public}s distance type";
LABEL_74:
              _os_log_error_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_ERROR, v45, buf, 0xCu);
              goto LABEL_141;
            }
            CFNumberGetValue(v37, kCFNumberDoubleType, &v128);
            v127 = 0;
            v39 = (const __CFNumber *)CFDictionaryGetValue(v9, CFSTR("RANGING_FLAGS"));
            v40 = v39;
            if (v39 && (v41 = CFGetTypeID(v39), v41 == CFNumberGetTypeID()))
            {
              CFNumberGetValue(v40, kCFNumberSInt16Type, &v127);
            }
            else
            {
              v46 = qword_10085F520;
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
              {
                v47 = v131;
                if (v132 < 0)
                  v47 = (void **)v131[0];
                *(_DWORD *)buf = 136315138;
                *(_QWORD *)&buf[4] = v47;
                _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "#wifi-service,#Warning %s flags", buf, 0xCu);
              }
            }
            v126 = 0;
            v48 = (const __CFNumber *)CFDictionaryGetValue(v9, CFSTR("RANGING_SD"));
            v49 = v48;
            if (v48 && (v50 = CFGetTypeID(v48), v50 == CFNumberGetTypeID()))
            {
              CFNumberGetValue(v49, kCFNumberDoubleType, &v126);
            }
            else
            {
              v51 = qword_10085F520;
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
              {
                v52 = v131;
                if (v132 < 0)
                  v52 = (void **)v131[0];
                *(_DWORD *)buf = 136315138;
                *(_QWORD *)&buf[4] = v52;
                _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "#wifi-service,#Warning %s stdDev", buf, 0xCu);
              }
            }
            v125 = 0;
            v53 = (const __CFNumber *)CFDictionaryGetValue(v9, CFSTR("RANGING_VALID_COUNT"));
            v54 = v53;
            if (!v53 || (v55 = CFGetTypeID(v53), v55 != CFNumberGetTypeID()))
            {
              v58 = qword_10085F520;
              if (!os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                goto LABEL_141;
              v59 = v131;
              if (v132 < 0)
                v59 = (void **)v131[0];
              *(_DWORD *)buf = 136446210;
              *(_QWORD *)&buf[4] = v59;
              v44 = v58;
              v45 = "#wifi-service,%{public}s count type";
              goto LABEL_74;
            }
            CFNumberGetValue(v54, kCFNumberLongType, &v125);
            if (v125 >= 9)
            {
              v56 = qword_10085F520;
              if (!os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                goto LABEL_141;
              v57 = v131;
              if (v132 < 0)
                v57 = (void **)v131[0];
              *(_DWORD *)buf = 136446210;
              *(_QWORD *)&buf[4] = v57;
              v44 = v56;
              v45 = "#wifi-service,%{public}s too many measurements in burst";
              goto LABEL_74;
            }
            v122 = 0;
            v123 = 0;
            v124 = 0;
            v61 = (const __CFArray *)CFDictionaryGetValue(v9, CFSTR("RANGING_RESULTS"));
            cf = v61;
            if (!v61 || (v62 = CFGetTypeID(v61), v63 = v62 == CFArrayGetTypeID(), v64 = cf, !v63))
            {
              v100 = qword_10085F520;
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              {
                v108 = v131;
                if (v132 < 0)
                  v108 = (void **)v131[0];
                *(_DWORD *)buf = 136446210;
                *(_QWORD *)&buf[4] = v108;
                _os_log_error_impl((void *)&_mh_execute_header, v100, OS_LOG_TYPE_ERROR, "#wifi-service,%{public}s results array type", buf, 0xCu);
              }
LABEL_127:
              v101 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((v123 - v122) >> 3));
              if (v123 == v122)
                v102 = 0;
              else
                v102 = v101;
              sub_100028C54((uint64_t)v122, (unint64_t)v123, v102, 1);
              if (v123 == v122)
              {
                if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                  sub_1003CB3C8(&v115, v116);
              }
              else
              {
                v103 = *((_QWORD *)&v133 + 1);
                if (*((_QWORD *)&v133 + 1) >= v134)
                {
                  v104 = sub_1000299B8((uint64_t *)&v133, &v130, &v128, (uint64_t)&v122);
                }
                else
                {
                  sub_100029AF4((uint64_t)&v134, *((uint64_t *)&v133 + 1), &v130, &v128, (uint64_t)&v122);
                  v104 = v103 + 56;
                }
                *((_QWORD *)&v133 + 1) = v104;
                v105 = qword_10085F520;
                if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 67110144;
                  *(_DWORD *)&buf[4] = i;
                  *(_WORD *)&buf[8] = 1024;
                  *(_DWORD *)&buf[10] = valuePtr;
                  *(_WORD *)&buf[14] = 2048;
                  *(double *)&buf[16] = v128;
                  *(_WORD *)v136 = 2048;
                  *(_QWORD *)&v136[2] = v126;
                  *(_WORD *)&v136[10] = 2048;
                  *(_QWORD *)&v136[12] = v125;
                  _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_DEFAULT, "#wifi-service,WRTT, peer # %i, status %d, distance %f, uncertainty %f, num meas %li", buf, 0x2Cu);
                }
              }
LABEL_139:
              v35 = v122;
              if (!v122)
                goto LABEL_141;
              v123 = v122;
              goto LABEL_42;
            }
            v65 = CFArrayGetCount(cf);
            if (v65 != v125)
            {
              v106 = v65;
              v107 = qword_10085F520;
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
              {
                v109 = v131;
                if (v132 < 0)
                  v109 = (void **)v131[0];
                *(_DWORD *)buf = 136446722;
                *(_QWORD *)&buf[4] = v109;
                *(_WORD *)&buf[12] = 2050;
                *(_QWORD *)&buf[14] = v106;
                *(_WORD *)&buf[22] = 2050;
                *(_QWORD *)v136 = v125;
                _os_log_error_impl((void *)&_mh_execute_header, v107, OS_LOG_TYPE_ERROR, "#wifi-service,%{public}s array length %{public}lu not equal to valid measurements %{public}lu", buf, 0x20u);
              }
              goto LABEL_139;
            }
            v111 = v65;
            if (v65 < 1)
              goto LABEL_127;
            v66 = 0;
            while (2)
            {
              v113 = v66;
              v67 = (const __CFDictionary *)CFArrayGetValueAtIndex(v64, v66);
              v68 = v67;
              if (v67 && (v69 = CFGetTypeID(v67), v69 == CFDictionaryGetTypeID()))
              {
                v121 = 0;
                v70 = (const __CFNumber *)CFDictionaryGetValue(v68, CFSTR("RANGING_RSSI"));
                v71 = v70;
                if (v70 && (v72 = CFGetTypeID(v70), v72 == CFNumberGetTypeID()))
                {
                  CFNumberGetValue(v71, kCFNumberSInt32Type, &v121);
                  v120 = 0;
                  v73 = (const __CFNumber *)CFDictionaryGetValue(v68, CFSTR("RANGING_RTT"));
                  v74 = v73;
                  if (v73 && (v75 = CFGetTypeID(v73), v75 == CFNumberGetTypeID()))
                  {
                    CFNumberGetValue(v74, kCFNumberSInt32Type, &v120);
                    v119 = 0;
                    v76 = (const __CFNumber *)CFDictionaryGetValue(v68, CFSTR("RANGING_CORE_ID"));
                    v77 = v76;
                    if (v76 && (v78 = CFGetTypeID(v76), v78 == CFNumberGetTypeID()))
                    {
                      CFNumberGetValue(v77, kCFNumberSInt8Type, &v119);
                      v118 = 0;
                      v79 = (const __CFNumber *)CFDictionaryGetValue(v68, CFSTR("RANGING_PEER_CORE_ID"));
                      v80 = v79;
                      if (v79 && (v81 = CFGetTypeID(v79), v81 == CFNumberGetTypeID()))
                      {
                        CFNumberGetValue(v80, kCFNumberSInt8Type, &v118);
                        v117 = 0;
                        v82 = (const __CFNumber *)CFDictionaryGetValue(v68, CFSTR("RANGING_RESULT_TIMESTAMP"));
                        v83 = v82;
                        if (v82)
                        {
                          v84 = CFGetTypeID(v82);
                          if (v84 == CFNumberGetTypeID())
                          {
                            CFNumberGetValue(v83, kCFNumberSInt64Type, &v117);
                            v85 = qword_10085F520;
                            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
                            {
                              *(_DWORD *)buf = 138413570;
                              *(_QWORD *)&buf[4] = v22;
                              *(_WORD *)&buf[12] = 1024;
                              *(_DWORD *)&buf[14] = v121;
                              *(_WORD *)&buf[18] = 1024;
                              *(_DWORD *)&buf[20] = v120;
                              *(_WORD *)v136 = 1024;
                              *(_DWORD *)&v136[2] = v119;
                              *(_WORD *)&v136[6] = 1024;
                              *(_DWORD *)&v136[8] = v118;
                              *(_WORD *)&v136[12] = 2048;
                              *(_QWORD *)&v136[14] = v117;
                              _os_log_impl((void *)&_mh_execute_header, v85, OS_LOG_TYPE_DEFAULT, "#wifi-service,WRTT: id: %@, rssi: %i, rtt: %i, coreID: %u, peerCoreID: %u, timestamp: 0x%llx", buf, 0x2Eu);
                            }
                            sub_100024028((void **)&v122, &v120, &v121, (char *)&v119, (char *)&v118, &v117);
LABEL_124:
                            v64 = cf;
                            v66 = v113 + 1;
                            if (v111 == v113 + 1)
                              goto LABEL_127;
                            continue;
                          }
                        }
                        v98 = qword_10085F520;
                        if (!os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                          goto LABEL_124;
                        v99 = v131;
                        if (v132 < 0)
                          v99 = (void **)v131[0];
                        *(_DWORD *)buf = 136446466;
                        *(_QWORD *)&buf[4] = v99;
                        *(_WORD *)&buf[12] = 2050;
                        *(_QWORD *)&buf[14] = v113;
                        v88 = v98;
                        v89 = "#wifi-service,%{public}s timestamp %{public}ld type";
                      }
                      else
                      {
                        v96 = qword_10085F520;
                        if (!os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                          goto LABEL_124;
                        v97 = v131;
                        if (v132 < 0)
                          v97 = (void **)v131[0];
                        *(_DWORD *)buf = 136446466;
                        *(_QWORD *)&buf[4] = v97;
                        *(_WORD *)&buf[12] = 2050;
                        *(_QWORD *)&buf[14] = v113;
                        v88 = v96;
                        v89 = "#wifi-service,%{public}s peerCoreID %{public}ld type";
                      }
                    }
                    else
                    {
                      v94 = qword_10085F520;
                      if (!os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                        goto LABEL_124;
                      v95 = v131;
                      if (v132 < 0)
                        v95 = (void **)v131[0];
                      *(_DWORD *)buf = 136446466;
                      *(_QWORD *)&buf[4] = v95;
                      *(_WORD *)&buf[12] = 2050;
                      *(_QWORD *)&buf[14] = v113;
                      v88 = v94;
                      v89 = "#wifi-service,%{public}s selfCoreID %{public}ld type";
                    }
                  }
                  else
                  {
                    v92 = qword_10085F520;
                    if (!os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                      goto LABEL_124;
                    v93 = v131;
                    if (v132 < 0)
                      v93 = (void **)v131[0];
                    *(_DWORD *)buf = 136446466;
                    *(_QWORD *)&buf[4] = v93;
                    *(_WORD *)&buf[12] = 2050;
                    *(_QWORD *)&buf[14] = v113;
                    v88 = v92;
                    v89 = "#wifi-service,%{public}s oneRtt %{public}ld type";
                  }
                }
                else
                {
                  v90 = qword_10085F520;
                  if (!os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                    goto LABEL_124;
                  v91 = v131;
                  if (v132 < 0)
                    v91 = (void **)v131[0];
                  *(_DWORD *)buf = 136446466;
                  *(_QWORD *)&buf[4] = v91;
                  *(_WORD *)&buf[12] = 2050;
                  *(_QWORD *)&buf[14] = v113;
                  v88 = v90;
                  v89 = "#wifi-service,%{public}s oneRssi %{public}ld type";
                }
              }
              else
              {
                v86 = qword_10085F520;
                if (!os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                  goto LABEL_124;
                v87 = v131;
                if (v132 < 0)
                  v87 = (void **)v131[0];
                *(_DWORD *)buf = 136446466;
                *(_QWORD *)&buf[4] = v87;
                *(_WORD *)&buf[12] = 2050;
                *(_QWORD *)&buf[14] = v113;
                v88 = v86;
                v89 = "#wifi-service,%{public}s oneMeas %{public}ld type";
              }
              break;
            }
            _os_log_error_impl((void *)&_mh_execute_header, v88, OS_LOG_TYPE_ERROR, v89, buf, 0x16u);
            goto LABEL_124;
          }
          v11 = (void *)CFDictionaryGetValue(v9, CFSTR("RANGING_TOKEN_ID"));
          v12 = v11;
          if (v11)
          {
            v13 = CFGetTypeID(v11);
            if (v13 == CFDataGetTypeID())
            {
              v14 = v12;
              goto LABEL_26;
            }
          }
          v19 = qword_10085F520;
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          {
            v20 = v131;
            if (v132 < 0)
              v20 = (void **)v131[0];
            *(_DWORD *)buf = 136446210;
            *(_QWORD *)&buf[4] = v20;
            v17 = v19;
            v18 = "#wifi-service,%{public}s ranging token id type";
LABEL_20:
            _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, v18, buf, 0xCu);
          }
        }
        else
        {
          v15 = qword_10085F520;
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          {
            v16 = v131;
            if (v132 < 0)
              v16 = (void **)v131[0];
            *(_DWORD *)buf = 136446210;
            *(_QWORD *)&buf[4] = v16;
            v17 = v15;
            v18 = "#wifi-service,%{public}s dictionary type";
            goto LABEL_20;
          }
        }
      }
    }
    *a3 = v133;
    *((_QWORD *)a3 + 2) = v134;
    v110 = &v133;
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
      sub_1003CB390();
    v110 = a3;
  }
  *(_QWORD *)v110 = 0;
  *((_QWORD *)v110 + 1) = 0;
  *((_QWORD *)v110 + 2) = 0;
  if (v132 < 0)
    operator delete(v131[0]);
  *(_QWORD *)buf = &v133;
  sub_100028810((void ***)buf);
}

void sub_100023F60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *__p,uint64_t a42)
{
  void *v42;
  uint64_t v43;

  if (__p)
    operator delete(__p);

  if (*(char *)(v43 - 225) < 0)
    operator delete(*(void **)(v43 - 248));
  *(_QWORD *)(v43 - 192) = v43 - 224;
  sub_100028810((void ***)(v43 - 192));
  _Unwind_Resume(a1);
}

char *sub_100024028(void **a1, _DWORD *a2, int *a3, char *a4, char *a5, uint64_t *a6)
{
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  unint64_t v15;
  int v16;
  char v17;
  char v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  int v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;

  v14 = a1[2];
  v12 = (uint64_t)(a1 + 2);
  v13 = v14;
  v15 = *(_QWORD *)(v12 - 8);
  if (v15 >= (unint64_t)v14)
  {
    v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v15 - (_QWORD)*a1) >> 3);
    v22 = v21 + 1;
    if (v21 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_100026E7C();
    v23 = 0xAAAAAAAAAAAAAAABLL * ((v13 - (_BYTE *)*a1) >> 3);
    if (2 * v23 > v22)
      v22 = 2 * v23;
    if (v23 >= 0x555555555555555)
      v24 = 0xAAAAAAAAAAAAAAALL;
    else
      v24 = v22;
    v25 = (char *)sub_100026E90(v12, v24);
    v26 = *a3;
    v27 = &v25[24 * v21];
    v29 = &v25[24 * v28];
    v30 = *a4;
    v31 = *a5;
    v32 = *a6;
    *(_DWORD *)v27 = *a2;
    *((_DWORD *)v27 + 1) = v26;
    v27[8] = v30;
    v27[9] = v31;
    *((_QWORD *)v27 + 2) = v32;
    v20 = v27 + 24;
    v34 = (char *)*a1;
    v33 = (char *)a1[1];
    if (v33 != *a1)
    {
      do
      {
        v35 = *(_OWORD *)(v33 - 24);
        *((_QWORD *)v27 - 1) = *((_QWORD *)v33 - 1);
        *(_OWORD *)(v27 - 24) = v35;
        v27 -= 24;
        v33 -= 24;
      }
      while (v33 != v34);
      v33 = (char *)*a1;
    }
    *a1 = v27;
    a1[1] = v20;
    a1[2] = v29;
    if (v33)
      operator delete(v33);
  }
  else
  {
    v16 = *a3;
    v17 = *a4;
    v18 = *a5;
    v19 = *a6;
    *(_DWORD *)v15 = *a2;
    *(_DWORD *)(v15 + 4) = v16;
    *(_BYTE *)(v15 + 8) = v17;
    *(_BYTE *)(v15 + 9) = v18;
    *(_QWORD *)(v15 + 16) = v19;
    v20 = (char *)(v15 + 24);
  }
  a1[1] = v20;
  return v20 - 24;
}

void sub_10002418C(uint64_t a1, uint64_t a2, const __CFArray *a3, uint64_t a4, int a5)
{
  std::mutex *v8;
  NSObject *v9;
  __int128 *v10;
  _QWORD *v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  BOOL v17;
  _QWORD *v18;
  NSObject *v19;
  id *v20;
  id *v21;
  id v22;
  NSObject *v23;
  uint64_t v24;
  NSObject *v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char v31;
  std::mutex *v32;
  uint64_t v33;
  __int128 *v34;
  id *v35;
  id *v36;
  uint64_t v37;
  uint8_t buf[16];
  int v39;
  void *v40;
  _BYTE *v41;
  uint64_t v42;
  int v43;
  __int128 v44;
  _QWORD block[4];
  _BYTE v46[24];
  _BYTE *v47;
  __int128 v48;
  int v49;
  void *__p;
  void *v51;
  uint64_t v52;
  int v53;
  _BYTE v54[24];
  _BYTE *v55;

  v8 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  v31 = a5;
  if (a5)
  {
    *(_BYTE *)(a1 + 52) = 0;
    if (*(_BYTE *)(a1 + 184))
      *(_BYTE *)(a1 + 184) = 0;
  }
  v9 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "#wifi-service,onWiFiDeviceClientRangingCallback", buf, 2u);
  }
  v32 = v8;
  v33 = a1;
  sub_100022F60(a1, a3, &v44);
  v34 = (__int128 *)*((_QWORD *)&v44 + 1);
  v10 = (__int128 *)v44;
  if ((_QWORD)v44 != *((_QWORD *)&v44 + 1))
  {
    v11 = (_QWORD *)(a1 + 224);
    while (1)
    {
      v12 = *v10;
      v39 = *((_DWORD *)v10 + 4);
      *(_OWORD *)buf = v12;
      v41 = 0;
      v42 = 0;
      v40 = 0;
      sub_100026DB4(&v40, *((const void **)v10 + 3), *((_QWORD *)v10 + 4), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)v10 + 4) - *((_QWORD *)v10 + 3)) >> 3));
      v43 = *((_DWORD *)v10 + 12);
      v13 = *(_QWORD *)buf;
      v14 = (_QWORD *)*v11;
      if (*v11)
      {
        v15 = v11;
        do
        {
          v16 = v14[4];
          v17 = v16 >= *(_QWORD *)buf;
          if (v16 >= *(_QWORD *)buf)
            v18 = v14;
          else
            v18 = v14 + 1;
          if (v17)
            v15 = v14;
          v14 = (_QWORD *)*v18;
        }
        while (*v18);
        if (v15 != v11 && *(_QWORD *)buf >= v15[4])
          break;
      }
      v19 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v54 = 134217984;
        *(_QWORD *)&v54[4] = v13;
        _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "#wifi-service,Received results for unmatched peer ID %llu", v54, 0xCu);
      }
LABEL_46:
      if (v40)
      {
        v41 = v40;
        operator delete(v40);
      }
      v10 = (__int128 *)((char *)v10 + 56);
      if (v10 == v34)
        goto LABEL_49;
    }
    v35 = 0;
    v36 = 0;
    v37 = 0;
    sub_100027C20(&v35, v15[5], v15[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v15[6] - v15[5]) >> 3));
    v21 = v35;
    v20 = v36;
    while (1)
    {
      if (v21 == v20)
      {
        *(_QWORD *)v54 = &v35;
        sub_100027F34((void ***)v54);
        goto LABEL_46;
      }
      sub_100048CE4((uint64_t)v21, (uint64_t)v54);
      *(_QWORD *)&buf[8] = sub_100048CCC((uint64_t)v21);
      if (!v55)
      {
        v25 = (id)qword_10085F520;
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        {
          v26 = sub_100048CA4(v21);
          objc_claimAutoreleasedReturnValue(v26);
          sub_1003CB3F4();
        }

        goto LABEL_39;
      }
      v22 = sub_100048CC4((uint64_t)v21);
      v23 = objc_claimAutoreleasedReturnValue(v22);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_1000246D8;
      block[3] = &unk_1007FA718;
      v24 = (uint64_t)v55;
      if (v55)
      {
        if (v55 == v54)
        {
          v47 = v46;
          (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)v54 + 24))(v54, v46);
          goto LABEL_32;
        }
        v24 = (*(uint64_t (**)(void))(*(_QWORD *)v55 + 16))();
      }
      v47 = (_BYTE *)v24;
LABEL_32:
      v48 = *(_OWORD *)buf;
      v49 = v39;
      v51 = 0;
      v52 = 0;
      __p = 0;
      sub_100026DB4(&__p, v40, (uint64_t)v41, 0xAAAAAAAAAAAAAAABLL * ((v41 - (_BYTE *)v40) >> 3));
      v53 = v43;
      dispatch_async(v23, block);

      if (__p)
      {
        v51 = __p;
        operator delete(__p);
      }
      v27 = v47;
      if (v47 == v46)
      {
        v27 = v46;
        v28 = 4;
      }
      else
      {
        if (!v47)
          goto LABEL_39;
        v28 = 5;
      }
      (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_39:
      v29 = v55;
      if (v55 == v54)
      {
        v29 = v54;
        v30 = 4;
      }
      else
      {
        if (!v55)
          goto LABEL_44;
        v30 = 5;
      }
      (*(void (**)(void))(*v29 + 8 * v30))();
LABEL_44:
      v21 += 21;
    }
  }
LABEL_49:
  if ((v31 & 1) != 0)
    sub_10001DB48(v33, 0.0);
  *(_QWORD *)buf = &v44;
  sub_100028810((void ***)buf);
  std::mutex::unlock(v32);
}

void sub_1000245D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::mutex *a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  std::mutex::unlock(a12);
  _Unwind_Resume(a1);
}

void sub_1000246D8(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  char **v6;
  char v7;
  __int128 v8;
  int v9;
  void *__p;
  void *v11;
  uint64_t v12;
  int v13;
  __int128 v14;

  v8 = *(_OWORD *)(a1 + 64);
  v9 = *(_DWORD *)(a1 + 80);
  v11 = 0;
  v12 = 0;
  __p = 0;
  sub_100026DB4(&__p, *(const void **)(a1 + 88), *(_QWORD *)(a1 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 96) - *(_QWORD *)(a1 + 88)) >> 3));
  v13 = *(_DWORD *)(a1 + 112);
  v4 = 0;
  v5 = 0;
  v3 = 0;
  v6 = &v3;
  v7 = 0;
  v3 = (char *)operator new(0x38uLL);
  v4 = (uint64_t)v3;
  v5 = v3 + 56;
  v4 = sub_100029BB4((uint64_t)&v5, &v8, &v14, (uint64_t)v3);
  v2 = *(_QWORD *)(a1 + 56);
  if (!v2)
    sub_100027BC4();
  (*(void (**)(uint64_t, char **))(*(_QWORD *)v2 + 48))(v2, &v3);
  v6 = &v3;
  sub_100028810((void ***)&v6);
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_1000247FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  sub_100028810((void ***)&a13);
  if (__p)
  {
    a19 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_100024844(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  int v5;
  _QWORD *result;

  sub_100027674(a1 + 32, a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  v5 = *(_DWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  result = sub_100026DB4((_QWORD *)(a1 + 88), *(const void **)(a2 + 88), *(_QWORD *)(a2 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 96) - *(_QWORD *)(a2 + 88)) >> 3));
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  return result;
}

void sub_1000248BC(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 56);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 56);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1000248F8(_QWORD *a1)
{
  _QWORD *v2;
  void *v3;
  _QWORD *result;
  uint64_t v5;

  v2 = a1 + 4;
  v3 = (void *)a1[11];
  if (v3)
  {
    a1[12] = v3;
    operator delete(v3);
  }
  result = (_QWORD *)a1[7];
  if (result == v2)
  {
    v5 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v5 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v5))();
}

void sub_10002495C(uint64_t a1, uint64_t a2, const __CFArray *a3)
{
  std::mutex *v5;
  NSObject *v6;
  __int128 *v7;
  __int128 *v8;
  __int128 v9;
  int v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint8_t buf[16];
  int v22;
  void *v23;
  _BYTE *v24;
  uint64_t v25;
  int v26;
  __int128 v27;
  _QWORD block[4];
  _BYTE v29[24];
  _BYTE *v30;
  __int128 v31;
  int v32;
  void *__p;
  void *v34;
  uint64_t v35;
  int v36;
  _QWORD v37[3];
  _QWORD *v38;
  uint8_t v39[4];
  uint64_t v40;

  v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  v6 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#wifi-service,onWiFiDeviceClientRangingCallback2p4GHz", buf, 2u);
  }
  sub_100022F60(a1, a3, &v27);
  v8 = (__int128 *)*((_QWORD *)&v27 + 1);
  v7 = (__int128 *)v27;
  if ((_QWORD)v27 == *((_QWORD *)&v27 + 1))
  {
LABEL_33:
    if (*(_BYTE *)(a1 + 408))
      sub_100021C9C(a1, 4);
    goto LABEL_35;
  }
  do
  {
    v9 = *v7;
    v22 = *((_DWORD *)v7 + 4);
    *(_OWORD *)buf = v9;
    v24 = 0;
    v25 = 0;
    v23 = 0;
    sub_100026DB4(&v23, *((const void **)v7 + 3), *((_QWORD *)v7 + 4), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)v7 + 4) - *((_QWORD *)v7 + 3)) >> 3));
    v26 = *((_DWORD *)v7 + 12);
    v10 = *(unsigned __int8 *)(a1 + 408);
    if (!*(_BYTE *)(a1 + 408))
    {
      v14 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
        sub_1003CB430(v39, &v40, v14);
      goto LABEL_28;
    }
    sub_100048CE4(a1 + 240, (uint64_t)v37);
    *(_QWORD *)&buf[8] = sub_100048CCC(a1 + 240);
    if (!v38)
    {
      v15 = (id)qword_10085F520;
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        v16 = sub_100048CA4((id *)(a1 + 240));
        objc_claimAutoreleasedReturnValue(v16);
        sub_1003CB3F4();
      }

      goto LABEL_23;
    }
    v11 = sub_100048CC4(a1 + 240);
    v12 = objc_claimAutoreleasedReturnValue(v11);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3321888768;
    block[2] = sub_100024DD8;
    block[3] = &unk_1007FA718;
    v13 = (uint64_t)v38;
    if (!v38)
      goto LABEL_9;
    if (v38 != v37)
    {
      v13 = (*(uint64_t (**)(_QWORD *))(*v38 + 16))(v38);
LABEL_9:
      v30 = (_BYTE *)v13;
      goto LABEL_16;
    }
    v30 = v29;
    (*(void (**)(_QWORD *))(v37[0] + 24))(v37);
LABEL_16:
    v31 = *(_OWORD *)buf;
    v32 = v22;
    v34 = 0;
    v35 = 0;
    __p = 0;
    sub_100026DB4(&__p, v23, (uint64_t)v24, 0xAAAAAAAAAAAAAAABLL * ((v24 - (_BYTE *)v23) >> 3));
    v36 = v26;
    dispatch_async(v12, block);

    if (__p)
    {
      v34 = __p;
      operator delete(__p);
    }
    v17 = v30;
    if (v30 == v29)
    {
      v17 = v29;
      v18 = 4;
      goto LABEL_22;
    }
    if (v30)
    {
      v18 = 5;
LABEL_22:
      (*(void (**)(void))(*v17 + 8 * v18))();
    }
LABEL_23:
    v19 = v38;
    if (v38 == v37)
    {
      v19 = v37;
      v20 = 4;
    }
    else
    {
      if (!v38)
        goto LABEL_28;
      v20 = 5;
    }
    (*(void (**)(void))(*v19 + 8 * v20))();
LABEL_28:
    if (v23)
    {
      v24 = v23;
      operator delete(v23);
    }
    if (!v10)
      break;
    v7 = (__int128 *)((char *)v7 + 56);
  }
  while (v7 != v8);
  if ((_QWORD)v27 == *((_QWORD *)&v27 + 1))
    goto LABEL_33;
LABEL_35:
  *(_DWORD *)(a1 + 452) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  *(_QWORD *)buf = &v27;
  sub_100028810((void ***)buf);
  std::mutex::unlock(v5);
}

void sub_100024CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  std::mutex *v33;

  a13 = &a20;
  sub_100028810((void ***)&a13);
  std::mutex::unlock(v33);
  _Unwind_Resume(a1);
}

void sub_100024DD8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char **v7;
  char v8;
  uint8_t buf[16];
  int v10;
  void *__p;
  void *v12;
  uint64_t v13;
  int v14;
  __int128 v15;

  *(_OWORD *)buf = *(_OWORD *)(a1 + 64);
  v10 = *(_DWORD *)(a1 + 80);
  v12 = 0;
  v13 = 0;
  __p = 0;
  sub_100026DB4(&__p, *(const void **)(a1 + 88), *(_QWORD *)(a1 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 96) - *(_QWORD *)(a1 + 88)) >> 3));
  v14 = *(_DWORD *)(a1 + 112);
  v5 = 0;
  v6 = 0;
  v4 = 0;
  v7 = &v4;
  v8 = 0;
  v4 = (char *)operator new(0x38uLL);
  v5 = (uint64_t)v4;
  v6 = v4 + 56;
  v5 = sub_100029BB4((uint64_t)&v6, (__int128 *)buf, &v15, (uint64_t)v4);
  v2 = *(_QWORD *)(a1 + 56);
  if (!v2)
    sub_100027BC4();
  (*(void (**)(uint64_t, char **))(*(_QWORD *)v2 + 48))(v2, &v4);
  v7 = &v4;
  sub_100028810((void ***)&v7);
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
  v3 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,peer callback", buf, 2u);
  }
}

void sub_100024F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  sub_100028810((void ***)&a13);
  if (__p)
  {
    a19 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100024F88(uint64_t a1, uint64_t a2, int a3, const void *a4)
{
  std::mutex *v7;
  NSObject *v8;
  BOOL v9;
  _BOOL4 v10;
  uint8_t v11[16];

  v7 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  *(_BYTE *)(a1 + 53) = 0;
  if (*(_BYTE *)(a1 + 168))
    *(_BYTE *)(a1 + 168) = 0;
  v8 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "#wifi-service,onWiFiDeviceClientStartNetworkCallback", v11, 2u);
  }
  v9 = a3 == 37 || a3 == 0;
  if (v9 && a4)
  {
    if (a3 == 37 && os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CB4A8();
    if (!*(_DWORD *)(a1 + 464))
      *(_BYTE *)(a1 + 50) = 1;
    if (*(_QWORD *)(a1 + 40))
    {
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
        sub_1003CB47C();
      CFRelease(*(CFTypeRef *)(a1 + 40));
      *(_QWORD *)(a1 + 40) = 0;
    }
    *(_QWORD *)(a1 + 40) = a4;
    CFRetain(a4);
  }
  else
  {
    v10 = os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR);
    if (a3 == 37)
    {
      if (v10)
        sub_1003CB4D4();
      sub_10001F9E8(a1, 1);
      sub_10001FCD0(a1);
    }
    else if (v10)
    {
      sub_1003CB500();
    }
  }
  sub_100025128(a1);
  std::mutex::unlock(v7);
}

void sub_100025114(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100025128(uint64_t a1)
{
  NSObject *v2;
  int v3;
  int v4;
  void **v5;
  int *v6;
  unsigned int v7;
  NSObject *v8;
  int v9;
  NSObject *v10;
  void *__p[2];
  char v12;
  uint8_t buf[4];
  int v14;
  __int16 v15;
  int v16;
  __int16 v17;
  void **v18;

  v2 = (id)qword_10085F520;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(unsigned __int8 *)(a1 + 51);
    v4 = *(unsigned __int8 *)(a1 + 50);
    sub_100025794(*(_DWORD *)(a1 + 456), __p);
    v5 = v12 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)buf = 67109634;
    v14 = v3;
    v15 = 1024;
    v16 = v4;
    v17 = 2080;
    v18 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi-service,handling AWDL state update; awdlLinkIsUp: %d, followModeIsUp %d, AWDLActivityState: %s",
      buf,
      0x18u);
    if (v12 < 0)
      operator delete(__p[0]);
  }

  if (!*(_BYTE *)(a1 + 51))
  {
    if (*(_DWORD *)(a1 + 456) < 2u)
      return;
    v6 = (int *)(a1 + 456);
LABEL_14:
    v8 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#wifi-service,AWDL link is down", buf, 2u);
    }
    v9 = 5;
LABEL_17:
    *v6 = v9;
    sub_10001DB48(a1, 0.0);
    return;
  }
  v6 = (int *)(a1 + 456);
  v7 = *(_DWORD *)(a1 + 456);
  if (!*(_BYTE *)(a1 + 50) && !*(_DWORD *)(a1 + 464))
  {
    if (v7 < 2)
      return;
    goto LABEL_14;
  }
  if ((v7 & 0xFFFFFFFE) != 2 && sub_10001E538(a1))
  {
    v10 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#wifi-service,AWDL link is available", buf, 2u);
    }
    v9 = 2;
    goto LABEL_17;
  }
}

void sub_10002531C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100025334(uint64_t a1, uint64_t a2, int a3)
{
  std::mutex *v5;
  NSObject *v6;
  const void *v7;
  _DWORD v8[2];

  v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  v6 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 67109120;
    v8[1] = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientStopNetwork callback with error: %d", (uint8_t *)v8, 8u);
  }
  v7 = *(const void **)(a1 + 40);
  if (v7)
  {
    CFRelease(v7);
    *(_QWORD *)(a1 + 40) = 0;
  }
  *(_DWORD *)(a1 + 456) = 0;
  sub_10001DB48(a1, 0.0);
  std::mutex::unlock(v5);
}

void sub_100025414(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100025428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::mutex *v5;
  NSObject *v6;
  const void *v7;
  NSObject *v8;
  const void *v9;
  uint8_t v10[16];
  uint8_t buf[16];

  v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if (a3)
  {
    v6 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#wifi-service,Device attachment callback - success", buf, 2u);
    }
    *(_BYTE *)(a1 + 55) = 1;
  }
  else
  {
    v7 = (const void *)WiFiManagerClientCopyInterfaces(*(_QWORD *)(a1 + 16));
    v8 = qword_10085F520;
    if (v7)
    {
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "#wifi-service,Device attachment callback - success via interfaces copy", v10, 2u);
      }
      *(_BYTE *)(a1 + 55) = 1;
      CFRelease(v7);
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
        sub_1003CB56C();
      sub_10001F9E8(a1, 1);
      sub_10001FCD0(a1);
      v9 = *(const void **)(a1 + 16);
      if (v9)
      {
        CFRelease(v9);
        *(_QWORD *)(a1 + 16) = 0;
      }
    }
  }
  std::mutex::unlock(v5);
}

void sub_100025570(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100025584(uint64_t a1, uint64_t a2, void *a3)
{
  std::mutex *v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  int v13;
  void *v14;

  v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  v6 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
  {
    LOWORD(v13) = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#wifi-service,onWifiDeviceClientVirtualInterfaceStateChangeCallback", (uint8_t *)&v13, 2u);
  }
  v7 = a3;
  objc_storeStrong((id *)(a1 + 208), a3);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("LINK_CHANGED_IS_LINKDOWN")));
  v9 = v8;
  if (v8)
  {
    if (objc_msgSend(v8, "BOOLValue"))
      *(_BYTE *)(a1 + 51) = 0;
    else
      *(_BYTE *)(a1 + 51) = 1;
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB598();
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("AWDL_INFO")));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("AWDL_IF_MAC_ADDRESS")));
  v12 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v13 = 138412290;
    v14 = v11;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#wifi-service,self mac address awdl: %@", (uint8_t *)&v13, 0xCu);
  }
  sub_100022950(a1, v7);
  sub_100025128(a1);

  std::mutex::unlock(v5);
}

void sub_10002574C(_Unwind_Exception *a1)
{
  std::mutex *v1;
  void *v2;
  void *v3;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_100025794@<X0>(int a1@<W1>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA788[a1]);
}

void sub_1000257A8(uint64_t a1, void *a2, uint64_t a3)
{
  sub_100025584(a3, (uint64_t)a2, a2);
}

unint64_t sub_1000257B4(uint64_t a1, id **a2, int a3)
{
  std::mutex *v6;
  NSObject *v7;
  _BOOL4 v8;
  const char *v9;
  NSObject *v10;
  uint64_t v11;
  const mach_header_64 *v12;
  NSObject *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  _BOOL4 v20;
  const __CFArray *v21;
  double v22;
  NSObject *v23;
  _BOOL4 v24;
  CFIndex Count;
  const char *v26;
  NSObject *v27;
  uint32_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  NSObject *v36;
  CFIndex v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id *v43;
  id *v44;
  id *v45;
  id **v46;
  char v47;
  _BYTE buf[22];
  id v49;
  id v50;
  _BYTE v51[24];
  _BYTE *v52;
  _BYTE v53[24];
  _BYTE *v54;
  _BYTE v55[24];
  _BYTE *v56;
  id v57;
  uint64_t v58;

  v6 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_10001D778() & 1) != 0)
  {
    v7 = qword_10085F520;
    v8 = os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT);
    if (a3 == 1)
    {
      if (!v8)
        goto LABEL_11;
      *(_WORD *)buf = 0;
      v9 = "#wifi-service,WRTT, startRangingWithAuthPeer as initiator";
    }
    else
    {
      if (!v8)
        goto LABEL_11;
      *(_WORD *)buf = 0;
      v9 = "#wifi-service,WRTT, startRangingWithAuthPeer as responder";
    }
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v9, buf, 2u);
LABEL_11:
    if (*(_BYTE *)(a1 + 408))
    {
      v13 = qword_10085F520;
      if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#wifi-service,Received a start ranging request while servicing a previous request", buf, 2u);
      }
      v12 = &_mh_execute_header;
      v11 = 5;
      goto LABEL_59;
    }
    v14 = sub_100048CA4(*a2);
    v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    if (v15)
    {
      v16 = sub_100048CAC((uint64_t)*a2);
      v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      if (v17)
      {
        v18 = sub_100048CB4((uint64_t)*a2);
        v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
        v20 = v19 == 0;

        if (!v20)
        {
          *(_DWORD *)(a1 + 452) = a3;
          *(_BYTE *)(a1 + 48) = 0;
          sub_100025DB8(a1 + 240, (uint64_t)*a2);
          v21 = (const __CFArray *)sub_100022C94(a1);
          if (CFArrayGetCount(v21) < 1)
          {
            v36 = qword_10085F520;
            if (a3 == 1)
            {
              if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
                sub_1003CAFD8();
              goto LABEL_58;
            }
            if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientSetRangeable FALSE", buf, 2u);
            }
            v41 = sub_1000219E8(a1);
            if (!WiFiDeviceClientSetRangeable(v41, 0, v21)
              || !os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
            {
              goto LABEL_58;
            }
            goto LABEL_57;
          }
          v22 = (double)CFArrayGetCount(v21) * 15.0;
          v23 = (id)qword_10085F520;
          v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);
          if (a3 == 1)
          {
            if (v24)
            {
              Count = CFArrayGetCount(v21);
              *(_DWORD *)buf = 134349312;
              *(_QWORD *)&buf[4] = Count;
              *(_WORD *)&buf[12] = 2050;
              *(double *)&buf[14] = v22;
              v26 = "#wifi-service,WiFiDeviceClientRangingStartAsync, num peers, %{public}ld, timeout, %{public}lf";
              v27 = v23;
              v28 = 22;
LABEL_46:
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, v26, buf, v28);
            }
          }
          else if (v24)
          {
            v37 = CFArrayGetCount(v21);
            *(_DWORD *)buf = 134349056;
            *(_QWORD *)&buf[4] = v37;
            v26 = "#wifi-service,WiFiDeviceClientSetRangeable TRUE, num peers, %{public}ld";
            v27 = v23;
            v28 = 12;
            goto LABEL_46;
          }

          v38 = sub_1000219E8(a1);
          WiFiDeviceClientRegisterRangingReportCallback(v38, sub_100027000, a1);
          if (a3 == 1)
          {
            v39 = sub_1000219E8(a1);
            if (WiFiDeviceClientRangingStartAsync(v39, v21, sub_100026ED4, a1, v22))
            {
              v12 = &_mh_execute_header;
              v11 = 4;
              goto LABEL_59;
            }
LABEL_58:
            CFRelease(v21);
            v12 = 0;
            v11 = 0;
            goto LABEL_59;
          }
          v40 = sub_1000219E8(a1);
          if (!WiFiDeviceClientSetRangeable(v40, 1, v21)
            || !os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          {
            goto LABEL_58;
          }
LABEL_57:
          sub_1003CB02C();
          goto LABEL_58;
        }
      }
      else
      {

      }
    }
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CB5C4();
    sub_1000260D8((uint64_t)buf, (uint64_t)*a2);
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v46 = &v43;
    v47 = 0;
    v43 = (id *)operator new(0xA8uLL);
    v44 = v43;
    v45 = v43 + 21;
    v44 = (id *)sub_100027FB8((uint64_t)&v45, (uint64_t)buf, (uint64_t)&v58, (uint64_t)v43);
    sub_100021F4C((uint64_t)v44, v29, &v43);
    v46 = &v43;
    sub_100027F34((void ***)&v46);

    v30 = v56;
    if (v56 == v55)
    {
      v31 = 4;
      v30 = v55;
    }
    else
    {
      if (!v56)
        goto LABEL_30;
      v31 = 5;
    }
    (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_30:
    v32 = v54;
    if (v54 == v53)
    {
      v33 = 4;
      v32 = v53;
    }
    else
    {
      if (!v54)
        goto LABEL_35;
      v33 = 5;
    }
    (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_35:
    v34 = v52;
    if (v52 == v51)
    {
      v35 = 4;
      v34 = v51;
    }
    else
    {
      if (!v52)
      {
LABEL_40:

        v12 = &_mh_execute_header;
        v11 = 2;
        goto LABEL_59;
      }
      v35 = 5;
    }
    (*(void (**)(void))(*v34 + 8 * v35))();
    goto LABEL_40;
  }
  v10 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "#wifi-service,startRangingWithAuthPeer, ignoring range request on unsupported platform", buf, 2u);
  }
  v11 = 0;
  v12 = &_mh_execute_header;
LABEL_59:
  std::mutex::unlock(v6);
  return v11 | (unint64_t)v12;
}

void sub_100025D24(_Unwind_Exception *a1)
{
  std::mutex *v1;
  void *v2;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100025DB8(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 168))
  {
    sub_100022BFC(a1, a2);
  }
  else
  {
    sub_1000260D8(a1, a2);
    *(_BYTE *)(a1 + 168) = 1;
  }
  return a1;
}

void sub_100025DFC(uint64_t a1)
{
  std::mutex *v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  uint8_t v7[16];
  uint8_t buf[16];

  v2 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  v3 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,stopRangingWithAuthPeer", buf, 2u);
  }
  if ((sub_10001D778() & 1) != 0)
  {
    if (*(_BYTE *)(a1 + 408))
    {
      v4 = sub_100022C94(a1);
      v5 = sub_1000219E8(a1);
      if (WiFiDeviceClientSetRangeable(v5, 0, v4))
      {
        if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
          sub_1003CB02C();
      }
    }
    sub_100025F4C(a1 + 240);
    *(_DWORD *)(a1 + 452) = 0;
    *(_BYTE *)(a1 + 48) = 1;
  }
  else
  {
    v6 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#wifi-service,ignoring ranging stop on unsupported platform", v7, 2u);
    }
  }
  std::mutex::unlock(v2);
}

void sub_100025F30(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100025F4C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (*(_BYTE *)(a1 + 168))
  {

    v2 = *(_QWORD **)(a1 + 136);
    if (v2 == (_QWORD *)(a1 + 112))
    {
      v3 = 4;
      v2 = (_QWORD *)(a1 + 112);
    }
    else
    {
      if (!v2)
        goto LABEL_7;
      v3 = 5;
    }
    (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_7:
    v4 = *(_QWORD **)(a1 + 104);
    if (v4 == (_QWORD *)(a1 + 80))
    {
      v5 = 4;
      v4 = (_QWORD *)(a1 + 80);
    }
    else
    {
      if (!v4)
        goto LABEL_12;
      v5 = 5;
    }
    (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_12:
    v6 = *(_QWORD **)(a1 + 72);
    if (v6 == (_QWORD *)(a1 + 48))
    {
      v7 = 4;
      v6 = (_QWORD *)(a1 + 48);
    }
    else
    {
      if (!v6)
      {
LABEL_17:

        *(_BYTE *)(a1 + 168) = 0;
        return;
      }
      v7 = 5;
    }
    (*(void (**)(void))(*v6 + 8 * v7))();
    goto LABEL_17;
  }
}

_QWORD *sub_10002602C(_QWORD *__dst, __int128 *a2, uint64_t a3)
{
  __int128 v5;

  if (*((char *)a2 + 23) < 0)
  {
    sub_100004678(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    __dst[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }
  sub_100027674((uint64_t)(__dst + 3), a3);
  __dst[7] = *(id *)(a3 + 32);
  return __dst;
}

void sub_100026094(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_1000260B0()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

uint64_t sub_1000260D8(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(id *)a2;
  *(_QWORD *)(a1 + 8) = *(id *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(id *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(id *)(a2 + 40);
  sub_100027674(a1 + 48, a2 + 48);
  sub_100027674(a1 + 80, a2 + 80);
  sub_100027674(a1 + 112, a2 + 112);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  v4 = *(id *)(a2 + 152);
  v5 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v4;
  *(_QWORD *)(a1 + 160) = v5;
  return a1;
}

void sub_100026180(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v5 = *(_QWORD **)(v1 + 104);
  if (v5 == v3)
  {
    v6 = 4;
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
    v3 = *(_QWORD **)(v1 + 104);
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v6))(v3);
LABEL_6:
  v7 = *(_QWORD **)(v1 + 72);
  if (v7 == v2)
  {
    v8 = 4;
    v7 = v2;
  }
  else
  {
    if (!v7)
      goto LABEL_11;
    v8 = 5;
  }
  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_11:

  _Unwind_Resume(a1);
}

uint64_t sub_100026218(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (*(_BYTE *)(a1 + 168))
  {

    v2 = *(_QWORD **)(a1 + 136);
    if (v2 == (_QWORD *)(a1 + 112))
    {
      v3 = 4;
      v2 = (_QWORD *)(a1 + 112);
    }
    else
    {
      if (!v2)
        goto LABEL_7;
      v3 = 5;
    }
    (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_7:
    v4 = *(_QWORD **)(a1 + 104);
    if (v4 == (_QWORD *)(a1 + 80))
    {
      v5 = 4;
      v4 = (_QWORD *)(a1 + 80);
    }
    else
    {
      if (!v4)
        goto LABEL_12;
      v5 = 5;
    }
    (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_12:
    v6 = *(_QWORD **)(a1 + 72);
    if (v6 == (_QWORD *)(a1 + 48))
    {
      v7 = 4;
      v6 = (_QWORD *)(a1 + 48);
    }
    else
    {
      if (!v6)
      {
LABEL_17:

        return a1;
      }
      v7 = 5;
    }
    (*(void (**)(void))(*v6 + 8 * v7))();
    goto LABEL_17;
  }
  return a1;
}

void sub_1000262F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_100025334(a4, a2, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB5F0();
  }
}

void sub_100026348(uint64_t a1, const __CFArray *a2, int a3, uint64_t a4)
{
  NSObject *v7;
  CFIndex Count;
  uint64_t v9;
  uint64_t v10;
  _DWORD v11[2];
  __int16 v12;
  CFIndex v13;

  v7 = (id)qword_10085F520;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    if (a2)
      Count = CFArrayGetCount(a2);
    else
      Count = -1;
    v11[0] = 67109376;
    v11[1] = a3;
    v12 = 2050;
    v13 = Count;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingCallback got called: error=%i results=%{public}ld", (uint8_t *)v11, 0x12u);
  }

  if (a4)
  {
    sub_10002418C(a4, v9, a2, v10, 1);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB61C();
  }
}

void sub_10002645C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100026474(uint64_t a1, const __CFArray *a2, uint64_t a3)
{
  NSObject *v5;
  CFIndex Count;
  uint64_t v7;
  uint64_t v8;
  int v9;
  CFIndex v10;

  v5 = (id)qword_10085F520;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if (a2)
      Count = CFArrayGetCount(a2);
    else
      Count = -1;
    v9 = 134349056;
    v10 = Count;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingReportCallback got called: results=%{public}ld", (uint8_t *)&v9, 0xCu);
  }

  if (a3)
  {
    sub_10002418C(a3, v7, a2, v8, 0);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB648();
  }
}

void sub_100026570(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100026588(uint64_t a1, const __CFArray *a2, uint64_t a3)
{
  NSObject *v5;
  CFIndex Count;
  uint64_t v7;
  uint64_t v8;
  int v9;
  CFIndex v10;

  v5 = (id)qword_10085F520;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if (a2)
      Count = CFArrayGetCount(a2);
    else
      Count = -1;
    v9 = 134349056;
    v10 = Count;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingReportCallback got called: results=%{public}ld", (uint8_t *)&v9, 0xCu);
  }

  if (a3)
  {
    sub_10002418C(a3, v7, a2, v8, 0);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB648();
  }
}

void sub_100026684(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10002669C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_100025334(a4, a2, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB5F0();
  }
}

void sub_1000266EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_100025428(a3, a2, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB674();
  }
}

void sub_10002673C(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_100024F88(a5, a2, a2, a3);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB6A0();
  }
}

_QWORD *sub_100026790(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD v6[3];
  _QWORD *v7;

  sub_100027674((uint64_t)v6, a2);
  sub_100026958(v6, a1);
  v3 = v7;
  if (v7 == v6)
  {
    v4 = 4;
    v3 = v6;
    goto LABEL_5;
  }
  if (v7)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

_QWORD *sub_100026828(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD v6[3];
  _QWORD *v7;

  sub_100027674((uint64_t)v6, a2);
  sub_100026ACC(v6, a1);
  v3 = v7;
  if (v7 == v6)
  {
    v4 = 4;
    v3 = v6;
    goto LABEL_5;
  }
  if (v7)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

_QWORD *sub_1000268C0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD v6[3];
  _QWORD *v7;

  sub_100027674((uint64_t)v6, a2);
  sub_100026C40(v6, a1);
  v3 = v7;
  if (v7 == v6)
  {
    v4 = 4;
    v3 = v6;
    goto LABEL_5;
  }
  if (v7)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

_QWORD *sub_100026958(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[3];

  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_100026AC0(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_1000131D8(a1);
}

_QWORD *sub_100026ACC(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[3];

  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_100026C34(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_1000131D8(a1);
}

_QWORD *sub_100026C40(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[3];

  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_100026DA8(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_1000131D8(a1);
}

_QWORD *sub_100026DB4(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_100026E2C(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_100026E10(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100026E2C(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    sub_100026E7C();
  result = (char *)sub_100026E90((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

void sub_100026E7C()
{
  sub_10000BD80("vector");
}

void *sub_100026E90(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    sub_1000260B0();
  return operator new(24 * a2);
}

void sub_100026ED4(uint64_t a1, const __CFArray *a2, int a3, uint64_t a4)
{
  NSObject *v7;
  CFIndex Count;
  uint64_t v9;
  _DWORD v10[2];
  __int16 v11;
  CFIndex v12;

  v7 = (id)qword_10085F520;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    if (a2)
      Count = CFArrayGetCount(a2);
    else
      Count = -1;
    v10[0] = 67109376;
    v10[1] = a3;
    v11 = 2050;
    v12 = Count;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingCallback got called: error=%i results=%{public}ld", (uint8_t *)v10, 0x12u);
  }

  if (a4)
  {
    sub_10002495C(a4, v9, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB61C();
  }
}

void sub_100026FE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100027000(uint64_t a1, const __CFArray *a2, uint64_t a3)
{
  NSObject *v5;
  CFIndex Count;
  uint64_t v7;
  int v8;
  CFIndex v9;

  v5 = (id)qword_10085F520;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if (a2)
      Count = CFArrayGetCount(a2);
    else
      Count = -1;
    v8 = 134349056;
    v9 = Count;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingReportCallback got called: results=%{public}ld", (uint8_t *)&v8, 0xCu);
  }

  if (a3)
  {
    sub_10002495C(a3, v7, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    sub_1003CB648();
  }
}

void sub_1000270FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t *sub_100027114(uint64_t **a1, const void **a2, __int128 *a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t **v7;
  uint64_t *v9[3];
  uint64_t v10;

  v5 = (uint64_t **)sub_1000271A4((uint64_t)a1, &v10, a2);
  v6 = *v5;
  if (!*v5)
  {
    v7 = v5;
    sub_100027240((uint64_t)a1, a3, (uint64_t)v9);
    sub_1000272A8(a1, v10, v7, v9[0]);
    v6 = v9[0];
    v9[0] = 0;
    sub_1000275C4((uint64_t)v9, 0);
  }
  return v6;
}

_QWORD *sub_1000271A4(uint64_t a1, _QWORD *a2, const void **a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  const void **v9;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v7 = a1 + 16;
    do
    {
      while (1)
      {
        v8 = (_QWORD *)v4;
        v9 = (const void **)(v4 + 32);
        if (!sub_1000272FC(v7, a3, (const void **)(v4 + 32)))
          break;
        v4 = *v8;
        v5 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (!sub_1000272FC(v7, v9, a3))
        break;
      v5 = v8 + 1;
      v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    v8 = (_QWORD *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

_QWORD *sub_100027240@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *result;

  v5 = a1 + 8;
  v6 = operator new(0x60uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = sub_100027364(v6 + 4, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100027290(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1000275C4(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_1000272A8(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  uint64_t *v5;
  uint64_t *result;

  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  result = sub_10002742C(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

BOOL sub_1000272FC(uint64_t a1, const void **a2, const void **a3)
{
  int v3;
  int v4;
  size_t v5;
  const void *v6;
  size_t v7;
  const void *v8;
  size_t v9;
  int v10;

  v3 = *((char *)a3 + 23);
  v4 = *((char *)a2 + 23);
  if (v4 >= 0)
    v5 = *((unsigned __int8 *)a2 + 23);
  else
    v5 = (size_t)a2[1];
  if (v4 >= 0)
    v6 = a2;
  else
    v6 = *a2;
  if (v3 >= 0)
    v7 = *((unsigned __int8 *)a3 + 23);
  else
    v7 = (size_t)a3[1];
  if (v3 >= 0)
    v8 = a3;
  else
    v8 = *a3;
  if (v7 >= v5)
    v9 = v5;
  else
    v9 = v7;
  v10 = memcmp(v6, v8, v9);
  if (v10)
    return v10 < 0;
  else
    return v5 < v7;
}

_QWORD *sub_100027364(_QWORD *__dst, __int128 *a2)
{
  __int128 v4;
  uint64_t v5;

  if (*((char *)a2 + 23) < 0)
  {
    sub_100004678(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    __dst[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  sub_1000273C8((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  v5 = *((_QWORD *)a2 + 7);
  *((_QWORD *)a2 + 7) = 0;
  __dst[7] = v5;
  return __dst;
}

uint64_t sub_1000273C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(_QWORD *)(a1 + 24) = v4;
  }
  else
  {
    v3 = (_QWORD *)(a1 + 24);
  }
  *v3 = 0;
  return a1;
}

uint64_t *sub_10002742C(uint64_t *result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      v2 = (uint64_t *)a2[2];
      if (*((_BYTE *)v2 + 24))
        return result;
      v3 = (uint64_t *)v2[2];
      v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            v9 = (uint64_t **)a2[2];
          }
          else
          {
            v9 = (uint64_t **)v2[1];
            v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = v9;
            *v9 = v2;
            v2[2] = (uint64_t)v9;
            v3 = v9[2];
            v2 = (uint64_t *)*v3;
          }
          *((_BYTE *)v9 + 24) = 1;
          *((_BYTE *)v3 + 24) = 0;
          v13 = v2[1];
          *v3 = v13;
          if (v13)
            *(_QWORD *)(v13 + 16) = v3;
          v2[2] = v3[2];
          *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          v11 = a2[1];
          *v2 = v11;
          if (v11)
          {
            *(_QWORD *)(v11 + 16) = v2;
            v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((_BYTE *)a2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v2 = (uint64_t *)v3[1];
        v12 = *v2;
        v3[1] = *v2;
        if (v12)
          *(_QWORD *)(v12 + 16) = v3;
        v2[2] = v3[2];
        *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
        *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((_BYTE *)v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void sub_1000275C4(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_100027608((uint64_t)v2 + 32);
    operator delete(v2);
  }
}

void sub_100027608(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (_QWORD *)(a1 + 24);

  v3 = *(_QWORD **)(a1 + 48);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

uint64_t sub_100027674(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1);
    }
    else
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1000276D8(uint64_t **a1, const void **a2)
{
  uint64_t *v3;
  uint64_t *v4;

  v3 = (uint64_t *)sub_100004DF0((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3)
    return 0;
  v4 = v3;
  sub_100027730(a1, v3);
  sub_100027608((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

uint64_t *sub_100027730(uint64_t **a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  BOOL v5;
  uint64_t *v6;

  v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      v3 = v2;
      v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    v4 = a2;
    do
    {
      v3 = (uint64_t *)v4[2];
      v5 = *v3 == (_QWORD)v4;
      v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2)
    *a1 = v3;
  v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  sub_1000277A0(v6, a2);
  return v3;
}

uint64_t *sub_1000277A0(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  int v5;
  uint64_t **v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *a2;
  v3 = a2;
  if (*a2)
  {
    v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      v3 = a2;
      goto LABEL_7;
    }
    do
    {
      v3 = v4;
      v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  v2 = v3[1];
  if (v2)
  {
LABEL_7:
    v5 = 0;
    *(_QWORD *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  v5 = 1;
LABEL_8:
  v6 = (uint64_t **)v3[2];
  v7 = *v6;
  if (*v6 == v3)
  {
    *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      v7 = 0;
      result = (uint64_t *)v2;
    }
    else
    {
      v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    v9 = a2[2];
    v3[2] = v9;
    *(_QWORD *)(v9 + 8 * (*(_QWORD *)a2[2] != (_QWORD)a2)) = v3;
    v11 = *a2;
    v10 = a2[1];
    *(_QWORD *)(v11 + 16) = v3;
    *v3 = v11;
    v3[1] = v10;
    if (v10)
      *(_QWORD *)(v10 + 16) = v3;
    *((_BYTE *)v3 + 24) = *((_BYTE *)a2 + 24);
    if (result == a2)
      result = v3;
  }
  if (!v8 || !result)
    return result;
  if (!v5)
  {
    *(_BYTE *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    v12 = v7[2];
    if (*(uint64_t **)v12 == v7)
      break;
    if (!*((_BYTE *)v7 + 24))
    {
      *((_BYTE *)v7 + 24) = 1;
      *(_BYTE *)(v12 + 24) = 0;
      v13 = *(uint64_t **)(v12 + 8);
      v14 = *v13;
      *(_QWORD *)(v12 + 8) = *v13;
      if (v14)
        *(_QWORD *)(v14 + 16) = v12;
      v13[2] = *(_QWORD *)(v12 + 16);
      *(_QWORD *)(*(_QWORD *)(v12 + 16) + 8 * (**(_QWORD **)(v12 + 16) != v12)) = v13;
      *v13 = v12;
      *(_QWORD *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7)
        result = v7;
      v7 = *(uint64_t **)(*v7 + 8);
    }
    v15 = (_QWORD *)*v7;
    if (*v7 && !*((_BYTE *)v15 + 24))
    {
      v16 = (uint64_t *)v7[1];
      if (!v16)
        goto LABEL_56;
LABEL_55:
      if (*((_BYTE *)v16 + 24))
      {
LABEL_56:
        *((_BYTE *)v15 + 24) = 1;
        *((_BYTE *)v7 + 24) = 0;
        v22 = v15[1];
        *v7 = v22;
        if (v22)
          *(_QWORD *)(v22 + 16) = v7;
        v15[2] = v7[2];
        *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        v16 = v7;
      }
      else
      {
        v15 = v7;
      }
      v23 = v15[2];
      *((_BYTE *)v15 + 24) = *(_BYTE *)(v23 + 24);
      *(_BYTE *)(v23 + 24) = 1;
      *((_BYTE *)v16 + 24) = 1;
      v24 = *(uint64_t **)(v23 + 8);
      v25 = *v24;
      *(_QWORD *)(v23 + 8) = *v24;
      if (v25)
        *(_QWORD *)(v25 + 16) = v23;
      v24[2] = *(_QWORD *)(v23 + 16);
      *(_QWORD *)(*(_QWORD *)(v23 + 16) + 8 * (**(_QWORD **)(v23 + 16) != v23)) = v24;
      *v24 = v23;
      goto LABEL_72;
    }
    v16 = (uint64_t *)v7[1];
    if (v16 && !*((_BYTE *)v16 + 24))
      goto LABEL_55;
    *((_BYTE *)v7 + 24) = 0;
    v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      v17 = result;
LABEL_53:
      *((_BYTE *)v17 + 24) = 1;
      return result;
    }
    if (!*((_BYTE *)v17 + 24))
      goto LABEL_53;
LABEL_49:
    v7 = *(uint64_t **)(v17[2] + 8 * (*(_QWORD *)v17[2] == (_QWORD)v17));
  }
  if (!*((_BYTE *)v7 + 24))
  {
    *((_BYTE *)v7 + 24) = 1;
    *(_BYTE *)(v12 + 24) = 0;
    v18 = v7[1];
    *(_QWORD *)v12 = v18;
    if (v18)
      *(_QWORD *)(v18 + 16) = v12;
    v7[2] = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(*(_QWORD *)(v12 + 16) + 8 * (**(_QWORD **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(_QWORD *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12)
      result = v7;
    v7 = *(uint64_t **)v12;
  }
  v19 = (_QWORD *)*v7;
  if (*v7 && !*((_BYTE *)v19 + 24))
    goto LABEL_68;
  v20 = (uint64_t *)v7[1];
  if (!v20 || *((_BYTE *)v20 + 24))
  {
    *((_BYTE *)v7 + 24) = 0;
    v17 = (uint64_t *)v7[2];
    if (*((_BYTE *)v17 + 24))
      v21 = v17 == result;
    else
      v21 = 1;
    if (v21)
      goto LABEL_53;
    goto LABEL_49;
  }
  if (v19 && !*((_BYTE *)v19 + 24))
  {
LABEL_68:
    v20 = v7;
  }
  else
  {
    *((_BYTE *)v20 + 24) = 1;
    *((_BYTE *)v7 + 24) = 0;
    v26 = *v20;
    v7[1] = *v20;
    if (v26)
      *(_QWORD *)(v26 + 16) = v7;
    v20[2] = v7[2];
    *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v20;
    *v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    v19 = v7;
  }
  v23 = v20[2];
  *((_BYTE *)v20 + 24) = *(_BYTE *)(v23 + 24);
  *(_BYTE *)(v23 + 24) = 1;
  *((_BYTE *)v19 + 24) = 1;
  v24 = *(uint64_t **)v23;
  v27 = *(_QWORD *)(*(_QWORD *)v23 + 8);
  *(_QWORD *)v23 = v27;
  if (v27)
    *(_QWORD *)(v27 + 16) = v23;
  v24[2] = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(*(_QWORD *)(v23 + 16) + 8 * (**(_QWORD **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(_QWORD *)(v23 + 16) = v24;
  return result;
}

void sub_100027B24(uint64_t a1, char *a2)
{
  void **v4;

  if (a2)
  {
    sub_100027B24(a1, *(_QWORD *)a2);
    sub_100027B24(a1, *((_QWORD *)a2 + 1));
    v4 = (void **)(a2 + 40);
    sub_100027F34(&v4);
    operator delete(a2);
  }
}

void sub_100027B7C(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_100027B7C(a1, *a2);
    sub_100027B7C(a1, a2[1]);
    sub_100027608((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_100027BC4()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = &off_1007FA770;
}

void sub_100027BFC(std::exception *a1)
{
  std::exception::~exception(a1);
  operator delete();
}

_QWORD *sub_100027C20(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_100027CA4(result, a4);
    result = (_QWORD *)sub_100027D40((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_100027C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_100027F34(&a9);
  _Unwind_Resume(a1);
}

char *sub_100027CA4(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x186186186186187)
    sub_100026E7C();
  result = (char *)sub_100027CF8((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[168 * v4];
  return result;
}

void *sub_100027CF8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x186186186186187)
    sub_1000260B0();
  return operator new(168 * a2);
}

uint64_t sub_100027D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v8[3];
  char v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_1000260D8(v4, v6);
      v6 += 168;
      v4 = v11 + 168;
      v11 += 168;
    }
    while (v6 != a3);
  }
  v9 = 1;
  sub_100027DE0((uint64_t)v8);
  return v4;
}

void sub_100027DCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100027DE0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100027DE0(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_100027E14((uint64_t *)a1);
  return a1;
}

void sub_100027E14(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 168;
      sub_100027E64(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_100027E64(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v3 = *(_QWORD **)(a2 + 136);
  if (v3 == (_QWORD *)(a2 + 112))
  {
    v4 = 4;
    v3 = (_QWORD *)(a2 + 112);
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(_QWORD **)(a2 + 104);
  if (v5 == (_QWORD *)(a2 + 80))
  {
    v6 = 4;
    v5 = (_QWORD *)(a2 + 80);
  }
  else
  {
    if (!v5)
      goto LABEL_11;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_11:
  v7 = *(_QWORD **)(a2 + 72);
  if (v7 == (_QWORD *)(a2 + 48))
  {
    v8 = 4;
    v7 = (_QWORD *)(a2 + 48);
    goto LABEL_15;
  }
  if (v7)
  {
    v8 = 5;
LABEL_15:
    (*(void (**)(void))(*v7 + 8 * v8))();
  }

}

void sub_100027F34(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 168;
        sub_100027E64((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_100027FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v8[3];
  char v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_1000260D8(v4, v6);
      v6 += 168;
      v4 = v11 + 168;
      v11 += 168;
    }
    while (v6 != a3);
  }
  v9 = 1;
  sub_100027DE0((uint64_t)v8);
  return v4;
}

void sub_100028044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100027DE0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t **sub_100028058(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t **v6;
  unint64_t v7;
  uint64_t **v8;
  unint64_t v9;
  char *v10;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *a2;
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v5;
        v9 = v5[4];
        if (v7 >= v9)
          break;
        v5 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (v9 >= v7)
        break;
      v5 = v8[1];
      if (!v5)
      {
        v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v8 = a1 + 1;
LABEL_10:
    v10 = (char *)operator new(0x40uLL);
    *((_QWORD *)v10 + 4) = *(_QWORD *)a3;
    *(_OWORD *)(v10 + 40) = *(_OWORD *)(a3 + 8);
    *((_QWORD *)v10 + 7) = *(_QWORD *)(a3 + 24);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)(a3 + 24) = 0;
    sub_1000272A8(a1, (uint64_t)v8, v6, (uint64_t *)v10);
    return (uint64_t **)v10;
  }
  return v8;
}

uint64_t sub_100028128(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xCF3CF3CF3CF3CF3DLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0x186186186186186)
    sub_100026E7C();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xCF3CF3CF3CF3CF3DLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0xC30C30C30C30C3)
    v9 = 0x186186186186186;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_100027CF8(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[168 * v4];
  v16 = &v10[168 * v9];
  sub_1000260D8((uint64_t)v14, a2);
  v15 = v14 + 168;
  sub_100028244(a1, &v13);
  v11 = a1[1];
  sub_100028598(&v13);
  return v11;
}

void sub_100028230(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100028598((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100028244(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1000282B8((uint64_t)(a1 + 2), a1[1], (__int128 *)a1[1], *a1, (__int128 *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1000282B8(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 *v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 = (__int128 *)((char *)v9 - 168);
      sub_10002836C(a1, v7 - 168, v9);
      v7 = *((_QWORD *)&v16 + 1) - 168;
      *((_QWORD *)&v16 + 1) -= 168;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_100028514((uint64_t)v13);
  return v11;
}

uint64_t sub_10002836C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v5;
  __int128 v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v5 = *a3;
  *a3 = 0u;
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = a3[1];
  v6 = a3[2];
  a3[2] = 0u;
  *(_OWORD *)(a2 + 32) = v6;
  sub_1000283E8(a2 + 48, (uint64_t)(a3 + 3));
  sub_10002844C(a2 + 80, (uint64_t)(a3 + 5));
  result = sub_1000284B0(a2 + 112, (uint64_t)(a3 + 7));
  *(_DWORD *)(a2 + 144) = *((_DWORD *)a3 + 36);
  v8 = *((_QWORD *)a3 + 19);
  v9 = *((_QWORD *)a3 + 20);
  *((_QWORD *)a3 + 19) = 0;
  *(_QWORD *)(a2 + 152) = v8;
  *(_QWORD *)(a2 + 160) = v9;
  return result;
}

uint64_t sub_1000283E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(_QWORD *)(a1 + 24) = v4;
  }
  else
  {
    v3 = (_QWORD *)(a1 + 24);
  }
  *v3 = 0;
  return a1;
}

uint64_t sub_10002844C(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(_QWORD *)(a1 + 24) = v4;
  }
  else
  {
    v3 = (_QWORD *)(a1 + 24);
  }
  *v3 = 0;
  return a1;
}

uint64_t sub_1000284B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(_QWORD *)(a1 + 24) = v4;
  }
  else
  {
    v3 = (_QWORD *)(a1 + 24);
  }
  *v3 = 0;
  return a1;
}

uint64_t sub_100028514(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_100028548((uint64_t *)a1);
  return a1;
}

void sub_100028548(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_100027E64(v3, v1);
      v1 += 168;
    }
    while (v1 != v2);
  }
}

void **sub_100028598(void **a1)
{
  sub_1000285C8(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_1000285C8(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 168;
    sub_100027E64(v4, i - 168);
  }
}

uint64_t *sub_10002860C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;

  v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_100028668(a3, v4);
      v4 += 21;
      a3 += 168;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

uint64_t sub_100028668(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;

  v4 = *a2;
  *a2 = 0;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v4;

  v6 = a2[1];
  a2[1] = 0;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;

  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  v8 = a2[4];
  a2[4] = 0;
  v9 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;

  v10 = a2[5];
  a2[5] = 0;
  v11 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;

  sub_100028738((_QWORD *)(a1 + 48), (uint64_t)(a2 + 6));
  sub_100028738((_QWORD *)(a1 + 80), (uint64_t)(a2 + 10));
  sub_100028738((_QWORD *)(a1 + 112), (uint64_t)(a2 + 14));
  *(_DWORD *)(a1 + 144) = *((_DWORD *)a2 + 36);
  v12 = a2[19];
  a2[19] = 0;
  v13 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v12;

  *(_QWORD *)(a1 + 160) = a2[20];
  return a1;
}

_QWORD *sub_100028738(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (_QWORD *)a1[3];
  a1[3] = 0;
  if (v4 == a1)
  {
    v5 = 4;
    v4 = a1;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    if (v6 == a2)
    {
      a1[3] = a1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1);
    }
    else
    {
      a1[3] = v6;
      *(_QWORD *)(a2 + 24) = 0;
    }
  }
  else
  {
    a1[3] = 0;
  }
  return a1;
}

uint64_t *sub_1000287C8(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  void **v5;

  v3 = sub_100027730(a1, (uint64_t *)a2);
  v5 = (void **)(a2 + 40);
  sub_100027F34(&v5);
  operator delete((void *)a2);
  return v3;
}

void sub_100028810(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_100028850((uint64_t *)v2);
    operator delete(**a1);
  }
}

void sub_100028850(uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;
  void *v4;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 56)
  {
    v4 = *(void **)(i - 32);
    if (v4)
    {
      *(_QWORD *)(i - 24) = v4;
      operator delete(v4);
    }
  }
  a1[1] = v2;
}

uint64_t sub_10002889C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD v16[5];

  v3 = *a1;
  v4 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x492492492492492)
    sub_100026E7C();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x249249249249249)
    v9 = 0x492492492492492;
  else
    v9 = v5;
  v16[4] = a1 + 2;
  v10 = (char *)sub_100028A48(v7, v9);
  v11 = &v10[56 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[56 * v12];
  v13 = *(_DWORD *)(a2 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a2;
  *((_DWORD *)v11 + 4) = v13;
  *((_QWORD *)v11 + 4) = 0;
  *((_QWORD *)v11 + 5) = 0;
  *((_QWORD *)v11 + 3) = 0;
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(a2 + 24);
  *((_QWORD *)v11 + 5) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *((_DWORD *)v11 + 12) = *(_DWORD *)(a2 + 48);
  v16[2] = v11 + 56;
  sub_1000289D4(a1, v16);
  v14 = a1[1];
  sub_100028BC8((uint64_t)v16);
  return v14;
}

void sub_1000289C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100028BC8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000289D4(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_100028A90((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_100028A48(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x492492492492493)
    sub_1000260B0();
  return operator new(56 * a2);
}

uint64_t sub_100028A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  __int128 v13;
  __int128 v14;

  v7 = a7;
  *(_QWORD *)&v14 = a6;
  *((_QWORD *)&v14 + 1) = a7;
  v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    v9 = a6;
  }
  else
  {
    do
    {
      v8 = *(_OWORD *)(a3 - 56);
      *(_DWORD *)(v7 - 40) = *(_DWORD *)(a3 - 40);
      *(_OWORD *)(v7 - 56) = v8;
      *(_QWORD *)(v7 - 24) = 0;
      *(_QWORD *)(v7 - 16) = 0;
      *(_QWORD *)(v7 - 32) = 0;
      *(_OWORD *)(v7 - 32) = *(_OWORD *)(a3 - 32);
      *(_QWORD *)(v7 - 16) = *(_QWORD *)(a3 - 16);
      *(_QWORD *)(a3 - 24) = 0;
      *(_QWORD *)(a3 - 16) = 0;
      *(_QWORD *)(a3 - 32) = 0;
      *(_DWORD *)(v7 - 8) = *(_DWORD *)(a3 - 8);
      v7 = *((_QWORD *)&v14 + 1) - 56;
      *((_QWORD *)&v14 + 1) -= 56;
      a3 -= 56;
    }
    while (a3 != a5);
    v9 = v14;
  }
  v12 = 1;
  sub_100028B50((uint64_t)v11);
  return v9;
}

uint64_t sub_100028B50(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_100028B84(a1);
  return a1;
}

void sub_100028B84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    v3 = *(void **)(v1 + 24);
    if (v3)
    {
      *(_QWORD *)(v1 + 32) = v3;
      operator delete(v3);
    }
    v1 += 56;
  }
}

uint64_t sub_100028BC8(uint64_t a1)
{
  sub_100028BFC(a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_100028BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;

  v2 = *(_QWORD *)(a1 + 16);
  while (v2 != a2)
  {
    *(_QWORD *)(a1 + 16) = v2 - 56;
    v5 = *(void **)(v2 - 32);
    if (v5)
    {
      *(_QWORD *)(v2 - 24) = v5;
      operator delete(v5);
      v2 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v2 -= 56;
    }
  }
}

void sub_100028C54(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __int128 v27;
  unint64_t v28;
  unint64_t v29;
  __int128 *v30;
  __int128 v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  __int128 *v43;
  __int128 v44;
  __int128 v45;
  __int128 *v46;
  __int128 *v47;
  __int128 *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  _OWORD *v56;
  BOOL v58;
  uint64_t v59;
  _OWORD *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  int64_t v67;
  int64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  __int128 v96;
  unint64_t v98;
  unint64_t v99;
  _OWORD *v100;
  unint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

LABEL_1:
  v8 = a1;
  while (2)
  {
    a1 = v8;
    v9 = a2 - v8;
    v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2 - v8) >> 3);
    switch(v10)
    {
      case 0:
      case 1:
        return;
      case 2:
        if (*(_QWORD *)(a2 - 8) < *(_QWORD *)(v8 + 16))
        {
          v117 = *(_QWORD *)(v8 + 16);
          v108 = *(_OWORD *)v8;
          v45 = *(_OWORD *)(a2 - 24);
          *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 - 8);
          *(_OWORD *)v8 = v45;
          *(_QWORD *)(a2 - 8) = v117;
          *(_OWORD *)(a2 - 24) = v108;
        }
        return;
      case 3:
        sub_100029558((__int128 *)v8, (__int128 *)(v8 + 24), (__int128 *)(a2 - 24));
        return;
      case 4:
        sub_1000298EC(v8, v8 + 24, v8 + 48, a2 - 24);
        return;
      case 5:
        v46 = (__int128 *)(v8 + 24);
        v47 = (__int128 *)(v8 + 48);
        v48 = (__int128 *)(v8 + 72);
        sub_1000298EC(v8, v8 + 24, v8 + 48, v8 + 72);
        if (*(_QWORD *)(a2 - 8) < *(_QWORD *)(v8 + 88))
        {
          v49 = *v48;
          v50 = *(_QWORD *)(v8 + 88);
          v51 = *(_QWORD *)(a2 - 8);
          *v48 = *(_OWORD *)(a2 - 24);
          *(_QWORD *)(v8 + 88) = v51;
          *(_QWORD *)(a2 - 8) = v50;
          *(_OWORD *)(a2 - 24) = v49;
          if (*(_QWORD *)(v8 + 88) < *(_QWORD *)(v8 + 64))
          {
            v52 = *(_QWORD *)(v8 + 64);
            v53 = *v47;
            *v47 = *v48;
            *(_QWORD *)(v8 + 64) = *(_QWORD *)(v8 + 88);
            *v48 = v53;
            *(_QWORD *)(v8 + 88) = v52;
            if (*(_QWORD *)(v8 + 64) < *(_QWORD *)(v8 + 40))
            {
              v54 = *(_QWORD *)(v8 + 40);
              v55 = *v46;
              *v46 = *v47;
              *(_QWORD *)(v8 + 40) = *(_QWORD *)(v8 + 64);
              *v47 = v55;
              *(_QWORD *)(v8 + 64) = v54;
              if (*(_QWORD *)(v8 + 40) < *(_QWORD *)(v8 + 16))
              {
                v118 = *(_QWORD *)(v8 + 16);
                v109 = *(_OWORD *)v8;
                *(_OWORD *)v8 = *v46;
                *(_QWORD *)(v8 + 16) = *(_QWORD *)(v8 + 40);
                *v46 = v109;
                *(_QWORD *)(v8 + 40) = v118;
              }
            }
          }
        }
        return;
      default:
        if (v9 <= 575)
        {
          v56 = (_OWORD *)(v8 + 24);
          v58 = v8 == a2 || v56 == (_OWORD *)a2;
          if ((a4 & 1) != 0)
          {
            if (!v58)
            {
              v59 = 0;
              v60 = (_OWORD *)v8;
              do
              {
                v61 = *((_QWORD *)v60 + 5);
                v62 = *((_QWORD *)v60 + 2);
                v60 = v56;
                if (v61 < v62)
                {
                  v110 = *v56;
                  v63 = v59;
                  while (1)
                  {
                    v64 = v8 + v63;
                    *(_OWORD *)(v64 + 24) = *(_OWORD *)(v8 + v63);
                    *(_QWORD *)(v64 + 40) = *(_QWORD *)(v8 + v63 + 16);
                    if (!v63)
                      break;
                    v63 -= 24;
                    if (v61 >= *(_QWORD *)(v64 - 8))
                    {
                      v65 = v8 + v63 + 24;
                      goto LABEL_78;
                    }
                  }
                  v65 = v8;
LABEL_78:
                  *(_OWORD *)v65 = v110;
                  *(_QWORD *)(v65 + 16) = v61;
                }
                v56 = (_OWORD *)((char *)v60 + 24);
                v59 += 24;
              }
              while ((_OWORD *)((char *)v60 + 24) != (_OWORD *)a2);
            }
          }
          else if (!v58)
          {
            do
            {
              v98 = *(_QWORD *)(a1 + 40);
              v99 = *(_QWORD *)(a1 + 16);
              a1 = (uint64_t)v56;
              if (v98 < v99)
              {
                v113 = *v56;
                v100 = v56;
                do
                {
                  *v100 = *(_OWORD *)((char *)v100 - 24);
                  *((_QWORD *)v100 + 2) = *((_QWORD *)v100 - 1);
                  v101 = *((_QWORD *)v100 - 4);
                  v100 = (_OWORD *)((char *)v100 - 24);
                }
                while (v98 < v101);
                *v100 = v113;
                *((_QWORD *)v100 + 2) = v98;
              }
              v56 = (_OWORD *)(a1 + 24);
            }
            while (a1 + 24 != a2);
          }
          return;
        }
        if (!a3)
        {
          if (v8 != a2)
          {
            v66 = (unint64_t)(v10 - 2) >> 1;
            v67 = v66;
            do
            {
              v68 = v67;
              if (v66 >= v67)
              {
                v69 = (2 * v67) | 1;
                v70 = v8 + 24 * v69;
                if (2 * v68 + 2 < v10)
                {
                  v71 = *(_QWORD *)(v70 + 16);
                  v72 = *(_QWORD *)(v70 + 40);
                  v70 += 24 * (v71 < v72);
                  if (v71 < v72)
                    v69 = 2 * v68 + 2;
                }
                v73 = v8 + 24 * v68;
                v74 = *(_QWORD *)(v73 + 16);
                if (*(_QWORD *)(v70 + 16) >= v74)
                {
                  v111 = *(_OWORD *)v73;
                  do
                  {
                    v75 = v73;
                    v73 = v70;
                    v76 = *(_OWORD *)v70;
                    *(_QWORD *)(v75 + 16) = *(_QWORD *)(v70 + 16);
                    *(_OWORD *)v75 = v76;
                    if (v66 < v69)
                      break;
                    v77 = (2 * v69) | 1;
                    v70 = v8 + 24 * v77;
                    v78 = 2 * v69 + 2;
                    if (v78 < v10)
                    {
                      v79 = *(_QWORD *)(v70 + 16);
                      v80 = *(_QWORD *)(v70 + 40);
                      v70 += 24 * (v79 < v80);
                      if (v79 < v80)
                        v77 = v78;
                    }
                    v69 = v77;
                  }
                  while (*(_QWORD *)(v70 + 16) >= v74);
                  *(_OWORD *)v73 = v111;
                  *(_QWORD *)(v73 + 16) = v74;
                }
              }
              v67 = v68 - 1;
            }
            while (v68);
            v81 = v9 / 0x18uLL;
            do
            {
              v82 = 0;
              v119 = *(_QWORD *)(v8 + 16);
              v112 = *(_OWORD *)v8;
              v83 = v8;
              do
              {
                v84 = v83 + 24 * v82 + 24;
                v85 = (2 * v82) | 1;
                v86 = 2 * v82 + 2;
                if (v86 < v81)
                {
                  v87 = *(_QWORD *)(v84 + 16);
                  v88 = *(_QWORD *)(v84 + 40);
                  v84 += 24 * (v87 < v88);
                  if (v87 < v88)
                    v85 = v86;
                }
                v89 = *(_OWORD *)v84;
                *(_QWORD *)(v83 + 16) = *(_QWORD *)(v84 + 16);
                *(_OWORD *)v83 = v89;
                v83 = v84;
                v82 = v85;
              }
              while (v85 <= (uint64_t)((unint64_t)(v81 - 2) >> 1));
              a2 -= 24;
              if (v84 == a2)
              {
                *(_QWORD *)(v84 + 16) = v119;
                *(_OWORD *)v84 = v112;
              }
              else
              {
                v90 = *(_OWORD *)a2;
                *(_QWORD *)(v84 + 16) = *(_QWORD *)(a2 + 16);
                *(_OWORD *)v84 = v90;
                *(_QWORD *)(a2 + 16) = v119;
                *(_OWORD *)a2 = v112;
                v91 = v84 - v8 + 24;
                if (v91 >= 25)
                {
                  v92 = (v91 / 0x18uLL - 2) >> 1;
                  v93 = v8 + 24 * v92;
                  v94 = *(_QWORD *)(v84 + 16);
                  if (*(_QWORD *)(v93 + 16) < v94)
                  {
                    v104 = *(_OWORD *)v84;
                    do
                    {
                      v95 = v84;
                      v84 = v93;
                      v96 = *(_OWORD *)v93;
                      *(_QWORD *)(v95 + 16) = *(_QWORD *)(v93 + 16);
                      *(_OWORD *)v95 = v96;
                      if (!v92)
                        break;
                      v92 = (v92 - 1) >> 1;
                      v93 = v8 + 24 * v92;
                    }
                    while (*(_QWORD *)(v93 + 16) < v94);
                    *(_OWORD *)v84 = v104;
                    *(_QWORD *)(v84 + 16) = v94;
                  }
                }
              }
            }
            while (v81-- > 2);
          }
          return;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = v8 + 24 * ((unint64_t)v10 >> 1);
        if ((unint64_t)v9 < 0xC01)
        {
          sub_100029558((__int128 *)(a1 + 24 * v11), (__int128 *)a1, (__int128 *)(a2 - 24));
        }
        else
        {
          sub_100029558((__int128 *)a1, (__int128 *)(a1 + 24 * v11), (__int128 *)(a2 - 24));
          v13 = 3 * v11;
          v14 = (__int128 *)(a1 + 24 * v11 - 24);
          sub_100029558((__int128 *)(a1 + 24), v14, (__int128 *)(a2 - 48));
          v15 = (__int128 *)(a1 + 24 + 8 * v13);
          sub_100029558((__int128 *)(a1 + 48), v15, (__int128 *)(a2 - 72));
          sub_100029558(v14, (__int128 *)v12, v15);
          v114 = *(_QWORD *)(a1 + 16);
          v105 = *(_OWORD *)a1;
          v16 = *(_QWORD *)(v12 + 16);
          *(_OWORD *)a1 = *(_OWORD *)v12;
          *(_QWORD *)(a1 + 16) = v16;
          *(_QWORD *)(v12 + 16) = v114;
          *(_OWORD *)v12 = v105;
        }
        --a3;
        if ((a4 & 1) == 0)
        {
          v17 = *(_QWORD *)(a1 + 16);
          if (*(_QWORD *)(a1 - 8) < v17)
            goto LABEL_11;
          v103 = *(_OWORD *)a1;
          if (v17 >= *(_QWORD *)(a2 - 8))
          {
            v35 = a1 + 24;
            do
            {
              v8 = v35;
              if (v35 >= a2)
                break;
              v36 = *(_QWORD *)(v35 + 16);
              v35 += 24;
            }
            while (v17 >= v36);
          }
          else
          {
            v33 = a1;
            do
            {
              v8 = v33 + 24;
              v34 = *(_QWORD *)(v33 + 40);
              v33 += 24;
            }
            while (v17 >= v34);
          }
          v37 = a2;
          if (v8 < a2)
          {
            v38 = a2;
            do
            {
              v37 = v38 - 24;
              v39 = *(_QWORD *)(v38 - 8);
              v38 -= 24;
            }
            while (v17 < v39);
          }
          while (v8 < v37)
          {
            v116 = *(_QWORD *)(v8 + 16);
            v107 = *(_OWORD *)v8;
            v40 = *(_OWORD *)v37;
            *(_QWORD *)(v8 + 16) = *(_QWORD *)(v37 + 16);
            *(_OWORD *)v8 = v40;
            *(_QWORD *)(v37 + 16) = v116;
            *(_OWORD *)v37 = v107;
            do
            {
              v41 = *(_QWORD *)(v8 + 40);
              v8 += 24;
            }
            while (v17 >= v41);
            do
            {
              v42 = *(_QWORD *)(v37 - 8);
              v37 -= 24;
            }
            while (v17 < v42);
          }
          v43 = (__int128 *)(v8 - 24);
          if (v8 - 24 != a1)
          {
            v44 = *v43;
            *(_QWORD *)(a1 + 16) = *(_QWORD *)(v8 - 8);
            *(_OWORD *)a1 = v44;
          }
          a4 = 0;
          *v43 = v103;
          *(_QWORD *)(v8 - 8) = v17;
          continue;
        }
        v17 = *(_QWORD *)(a1 + 16);
LABEL_11:
        v18 = 0;
        v102 = *(_OWORD *)a1;
        do
        {
          v19 = *(_QWORD *)(a1 + v18 + 40);
          v18 += 24;
        }
        while (v19 < v17);
        v20 = a1 + v18;
        v21 = a2;
        if (v18 == 24)
        {
          v24 = a2;
          while (v20 < v24)
          {
            v22 = v24 - 24;
            v25 = *(_QWORD *)(v24 - 8);
            v24 -= 24;
            if (v25 < v17)
              goto LABEL_21;
          }
          v22 = v24;
        }
        else
        {
          do
          {
            v22 = v21 - 24;
            v23 = *(_QWORD *)(v21 - 8);
            v21 -= 24;
          }
          while (v23 >= v17);
        }
LABEL_21:
        v8 = v20;
        if (v20 < v22)
        {
          v26 = v22;
          do
          {
            v115 = *(_QWORD *)(v8 + 16);
            v106 = *(_OWORD *)v8;
            v27 = *(_OWORD *)v26;
            *(_QWORD *)(v8 + 16) = *(_QWORD *)(v26 + 16);
            *(_OWORD *)v8 = v27;
            *(_QWORD *)(v26 + 16) = v115;
            *(_OWORD *)v26 = v106;
            do
            {
              v28 = *(_QWORD *)(v8 + 40);
              v8 += 24;
            }
            while (v28 < v17);
            do
            {
              v29 = *(_QWORD *)(v26 - 8);
              v26 -= 24;
            }
            while (v29 >= v17);
          }
          while (v8 < v26);
        }
        v30 = (__int128 *)(v8 - 24);
        if (v8 - 24 != a1)
        {
          v31 = *v30;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(v8 - 8);
          *(_OWORD *)a1 = v31;
        }
        *v30 = v102;
        *(_QWORD *)(v8 - 8) = v17;
        if (v20 < v22)
        {
LABEL_32:
          sub_100028C54(a1, v8 - 24, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v32 = sub_100029648(a1, v8 - 24);
        if (!sub_100029648(v8, a2))
        {
          if (v32)
            continue;
          goto LABEL_32;
        }
        a2 = v8 - 24;
        if (!v32)
          goto LABEL_1;
        return;
    }
  }
}

  v9 = (__int128 *)((char *)a2 - 24);
  v10 = (__int128 *)a1;
LABEL_2:
  v11 = 1 - a4;
  while (2)
  {
    a1 = (uint64_t)v10;
    v12 = v11;
    v13 = (char *)a2 - (char *)v10;
    v14 = 0xAAAAAAAAAAAAAAABLL * (((char *)a2 - (char *)v10) >> 3);
    switch(v14)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        v30 = *a3;
        v31 = *((_QWORD *)a2 - 1);
        v41 = *(__int128 *)((char *)a2 - 24);
        v42 = v31;
        v32 = *((_QWORD *)v10 + 2);
        v39 = *v10;
        v40 = v32;
        if (v30(&v41, &v39))
        {
          v33 = *v10;
          v44 = *((_QWORD *)v10 + 2);
          v43 = v33;
          v34 = *v9;
          *((_QWORD *)v10 + 2) = *((_QWORD *)a2 - 1);
          *v10 = v34;
          *v9 = v43;
          *((_QWORD *)a2 - 1) = v44;
        }
        return;
      case 3uLL:
        sub_10016FEF0(v10, (__int128 *)((char *)v10 + 24), (__int128 *)((char *)a2 - 24), a3);
        return;
      case 4uLL:
        sub_100170770((uint64_t)v10, (uint64_t)v10 + 24, (uint64_t)(v10 + 3), (__int128 *)((char *)a2 - 24), a3);
        return;
      case 5uLL:
        sub_1001708B8((uint64_t)v10, (uint64_t)v10 + 24, (uint64_t)(v10 + 3), (uint64_t)v10 + 72, (__int128 *)((char *)a2 - 24), a3);
        return;
      default:
        if (v13 <= 575)
        {
          if ((a5 & 1) != 0)
            sub_10016FCC8((uint64_t)v10, (uint64_t)a2, a3);
          else
            sub_10016FDF0((uint64_t)v10, (uint64_t)a2, a3);
          return;
        }
        if (v12 != 1)
        {
          v15 = v14 >> 1;
          v16 = (__int128 *)((char *)v10 + 24 * (v14 >> 1));
          if ((unint64_t)v13 < 0xC01)
          {
            sub_10016FEF0((__int128 *)((char *)v10 + 24 * v15), v10, (__int128 *)((char *)a2 - 24), a3);
            if ((a5 & 1) != 0)
              goto LABEL_11;
          }
          else
          {
            sub_10016FEF0(v10, (__int128 *)((char *)v10 + 24 * v15), (__int128 *)((char *)a2 - 24), a3);
            v17 = 3 * v15;
            v18 = (__int128 *)((char *)v10 + 24 * v15 - 24);
            sub_10016FEF0((__int128 *)((char *)v10 + 24), v18, a2 - 3, a3);
            v19 = v10 + 3;
            v20 = (__int128 *)((char *)v10 + 8 * v17 + 24);
            sub_10016FEF0(v19, v20, (__int128 *)((char *)a2 - 72), a3);
            sub_10016FEF0(v18, v16, v20, a3);
            v21 = *(_OWORD *)a1;
            v44 = *(_QWORD *)(a1 + 16);
            v43 = v21;
            v22 = *v16;
            *(_QWORD *)(a1 + 16) = *((_QWORD *)v16 + 2);
            *(_OWORD *)a1 = v22;
            v23 = v43;
            *((_QWORD *)v16 + 2) = v44;
            *v16 = v23;
            if ((a5 & 1) != 0)
              goto LABEL_11;
          }
          v24 = *a3;
          v25 = *(_QWORD *)(a1 - 8);
          v37 = *(_OWORD *)(a1 - 24);
          v38 = v25;
          v26 = *(_QWORD *)(a1 + 16);
          v35 = *(_OWORD *)a1;
          v36 = v26;
          if ((v24(&v37, &v35) & 1) == 0)
          {
            v10 = sub_1001700E4((__int128 *)a1, a2, a3);
            goto LABEL_16;
          }
LABEL_11:
          v27 = sub_100170310((__int128 *)a1, (unint64_t)a2, a3);
          if ((v28 & 1) == 0)
            goto LABEL_14;
          v29 = sub_100170524(a1, v27, a3);
          v10 = (__int128 *)(v27 + 24);
          if (!sub_100170524(v27 + 24, (uint64_t)a2, a3))
          {
            v11 = v12 + 1;
            if (v29)
              continue;
LABEL_14:
            sub_10016F978(a1, v27, a3, -v12, a5 & 1);
            v10 = (__int128 *)(v27 + 24);
LABEL_16:
            a5 = 0;
            a4 = -v12;
            goto LABEL_2;
          }
          a4 = -v12;
          a2 = (__int128 *)v27;
          if (v29)
            return;
          goto LABEL_1;
        }
        if (v10 != a2)
          sub_100170A60((__n128 *)v10, (__n128 *)a2, (__n128 *)a2, (unsigned int (**)(__n128 *, __int128 *))a3);
        return;
    }
  }
}

  v9 = a2 - 24;
  v10 = (const void **)a1;
LABEL_2:
  v11 = 1 - a4;
  while (2)
  {
    a1 = (uint64_t)v10;
    v12 = v11;
    v13 = a2 - (char *)v10;
    v14 = 0xAAAAAAAAAAAAAAABLL * ((a2 - (char *)v10) >> 3);
    switch(v14)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        if (sub_10017F5DC(a3, (_QWORD *)a2 - 3, v10))
        {
          v29 = v10[2];
          v27 = *(_OWORD *)v10;
          v25 = *(_OWORD *)v9;
          v10[2] = (const void *)*((_QWORD *)a2 - 1);
          *(_OWORD *)v10 = v25;
          *(_OWORD *)v9 = v27;
          *((_QWORD *)a2 - 1) = v29;
        }
        return;
      case 3uLL:
        sub_10017F868(v10, v10 + 3, (_QWORD *)a2 - 3, a3);
        return;
      case 4uLL:
        sub_10017FEFC((uint64_t)v10, v10 + 3, v10 + 6, (_QWORD *)a2 - 3, a3);
        return;
      case 5uLL:
        sub_10017FFE4((uint64_t)v10, v10 + 3, v10 + 6, v10 + 9, (_QWORD *)a2 - 3, a3);
        return;
      default:
        if (v13 <= 575)
        {
          if ((a5 & 1) != 0)
            sub_10017F644((uint64_t)v10, a2, a3);
          else
            sub_10017F764(v10, a2, a3);
          return;
        }
        if (v12 != 1)
        {
          v15 = v14 >> 1;
          v16 = &v10[3 * (v14 >> 1)];
          if ((unint64_t)v13 < 0xC01)
          {
            sub_10017F868(&v10[3 * v15], v10, (_QWORD *)a2 - 3, a3);
            if ((a5 & 1) != 0)
              goto LABEL_11;
          }
          else
          {
            sub_10017F868(v10, &v10[3 * v15], (_QWORD *)a2 - 3, a3);
            v17 = 3 * v15;
            v18 = &v10[3 * v15 - 3];
            sub_10017F868(v10 + 3, v18, (_QWORD *)a2 - 6, a3);
            v19 = v10 + 6;
            v20 = &v10[v17 + 3];
            sub_10017F868(v19, v20, (_QWORD *)a2 - 9, a3);
            sub_10017F868(v18, v16, v20, a3);
            v28 = *(const void **)(a1 + 16);
            v26 = *(_OWORD *)a1;
            v21 = *(_OWORD *)v16;
            *(_QWORD *)(a1 + 16) = v16[2];
            *(_OWORD *)a1 = v21;
            v16[2] = v28;
            *(_OWORD *)v16 = v26;
            if ((a5 & 1) != 0)
              goto LABEL_11;
          }
          if (!sub_10017F5DC(a3, (_QWORD *)(a1 - 24), (const void **)a1))
          {
            v10 = sub_10017F9B0((const void **)a1, (unint64_t)a2, a3);
            goto LABEL_16;
          }
LABEL_11:
          v22 = (const void **)sub_10017FB40((__int128 *)a1, a2, a3);
          if ((v23 & 1) == 0)
            goto LABEL_14;
          v24 = sub_10017FCCC(a1, v22, a3);
          v10 = v22 + 3;
          if (!sub_10017FCCC((uint64_t)(v22 + 3), (const void **)a2, a3))
          {
            v11 = v12 + 1;
            if (v24)
              continue;
LABEL_14:
            sub_10017F238(a1, v22, a3, -v12, a5 & 1);
            v10 = v22 + 3;
LABEL_16:
            a5 = 0;
            a4 = -v12;
            goto LABEL_2;
          }
          a4 = -v12;
          a2 = (char *)v22;
          if (v24)
            return;
          goto LABEL_1;
        }
        if (v10 != (const void **)a2)
          sub_100180104((uint64_t)v10, a2, a2, a3);
        return;
    }
  }
}

  v57 = (char *)(a2 - 616);
  v6 = a1;
  while (2)
  {
    a1 = v6;
    v7 = a2 - v6;
    v8 = 0x4FCACE213F2B3885 * ((uint64_t)(a2 - v6) >> 3);
    switch(v8)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        if (*(double *)(a2 - 16) < *(double *)(v6 + 600))
        {
          v40 = (char *)v6;
          v41 = (char *)(a2 - 616);
          goto LABEL_55;
        }
        return;
      case 3uLL:
        sub_10031B39C(v6, v6 + 616, (uint64_t)v57);
        return;
      case 4uLL:
        sub_10031B9A8(v6, v6 + 616, v6 + 1232, (uint64_t)v57);
        return;
      case 5uLL:
        sub_10031B9A8(v6, v6 + 616, v6 + 1232, v6 + 1848);
        if (*(double *)(a2 - 16) < *(double *)(v6 + 2448))
        {
          sub_10031B7F4((char *)(v6 + 1848), v57);
          if (*(double *)(v6 + 2448) < *(double *)(v6 + 1832))
          {
            sub_10031B7F4((char *)(v6 + 1232), (char *)(v6 + 1848));
            if (*(double *)(v6 + 1832) < *(double *)(v6 + 1216))
            {
              sub_10031B7F4((char *)(v6 + 616), (char *)(v6 + 1232));
              if (*(double *)(v6 + 1216) < *(double *)(v6 + 600))
              {
                v40 = (char *)v6;
                v41 = (char *)(v6 + 616);
LABEL_55:
                sub_10031B7F4(v40, v41);
              }
            }
          }
        }
        return;
      default:
        if (v7 <= 14783)
        {
          if ((a4 & 1) != 0)
          {
            if (v6 != a2)
            {
              v42 = (_BYTE *)(v6 + 616);
              if (v6 + 616 != a2)
              {
                v43 = 0;
                v44 = v6;
                do
                {
                  v45 = v42;
                  if (*(double *)(v44 + 1216) < *(double *)(v44 + 600))
                  {
                    v65 = v42;
                    v69 = *v42;
                    sub_100318C30((uint64_t)v71, v44 + 624);
                    sub_10031895C((uint64_t)v72, v44 + 696);
                    sub_10031895C((uint64_t)v73, v44 + 760);
                    sub_100318E60((uint64_t)v74, v44 + 824);
                    sub_100318AC8((uint64_t)v75, v44 + 992);
                    sub_100318AC8((uint64_t)v76, v44 + 1104);
                    v77 = *(double *)(v44 + 1216);
                    v78 = *(_DWORD *)(v44 + 1224);
                    v46 = v43;
                    while (1)
                    {
                      v47 = v6 + v46;
                      *(_BYTE *)(v6 + v46 + 616) = *(_BYTE *)(v6 + v46);
                      v48 = v6 + v46 + 8;
                      sub_10030EC4C(v6 + v46 + 624, v48);
                      sub_10030EC4C(v47 + 696, v47 + 80);
                      sub_10030EC4C(v47 + 760, v47 + 144);
                      sub_10030EC4C(v47 + 824, v47 + 208);
                      sub_10030EC4C(v47 + 992, v47 + 376);
                      sub_10030EC4C(v47 + 1104, v47 + 488);
                      *(_QWORD *)(v47 + 1216) = *(_QWORD *)(v47 + 600);
                      *(_DWORD *)(v47 + 1224) = *(_DWORD *)(v47 + 608);
                      if (!v46)
                        break;
                      v46 -= 616;
                      if (v77 >= *(double *)(v47 - 16))
                      {
                        v49 = (_BYTE *)(v6 + v46 + 616);
                        goto LABEL_73;
                      }
                    }
                    v49 = (_BYTE *)v6;
LABEL_73:
                    *v49 = v69;
                    sub_10030EC4C(v48, (uint64_t)v71);
                    sub_10030EC4C(v47 + 80, (uint64_t)v72);
                    sub_10030EC4C(v47 + 144, (uint64_t)v73);
                    sub_10030EC4C(v47 + 208, (uint64_t)v74);
                    sub_10030EC4C(v47 + 376, (uint64_t)v75);
                    sub_10030EC4C(v47 + 488, (uint64_t)v76);
                    v50 = v78;
                    *(double *)(v47 + 600) = v77;
                    *(_DWORD *)(v47 + 608) = v50;
                    v45 = v65;
                  }
                  v42 = v45 + 616;
                  v43 += 616;
                  v44 = (unint64_t)v45;
                }
                while (v45 + 616 != (_BYTE *)a2);
              }
            }
          }
          else if (v6 != a2)
          {
            v51 = (_BYTE *)(v6 + 616);
            if (v6 + 616 != a2)
            {
              v52 = v6 - 16;
              do
              {
                v53 = v51;
                if (*(double *)(a1 + 1216) < *(double *)(a1 + 600))
                {
                  v70 = *v51;
                  sub_100318C30((uint64_t)v71, a1 + 624);
                  sub_10031895C((uint64_t)v72, a1 + 696);
                  sub_10031895C((uint64_t)v73, a1 + 760);
                  sub_100318E60((uint64_t)v74, a1 + 824);
                  sub_100318AC8((uint64_t)v75, a1 + 992);
                  sub_100318AC8((uint64_t)v76, a1 + 1104);
                  v77 = *(double *)(a1 + 1216);
                  v78 = *(_DWORD *)(a1 + 1224);
                  v54 = v52;
                  do
                  {
                    *(_BYTE *)(v54 + 632) = *(_BYTE *)(v54 + 16);
                    sub_10030EC4C(v54 + 640, v54 + 24);
                    sub_10030EC4C(v54 + 712, v54 + 96);
                    sub_10030EC4C(v54 + 776, v54 + 160);
                    sub_10030EC4C(v54 + 840, v54 + 224);
                    sub_10030EC4C(v54 + 1008, v54 + 392);
                    sub_10030EC4C(v54 + 1120, v54 + 504);
                    *(_DWORD *)(v54 + 1240) = *(_DWORD *)(v54 + 624);
                    *(_QWORD *)(v54 + 1232) = *(_QWORD *)(v54 + 616);
                    v55 = *(double *)v54;
                    v54 -= 616;
                  }
                  while (v77 < v55);
                  *(_BYTE *)(v54 + 632) = v70;
                  sub_10030EC4C(v54 + 640, (uint64_t)v71);
                  sub_10030EC4C(v54 + 712, (uint64_t)v72);
                  sub_10030EC4C(v54 + 776, (uint64_t)v73);
                  sub_10030EC4C(v54 + 840, (uint64_t)v74);
                  sub_10030EC4C(v54 + 1008, (uint64_t)v75);
                  sub_10030EC4C(v54 + 1120, (uint64_t)v76);
                  v56 = v78;
                  *(double *)(v54 + 1232) = v77;
                  *(_DWORD *)(v54 + 1240) = v56;
                }
                v51 = v53 + 616;
                v52 += 616;
                a1 = (uint64_t)v53;
              }
              while (v53 + 616 != (_BYTE *)a2);
            }
          }
          return;
        }
        if (!a3)
        {
          sub_10031AD70(v6, a2, a2);
          return;
        }
        v9 = v8 >> 1;
        v10 = (char *)(v6 + 616 * (v8 >> 1));
        if ((unint64_t)v7 < 0x13401)
        {
          sub_10031B39C((uint64_t)v10, v6, (uint64_t)v57);
        }
        else
        {
          sub_10031B39C(v6, (uint64_t)v10, (uint64_t)v57);
          v11 = 616 * v9;
          sub_10031B39C(v6 + 616, v11 + v6 - 616, a2 - 1232);
          sub_10031B39C(v6 + 1232, v6 + 616 + v11, a2 - 1848);
          sub_10031B39C(v11 + v6 - 616, (uint64_t)v10, v6 + 616 + v11);
          sub_10031B7F4((char *)v6, v10);
        }
        --a3;
        if ((a4 & 1) == 0 && *(double *)(v6 - 16) >= *(double *)(v6 + 600))
        {
          v68 = *(_BYTE *)v6;
          sub_100318C30((uint64_t)v71, v6 + 8);
          sub_10031895C((uint64_t)v72, v6 + 80);
          v64 = v6 + 144;
          sub_10031895C((uint64_t)v73, v6 + 144);
          v63 = v6 + 208;
          sub_100318E60((uint64_t)v74, v6 + 208);
          v61 = v6 + 376;
          sub_100318AC8((uint64_t)v75, v6 + 376);
          v59 = v6 + 488;
          sub_100318AC8((uint64_t)v76, v6 + 488);
          v28 = *(double *)(v6 + 600);
          v78 = *(_DWORD *)(v6 + 608);
          v77 = v28;
          if (v28 >= *(double *)(a2 - 16))
          {
            v31 = v6 + 616;
            do
            {
              v6 = v31;
              if (v31 >= a2)
                break;
              v31 += 616;
            }
            while (v77 >= *(double *)(v6 + 600));
          }
          else
          {
            v29 = v6;
            do
            {
              v6 = v29 + 616;
              v30 = *(double *)(v29 + 1216);
              v29 += 616;
            }
            while (v77 >= v30);
          }
          v32 = (char *)a2;
          if (v6 < a2)
          {
            v33 = a2;
            do
            {
              v32 = (char *)(v33 - 616);
              v34 = *(double *)(v33 - 16);
              v33 -= 616;
            }
            while (v77 < v34);
          }
          while (v6 < (unint64_t)v32)
          {
            sub_10031B7F4((char *)v6, v32);
            do
            {
              v35 = *(double *)(v6 + 1216);
              v6 += 616;
            }
            while (v77 >= v35);
            do
            {
              v36 = *((double *)v32 - 2);
              v32 -= 616;
            }
            while (v77 < v36);
          }
          v37 = (char *)(v6 - 616);
          if (v6 - 616 != a1)
          {
            *(_BYTE *)a1 = *v37;
            sub_10030EC4C(a1 + 8, v6 - 608);
            sub_10030EC4C(a1 + 80, v6 - 536);
            sub_10030EC4C(v64, v6 - 472);
            sub_10030EC4C(v63, v6 - 408);
            sub_10030EC4C(v61, v6 - 240);
            sub_10030EC4C(v59, v6 - 128);
            v38 = *(_DWORD *)(v6 - 8);
            *(_QWORD *)(a1 + 600) = *(_QWORD *)(v6 - 16);
            *(_DWORD *)(a1 + 608) = v38;
          }
          *v37 = v68;
          sub_10030EC4C(v6 - 608, (uint64_t)v71);
          sub_10030EC4C(v6 - 536, (uint64_t)v72);
          sub_10030EC4C(v6 - 472, (uint64_t)v73);
          sub_10030EC4C(v6 - 408, (uint64_t)v74);
          sub_10030EC4C(v6 - 240, (uint64_t)v75);
          sub_10030EC4C(v6 - 128, (uint64_t)v76);
          a4 = 0;
          v39 = v78;
          *(double *)(v6 - 16) = v77;
          *(_DWORD *)(v6 - 8) = v39;
          continue;
        }
        v67 = *(_BYTE *)v6;
        sub_100318C30((uint64_t)v71, v6 + 8);
        sub_10031895C((uint64_t)v72, v6 + 80);
        sub_10031895C((uint64_t)v73, v6 + 144);
        sub_100318E60((uint64_t)v74, v6 + 208);
        sub_100318AC8((uint64_t)v75, v6 + 376);
        sub_100318AC8((uint64_t)v76, v6 + 488);
        v12 = 0;
        v13 = *(double *)(v6 + 600);
        v78 = *(_DWORD *)(v6 + 608);
        v77 = v13;
        do
        {
          v14 = *(double *)(v6 + v12 + 1216);
          v12 += 616;
        }
        while (v14 < v77);
        v15 = v6 + v12;
        v16 = a2;
        if (v12 == 616)
        {
          v19 = a2;
          while (v15 < v19)
          {
            v17 = (char *)(v19 - 616);
            v20 = *(double *)(v19 - 16);
            v19 -= 616;
            if (v20 < v77)
              goto LABEL_20;
          }
          v17 = (char *)v19;
        }
        else
        {
          do
          {
            v17 = (char *)(v16 - 616);
            v18 = *(double *)(v16 - 16);
            v16 -= 616;
          }
          while (v18 >= v77);
        }
LABEL_20:
        v60 = v6 + 600;
        v62 = v6 + 488;
        v6 = v15;
        if (v15 < (unint64_t)v17)
        {
          v21 = v17;
          do
          {
            sub_10031B7F4((char *)v6, v21);
            do
            {
              v22 = *(double *)(v6 + 1216);
              v6 += 616;
            }
            while (v22 < v77);
            do
            {
              v23 = *((double *)v21 - 2);
              v21 -= 616;
            }
            while (v23 >= v77);
          }
          while (v6 < (unint64_t)v21);
        }
        v24 = (char *)(v6 - 616);
        if (v6 - 616 != a1)
        {
          *(_BYTE *)a1 = *v24;
          sub_10030EC4C(a1 + 8, v6 - 608);
          sub_10030EC4C(a1 + 80, v6 - 536);
          sub_10030EC4C(a1 + 144, v6 - 472);
          sub_10030EC4C(a1 + 208, v6 - 408);
          sub_10030EC4C(a1 + 376, v6 - 240);
          sub_10030EC4C(v62, v6 - 128);
          v25 = *(_DWORD *)(v6 - 8);
          *(_QWORD *)v60 = *(_QWORD *)(v6 - 16);
          *(_DWORD *)(v60 + 8) = v25;
        }
        *v24 = v67;
        sub_10030EC4C(v6 - 608, (uint64_t)v71);
        sub_10030EC4C(v6 - 536, (uint64_t)v72);
        sub_10030EC4C(v6 - 472, (uint64_t)v73);
        sub_10030EC4C(v6 - 408, (uint64_t)v74);
        sub_10030EC4C(v6 - 240, (uint64_t)v75);
        sub_10030EC4C(v6 - 128, (uint64_t)v76);
        v26 = v78;
        *(double *)(v6 - 16) = v77;
        *(_DWORD *)(v6 - 8) = v26;
        if (v15 < (unint64_t)v17)
        {
LABEL_31:
          sub_10031A284(a1, v6 - 616, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v27 = sub_10031B448(a1, v6 - 616);
        if (!sub_10031B448(v6, a2))
        {
          if (v27)
            continue;
          goto LABEL_31;
        }
        a2 = v6 - 616;
        if (!v27)
          goto LABEL_1;
        return;
    }
  }
}

  v112 = a2 - 376;
  v110 = (uint64_t)(a2 - 1128);
  v111 = (uint64_t)(a2 - 752);
  v6 = a1;
  v119 = (uint64_t)a2;
  while (2)
  {
    v7 = v6;
    v8 = (uint64_t)&a2[-v6];
    v9 = 0x51B3BEA3677D46CFLL * ((uint64_t)&a2[-v6] >> 3);
    a1 = v7;
    switch(v9)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        if (*((double *)a2 - 2) < *(double *)(v7 + 360))
        {
          v48 = (char *)v7;
          v49 = v112;
          goto LABEL_55;
        }
        return;
      case 3uLL:
        sub_100331408(v7, v7 + 376, (uint64_t)v112);
        return;
      case 4uLL:
        sub_100331948(v7, v7 + 376, v7 + 752, (uint64_t)v112);
        return;
      case 5uLL:
        v50 = (char *)(v7 + 752);
        v51 = (char *)(v7 + 1128);
        sub_100331948(v7, v7 + 376, v7 + 752, v7 + 1128);
        if (*((double *)a2 - 2) < *(double *)(v7 + 1488))
        {
          sub_1003317F4(v51, v112);
          if (*(double *)(v7 + 1488) < *(double *)(v7 + 1112))
          {
            sub_1003317F4(v50, v51);
            if (*(double *)(v7 + 1112) < *(double *)(v7 + 736))
            {
              sub_1003317F4((char *)(v7 + 376), v50);
              if (*(double *)(v7 + 736) < *(double *)(v7 + 360))
              {
                v48 = (char *)v7;
                v49 = (char *)(v7 + 376);
LABEL_55:
                sub_1003317F4(v48, v49);
              }
            }
          }
        }
        return;
      default:
        if (v8 <= 9023)
        {
          if ((a4 & 1) != 0)
          {
            if ((char *)v7 != a2)
            {
              v52 = (char *)(v7 + 376);
              if ((char *)(v7 + 376) != a2)
              {
                v53 = 0;
                v54 = v7;
                do
                {
                  v55 = v52;
                  if (*(double *)(v54 + 736) < *(double *)(v54 + 360))
                  {
                    v128 = *v52;
                    sub_10031895C((uint64_t)v129, v54 + 384);
                    sub_10031895C((uint64_t)v130, v54 + 448);
                    sub_100318AC8((uint64_t)v131, v54 + 512);
                    sub_100318AC8((uint64_t)v132, v54 + 624);
                    v133 = *(double *)(v54 + 736);
                    v134 = *(_DWORD *)(v54 + 744);
                    v56 = v53;
                    while (1)
                    {
                      v57 = v7 + v56;
                      *(_BYTE *)(v7 + v56 + 376) = *(_BYTE *)(v7 + v56);
                      sub_10030EC4C(v7 + v56 + 384, v7 + v56 + 8);
                      sub_10030EC4C(v57 + 448, v57 + 72);
                      sub_10030EC4C(v57 + 512, v57 + 136);
                      sub_10030EC4C(v57 + 624, v57 + 248);
                      *(_QWORD *)(v57 + 736) = *(_QWORD *)(v57 + 360);
                      *(_DWORD *)(v57 + 744) = *(_DWORD *)(v57 + 368);
                      if (!v56)
                        break;
                      v56 -= 376;
                      if (v133 >= *(double *)(v57 - 16))
                      {
                        v58 = (_BYTE *)(v7 + v56 + 376);
                        goto LABEL_73;
                      }
                    }
                    v58 = (_BYTE *)v7;
LABEL_73:
                    a2 = (char *)v119;
                    *v58 = v128;
                    sub_10030EC4C(v57 + 8, (uint64_t)v129);
                    sub_10030EC4C(v57 + 72, (uint64_t)v130);
                    sub_10030EC4C(v57 + 136, (uint64_t)v131);
                    sub_10030EC4C(v57 + 248, (uint64_t)v132);
                    v59 = v134;
                    *(double *)(v57 + 360) = v133;
                    *(_DWORD *)(v57 + 368) = v59;
                  }
                  v52 = v55 + 376;
                  v53 += 376;
                  v54 = (uint64_t)v55;
                }
                while (v55 + 376 != a2);
              }
            }
          }
          else if ((char *)v7 != a2)
          {
            v99 = (char *)(v7 + 376);
            if ((char *)(v7 + 376) != a2)
            {
              v100 = v7 - 16;
              do
              {
                v101 = v99;
                if (*(double *)(a1 + 736) < *(double *)(a1 + 360))
                {
                  v128 = *v99;
                  sub_10031895C((uint64_t)v129, a1 + 384);
                  sub_10031895C((uint64_t)v130, a1 + 448);
                  sub_100318AC8((uint64_t)v131, a1 + 512);
                  sub_100318AC8((uint64_t)v132, a1 + 624);
                  v133 = *(double *)(a1 + 736);
                  v134 = *(_DWORD *)(a1 + 744);
                  v102 = v100;
                  do
                  {
                    *(_BYTE *)(v102 + 392) = *(_BYTE *)(v102 + 16);
                    sub_10030EC4C(v102 + 400, v102 + 24);
                    sub_10030EC4C(v102 + 464, v102 + 88);
                    sub_10030EC4C(v102 + 528, v102 + 152);
                    sub_10030EC4C(v102 + 640, v102 + 264);
                    *(_DWORD *)(v102 + 760) = *(_DWORD *)(v102 + 384);
                    *(_QWORD *)(v102 + 752) = *(_QWORD *)(v102 + 376);
                    v103 = *(double *)v102;
                    v102 -= 376;
                  }
                  while (v133 < v103);
                  *(_BYTE *)(v102 + 392) = v128;
                  sub_10030EC4C(v102 + 400, (uint64_t)v129);
                  sub_10030EC4C(v102 + 464, (uint64_t)v130);
                  sub_10030EC4C(v102 + 528, (uint64_t)v131);
                  sub_10030EC4C(v102 + 640, (uint64_t)v132);
                  v104 = v134;
                  *(double *)(v102 + 752) = v133;
                  *(_DWORD *)(v102 + 760) = v104;
                  a2 = (char *)v119;
                }
                v99 = v101 + 376;
                v100 += 376;
                a1 = (uint64_t)v101;
              }
              while (v101 + 376 != a2);
            }
          }
          return;
        }
        if (!a3)
        {
          if ((char *)v7 != a2)
          {
            v113 = v8;
            v60 = (v9 - 2) >> 1;
            v61 = v60;
            v62 = v7;
            do
            {
              v63 = v61;
              if (v60 >= v61)
              {
                v64 = (2 * v61) | 1;
                v65 = v62 + 376 * v64;
                if (2 * v61 + 2 < (uint64_t)v9 && *(double *)(v62 + 376 * v64 + 360) < *(double *)(v65 + 736))
                {
                  v65 += 376;
                  v64 = 2 * v61 + 2;
                }
                v66 = v62 + 376 * v61;
                if (*(double *)(v65 + 360) >= *(double *)(v66 + 360))
                {
                  v67 = v62 + 376 * v63;
                  v68 = v66 + 360;
                  v128 = *(_BYTE *)v67;
                  v117 = v63;
                  sub_10031895C((uint64_t)v129, v67 + 8);
                  sub_10031895C((uint64_t)v130, v67 + 72);
                  sub_100318AC8((uint64_t)v131, v67 + 136);
                  sub_100318AC8((uint64_t)v132, v67 + 248);
                  v69 = *(double *)v68;
                  v134 = *(_DWORD *)(v68 + 8);
                  v133 = v69;
                  do
                  {
                    v70 = v65;
                    *(_BYTE *)v67 = *(_BYTE *)v65;
                    v71 = v65 + 8;
                    sub_10030EC4C(v67 + 8, v65 + 8);
                    v72 = v65 + 72;
                    sub_10030EC4C(v67 + 72, v65 + 72);
                    v73 = v65 + 136;
                    sub_10030EC4C(v67 + 136, v65 + 136);
                    v74 = v65 + 248;
                    sub_10030EC4C(v67 + 248, v65 + 248);
                    v75 = *(_DWORD *)(v65 + 368);
                    *(_QWORD *)(v67 + 360) = *(_QWORD *)(v65 + 360);
                    *(_DWORD *)(v67 + 368) = v75;
                    if (v60 < v64)
                      break;
                    v76 = (2 * v64) | 1;
                    v65 = a1 + 376 * v76;
                    if (2 * v64 + 2 < (uint64_t)v9 && *(double *)(a1 + 376 * v76 + 360) < *(double *)(v65 + 736))
                    {
                      v65 += 376;
                      v76 = 2 * v64 + 2;
                    }
                    v67 = v70;
                    v64 = v76;
                  }
                  while (*(double *)(v65 + 360) >= v133);
                  *(_BYTE *)v70 = v128;
                  sub_10030EC4C(v71, (uint64_t)v129);
                  sub_10030EC4C(v72, (uint64_t)v130);
                  sub_10030EC4C(v73, (uint64_t)v131);
                  sub_10030EC4C(v74, (uint64_t)v132);
                  v63 = v117;
                  v77 = v134;
                  *(double *)(v70 + 360) = v133;
                  *(_DWORD *)(v70 + 368) = v77;
                  v62 = a1;
                }
              }
              v61 = v63 - 1;
            }
            while (v63);
            v78 = v113 / 0x178;
            v109 = v62 + 8;
            v107 = v62 + 136;
            v108 = v62 + 72;
            v105 = v62 + 360;
            v106 = v62 + 248;
            v79 = v119;
            do
            {
              v114 = v79;
              v80 = a1;
              v121 = *(_BYTE *)a1;
              sub_10031895C((uint64_t)v122, v109);
              sub_10031895C((uint64_t)v123, v108);
              sub_100318AC8((uint64_t)v124, v107);
              sub_100318AC8((uint64_t)v125, v106);
              v81 = 0;
              v82 = *(_QWORD *)v105;
              v127 = *(_DWORD *)(v105 + 8);
              v126 = v82;
              do
              {
                v83 = v80;
                v84 = v81 + 1;
                v80 += 376 * (v81 + 1);
                v85 = 2 * v81;
                v81 = (2 * v81) | 1;
                v86 = v85 + 2;
                if (v86 < v78 && *(double *)(v83 + 376 * v84 + 360) < *(double *)(v80 + 736))
                {
                  v80 += 376;
                  v81 = v86;
                }
                *(_BYTE *)v83 = *(_BYTE *)v80;
                sub_10030EC4C(v83 + 8, v80 + 8);
                sub_10030EC4C(v83 + 72, v80 + 72);
                sub_10030EC4C(v83 + 136, v80 + 136);
                sub_10030EC4C(v83 + 248, v80 + 248);
                v87 = *(_DWORD *)(v80 + 368);
                *(_QWORD *)(v83 + 360) = *(_QWORD *)(v80 + 360);
                *(_DWORD *)(v83 + 368) = v87;
              }
              while (v81 <= (uint64_t)((unint64_t)(v78 - 2) >> 1));
              v88 = (_BYTE *)(v114 - 376);
              v118 = (double *)(v80 + 360);
              if (v80 == v114 - 376)
              {
                *(_BYTE *)v80 = v121;
                sub_10030EC4C(v80 + 8, (uint64_t)v122);
                sub_10030EC4C(v80 + 72, (uint64_t)v123);
                sub_10030EC4C(v80 + 136, (uint64_t)v124);
                sub_10030EC4C(v80 + 248, (uint64_t)v125);
                v97 = v127;
                *(_QWORD *)v118 = v126;
                *(_DWORD *)(v80 + 368) = v97;
              }
              else
              {
                *(_BYTE *)v80 = *v88;
                sub_10030EC4C(v80 + 8, v114 - 368);
                sub_10030EC4C(v80 + 72, v114 - 304);
                sub_10030EC4C(v80 + 136, v114 - 240);
                sub_10030EC4C(v80 + 248, v114 - 128);
                v89 = *(_QWORD *)(v114 - 16);
                *(_DWORD *)(v80 + 368) = *(_DWORD *)(v114 - 8);
                *(_QWORD *)v118 = v89;
                *v88 = v121;
                sub_10030EC4C(v114 - 368, (uint64_t)v122);
                sub_10030EC4C(v114 - 304, (uint64_t)v123);
                sub_10030EC4C(v114 - 240, (uint64_t)v124);
                sub_10030EC4C(v114 - 128, (uint64_t)v125);
                v90 = v127;
                *(_QWORD *)(v114 - 16) = v126;
                *(_DWORD *)(v114 - 8) = v90;
                v91 = v80 - a1 + 376;
                if (v91 >= 377)
                {
                  v92 = (v91 / 0x178uLL - 2) >> 1;
                  if (*(double *)(a1 + 376 * v92 + 360) < *v118)
                  {
                    v128 = *(_BYTE *)v80;
                    sub_10031895C((uint64_t)v129, v80 + 8);
                    sub_10031895C((uint64_t)v130, v80 + 72);
                    sub_100318AC8((uint64_t)v131, v80 + 136);
                    sub_100318AC8((uint64_t)v132, v80 + 248);
                    v93 = *v118;
                    v134 = *(_DWORD *)(v80 + 368);
                    v133 = v93;
                    do
                    {
                      v94 = v80;
                      v80 = a1 + 376 * v92;
                      *(_BYTE *)v94 = *(_BYTE *)v80;
                      sub_10030EC4C(v94 + 8, v80 + 8);
                      sub_10030EC4C(v94 + 72, v80 + 72);
                      sub_10030EC4C(v94 + 136, v80 + 136);
                      sub_10030EC4C(v94 + 248, v80 + 248);
                      v95 = *(_DWORD *)(v80 + 368);
                      *(_QWORD *)(v94 + 360) = *(_QWORD *)(v80 + 360);
                      *(_DWORD *)(v94 + 368) = v95;
                      if (!v92)
                        break;
                      v92 = (v92 - 1) >> 1;
                    }
                    while (*(double *)(a1 + 376 * v92 + 360) < v133);
                    *(_BYTE *)v80 = v128;
                    sub_10030EC4C(v80 + 8, (uint64_t)v129);
                    sub_10030EC4C(v80 + 72, (uint64_t)v130);
                    sub_10030EC4C(v80 + 136, (uint64_t)v131);
                    sub_10030EC4C(v80 + 248, (uint64_t)v132);
                    v96 = v134;
                    *(double *)(v80 + 360) = v133;
                    *(_DWORD *)(v80 + 368) = v96;
                  }
                }
              }
              v98 = v78-- <= 2;
              v79 = v114 - 376;
            }
            while (!v98);
          }
          return;
        }
        v10 = v9 >> 1;
        if ((unint64_t)v8 < 0xBC01)
        {
          sub_100331408(v7 + 376 * (v9 >> 1), v7, (uint64_t)v112);
        }
        else
        {
          sub_100331408(v7, v7 + 376 * (v9 >> 1), (uint64_t)v112);
          v11 = 376 * v10;
          v12 = 376 * v10 + v7 - 376;
          sub_100331408(v7 + 376, v12, v111);
          sub_100331408(v7 + 752, v7 + 376 + v11, v110);
          sub_100331408(v12, v7 + 376 * (v9 >> 1), v7 + 376 + v11);
          sub_1003317F4((char *)v7, (char *)(v7 + 376 * (v9 >> 1)));
        }
        --a3;
        if ((a4 & 1) == 0 && *(double *)(v7 - 16) >= *(double *)(v7 + 360))
        {
          v128 = *(_BYTE *)v7;
          sub_10031895C((uint64_t)v129, v7 + 8);
          sub_10031895C((uint64_t)v130, v7 + 72);
          sub_100318AC8((uint64_t)v131, v7 + 136);
          sub_100318AC8((uint64_t)v132, v7 + 248);
          v35 = *(double *)(v7 + 360);
          v134 = *(_DWORD *)(v7 + 368);
          v133 = v35;
          if (v35 >= *((double *)a2 - 2))
          {
            v38 = v7 + 376;
            do
            {
              v6 = v38;
              if (v38 >= (unint64_t)a2)
                break;
              v39 = *(double *)(v38 + 360);
              v38 += 376;
            }
            while (v133 >= v39);
          }
          else
          {
            v36 = v7;
            do
            {
              v6 = v36 + 376;
              v37 = *(double *)(v36 + 736);
              v36 += 376;
            }
            while (v133 >= v37);
          }
          v40 = a2;
          if (v6 < (unint64_t)a2)
          {
            v41 = a2;
            do
            {
              v40 = v41 - 376;
              v42 = *((double *)v41 - 2);
              v41 -= 376;
            }
            while (v133 < v42);
          }
          while (v6 < (unint64_t)v40)
          {
            sub_1003317F4((char *)v6, v40);
            do
            {
              v43 = *(double *)(v6 + 736);
              v6 += 376;
            }
            while (v133 >= v43);
            do
            {
              v44 = *((double *)v40 - 2);
              v40 -= 376;
            }
            while (v133 < v44);
          }
          v45 = (char *)(v6 - 376);
          if (v6 - 376 != v7)
          {
            *(_BYTE *)v7 = *v45;
            sub_10030EC4C(v7 + 8, v6 - 368);
            sub_10030EC4C(v7 + 72, v6 - 304);
            sub_10030EC4C(v7 + 136, v6 - 240);
            sub_10030EC4C(v7 + 248, v6 - 128);
            v46 = *(_DWORD *)(v6 - 8);
            *(_QWORD *)(v7 + 360) = *(_QWORD *)(v6 - 16);
            *(_DWORD *)(v7 + 368) = v46;
          }
          *v45 = v128;
          sub_10030EC4C(v6 - 368, (uint64_t)v129);
          sub_10030EC4C(v6 - 304, (uint64_t)v130);
          sub_10030EC4C(v6 - 240, (uint64_t)v131);
          sub_10030EC4C(v6 - 128, (uint64_t)v132);
          a4 = 0;
          v47 = v134;
          *(double *)(v6 - 16) = v133;
          *(_DWORD *)(v6 - 8) = v47;
          continue;
        }
        v116 = a3;
        v128 = *(_BYTE *)v7;
        v13 = v7 + 8;
        sub_10031895C((uint64_t)v129, v7 + 8);
        v14 = v7 + 72;
        sub_10031895C((uint64_t)v130, v7 + 72);
        v15 = v7 + 136;
        sub_100318AC8((uint64_t)v131, v7 + 136);
        v16 = v7 + 248;
        sub_100318AC8((uint64_t)v132, v7 + 248);
        v17 = 0;
        v18 = v7 + 360;
        v19 = *(double *)(v7 + 360);
        v134 = *(_DWORD *)(v7 + 368);
        v133 = v19;
        do
        {
          v20 = *(double *)(v7 + v17 + 736);
          v17 += 376;
        }
        while (v20 < v133);
        v21 = v7 + v17;
        v22 = v119;
        if (v17 == 376)
        {
          v25 = v119;
          while (v21 < v25)
          {
            v23 = (char *)(v25 - 376);
            v26 = *(double *)(v25 - 16);
            v25 -= 376;
            if (v26 < v133)
              goto LABEL_20;
          }
          v23 = (char *)v25;
        }
        else
        {
          do
          {
            v23 = (char *)(v22 - 376);
            v24 = *(double *)(v22 - 16);
            v22 -= 376;
          }
          while (v24 >= v133);
        }
LABEL_20:
        v6 = v21;
        if (v21 < (unint64_t)v23)
        {
          v27 = v23;
          do
          {
            sub_1003317F4((char *)v6, v27);
            do
            {
              v28 = *(double *)(v6 + 736);
              v6 += 376;
            }
            while (v28 < v133);
            do
            {
              v29 = *((double *)v27 - 2);
              v27 -= 376;
            }
            while (v29 >= v133);
          }
          while (v6 < (unint64_t)v27);
        }
        v30 = (char *)(v6 - 376);
        if (v6 - 376 != a1)
        {
          *(_BYTE *)a1 = *v30;
          sub_10030EC4C(v13, v6 - 368);
          sub_10030EC4C(v14, v6 - 304);
          sub_10030EC4C(v15, v6 - 240);
          sub_10030EC4C(v16, v6 - 128);
          v31 = *(_DWORD *)(v6 - 8);
          *(_QWORD *)v18 = *(_QWORD *)(v6 - 16);
          *(_DWORD *)(v18 + 8) = v31;
        }
        *v30 = v128;
        sub_10030EC4C(v6 - 368, (uint64_t)v129);
        sub_10030EC4C(v6 - 304, (uint64_t)v130);
        sub_10030EC4C(v6 - 240, (uint64_t)v131);
        v32 = sub_10030EC4C(v6 - 128, (uint64_t)v132);
        a3 = v116;
        v33 = v134;
        *(double *)(v6 - 16) = v133;
        *(_DWORD *)(v6 - 8) = v33;
        a2 = (char *)v119;
        if (v21 < (unint64_t)v23)
        {
LABEL_31:
          sub_100330454(a1, v6 - 376, v116, a4 & 1, v32);
          a4 = 0;
          continue;
        }
        v34 = sub_1003314B4(a1, v6 - 376);
        if (!sub_1003314B4(v6, v119))
        {
          if (v34)
            continue;
          goto LABEL_31;
        }
        a2 = (char *)(v6 - 376);
        if (!v34)
          goto LABEL_1;
        return;
    }
  }
}

  v136 = a2 - 376;
  v138 = (unint64_t)a2;
  v127 = (uint64_t)(a2 - 1128);
  v129 = (uint64_t)(a2 - 752);
  v131 = a2 - 384;
  k = (unint64_t)a1;
  while (2)
  {
    v8 = k;
    v9 = (uint64_t)&a2[-k];
    v10 = 0x51B3BEA3677D46CFLL * ((uint64_t)&a2[-k] >> 3);
    switch(v10)
    {
      case 0:
      case 1:
        return;
      case 2:
        v54 = *((_DWORD *)a2 - 2);
        v55 = *(_DWORD *)(v8 + 368);
        if (v54 < v55 || v54 <= v55 && *((double *)a2 - 2) < *(double *)(v8 + 360))
          sub_1003317F4((char *)v8, v136);
        return;
      case 3:
        sub_100332E34(v8, v8 + 376, (uint64_t)v136);
        return;
      case 4:
        sub_100333264(v8, v8 + 376, v8 + 752, (uint64_t)v136);
        return;
      case 5:
        sub_100332D18(v8, v8 + 376, v8 + 752, v8 + 1128, (uint64_t)v136);
        return;
      default:
        v139 = (char *)v8;
        if (v9 <= 9023)
        {
          if ((a4 & 1) != 0)
          {
            if ((char *)v8 != a2)
            {
              v56 = (char *)(v8 + 376);
              if ((char *)(v8 + 376) != a2)
              {
                v57 = 0;
                v58 = v148;
                v59 = (char *)v8;
                do
                {
                  v60 = v59;
                  v59 = v56;
                  v61 = *((_DWORD *)v60 + 186);
                  v62 = *((_DWORD *)v60 + 92);
                  if (v61 < v62 || v61 <= v62 && *((double *)v60 + 92) < *((double *)v60 + 45))
                  {
                    v147 = *v59;
                    v63 = (uint64_t)v58;
                    sub_10031895C((uint64_t)v58, (uint64_t)(v60 + 384));
                    sub_10031895C((uint64_t)v149, (uint64_t)(v60 + 448));
                    sub_100318AC8((uint64_t)v150, (uint64_t)(v60 + 512));
                    sub_100318AC8((uint64_t)v151, (uint64_t)(v60 + 624));
                    v152 = *((double *)v60 + 92);
                    v153 = *((_DWORD *)v60 + 186);
                    for (i = v57; ; i -= 376)
                    {
                      v65 = v8 + i;
                      *(_BYTE *)(v8 + i + 376) = *(_BYTE *)(v8 + i);
                      v66 = v8 + i + 8;
                      sub_10030EC4C(v8 + i + 384, v66);
                      sub_10030EC4C(v65 + 448, v65 + 72);
                      sub_10030EC4C(v65 + 512, v65 + 136);
                      sub_10030EC4C(v65 + 624, v65 + 248);
                      *(_QWORD *)(v65 + 736) = *(_QWORD *)(v65 + 360);
                      *(_DWORD *)(v65 + 744) = *(_DWORD *)(v65 + 368);
                      if (!i)
                      {
                        v68 = v139;
                        goto LABEL_115;
                      }
                      v67 = *(_DWORD *)(v65 - 8);
                      if (v153 >= v67 && (v153 > v67 || v152 >= *(double *)&v139[i - 16]))
                        break;
                      v8 = (uint64_t)v139;
                    }
                    v68 = &v139[i];
LABEL_115:
                    v58 = (_BYTE *)v63;
                    *v68 = v147;
                    sub_10030EC4C(v66, v63);
                    sub_10030EC4C(v65 + 72, (uint64_t)v149);
                    sub_10030EC4C(v65 + 136, (uint64_t)v150);
                    sub_10030EC4C(v65 + 248, (uint64_t)v151);
                    v69 = v153;
                    *(double *)(v65 + 360) = v152;
                    *(_DWORD *)(v65 + 368) = v69;
                    a2 = (char *)v138;
                    v8 = (uint64_t)v139;
                  }
                  v56 = v59 + 376;
                  v57 += 376;
                }
                while (v59 + 376 != a2);
              }
            }
          }
          else if ((char *)v8 != a2)
          {
            v115 = v8 + 376;
            if ((char *)(v8 + 376) != a2)
            {
              v116 = v8 + 736;
              do
              {
                v117 = v8;
                v8 = v115;
                v118 = *(_DWORD *)(v117 + 744);
                v119 = *(_DWORD *)(v117 + 368);
                if (v118 < v119 || v118 <= v119 && *(double *)(v117 + 736) < *(double *)(v117 + 360))
                {
                  v147 = *(_BYTE *)v8;
                  sub_10031895C((uint64_t)v148, v117 + 384);
                  sub_10031895C((uint64_t)v149, v117 + 448);
                  sub_100318AC8((uint64_t)v150, v117 + 512);
                  sub_100318AC8((uint64_t)v151, v117 + 624);
                  v152 = *(double *)(v117 + 736);
                  v153 = *(_DWORD *)(v117 + 744);
                  for (j = v116; ; j -= 376)
                  {
                    *(_BYTE *)(j - 360) = *(_BYTE *)(j - 736);
                    sub_10030EC4C(j - 352, j - 728);
                    sub_10030EC4C(j - 288, j - 664);
                    sub_10030EC4C(j - 224, j - 600);
                    sub_10030EC4C(j - 112, j - 488);
                    *(_DWORD *)(j + 8) = *(_DWORD *)(j - 368);
                    *(_QWORD *)j = *(_QWORD *)(j - 376);
                    v121 = *(_DWORD *)(j - 744);
                    if (v153 >= v121 && (v153 > v121 || v152 >= *(double *)(j - 752)))
                      break;
                  }
                  *(_BYTE *)(j - 736) = v147;
                  sub_10030EC4C(j - 728, (uint64_t)v148);
                  sub_10030EC4C(j - 664, (uint64_t)v149);
                  sub_10030EC4C(j - 600, (uint64_t)v150);
                  sub_10030EC4C(j - 488, (uint64_t)v151);
                  v122 = v153;
                  *(double *)(j - 376) = v152;
                  *(_DWORD *)(j - 368) = v122;
                  a2 = (char *)v138;
                }
                v115 = v8 + 376;
                v116 += 376;
              }
              while ((char *)(v8 + 376) != a2);
            }
          }
          return;
        }
        if (!a3)
        {
          if ((char *)v8 != a2)
          {
            v137 = (unint64_t)(v10 - 2) >> 1;
            v70 = v137;
            do
            {
              v71 = v70;
              if (v137 >= v70)
              {
                v72 = (2 * v70) | 1;
                v73 = (char *)(v8 + 376 * v72);
                if (2 * v70 + 2 < v10)
                {
                  v74 = *(_DWORD *)(v8 + 376 * v72 + 368);
                  v75 = *((_DWORD *)v73 + 186);
                  if (v74 < v75 || v74 <= v75 && *(double *)(v8 + 376 * v72 + 360) < *((double *)v73 + 92))
                  {
                    v73 += 376;
                    v72 = 2 * v70 + 2;
                  }
                }
                v76 = *((_DWORD *)v73 + 92);
                v77 = *(_DWORD *)(v8 + 376 * v71 + 368);
                if (v76 >= v77 && (v76 > v77 || *((double *)v73 + 45) >= *(double *)(v8 + 376 * v71 + 360)))
                {
                  v78 = v8 + 376 * v71;
                  v147 = *(_BYTE *)v78;
                  v135 = v71;
                  sub_10031895C((uint64_t)v148, v78 + 8);
                  sub_10031895C((uint64_t)v149, v78 + 72);
                  sub_100318AC8((uint64_t)v150, v78 + 136);
                  sub_100318AC8((uint64_t)v151, v78 + 248);
                  v79 = *(double *)(v78 + 360);
                  v153 = *(_DWORD *)(v78 + 368);
                  v152 = v79;
                  while (1)
                  {
                    v80 = (double *)v73;
                    *(_BYTE *)v78 = *v73;
                    v81 = (uint64_t)(v73 + 8);
                    sub_10030EC4C(v78 + 8, (uint64_t)(v73 + 8));
                    v82 = (uint64_t)(v73 + 72);
                    sub_10030EC4C(v78 + 72, (uint64_t)(v73 + 72));
                    v83 = (uint64_t)(v73 + 136);
                    sub_10030EC4C(v78 + 136, (uint64_t)(v73 + 136));
                    v84 = (uint64_t)(v73 + 248);
                    sub_10030EC4C(v78 + 248, (uint64_t)(v73 + 248));
                    v85 = *((_DWORD *)v73 + 92);
                    *(_QWORD *)(v78 + 360) = *((_QWORD *)v73 + 45);
                    *(_DWORD *)(v78 + 368) = v85;
                    if (v137 < v72)
                      break;
                    v86 = (2 * v72) | 1;
                    v73 = &v139[376 * v86];
                    if (2 * v72 + 2 < v10)
                    {
                      v87 = *(_DWORD *)&v139[376 * v86 + 368];
                      v88 = *((_DWORD *)v73 + 186);
                      if (v87 < v88 || v87 <= v88 && *(double *)&v139[376 * v86 + 360] < *((double *)v73 + 92))
                      {
                        v73 += 376;
                        v86 = 2 * v72 + 2;
                      }
                    }
                    v89 = *((_DWORD *)v73 + 92);
                    if (v89 < v153)
                      break;
                    v78 = (uint64_t)v80;
                    v72 = v86;
                    if (v89 <= v153)
                    {
                      v78 = (uint64_t)v80;
                      v72 = v86;
                      if (*((double *)v73 + 45) < v152)
                        break;
                    }
                  }
                  *(_BYTE *)v80 = v147;
                  sub_10030EC4C(v81, (uint64_t)v148);
                  sub_10030EC4C(v82, (uint64_t)v149);
                  sub_10030EC4C(v83, (uint64_t)v150);
                  sub_10030EC4C(v84, (uint64_t)v151);
                  v71 = v135;
                  v90 = v153;
                  v80[45] = v152;
                  *((_DWORD *)v80 + 92) = v90;
                  a2 = (char *)v138;
                  v8 = (uint64_t)v139;
                }
              }
              v70 = v71 - 1;
            }
            while (v71);
            v91 = v9 / 0x178uLL;
            v128 = v8 + 72;
            v130 = v8 + 8;
            v125 = v8 + 248;
            v126 = v8 + 136;
            v124 = v8 + 360;
            do
            {
              v133 = a2;
              v140 = *(_BYTE *)v8;
              sub_10031895C((uint64_t)v141, v130);
              sub_10031895C((uint64_t)v142, v128);
              sub_100318AC8((uint64_t)v143, v126);
              sub_100318AC8((uint64_t)v144, v125);
              v92 = 0;
              v93 = *(_QWORD *)v124;
              v146 = *(_DWORD *)(v124 + 8);
              v145 = v93;
              v94 = (char *)v8;
              do
              {
                v95 = v94;
                v96 = v92 + 1;
                v94 += 376 * v92 + 376;
                v97 = 2 * v92;
                v92 = (2 * v92) | 1;
                v98 = v97 + 2;
                if (v98 < v91)
                {
                  v99 = *(_DWORD *)&v95[376 * v96 + 368];
                  v100 = *((_DWORD *)v94 + 186);
                  if (v99 < v100 || v99 <= v100 && *(double *)&v95[376 * v96 + 360] < *((double *)v94 + 92))
                  {
                    v94 += 376;
                    v92 = v98;
                  }
                }
                *v95 = *v94;
                sub_10030EC4C((uint64_t)(v95 + 8), (uint64_t)(v94 + 8));
                sub_10030EC4C((uint64_t)(v95 + 72), (uint64_t)(v94 + 72));
                sub_10030EC4C((uint64_t)(v95 + 136), (uint64_t)(v94 + 136));
                sub_10030EC4C((uint64_t)(v95 + 248), (uint64_t)(v94 + 248));
                v101 = *((_DWORD *)v94 + 92);
                *((_QWORD *)v95 + 45) = *((_QWORD *)v94 + 45);
                *((_DWORD *)v95 + 92) = v101;
              }
              while (v92 <= (uint64_t)((unint64_t)(v91 - 2) >> 1));
              a2 = v133 - 376;
              if (v94 == v133 - 376)
              {
                *v94 = v140;
                sub_10030EC4C((uint64_t)(v94 + 8), (uint64_t)v141);
                sub_10030EC4C((uint64_t)(v94 + 72), (uint64_t)v142);
                sub_10030EC4C((uint64_t)(v94 + 136), (uint64_t)v143);
                sub_10030EC4C((uint64_t)(v94 + 248), (uint64_t)v144);
                v113 = v146;
                *((_QWORD *)v94 + 45) = v145;
                *((_DWORD *)v94 + 92) = v113;
                v8 = (uint64_t)v139;
              }
              else
              {
                *v94 = *a2;
                sub_10030EC4C((uint64_t)(v94 + 8), (uint64_t)(v133 - 368));
                sub_10030EC4C((uint64_t)(v94 + 72), (uint64_t)(v133 - 304));
                sub_10030EC4C((uint64_t)(v94 + 136), (uint64_t)(v133 - 240));
                sub_10030EC4C((uint64_t)(v94 + 248), (uint64_t)(v133 - 128));
                v102 = *((_QWORD *)v133 - 2);
                *((_DWORD *)v94 + 92) = *((_DWORD *)v133 - 2);
                v123 = (double *)(v94 + 360);
                *((_QWORD *)v94 + 45) = v102;
                *a2 = v140;
                sub_10030EC4C((uint64_t)(v133 - 368), (uint64_t)v141);
                sub_10030EC4C((uint64_t)(v133 - 304), (uint64_t)v142);
                sub_10030EC4C((uint64_t)(v133 - 240), (uint64_t)v143);
                sub_10030EC4C((uint64_t)(v133 - 128), (uint64_t)v144);
                v103 = v146;
                *((_QWORD *)v133 - 2) = v145;
                *((_DWORD *)v133 - 2) = v103;
                v8 = (uint64_t)v139;
                v104 = v94 - v139 + 376;
                if (v104 >= 377)
                {
                  v105 = (v104 / 0x178uLL - 2) >> 1;
                  v106 = *(_DWORD *)&v139[376 * v105 + 368];
                  v107 = *((_DWORD *)v94 + 92);
                  if (v106 < v107 || v106 <= v107 && *(double *)&v139[376 * v105 + 360] < *v123)
                  {
                    v147 = *v94;
                    sub_10031895C((uint64_t)v148, (uint64_t)(v94 + 8));
                    sub_10031895C((uint64_t)v149, (uint64_t)(v94 + 72));
                    sub_100318AC8((uint64_t)v150, (uint64_t)(v94 + 136));
                    sub_100318AC8((uint64_t)v151, (uint64_t)(v94 + 248));
                    v108 = *v123;
                    v153 = *((_DWORD *)v94 + 92);
                    v152 = v108;
                    do
                    {
                      v109 = v94;
                      v94 = &v139[376 * v105];
                      *v109 = *v94;
                      sub_10030EC4C((uint64_t)(v109 + 8), (uint64_t)(v94 + 8));
                      sub_10030EC4C((uint64_t)(v109 + 72), (uint64_t)(v94 + 72));
                      sub_10030EC4C((uint64_t)(v109 + 136), (uint64_t)(v94 + 136));
                      sub_10030EC4C((uint64_t)(v109 + 248), (uint64_t)(v94 + 248));
                      v110 = *((_DWORD *)v94 + 92);
                      *((_QWORD *)v109 + 45) = *((_QWORD *)v94 + 45);
                      *((_DWORD *)v109 + 92) = v110;
                      if (!v105)
                        break;
                      v105 = (v105 - 1) >> 1;
                      v111 = *(_DWORD *)&v139[376 * v105 + 368];
                    }
                    while (v111 < v153 || v111 <= v153 && *(double *)&v139[376 * v105 + 360] < v152);
                    *v94 = v147;
                    sub_10030EC4C((uint64_t)(v94 + 8), (uint64_t)v148);
                    sub_10030EC4C((uint64_t)(v94 + 72), (uint64_t)v149);
                    sub_10030EC4C((uint64_t)(v94 + 136), (uint64_t)v150);
                    sub_10030EC4C((uint64_t)(v94 + 248), (uint64_t)v151);
                    v112 = v153;
                    *((double *)v94 + 45) = v152;
                    *((_DWORD *)v94 + 92) = v112;
                    a2 = v133 - 376;
                  }
                }
              }
            }
            while (v91-- > 2);
          }
          return;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = (char *)(v8 + 376 * ((unint64_t)v10 >> 1));
        if ((unint64_t)v9 < 0xBC01)
        {
          sub_100332E34((uint64_t)v12, v8, (uint64_t)v136);
        }
        else
        {
          sub_100332E34(v8, (uint64_t)v12, (uint64_t)v136);
          v13 = 376 * v11;
          v14 = 376 * v11 + v8 - 376;
          sub_100332E34(v8 + 376, v14, v129);
          sub_100332E34(v8 + 752, v8 + 376 + v13, v127);
          sub_100332E34(v14, (uint64_t)v12, v8 + 376 + v13);
          sub_1003317F4((char *)v8, v12);
        }
        --a3;
        if ((a4 & 1) == 0)
        {
          v15 = *(_DWORD *)(v8 - 8);
          v16 = *(_DWORD *)(v8 + 368);
          if (v15 >= v16 && (v15 > v16 || *(double *)(v8 - 16) >= *(double *)(v8 + 360)))
          {
            v147 = *(_BYTE *)v8;
            sub_10031895C((uint64_t)v148, v8 + 8);
            sub_10031895C((uint64_t)v149, v8 + 72);
            sub_100318AC8((uint64_t)v150, v8 + 136);
            sub_100318AC8((uint64_t)v151, v8 + 248);
            v41 = *(double *)(v8 + 360);
            v153 = *(_DWORD *)(v8 + 368);
            v152 = v41;
            v42 = *((_DWORD *)a2 - 2);
            if (v153 < v42 || v153 <= v42 && v152 < *((double *)a2 - 2))
            {
              v43 = *(_DWORD *)(v8 + 744);
              if (v153 >= v43)
              {
                v45 = v8 + 736;
                do
                {
                  if (v153 <= v43 && v152 < *(double *)v45)
                    break;
                  v43 = *(_DWORD *)(v45 + 384);
                  v45 += 376;
                }
                while (v153 >= v43);
                k = v45 - 360;
              }
              else
              {
                k = v8 + 376;
              }
            }
            else
            {
              for (k = v8 + 376; k < (unint64_t)a2; k += 376)
              {
                v44 = *(_DWORD *)(k + 368);
                if (v153 < v44 || v153 <= v44 && v152 < *(double *)(k + 360))
                  break;
              }
            }
            v46 = a2;
            if (k < (unint64_t)a2)
            {
              for (m = v131; v153 < v42 || v153 <= v42 && v152 < *((double *)m + 46); m -= 376)
                v42 = *(_DWORD *)m;
              v46 = m + 8;
            }
            while (k < (unint64_t)v46)
            {
              sub_1003317F4((char *)k, v46);
              v48 = *(_DWORD *)(k + 744);
              if (v153 >= v48)
              {
                v49 = k + 736;
                do
                {
                  if (v153 <= v48 && v152 < *(double *)v49)
                    break;
                  v48 = *(_DWORD *)(v49 + 384);
                  v49 += 376;
                }
                while (v153 >= v48);
                k = v49 - 360;
              }
              else
              {
                k += 376;
              }
              do
              {
                do
                {
                  v46 -= 376;
                  v50 = *((_DWORD *)v46 + 92);
                }
                while (v153 < v50);
              }
              while (v153 <= v50 && v152 < *((double *)v46 + 45));
            }
            v51 = (char *)(k - 376);
            if (k - 376 != v8)
            {
              *(_BYTE *)v8 = *v51;
              sub_10030EC4C(v8 + 8, k - 368);
              sub_10030EC4C(v8 + 72, k - 304);
              sub_10030EC4C(v8 + 136, k - 240);
              sub_10030EC4C(v8 + 248, k - 128);
              v52 = *(_DWORD *)(k - 8);
              *(_QWORD *)(v8 + 360) = *(_QWORD *)(k - 16);
              *(_DWORD *)(v8 + 368) = v52;
            }
            *v51 = v147;
            sub_10030EC4C(k - 368, (uint64_t)v148);
            sub_10030EC4C(k - 304, (uint64_t)v149);
            sub_10030EC4C(k - 240, (uint64_t)v150);
            sub_10030EC4C(k - 128, (uint64_t)v151);
            a4 = 0;
            v53 = v153;
            *(double *)(k - 16) = v152;
            *(_DWORD *)(k - 8) = v53;
            continue;
          }
        }
        v134 = a3;
        v147 = *(_BYTE *)v8;
        v17 = v8 + 8;
        sub_10031895C((uint64_t)v148, v8 + 8);
        v18 = v8 + 72;
        sub_10031895C((uint64_t)v149, v8 + 72);
        v19 = v8 + 136;
        sub_100318AC8((uint64_t)v150, v8 + 136);
        v20 = v8 + 248;
        sub_100318AC8((uint64_t)v151, v8 + 248);
        v21 = 0;
        v22 = v8 + 360;
        v23 = *(double *)(v8 + 360);
        v153 = *(_DWORD *)(v8 + 368);
        v152 = v23;
        while (1)
        {
          v24 = *(_DWORD *)(v8 + v21 + 744);
          if (v24 >= v153 && (v24 > v153 || *(double *)(v8 + v21 + 736) >= v152))
            break;
          v21 += 376;
        }
        v25 = v8 + v21 + 376;
        if (v21)
        {
          v26 = v136;
          v27 = *(_DWORD *)(v138 - 8);
          v28 = v131;
          if (v27 >= v153)
          {
            do
            {
              if (v27 <= v153 && *((double *)v28 + 46) < v152)
                break;
              v27 = *(_DWORD *)v28;
              v28 -= 376;
            }
            while (v27 >= v153);
LABEL_22:
            v26 = v28 + 8;
          }
        }
        else
        {
          v26 = (char *)v138;
          if (v25 < v138)
          {
            v26 = v136;
            v29 = *(_DWORD *)(v138 - 8);
            if (v29 >= v153)
            {
              v28 = v131;
              v26 = v136;
              while (1)
              {
                v39 = (unint64_t)(v28 + 8);
                if (v29 <= v153)
                {
                  if (*((double *)v28 + 46) < v152 || v25 >= v39)
                    break;
                }
                else if (v25 >= v39)
                {
                  goto LABEL_22;
                }
                v26 -= 376;
                v29 = *(_DWORD *)v28;
                v28 -= 376;
                if (v29 < v153)
                  goto LABEL_22;
              }
            }
          }
        }
        k = v25;
        if (v25 < (unint64_t)v26)
        {
          v30 = v26;
          do
          {
            sub_1003317F4((char *)k, v30);
            do
            {
              do
              {
                k += 376;
                v31 = *(_DWORD *)(k + 368);
              }
              while (v31 < v153);
            }
            while (v31 <= v153 && *(double *)(k + 360) < v152);
            v32 = *((_DWORD *)v30 - 2);
            if (v32 >= v153)
            {
              v33 = v30 - 384;
              do
              {
                if (v32 <= v153 && *((double *)v33 + 46) < v152)
                  break;
                v32 = *(_DWORD *)v33;
                v33 -= 376;
              }
              while (v32 >= v153);
              v30 = v33 + 8;
            }
            else
            {
              v30 -= 376;
            }
          }
          while (k < (unint64_t)v30);
        }
        v34 = (char *)(k - 376);
        a1 = v139;
        if ((char *)(k - 376) != v139)
        {
          *v139 = *v34;
          sub_10030EC4C(v17, k - 368);
          sub_10030EC4C(v18, k - 304);
          sub_10030EC4C(v19, k - 240);
          sub_10030EC4C(v20, k - 128);
          v35 = *(_DWORD *)(k - 8);
          *(_QWORD *)v22 = *(_QWORD *)(k - 16);
          *(_DWORD *)(v22 + 8) = v35;
        }
        *v34 = v147;
        sub_10030EC4C(k - 368, (uint64_t)v148);
        sub_10030EC4C(k - 304, (uint64_t)v149);
        sub_10030EC4C(k - 240, (uint64_t)v150);
        v36 = sub_10030EC4C(k - 128, (uint64_t)v151);
        a3 = v134;
        v37 = v153;
        *(double *)(k - 16) = v152;
        *(_DWORD *)(k - 8) = v37;
        a2 = (char *)v138;
        if (v25 < (unint64_t)v26)
        {
LABEL_44:
          sub_100331B00(v139, k - 376, v134, a4 & 1, v36);
          a4 = 0;
          continue;
        }
        v38 = sub_100332F50((uint64_t)v139, k - 376);
        if (!sub_100332F50(k, v138))
        {
          if (v38)
            continue;
          goto LABEL_44;
        }
        a2 = (char *)(k - 376);
        if (!v38)
          goto LABEL_1;
        return;
    }
  }
}

__int128 *sub_100029558(__int128 *result, __int128 *a2, __int128 *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *((_QWORD *)a3 + 2);
  if (v3 >= *((_QWORD *)result + 2))
  {
    if (v4 < v3)
    {
      v8 = *((_QWORD *)a2 + 2);
      v9 = *a2;
      v10 = *((_QWORD *)a3 + 2);
      *a2 = *a3;
      *((_QWORD *)a2 + 2) = v10;
      *a3 = v9;
      *((_QWORD *)a3 + 2) = v8;
      if (*((_QWORD *)a2 + 2) < *((_QWORD *)result + 2))
      {
        v11 = *((_QWORD *)result + 2);
        v12 = *result;
        v13 = *((_QWORD *)a2 + 2);
        *result = *a2;
        *((_QWORD *)result + 2) = v13;
        *a2 = v12;
        *((_QWORD *)a2 + 2) = v11;
      }
    }
  }
  else
  {
    if (v4 >= v3)
    {
      v14 = *((_QWORD *)result + 2);
      v15 = *result;
      v16 = *((_QWORD *)a2 + 2);
      *result = *a2;
      *((_QWORD *)result + 2) = v16;
      *a2 = v15;
      *((_QWORD *)a2 + 2) = v14;
      if (*((_QWORD *)a3 + 2) >= *((_QWORD *)a2 + 2))
        return result;
      v5 = *((_QWORD *)a2 + 2);
      v6 = *a2;
      v17 = *((_QWORD *)a3 + 2);
      *a2 = *a3;
      *((_QWORD *)a2 + 2) = v17;
    }
    else
    {
      v5 = *((_QWORD *)result + 2);
      v6 = *result;
      v7 = *((_QWORD *)a3 + 2);
      *result = *a3;
      *((_QWORD *)result + 2) = v7;
    }
    *a3 = v6;
    *((_QWORD *)a3 + 2) = v5;
  }
  return result;
}

BOOL sub_100029648(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  __int128 *v18;
  __int128 *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;

  v4 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
  result = 1;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      if (*(_QWORD *)(a2 - 8) < *(_QWORD *)(a1 + 16))
      {
        v6 = *(_QWORD *)(a1 + 16);
        v7 = *(_OWORD *)a1;
        v8 = *(_QWORD *)(a2 - 8);
        *(_OWORD *)a1 = *(_OWORD *)(a2 - 24);
        *(_QWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a2 - 24) = v7;
        *(_QWORD *)(a2 - 8) = v6;
      }
      return result;
    case 3uLL:
      sub_100029558((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a2 - 24));
      return 1;
    case 4uLL:
      sub_1000298EC(a1, a1 + 24, a1 + 48, a2 - 24);
      return 1;
    case 5uLL:
      v17 = (__int128 *)(a1 + 24);
      v18 = (__int128 *)(a1 + 48);
      v19 = (__int128 *)(a1 + 72);
      sub_1000298EC(a1, a1 + 24, a1 + 48, a1 + 72);
      if (*(_QWORD *)(a2 - 8) < *(_QWORD *)(a1 + 88))
      {
        v20 = *(_QWORD *)(a1 + 88);
        v21 = *v19;
        v22 = *(_QWORD *)(a2 - 8);
        *v19 = *(_OWORD *)(a2 - 24);
        *(_QWORD *)(a1 + 88) = v22;
        *(_OWORD *)(a2 - 24) = v21;
        *(_QWORD *)(a2 - 8) = v20;
        if (*(_QWORD *)(a1 + 88) < *(_QWORD *)(a1 + 64))
        {
          v23 = *(_QWORD *)(a1 + 64);
          v24 = *v18;
          *v18 = *v19;
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a1 + 88);
          *v19 = v24;
          *(_QWORD *)(a1 + 88) = v23;
          if (*(_QWORD *)(a1 + 64) < *(_QWORD *)(a1 + 40))
          {
            v25 = *(_QWORD *)(a1 + 40);
            v26 = *v17;
            *v17 = *v18;
            *(_QWORD *)(a1 + 40) = *(_QWORD *)(a1 + 64);
            *v18 = v26;
            *(_QWORD *)(a1 + 64) = v25;
            if (*(_QWORD *)(a1 + 40) < *(_QWORD *)(a1 + 16))
            {
              v27 = *(_QWORD *)(a1 + 16);
              v28 = *(_OWORD *)a1;
              *(_OWORD *)a1 = *v17;
              *(_QWORD *)(a1 + 16) = *(_QWORD *)(a1 + 40);
              *v17 = v28;
              *(_QWORD *)(a1 + 40) = v27;
            }
          }
        }
      }
      return 1;
    default:
      v9 = a1 + 48;
      sub_100029558((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a1 + 48));
      v10 = a1 + 72;
      if (a1 + 72 == a2)
        return 1;
      v11 = 0;
      v12 = 0;
      break;
  }
  while (1)
  {
    v13 = *(_QWORD *)(v10 + 16);
    if (v13 < *(_QWORD *)(v9 + 16))
    {
      v29 = *(_OWORD *)v10;
      v14 = v11;
      while (1)
      {
        v15 = a1 + v14;
        *(_OWORD *)(v15 + 72) = *(_OWORD *)(a1 + v14 + 48);
        *(_QWORD *)(v15 + 88) = *(_QWORD *)(a1 + v14 + 64);
        if (v14 == -48)
          break;
        v14 -= 24;
        if (v13 >= *(_QWORD *)(v15 + 40))
        {
          v16 = a1 + v14 + 72;
          goto LABEL_12;
        }
      }
      v16 = a1;
LABEL_12:
      *(_OWORD *)v16 = v29;
      *(_QWORD *)(v16 + 16) = v13;
      if (++v12 == 8)
        return v10 + 24 == a2;
    }
    v9 = v10;
    v11 += 24;
    v10 += 24;
    if (v10 == a2)
      return 1;
  }
}

__n128 sub_1000298EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_100029558((__int128 *)a1, (__int128 *)a2, (__int128 *)a3);
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v9 = *(_QWORD *)(a3 + 16);
    result = *(__n128 *)a3;
    v10 = *(_QWORD *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_QWORD *)(a3 + 16) = v10;
    *(__n128 *)a4 = result;
    *(_QWORD *)(a4 + 16) = v9;
    if (*(_QWORD *)(a3 + 16) < *(_QWORD *)(a2 + 16))
    {
      v11 = *(_QWORD *)(a2 + 16);
      result = *(__n128 *)a2;
      v12 = *(_QWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_QWORD *)(a2 + 16) = v12;
      *(__n128 *)a3 = result;
      *(_QWORD *)(a3 + 16) = v11;
      if (*(_QWORD *)(a2 + 16) < *(_QWORD *)(a1 + 16))
      {
        v13 = *(_QWORD *)(a1 + 16);
        result = *(__n128 *)a1;
        v14 = *(_QWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = v14;
        *(__n128 *)a2 = result;
        *(_QWORD *)(a2 + 16) = v13;
      }
    }
  }
  return result;
}

uint64_t sub_1000299B8(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t *v18;

  v5 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) > 0x492492492492492)
    sub_100026E7C();
  if (0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 3) > v6)
    v6 = 0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 3);
  if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((a1[2] - *a1) >> 3)) >= 0x249249249249249)
    v10 = 0x492492492492492;
  else
    v10 = v6;
  v18 = a1 + 2;
  if (v10)
    v11 = (char *)sub_100028A48((uint64_t)(a1 + 2), v10);
  else
    v11 = 0;
  v14 = v11;
  v15 = &v11[56 * v5];
  v17 = &v11[56 * v10];
  sub_100029AF4((uint64_t)(a1 + 2), (uint64_t)v15, a2, a3, a4);
  v16 = v15 + 56;
  sub_1000289D4(a1, &v14);
  v12 = a1[1];
  sub_100028BC8((uint64_t)&v14);
  return v12;
}

void sub_100029AE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100028BC8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100029AF4(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5)
{
  uint64_t v6;
  float v7;
  void *__p;
  _BYTE *v9;
  uint64_t v10;

  v6 = *a3;
  v7 = *a4;
  v9 = 0;
  v10 = 0;
  __p = 0;
  sub_100026DB4(&__p, *(const void **)a5, *(_QWORD *)(a5 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a5 + 8) - *(_QWORD *)a5) >> 3));
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = 0;
  *(float *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  sub_100026DB4((_QWORD *)(a2 + 24), __p, (uint64_t)v9, 0xAAAAAAAAAAAAAAABLL * ((v9 - (_BYTE *)__p) >> 3));
  *(_DWORD *)(a2 + 48) = 0;
  if (__p)
  {
    v9 = __p;
    operator delete(__p);
  }
}

void sub_100029B98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100029BB4(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  uint64_t v4;
  __int128 *v6;
  __int128 v7;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      v7 = *v6;
      *(_DWORD *)(v4 + 16) = *((_DWORD *)v6 + 4);
      *(_OWORD *)v4 = v7;
      *(_QWORD *)(v4 + 24) = 0;
      *(_QWORD *)(v4 + 32) = 0;
      *(_QWORD *)(v4 + 40) = 0;
      sub_100026DB4((_QWORD *)(v4 + 24), *((const void **)v6 + 3), *((_QWORD *)v6 + 4), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)v6 + 4) - *((_QWORD *)v6 + 3)) >> 3));
      *(_DWORD *)(v4 + 48) = *((_DWORD *)v6 + 12);
      v4 = v12 + 56;
      v12 += 56;
      v6 = (__int128 *)((char *)v6 + 56);
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_100029C88((uint64_t)v9);
  return v4;
}

void sub_100029C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100029C88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100029C88(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_100029CBC(a1);
  return a1;
}

void sub_100029CBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = **(_QWORD **)(a1 + 16);
  v2 = **(_QWORD **)(a1 + 8);
  while (v1 != v2)
  {
    v3 = *(void **)(v1 - 32);
    if (v3)
    {
      *(_QWORD *)(v1 - 24) = v3;
      operator delete(v3);
    }
    v1 -= 56;
  }
}

void sub_100029D00(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 2u);
}

void sub_100029D0C(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_error_impl(a1, a4, OS_LOG_TYPE_ERROR, a2, a3, 0xCu);
}

void sub_100029D1C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_100029D40(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xEu);
}

uint64_t sub_100029D68(uint64_t result, float *a2, _QWORD *a3, float a4)
{
  *a2 = a4;
  *a3 = result;
  return result;
}

_BYTE *sub_100029D74(_BYTE *result, _BYTE *a2)
{
  *result = 0;
  *a2 = 0;
  return result;
}

_QWORD *sub_100029D90@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA7D8[a1]);
}

_QWORD *sub_100029DA4@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA830[a1]);
}

_QWORD *sub_100029DB8@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA878[a1]);
}

_QWORD *sub_100029DCC@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA898[a1]);
}

void sub_100029E5C(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10002A134(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  std::mutex *v4;

  std::mutex::unlock(v4);

  _Unwind_Resume(a1);
}

id sub_10002A1B8(uint64_t a1)
{
  uint64_t v1;
  const __CFString *v2;
  const __CFString *v4;
  const __CFString *v5;

  v4 = CFSTR("authStatus");
  v1 = *(int *)(a1 + 32);
  if (v1 > 4)
    v2 = CFSTR("Authorized");
  else
    v2 = off_1007FA8B8[v1];
  v5 = v2;
  return (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v5, &v4, 1));
}

const __CFString *sub_10002A250(unsigned int a1)
{
  if (a1 > 4)
    return CFSTR("Authorized");
  else
    return off_1007FA8B8[a1];
}

void sub_10002A3F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t *sub_10002A478(_QWORD *a1, int *a2)
{
  uint64_t *result;

  result = sub_10002A4AC(a1, a2);
  if (result)
  {
    sub_10002A560(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t *sub_10002A4AC(_QWORD *a1, int *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  unint64_t v5;
  uint64_t **v6;
  uint64_t *result;
  unint64_t v8;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    v5 = *a2;
    if (*(_QWORD *)&v2 <= v3)
      v5 = v3 % *(_QWORD *)&v2;
  }
  else
  {
    v5 = (*(_QWORD *)&v2 - 1) & v3;
  }
  v6 = *(uint64_t ***)(*a1 + 8 * v5);
  if (!v6)
    return 0;
  for (result = *v6; result; result = (uint64_t *)*result)
  {
    v8 = result[1];
    if (v8 == v3)
    {
      if (*((_DWORD *)result + 4) == (_DWORD)v3)
        return result;
    }
    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(_QWORD *)&v2)
          v8 %= *(_QWORD *)&v2;
      }
      else
      {
        v8 &= *(_QWORD *)&v2 - 1;
      }
      if (v8 != v5)
        return 0;
    }
  }
  return result;
}

uint64_t sub_10002A560(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  void *__p;

  v2 = *a2;
  sub_10002A5A0(a1, a2, (uint64_t)&__p);
  v3 = __p;
  __p = 0;
  if (v3)
    operator delete(v3);
  return v2;
}

_QWORD *sub_10002A5A0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = (int8x8_t)result[1];
  v4 = a2[1];
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(_QWORD *)&v3)
      v4 %= *(_QWORD *)&v3;
  }
  else
  {
    v4 &= *(_QWORD *)&v3 - 1;
  }
  v6 = *(_QWORD **)(*result + 8 * v4);
  do
  {
    v7 = v6;
    v6 = (_QWORD *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2)
    goto LABEL_18;
  v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(_QWORD *)&v3)
      v8 %= *(_QWORD *)&v3;
  }
  else
  {
    v8 &= *(_QWORD *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2)
      goto LABEL_19;
    v9 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(_QWORD *)&v3)
        v9 %= *(_QWORD *)&v3;
    }
    else
    {
      v9 &= *(_QWORD *)&v3 - 1;
    }
    if (v9 != v4)
LABEL_19:
      *(_QWORD *)(*result + 8 * v4) = 0;
  }
  v10 = *a2;
  if (*a2)
  {
    v11 = *(_QWORD *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(_QWORD *)&v3)
        v11 %= *(_QWORD *)&v3;
    }
    else
    {
      v11 &= *(_QWORD *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(_QWORD *)(*result + 8 * v11) = v7;
      v10 = *a2;
    }
  }
  *v7 = v10;
  *a2 = 0;
  --result[3];
  *(_QWORD *)a3 = a2;
  *(_QWORD *)(a3 + 8) = result + 2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

_QWORD *sub_10002A6D4(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v11 = operator new(0x30uLL);
  *v11 = 0;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  v11[3] = 0;
  v11[4] = 0;
  v11[5] = 0;
  *((_DWORD *)v11 + 6) = 2;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_10002A900(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v20)
  {
    *v11 = *v20;
LABEL_38:
    *v20 = v11;
    goto LABEL_39;
  }
  *v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    v21 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8)
        v21 %= v8;
    }
    else
    {
      v21 &= v8 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_10002A8EC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_10002A900(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_10002A9DC(a1, prime);
  }
}

void sub_10002A9DC(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  _QWORD *v11;
  unint64_t v12;

  if (a2)
  {
    if (a2 >> 61)
      sub_1000260B0();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      v11 = (_QWORD *)*v7;
      if (*v7)
      {
        do
        {
          v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2)
              v12 %= a2;
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
            {
              *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *v7 = *v11;
            *v11 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = v11;
            v11 = v7;
          }
          v12 = v8;
LABEL_24:
          v7 = v11;
          v11 = (_QWORD *)*v11;
          v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

uint64_t sub_10002AB34(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

_QWORD *sub_10002AB7C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA908[a1]);
}

_QWORD *sub_10002AB90@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA960[a1]);
}

_QWORD *sub_10002ABA4@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA9A8[a1]);
}

_QWORD *sub_10002ABB8@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA9C8[a1]);
}

void sub_10002ACB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10002AD14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10002AF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  void *v21;
  void *v22;
  id *v23;
  id *v24;
  uint64_t v25;

  objc_destroyWeak(v23);
  objc_destroyWeak(v24);
  objc_destroyWeak((id *)(v25 - 88));

  _Unwind_Resume(a1);
}

void sub_10002AFD4(uint64_t a1)
{
  NSObject *v2;
  int v3;
  id WeakRetained;
  void *v5;
  _DWORD v6[2];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection interrupted for pid: %d", (uint8_t *)v6, 8u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained, "handleXPCDisconnection:", *(_QWORD *)(a1 + 32));

}

void sub_10002B098(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10002B0B0(uint64_t a1)
{
  NSObject *v2;
  int v3;
  id WeakRetained;
  void *v5;
  _DWORD v6[2];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection invalidated for pid: %d", (uint8_t *)v6, 8u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained, "handleXPCDisconnection:", *(_QWORD *)(a1 + 32));

}

void sub_10002B174(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10002B324(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10002B3F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10002B43C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_10002B4B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_10002B4D0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_10002B54C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_10002B564()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_10002B5E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_10002B5F8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_10002B674(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_10002B68C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_10002B708(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_10002B720()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_10002B79C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_10002B7B4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_10002B830(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_10002B848()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_10002B8C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_10002B8DC()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_1004567D0;
      v1[1] = unk_1004567E0;
      v1[2] = xmmword_1004567F0;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_10002B97C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_10002B994()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853878 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853868 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853868, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853890 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853880 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853880, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008538A8 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853898 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853898, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008538C0 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008538B0 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008538B0, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008538D8 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008538C8 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008538C8, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008538F0 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008538E0 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008538E0, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100853908 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008538F8 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008538F8, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100853920 = v31->__r_.__value_.__r.__words[2];
  xmmword_100853910 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853910, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100853938 = v35->__r_.__value_.__r.__words[2];
  xmmword_100853928 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853928, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10002BF88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_10002BFFC@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FA9E8[a1]);
}

_QWORD *sub_10002C010@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FAA40[a1]);
}

_QWORD *sub_10002C024@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FAA88[a1]);
}

_QWORD *sub_10002C038@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FAAA8[a1]);
}

void sub_10002C230(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10002C394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_10001AE68((uint64_t)&a11);
  sub_10001AE68((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10002C4B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_10001AE68((uint64_t)&a11);
  sub_10001AE68((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10002C580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12)
    std::__shared_weak_count::__release_weak(a12);
  sub_10001AE68((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10002C5D0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_10002C64C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_10002C664()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_10002C6E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_10002C6F8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_10002C774(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_10002C78C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_10002C808(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_10002C820()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_10002C89C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_10002C8B4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_10002C930(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_10002C948()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_10002C9C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_10002C9DC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_10002CA58(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_10002CA70()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456800;
      v1[1] = *(_OWORD *)algn_100456810;
      v1[2] = xmmword_100456820;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_10002CB10(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_10002CB28()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853950 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853940 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853940, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853968 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853958 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853958, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100853980 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853970 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853970, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853998 = v15->__r_.__value_.__r.__words[2];
  xmmword_100853988 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853988, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008539B0 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008539A0 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008539A0, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008539C8 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008539B8 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008539B8, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008539E0 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008539D0 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008539D0, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008539F8 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008539E8 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008539E8, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100853A10 = v35->__r_.__value_.__r.__words[2];
  xmmword_100853A00 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853A00, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10002D11C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double sub_10002D190()
{
  uint64_t v0;

  v0 = mach_absolute_time();
  return sub_100008778(v0);
}

BOOL sub_10002D1A4(double *a1, double *a2, double *a3)
{
  int times;
  _QWORD v8[2];
  unint64_t v9;
  unint64_t v10;

  v9 = 0;
  v10 = 0;
  times = mach_get_times(&v10, &v9, v8);
  if (!times)
  {
    if (a1)
      *a1 = (double)v8[1] / 1000000000.0 + (double)v8[0] - kCFAbsoluteTimeIntervalSince1970;
    if (a2)
      *a2 = sub_100008778(v10);
    if (a3)
      *a3 = sub_100008778(v9);
  }
  return times == 0;
}

id sub_10002D250(void *a1, int a2)
{
  id v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  id v6;
  void **v7;
  std::string::size_type v8;
  std::string *v9;
  void *v10;
  void *__p[2];
  unsigned __int8 v13;
  void *v14;
  unsigned __int8 *v15;
  std::string v16;

  v3 = a1;
  memset(&v16, 0, sizeof(v16));
  sub_10002D73C(&v14, (size_t)objc_msgSend(v3, "length"));
  objc_msgSend(v3, "getBytes:length:", v14, objc_msgSend(v3, "length"));
  v4 = (unsigned __int8 *)v14;
  v5 = v15;
  if (v14 == v15)
  {
    v9 = &v16;
  }
  else
  {
    do
    {
      v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%02X"), *v4)));
      sub_10000BF04(__p, (char *)objc_msgSend(v6, "UTF8String"));

      if ((v13 & 0x80u) == 0)
        v7 = __p;
      else
        v7 = (void **)__p[0];
      if ((v13 & 0x80u) == 0)
        v8 = v13;
      else
        v8 = (std::string::size_type)__p[1];
      if (a2)
        std::string::insert(&v16, 0, (const std::string::value_type *)v7, v8);
      else
        std::string::append(&v16, (const std::string::value_type *)v7, v8);
      if ((char)v13 < 0)
        operator delete(__p[0]);
      ++v4;
    }
    while (v4 != v5);
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v9 = &v16;
    else
      v9 = (std::string *)v16.__r_.__value_.__r.__words[0];
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v9));
  if (v14)
  {
    v15 = (unsigned __int8 *)v14;
    operator delete(v14);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v16.__r_.__value_.__l.__data_);

  return v10;
}

void sub_10002D3C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  void *v24;

  if (a24 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

char *sub_10002D428(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v14;
  void *v15;

  v3 = a1;
  v4 = a2;
  v5 = objc_autoreleasePoolPush();
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPropertyListSerialization dataWithPropertyList:format:options:error:](NSPropertyListSerialization, "dataWithPropertyList:format:options:error:", v4, 200, 0, 0));
  if ((unint64_t)objc_msgSend(v6, "length") > 0x8000)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("WARNING: statedump too big (%d > %d)"), objc_msgSend(v6, "length"), 0x8000));
    v14 = v3;
    v15 = v7;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v15, &v14, 1));
    v9 = objc_claimAutoreleasedReturnValue(+[NSPropertyListSerialization dataWithPropertyList:format:options:error:](NSPropertyListSerialization, "dataWithPropertyList:format:options:error:", v8, 200, 0, 0));

    v6 = (void *)v9;
  }
  v10 = (char *)malloc_type_calloc(1uLL, (size_t)objc_msgSend(v6, "length") + 200, 0x7E1CA1B2uLL);
  *(_DWORD *)v10 = 1;
  *((_DWORD *)v10 + 1) = objc_msgSend(v6, "length");
  v11 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("[nearbyd] %@"), v3)));
  strlcpy(v10 + 136, (const char *)objc_msgSend(v11, "UTF8String"), 0x40uLL);

  v12 = objc_retainAutorelease(v6);
  memcpy(v10 + 200, objc_msgSend(v12, "bytes"), (size_t)objc_msgSend(v12, "length"));

  objc_autoreleasePoolPop(v5);
  return v10;
}

void sub_10002D610(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

char *sub_10002D668(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  char *v6;
  id v8;
  id v9;

  v3 = a1;
  v4 = a2;
  v8 = v3;
  v9 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1));
  v6 = sub_10002D428(v3, v5);

  return v6;
}

void sub_10002D714(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

_QWORD *sub_10002D73C(_QWORD *a1, size_t a2)
{
  char *v4;
  char *v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_10002D7AC(a1, a2);
    v4 = (char *)a1[1];
    v5 = &v4[a2];
    bzero(v4, a2);
    a1[1] = v5;
  }
  return a1;
}

void sub_10002D790(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10002D7AC(_QWORD *a1, size_t __sz)
{
  char *result;

  if ((__sz & 0x8000000000000000) != 0)
    sub_100026E7C();
  result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

uint64_t sub_10002D7EC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  void *v5;

  *(_QWORD *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  *(_QWORD *)(a1 + 40) = 0;
  v4 = objc_claimAutoreleasedReturnValue(+[NSData dataWithBytes:length:](NSData, "dataWithBytes:length:", &unk_100456830, 64));
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;

  return a1;
}

void sub_10002D84C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Unwind_Resume(a1);
}

uint64_t sub_10002D86C(uint64_t a1, void *a2, int a3, void *a4)
{
  id v7;
  id v8;

  v7 = a2;
  v8 = a4;
  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0x402E000000000000;
  return a1;
}

uint64_t sub_10002D8C0(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _QWORD *a7, _QWORD *a8)
{
  id v15;
  __int128 v16;
  id v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  void *v24;
  void *v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  void *v32;
  unsigned int v33;
  int v34;
  NSObject *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;

  v15 = a6;
  if (*((char *)a2 + 23) < 0)
  {
    sub_100004678((_BYTE *)a1, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v16 = *a2;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = v16;
  }
  sub_100027674(a1 + 24, a3);
  sub_100027674(a1 + 56, a4);
  sub_100027674(a1 + 88, a5);
  *(_BYTE *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  v17 = v15;
  v18 = a7[1];
  *(_QWORD *)(a1 + 192) = *a7;
  *(_QWORD *)(a1 + 184) = v17;
  *(_QWORD *)(a1 + 200) = v18;
  if (v18)
  {
    v19 = (unint64_t *)(v18 + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = a8[1];
  *(_QWORD *)(a1 + 208) = *a8;
  *(_QWORD *)(a1 + 216) = v21;
  if (v21)
  {
    v22 = (unint64_t *)(v21 + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_OWORD *)(a1 + 232) = 0u;
  *(_QWORD *)(a1 + 312) = 0;
  *(_QWORD *)(a1 + 344) = 0;
  *(_QWORD *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 384) = 0;
  *(_QWORD *)(a1 + 392) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_QWORD *)(a1 + 280) = 0;
  v24 = sub_10001D534();
  *(_QWORD *)(a1 + 224) = sub_10001DC18((uint64_t)v24);
  v25 = sub_10001D534();
  v26 = (std::__shared_weak_count *)a8[1];
  v37 = *a8;
  v38 = v26;
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(p_shared_owners);
    while (__stxr(v28 + 1, p_shared_owners));
  }
  sub_100021C1C((uint64_t)v25, &v37);
  v29 = v38;
  if (v38)
  {
    v30 = (unint64_t *)&v38->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v33 = objc_msgSend(v32, "integerForKey:", CFSTR("WiFiServiceNumMeas"));
  v34 = v33;
  if (v33 <= 8)
  {
    if (((1 << v33) & 0x116) != 0)
    {
      dword_100850CC8 = v33;
      goto LABEL_21;
    }
    if (!v33)
      goto LABEL_21;
  }
  v36 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
    sub_1003CB7D4(v34, v36);
LABEL_21:

  return a1;
}

void sub_10002DB08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

uint64_t sub_10002DC40(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  if (*(_QWORD *)(a1 + 48))
    sub_10002DE08((const std::string *)a1);

  v2 = *(_QWORD **)(a1 + 376);
  if (v2 == (_QWORD *)(a1 + 352))
  {
    v3 = 4;
    v2 = (_QWORD *)(a1 + 352);
  }
  else
  {
    if (!v2)
      goto LABEL_8;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_8:
  v4 = *(_QWORD **)(a1 + 344);
  if (v4 == (_QWORD *)(a1 + 320))
  {
    v5 = 4;
    v4 = (_QWORD *)(a1 + 320);
  }
  else
  {
    if (!v4)
      goto LABEL_13;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_13:
  v6 = *(_QWORD **)(a1 + 312);
  if (v6 == (_QWORD *)(a1 + 288))
  {
    v7 = 4;
    v6 = (_QWORD *)(a1 + 288);
  }
  else
  {
    if (!v6)
      goto LABEL_18;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_18:

  sub_10001AE68(a1 + 208);
  sub_10001AE68(a1 + 192);

  v8 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = 0;
  if (v8)
    sub_10002EDA8(a1 + 176, v8);
  sub_10002ED70(a1 + 120);
  v9 = *(_QWORD **)(a1 + 112);
  if (v9 == (_QWORD *)(a1 + 88))
  {
    v10 = 4;
    v9 = (_QWORD *)(a1 + 88);
  }
  else
  {
    if (!v9)
      goto LABEL_25;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_25:
  v11 = *(_QWORD **)(a1 + 80);
  if (v11 == (_QWORD *)(a1 + 56))
  {
    v12 = 4;
    v11 = (_QWORD *)(a1 + 56);
  }
  else
  {
    if (!v11)
      goto LABEL_30;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_30:
  v13 = *(_QWORD **)(a1 + 48);
  if (v13 == (_QWORD *)(a1 + 24))
  {
    v14 = 4;
    v13 = (_QWORD *)(a1 + 24);
  }
  else
  {
    if (!v13)
      goto LABEL_35;
    v14 = 5;
  }
  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_35:
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

std::string::size_type *sub_10002DE08(const std::string *a1)
{
  NSObject *v2;
  uint64_t data;
  const std::string *v4;
  uint64_t v5;
  std::string::size_type *result;
  uint64_t v7;
  uint8_t v8[16];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi,WiFiRanging Invalidate ranging session", v8, 2u);
  }
  data = (uint64_t)a1[8].__r_.__value_.__l.__data_;
  if (data)
    sub_100276B60(data, a1[9].__r_.__value_.__l.__size_, a1);
  sub_10002DF00((uint64_t)a1);
  sub_10002DF44((uint64_t)a1);
  v4 = (const std::string *)a1[2].__r_.__value_.__l.__data_;
  a1[2].__r_.__value_.__r.__words[0] = 0;
  if (v4 == &a1[1])
  {
    v5 = 4;
    v4 = a1 + 1;
  }
  else
  {
    if (!v4)
      goto LABEL_10;
    v5 = 5;
  }
  (*(void (**)(void))(v4->__r_.__value_.__r.__words[0] + 8 * v5))();
LABEL_10:
  result = (std::string::size_type *)a1[3].__r_.__value_.__l.__size_;
  a1[3].__r_.__value_.__l.__size_ = 0;
  if (result == &a1[2].__r_.__value_.__r.__words[1])
  {
    v7 = 4;
    result = &a1[2].__r_.__value_.__l.__size_;
  }
  else
  {
    if (!result)
      return result;
    v7 = 5;
  }
  return (std::string::size_type *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_10002DF00(uint64_t a1)
{
  NSObject *v2;
  void *v3;

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 184));
  v2 = *(NSObject **)(a1 + 232);
  if (v2)
  {
    dispatch_source_cancel(v2);
    v3 = *(void **)(a1 + 232);
    *(_QWORD *)(a1 + 232) = 0;

  }
}

void sub_10002DF44(uint64_t a1)
{
  NSObject *v2;
  BOOL v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  NSObject *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char **v21;
  char v22;
  uint8_t buf[8];
  id v24;
  id v25;
  id v26;
  _BYTE v27[24];
  _BYTE *v28;
  _BYTE v29[24];
  _BYTE *v30;
  _BYTE v31[24];
  _BYTE *v32;
  id v33;
  uint64_t v34;

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi,WiFiRanging Stop ranging session", buf, 2u);
  }
  if (*(_QWORD *)(a1 + 176) && *(_BYTE *)(a1 + 168))
  {
    v3 = *(_BYTE *)(a1 + 152) == 0;
    v4 = sub_10001D534();
    if (!v3)
    {
      sub_1000260D8((uint64_t)buf, *(_QWORD *)(a1 + 176));
      v18 = 0;
      v19 = 0;
      v20 = 0;
      v21 = &v18;
      v22 = 0;
      v18 = (char *)operator new(0xA8uLL);
      v19 = (uint64_t)v18;
      v20 = v18 + 168;
      v19 = sub_100027FB8((uint64_t)&v20, (uint64_t)buf, (uint64_t)&v34, (uint64_t)v18);
      sub_10001EEF4((uint64_t)v4, (uint64_t)&v18);
      v21 = &v18;
      sub_100027F34((void ***)&v21);

      v5 = v32;
      if (v32 == v31)
      {
        v6 = 4;
        v5 = v31;
      }
      else
      {
        if (!v32)
          goto LABEL_16;
        v6 = 5;
      }
      (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_16:
      v10 = v30;
      if (v30 == v29)
      {
        v11 = 4;
        v10 = v29;
      }
      else
      {
        if (!v30)
        {
LABEL_21:
          v12 = v28;
          if (v28 == v27)
          {
            v13 = 4;
            v12 = v27;
            goto LABEL_25;
          }
          if (v28)
          {
            v13 = 5;
LABEL_25:
            (*(void (**)(void))(*v12 + 8 * v13))();
          }
LABEL_39:

          return;
        }
        v11 = 5;
      }
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_21;
    }
    sub_1000260D8((uint64_t)buf, *(_QWORD *)(a1 + 176));
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = &v18;
    v22 = 0;
    v18 = (char *)operator new(0xA8uLL);
    v19 = (uint64_t)v18;
    v20 = v18 + 168;
    v19 = sub_100027FB8((uint64_t)&v20, (uint64_t)buf, (uint64_t)&v34, (uint64_t)v18);
    sub_100025DFC((uint64_t)v4);
    v21 = &v18;
    sub_100027F34((void ***)&v21);

    v8 = v32;
    if (v32 == v31)
    {
      v9 = 4;
      v8 = v31;
    }
    else
    {
      if (!v32)
        goto LABEL_29;
      v9 = 5;
    }
    (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_29:
    v14 = v30;
    if (v30 == v29)
    {
      v15 = 4;
      v14 = v29;
    }
    else
    {
      if (!v30)
        goto LABEL_34;
      v15 = 5;
    }
    (*(void (**)(void))(*v14 + 8 * v15))();
LABEL_34:
    v16 = v28;
    if (v28 == v27)
    {
      v17 = 4;
      v16 = v27;
    }
    else
    {
      if (!v28)
        goto LABEL_39;
      v17 = 5;
    }
    (*(void (**)(void))(*v16 + 8 * v17))();
    goto LABEL_39;
  }
  v7 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#wifi,Ranging session not stopped since ranging session never started or no active peer in ranging session", buf, 2u);
  }
}

void sub_10002E2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  void **v6;
  va_list va;
  uint64_t v8;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v6 = va_arg(va1, void **);
  v8 = va_arg(va1, _QWORD);
  sub_100027F34((void ***)va);
  sub_10001E460((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10002E2FC(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  id location;
  id v13;
  id v14;
  _QWORD v15[2];
  int buf;
  id buf_4;

  v4 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    buf = 67109120;
    LODWORD(buf_4) = dword_100850CC8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi,WiFiRanging Start ranging session; using %d measurements",
      (uint8_t *)&buf,
      8u);
  }
  sub_10002E970(a1 + 120, a2);
  v5 = objc_alloc((Class)NSNumber);
  v6 = objc_msgSend(v5, "initWithInt:", dword_100850CC8);
  v15[0] = *(_QWORD *)a2;
  v15[1] = v6;
  v14 = objc_msgSend(objc_alloc((Class)NSData), "initWithBytes:length:", v15, 6);
  v7 = *(id *)(a2 + 16);
  location = 0;
  v13 = v7;
  if (*(_BYTE *)(a2 + 32))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithBytes:length:](NSData, "dataWithBytes:length:", &unk_100456830, 64));
    v9 = location;
    location = v8;

  }
  else
  {
    objc_storeStrong(&location, *(id *)(a2 + 24));
    v10 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      buf = 138412290;
      buf_4 = v13;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#wifi,peer address: %@", (uint8_t *)&buf, 0xCu);
    }
  }
  v11 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    buf = 138412290;
    buf_4 = location;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#wifi,secure key: %@", (uint8_t *)&buf, 0xCu);
  }
  sub_10002E9F8();
}

void sub_10002E8E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,void *a22,uint64_t a23,void *a24,void **a25,uint64_t a26,char a27)
{
  sub_100027F34(&a25);
  sub_10001E460((uint64_t)&a27);

  _Unwind_Resume(a1);
}

uint64_t sub_10002E970(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;

  v4 = *(unsigned __int8 *)(a1 + 48);
  v5 = *(_DWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = v5;
  if (v4)
  {
    objc_storeStrong((id *)(a1 + 16), *(id *)(a2 + 16));
    objc_storeStrong((id *)(a1 + 24), *(id *)(a2 + 24));
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(id *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(id *)(a2 + 24);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = 1;
  }
  return a1;
}

void sub_10002E9F8()
{
  operator new();
}

void sub_10002EBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15, char a16, uint64_t a17, uint64_t a18, char *a19, char a20,uint64_t a21,uint64_t a22,char *a23)
{
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v24 = a15;
  if (a15 == v23)
  {
    v25 = 4;
    v24 = &a12;
  }
  else
  {
    if (!a15)
      goto LABEL_6;
    v25 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v24 + 8 * v25))();
LABEL_6:
  v26 = a19;
  if (a19 == &a16)
  {
    v27 = 4;
    v26 = &a16;
  }
  else
  {
    if (!a19)
      goto LABEL_11;
    v27 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v26 + 8 * v27))();
LABEL_11:
  v28 = a23;
  if (a23 == &a20)
  {
    v29 = 4;
    v28 = &a20;
  }
  else
  {
    if (!a23)
      goto LABEL_16;
    v29 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v28 + 8 * v29))();
LABEL_16:
  operator delete();
}

void sub_10002EC70(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint8_t v4[12];
  int v5;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi,One-shot ranging session timeout", v4, 2u);
  }
  sub_10002DF44(v1);
  v5 = 6;
  v3 = *(_QWORD *)(v1 + 80);
  if (!v3)
    sub_100027BC4();
  (*(void (**)(uint64_t, int *))(*(_QWORD *)v3 + 48))(v3, &v5);
  sub_10002DF00(v1);
}

_QWORD *sub_10002ED0C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  if ((a1 + 1) >= 8)
    sub_1003CB888();
  return sub_10000BF04(a2, off_1007FAAC8[a1 + 1]);
}

_QWORD *sub_10002ED3C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  char *v2;

  if (a1)
  {
    if (a1 != 1)
      sub_1003CB8B0();
    v2 = "NOT_READY";
  }
  else
  {
    v2 = "READY";
  }
  return sub_10000BF04(a2, v2);
}

uint64_t sub_10002ED70(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48))
  {

  }
  return a1;
}

void sub_10002EDA8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (a2)
  {

    v3 = *(_QWORD **)(a2 + 136);
    if (v3 == (_QWORD *)(a2 + 112))
    {
      v4 = 4;
      v3 = (_QWORD *)(a2 + 112);
    }
    else
    {
      if (!v3)
        goto LABEL_8;
      v4 = 5;
    }
    (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_8:
    v5 = *(_QWORD **)(a2 + 104);
    if (v5 == (_QWORD *)(a2 + 80))
    {
      v6 = 4;
      v5 = (_QWORD *)(a2 + 80);
    }
    else
    {
      if (!v5)
        goto LABEL_13;
      v6 = 5;
    }
    (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_13:
    v7 = *(_QWORD **)(a2 + 72);
    if (v7 == (_QWORD *)(a2 + 48))
    {
      v8 = 4;
      v7 = (_QWORD *)(a2 + 48);
    }
    else
    {
      if (!v7)
        goto LABEL_18;
      v8 = 5;
    }
    (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_18:

    operator delete();
  }
}

_QWORD *sub_10002EE98@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FAB08[a1]);
}

_QWORD *sub_10002EEAC@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FAB60[a1]);
}

_QWORD *sub_10002EEC0@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FABA8[a1]);
}

_QWORD *sub_10002EED4@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FABC8[a1]);
}

void sub_10002EFD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10002F030(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10002F284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  void *v21;
  void *v22;
  id *v23;
  id *v24;
  uint64_t v25;

  objc_destroyWeak(v23);
  objc_destroyWeak(v24);
  objc_destroyWeak((id *)(v25 - 88));

  _Unwind_Resume(a1);
}

void sub_10002F2F0(uint64_t a1)
{
  NSObject *v2;
  int v3;
  id WeakRetained;
  void *v5;
  _DWORD v6[2];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection interrupted for pid: %d", (uint8_t *)v6, 8u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained, "handleXPCDisconnection:", *(_QWORD *)(a1 + 32));

}

void sub_10002F3B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10002F3CC(uint64_t a1)
{
  NSObject *v2;
  int v3;
  id WeakRetained;
  void *v5;
  _DWORD v6[2];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection invalidated for pid: %d", (uint8_t *)v6, 8u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained, "handleXPCDisconnection:", *(_QWORD *)(a1 + 32));

}

void sub_10002F490(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10002F640(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10002F70C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10002F758()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_10002F7D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_10002F7EC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_10002F868(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_10002F880()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_10002F8FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_10002F914()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_10002F990(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_10002F9A8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_10002FA24(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_10002FA3C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_10002FAB8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_10002FAD0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_10002FB4C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_10002FB64()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_10002FBE0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_10002FBF8()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456870;
      v1[1] = unk_100456880;
      v1[2] = xmmword_100456890;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_10002FC98(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_10002FCB0()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853A30 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853A20 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853A20, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853A48 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853A38 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853A38, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100853A60 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853A50 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853A50, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853A78 = v15->__r_.__value_.__r.__words[2];
  xmmword_100853A68 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853A68, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100853A90 = v19->__r_.__value_.__r.__words[2];
  xmmword_100853A80 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853A80, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100853AA8 = v23->__r_.__value_.__r.__words[2];
  xmmword_100853A98 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853A98, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100853AC0 = v27->__r_.__value_.__r.__words[2];
  xmmword_100853AB0 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853AB0, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100853AD8 = v31->__r_.__value_.__r.__words[2];
  xmmword_100853AC8 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853AC8, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100853AF0 = v35->__r_.__value_.__r.__words[2];
  xmmword_100853AE0 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853AE0, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_1000302A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double sub_100030318(double a1)
{
  return a1 / 180.0 * 3.14159265;
}

double sub_100030334(double a1)
{
  return a1 * 180.0 / 3.14159265;
}

double sub_100030350(double a1)
{
  return a1 / 1.0e12 * 299792458.0;
}

double sub_10003036C(double a1)
{
  return a1 / 299792458.0 * 1.0e12;
}

double sub_100030388(double a1)
{
  return a1 * 299792458.0;
}

double sub_100030398(double a1)
{
  return a1 * 1.0e12;
}

double sub_1000303A8(double a1)
{
  return a1 / 1000.0;
}

double sub_1000303B8(double a1)
{
  return a1 / 1.0e12;
}

double sub_1000303C8(double a1)
{
  return a1 / 1000000000.0;
}

long double sub_1000303D8(long double *a1, double *a2, double a3, double a4)
{
  double v6;
  __double2 v7;
  __double2 v8;
  long double result;

  v6 = a4 / 180.0 * 3.14159265;
  v7 = __sincos_stret(a3 / 180.0 * 3.14159265);
  v8 = __sincos_stret(v6);
  *a1 = asin(v7.__cosval * v8.__sinval) * 180.0 / 3.14159265;
  result = atan2(-(v7.__sinval * v8.__sinval), v8.__cosval) * 180.0 / 3.14159265;
  *a2 = result;
  return result;
}

void sub_10003047C(double *a1, long double *a2, double a3, double a4)
{
  __double2 v7;
  __double2 v8;
  double v9;

  v7 = __sincos_stret(a3 / 180.0 * 3.14159265);
  v8 = __sincos_stret(a4 / 180.0 * 3.14159265);
  *a2 = acos(v7.__cosval * v8.__cosval) * 180.0 / 3.14159265;
  v9 = atan2(-(v7.__cosval * v8.__sinval), v7.__sinval) * 180.0 / 3.14159265;
  if (v9 < 0.0)
    v9 = v9 + 360.0;
  *a1 = v9;
}

void sub_100030570(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100030678(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1000306E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)NIServerClient;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_10003077C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10003080C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100030824(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "uwbSessionDidFailWithError:", *(_QWORD *)(a1 + 32));

}

void sub_100030874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100030904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_10003091C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "uwbSessionDidInvalidateWithError:", *(_QWORD *)(a1 + 32));

}

void sub_10003096C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100030A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_100030A18(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didRemoveNearbyObjects:withReason:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_100030A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100030AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100030B10(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didUpdateNearbyObjects:", *(_QWORD *)(a1 + 32));

}

void sub_100030B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100030BCC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "uwbSessionInterruptedWithReason:timestamp:", *(_QWORD *)(a1 + 32), *(double *)(a1 + 40));

}

void sub_100030C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100030C8C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "uwbSessionInterruptionReasonEnded:timestamp:", *(_QWORD *)(a1 + 32), *(double *)(a1 + 40));

}

void sub_100030CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100030D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100030D88(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didDiscoverNearbyObject:", *(_QWORD *)(a1 + 32));

}

void sub_100030DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100030EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_100030EEC(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "object:didUpdateRegion:previousRegion:", a1[4], a1[5], a1[6]);

}

void sub_100030F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100030FA8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didUpdateMotionState:", *(_QWORD *)(a1 + 32));

}

void sub_100030FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031060(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didUpdateHealthStatus:", *(_QWORD *)(a1 + 32));

}

void sub_1000310B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100031158(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "relayDCKMessage:", *(_QWORD *)(a1 + 32));

}

void sub_1000311A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_100031284(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didGenerateShareableConfigurationData:forObject:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_1000312D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_10003137C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didUpdateLocalDiscoveryToken:", *(_QWORD *)(a1 + 32));

}

void sub_1000313CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_10003147C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didReceiveRangingAuthRecommendation:forObject:", *(unsigned __int8 *)(a1 + 40), *(_QWORD *)(a1 + 32));

}

void sub_1000314D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1000315AC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didUpdateAlgorithmState:forObject:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_1000315FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031664(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didUpdateHomeDeviceUWBRangingAvailability:", *(unsigned __int8 *)(a1 + 32));

}

void sub_1000316B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10003176C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_100031790(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didProcessAcwgM1MsgWithResponse:error:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_1000317E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1000318BC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didProcessAcwgM3MsgWithResponse:error:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_10003190C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1000319C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1000319E8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didProcessAcwgRangingSessionResumeRequestMsgWithResponse:error:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_100031A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031AA4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "requestAcwgRangingSessionSuspend:withSuspendTriggerReason:", *(unsigned int *)(a1 + 40), *(_QWORD *)(a1 + 32));

}

void sub_100031AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031B60(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didStartAcwgRanging:", *(_QWORD *)(a1 + 32));

}

void sub_100031BB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031C18(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didSuspendAcwgRanging:", *(_QWORD *)(a1 + 32));

}

void sub_100031C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_100031D18(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "didPrefetchAcwgUrsk:error:", *(unsigned int *)(a1 + 40), *(_QWORD *)(a1 + 32));

}

void sub_100031D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100031E14(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "systemDidUpdateState:", *(_QWORD *)(a1 + 32));

}

void sub_100031E64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100031EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_100031F14(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (!v5)
    objc_msgSend(v6, "systemDidUpdateResourceUsageLimitExceeded:forSessionConfigurationTypeWithName:", *(unsigned __int8 *)(a1 + 40), *(_QWORD *)(a1 + 32));

}

void sub_100031F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1000320C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10003213C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100032224(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double sub_100032270()
{
  double v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  NSObject *v5;

  v0 = 2.5;
  v1 = MGGetProductType();
  v2 = v1;
  if (v1 > 2159747552)
  {
    if (v1 <= 2940697644)
    {
      if (v1 > 2688879998)
      {
        if (v1 > 2793418700)
        {
          if (v1 == 2793418701)
            return v0;
          v3 = 2795618603;
        }
        else
        {
          if (v1 == 2688879999)
            return v0;
          v3 = 2722529672;
        }
      }
      else if (v1 > 2309863437)
      {
        if (v1 == 2309863438)
          return v0;
        v3 = 2311900306;
      }
      else
      {
        if (v1 == 2159747553)
          return v0;
        v3 = 2270970153;
      }
    }
    else if (v1 <= 3585085678)
    {
      if (v1 > 3001488777)
      {
        if (v1 == 3001488778)
          return v0;
        v3 = 3242623367;
      }
      else
      {
        if (v1 == 2940697645)
          return v0;
        v3 = 2941181571;
      }
    }
    else if (v1 <= 3825599859)
    {
      if (v1 == 3585085679)
        return v0;
      v3 = 3743999268;
    }
    else
    {
      if (v1 == 3825599860 || v1 == 3885279870)
        return v0;
      v3 = 4201643249;
    }
  }
  else if (v1 <= 1169082143)
  {
    if (v1 > 689804741)
    {
      if (v1 > 910181309)
      {
        if (v1 == 910181310)
          return v0;
        v3 = 1060988941;
      }
      else
      {
        if (v1 == 689804742)
          return v0;
        v3 = 851437781;
      }
    }
    else if (v1 > 502329936)
    {
      if (v1 == 502329937)
        return v0;
      v3 = 574536383;
    }
    else
    {
      if (v1 == 133314240)
        return v0;
      v3 = 330877086;
    }
  }
  else if (v1 <= 1434404432)
  {
    if (v1 > 1371389548)
    {
      if (v1 == 1371389549)
        return v0;
      v3 = 1429914406;
    }
    else
    {
      if (v1 == 1169082144)
        return v0;
      v3 = 1234705395;
    }
  }
  else
  {
    if (v1 <= 1721691076)
    {
      if (v1 == 1434404433)
        return v0;
      if (v1 == 1608945770)
        return 4.0;
      goto LABEL_53;
    }
    if (v1 == 1721691077 || v1 == 2021146989)
      return v0;
    v3 = 2080700391;
  }
  if (v1 == v3)
    return v0;
LABEL_53:
  v5 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_FAULT))
    sub_1003CB914(v2, v5);
  return v0;
}

double sub_1000325AC()
{
  uint64_t v0;
  double result;

  v0 = MGGetProductType();
  result = 4.0;
  if (v0 == 1608945770)
    return 5.0;
  return result;
}

uint64_t sub_1000325D8(uint64_t a1)
{
  void *v2;

  v2 = *(void **)a1;
  if (v2)
  {
    *(_QWORD *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1000328FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100032960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)NIServerAnalyticsManager;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_100033344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

id sub_10003344C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100034ACC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_100034B14(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1000357E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100036624(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_100036698(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100038E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44)
{
  void *v44;
  void *v45;
  void *v46;

  _Unwind_Resume(a1);
}

id sub_1000394F4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_1000394FC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_100039504(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_10003950C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1000396FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100039C00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_100039C80(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100039CAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10003A05C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_10003A0D0(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10003A314(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_10003A394(_QWORD *a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = (void **)a1[1];
  v3 = (void **)a1[2];
  a1[5] = 0;
  v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = (void **)a1[2];
      v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v5 = v4 >> 3;
  if (v5 == 1)
  {
    v6 = 16;
  }
  else
  {
    if (v5 != 2)
      goto LABEL_9;
    v6 = 32;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    v7 = *v2++;
    operator delete(v7);
  }
  return sub_10003A428((uint64_t)a1);
}

uint64_t sub_10003A428(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != v3)
    *(_QWORD *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  v4 = *(void **)a1;
  if (*(_QWORD *)a1)
    operator delete(v4);
  return a1;
}

_QWORD *sub_10003A474(_QWORD *result, const void *a2, uint64_t a3, size_t __sz)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (__sz)
  {
    v6 = result;
    result = sub_10002D7AC(result, __sz);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10003A4D0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10003A4EC(uint64_t a1)
{
  void *v2;

  sub_10003A524(a1, *(void ***)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_10003A524(int a1, void **__p)
{
  void **v2;
  void **v3;

  if (__p)
  {
    v2 = __p;
    do
    {
      v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0)
        operator delete(v2[2]);
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_QWORD *sub_10003A568(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v11 = operator new(0x18uLL);
  *v11 = 0;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *((_BYTE *)v11 + 20) = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_10002A900(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v20)
  {
    *v11 = *v20;
LABEL_38:
    *v20 = v11;
    goto LABEL_39;
  }
  *v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    v21 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8)
        v21 %= v8;
    }
    else
    {
      v21 &= v8 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_10003A774(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_10003A788(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  unsigned __int8 **v14;
  unsigned __int8 *i;
  unint64_t v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD v26[3];

  v8 = (_QWORD *)(a1 + 24);
  v9 = sub_10003AAC4(a1 + 24, (uint64_t)a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v14 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(unsigned __int8 **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if ((sub_10003AF6C(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  sub_10003AA1C(a1, v10, a4, (uint64_t)v26);
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    v19 = 1;
    if (v11 >= 3)
      v19 = (v11 & (v11 - 1)) != 0;
    v20 = v19 | (2 * v11);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    sub_10002A900(a1, v22);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *(_QWORD *)v26[0] = *v23;
    *v23 = v26[0];
  }
  else
  {
    *(_QWORD *)v26[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v26[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v26[0])
    {
      v24 = *(_QWORD *)(*(_QWORD *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11)
          v24 %= v11;
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v26[0];
    }
  }
  i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_10003A9F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p)
    sub_10003B010((uint64_t)&a13, __p);
  _Unwind_Resume(exception_object);
}

_BYTE *sub_10003AA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  _BYTE *result;
  __int128 *v10;
  __int128 v11;

  v7 = a1 + 16;
  v8 = (char *)operator new(0x30uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = a2;
  result = v8 + 16;
  v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    result = sub_100004678(result, *(void **)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = *v10;
    *((_QWORD *)v8 + 4) = *((_QWORD *)v10 + 2);
    *(_OWORD *)result = v11;
  }
  v8[40] = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_10003AAA8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_10003B010(v3, v2);
  _Unwind_Resume(a1);
}

unint64_t sub_10003AAC4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v5;

  v2 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v3 = v2;
  }
  return sub_10003AB00((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t sub_10003AB00(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;

  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      v11 = v7 + v9;
      v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      v14 = v8 + a3 + v7 + v4;
      v15 = v14 + v5;
      v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      v18 = v17 + v6 + v9;
      v19 = __ROR8__(v18, 44);
      v20 = v18 + v10;
      v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      v23 = *a2;
      v22 = a2 + 4;
      v24 = v23 - 0x4B6D499041670D8DLL * v5;
      v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        v26 = *(v22 - 3);
        v27 = v24 + v15 + v11 + v26;
        v28 = v22[2];
        v29 = v22[3];
        v30 = v22[1];
        v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        v31 = v13 + v20;
        v32 = *(v22 - 2);
        v33 = *(v22 - 1);
        v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        v35 = v34 + v20 + v33;
        v36 = v34 + v26 + v32;
        v15 = v36 + v33;
        v37 = __ROR8__(v36, 44) + v34;
        v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        v16 = v37 + __ROR8__(v35 + v38, 21);
        v39 = v24 + v21 + *v22;
        v20 = v39 + v30 + v28 + v29;
        v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        v13 = v38;
        v25 += 64;
      }
      while (v25);
      v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return sub_10003AEAC(a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return sub_10003AE00(a2, a3);
  }
  else
  {
    return sub_10003AD08(a2, a3);
  }
}

unint64_t sub_10003AD08(_DWORD *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  if (a2 < 9)
  {
    if (a2 < 4)
    {
      result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)a1 + a2 - 8);
    v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t sub_10003AE00(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = a1[1];
  v3 = 0xB492B66FBE98F273 * *a1;
  v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(_QWORD *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(_QWORD *)((char *)a1 + a2 - 8);
  v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(_QWORD *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t sub_10003AEAC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v2 = *(_QWORD *)((char *)a1 + a2 - 16);
  v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  v5 = a1[2];
  v4 = a1[3];
  v6 = __ROR8__(v3 + v4, 52);
  v7 = v3 + a1[1];
  v8 = __ROR8__(v7, 7);
  v9 = v7 + v5;
  v10 = *(_QWORD *)((char *)a1 + a2 - 32) + v5;
  v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  v12 = *(_QWORD *)((char *)a1 + a2 - 24) + v10 + v2;
  v13 = 0xC3A5C85C97CB3127 * (v12 + *(_QWORD *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(_QWORD *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(_QWORD *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t sub_10003AF6C(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  BOOL v14;
  uint64_t result;

  v3 = a3;
  v4 = a2[23];
  if ((v4 & 0x80u) == 0)
    v5 = a2[23];
  else
    v5 = *((_QWORD *)a2 + 1);
  v6 = a3[23];
  v7 = (char)v6;
  if ((v6 & 0x80u) != 0)
    v6 = *((_QWORD *)a3 + 1);
  if (v5 != v6)
    return 0;
  if (v7 < 0)
    v3 = *(unsigned __int8 **)a3;
  if ((v4 & 0x80) != 0)
    return memcmp(*(const void **)a2, v3, *((_QWORD *)a2 + 1)) == 0;
  if (!a2[23])
    return 1;
  v8 = v4 - 1;
  do
  {
    v10 = *a2++;
    v9 = v10;
    v12 = *v3++;
    v11 = v12;
    v14 = v8-- != 0;
    result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

void sub_10003B010(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0)
      operator delete(__p[2]);
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

void *sub_10003B05C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
    sub_1000260B0();
  return operator new(4 * a2);
}

_QWORD *sub_10003B090(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_10003B108(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10003B0EC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10003B108(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    sub_100026E7C();
  result = (char *)sub_10003B05C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void sub_10003B148()
{
  void *v0;
  _OWORD *v1;
  _OWORD *v2;

  v0 = objc_autoreleasePoolPush();
  qword_100853B00 = 0;
  unk_100853B08 = 0;
  qword_100853AF8 = 0;
  v1 = operator new(0x40uLL);
  qword_100853B00 = (uint64_t)(v1 + 4);
  unk_100853B08 = v1 + 4;
  *v1 = xmmword_100456960;
  v1[1] = unk_100456970;
  v1[2] = xmmword_100456980;
  v1[3] = unk_100456990;
  qword_100853AF8 = (uint64_t)v1;
  __cxa_atexit((void (*)(void *))sub_1000325D8, &qword_100853AF8, (void *)&_mh_execute_header);
  qword_100853B18 = 0;
  unk_100853B20 = 0;
  qword_100853B10 = 0;
  v2 = operator new(0x10uLL);
  qword_100853B18 = (uint64_t)(v2 + 1);
  unk_100853B20 = v2 + 1;
  *v2 = xmmword_1004569A0;
  qword_100853B10 = (uint64_t)v2;
  __cxa_atexit((void (*)(void *))sub_1000325D8, &qword_100853B10, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))&std::mutex::~mutex, &stru_100850D30, (void *)&_mh_execute_header);
  xmmword_100853B28 = 0u;
  unk_100853B38 = 0u;
  dword_100853B48 = 1065353216;
  __cxa_atexit((void (*)(void *))sub_100032608, &xmmword_100853B28, (void *)&_mh_execute_header);
  xmmword_100853B50 = 0u;
  unk_100853B60 = 0u;
  dword_100853B70 = 1065353216;
  __cxa_atexit((void (*)(void *))sub_10003260C, &xmmword_100853B50, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

_QWORD *sub_10003B278@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FAEC8[a1]);
}

_QWORD *sub_10003B28C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FAF20[a1]);
}

_QWORD *sub_10003B2A0@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FAF68[a1]);
}

_QWORD *sub_10003B2B4@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FAF88[a1]);
}

void sub_10003B484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_10003B5E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10003B6C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)PRBeaconRangingClientProxy;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_10003B838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11, uint64_t a12, char a13)
{
  if (a10)
    std::__shared_weak_count::__release_weak(a10);
  sub_10001AE68((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_10003B904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10001AE68((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10003B994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_10003B9AC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBA3C();
  }
  else
  {
    objc_msgSend(v5, "didFailWithError:", *(_QWORD *)(a1 + 32));
  }

}

void sub_10003BA28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10003BC90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  void *v29;

  std::mutex::unlock(a10);
  sub_10001AE30((uint64_t)&a29);

  _Unwind_Resume(a1);
}

void sub_10003BCF4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBA3C();
  }
  else
  {
    objc_msgSend(v5, "didReceiveNewSolutions:", *(_QWORD *)(a1 + 32));
  }

}

void sub_10003BD70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10003BDD4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBA3C();
  }
  else
  {
    objc_msgSend(v5, "rangingServiceDidUpdateState:cause:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  }

}

void sub_10003BE50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10003BEE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10001AE30(v1 - 32);
  _Unwind_Resume(a1);
}

void sub_10003BEF4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBA3C();
  }
  else
  {
    objc_msgSend(v5, "rangingRequestDidUpdateStatus:", *(_QWORD *)(a1 + 32));
  }

}

void sub_10003BF70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10003C148(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10003C354(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10003C8CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;
  uint64_t v23;
  void *v25;

  v25 = *(void **)(v23 - 144);
  if (v25)
  {
    *(_QWORD *)(v23 - 136) = v25;
    operator delete(v25);
  }

  _Unwind_Resume(a1);
}

char *sub_10003CA08(void **a1, int *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  int v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (v7 >= (unint64_t)v6)
  {
    v10 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - (_QWORD)*a1) >> 3);
    v11 = v10 + 1;
    if (v10 + 1 > 0x666666666666666)
      sub_100026E7C();
    v12 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - (_BYTE *)*a1) >> 3);
    if (2 * v12 > v11)
      v11 = 2 * v12;
    if (v12 >= 0x333333333333333)
      v13 = 0x666666666666666;
    else
      v13 = v11;
    v14 = (char *)sub_10003E110(v4, v13);
    v15 = &v14[40 * v10];
    v17 = &v14[40 * v16];
    *(_DWORD *)v15 = 2;
    v15[4] = 0;
    *((_WORD *)v15 + 10) = 0;
    v15[29] = 0;
    v18 = *a2;
    *((_WORD *)v15 + 17) = *((_WORD *)a2 + 2);
    *(_DWORD *)(v15 + 30) = v18;
    v15[36] = 1;
    v9 = v15 + 40;
    v20 = (char *)*a1;
    v19 = (char *)a1[1];
    if (v19 != *a1)
    {
      do
      {
        v21 = *(_OWORD *)(v19 - 40);
        v22 = *(_OWORD *)(v19 - 24);
        *(_QWORD *)(v15 - 11) = *(_QWORD *)(v19 - 11);
        *(_OWORD *)(v15 - 24) = v22;
        *(_OWORD *)(v15 - 40) = v21;
        v15 -= 40;
        v19 -= 40;
      }
      while (v19 != v20);
      v19 = (char *)*a1;
    }
    *a1 = v15;
    a1[1] = v9;
    a1[2] = v17;
    if (v19)
      operator delete(v19);
  }
  else
  {
    *(_DWORD *)v7 = 2;
    *(_BYTE *)(v7 + 4) = 0;
    *(_WORD *)(v7 + 20) = 0;
    *(_BYTE *)(v7 + 29) = 0;
    v8 = *a2;
    *(_WORD *)(v7 + 34) = *((_WORD *)a2 + 2);
    *(_DWORD *)(v7 + 30) = v8;
    *(_BYTE *)(v7 + 36) = 1;
    v9 = (char *)(v7 + 40);
  }
  a1[1] = v9;
  return v9 - 40;
}

void sub_10003CCD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_10003D264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  sub_10001AE68((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_10003D728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

id sub_10003D7B4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v6[0] = CFSTR("numOfResponders");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 40)));
  v6[1] = CFSTR("sessionDuration");
  v7[0] = v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 32)));
  v7[1] = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v7, v6, 2));

  return v4;
}

void sub_10003D880(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

id sub_10003D8A8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v6[0] = CFSTR("responderLatency");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 32)));
  v6[1] = CFSTR("numOfResponders");
  v7[0] = v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 40)));
  v7[1] = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v7, v6, 2));

  return v4;
}

void sub_10003D974(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_10003DE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  void *v17;
  void *v18;
  void *v19;

  sub_10001AE68((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_10003DFA4(void **a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;

  v4 = operator new(0x48uLL);
  sub_10003E004(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_10001B020((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_10003DFF0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_10003E004(_QWORD *a1, void **a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1007FA3F0;
  sub_1002A0EE4((uint64_t)(a1 + 3), *a2);
  return a1;
}

void sub_10003E03C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_10003E050(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  unint64_t v7;
  uint64_t **v8;
  unint64_t v9;
  uint64_t *v10;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *a2;
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v5;
        v9 = v5[4];
        if (v7 >= v9)
          break;
        v5 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (v9 >= v7)
        break;
      v5 = v8[1];
      if (!v5)
      {
        v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v8 = a1 + 1;
LABEL_10:
    v10 = (uint64_t *)operator new(0x30uLL);
    v10[4] = *a3;
    v10[5] = a3[1];
    sub_1000272A8(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

void *sub_10003E110(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667)
    sub_1000260B0();
  return operator new(40 * a2);
}

void sub_10003E158()
{
  operator delete();
}

_QWORD *sub_10003E16C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_1007FADC8;
  result[1] = v3;
  return result;
}

uint64_t sub_10003E1A0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_1007FADC8;
  a2[1] = v2;
  return result;
}

void sub_10003E1BC(uint64_t a1, id *a2)
{
  id v3;

  v3 = *a2;
  (*(void (**)(void))(**(_QWORD **)(a1 + 8) + 16))();

}

void sub_10003E220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_10003E234(uint64_t a1, uint64_t a2)
{
  if (sub_10003E27C(a2, (uint64_t)&off_1007FAE38))
    return a1 + 8;
  else
    return 0;
}

_UNKNOWN **sub_10003E270()
{
  return &off_1007FAE38;
}

BOOL sub_10003E27C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  if (v2 == v3)
    return 1;
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3))
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  return 0;
}

void sub_10003E2CC()
{
  operator delete();
}

_QWORD *sub_10003E2E0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_1007FAE58;
  result[1] = v3;
  return result;
}

uint64_t sub_10003E314(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_1007FAE58;
  a2[1] = v2;
  return result;
}

void sub_10003E330(uint64_t a1, id *a2)
{
  id v3;

  v3 = *a2;
  (*(void (**)(void))(**(_QWORD **)(a1 + 8) + 16))();

}

void sub_10003E394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_10003E3A8(uint64_t a1, uint64_t a2)
{
  if (sub_10003E27C(a2, (uint64_t)&off_1007FAEB8))
    return a1 + 8;
  else
    return 0;
}

_UNKNOWN **sub_10003E3E4()
{
  return &off_1007FAEB8;
}

void sub_10003E3F0(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_10003E3F0(a1, *a2);
    sub_10003E3F0(a1, a2[1]);
    operator delete(a2);
  }
}

void sub_10003E430()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_10003E4AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_10003E4C4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_10003E540(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_10003E558()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_10003E5D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_10003E5EC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_10003E668(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_10003E680()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_10003E6FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_10003E714()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_10003E790(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_10003E7A8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_10003E824(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_10003E83C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_10003E8B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_10003E8D0()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456A28;
      v1[1] = unk_100456A38;
      v1[2] = xmmword_100456A48;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_10003E970(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_10003E988()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853B90 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853B80 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853B80, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853BA8 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853B98 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853B98, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100853BC0 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853BB0 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853BB0, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853BD8 = v15->__r_.__value_.__r.__words[2];
  xmmword_100853BC8 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853BC8, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100853BF0 = v19->__r_.__value_.__r.__words[2];
  xmmword_100853BE0 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853BE0, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100853C08 = v23->__r_.__value_.__r.__words[2];
  xmmword_100853BF8 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853BF8, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100853C20 = v27->__r_.__value_.__r.__words[2];
  xmmword_100853C10 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853C10, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100853C38 = v31->__r_.__value_.__r.__words[2];
  xmmword_100853C28 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853C28, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100853C50 = v35->__r_.__value_.__r.__words[2];
  xmmword_100853C40 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853C40, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10003EF7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double sub_10003EFF0(float a1, float a2)
{
  __float2 v3;
  __float2 v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  double result;
  float32x4_t v10;

  v3 = __sincosf_stret(a1 * 0.5);
  v10 = vmulq_n_f32((float32x4_t)xmmword_100456C00, v3.__sinval);
  v4 = __sincosf_stret(a2 * 0.5);
  v5 = vmulq_n_f32((float32x4_t)xmmword_100456C10, v4.__sinval);
  v6.i32[0] = LODWORD(v4.__cosval);
  v6.f32[1] = -v5.f32[2];
  v6.i32[2] = v5.i32[1];
  *(float32x2_t *)v7.f32 = vneg_f32(*(float32x2_t *)v5.f32);
  v6.i32[3] = v7.i32[0];
  v8.i32[0] = vdupq_laneq_s32((int32x4_t)v5, 2).u32[0];
  v8.i32[1] = LODWORD(v4.__cosval);
  v8.i64[1] = v7.i64[0];
  v7.i32[0] = vdup_lane_s32(*(int32x2_t *)v7.f32, 1).u32[0];
  v7.i32[1] = v5.i32[0];
  v7.i32[2] = LODWORD(v4.__cosval);
  v7.f32[3] = -v5.f32[2];
  v5.i32[3] = LODWORD(v4.__cosval);
  *(_QWORD *)&result = vmlaq_n_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v6, v10.f32[0]), v8, *(float32x2_t *)v10.f32, 1), v7, v10, 2), v5, v3.__cosval).u64[0];
  return result;
}

double sub_10003F09C(float *a1)
{
  __float2 v2;

  v2 = __sincosf_stret(*a1);
  return COERCE_DOUBLE(__PAIR64__(v2.__cosval * __sincosf_stret(a1[1]).__sinval, LODWORD(v2.__sinval)));
}

void sub_10003F134(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10003F150(unint64_t *a1, size_t a2)
{
  char *v4;
  char *v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char v15;

  v5 = (char *)a1[1];
  v4 = (char *)a1[2];
  if (v4 - v5 >= a2)
  {
    if (a2)
    {
      bzero((void *)a1[1], a2);
      v5 += a2;
    }
    a1[1] = (unint64_t)v5;
  }
  else
  {
    v6 = *a1;
    v7 = &v5[-*a1];
    v8 = (unint64_t)&v7[a2];
    if ((uint64_t)&v7[a2] < 0)
      sub_100026E7C();
    v9 = (unint64_t)&v4[-v6];
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x3FFFFFFFFFFFFFFFLL)
      v10 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v10 = v8;
    if (v10)
      v11 = (unint64_t)operator new(v10);
    else
      v11 = 0;
    v12 = &v7[v11];
    v13 = (char *)(v11 + v10);
    bzero(v12, a2);
    if (v5 == (char *)v6)
    {
      v11 = (unint64_t)v12;
    }
    else
    {
      v14 = &v5[~v6];
      do
      {
        v15 = *--v5;
        (v14--)[v11] = v15;
      }
      while (v5 != (char *)v6);
      v5 = (char *)*a1;
    }
    *a1 = v11;
    a1[1] = (unint64_t)&v12[a2];
    a1[2] = (unint64_t)v13;
    if (v5)
      operator delete(v5);
  }
}

_QWORD *sub_10003F278@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB070[a1]);
}

_QWORD *sub_10003F28C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB0C8[a1]);
}

_QWORD *sub_10003F2A0@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB110[a1]);
}

_QWORD *sub_10003F2B4@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB130[a1]);
}

void sub_10003F4D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10003F73C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_10003F75C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBBD8();
  }
  else
  {
    objc_msgSend(v5, "didFailWithError:", *(_QWORD *)(a1 + 32));
  }

}

void sub_10003F7D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10003F91C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "handleError:", *(_QWORD *)(a1 + 32));

}

void sub_10003F958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10003FA80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10003FCDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10003FD18(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id v4;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v4 = objc_loadWeakRetained(v2);
    objc_msgSend(v4, "handleError:", *(_QWORD *)(a1 + 32));

  }
}

void sub_10003FD88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10003FF70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10003FFB4(id *a1)
{
  id *v2;
  id WeakRetained;
  _QWORD *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  _BOOL4 v9;
  void *v10;
  id v11;
  void *v12;
  unsigned int v13;
  int v14;
  NSObject *v15;
  id v16;
  id v17;
  int v18;
  NSObject *v19;
  id v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  id v24;
  id v25;
  NSObject *v26;
  id v27;
  id v28;
  NSObject *v29;
  NSObject *v30;
  id v31;
  id v32;
  void **v33;
  uint64_t v34;
  void (*v35)(uint64_t, void *, void *);
  void *v36;
  id v37;
  id v38;
  NSErrorUserInfoKey v39;
  const __CFString *v40;
  uint8_t buf[4];
  id v42;

  v2 = a1 + 6;
  WeakRetained = objc_loadWeakRetained(a1 + 6);

  if (WeakRetained)
  {
    v4 = objc_loadWeakRetained(v2);
    v5 = v4;
    if (!*((_BYTE *)v4 + 58))
    {
      v6 = (void *)v4[1];
      v33 = _NSConcreteStackBlock;
      v34 = 3221225472;
      v35 = sub_100040588;
      v36 = &unk_1007FAFD8;
      v37 = a1[4];
      v38 = a1[5];
      objc_msgSend(v6, "actOnRemoteObjectAndScheduleBarrierBlock:", &v33);

    }
    v7 = a1[5];
    if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "domain"));
      if (objc_msgSend(v8, "isEqualToString:", kCLErrorDomainPrivate))
      {
        v9 = objc_msgSend(a1[5], "code") == (id)2;

        if (v9)
        {
          v39 = NSLocalizedDescriptionKey;
          v40 = CFSTR("Failed to resolve UUID");
          v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v40, &v39, 1));
          v11 = PRErrorWithCodeAndUserInfo(303, v10);
          v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

          v13 = *((_DWORD *)v5 + 18);
          if (v13 <= 8)
          {
            if (((1 << v13) & 0x1EE) != 0)
            {
              objc_msgSend(v5, "handleError:", v12);
            }
            else if (v13 == 4)
            {
              v30 = (id)qword_10085F520;
              if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
              {
                v31 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
                v32 = objc_msgSend(v31, "UTF8String");
                *(_DWORD *)buf = 136315138;
                v42 = v32;
                _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "#btranging-retry Already UT ranging - ignored failed to connect due to failed token error on device %s", buf, 0xCu);

              }
            }
          }

          goto LABEL_35;
        }
      }
      else
      {

      }
      v18 = *((_DWORD *)v5 + 18);
      if ((v18 - 2) < 2)
      {
        v23 = (id)qword_10085F520;
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          v24 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
          v25 = objc_msgSend(v24, "UTF8String");
          *(_DWORD *)buf = 136315138;
          v42 = v25;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startUTAggressiveAdvertisement on device %s", buf, 0xCu);

        }
        objc_msgSend(*((id *)v5 + 8), "connectDevice:", a1[4]);
        v22 = 2;
      }
      else
      {
        if ((v18 - 5) >= 2)
        {
          if (v18 == 8)
          {
            objc_msgSend(v5, "setCurrentTask:", 0);
            objc_msgSend(v5, "informDelegateOwnerRangeStoppedonDevice:", a1[4]);
          }
          goto LABEL_35;
        }
        v19 = (id)qword_10085F520;
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          v20 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
          v21 = objc_msgSend(v20, "UTF8String");
          *(_DWORD *)buf = 136315138;
          v42 = v21;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startAggressiveAdvertisement on device %s", buf, 0xCu);

        }
        objc_msgSend(*((id *)v5 + 8), "connectDevice:", a1[4]);
        v22 = 5;
      }
    }
    else
    {
      v14 = *((_DWORD *)v5 + 18);
      if (v14 == 5)
      {
        v26 = (id)qword_10085F520;
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          v27 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
          v28 = objc_msgSend(v27, "UTF8String");
          *(_DWORD *)buf = 136315138;
          v42 = v28;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "#btranging-retry command startAggressiveAdvertisingOnDevice on device %s", buf, 0xCu);

        }
        objc_msgSend(*((id *)v5 + 8), "startAggressiveAdvertisingOnDevice:withTimeout:", a1[4], 30);
        v22 = 6;
      }
      else
      {
        if (v14 == 4)
        {
          v29 = qword_10085F520;
          if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "#btranging-retry received didConnect when UT ranging - resending agg adv", buf, 2u);
          }
        }
        else
        {
          if (v14 != 2)
          {
LABEL_35:

            return;
          }
          v15 = (id)qword_10085F520;
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          {
            v16 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
            v17 = objc_msgSend(v16, "UTF8String");
            *(_DWORD *)buf = 136315138;
            v42 = v17;
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#btranging-retry command startUTAggressiveAdvertisement on device %s", buf, 0xCu);

          }
        }
        objc_msgSend(*((id *)v5 + 8), "startUnauthorizedAggressiveAdvertisingOnDevice:", a1[4], v33, v34, v35, v36);
        v22 = 3;
      }
    }
    objc_msgSend(v5, "setCurrentTask:", v22, v33, v34, v35, v36);
    goto LABEL_35;
  }
}

void sub_1000404B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v2;

  _Unwind_Resume(a1);
}

void sub_100040588(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBBD8();
  }
  else
  {
    objc_msgSend(v5, "didConnectDevice:error:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  }

}

void sub_100040604(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000407B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1000407F0(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id *v4;
  id *v5;
  int v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  int v12;
  id v13;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v4 = (id *)objc_loadWeakRetained(v2);
    v5 = v4;
    v6 = *((_DWORD *)v4 + 18);
    if ((v6 - 5) < 3)
    {
      v10 = (id)qword_10085F520;
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v11 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
        v12 = 136315138;
        v13 = objc_msgSend(v11, "UTF8String");
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startAggressiveAdvertisement on device %s", (uint8_t *)&v12, 0xCu);

      }
      objc_msgSend(v5[8], "connectDevice:", *(_QWORD *)(a1 + 32));
      v9 = 5;
    }
    else
    {
      if ((v6 - 2) >= 2)
      {
        if (v6 == 8)
        {
          objc_msgSend(v4, "setCurrentTask:", 0);
          objc_msgSend(v5, "informDelegateOwnerRangeStoppedonDevice:", *(_QWORD *)(a1 + 32));
        }
        goto LABEL_11;
      }
      v7 = (id)qword_10085F520;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        v8 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
        v12 = 136315138;
        v13 = objc_msgSend(v8, "UTF8String");
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startUTAggressiveAdvertisement on device %s", (uint8_t *)&v12, 0xCu);

      }
      objc_msgSend(v5[8], "connectDevice:", *(_QWORD *)(a1 + 32));
      v9 = 2;
    }
    objc_msgSend(v5, "setCurrentTask:", v9);
LABEL_11:

  }
}

void sub_1000409C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100040B48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_100040B70(id *a1)
{
  id *v2;
  id WeakRetained;
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  unsigned int v8;
  id v9;
  int v10;
  NSObject *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  _QWORD v17[4];
  id v18;
  id v19;
  id v20;
  uint8_t buf[4];
  id v22;
  __int16 v23;
  unsigned int v24;
  __int16 v25;
  id v26;

  v2 = a1 + 7;
  WeakRetained = objc_loadWeakRetained(a1 + 7);

  if (WeakRetained)
  {
    v4 = objc_loadWeakRetained(v2);
    v5 = (id)qword_10085F520;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
      v7 = objc_msgSend(v6, "UTF8String");
      v8 = objc_msgSend(a1[5], "intValue");
      v9 = a1[6];
      *(_DWORD *)buf = 136315650;
      v22 = v7;
      v23 = 1024;
      v24 = v8;
      v25 = 2112;
      v26 = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry _accessoryManager didFetchTxPower from %s txPower:%d #error:%@", buf, 0x1Cu);

    }
    v10 = *((_DWORD *)v4 + 18);
    if (a1[6])
    {
      if (v10 == 1)
      {
        v11 = (id)qword_10085F520;
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          v12 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
          v13 = objc_msgSend(v12, "UTF8String");
          *(_DWORD *)buf = 136315138;
          v22 = v13;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt to fetch tx power on device %s", buf, 0xCu);

        }
LABEL_14:

        objc_msgSend(*((id *)v4 + 8), "fetchTxPowerFromDevice:asOwner:", a1[4], *((_BYTE *)v4 + 56) == 0);
      }
    }
    else if (v10 == 1)
    {
      if (objc_msgSend(a1[5], "intValue") + 50 > 0x64)
      {
        v11 = (id)qword_10085F520;
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          v15 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
          v16 = objc_msgSend(v15, "UTF8String");
          *(_DWORD *)buf = 136315138;
          v22 = v16;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#btranging-retry received unfeasible Tx Power from device - reattempt to fetch tx power on device %s", buf, 0xCu);

        }
        goto LABEL_14;
      }
      objc_msgSend(v4, "setCurrentTask:", 0);
      *((_BYTE *)v4 + 57) = 1;
      v14 = (void *)*((_QWORD *)v4 + 1);
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      v17[2] = sub_100040EE0;
      v17[3] = &unk_1007FB028;
      v18 = a1[5];
      v19 = a1[4];
      v20 = a1[6];
      objc_msgSend(v14, "actOnRemoteObjectAndScheduleBarrierBlock:", v17);

    }
  }
}

void sub_100040E5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100040EE0(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBBD8();
  }
  else
  {
    objc_msgSend(v5, "didFetchTxPower:fromDevice:withError:", a1[4], a1[5], a1[6]);
  }

}

void sub_100040F60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100041094(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1000410B8(id *a1)
{
  id *v2;
  id WeakRetained;
  id *v4;
  NSObject *v5;
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  id v10;
  id v11;
  id v12;
  void **v13;
  uint64_t v14;
  void (*v15)(uint64_t, void *, void *);
  void *v16;
  id v17;
  id v18;
  uint8_t buf[4];
  id v20;
  __int16 v21;
  id v22;

  v2 = a1 + 6;
  WeakRetained = objc_loadWeakRetained(a1 + 6);

  if (WeakRetained)
  {
    v4 = (id *)objc_loadWeakRetained(v2);
    v5 = (id)qword_10085F520;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
      v7 = objc_msgSend(v6, "UTF8String");
      v8 = a1[5];
      *(_DWORD *)buf = 136315394;
      v20 = v7;
      v21 = 2112;
      v22 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry _accessoryManager didStartUnauthorizedAggressiveAdvertisingOnDevice %s #error:%@", buf, 0x16u);

    }
    if (a1[5])
    {
      if (((_DWORD)v4[9] & 0xFFFFFFFE) == 2)
      {
        v9 = (id)qword_10085F520;
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          v10 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
          v11 = objc_msgSend(v10, "UTF8String");
          *(_DWORD *)buf = 136315138;
          v20 = v11;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startUTAggressiveAdvertisement on device %s", buf, 0xCu);

        }
        objc_msgSend(v4[8], "connectDevice:", a1[4]);
        objc_msgSend(v4, "setCurrentTask:", 2);
      }
    }
    else
    {
      v12 = v4[1];
      v13 = _NSConcreteStackBlock;
      v14 = 3221225472;
      v15 = sub_10004135C;
      v16 = &unk_1007FAFD8;
      v17 = a1[4];
      v18 = a1[5];
      objc_msgSend(v12, "actOnRemoteObjectAndScheduleBarrierBlock:", &v13);
      if (((_DWORD)v4[9] & 0xFFFFFFFE) == 2)
        objc_msgSend(v4, "setCurrentTask:", 4, v13, v14, v15, v16, v17);

    }
  }
}

void sub_1000412E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004135C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBBD8();
  }
  else
  {
    objc_msgSend(v5, "didStartRangingOnDevice:withError:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  }

}

void sub_1000413D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10004150C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100041530(id *a1)
{
  id *v2;
  id WeakRetained;
  id *v4;
  NSObject *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  _BOOL4 v11;
  NSObject *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  int v19;
  NSObject *v20;
  id v21;
  id v22;
  NSObject *v23;
  id v24;
  id v25;
  void **v26;
  uint64_t v27;
  void (*v28)(uint64_t, void *, void *);
  void *v29;
  id v30;
  id v31;
  NSErrorUserInfoKey v32;
  const __CFString *v33;
  uint8_t buf[4];
  id v35;
  __int16 v36;
  id v37;

  v2 = a1 + 6;
  WeakRetained = objc_loadWeakRetained(a1 + 6);

  if (WeakRetained)
  {
    v4 = (id *)objc_loadWeakRetained(v2);
    v5 = (id)qword_10085F520;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
      v7 = objc_msgSend(v6, "UTF8String");
      v8 = a1[5];
      *(_DWORD *)buf = 136315394;
      v35 = v7;
      v36 = 2112;
      v37 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry _accessoryManager didStartAggressiveAdvertisingOnDevice %s #error:%@", buf, 0x16u);

    }
    v9 = a1[5];
    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "domain"));
      if (objc_msgSend(v10, "isEqualToString:", kCLErrorDomainPrivate))
      {
        v11 = objc_msgSend(a1[5], "code") == (id)27;

        if (v11)
        {
          if ((*((_DWORD *)v4 + 18) - 5) >= 2)
          {
LABEL_24:

            return;
          }
          v12 = (id)qword_10085F520;
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            v13 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
            v14 = objc_msgSend(v13, "UTF8String");
            *(_DWORD *)buf = 136315138;
            v35 = v14;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#btranging-retry could not start ranging - invalid state on device %s", buf, 0xCu);

          }
          objc_msgSend(v4[8], "stopMonitoringForAvengerAdvertisementsForBTFinding");
          v32 = NSLocalizedDescriptionKey;
          v33 = CFSTR("Invalid state for start agg adv");
          v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1));
          v16 = PRErrorWithCodeAndUserInfo(304, v15);
          v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

          objc_msgSend(v4, "handleError:", v17);
LABEL_23:

          goto LABEL_24;
        }
      }
      else
      {

      }
      if ((*((_DWORD *)v4 + 18) - 5) <= 1)
      {
        v20 = (id)qword_10085F520;
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          v21 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString")));
          v22 = objc_msgSend(v21, "UTF8String");
          *(_DWORD *)buf = 136315138;
          v35 = v22;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startAggressiveAdvertisement on device %s", buf, 0xCu);

        }
        objc_msgSend(v4[8], "connectDevice:", a1[4]);
        objc_msgSend(v4, "setCurrentTask:", 5);
      }
      goto LABEL_24;
    }
    v18 = v4[1];
    v26 = _NSConcreteStackBlock;
    v27 = 3221225472;
    v28 = sub_1000419D0;
    v29 = &unk_1007FAFD8;
    v30 = a1[4];
    v31 = a1[5];
    objc_msgSend(v18, "actOnRemoteObjectAndScheduleBarrierBlock:", &v26);
    v19 = *((_DWORD *)v4 + 18);
    if ((v19 - 5) >= 2)
    {
      if (v19 == 8)
      {
        v23 = (id)qword_10085F520;
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          v24 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString", v26, v27, v28, v29)));
          v25 = objc_msgSend(v24, "UTF8String");
          *(_DWORD *)buf = 136315138;
          v35 = v25;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#btranging-retry command to stop agg adv on device %s", buf, 0xCu);

        }
        objc_msgSend(v4[8], "stopAggressiveAdvertisingOnDevice:", a1[4]);
      }
    }
    else
    {
      objc_msgSend(v4, "setCurrentTask:", 7, v26, v27, v28, v29);
    }

    v17 = v30;
    goto LABEL_23;
  }
}

void sub_100041900(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1000419D0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBBD8();
  }
  else
  {
    objc_msgSend(v5, "didStartRangingOnDevice:withError:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  }

}

void sub_100041A4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100041B80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100041BA4(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  uint64_t v8;
  int v9;
  NSObject *v10;
  id v11;
  id v12;
  NSObject *v13;
  id v14;
  id v15;
  int v16;
  id v17;
  __int16 v18;
  uint64_t v19;

  v2 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));

  if (WeakRetained)
  {
    v4 = objc_loadWeakRetained(v2);
    v5 = (id)qword_10085F520;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
      v7 = objc_msgSend(v6, "UTF8String");
      v8 = *(_QWORD *)(a1 + 40);
      v16 = 136315394;
      v17 = v7;
      v18 = 2112;
      v19 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry _accessoryManager didStopAggressiveAdvertisingOnDevice %s #error:%@", (uint8_t *)&v16, 0x16u);

    }
    v9 = *((_DWORD *)v4 + 18);
    if (*(_QWORD *)(a1 + 40))
    {
      if (v9 == 8)
      {
        v10 = (id)qword_10085F520;
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          v11 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
          v12 = objc_msgSend(v11, "UTF8String");
          v16 = 136315138;
          v17 = v12;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#btranging-retry command to reattempt stopAggressiveAdvertising on device %s", (uint8_t *)&v16, 0xCu);

        }
        objc_msgSend(*((id *)v4 + 8), "stopAggressiveAdvertisingOnDevice:", *(_QWORD *)(a1 + 32));
      }
    }
    else if ((v9 - 5) >= 3)
    {
      if (v9 == 8)
      {
        objc_msgSend(v4, "setCurrentTask:", 0);
        objc_msgSend(v4, "informDelegateOwnerRangeStoppedonDevice:", *(_QWORD *)(a1 + 32));
      }
    }
    else
    {
      v13 = (id)qword_10085F520;
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        v14 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
        v15 = objc_msgSend(v14, "UTF8String");
        v16 = 136315138;
        v17 = v15;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#btranging-retry received didStopAggressiveAdvertising for %s when owner ranging - reattempt connect for startAggressiveAdvertisement", (uint8_t *)&v16, 0xCu);

      }
      objc_msgSend(*((id *)v4 + 8), "connectDevice:", *(_QWORD *)(a1 + 32));
      objc_msgSend(v4, "setCurrentTask:", 5);
    }

  }
}

void sub_100041DF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100041F78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100041F9C(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  uint64_t v8;
  int v9;
  NSObject *v10;
  id v11;
  id v12;
  int v13;
  id v14;
  __int16 v15;
  uint64_t v16;

  v2 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));

  if (WeakRetained)
  {
    v4 = objc_loadWeakRetained(v2);
    v5 = (id)qword_10085F520;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
      v7 = objc_msgSend(v6, "UTF8String");
      v8 = *(_QWORD *)(a1 + 40);
      v13 = 136315394;
      v14 = v7;
      v15 = 2112;
      v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry _accessoryManager didCompleteAggressiveAdvertisingOnDevice %s #error:%@", (uint8_t *)&v13, 0x16u);

    }
    v9 = *((_DWORD *)v4 + 18);
    if (*(_QWORD *)(a1 + 40))
    {
      if ((v9 - 5) > 2)
      {
LABEL_12:

        return;
      }
      v10 = (id)qword_10085F520;
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
LABEL_11:

        objc_msgSend(*((id *)v4 + 8), "connectDevice:", *(_QWORD *)(a1 + 32));
        objc_msgSend(v4, "setCurrentTask:", 5);
        goto LABEL_12;
      }
    }
    else
    {
      if ((v9 - 5) >= 3)
      {
        if (v9 == 8)
        {
          objc_msgSend(v4, "setCurrentTask:", 0);
          objc_msgSend(v4, "informDelegateOwnerRangeStoppedonDevice:", *(_QWORD *)(a1 + 32));
        }
        goto LABEL_12;
      }
      v10 = (id)qword_10085F520;
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
    }
    v11 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
    v12 = objc_msgSend(v11, "UTF8String");
    v13 = 136315138;
    v14 = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#btranging-retry received didCompleteAggressiveAdvertisingOnDevice %s when owner ranging - reattempt connect for startAggressiveAdvertisement", (uint8_t *)&v13, 0xCu);

    goto LABEL_11;
  }
}

void sub_1000421E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100042450(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1000424B8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBBD8();
  }
  else
  {
    objc_msgSend(v5, "didReceiveNewBTRSSI:", *(_QWORD *)(a1 + 32));
  }

}

void sub_100042534(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000425C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1000425D8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBBD8();
  }
  else
  {
    objc_msgSend(v5, "didStopOwnerRangingOnDevice:withError:", *(_QWORD *)(a1 + 32), 0);
  }

}

void sub_100042658(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10004279C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10004290C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, id location)
{
  void *v16;
  void *v17;
  void *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_100042944(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id *v4;
  NSObject *v5;
  id v6;
  int v7;
  id v8;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v4 = (id *)objc_loadWeakRetained(v2);
    v5 = (id)qword_10085F520;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
      v7 = 136315138;
      v8 = objc_msgSend(v6, "UTF8String");
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry command accessory manager to fetch tx power for %s", (uint8_t *)&v7, 0xCu);

    }
    objc_msgSend(v4[8], "fetchTxPowerFromDevice:asOwner:", *(_QWORD *)(a1 + 32), *((_BYTE *)v4 + 56) == 0);

  }
}

void sub_100042A50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100042B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, id location)
{
  void *v16;
  void *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_100042BB8(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id *v4;
  NSObject *v5;
  NSObject *v6;
  id v7;
  id v8;
  int v9;
  id v10;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v4 = (id *)objc_loadWeakRetained(v2);
    v5 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry command startMonitoringForAdvertisements", (uint8_t *)&v9, 2u);
    }
    objc_msgSend(v4[8], "startMonitoringForAvengerAdvertisementsForBTFinding");
    v6 = (id)qword_10085F520;
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
      v8 = objc_msgSend(v7, "UTF8String");
      v9 = 136315138;
      v10 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#btranging-retry command connect to set agg adv on device %s", (uint8_t *)&v9, 0xCu);

    }
    objc_msgSend(v4[8], "connectDevice:", *(_QWORD *)(a1 + 32));

  }
}

void sub_100042CFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100042DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_100042E1C(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id *v3;
  NSObject *v4;
  uint8_t v5[16];

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));

  if (WeakRetained)
  {
    v3 = (id *)objc_loadWeakRetained(v1);
    v4 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#btranging-retry command stopMonitoringForAdvertisements", v5, 2u);
    }
    objc_msgSend(v3[8], "stopMonitoringForAvengerAdvertisementsForBTFinding");

  }
}

void sub_100042EB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100042FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, id location)
{
  void *v16;
  void *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_100042FFC(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id *v4;
  NSObject *v5;
  NSObject *v6;
  id v7;
  id v8;
  int v9;
  id v10;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v4 = (id *)objc_loadWeakRetained(v2);
    v5 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry command startMonitoringForAdvertisements", (uint8_t *)&v9, 2u);
    }
    objc_msgSend(v4[8], "startMonitoringForAvengerAdvertisementsForBTFinding");
    v6 = (id)qword_10085F520;
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
      v8 = objc_msgSend(v7, "UTF8String");
      v9 = 136315138;
      v10 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#btranging-retry command connect to set agg adv on device %s", (uint8_t *)&v9, 0xCu);

    }
    objc_msgSend(v4[8], "connectDevice:", *(_QWORD *)(a1 + 32));

  }
}

void sub_100043140(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100043268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, id location)
{
  void *v16;
  void *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_10004329C(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id *v4;
  NSObject *v5;
  id v6;
  NSObject *v7;
  int v8;
  id v9;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v4 = (id *)objc_loadWeakRetained(v2);
    v5 = (id)qword_10085F520;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString")));
      v8 = 136315138;
      v9 = objc_msgSend(v6, "UTF8String");
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry command stopAggressiveAdvertising on device %s", (uint8_t *)&v8, 0xCu);

    }
    objc_msgSend(v4[8], "stopAggressiveAdvertisingOnDevice:", *(_QWORD *)(a1 + 32));
    v7 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v8) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#btranging-retry command stopMonitoringForAdvertisements", (uint8_t *)&v8, 2u);
    }
    objc_msgSend(v4[8], "stopMonitoringForAvengerAdvertisementsForBTFinding");

  }
}

void sub_1000433E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1000434F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100043614(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1000436F4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_100043770(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_100043788()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_100043804(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_10004381C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_100043898(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_1000438B0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_10004392C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_100043944()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_1000439C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_1000439D8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_100043A54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_100043A6C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_100043AE8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_100043B00()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_100043B7C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_100043B94()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456C30;
      v1[1] = unk_100456C40;
      v1[2] = xmmword_100456C50;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_100043C34(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_100043C4C()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853C68 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853C58 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853C58, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853C80 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853C70 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853C70, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100853C98 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853C88 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853C88, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853CB0 = v15->__r_.__value_.__r.__words[2];
  xmmword_100853CA0 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853CA0, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100853CC8 = v19->__r_.__value_.__r.__words[2];
  xmmword_100853CB8 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853CB8, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100853CE0 = v23->__r_.__value_.__r.__words[2];
  xmmword_100853CD0 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853CD0, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100853CF8 = v27->__r_.__value_.__r.__words[2];
  xmmword_100853CE8 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853CE8, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100853D10 = v31->__r_.__value_.__r.__words[2];
  xmmword_100853D00 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853D00, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100853D28 = v35->__r_.__value_.__r.__words[2];
  xmmword_100853D18 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853D18, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100044240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1000442B4@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, (&off_1007FB198)[a1]);
}

_QWORD *sub_1000442C8@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, (&off_1007FB1F0)[a1]);
}

_QWORD *sub_1000442DC@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, (&off_1007FB238)[a1]);
}

_QWORD *sub_1000442F0@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, (&off_1007FB258)[a1]);
}

void sub_1000444F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id location)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  v17 = v16;

  _Unwind_Resume(a1);
}

void sub_10004466C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100044740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)PRRangingServiceProxy;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1000448B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11, uint64_t a12, char a13)
{
  if (a10)
    std::__shared_weak_count::__release_weak(a10);
  sub_10001AE68((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_100044980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10001AE68((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100044A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100044A28(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBCB4();
  }
  else
  {
    objc_msgSend(v5, "didFailWithError:", *(_QWORD *)(a1 + 32));
  }

}

void sub_100044AA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100044B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100044B48(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBCB4();
  }
  else
  {
    objc_msgSend(v5, "didReceiveNewSolutions:", *(_QWORD *)(a1 + 32));
  }

}

void sub_100044BC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100044C28(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBCB4();
  }
  else
  {
    objc_msgSend(v5, "rangingServiceDidUpdateState:cause:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  }

}

void sub_100044CA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100044D08(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBCB4();
  }
  else
  {
    objc_msgSend(v5, "rangingRequestDidUpdateStatus:", *(_QWORD *)(a1 + 32));
  }

}

void sub_100044D84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100044E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_100044E2C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBCB4();
  }
  else
  {
    objc_msgSend(v5, "remoteDevice:didChangeState:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  }

}

void sub_100044EA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100045920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, std::__shared_weak_count *a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,std::__shared_weak_count *a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  void *v32;
  void *v33;
  void *v34;

  _Unwind_Resume(a1);
}

void sub_100045EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_100046264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_10004635C(id *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;

  v4 = operator new(0x48uLL);
  sub_1000463BC(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_10001B020((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_1000463A8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1000463BC(_QWORD *a1, id *location)
{
  char v4;

  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1007FA3F0;
  sub_100046418((int)&v4, (uint64_t)(a1 + 3), location);
  return a1;
}

void sub_100046404(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100046418(int a1, uint64_t a2, id *location)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained(location);
  sub_1002A0EE4(a2, WeakRetained);

}

void sub_100046458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10004646C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_1000464E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_100046500()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_10004657C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_100046594()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_100046610(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_100046628()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_1000466A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_1000466BC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_100046738(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_100046750()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_1000467CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_1000467E4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_100046860(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_100046878()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_1000468F4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_10004690C()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456C60;
      v1[1] = *(_OWORD *)algn_100456C70;
      v1[2] = xmmword_100456C80;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_1000469AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_1000469C4()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853D40 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853D30 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853D30, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853D58 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853D48 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853D48, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100853D70 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853D60 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853D60, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853D88 = v15->__r_.__value_.__r.__words[2];
  xmmword_100853D78 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853D78, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100853DA0 = v19->__r_.__value_.__r.__words[2];
  xmmword_100853D90 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853D90, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100853DB8 = v23->__r_.__value_.__r.__words[2];
  xmmword_100853DA8 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853DA8, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100853DD0 = v27->__r_.__value_.__r.__words[2];
  xmmword_100853DC0 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853DC0, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100853DE8 = v31->__r_.__value_.__r.__words[2];
  xmmword_100853DD8 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853DD8, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100853E00 = v35->__r_.__value_.__r.__words[2];
  xmmword_100853DF0 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853DF0, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100046FB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_10004702C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB3E0[a1]);
}

_QWORD *sub_100047040@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB438[a1]);
}

_QWORD *sub_100047054@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB480[a1]);
}

_QWORD *sub_100047068@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB4A0[a1]);
}

void sub_100047160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  void *v15;
  char *v17;
  uint64_t v18;

  v17 = a15;
  if (a15 == &a12)
  {
    v18 = 4;
    v17 = &a12;
  }
  else
  {
    if (!a15)
      goto LABEL_6;
    v18 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_6:

  _Unwind_Resume(a1);
}

void sub_100047330(id a1, OS_xpc_object *a2)
{
  OS_xpc_object *v2;
  const char *string;
  NSObject *v4;
  int v5;
  const char *v6;

  v2 = a2;
  string = xpc_dictionary_get_string(v2, _xpc_event_key_name);
  v4 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 136315138;
    v6 = string;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[PRDaemon] Got iokit XPC event: %s", (uint8_t *)&v5, 0xCu);
  }

}

void sub_1000473F4(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_10004740C(id a1, OS_xpc_object *a2)
{
  OS_xpc_object *v2;
  const char *string;
  NSObject *v4;
  int v5;
  const char *v6;

  v2 = a2;
  string = xpc_dictionary_get_string(v2, _xpc_event_key_name);
  v4 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 136315138;
    v6 = string;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[PRDaemon] Got notifyd XPC event: %s", (uint8_t *)&v5, 0xCu);
  }

}

void sub_1000474D0(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1000474E8(id a1, OS_xpc_object *a2)
{
  OS_xpc_object *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  int v6;
  void *v7;

  v2 = a2;
  v3 = (id)qword_10085F520;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = CUPrintXPC(v2);
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    v6 = 138477827;
    v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[PRDaemon] Got CBDiscovery XPC event: %{private}@", (uint8_t *)&v6, 0xCu);

  }
}

void sub_1000475B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1000476D0(uint64_t a1)
{
  __CFNotificationCenter *DarwinNotifyCenter;
  __CFNotificationCenter *v3;
  uint64_t v4;
  int v5;
  NSObject *v6;
  _DWORD v7[2];

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(DarwinNotifyCenter, *(const void **)(a1 + 32), (CFNotificationCallback)sub_1000477D8, CFSTR("com.apple.mobile.keybagd.first_unlock"), 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  v3 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(v3, *(const void **)(a1 + 32), (CFNotificationCallback)sub_1000477D8, CFSTR("com.apple.mobile.keybagd.lock_status"), 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  v5 = MKBDeviceUnlockedSinceBoot(v4);
  v6 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[PRDaemon] Registered for MobileKeybag notifications. Checking MKBDeviceUnlockedSinceBoot: %d [<0 = error, 0 = no, 1 = yes]", (uint8_t *)v7, 8u);
  }
  if (v5 == 1)
    objc_msgSend(*(id *)(a1 + 32), "deviceHasUnlockedSinceBoot");
}

void sub_1000477D8(uint64_t a1, void *a2, uint64_t a3)
{
  int v5;
  NSObject *v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;

  v5 = MKBDeviceUnlockedSinceBoot(a1);
  v6 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v7 = 138412546;
    v8 = a3;
    v9 = 1024;
    v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[PRDaemon] MobileKeybag notification %@ fired. Checking MKBDeviceUnlockedSinceBoot: %d [<0 = error, 0 = no, 1 = yes]", (uint8_t *)&v7, 0x12u);
  }
  if (v5 == 1)
    objc_msgSend(a2, "deviceHasUnlockedSinceBoot");
}

void sub_100047918(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  _QWORD block[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(NSObject **)(v1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100047970;
  block[3] = &unk_1007FB340;
  block[4] = v1;
  dispatch_async(v2, block);
}

void sub_100047970(uint64_t a1)
{
  NSObject *v2;
  __CFNotificationCenter *DarwinNotifyCenter;
  __CFNotificationCenter *v4;
  void *v5;
  void *v6;
  void *v7;
  uint8_t v8[16];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[PRDaemon] Device unlocked since boot: performing actions", v8, 2u);
  }
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(DarwinNotifyCenter, *(const void **)(a1 + 32), CFSTR("com.apple.mobile.keybagd.first_unlock"), 0);
  v4 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(v4, *(const void **)(a1 + 32), CFSTR("com.apple.mobile.keybagd.lock_status"), 0);
  v5 = sub_1002CA108();
  sub_1002CA448((uint64_t)v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NIServerFindableDeviceProxySessionManager sharedInstance](NIServerFindableDeviceProxySessionManager, "sharedInstance"));
  objc_msgSend(v6, "notifyDeviceUnlockedSinceBoot");

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NIServerSystemConfigurator sharedInstance](NIServerSystemConfigurator, "sharedInstance"));
  objc_msgSend(v7, "activate");

}

void sub_100047A48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100047A9C()
{
  operator delete();
}

_QWORD *sub_100047AB0()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_1007FB370;
  return result;
}

void sub_100047AD4(uint64_t a1, _QWORD *a2)
{
  *a2 = off_1007FB370;
}

void sub_100047AEC(uint64_t a1, id *a2)
{
  id v2;
  NSObject *v3;
  std::runtime_error *exception;
  int v5;
  id v6;

  v2 = *a2;
  v3 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "[PRDaemon] PRRangingManager default error handler. Got error: %@", (uint8_t *)&v5, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "PRRangingManager default error handler.");
}

void sub_100047BA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_100047BC8(uint64_t a1, uint64_t a2)
{
  if (sub_10003E27C(a2, (uint64_t)&off_1007FB3D0))
    return a1 + 8;
  else
    return 0;
}

_UNKNOWN **sub_100047C04()
{
  return &off_1007FB3D0;
}

void sub_100047C10()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_100047C8C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_100047CA4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_100047D20(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_100047D38()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_100047DB4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_100047DCC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_100047E48(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_100047E60()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_100047EDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_100047EF4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_100047F70(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_100047F88()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_100048004(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_10004801C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_100048098(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_1000480B0()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456C90;
      v1[1] = unk_100456CA0;
      v1[2] = xmmword_100456CB0;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_100048150(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_100048168()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853E18 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853E08 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853E08, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853E30 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853E20 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853E20, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100853E48 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853E38 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853E38, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853E60 = v15->__r_.__value_.__r.__words[2];
  xmmword_100853E50 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853E50, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100853E78 = v19->__r_.__value_.__r.__words[2];
  xmmword_100853E68 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853E68, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100853E90 = v23->__r_.__value_.__r.__words[2];
  xmmword_100853E80 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853E80, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100853EA8 = v27->__r_.__value_.__r.__words[2];
  xmmword_100853E98 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853E98, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100853EC0 = v31->__r_.__value_.__r.__words[2];
  xmmword_100853EB0 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853EB0, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100853ED8 = v35->__r_.__value_.__r.__words[2];
  xmmword_100853EC8 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853EC8, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10004875C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000487D0(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, void *a10, uint64_t a11)
{
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v52;
  uint64_t v53;

  v18 = a2;
  v19 = a3;
  v20 = a4;
  v21 = a5;
  v52 = a10;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  sub_100027674(a1 + 48, a6);
  sub_100027674(a1 + 80, a7);
  sub_100027674(a1 + 112, a8);
  *(_DWORD *)(a1 + 144) = a9;
  v22 = v52;
  *(_QWORD *)(a1 + 152) = v22;
  *(_QWORD *)(a1 + 160) = a11;
  v23 = objc_msgSend(v18, "copy");
  v24 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v23;

  v25 = objc_msgSend(v19, "copy");
  v26 = *(void **)a1;
  *(_QWORD *)a1 = v25;

  v27 = objc_msgSend(v20, "copy");
  v28 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v27;

  v29 = objc_msgSend(v21, "copy");
  v30 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v29;

  if ((unint64_t)objc_msgSend(*(id *)a1, "length") > 6)
  {
    v32 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBDA8(v32, v33, v34, v35, v36, v37, v38, v39);
    v40 = *(_QWORD *)(a1 + 104);
    if (v40)
    {
      LODWORD(v53) = 2;
      (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v40 + 48))(v40, &v53);
    }
    v31 = 0xDEADDEADBEEFLL;
  }
  else
  {
    v53 = 0;
    objc_msgSend(*(id *)a1, "getBytes:length:", &v53, objc_msgSend(*(id *)a1, "length"));
    v31 = v53;
  }
  *(_QWORD *)(a1 + 16) = v31;
  if ((unint64_t)objc_msgSend(*(id *)(a1 + 8), "length") > 6)
  {
    v42 = qword_10085F520;
    if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_ERROR))
      sub_1003CBD74(v42, v43, v44, v45, v46, v47, v48, v49);
    v50 = *(_QWORD *)(a1 + 104);
    if (v50)
    {
      LODWORD(v53) = 2;
      (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v50 + 48))(v50, &v53);
    }
    v41 = 0xDEADDEADBEEFLL;
  }
  else
  {
    v53 = 0;
    objc_msgSend(*(id *)(a1 + 8), "getBytes:length:", &v53, objc_msgSend(*(id *)(a1 + 8), "length"));
    v41 = v53;
  }
  *(_QWORD *)(a1 + 24) = v41;

  return a1;
}

void sub_100048A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v19 = *(_QWORD **)(v12 + 136);
  if (v19 == v17)
  {
    v20 = 4;
    v19 = v17;
  }
  else
  {
    if (!v19)
      goto LABEL_6;
    v20 = 5;
  }
  (*(void (**)(void))(*v19 + 8 * v20))();
LABEL_6:
  v21 = *(_QWORD **)(v12 + 104);
  if (v21 == v16)
  {
    v22 = 4;
    v21 = v16;
  }
  else
  {
    if (!v21)
      goto LABEL_11;
    v22 = 5;
  }
  (*(void (**)(void))(*v21 + 8 * v22))();
LABEL_11:
  v23 = *(_QWORD **)(v12 + 72);
  if (v23 == v15)
  {
    v24 = 4;
    v23 = v15;
  }
  else
  {
    if (!v23)
      goto LABEL_16;
    v24 = 5;
  }
  (*(void (**)(void))(*v23 + 8 * v24))();
LABEL_16:

  _Unwind_Resume(a1);
}

uint64_t sub_100048B54(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, void *a10, uint64_t a11)
{
  return sub_1000487D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

BOOL sub_100048B68(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  _BOOL8 v11;

  v4 = *(id *)a1;
  v5 = *(id *)a2;
  if (objc_msgSend(v4, "isEqualToData:", v5))
  {
    v6 = *(id *)(a1 + 32);
    v7 = *(id *)(a2 + 32);
    if (objc_msgSend(v6, "isEqualToData:", v7))
    {
      v8 = *(id *)(a1 + 40);
      v9 = *(id *)(a2 + 40);
      v11 = objc_msgSend(v8, "isEqualToNumber:", v9)
         && *(_DWORD *)(a1 + 144) == *(_DWORD *)(a2 + 144)
         && *(_QWORD *)(a1 + 152) == *(_QWORD *)(a2 + 152)
         && *(_QWORD *)(a1 + 160) == *(_QWORD *)(a2 + 160);

    }
    else
    {
      v11 = 0;
    }

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

void sub_100048C70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

id sub_100048CA4(id *a1)
{
  return *a1;
}

id sub_100048CAC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_100048CB4(uint64_t a1)
{
  return *(id *)(a1 + 40);
}

uint64_t sub_100048CBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

id sub_100048CC4(uint64_t a1)
{
  return *(id *)(a1 + 152);
}

uint64_t sub_100048CCC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 160);
}

id sub_100048CD4(uint64_t a1)
{
  return *(id *)(a1 + 8);
}

uint64_t sub_100048CDC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_100048CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100027674(a2, a1 + 48);
}

uint64_t sub_100048CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100027674(a2, a1 + 80);
}

uint64_t sub_100048CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100027674(a2, a1 + 112);
}

void sub_1000496F8()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.nearbyd", "general");
  v1 = (void *)qword_10085F520;
  qword_10085F520 = (uint64_t)v0;

}

_QWORD *sub_100049728@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB588[a1]);
}

_QWORD *sub_10004973C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB5E0[a1]);
}

_QWORD *sub_100049750@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB628[a1]);
}

_QWORD *sub_100049764@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB648[a1]);
}

void sub_1000497AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100049AD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_100049C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)NIServerSessionContainer;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_100049D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10001AE68((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100049DBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100049E9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100049F28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10004A068(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004A4B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10004B51C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  void *v25;
  void *v26;
  void *v27;
  void *v28;

  _Unwind_Resume(a1);
}

void sub_10004B750(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_handleSpecializedSessionInvalidation:", v3);

}

void sub_10004B798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10004B7B0(uint64_t a1, uint64_t a2)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_handleSpecializedSessionBackgroundSupportUpdate:", a2);

}

void sub_10004B7EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10004BA58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004BBC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004BF14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004C08C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004C2DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004C554(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004C6D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004C834(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004CA94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004CD18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004CF40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004D138(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004D3A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004D5AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004D7AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004D908(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10004DA94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004DC48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004DE00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004DFAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004E148(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004E1F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  v11 = v10;

  _Unwind_Resume(a1);
}

void sub_10004E28C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  v11 = v10;

  _Unwind_Resume(a1);
}

void sub_10004E36C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10004E3E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10004E434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10004E4B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10004E7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  v26 = v24;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10004E8A4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10004E8B4(uint64_t a1)
{

}

void sub_10004E8BC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  NSObject *v7;
  NSErrorUserInfoKey v8;
  const __CFString *v9;

  v3 = a2;
  if (objc_msgSend(v3, "tokenVariant") == (id)1)
  {
    if (*(_BYTE *)(a1 + 56))
    {
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "addObject:", v3);
    }
    else
    {
      v4 = *(_QWORD *)(a1 + 40);
      v8 = NSLocalizedFailureReasonErrorKey;
      v9 = CFSTR("Not allowed to configure findable local device.");
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1));
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.NearbyInteraction"), -10020, v5));
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v6);

      v7 = (id)qword_10085F520;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
      {
        objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signingIdentity"));
        objc_msgSend(*(id *)(a1 + 32), "pid");
        sub_1003CC458();
      }

    }
  }

}

void sub_10004EA24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004ECC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10004ED60(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  NSObject *v7;
  NSErrorUserInfoKey v8;
  const __CFString *v9;

  v3 = a2;
  if (objc_msgSend(v3, "tokenVariant") == (id)1)
  {
    if (*(_BYTE *)(a1 + 56))
    {
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "addObject:", v3);
    }
    else
    {
      v4 = *(_QWORD *)(a1 + 40);
      v8 = NSLocalizedFailureReasonErrorKey;
      v9 = CFSTR("Not allowed to configure findable local device.");
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1));
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.NearbyInteraction"), -10020, v5));
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v6);

      v7 = (id)qword_10085F520;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
      {
        objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signingIdentity"));
        objc_msgSend(*(id *)(a1 + 32), "pid");
        sub_1003CC458();
      }

    }
  }

}

void sub_10004EEC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004F144(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10004F36C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10004F580(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10004F814(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10004F86C(uint64_t a1)
{
  id *WeakRetained;
  NSMutableDictionary *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id *v20;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v20 = WeakRetained;
    v3 = objc_opt_new(NSMutableDictionary);
    v4 = objc_loadWeakRetained(v20 + 39);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "allSessionsPrintableState"));
    -[NSMutableDictionary addEntriesFromDictionary:](v3, "addEntriesFromDictionary:", v5);

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NIServerSystemConfigurator sharedInstance](NIServerSystemConfigurator, "sharedInstance"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "printableState"));
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v7, CFSTR("System Configurator"));

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NIServerHomeDeviceService sharedInstance](NIServerHomeDeviceService, "sharedInstance"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "printableState"));
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v9, CFSTR("Home Device Service"));

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NIServerAccessoryGATTServiceManager sharedInstance](NIServerAccessoryGATTServiceManager, "sharedInstance"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "printableState"));
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v11, CFSTR("Accessory GATT Service"));

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NIServerNearbyAccessoryRangingService sharedInstance](NIServerNearbyAccessoryRangingService, "sharedInstance"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "printableState"));
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v13, CFSTR("Accessory Ranging Service"));

    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NIServerFindingSession sharedServicePrintableState](NIServerFindingSession, "sharedServicePrintableState"));
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v14, CFSTR("Finding Service"));

    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NIServerFindableDeviceProxySessionManager sharedInstance](NIServerFindableDeviceProxySessionManager, "sharedInstance"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "printableState"));
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v16, CFSTR("Findable Device"));

    v17 = sub_1002CA108();
    v18 = sub_1002C92DC((uint64_t)v17);
    v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    -[NSMutableDictionary addEntriesFromDictionary:](v3, "addEntriesFromDictionary:", v19);

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    WeakRetained = v20;
  }

}

void sub_10004FA7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10004FC94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10004FE9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1000500A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000501E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100050448(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1000506B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100050840(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  objc_destroyWeak((id *)(v2 - 40));

  _Unwind_Resume(a1);
}

void sub_100050858(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = WeakRetained;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "remote"));
    objc_msgSend(v3, "uwbSessionDidInvalidateWithError:", *(_QWORD *)(a1 + 32));

    WeakRetained = v4;
  }

}

void sub_1000508A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100050A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100050A3C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
    objc_msgSend(WeakRetained, "_updateClientAppVisibilityInterruption");

}

void sub_100050A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100050C68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100050ECC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1000510DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100051158(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100051230(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100051354(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100051470(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000518F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  void *v9;

  _Unwind_Resume(a1);
}

void sub_100051B08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100051C80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100051D38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100051F74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10005233C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100052464(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100052534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100052558(uint64_t a1, void *a2)
{
  id *WeakRetained;
  id *v4;
  id v5;

  v5 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained[23], "consumeBluetoothSample:", v5);

}

void sub_1000525A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100052914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  void *v31;

  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_1000529A8(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("    %@"), a2));
  objc_msgSend(v2, "addObject:");

}

void sub_100052A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100052C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100052C64(uint64_t a1)
{
  id *WeakRetained;
  NSObject *v3;
  void **v4;
  void **v5;
  id v6;
  void *v7;
  void *v8;
  void *__p[2];
  char v10;
  void *v11[2];
  char v12;
  uint8_t buf[4];
  void **v14;
  __int16 v15;
  void **v16;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained)
    goto LABEL_22;
  sub_10000BF04(v11, off_1007FB6A8[*(int *)(a1 + 40)]);
  sub_10000BF04(__p, off_1007FB6D0[*(int *)(a1 + 44)]);
  v3 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v4 = v11;
    if (v12 < 0)
      v4 = (void **)v11[0];
    v5 = __p;
    if (v10 < 0)
      v5 = (void **)__p[0];
    *(_DWORD *)buf = 136315394;
    v14 = v4;
    v15 = 2080;
    v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#ses-container,UWB system changed state: '%s' with cause: '%s'. Sending to specialized session", buf, 0x16u);
  }
  v6 = WeakRetained[23];
  if (v6)
  {
    if (objc_msgSend(v6, "requiresNarrowbandToRun") == (id)2)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_fatalErrorForUwbServiceState:cause:", *(unsigned int *)(a1 + 40), *(unsigned int *)(a1 + 44)));
      if (v7)
        goto LABEL_14;
      objc_msgSend(WeakRetained, "_updateInterruptionForUWBServiceState:cause:requiresNarrowBand:", *(unsigned int *)(a1 + 40), *(unsigned int *)(a1 + 44), 1);
    }
    else if (objc_msgSend(WeakRetained[23], "requiresUWBToRun") == (id)2)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_fatalErrorForUwbServiceState:cause:", *(unsigned int *)(a1 + 40), *(unsigned int *)(a1 + 44)));
      if (v7)
      {
LABEL_14:
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "remote"));
        objc_msgSend(v8, "uwbSessionDidFailWithError:", v7);

        goto LABEL_18;
      }
      objc_msgSend(WeakRetained, "_updateInterruptionForUWBServiceState:cause:requiresNarrowBand:", *(unsigned int *)(a1 + 40), *(unsigned int *)(a1 + 44), 0);
    }
    objc_msgSend(WeakRetained[23], "rangingServiceDidUpdateState:cause:", *(unsigned int *)(a1 + 40), *(unsigned int *)(a1 + 44));
  }
LABEL_18:
  if (v10 < 0)
    operator delete(__p[0]);
  if (v12 < 0)
    operator delete(v11[0]);
LABEL_22:

}

void sub_100052E68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  v23 = v21;

  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);

  _Unwind_Resume(a1);
}

void sub_100053188(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100053254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1000532E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10005335C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100053450(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100053494(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000534E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000537B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1000537E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::ios_base *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1 + 16;
  v3 = a1 + 24;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + *(_QWORD *)(v4 - 24)) = v5;
  *(_QWORD *)(a1 + 8) = 0;
  v6 = (std::ios_base *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 24));
  std::ios_base::init(v6, (void *)(a1 + 24));
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(v2 + *(_QWORD *)(v7 - 24)) = v8;
  *(_QWORD *)a1 = v9;
  std::streambuf::basic_streambuf(v3);
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 24;
  return a1;
}

void sub_1000538E8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  std::iostream::~basic_iostream(v2, v3 + 8);
  std::ios::~ios(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100053910(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = a1 + 24;
  *(_QWORD *)(a1 + 16) = v3;
  if (*(char *)(a1 + 111) < 0)
    operator delete(*(void **)(a1 + 88));
  std::streambuf::~streambuf(v4);
  std::ios::~ios(a1 + 128);
  return a1;
}

void sub_100053AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_100053D24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100053ED8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100054034(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10005421C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_100054440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  if (a17 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_100054620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100054718(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100054764(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000547B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000547FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000549C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_100054C60(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  const std::locale::facet *v10;
  uint64_t v11;
  _BYTE v13[16];
  std::locale v14;

  std::ostream::sentry::sentry(v13, a1);
  if (v13[0])
  {
    v6 = (uint64_t)a1 + *(_QWORD *)(*a1 - 24);
    v7 = *(_QWORD *)(v6 + 40);
    v8 = *(_DWORD *)(v6 + 8);
    v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)));
      v10 = std::locale::use_facet(&v14, &std::ctype<char>::id);
      v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20)
      v11 = a2 + a3;
    else
      v11 = a2;
    if (!sub_100054DC4(v7, a2, v11, a2 + a3, v6, (char)v9))
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 5);
  }
  std::ostream::sentry::~sentry(v13);
  return a1;
}

void sub_100054D68(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  _QWORD *v12;

  std::ostream::sentry::~sentry(&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(_QWORD *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x100054D48);
}

void sub_100054DB0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100054DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6;
  uint64_t v11;
  int64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v18;

  v6 = a1;
  if (a1)
  {
    v11 = *(_QWORD *)(a5 + 24);
    if (v11 <= a4 - a2)
      v12 = 0;
    else
      v12 = v11 - (a4 - a2);
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 96))(a1) != a3 - a2)
      return 0;
    if (v12 >= 1)
    {
      sub_100054F00(__p, v12, __c);
      v13 = v18 >= 0 ? __p : (void **)__p[0];
      v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(_QWORD *)v6 + 96))(v6, v13, v12);
      if (v18 < 0)
        operator delete(__p[0]);
      if (v14 != v12)
        return 0;
    }
    v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, a3, v15) == v15)
      *(_QWORD *)(a5 + 24) = 0;
    else
      return 0;
  }
  return v6;
}

void sub_100054EE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100054F00(_QWORD *__b, size_t __len, int __c)
{
  void *v6;
  size_t v7;
  size_t v8;

  if (__len >= 0x7FFFFFFFFFFFFFF8)
    sub_10000BD6C();
  if (__len >= 0x17)
  {
    v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v7 = __len | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((_BYTE *)__b + 23) = __len;
    v6 = __b;
    if (!__len)
      goto LABEL_9;
  }
  memset(v6, __c, __len);
LABEL_9:
  *((_BYTE *)v6 + __len) = 0;
  return __b;
}

void sub_100054FA8(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;

  v4 = operator new(0x48uLL);
  sub_100055008(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_10001B020((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_100054FF4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_100055008(_QWORD *a1, _QWORD *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1007FA3F0;
  sub_1002A0F74(a1 + 3, *a2);
  return a1;
}

void sub_100055040(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_100055054(_QWORD *result)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t i;

  if (result[3])
  {
    v1 = result;
    result = (_QWORD *)result[2];
    if (result)
    {
      do
      {
        v2 = (_QWORD *)*result;
        operator delete(result);
        result = v2;
      }
      while (v2);
    }
    v1[2] = 0;
    v3 = v1[1];
    if (v3)
    {
      for (i = 0; i != v3; ++i)
        *(_QWORD *)(*v1 + 8 * i) = 0;
    }
    v1[3] = 0;
  }
  return result;
}

_QWORD *sub_1000550B8(_QWORD *a1, unint64_t *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *result;
  unint64_t v8;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    v5 = *a2;
    if (v3 >= *(_QWORD *)&v2)
      v5 = v3 % *(_QWORD *)&v2;
  }
  else
  {
    v5 = (*(_QWORD *)&v2 - 1) & v3;
  }
  v6 = *(_QWORD **)(*a1 + 8 * v5);
  if (!v6)
    return 0;
  result = (_QWORD *)*v6;
  if (*v6)
  {
    do
    {
      v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3)
          return result;
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(_QWORD *)&v2)
            v8 %= *(_QWORD *)&v2;
        }
        else
        {
          v8 &= *(_QWORD *)&v2 - 1;
        }
        if (v8 != v5)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *sub_10005516C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *i;
  unint64_t v11;
  float v12;
  float v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = *a2;
      if (v6 >= v7)
        v3 = v6 % v7;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      for (i = *v9; i; i = (_QWORD *)*i)
      {
        v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6)
            return i;
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7)
              v11 %= v7;
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x28uLL);
  *i = 0;
  i[1] = v6;
  *((_OWORD *)i + 1) = *(_OWORD *)a3;
  i[4] = *(_QWORD *)(a3 + 16);
  v12 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    v14 = 1;
    if (v7 >= 3)
      v14 = (v7 & (v7 - 1)) != 0;
    v15 = v14 | (2 * v7);
    v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16)
      v17 = v16;
    else
      v17 = v15;
    sub_10002A900(a1, v17);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
  }
  v18 = *(_QWORD *)a1;
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v19)
  {
    *i = *v19;
LABEL_38:
    *v19 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    v20 = *(_QWORD *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7)
        v20 %= v7;
    }
    else
    {
      v20 &= v7 - 1;
    }
    v19 = (_QWORD *)(*(_QWORD *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_100055378(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_10005538C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    sub_1000260B0();
  return operator new(8 * a2);
}

void sub_1000553C0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

uint64_t sub_1000553F8(uint64_t result, uint64_t a2, int a3, float a4)
{
  *(float *)a2 = a4;
  *(_QWORD *)(a2 + 4) = result;
  *(_WORD *)(a2 + 12) = 1024;
  *(_DWORD *)(a2 + 14) = a3;
  return result;
}

void sub_100055410(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_fault_impl(a1, a4, OS_LOG_TYPE_FAULT, a2, a3, 0x12u);
}

void sub_100055430(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_100055450()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_1000554CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_1000554E4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_100055560(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_100055578()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_1000555F4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_10005560C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_100055688(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_1000556A0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_10005571C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_100055734()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_1000557B0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_1000557C8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_100055844(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_10005585C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_1000558D8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_1000558F0()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456D80;
      v1[1] = *(_OWORD *)algn_100456D90;
      v1[2] = xmmword_100456DA0;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_100055990(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_1000559A8()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853EF8 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853EE8 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853EE8, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853F10 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853F00 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853F00, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100853F28 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853F18 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853F18, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100853F40 = v15->__r_.__value_.__r.__words[2];
  xmmword_100853F30 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853F30, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100853F58 = v19->__r_.__value_.__r.__words[2];
  xmmword_100853F48 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853F48, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100853F70 = v23->__r_.__value_.__r.__words[2];
  xmmword_100853F60 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853F60, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100853F88 = v27->__r_.__value_.__r.__words[2];
  xmmword_100853F78 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853F78, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100853FA0 = v31->__r_.__value_.__r.__words[2];
  xmmword_100853F90 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853F90, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100853FB8 = v35->__r_.__value_.__r.__words[2];
  xmmword_100853FA8 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853FA8, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100055F9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100056010@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB7A0[a1]);
}

_QWORD *sub_100056024@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB7F8[a1]);
}

_QWORD *sub_100056038@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB840[a1]);
}

_QWORD *sub_10005604C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB860[a1]);
}

void sub_100056060(void *a1)
{
  id v1;
  char v2;
  char v3;
  void *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  int v15;
  double v16;
  unint64_t *v17;
  unint64_t v18;
  std::string __p;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v1 = a1;
  v2 = os_variant_allows_internal_security_policies("com.apple.nearbyd");
  if (v1)
    v3 = v2;
  else
    v3 = 0;
  if ((v3 & 1) == 0)
    goto LABEL_27;
  v4 = sub_1002CA108();
  v6 = *((_QWORD *)v4 + 20);
  v5 = (std::__shared_weak_count *)*((_QWORD *)v4 + 21);
  v20 = v6;
  v21 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  if (v6)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("Label")));
    if (!v10)
      goto LABEL_21;
    v11 = objc_opt_class(NSString, v9);
    if ((objc_opt_isKindOfClass(v10, v11) & 1) == 0)
      goto LABEL_21;
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("Source")));
    if (!v13 || (v14 = objc_opt_class(NSString, v12), (objc_opt_isKindOfClass(v13, v14) & 1) == 0))
    {
LABEL_20:

LABEL_21:
      goto LABEL_22;
    }
    sub_10000BF04(&__p, (char *)objc_msgSend(objc_retainAutorelease(v10), "UTF8String"));
    if ((objc_msgSend(v13, "isEqualToString:", CFSTR("DirectUserInput")) & 1) != 0)
    {
      v15 = 1;
    }
    else
    {
      if (!objc_msgSend(v13, "isEqualToString:", CFSTR("ClientApp")))
        goto LABEL_18;
      v15 = 2;
    }
    v16 = sub_10000883C();
    sub_100276DAC(v6, &__p, v15, v16);
LABEL_18:
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_20;
  }
LABEL_22:
  if (v5)
  {
    v17 = (unint64_t *)&v5->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
LABEL_27:

}

void sub_100056204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  void *v16;
  void *v17;
  void *v18;

  sub_10001AE68((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_100056260()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_1000562DC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_1000562F4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_100056370(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_100056388()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_100056404(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_10005641C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_100056498(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_1000564B0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_10005652C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_100056544()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_1000565C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_1000565D8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_100056654(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_10005666C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_1000566E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_100056700()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456DD8;
      v1[1] = unk_100456DE8;
      v1[2] = xmmword_100456DF8;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_1000567A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_1000567B8()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_100853FD0 = v3->__r_.__value_.__r.__words[2];
  xmmword_100853FC0 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853FC0, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_100853FE8 = v7->__r_.__value_.__r.__words[2];
  xmmword_100853FD8 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853FD8, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_100854000 = v11->__r_.__value_.__r.__words[2];
  xmmword_100853FF0 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100853FF0, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_100854018 = v15->__r_.__value_.__r.__words[2];
  xmmword_100854008 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854008, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100854030 = v19->__r_.__value_.__r.__words[2];
  xmmword_100854020 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854020, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100854048 = v23->__r_.__value_.__r.__words[2];
  xmmword_100854038 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854038, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100854060 = v27->__r_.__value_.__r.__words[2];
  xmmword_100854050 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854050, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100854078 = v31->__r_.__value_.__r.__words[2];
  xmmword_100854068 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854068, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100854090 = v35->__r_.__value_.__r.__words[2];
  xmmword_100854080 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854080, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100056DAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100056E20@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB880[a1]);
}

_QWORD *sub_100056E34@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB8D8[a1]);
}

_QWORD *sub_100056E48@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB920[a1]);
}

_QWORD *sub_100056E5C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  return sub_10000BF04(a2, off_1007FB940[a1]);
}

void sub_100056F58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100056FB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100057228(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  id *v3;
  id *v4;
  id *v5;
  id *v6;
  uint64_t v7;

  objc_destroyWeak(v6);
  objc_destroyWeak(v3);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak((id *)(v7 - 96));
  objc_destroyWeak((id *)(v7 - 88));

  _Unwind_Resume(a1);
}

void sub_10005729C(uint64_t a1)
{
  NSObject *v2;
  int v3;
  id WeakRetained;
  id v5;
  _DWORD v6[2];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection interrupted for pid: %d", (uint8_t *)v6, 8u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(WeakRetained, "handleXPCDisconnection:", v5);

  }
}

void sub_100057370(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100057390(uint64_t a1)
{
  NSObject *v2;
  int v3;
  id WeakRetained;
  id v5;
  _DWORD v6[2];

  v2 = qword_10085F520;
  if (os_log_type_enabled((os_log_t)qword_10085F520, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection invalidated for pid: %d", (uint8_t *)v6, 8u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(WeakRetained, "handleXPCDisconnection:", v5);

  }
}

void sub_100057464(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_10005761C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1000576E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100057734()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850448);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850448))
    {
      sub_10000BF04(qword_100850430, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850430, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850448);
    }
  }
}

void sub_1000577B0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850448);
  _Unwind_Resume(a1);
}

void sub_1000577C8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850468);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850468))
    {
      sub_10000BF04(&qword_100850450, "com.apple.nearbyd.accessory.download");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850450, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850468);
    }
  }
}

void sub_100057844(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850468);
  _Unwind_Resume(a1);
}

void sub_10005785C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850488);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850488))
    {
      sub_10000BF04(&qword_100850470, "com.apple.nearbyd.accessory.files");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_100850470, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850488);
    }
  }
}

void sub_1000578D8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850488);
  _Unwind_Resume(a1);
}

void sub_1000578F0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504A8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504A8))
    {
      sub_10000BF04(qword_100850490, "MA_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850490, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504A8);
    }
  }
}

void sub_10005796C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504A8);
  _Unwind_Resume(a1);
}

void sub_100057984()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504C8))
    {
      sub_10000BF04(qword_1008504B0, "MB_");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504C8);
    }
  }
}

void sub_100057A00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504C8);
  _Unwind_Resume(a1);
}

void sub_100057A18()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1008504E8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1008504E8))
    {
      sub_10000BF04(qword_1008504D0, "D");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008504D0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008504E8);
    }
  }
}

void sub_100057A94(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008504E8);
  _Unwind_Resume(a1);
}

void sub_100057AAC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850508);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850508))
    {
      sub_10000BF04(&qword_1008504F0, "A");
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008504F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850508);
    }
  }
}

void sub_100057B28(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850508);
  _Unwind_Resume(a1);
}

void sub_100057B40()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_100850528);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850528))
    {
      sub_10000BF04(qword_100850510, "FAS.bin");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_100850510, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850528);
    }
  }
}

void sub_100057BBC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850528);
  _Unwind_Resume(a1);
}

void sub_100057BD4()
{
  unsigned __int8 v0;
  _OWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_100850548);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_100850548))
    {
      qword_100850530 = 0;
      qword_100850538 = 0;
      qword_100850540 = 0;
      v1 = operator new(0x30uLL);
      qword_100850538 = (uint64_t)(v1 + 3);
      qword_100850540 = (uint64_t)(v1 + 3);
      *v1 = xmmword_100456E08;
      v1[1] = unk_100456E18;
      v1[2] = xmmword_100456E28;
      qword_100850530 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_100009C44, &qword_100850530, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_100850548);
    }
  }
}

void sub_100057C74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_100850548);
  _Unwind_Resume(a1);
}

void sub_100057C8C()
{
  void *v0;
  std::string *v1;
  __int128 v2;
  std::string *v3;
  __int128 v4;
  std::string *v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string v37;
  std::string v38;

  v0 = objc_autoreleasePoolPush();
  sub_1003610EC(0);
  v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  v3 = std::string::append(&v38, ".bin");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008540A8 = v3->__r_.__value_.__r.__words[2];
  xmmword_100854098 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854098, (void *)&_mh_execute_header);
  sub_1003610EC(1);
  v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v7 = std::string::append(&v38, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008540C0 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008540B0 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008540B0, (void *)&_mh_execute_header);
  sub_1003610EC(2);
  v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::string::append(&v38, ".bin");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008540D8 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008540C8 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008540C8, (void *)&_mh_execute_header);
  sub_1003610EC(3);
  v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v38, ".bin");
  v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008540F0 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008540E0 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008540E0, (void *)&_mh_execute_header);
  sub_1003610EC(4);
  v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  v19 = std::string::append(&v38, ".bin");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_100854108 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008540F8 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008540F8, (void *)&_mh_execute_header);
  sub_1003610EC(5);
  v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v38, ".bin");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_100854120 = v23->__r_.__value_.__r.__words[2];
  xmmword_100854110 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854110, (void *)&_mh_execute_header);
  sub_1003610EC(6);
  v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v38, ".bin");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_100854138 = v27->__r_.__value_.__r.__words[2];
  xmmword_100854128 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854128, (void *)&_mh_execute_header);
  sub_1003610EC(7);
  v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v38, ".bin");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_100854150 = v31->__r_.__value_.__r.__words[2];
  xmmword_100854140 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854140, (void *)&_mh_execute_header);
  sub_1003610EC(8);
  v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v38, ".bin");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_100854168 = v35->__r_.__value_.__r.__words[2];
  xmmword_100854158 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_100854158, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100058280(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void sub_1000582F4()
{
  wireless_diagnostics::google::protobuf::DescriptorPool *v0;
  uint64_t v1;
  uint64_t FileByName;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *__p[2];
  char v7;

  v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_100058F00();
  v1 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  sub_10000BF04(__p, "CLPVisionEvent.proto");
  FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v1, __p);
  v3 = FileByName;
  if (v7 < 0)
  {
    operator delete(__p[0]);
    if (v3)
      goto LABEL_6;
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(__p, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 102);
  v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: file != NULL: ");
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v5, v4);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  qword_100854170 = *(_QWORD *)(v3 + 80);
  operator new();
}

void sub_100058E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  _Unwind_Resume(a1);
}

void sub_100058F00(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  int v4;

  if ((byte_1008542E8 & 1) == 0)
  {
    byte_1008542E8 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_100456FEC, (const void *)0x13B4, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("CLPVisionEvent.proto", sub_10005990C);
    operator new();
  }
}

void sub_100059370()
{
  operator delete();
}

uint64_t sub_100059508()
{
  uint64_t result;

  if (qword_10085F528)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F528 + 8))(qword_10085F528);
  if (qword_100854178)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854178 + 8))(qword_100854178);
  if (qword_10085F530)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F530 + 8))(qword_10085F530);
  if (qword_100854188)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854188 + 8))(qword_100854188);
  if (qword_10085F538)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F538 + 8))(qword_10085F538);
  if (qword_100854198)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854198 + 8))(qword_100854198);
  if (qword_10085F540)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F540 + 8))(qword_10085F540);
  if (qword_1008541A8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008541A8 + 8))(qword_1008541A8);
  if (qword_10085F548)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F548 + 8))(qword_10085F548);
  if (qword_1008541B8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008541B8 + 8))(qword_1008541B8);
  if (qword_10085F550)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F550 + 8))(qword_10085F550);
  if (qword_1008541C8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008541C8 + 8))(qword_1008541C8);
  if (qword_10085F558)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F558 + 8))(qword_10085F558);
  if (qword_1008541D8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008541D8 + 8))(qword_1008541D8);
  if (qword_10085F560)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F560 + 8))(qword_10085F560);
  if (qword_1008541E8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008541E8 + 8))(qword_1008541E8);
  if (qword_10085F568)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F568 + 8))(qword_10085F568);
  if (qword_1008541F8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008541F8 + 8))(qword_1008541F8);
  if (qword_10085F570)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F570 + 8))(qword_10085F570);
  if (qword_100854208)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854208 + 8))(qword_100854208);
  if (qword_10085F578)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F578 + 8))(qword_10085F578);
  if (qword_100854218)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854218 + 8))(qword_100854218);
  if (qword_10085F580)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F580 + 8))(qword_10085F580);
  if (qword_100854228)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854228 + 8))(qword_100854228);
  if (qword_10085F588)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F588 + 8))(qword_10085F588);
  if (qword_100854238)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854238 + 8))(qword_100854238);
  if (qword_10085F590)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F590 + 8))(qword_10085F590);
  if (qword_100854248)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854248 + 8))(qword_100854248);
  if (qword_10085F598)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F598 + 8))(qword_10085F598);
  if (qword_100854258)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854258 + 8))(qword_100854258);
  if (qword_10085F5A0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5A0 + 8))(qword_10085F5A0);
  if (qword_100854268)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854268 + 8))(qword_100854268);
  if (qword_10085F5A8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5A8 + 8))(qword_10085F5A8);
  if (qword_100854278)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854278 + 8))(qword_100854278);
  if (qword_10085F5B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5B0 + 8))(qword_10085F5B0);
  if (qword_100854288)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854288 + 8))(qword_100854288);
  if (qword_10085F5B8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5B8 + 8))(qword_10085F5B8);
  if (qword_100854298)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854298 + 8))(qword_100854298);
  if (qword_10085F5C0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5C0 + 8))(qword_10085F5C0);
  if (qword_1008542A8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008542A8 + 8))(qword_1008542A8);
  if (qword_10085F5C8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5C8 + 8))(qword_10085F5C8);
  result = qword_1008542B8;
  if (qword_1008542B8)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1008542B8 + 8))(qword_1008542B8);
  return result;
}

uint64_t sub_10005990C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  char v44;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v43[1] = sub_1000582F4;
    v44 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v43);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v43);
  }
  v1 = qword_100854170;
  if (!qword_10085F528)
    ((void (*)(void))sub_100058F00)();
  v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
  v3 = qword_100854180;
  if (!qword_10085F530)
    sub_100058F00(v2);
  v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v3);
  v5 = qword_100854190;
  if (!qword_10085F538)
    sub_100058F00(v4);
  v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v5);
  v7 = qword_1008541A0;
  if (!qword_10085F540)
    sub_100058F00(v6);
  v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v7);
  v9 = qword_1008541B0;
  if (!qword_10085F548)
    sub_100058F00(v8);
  v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v9);
  v11 = qword_1008541C0;
  if (!qword_10085F550)
    sub_100058F00(v10);
  v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v11);
  v13 = qword_1008541D0;
  if (!qword_10085F558)
    sub_100058F00(v12);
  v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v13);
  v15 = qword_1008541E0;
  if (!qword_10085F560)
    sub_100058F00(v14);
  v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v15);
  v17 = qword_1008541F0;
  if (!qword_10085F568)
    sub_100058F00(v16);
  v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v17);
  v19 = qword_100854200;
  if (!qword_10085F570)
    sub_100058F00(v18);
  v20 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v19);
  v21 = qword_100854210;
  if (!qword_10085F578)
    sub_100058F00(v20);
  v22 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v21);
  v23 = qword_100854220;
  if (!qword_10085F580)
    sub_100058F00(v22);
  v24 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v23);
  v25 = qword_100854230;
  if (!qword_10085F588)
    sub_100058F00(v24);
  v26 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v25);
  v27 = qword_100854240;
  if (!qword_10085F590)
    sub_100058F00(v26);
  v28 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v27);
  v29 = qword_100854250;
  if (!qword_10085F598)
    sub_100058F00(v28);
  v30 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v29);
  v31 = qword_100854260;
  if (!qword_10085F5A0)
    sub_100058F00(v30);
  v32 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v31);
  v33 = qword_100854270;
  if (!qword_10085F5A8)
    sub_100058F00(v32);
  v34 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v33);
  v35 = qword_100854280;
  if (!qword_10085F5B0)
    sub_100058F00(v34);
  v36 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v35);
  v37 = qword_100854290;
  if (!qword_10085F5B8)
    sub_100058F00(v36);
  v38 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v37);
  v39 = qword_1008542A0;
  if (!qword_10085F5C0)
    sub_100058F00(v38);
  v40 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v39);
  v41 = qword_1008542B0;
  if (!qword_10085F5C8)
    sub_100058F00(v40);
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v41);
}

void sub_100059C68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100059C84(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)result;
  v2 = qword_10085F528;
  if (qword_10085F528)
  {
    *(_QWORD *)(result + 16) = qword_10085F528;
  }
  else
  {
    result = sub_100058F00(result);
    v2 = qword_10085F528;
    v1[2] = qword_10085F528;
    if (!v2)
    {
      result = sub_100058F00(result);
      v2 = qword_10085F528;
    }
  }
  v1[3] = v2;
  v3 = qword_10085F558;
  if (!qword_10085F558)
  {
    result = sub_100058F00(result);
    v3 = qword_10085F558;
  }
  v1[4] = v3;
  v4 = qword_10085F560;
  if (!qword_10085F560)
  {
    result = sub_100058F00(result);
    v4 = qword_10085F560;
  }
  v1[6] = v4;
  v5 = qword_10085F540;
  if (qword_10085F540)
  {
    v1[8] = qword_10085F540;
  }
  else
  {
    result = sub_100058F00(result);
    v5 = qword_10085F540;
    v1[8] = qword_10085F540;
    if (!v5)
    {
      result = sub_100058F00(result);
      v5 = qword_10085F540;
    }
  }
  v1[9] = v5;
  v6 = qword_10085F550;
  if (!qword_10085F550)
  {
    result = sub_100058F00(result);
    v6 = qword_10085F550;
  }
  v1[10] = v6;
  return result;
}

uint64_t sub_100059D48(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)result;
  v2 = qword_10085F528;
  if (!qword_10085F528)
  {
    result = sub_100058F00(result);
    v2 = qword_10085F528;
  }
  v1[2] = v2;
  v3 = qword_10085F548;
  if (qword_10085F548)
  {
    v1[3] = qword_10085F548;
  }
  else
  {
    result = sub_100058F00(result);
    v3 = qword_10085F548;
    v1[3] = qword_10085F548;
    if (!v3)
    {
      result = sub_100058F00(result);
      v3 = qword_10085F548;
    }
  }
  v1[4] = v3;
  v4 = qword_10085F538;
  if (!qword_10085F538)
  {
    result = sub_100058F00(result);
    v4 = qword_10085F538;
  }
  v1[5] = v4;
  v5 = qword_10085F578;
  if (!qword_10085F578)
  {
    result = sub_100058F00(result);
    v5 = qword_10085F578;
  }
  v1[7] = v5;
  v6 = qword_10085F590;
  if (!qword_10085F590)
  {
    result = sub_100058F00(result);
    v6 = qword_10085F590;
  }
  v1[8] = v6;
  return result;
}

uint64_t sub_100059DF4(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)result;
  v2 = qword_10085F528;
  if (!qword_10085F528)
  {
    result = sub_100058F00(result);
    v2 = qword_10085F528;
  }
  v1[2] = v2;
  v3 = qword_10085F5A0;
  if (!qword_10085F5A0)
  {
    result = sub_100058F00(result);
    v3 = qword_10085F5A0;
  }
  v1[3] = v3;
  v4 = qword_10085F548;
  if (!qword_10085F548)
  {
    result = sub_100058F00(result);
    v4 = qword_10085F548;
  }
  v1[4] = v4;
  v5 = qword_10085F5B0;
  if (!qword_10085F5B0)
  {
    result = sub_100058F00(result);
    v5 = qword_10085F5B0;
  }
  v1[5] = v5;
  v6 = qword_10085F5C0;
  if (!qword_10085F5C0)
  {
    result = sub_100058F00(result);
    v6 = qword_10085F5C0;
  }
  v1[6] = v6;
  return result;
}

uint64_t sub_100059E88(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FB970;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100059EC0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100059ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 1103);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 44) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 44) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    v9 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(_QWORD *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(_QWORD *)(a1 + 16) = v8;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    v6 = *(_QWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_QWORD *)(a1 + 32) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100059FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100059FC8(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FB970;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100059FF8(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FB970;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10005A03C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10005A044()
{
  operator new();
}

void sub_10005A080()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005A0A4(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 44))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10005A0C8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t result;
  unint64_t v14;

  v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if (v10 != 1)
          goto LABEL_28;
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 < *((_QWORD *)this + 2) && *v11 == 17)
        {
          *((_QWORD *)this + 1) = v11 + 1;
LABEL_18:
          v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
            return 0;
          *(_QWORD *)(a1 + 24) = v14;
          *(_DWORD *)(a1 + 44) |= 2u;
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v12 < *((_QWORD *)this + 2) && *v12 == 25)
          {
            *((_QWORD *)this + 1) = v12 + 1;
            goto LABEL_22;
          }
        }
      }
      if (v9 == 2)
      {
        v10 = TagFallback & 7;
        if (v10 != 1)
          goto LABEL_28;
        goto LABEL_18;
      }
      if (v9 != 3)
      {
        v10 = TagFallback & 7;
        goto LABEL_28;
      }
      v10 = TagFallback & 7;
      if (v10 == 1)
        break;
LABEL_28:
      if (v10 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
LABEL_22:
    v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
      return 0;
    *(_QWORD *)(a1 + 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }
  while (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_10005A29C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v4 = this;
  v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 4) != 0)
LABEL_4:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
LABEL_5:
  v8 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10005A338(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0)
      goto LABEL_3;
LABEL_10:
    v10 = *(_QWORD *)(a1 + 24);
    *(_BYTE *)a2 = 17;
    *(_QWORD *)(a2 + 1) = v10;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 44) & 4) == 0)
      goto LABEL_5;
    goto LABEL_4;
  }
  v9 = *(_QWORD *)(a1 + 16);
  *(_BYTE *)a2 = 9;
  *(_QWORD *)(a2 + 1) = v9;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0)
    goto LABEL_10;
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_4:
    v4 = *(_QWORD *)(a1 + 32);
    *(_BYTE *)a2 = 25;
    *(_QWORD *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_5:
  v7 = *(_QWORD **)(a1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = v7;
  if (!v7 || *v6 == v6[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10005A460(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 44);
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
    v4 += 9;
  if ((v3 & 4) != 0)
    v4 += 9;
  if (*(_BYTE *)(a1 + 44))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_10005A4D0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 1091);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100059ED4((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10005A578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005A590(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10005A5D8()
{
  return 1;
}

uint64_t sub_10005A5E0()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854170;
}

void sub_10005A658(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_10005A66C(_QWORD *a1)
{
  *a1 = off_1007FBA20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10005A6A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005A6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v7;
  _BYTE v8[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v8, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 1323);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_10006BAB4(a1 + 16, *(_DWORD *)(a1 + 24) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005A774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005A78C(_QWORD *a1)
{
  *a1 = off_1007FBA20;
  if (a1[2])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005A7E0(_QWORD *a1)
{
  sub_10005A78C(a1);
  operator delete();
}

uint64_t sub_10005A804(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_10005A80C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10085F530;
  if (!qword_10085F530)
  {
    sub_100058F00(0, a2, a3, a4);
    return qword_10085F530;
  }
  return result;
}

void sub_10005A838()
{
  operator new();
}

void sub_10005A874()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005A898(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10005A8B0(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  uint64_t result;
  unsigned int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  signed int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  char v25;
  unsigned int v26[12];

  v6 = a1 + 16;
  v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v8 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v10 = TagFallback & 7;
      if ((TagFallback & 0xFFFFFFF8) != 8)
        break;
      if (v10 != 2)
      {
        if (v10 != 5)
          break;
        goto LABEL_15;
      }
      result = sub_10005AB30(this, v6);
      if (!(_DWORD)result)
        return result;
      while (1)
      {
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        v24 = (_BYTE *)*((_QWORD *)this + 2);
        if (v23 >= v24 || *v23 != 13)
          break;
        *((_QWORD *)this + 1) = v23 + 1;
LABEL_15:
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
        v12 = v26[0];
        v13 = *(_DWORD *)(a1 + 24);
        if (v13 == *(_DWORD *)(a1 + 28))
        {
          sub_10006BAB4(v6, v13 + 1);
          v13 = *(_DWORD *)(a1 + 24);
        }
        v14 = *(_QWORD *)(a1 + 16);
        v15 = v13 + 1;
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(_DWORD *)(v14 + 4 * v13) = v12;
        v16 = *((_QWORD *)this + 1);
        v17 = *((_DWORD *)this + 4) - v16;
        if (v17 >= 1)
        {
          v18 = v17 / 5u;
          v19 = v18 >= *(_DWORD *)(a1 + 28) - v15 ? *(_DWORD *)(a1 + 28) - v15 : v18;
          if (v19 >= 1)
          {
            v20 = 0;
            while (*(_BYTE *)v16 == 13)
            {
              v21 = *(_DWORD *)(v16 + 1);
              if (v15 >= *(_DWORD *)(a1 + 28))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v26, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                v22 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (size()) < (Capacity()): ");
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v25, v22);
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
                v15 = *(_DWORD *)(a1 + 24);
                v14 = *(_QWORD *)(a1 + 16);
              }
              *(_DWORD *)(a1 + 24) = v15 + 1;
              *(_DWORD *)(v14 + 4 * v15) = v21;
              ++v20;
              v16 += 5;
              ++v15;
              if (v19 == v20)
              {
                v20 = v19;
                break;
              }
            }
            if (v20)
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v20);
          }
        }
      }
      if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
      return 0;
  }
}

void sub_10005AB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005AB30(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  char *v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;

  v11 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!(_DWORD)result)
      return result;
    v5 = v11;
  }
  else
  {
    v5 = *v4;
    v11 = v5;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_11:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
    return 1;
  }
  else
  {
    while (1)
    {
      v12 = 0;
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12);
      if (!(_DWORD)result)
        break;
      v8 = v12;
      v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_10006BAB4(a2, v9 + 1);
        v9 = *(_DWORD *)(a2 + 8);
      }
      v10 = *(_QWORD *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(_DWORD *)(v10 + 4 * v9) = v8;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_10005AC28(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(*(_QWORD *)(v4 + 16) + 4 * v5++), a3);
    while (v5 < *(int *)(v4 + 24));
  }
  v8 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10005ACB0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  int v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  _QWORD *v7;

  if (*(int *)(a1 + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v3);
      *(_BYTE *)a2 = 13;
      *(_DWORD *)(a2 + 1) = v4;
      a2 += 5;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 24));
  }
  v7 = *(_QWORD **)(a1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = v7;
  if (!v7 || *v6 == v6[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10005AD20(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  wireless_diagnostics::google::protobuf::internal::WireFormat *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = *(_QWORD **)(a1 + 8);
  v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v4 = v5;
  v6 = (5 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1])
    v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2)
       + v6;
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_10005AD68(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 1311);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10005A6B8((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10005AE10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005AE28(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10005AE70()
{
  return 1;
}

uint64_t sub_10005AE78()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854180;
}

void sub_10005AEF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_10005AF04(_QWORD *a1)
{
  *a1 = off_1007FBAD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10005AF3C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005AF50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v7;
  _BYTE v8[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v8, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 1531);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_10006BB4C(a1 + 16, *(_DWORD *)(a1 + 24) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 16) + 8 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005B00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005B024(_QWORD *a1)
{
  *a1 = off_1007FBAD0;
  if (a1[2])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005B078(_QWORD *a1)
{
  sub_10005B024(a1);
  operator delete();
}

uint64_t sub_10005B09C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10005B0A4()
{
  operator new();
}

void sub_10005B0E0()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005B104(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10005B11C(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  uint64_t result;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  signed int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  char v25;
  unint64_t v26[6];

  v6 = a1 + 16;
  v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    v10 = TagFallback & 7;
    if ((TagFallback & 0xFFFFFFF8) == 8)
    {
      if (v10 == 1)
      {
        while (1)
        {
          v26[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v26) & 1) == 0)
            return 0;
          v12 = v26[0];
          v13 = *(_DWORD *)(a1 + 24);
          if (v13 == *(_DWORD *)(a1 + 28))
          {
            sub_10006BB4C(v6, v13 + 1);
            v13 = *(_DWORD *)(a1 + 24);
          }
          v14 = *(_QWORD *)(a1 + 16);
          v15 = v13 + 1;
          *(_DWORD *)(a1 + 24) = v13 + 1;
          *(_QWORD *)(v14 + 8 * v13) = v12;
          v16 = *((_QWORD *)this + 1);
          v17 = *((_DWORD *)this + 4) - v16;
          if (v17 >= 1)
          {
            v18 = v17 / 9u;
            v19 = v18 >= *(_DWORD *)(a1 + 28) - v15 ? *(_DWORD *)(a1 + 28) - v15 : v18;
            if (v19 >= 1)
            {
              v20 = 0;
              while (*(_BYTE *)v16 == 9)
              {
                v21 = *(_QWORD *)(v16 + 1);
                if (v15 >= *(_DWORD *)(a1 + 28))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v26, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                  v22 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v25, v22);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
                  v15 = *(_DWORD *)(a1 + 24);
                  v14 = *(_QWORD *)(a1 + 16);
                }
                *(_DWORD *)(a1 + 24) = v15 + 1;
                *(_QWORD *)(v14 + 8 * v15) = v21;
                ++v20;
                v16 += 9;
                ++v15;
                if (v19 == v20)
                {
                  v20 = v19;
                  break;
                }
              }
              if (v20)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v20);
            }
          }
LABEL_31:
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v24 = (_BYTE *)*((_QWORD *)this + 2);
          if (v23 >= v24 || *v23 != 9)
          {
            if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              result = 1;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
          *((_QWORD *)this + 1) = v23 + 1;
        }
      }
      if (v10 == 2)
        break;
    }
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
      return 0;
  }
  result = sub_10005B3A4(this, v6);
  if ((_DWORD)result)
    goto LABEL_31;
  return result;
}

void sub_10005B38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005B3A4(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  char *v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;

  v11 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!(_DWORD)result)
      return result;
    v5 = v11;
  }
  else
  {
    v5 = *v4;
    v11 = v5;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_11:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
    return 1;
  }
  else
  {
    while (1)
    {
      v12 = 0;
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12);
      if (!(_DWORD)result)
        break;
      v8 = v12;
      v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_10006BB4C(a2, v9 + 1);
        v9 = *(_DWORD *)(a2 + 8);
      }
      v10 = *(_QWORD *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(_QWORD *)(v10 + 8 * v9) = v8;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_10005B49C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(*(_QWORD *)(v4 + 16) + 8 * v5++), a3);
    while (v5 < *(int *)(v4 + 24));
  }
  v8 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10005B524(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  _QWORD *v7;

  if (*(int *)(a1 + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v3);
      *(_BYTE *)a2 = 9;
      *(_QWORD *)(a2 + 1) = v4;
      a2 += 9;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 24));
  }
  v7 = *(_QWORD **)(a1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = v7;
  if (!v7 || *v6 == v6[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10005B5B4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  wireless_diagnostics::google::protobuf::internal::WireFormat *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = *(_QWORD **)(a1 + 8);
  v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v4 = v5;
  v6 = (9 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1])
    v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2)
       + v6;
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_10005B5FC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 1519);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10005AF50((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10005B6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005B6BC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10005B704()
{
  return 1;
}

uint64_t sub_10005B70C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854190;
}

void sub_10005B784(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005B798(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBB80;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_10005B7D4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005B7E8(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 1734);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * v5);
      v7 = a1[7];
      v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v7 + 1);
          v7 = a1[7];
        }
        a1[7] = v7 + 1;
        sub_10006BBE4();
      }
      v9 = *((_QWORD *)a1 + 2);
      a1[6] = v8 + 1;
      sub_10005A6B8(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005B918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005B930(uint64_t *a1)
{
  *a1 = (uint64_t)off_1007FBB80;
  sub_10006BDC4(a1 + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005B970(uint64_t *a1)
{
  sub_10005B930(a1);
  operator delete();
}

uint64_t sub_10005B994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10005B99C()
{
  operator new();
}

void sub_10005B9D8()
{
  operator delete();
}

uint64_t sub_10005B9FC(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_10005BA6C(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v19;
  int v20;
  BOOL v21;
  int v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t result;
  unsigned int v26;

  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  v7 = (_DWORD)a1 + 8;
  while (1)
  {
LABEL_2:
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v10 = a1[7];
        v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            v10 = a1[7];
          }
          a1[7] = v10 + 1;
          sub_10006BBE4();
        }
        v12 = *((_QWORD *)a1 + 2);
        a1[6] = v11 + 1;
        v13 = *(_QWORD *)(v12 + 8 * v11);
        v26 = 0;
        v14 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0;
        }
        else
        {
          v26 = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        v15 = *((_DWORD *)this + 14);
        v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
        if (!sub_10005A8B0(v13, this, v18, v19) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        v20 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v20, 1);
        v22 = v20 - 1;
        if (v22 < 0 == v21)
          *((_DWORD *)this + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        v24 = (_BYTE *)*((_QWORD *)this + 2);
        if (v23 >= v24 || *v23 != 10)
        {
          if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)this + 1) = v23 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
      return 0;
  }
}

uint64_t sub_10005BC64(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005BCEC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  char *v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  if (*((int *)this + 6) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * v5);
      *(_BYTE *)a2 = 10;
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        v8 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
      }
      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v7;
        v8 = (char *)a2 + 2;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005ACB0(v6, (uint64_t)v8, a3);
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
  v11 = (_QWORD *)*((_QWORD *)this + 1);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v9 = v11;
  if (!v11 || *v9 == v9[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3);
}

uint64_t sub_10005BDA4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  _QWORD *v8;

  v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    v4 = 0;
    do
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005AD20(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v4), a2);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      else
        v7 = 1;
      v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  v8 = *(_QWORD **)(a1 + 8);
  if (v8 && *v8 != v8[1])
    v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_10005BE40(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 1722);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10005B7E8(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10005BEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005BF00(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10005BF48()
{
  return 1;
}

uint64_t sub_10005BF50()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008541A0;
}

void sub_10005BFC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005BFDC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBC30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_10005C018(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005C02C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 1937);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * v5);
      v7 = a1[7];
      v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v7 + 1);
          v7 = a1[7];
        }
        a1[7] = v7 + 1;
        sub_10006BC44();
      }
      v9 = *((_QWORD *)a1 + 2);
      a1[6] = v8 + 1;
      sub_10005AF50(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005C15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005C174(uint64_t *a1)
{
  *a1 = (uint64_t)off_1007FBC30;
  sub_10006BDC4(a1 + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005C1B4(uint64_t *a1)
{
  sub_10005C174(a1);
  operator delete();
}

uint64_t sub_10005C1D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

uint64_t sub_10005C1E0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10085F548;
  if (!qword_10085F548)
  {
    sub_100058F00(0, a2, a3, a4);
    return qword_10085F548;
  }
  return result;
}

void sub_10005C20C()
{
  operator new();
}

void sub_10005C248()
{
  operator delete();
}

uint64_t sub_10005C26C(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_10005C2DC(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v19;
  int v20;
  BOOL v21;
  int v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t result;
  unsigned int v26;

  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  v7 = (_DWORD)a1 + 8;
  while (1)
  {
LABEL_2:
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v10 = a1[7];
        v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            v10 = a1[7];
          }
          a1[7] = v10 + 1;
          sub_10006BC44();
        }
        v12 = *((_QWORD *)a1 + 2);
        a1[6] = v11 + 1;
        v13 = *(_QWORD *)(v12 + 8 * v11);
        v26 = 0;
        v14 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0;
        }
        else
        {
          v26 = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        v15 = *((_DWORD *)this + 14);
        v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
        if (!sub_10005B11C(v13, this, v18, v19) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        v20 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v20, 1);
        v22 = v20 - 1;
        if (v22 < 0 == v21)
          *((_DWORD *)this + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        v24 = (_BYTE *)*((_QWORD *)this + 2);
        if (v23 >= v24 || *v23 != 10)
        {
          if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)this + 1) = v23 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
      return 0;
  }
}

uint64_t sub_10005C4D4(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005C55C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  char *v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  if (*((int *)this + 6) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * v5);
      *(_BYTE *)a2 = 10;
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        v8 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
      }
      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v7;
        v8 = (char *)a2 + 2;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005B524(v6, (uint64_t)v8, a3);
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
  v11 = (_QWORD *)*((_QWORD *)this + 1);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v9 = v11;
  if (!v11 || *v9 == v9[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3);
}

uint64_t sub_10005C614(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  _QWORD *v8;

  v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    v4 = 0;
    do
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005B5B4(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v4), a2);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      else
        v7 = 1;
      v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  v8 = *(_QWORD **)(a1 + 8);
  if (v8 && *v8 != v8[1])
    v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_10005C6B0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 1925);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10005C02C(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10005C758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005C770(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10005C7B8()
{
  return 1;
}

uint64_t sub_10005C7C0()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008541B0;
}

void sub_10005C838(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_10005C84C(_QWORD *a1)
{
  *a1 = off_1007FBCE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10005C884(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005C898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 2173);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_QWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_QWORD *)(a1 + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005C94C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005C964(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBCE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005C994(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBCE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10005C9D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10005C9E0()
{
  operator new();
}

void sub_10005CA1C()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005CA40(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 36))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10005CA60(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  uint64_t result;
  unint64_t v12;

  v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_22;
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 < *((_QWORD *)this + 2) && *v10 == 17)
        {
          *((_QWORD *)this + 1) = v10 + 1;
          goto LABEL_16;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v9 = TagFallback & 7;
        goto LABEL_22;
      }
      v9 = TagFallback & 7;
      if (v9 == 1)
        break;
LABEL_22:
      if (v9 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
LABEL_16:
    v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0)
      return 0;
    *(_QWORD *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 2u;
  }
  while (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_10005CBD4(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 36);
  }
  if ((v5 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  v8 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10005CC4C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) != 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v4;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 36);
  }
  if ((v3 & 2) != 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    *(_BYTE *)a2 = 17;
    *(_QWORD *)(a2 + 1) = v5;
    a2 += 9;
  }
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (!v8 || *v7 == v7[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10005CD14(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 36);
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
    v4 += 9;
  if (*(_BYTE *)(a1 + 36))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_10005CD78(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 2161);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10005C898((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10005CE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005CE38(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10005CE80()
{
  return 1;
}

uint64_t sub_10005CE88()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008541C0;
}

void sub_10005CF00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005CF14(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBD90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 60) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10005CF54(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005CF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char v19;
  _BYTE v20[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v20, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 2785);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v5 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v9 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(_QWORD *)(a1 + 16) = v9;
    v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_22;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v10 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 24) = v10;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  v11 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 28) = v11;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  v12 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 32) = v12;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_25:
    v14 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v14;
    v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  v13 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v13;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x20) != 0)
    goto LABEL_25;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_26:
  v15 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v15;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v6;
    v5 = *(_DWORD *)(a2 + 72);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v5 & 0x100) != 0)
  {
    v16 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v16;
    v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
LABEL_30:
      v18 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 72) |= 0x400u;
      *(_DWORD *)(a1 + 60) = v18;
      if ((*(_DWORD *)(a2 + 72) & 0x800) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_18;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v17 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) |= 0x200u;
  *(_DWORD *)(a1 + 56) = v17;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x400) != 0)
    goto LABEL_30;
LABEL_17:
  if ((v5 & 0x800) != 0)
  {
LABEL_18:
    v7 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x800u;
    *(_DWORD *)(a1 + 64) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005D170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005D188(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBD90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005D1B8(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBD90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10005D1FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

void sub_10005D204()
{
  operator new();
}

void sub_10005D240()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005D264(uint64_t a1)
{
  int v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(a1 + 60) = 0;
    *(_QWORD *)(a1 + 52) = 0;
  }
  v3 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 16) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10005D2A0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v15;
  unint64_t v16;
  char *v17;
  _BYTE *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  unsigned __int8 *v40;
  uint64_t result;
  unint64_t *v42;
  unsigned int *v43;
  unsigned int *v44;
  unsigned int *v45;
  unsigned int *v46;
  unsigned int *v47;

  v42 = (unint64_t *)(a1 + 16);
  v43 = (unsigned int *)(a1 + 24);
  v44 = (unsigned int *)(a1 + 28);
  v45 = (unsigned int *)(a1 + 32);
  v46 = (unsigned int *)(a1 + 36);
  v47 = (unsigned int *)(a1 + 40);
  v6 = (unsigned int *)(a1 + 44);
  v7 = (unsigned int *)(a1 + 48);
  v8 = (unsigned int *)(a1 + 52);
  v9 = (unsigned int *)(a1 + 56);
  v10 = (unsigned int *)(a1 + 60);
  v11 = (unsigned int *)(a1 + 64);
  v12 = a1 + 8;
  while (2)
  {
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v13;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v13 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          *v42 = *v17;
          v18 = v17 + 1;
          *((_QWORD *)this + 1) = v18;
LABEL_40:
          *(_DWORD *)(a1 + 72) |= 1u;
          if ((unint64_t)v18 < v16 && *v18 == 16)
          {
            v19 = v18 + 1;
            *((_QWORD *)this + 1) = v19;
            goto LABEL_43;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v42);
        if ((_DWORD)result)
        {
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
          goto LABEL_40;
        }
        break;
      case 2u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v19 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
LABEL_43:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v43 = *v19;
          v30 = v19 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v30 >= v16 || *v30 != 24)
          continue;
        v20 = v30 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_51:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v44 = *v20;
          v31 = v20 + 1;
          *((_QWORD *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 72) |= 4u;
        if ((unint64_t)v31 >= v16 || *v31 != 32)
          continue;
        v21 = v31 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_59:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v45 = *v21;
          v32 = v21 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 72) |= 8u;
        if ((unint64_t)v32 >= v16 || *v32 != 40)
          continue;
        v22 = v32 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_67:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v46 = *v22;
          v33 = v22 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 72) |= 0x10u;
        if ((unint64_t)v33 >= v16 || *v33 != 48)
          continue;
        v23 = v33 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_75:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v47 = *v23;
          v34 = v23 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 72) |= 0x20u;
        if ((unint64_t)v34 >= v16 || *v34 != 56)
          continue;
        v24 = v34 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_83:
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v24;
          v35 = v24 + 1;
          *((_QWORD *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 72) |= 0x40u;
        if ((unint64_t)v35 >= v16 || *v35 != 64)
          continue;
        v25 = v35 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_91:
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v25;
          v36 = v25 + 1;
          *((_QWORD *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 72) |= 0x80u;
        if ((unint64_t)v36 >= v16 || *v36 != 72)
          continue;
        v26 = v36 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_99:
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v26;
          v37 = v26 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 72) |= 0x100u;
        if ((unint64_t)v37 >= v16 || *v37 != 80)
          continue;
        v27 = v37 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_107:
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v27;
          v38 = v27 + 1;
          *((_QWORD *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 72) |= 0x200u;
        if ((unint64_t)v38 >= v16 || *v38 != 88)
          continue;
        v28 = v38 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_115:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v28;
          v39 = v28 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 72) |= 0x400u;
        if ((unint64_t)v39 >= v16 || *v39 != 96)
          continue;
        v29 = v39 + 1;
        *((_QWORD *)this + 1) = v29;
LABEL_123:
        if ((unint64_t)v29 >= v16 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v40 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v29;
          v40 = (unsigned __int8 *)(v29 + 1);
          *((_QWORD *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 72) |= 0x800u;
        if (v40 != (unsigned __int8 *)v16 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v20 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_51;
      case 4u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v21 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_59;
      case 5u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v22 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_67;
      case 6u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v23 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_75;
      case 7u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v24 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_83;
      case 8u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v25 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_91;
      case 9u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v26 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_99;
      case 0xAu:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v27 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_107;
      case 0xBu:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v28 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_115;
      case 0xCu:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v29 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_123;
      default:
        v15 = TagFallback & 7;
LABEL_34:
        if (v15 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v12, a4) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_10005D928(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 16), (unint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 44), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 48), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 52), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 56), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 60), a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x800) != 0)
LABEL_13:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_14:
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005DAC0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  _QWORD *v18;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v19;
  _QWORD *v20;

  v3 = a2;
  v5 = *((_DWORD *)this + 18);
  if ((v5 & 1) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 2);
    *(_BYTE *)a2 = 8;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
    v5 = *((_DWORD *)this + 18);
  }
  if ((v5 & 2) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)v3 = 16;
    if (v7 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v7;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)v3 = 24;
    if (v8 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 8) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(_BYTE *)v3 = 32;
    if (v9 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 0x10) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)v3 = 40;
    if (v10 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v10;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 0x20) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(_BYTE *)v3 = 48;
    if (v11 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 0x40) != 0)
  {
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(_BYTE *)v3 = 56;
    if (v12 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v12;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 0x80) != 0)
  {
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)v3 = 64;
    if (v13 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v13;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 73) & 1) != 0)
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)v3 = 72;
    if (v14 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v14;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 73) & 2) != 0)
  {
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)v3 = 80;
    if (v15 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v15;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 73) & 4) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(_BYTE *)v3 = 88;
    if (v16 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v16;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 73) & 8) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)v3 = 96;
    if (v17 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  v20 = (_QWORD *)*((_QWORD *)this + 1);
  v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v18 = v20;
  if (!v20 || *v18 == v18[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v19, v3, a3);
}

uint64_t sub_10005DD68(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  _QWORD *v27;

  v3 = *(_DWORD *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_42;
  }
  if ((v3 & 1) != 0)
  {
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_11;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v6 = 1;
  }
  v4 = (v4 + v6 + 1);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v8 = 1;
    }
    v4 = (v4 + v8 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_13:
      if ((v3 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_13;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v10 = 1;
  }
  v4 = (v4 + v10 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_14:
    if ((v3 & 0x20) == 0)
      goto LABEL_15;
    goto LABEL_30;
  }
LABEL_26:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v12 = 1;
  }
  v4 = (v4 + v12 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_15:
    if ((v3 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_30:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_16:
    if ((v3 & 0x80) == 0)
      goto LABEL_42;
    goto LABEL_38;
  }
LABEL_34:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v16 = 2;
  }
  v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_38:
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v17 >= 0x80)
    {
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v18 = 2;
    }
    v4 = (v18 + v4);
  }
LABEL_42:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v19 >= 0x80)
      {
        v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2)
            + 1;
        v3 = *(_DWORD *)(a1 + 72);
      }
      else
      {
        v20 = 2;
      }
      v4 = (v20 + v4);
      if ((v3 & 0x200) == 0)
      {
LABEL_45:
        if ((v3 & 0x400) == 0)
          goto LABEL_46;
        goto LABEL_56;
      }
    }
    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_45;
    }
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v22 = 2;
    }
    v4 = (v22 + v4);
    if ((v3 & 0x400) == 0)
    {
LABEL_46:
      if ((v3 & 0x800) == 0)
        goto LABEL_64;
LABEL_60:
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if (v25 >= 0x80)
        v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)
            + 1;
      else
        v26 = 2;
      v4 = (v26 + v4);
      goto LABEL_64;
    }
LABEL_56:
    v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v23 >= 0x80)
    {
      v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v24 = 2;
    }
    v4 = (v24 + v4);
    if ((v3 & 0x800) == 0)
      goto LABEL_64;
    goto LABEL_60;
  }
LABEL_64:
  v27 = *(_QWORD **)(a1 + 8);
  if (v27 && *v27 != v27[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 68) = v4;
  return v4;
}

uint64_t sub_10005DFC4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 2773);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10005CF68((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10005E06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005E084(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10005E0CC()
{
  return 1;
}

uint64_t sub_10005E0D4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008541D0;
}

void sub_10005E14C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005E160(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBE40;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 60) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10005E1A0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005E1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char v19;
  _BYTE v20[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v20, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 3439);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v5 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v9 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(_QWORD *)(a1 + 16) = v9;
    v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_22;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v10 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 24) = v10;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  v11 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 28) = v11;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  v12 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 32) = v12;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_25:
    v14 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v14;
    v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  v13 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v13;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x20) != 0)
    goto LABEL_25;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_26:
  v15 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v15;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v6;
    v5 = *(_DWORD *)(a2 + 72);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v5 & 0x100) != 0)
  {
    v16 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v16;
    v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
LABEL_30:
      v18 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 72) |= 0x400u;
      *(_DWORD *)(a1 + 60) = v18;
      if ((*(_DWORD *)(a2 + 72) & 0x800) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_18;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v17 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) |= 0x200u;
  *(_DWORD *)(a1 + 56) = v17;
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x400) != 0)
    goto LABEL_30;
LABEL_17:
  if ((v5 & 0x800) != 0)
  {
LABEL_18:
    v7 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x800u;
    *(_DWORD *)(a1 + 64) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005E3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005E3D4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBE40;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005E404(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBE40;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10005E448(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

void sub_10005E450()
{
  operator new();
}

void sub_10005E48C()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005E4B0(uint64_t a1)
{
  int v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(a1 + 60) = 0;
    *(_QWORD *)(a1 + 52) = 0;
  }
  v3 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 16) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10005E4EC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v15;
  unint64_t v16;
  char *v17;
  _BYTE *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  unsigned __int8 *v40;
  uint64_t result;
  unint64_t *v42;
  unsigned int *v43;
  unsigned int *v44;
  unsigned int *v45;
  unsigned int *v46;
  unsigned int *v47;

  v42 = (unint64_t *)(a1 + 16);
  v43 = (unsigned int *)(a1 + 24);
  v44 = (unsigned int *)(a1 + 28);
  v45 = (unsigned int *)(a1 + 32);
  v46 = (unsigned int *)(a1 + 36);
  v47 = (unsigned int *)(a1 + 40);
  v6 = (unsigned int *)(a1 + 44);
  v7 = (unsigned int *)(a1 + 48);
  v8 = (unsigned int *)(a1 + 52);
  v9 = (unsigned int *)(a1 + 56);
  v10 = (unsigned int *)(a1 + 60);
  v11 = (unsigned int *)(a1 + 64);
  v12 = a1 + 8;
  while (2)
  {
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v13;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v13 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          *v42 = *v17;
          v18 = v17 + 1;
          *((_QWORD *)this + 1) = v18;
LABEL_40:
          *(_DWORD *)(a1 + 72) |= 1u;
          if ((unint64_t)v18 < v16 && *v18 == 16)
          {
            v19 = v18 + 1;
            *((_QWORD *)this + 1) = v19;
            goto LABEL_43;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v42);
        if ((_DWORD)result)
        {
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
          goto LABEL_40;
        }
        break;
      case 2u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v19 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
LABEL_43:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v43 = *v19;
          v30 = v19 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v30 >= v16 || *v30 != 24)
          continue;
        v20 = v30 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_51:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v44 = *v20;
          v31 = v20 + 1;
          *((_QWORD *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 72) |= 4u;
        if ((unint64_t)v31 >= v16 || *v31 != 32)
          continue;
        v21 = v31 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_59:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v45 = *v21;
          v32 = v21 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 72) |= 8u;
        if ((unint64_t)v32 >= v16 || *v32 != 40)
          continue;
        v22 = v32 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_67:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v46 = *v22;
          v33 = v22 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 72) |= 0x10u;
        if ((unint64_t)v33 >= v16 || *v33 != 48)
          continue;
        v23 = v33 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_75:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v47 = *v23;
          v34 = v23 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 72) |= 0x20u;
        if ((unint64_t)v34 >= v16 || *v34 != 56)
          continue;
        v24 = v34 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_83:
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v24;
          v35 = v24 + 1;
          *((_QWORD *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 72) |= 0x40u;
        if ((unint64_t)v35 >= v16 || *v35 != 64)
          continue;
        v25 = v35 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_91:
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v25;
          v36 = v25 + 1;
          *((_QWORD *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 72) |= 0x80u;
        if ((unint64_t)v36 >= v16 || *v36 != 72)
          continue;
        v26 = v36 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_99:
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v26;
          v37 = v26 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 72) |= 0x100u;
        if ((unint64_t)v37 >= v16 || *v37 != 80)
          continue;
        v27 = v37 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_107:
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v27;
          v38 = v27 + 1;
          *((_QWORD *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 72) |= 0x200u;
        if ((unint64_t)v38 >= v16 || *v38 != 88)
          continue;
        v28 = v38 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_115:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v28;
          v39 = v28 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 72) |= 0x400u;
        if ((unint64_t)v39 >= v16 || *v39 != 96)
          continue;
        v29 = v39 + 1;
        *((_QWORD *)this + 1) = v29;
LABEL_123:
        if ((unint64_t)v29 >= v16 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v40 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v29;
          v40 = (unsigned __int8 *)(v29 + 1);
          *((_QWORD *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 72) |= 0x800u;
        if (v40 != (unsigned __int8 *)v16 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v20 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_51;
      case 4u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v21 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_59;
      case 5u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v22 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_67;
      case 6u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v23 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_75;
      case 7u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v24 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_83;
      case 8u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v25 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_91;
      case 9u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v26 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_99;
      case 0xAu:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v27 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_107;
      case 0xBu:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v28 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_115;
      case 0xCu:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v29 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_123;
      default:
        v15 = TagFallback & 7;
LABEL_34:
        if (v15 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v12, a4) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_10005EB74(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 16), (unint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 44), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 48), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 52), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 56), a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 60), a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x800) != 0)
LABEL_13:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_14:
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005ED0C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  _QWORD *v18;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v19;
  _QWORD *v20;

  v3 = a2;
  v5 = *((_DWORD *)this + 18);
  if ((v5 & 1) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 2);
    *(_BYTE *)a2 = 8;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
    v5 = *((_DWORD *)this + 18);
  }
  if ((v5 & 2) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)v3 = 16;
    if (v7 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v7;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)v3 = 24;
    if (v8 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 8) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(_BYTE *)v3 = 32;
    if (v9 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 0x10) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)v3 = 40;
    if (v10 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v10;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 0x20) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(_BYTE *)v3 = 48;
    if (v11 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 0x40) != 0)
  {
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(_BYTE *)v3 = 56;
    if (v12 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v12;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 72) & 0x80) != 0)
  {
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)v3 = 64;
    if (v13 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v13;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 73) & 1) != 0)
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)v3 = 72;
    if (v14 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v14;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 73) & 2) != 0)
  {
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)v3 = 80;
    if (v15 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v15;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 73) & 4) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(_BYTE *)v3 = 88;
    if (v16 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v16;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 73) & 8) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)v3 = 96;
    if (v17 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  v20 = (_QWORD *)*((_QWORD *)this + 1);
  v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v18 = v20;
  if (!v20 || *v18 == v18[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v19, v3, a3);
}

uint64_t sub_10005EFB4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  _QWORD *v27;

  v3 = *(_DWORD *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_42;
  }
  if ((v3 & 1) != 0)
  {
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_11;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v6 = 1;
  }
  v4 = (v4 + v6 + 1);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v8 = 1;
    }
    v4 = (v4 + v8 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_13:
      if ((v3 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_13;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v10 = 1;
  }
  v4 = (v4 + v10 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_14:
    if ((v3 & 0x20) == 0)
      goto LABEL_15;
    goto LABEL_30;
  }
LABEL_26:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v12 = 1;
  }
  v4 = (v4 + v12 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_15:
    if ((v3 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_30:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_16:
    if ((v3 & 0x80) == 0)
      goto LABEL_42;
    goto LABEL_38;
  }
LABEL_34:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v16 = 2;
  }
  v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_38:
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v17 >= 0x80)
    {
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v18 = 2;
    }
    v4 = (v18 + v4);
  }
LABEL_42:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v19 >= 0x80)
      {
        v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2)
            + 1;
        v3 = *(_DWORD *)(a1 + 72);
      }
      else
      {
        v20 = 2;
      }
      v4 = (v20 + v4);
      if ((v3 & 0x200) == 0)
      {
LABEL_45:
        if ((v3 & 0x400) == 0)
          goto LABEL_46;
        goto LABEL_56;
      }
    }
    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_45;
    }
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v22 = 2;
    }
    v4 = (v22 + v4);
    if ((v3 & 0x400) == 0)
    {
LABEL_46:
      if ((v3 & 0x800) == 0)
        goto LABEL_64;
LABEL_60:
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if (v25 >= 0x80)
        v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)
            + 1;
      else
        v26 = 2;
      v4 = (v26 + v4);
      goto LABEL_64;
    }
LABEL_56:
    v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v23 >= 0x80)
    {
      v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v24 = 2;
    }
    v4 = (v24 + v4);
    if ((v3 & 0x800) == 0)
      goto LABEL_64;
    goto LABEL_60;
  }
LABEL_64:
  v27 = *(_QWORD **)(a1 + 8);
  if (v27 && *v27 != v27[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 68) = v4;
  return v4;
}

uint64_t sub_10005F210(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 3427);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10005E1B4((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10005F2B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005F2D0(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10005F318()
{
  return 1;
}

uint64_t sub_10005F320()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008541E0;
}

void sub_10005F398(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005F3AC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBEF0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 88) = 0xFFFFFFFFLL;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_10005F404(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005F418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const std::string *v13;
  std::string *v14;
  uint64_t v15;
  uint64_t v16;
  const std::string *v17;
  std::string *v18;
  _DWORD *v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  _BYTE v27[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v27, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 4078);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v26, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v27);
  }
  v5 = *(_DWORD *)(a2 + 96);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 88);
      if ((v6 + 1) >= 6)
        sub_1003CCA00();
      *(_DWORD *)(a1 + 96) |= 1u;
      *(_DWORD *)(a1 + 88) = v6;
      v5 = *(_DWORD *)(a2 + 96);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 2u;
      v7 = *(_QWORD *)(a1 + 16);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 16);
      if (!v8)
        v8 = *(_QWORD *)(qword_10085F568 + 16);
      sub_100059ED4(v7, v8);
      v5 = *(_DWORD *)(a2 + 96);
    }
    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 4u;
      v9 = *(_QWORD *)(a1 + 24);
      if (!v9)
        operator new();
      v10 = *(_QWORD *)(a2 + 24);
      if (!v10)
        v10 = *(_QWORD *)(qword_10085F568 + 24);
      sub_100059ED4(v9, v10);
      v5 = *(_DWORD *)(a2 + 96);
    }
    if ((v5 & 8) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 8u;
      v11 = *(_QWORD *)(a1 + 32);
      if (!v11)
        operator new();
      v12 = *(_QWORD *)(a2 + 32);
      if (!v12)
        v12 = *(_QWORD *)(qword_10085F568 + 32);
      sub_10005CF68(v11, v12);
      v5 = *(_DWORD *)(a2 + 96);
    }
    if ((v5 & 0x10) != 0)
    {
      v13 = *(const std::string **)(a2 + 40);
      *(_DWORD *)(a1 + 96) |= 0x10u;
      v14 = *(std::string **)(a1 + 40);
      if (v14 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(v14, v13);
      v5 = *(_DWORD *)(a2 + 96);
    }
    if ((v5 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x20u;
      v15 = *(_QWORD *)(a1 + 48);
      if (!v15)
        operator new();
      v16 = *(_QWORD *)(a2 + 48);
      if (!v16)
        v16 = *(_QWORD *)(qword_10085F568 + 48);
      sub_10005E1B4(v15, v16);
      v5 = *(_DWORD *)(a2 + 96);
    }
    if ((v5 & 0x40) != 0)
    {
      v17 = *(const std::string **)(a2 + 56);
      *(_DWORD *)(a1 + 96) |= 0x40u;
      v18 = *(std::string **)(a1 + 56);
      if (v18 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(v18, v17);
      v5 = *(_DWORD *)(a2 + 96);
    }
    if ((v5 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x80u;
      v19 = *(_DWORD **)(a1 + 64);
      if (!v19)
        operator new();
      v20 = *(_QWORD *)(a2 + 64);
      if (!v20)
        v20 = *(_QWORD *)(qword_10085F568 + 64);
      sub_10005B7E8(v19, v20);
      v5 = *(_DWORD *)(a2 + 96);
    }
  }
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x100u;
      v21 = *(_DWORD **)(a1 + 72);
      if (!v21)
        operator new();
      v22 = *(_QWORD *)(a2 + 72);
      if (!v22)
        v22 = *(_QWORD *)(qword_10085F568 + 72);
      sub_10005B7E8(v21, v22);
      v5 = *(_DWORD *)(a2 + 96);
    }
    if ((v5 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x200u;
      v23 = *(_QWORD *)(a1 + 80);
      if (!v23)
        operator new();
      v24 = *(_QWORD *)(a2 + 80);
      if (!v24)
        v24 = *(_QWORD *)(qword_10085F568 + 80);
      sub_10005C898(v23, v24);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005F808()
{
  operator delete();
}

void sub_10005F888(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_1007FBEF0;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10005F8C4(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

_QWORD *sub_10005F8C4(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = result;
  v2 = result[5];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    operator delete();
  }
  v4 = result[7];
  if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    operator delete();
  }
  if ((_QWORD *)qword_10085F568 != result)
  {
    v6 = result[2];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = v1[3];
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = v1[4];
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = v1[6];
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = v1[8];
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = v1[9];
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    result = (_QWORD *)v1[10];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_10005FA0C(_QWORD *a1)
{
  sub_10005F888(a1);
  operator delete();
}

uint64_t sub_10005FA30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 92) = a2;
  return result;
}

void sub_10005FA38()
{
  operator new();
}

void sub_10005FA74()
{
  operator delete();
}

uint64_t sub_10005FA98(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v10;
  uint64_t v11;

  v1 = this;
  v2 = *(_DWORD *)(this + 96);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 88) = -1;
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        if (*(_BYTE *)(this + 44))
        {
          *(_QWORD *)(this + 16) = 0;
          *(_QWORD *)(this + 24) = 0;
          *(_QWORD *)(this + 32) = 0;
        }
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    if ((*(_BYTE *)(v1 + 96) & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 24);
      if (this)
      {
        if (*(_BYTE *)(this + 44))
        {
          *(_QWORD *)(this + 16) = 0;
          *(_QWORD *)(this + 24) = 0;
          *(_QWORD *)(this + 32) = 0;
        }
        v4 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v4)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    v5 = *(_DWORD *)(v1 + 96);
    if ((v5 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        this = (uint64_t)sub_10005D264(this);
        v5 = *(_DWORD *)(v1 + 96);
      }
    }
    if ((v5 & 0x10) != 0)
    {
      v6 = *(_QWORD *)(v1 + 40);
      if ((_UNKNOWN *)v6 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
    v7 = *(_DWORD *)(v1 + 96);
    if ((v7 & 0x20) != 0)
    {
      this = *(_QWORD *)(v1 + 48);
      if (this)
      {
        this = (uint64_t)sub_10005E4B0(this);
        v7 = *(_DWORD *)(v1 + 96);
      }
    }
    if ((v7 & 0x40) != 0)
    {
      v8 = *(_QWORD *)(v1 + 56);
      if ((_UNKNOWN *)v8 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(_BYTE **)v8 = 0;
          *(_QWORD *)(v8 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v8 = 0;
          *(_BYTE *)(v8 + 23) = 0;
        }
      }
    }
    v2 = *(_DWORD *)(v1 + 96);
    if ((v2 & 0x80) != 0)
    {
      this = *(_QWORD *)(v1 + 64);
      if (this)
      {
        this = sub_10005B9FC(this);
        v2 = *(_DWORD *)(v1 + 96);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(_QWORD *)(v1 + 72);
      if (this)
      {
        this = sub_10005B9FC(this);
        v2 = *(_DWORD *)(v1 + 96);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      this = *(_QWORD *)(v1 + 80);
      if (this)
      {
        if (*(_BYTE *)(this + 36))
        {
          *(_QWORD *)(this + 16) = 0;
          *(_QWORD *)(this + 24) = 0;
        }
        v9 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v9)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  v11 = *(_QWORD *)(v1 + 8);
  v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v10 + 22) = 0;
  if (v11)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v10);
  return this;
}

uint64_t sub_10005FC34(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  char *v10;
  signed int v11;
  uint64_t result;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  uint64_t v25;
  char *v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v31;
  int v32;
  int v33;
  _BYTE *v34;
  uint64_t v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v41;
  int v42;
  int v43;
  _BYTE *v44;
  void *v45;
  _BYTE *v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v53;
  int v54;
  int v55;
  _BYTE *v56;
  void *v57;
  _BYTE *v58;
  int *v59;
  char *v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v65;
  int v66;
  int v67;
  _BYTE *v68;
  int *v69;
  char *v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v75;
  int v76;
  int v77;
  _BYTE *v78;
  uint64_t v79;
  char *v80;
  int v81;
  int v82;
  int v83;
  uint64_t v84;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v85;
  int v86;
  int v87;
  unsigned int v88;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v88 = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 < *((_QWORD *)this + 2) && (*v10 & 0x80000000) == 0)
        {
          v11 = *v10;
          *((_QWORD *)this + 1) = v10 + 1;
          goto LABEL_35;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88);
        if ((_DWORD)result)
        {
          v11 = v88;
LABEL_35:
          if ((v11 + 1) > 5)
          {
            wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v11);
          }
          else
          {
            *(_DWORD *)(a1 + 96) |= 1u;
            *(_DWORD *)(a1 + 88) = v11;
          }
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v13 < *((_QWORD *)this + 2) && *v13 == 18)
          {
            *((_QWORD *)this + 1) = v13 + 1;
            goto LABEL_40;
          }
          continue;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_30;
LABEL_40:
        *(_DWORD *)(a1 + 96) |= 2u;
        v14 = *(_QWORD *)(a1 + 16);
        if (!v14)
          operator new();
        v88 = 0;
        v15 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v15 >= *((_QWORD *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0;
        }
        else
        {
          v88 = *v15;
          *((_QWORD *)this + 1) = v15 + 1;
        }
        v16 = *((_DWORD *)this + 14);
        v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17)
          return 0;
        v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_10005A0C8(v14, this, v19, v20) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        v21 = *((_DWORD *)this + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)this + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v24 >= *((_QWORD *)this + 2) || *v24 != 26)
          continue;
        *((_QWORD *)this + 1) = v24 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 96) |= 4u;
        v25 = *(_QWORD *)(a1 + 24);
        if (!v25)
          operator new();
        v88 = 0;
        v26 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v26 >= *((_QWORD *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0;
        }
        else
        {
          v88 = *v26;
          *((_QWORD *)this + 1) = v26 + 1;
        }
        v27 = *((_DWORD *)this + 14);
        v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28)
          return 0;
        v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_10005A0C8(v25, this, v30, v31) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        v32 = *((_DWORD *)this + 14);
        v22 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v22)
          *((_DWORD *)this + 14) = v33;
        v34 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 != 34)
          continue;
        *((_QWORD *)this + 1) = v34 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 96) |= 8u;
        v35 = *(_QWORD *)(a1 + 32);
        if (!v35)
          operator new();
        v88 = 0;
        v36 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v36 >= *((_QWORD *)this + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0;
        }
        else
        {
          v88 = *v36;
          *((_QWORD *)this + 1) = v36 + 1;
        }
        v37 = *((_DWORD *)this + 14);
        v38 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v37 + 1;
        if (v37 >= v38)
          return 0;
        v39 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_10005D2A0(v35, this, v40, v41) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v39);
        v42 = *((_DWORD *)this + 14);
        v22 = __OFSUB__(v42, 1);
        v43 = v42 - 1;
        if (v43 < 0 == v22)
          *((_DWORD *)this + 14) = v43;
        v44 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v44 >= *((_QWORD *)this + 2) || *v44 != 42)
          continue;
        *((_QWORD *)this + 1) = v44 + 1;
LABEL_82:
        *(_DWORD *)(a1 + 96) |= 0x10u;
        v45 = *(void **)(a1 + 40);
        if (v45 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v45);
        if (!(_DWORD)result)
          return result;
        v46 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v46 >= *((_QWORD *)this + 2) || *v46 != 50)
          continue;
        *((_QWORD *)this + 1) = v46 + 1;
LABEL_88:
        *(_DWORD *)(a1 + 96) |= 0x20u;
        v47 = *(_QWORD *)(a1 + 48);
        if (!v47)
          operator new();
        v88 = 0;
        v48 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v48 >= *((_QWORD *)this + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0;
        }
        else
        {
          v88 = *v48;
          *((_QWORD *)this + 1) = v48 + 1;
        }
        v49 = *((_DWORD *)this + 14);
        v50 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v49 + 1;
        if (v49 >= v50)
          return 0;
        v51 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_10005E4EC(v47, this, v52, v53) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v51);
        v54 = *((_DWORD *)this + 14);
        v22 = __OFSUB__(v54, 1);
        v55 = v54 - 1;
        if (v55 < 0 == v22)
          *((_DWORD *)this + 14) = v55;
        v56 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v56 >= *((_QWORD *)this + 2) || *v56 != 58)
          continue;
        *((_QWORD *)this + 1) = v56 + 1;
LABEL_102:
        *(_DWORD *)(a1 + 96) |= 0x40u;
        v57 = *(void **)(a1 + 56);
        if (v57 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v57);
        if (!(_DWORD)result)
          return result;
        v58 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v58 >= *((_QWORD *)this + 2) || *v58 != 66)
          continue;
        *((_QWORD *)this + 1) = v58 + 1;
LABEL_108:
        *(_DWORD *)(a1 + 96) |= 0x80u;
        v59 = *(int **)(a1 + 64);
        if (!v59)
          operator new();
        v88 = 0;
        v60 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v60 >= *((_QWORD *)this + 2) || *v60 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0;
        }
        else
        {
          v88 = *v60;
          *((_QWORD *)this + 1) = v60 + 1;
        }
        v61 = *((_DWORD *)this + 14);
        v62 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v61 + 1;
        if (v61 >= v62)
          return 0;
        v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_10005BA6C(v59, this, v64, v65) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
        v66 = *((_DWORD *)this + 14);
        v22 = __OFSUB__(v66, 1);
        v67 = v66 - 1;
        if (v67 < 0 == v22)
          *((_DWORD *)this + 14) = v67;
        v68 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v68 >= *((_QWORD *)this + 2) || *v68 != 74)
          continue;
        *((_QWORD *)this + 1) = v68 + 1;
LABEL_122:
        *(_DWORD *)(a1 + 96) |= 0x100u;
        v69 = *(int **)(a1 + 72);
        if (!v69)
          operator new();
        v88 = 0;
        v70 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v70 >= *((_QWORD *)this + 2) || *v70 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0;
        }
        else
        {
          v88 = *v70;
          *((_QWORD *)this + 1) = v70 + 1;
        }
        v71 = *((_DWORD *)this + 14);
        v72 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v71 + 1;
        if (v71 >= v72)
          return 0;
        v73 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_10005BA6C(v69, this, v74, v75) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v73);
        v76 = *((_DWORD *)this + 14);
        v22 = __OFSUB__(v76, 1);
        v77 = v76 - 1;
        if (v77 < 0 == v22)
          *((_DWORD *)this + 14) = v77;
        v78 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v78 >= *((_QWORD *)this + 2) || *v78 != 82)
          continue;
        *((_QWORD *)this + 1) = v78 + 1;
LABEL_136:
        *(_DWORD *)(a1 + 96) |= 0x200u;
        v79 = *(_QWORD *)(a1 + 80);
        if (!v79)
          operator new();
        v88 = 0;
        v80 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v80 >= *((_QWORD *)this + 2) || *v80 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0;
        }
        else
        {
          v88 = *v80;
          *((_QWORD *)this + 1) = v80 + 1;
        }
        v81 = *((_DWORD *)this + 14);
        v82 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v81 + 1;
        if (v81 >= v82)
          return 0;
        v83 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_10005CA60(v79, this, v84, v85) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v83);
        v86 = *((_DWORD *)this + 14);
        v22 = __OFSUB__(v86, 1);
        v87 = v86 - 1;
        if (v87 < 0 == v22)
          *((_DWORD *)this + 14) = v87;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_54;
        goto LABEL_30;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_68;
        goto LABEL_30;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_82;
        goto LABEL_30;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_88;
        goto LABEL_30;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_102;
        goto LABEL_30;
      case 8u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_108;
        goto LABEL_30;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_122;
        goto LABEL_30;
      case 0xAu:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_30;
        goto LABEL_136;
      default:
        v9 = TagFallback & 7;
LABEL_30:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
        continue;
    }
    return result;
  }
}

void sub_10006059C()
{
  operator delete();
}

uint64_t sub_100060608(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v15;
  _QWORD *v16;

  v5 = this;
  v6 = *(_DWORD *)(this + 96);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 88), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_10085F568 + 16);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_16:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
    v8 = *(_QWORD *)(qword_10085F568 + 24);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_19:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
    v9 = *(_QWORD *)(qword_10085F568 + 32);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(5, *(_QWORD *)(v5 + 40), a2);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_23:
  v10 = *(_QWORD *)(v5 + 48);
  if (!v10)
    v10 = *(_QWORD *)(qword_10085F568 + 48);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(7, *(_QWORD *)(v5 + 56), a2);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_30;
  }
LABEL_27:
  v11 = *(_QWORD *)(v5 + 64);
  if (!v11)
    v11 = *(_QWORD *)(qword_10085F568 + 64);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_36;
    goto LABEL_33;
  }
LABEL_30:
  v12 = *(_QWORD *)(v5 + 72);
  if (!v12)
    v12 = *(_QWORD *)(qword_10085F568 + 72);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, a2, a4);
  if ((*(_DWORD *)(v5 + 96) & 0x200) != 0)
  {
LABEL_33:
    v13 = *(_QWORD *)(v5 + 80);
    if (!v13)
      v13 = *(_QWORD *)(qword_10085F568 + 80);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v13, a2, a4);
  }
LABEL_36:
  v16 = *(_QWORD **)(v5 + 8);
  v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v14 = v16;
  if (v16)
  {
    if (*v14 != v14[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v15, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000607D8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v8;
  int v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  uint64_t v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  uint64_t v15;
  unsigned int *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  const void *v24;
  unsigned int *v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v27;
  uint64_t v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  int v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  const void *v33;
  unsigned int *v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v36;
  unsigned int *v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v39;
  uint64_t v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  uint64_t v42;
  _QWORD *v43;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v44;
  _QWORD *v45;

  v4 = a2;
  if ((*((_BYTE *)this + 96) & 1) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 22);
    *(_BYTE *)a2 = 8;
    v7 = (char *)a2 + 1;
    if ((v6 & 0x80000000) != 0)
    {
      v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)v7, a3);
    }
    else
    {
      if (v6 <= 0x7F)
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v6;
        v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_8;
      }
      v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v7, a3);
    }
    v4 = v8;
  }
LABEL_8:
  v9 = *((_DWORD *)this + 24);
  if ((v9 & 2) != 0)
  {
    v10 = *((_QWORD *)this + 2);
    if (!v10)
      v10 = *(_QWORD *)(qword_10085F568 + 16);
    *(_BYTE *)v4 = 18;
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 40);
    if (v11 > 0x7F)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v11;
      v12 = (uint64_t)v4 + 2;
    }
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005A338(v10, v12, a3);
    v9 = *((_DWORD *)this + 24);
    if ((v9 & 4) == 0)
    {
LABEL_10:
      if ((v9 & 8) == 0)
        goto LABEL_11;
      goto LABEL_30;
    }
  }
  else if ((v9 & 4) == 0)
  {
    goto LABEL_10;
  }
  v13 = *((_QWORD *)this + 3);
  if (!v13)
    v13 = *(_QWORD *)(qword_10085F568 + 24);
  *(_BYTE *)v4 = 26;
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v13 + 40);
  if (v14 > 0x7F)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v14;
    v15 = (uint64_t)v4 + 2;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005A338(v13, v15, a3);
  v9 = *((_DWORD *)this + 24);
  if ((v9 & 8) == 0)
  {
LABEL_11:
    if ((v9 & 0x10) == 0)
      goto LABEL_12;
    goto LABEL_36;
  }
LABEL_30:
  v16 = (unsigned int *)*((_QWORD *)this + 4);
  if (!v16)
    v16 = *(unsigned int **)(qword_10085F568 + 32);
  *(_BYTE *)v4 = 34;
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[17];
  if (v17 > 0x7F)
  {
    v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v17;
    v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_10005DAC0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v18, a3);
  v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x10) == 0)
  {
LABEL_12:
    if ((v9 & 0x20) == 0)
      goto LABEL_13;
    goto LABEL_49;
  }
LABEL_36:
  v19 = *((_QWORD *)this + 5);
  *(_BYTE *)v4 = 42;
  if (*(char *)(v19 + 23) < 0)
    v20 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v19 + 8);
  else
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v19 + 23);
  if (v20 > 0x7F)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v20;
    v21 = (_DWORD)v4 + 2;
  }
  v22 = *(char *)(v19 + 23);
  if (v22 >= 0)
    v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19;
  else
    v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v19;
  if (v22 >= 0)
    v24 = (const void *)*(unsigned __int8 *)(v19 + 23);
  else
    v24 = (const void *)*(unsigned int *)(v19 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v23, v24, v21, a4);
  v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x20) == 0)
  {
LABEL_13:
    if ((v9 & 0x40) == 0)
      goto LABEL_14;
    goto LABEL_55;
  }
LABEL_49:
  v25 = (unsigned int *)*((_QWORD *)this + 6);
  if (!v25)
    v25 = *(unsigned int **)(qword_10085F568 + 48);
  *(_BYTE *)v4 = 50;
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[17];
  if (v26 > 0x7F)
  {
    v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v26;
    v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_10005ED0C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, v27, a3);
  v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x40) == 0)
  {
LABEL_14:
    if ((v9 & 0x80) == 0)
      goto LABEL_15;
    goto LABEL_68;
  }
LABEL_55:
  v28 = *((_QWORD *)this + 7);
  *(_BYTE *)v4 = 58;
  if (*(char *)(v28 + 23) < 0)
    v29 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v28 + 8);
  else
    v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v28 + 23);
  if (v29 > 0x7F)
  {
    v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v29;
    v30 = (_DWORD)v4 + 2;
  }
  v31 = *(char *)(v28 + 23);
  if (v31 >= 0)
    v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28;
  else
    v32 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v28;
  if (v31 >= 0)
    v33 = (const void *)*(unsigned __int8 *)(v28 + 23);
  else
    v33 = (const void *)*(unsigned int *)(v28 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v32, v33, v30, a4);
  v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x80) == 0)
  {
LABEL_15:
    if ((v9 & 0x100) == 0)
      goto LABEL_16;
    goto LABEL_74;
  }
LABEL_68:
  v34 = (unsigned int *)*((_QWORD *)this + 8);
  if (!v34)
    v34 = *(unsigned int **)(qword_10085F568 + 64);
  *(_BYTE *)v4 = 66;
  v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[10];
  if (v35 > 0x7F)
  {
    v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v35, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v35;
    v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_10005BCEC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v36, a3);
  v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x100) == 0)
  {
LABEL_16:
    if ((v9 & 0x200) == 0)
      goto LABEL_86;
    goto LABEL_80;
  }
LABEL_74:
  v37 = (unsigned int *)*((_QWORD *)this + 9);
  if (!v37)
    v37 = *(unsigned int **)(qword_10085F568 + 72);
  *(_BYTE *)v4 = 74;
  v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37[10];
  if (v38 > 0x7F)
  {
    v39 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v38, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v38;
    v39 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_10005BCEC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v37, v39, a3);
  if ((*((_DWORD *)this + 24) & 0x200) != 0)
  {
LABEL_80:
    v40 = *((_QWORD *)this + 10);
    if (!v40)
      v40 = *(_QWORD *)(qword_10085F568 + 80);
    *(_BYTE *)v4 = 82;
    v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v40 + 32);
    if (v41 > 0x7F)
    {
      v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v41;
      v42 = (uint64_t)v4 + 2;
    }
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005CC4C(v40, v42, a3);
  }
LABEL_86:
  v45 = (_QWORD *)*((_QWORD *)this + 1);
  v44 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v43 = v45;
  if (!v45 || *v43 == v43[1])
    return v4;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v44, v4, a3);
}

uint64_t sub_100060BAC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  int v37;
  int v38;
  uint64_t v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  int v41;
  int v42;
  uint64_t v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  int v45;
  int v46;
  _QWORD *v47;

  v3 = *(_DWORD *)(a1 + 96);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_67;
  }
  if ((v3 & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if ((v5 & 0x80000000) != 0)
    {
      v6 = 10;
    }
    else if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      v3 = *(_DWORD *)(a1 + 96);
    }
    else
    {
      v6 = 1;
    }
    v4 = (v6 + 1);
    if ((v3 & 2) == 0)
      goto LABEL_18;
  }
  else
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_18;
  }
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_10085F568 + 16);
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005A460(v7, a2);
  v9 = (int)v8;
  if (v8 >= 0x80)
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
  else
    v10 = 1;
  v4 = (v4 + v9 + v10 + 1);
  v3 = *(_DWORD *)(a1 + 96);
LABEL_18:
  if ((v3 & 4) != 0)
  {
    v11 = *(_QWORD *)(a1 + 24);
    if (!v11)
      v11 = *(_QWORD *)(qword_10085F568 + 24);
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005A460(v11, a2);
    v13 = (int)v12;
    if (v12 >= 0x80)
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
    else
      v14 = 1;
    v4 = (v4 + v13 + v14 + 1);
    v3 = *(_DWORD *)(a1 + 96);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  v15 = *(_QWORD *)(a1 + 32);
  if (!v15)
    v15 = *(_QWORD *)(qword_10085F568 + 32);
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005DD68(v15, a2);
  v17 = (int)v16;
  if (v16 >= 0x80)
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  else
    v18 = 1;
  v4 = (v4 + v17 + v18 + 1);
  v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_46;
  }
LABEL_37:
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(unsigned __int8 *)(v19 + 23);
  v21 = v20;
  v22 = *(_QWORD *)(v19 + 8);
  if ((v20 & 0x80u) == 0)
    v23 = *(unsigned __int8 *)(v19 + 23);
  else
    v23 = v22;
  if (v23 >= 0x80)
  {
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23, a2);
    v20 = *(unsigned __int8 *)(v19 + 23);
    v22 = *(_QWORD *)(v19 + 8);
    v3 = *(_DWORD *)(a1 + 96);
    v21 = *(_BYTE *)(v19 + 23);
  }
  else
  {
    v24 = 1;
  }
  if (v21 < 0)
    v20 = v22;
  v4 = (v4 + v24 + v20 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_52;
  }
LABEL_46:
  v25 = *(_QWORD *)(a1 + 48);
  if (!v25)
    v25 = *(_QWORD *)(qword_10085F568 + 48);
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005EFB4(v25, a2);
  v27 = (int)v26;
  if (v26 >= 0x80)
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  else
    v28 = 1;
  v4 = (v4 + v27 + v28 + 1);
  v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0)
      goto LABEL_67;
    goto LABEL_61;
  }
LABEL_52:
  v29 = *(_QWORD *)(a1 + 56);
  v30 = *(unsigned __int8 *)(v29 + 23);
  v31 = v30;
  v32 = *(_QWORD *)(v29 + 8);
  if ((v30 & 0x80u) == 0)
    v33 = *(unsigned __int8 *)(v29 + 23);
  else
    v33 = v32;
  if (v33 >= 0x80)
  {
    v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v33, a2);
    v30 = *(unsigned __int8 *)(v29 + 23);
    v32 = *(_QWORD *)(v29 + 8);
    v3 = *(_DWORD *)(a1 + 96);
    v31 = *(_BYTE *)(v29 + 23);
  }
  else
  {
    v34 = 1;
  }
  if (v31 < 0)
    v30 = v32;
  v4 = (v4 + v34 + v30 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_61:
    v35 = *(_QWORD *)(a1 + 64);
    if (!v35)
      v35 = *(_QWORD *)(qword_10085F568 + 64);
    v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005BDA4(v35, a2);
    v37 = (int)v36;
    if (v36 >= 0x80)
      v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2);
    else
      v38 = 1;
    v4 = (v4 + v37 + v38 + 1);
    v3 = *(_DWORD *)(a1 + 96);
  }
LABEL_67:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      v39 = *(_QWORD *)(a1 + 72);
      if (!v39)
        v39 = *(_QWORD *)(qword_10085F568 + 72);
      v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005BDA4(v39, a2);
      v41 = (int)v40;
      if (v40 >= 0x80)
        v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40, a2);
      else
        v42 = 1;
      v4 = (v4 + v41 + v42 + 1);
      v3 = *(_DWORD *)(a1 + 96);
    }
    if ((v3 & 0x200) != 0)
    {
      v43 = *(_QWORD *)(a1 + 80);
      if (!v43)
        v43 = *(_QWORD *)(qword_10085F568 + 80);
      v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005CD14(v43, a2);
      v45 = (int)v44;
      if (v44 >= 0x80)
        v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44, a2);
      else
        v46 = 1;
      v4 = (v4 + v45 + v46 + 1);
    }
  }
  v47 = *(_QWORD **)(a1 + 8);
  if (v47 && *v47 != v47[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 92) = v4;
  return v4;
}

uint64_t sub_100060F0C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 4066);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10005F418((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100060FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100060FCC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100061014()
{
  return 1;
}

uint64_t sub_10006101C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008541F0;
}

void sub_100061094(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1000610A8(_QWORD *a1)
{
  *a1 = off_1007FBFA0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1000610E0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000610F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 4356);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_QWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_QWORD *)(a1 + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000611A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000611C0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBFA0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000611F0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FBFA0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_100061234(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10006123C()
{
  operator new();
}

void sub_100061278()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006129C(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 36))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1000612BC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  uint64_t result;
  unint64_t v12;

  v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_22;
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 < *((_QWORD *)this + 2) && *v10 == 17)
        {
          *((_QWORD *)this + 1) = v10 + 1;
          goto LABEL_16;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v9 = TagFallback & 7;
        goto LABEL_22;
      }
      v9 = TagFallback & 7;
      if (v9 == 1)
        break;
LABEL_22:
      if (v9 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
        return 0;
    }
LABEL_16:
    v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0)
      return 0;
    *(_QWORD *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 2u;
  }
  while (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_100061430(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 36);
  }
  if ((v5 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  v8 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_1000614A8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) != 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v4;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 36);
  }
  if ((v3 & 2) != 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    *(_BYTE *)a2 = 17;
    *(_QWORD *)(a2 + 1) = v5;
    a2 += 9;
  }
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (!v8 || *v7 == v7[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100061570(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 36);
  v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
    v4 += 9;
  if (*(_BYTE *)(a1 + 36))
    v5 = v4;
  else
    v5 = 0;
  v8 = *(_QWORD **)(a1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = v8;
  if (v8 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_1000615D4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 4344);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000610F4((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10006167C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100061694(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1000616DC()
{
  return 1;
}

uint64_t sub_1000616E4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854200;
}

void sub_10006175C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100061770(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC050;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_1000617A8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000617BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 4648);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 16);
      if (!v7)
        v7 = *(_QWORD *)(qword_10085F578 + 16);
      sub_1000610F4(v6, v7);
      v5 = *(_DWORD *)(a2 + 44);
    }
    if ((v5 & 2) != 0)
    {
      v8 = *(_QWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 44) |= 2u;
      *(_QWORD *)(a1 + 24) = v8;
      v5 = *(_DWORD *)(a2 + 44);
    }
    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 4u;
      v9 = *(_QWORD *)(a1 + 32);
      if (!v9)
        operator new();
      v10 = *(_QWORD *)(a2 + 32);
      if (!v10)
        v10 = *(_QWORD *)(qword_10085F578 + 32);
      sub_100059ED4(v9, v10);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100061914()
{
  operator delete();
}

void sub_100061960(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_1007FC050;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10006199C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

_QWORD *sub_10006199C(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  if ((_QWORD *)qword_10085F578 != result)
  {
    v1 = result;
    v2 = result[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    result = (_QWORD *)v1[4];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1000619FC(_QWORD *a1)
{
  sub_100061960(a1);
  operator delete();
}

uint64_t sub_100061A20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_100061A28()
{
  operator new();
}

void sub_100061A64()
{
  operator delete();
}

uint64_t sub_100061A88(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*(_BYTE *)(this + 44))
  {
    if ((*(_BYTE *)(this + 44) & 1) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        if (*(_BYTE *)(this + 36))
        {
          *(_QWORD *)(this + 16) = 0;
          *(_QWORD *)(this + 24) = 0;
        }
        v2 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v2)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    *(_QWORD *)(v1 + 24) = 0;
    if ((*(_BYTE *)(v1 + 44) & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        if (*(_BYTE *)(this + 44))
        {
          *(_QWORD *)(this + 16) = 0;
          *(_QWORD *)(this + 24) = 0;
          *(_QWORD *)(this + 32) = 0;
        }
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_100061B24(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v18;
  int v19;
  BOOL v20;
  int v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v30;
  int v31;
  int v32;
  uint64_t result;
  unsigned int v34[2];

  v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_21;
        *(_DWORD *)(a1 + 44) |= 1u;
        v12 = *(_QWORD *)(a1 + 16);
        if (!v12)
          operator new();
        v34[0] = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0;
        }
        else
        {
          v34[0] = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)this + 14);
        v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_1000612BC(v12, this, v17, v18) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        v19 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v19, 1);
        v21 = v19 - 1;
        if (v21 < 0 == v20)
          *((_DWORD *)this + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v22 < *((_QWORD *)this + 2) && *v22 == 17)
        {
          *((_QWORD *)this + 1) = v22 + 1;
          goto LABEL_33;
        }
      }
      if (v9 != 2)
        break;
      v10 = TagFallback & 7;
      if (v10 != 1)
        goto LABEL_21;
LABEL_33:
      *(_QWORD *)v34 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v34;
      v11 = *(_DWORD *)(a1 + 44) | 2;
      *(_DWORD *)(a1 + 44) = v11;
      v23 = (_BYTE *)*((_QWORD *)this + 1);
      if ((unint64_t)v23 < *((_QWORD *)this + 2) && *v23 == 26)
      {
        *((_QWORD *)this + 1) = v23 + 1;
LABEL_37:
        *(_DWORD *)(a1 + 44) = v11 | 4;
        v24 = *(_QWORD *)(a1 + 32);
        if (!v24)
          operator new();
        v34[0] = 0;
        v25 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v25 >= *((_QWORD *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0;
        }
        else
        {
          v34[0] = *v25;
          *((_QWORD *)this + 1) = v25 + 1;
        }
        v26 = *((_DWORD *)this + 14);
        v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27)
          return 0;
        v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_10005A0C8(v24, this, v29, v30) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        v31 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v31, 1);
        v32 = v31 - 1;
        if (v32 < 0 == v20)
          *((_DWORD *)this + 14) = v32;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      v10 = TagFallback & 7;
      if (v10 == 2)
      {
        v11 = *(_DWORD *)(a1 + 44);
        goto LABEL_37;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_21:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
      return 0;
  }
}

void sub_100061E48()
{
  operator delete();
}

uint64_t sub_100061E80(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F578 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_12;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 44) & 4) == 0)
    goto LABEL_12;
LABEL_9:
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
    v8 = *(_QWORD *)(qword_10085F578 + 32);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
LABEL_12:
  v11 = *(_QWORD **)(v5 + 8);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100061F3C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  uint64_t v6;
  unsigned int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  uint64_t v13;
  _QWORD *v14;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v15;
  _QWORD *v16;

  v3 = a2;
  v5 = *((_DWORD *)this + 11);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0)
      goto LABEL_3;
LABEL_11:
    v10 = *((_QWORD *)this + 3);
    *(_BYTE *)v3 = 17;
    *(_QWORD *)((char *)v3 + 1) = v10;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    if ((*((_DWORD *)this + 11) & 4) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v6 = *((_QWORD *)this + 2);
  if (!v6)
    v6 = *(_QWORD *)(qword_10085F578 + 16);
  *(_BYTE *)a2 = 10;
  v7 = (_DWORD)a2 + 1;
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
  if (v8 > 0x7F)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v8;
    v9 = (uint64_t)v3 + 2;
  }
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000614A8(v6, v9, a3);
  v5 = *((_DWORD *)this + 11);
  if ((v5 & 2) != 0)
    goto LABEL_11;
LABEL_3:
  if ((v5 & 4) == 0)
    goto LABEL_18;
LABEL_12:
  v11 = *((_QWORD *)this + 4);
  if (!v11)
    v11 = *(_QWORD *)(qword_10085F578 + 32);
  *(_BYTE *)v3 = 26;
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v11 + 40);
  if (v12 > 0x7F)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v12;
    v13 = (uint64_t)v3 + 2;
  }
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005A338(v11, v13, a3);
LABEL_18:
  v16 = (_QWORD *)*((_QWORD *)this + 1);
  v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v14 = v16;
  if (!v16 || *v14 == v14[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v3, a3);
}

uint64_t sub_100062090(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  _QWORD *v14;

  LOBYTE(v3) = *(_BYTE *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 44) & 1) != 0)
    {
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        v6 = *(_QWORD *)(qword_10085F578 + 16);
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100061570(v6, a2);
      v8 = (int)v7;
      if (v7 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      else
        v9 = 1;
      v4 = v8 + v9 + 1;
      v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      v4 = 0;
    }
    if ((v3 & 2) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
    if ((v3 & 4) != 0)
    {
      v10 = *(_QWORD *)(a1 + 32);
      if (!v10)
        v10 = *(_QWORD *)(qword_10085F578 + 32);
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005A460(v10, a2);
      v12 = (int)v11;
      if (v11 >= 0x80)
        v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      else
        v13 = 1;
      v5 = (v5 + v12 + v13 + 1);
    }
  }
  else
  {
    v5 = 0;
  }
  v14 = *(_QWORD **)(a1 + 8);
  if (v14 && *v14 != v14[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_100062188(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 4636);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000617BC((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100062230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100062248(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100062290()
{
  return 1;
}

uint64_t sub_100062298()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854210;
}

void sub_100062310(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100062324(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC100;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_QWORD *)(a1 + 72) = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_100062370(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100062384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  _BYTE v22[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v22, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 5150);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v21, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 80);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 80) & 1) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 1u;
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 16);
      if (!v7)
        v7 = *(_QWORD *)(qword_10085F580 + 16);
      sub_100059ED4(v6, v7);
      v5 = *(_DWORD *)(a2 + 80);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 2u;
      v8 = *(_DWORD **)(a1 + 24);
      if (!v8)
        operator new();
      v9 = *(_QWORD *)(a2 + 24);
      if (!v9)
        v9 = *(_QWORD *)(qword_10085F580 + 24);
      sub_10005C02C(v8, v9);
      v5 = *(_DWORD *)(a2 + 80);
    }
    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 4u;
      v10 = *(_DWORD **)(a1 + 32);
      if (!v10)
        operator new();
      v11 = *(_QWORD *)(a2 + 32);
      if (!v11)
        v11 = *(_QWORD *)(qword_10085F580 + 32);
      sub_10005C02C(v10, v11);
      v5 = *(_DWORD *)(a2 + 80);
    }
    if ((v5 & 8) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 8u;
      v12 = *(_QWORD *)(a1 + 40);
      if (!v12)
        operator new();
      v13 = *(_QWORD *)(a2 + 40);
      if (!v13)
        v13 = *(_QWORD *)(qword_10085F580 + 40);
      sub_10005AF50(v12, v13);
      v5 = *(_DWORD *)(a2 + 80);
    }
    if ((v5 & 0x10) != 0)
    {
      v14 = *(_QWORD *)(a2 + 48);
      *(_DWORD *)(a1 + 80) |= 0x10u;
      *(_QWORD *)(a1 + 48) = v14;
      v5 = *(_DWORD *)(a2 + 80);
    }
    if ((v5 & 0x20) != 0)
    {
      v15 = *(_DWORD *)(a2 + 72);
      if ((v15 + 1) >= 4)
        sub_1003CCA28();
      *(_DWORD *)(a1 + 80) |= 0x20u;
      *(_DWORD *)(a1 + 72) = v15;
      v5 = *(_DWORD *)(a2 + 80);
    }
    if ((v5 & 0x40) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 0x40u;
      v16 = *(_QWORD *)(a1 + 56);
      if (!v16)
        operator new();
      v17 = *(_QWORD *)(a2 + 56);
      if (!v17)
        v17 = *(_QWORD *)(qword_10085F580 + 56);
      sub_1000617BC(v16, v17);
      v5 = *(_DWORD *)(a2 + 80);
    }
    if ((v5 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 0x80u;
      v18 = *(_QWORD *)(a1 + 64);
      if (!v18)
        operator new();
      v19 = *(_QWORD *)(a2 + 64);
      if (!v19)
        v19 = *(_QWORD *)(qword_10085F580 + 64);
      sub_100063980(v18, v19);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100062678()
{
  operator delete();
}

void sub_100062704(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_1007FC100;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100062740(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

_QWORD *sub_100062740(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((_QWORD *)qword_10085F580 != result)
  {
    v1 = result;
    v2 = result[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = v1[4];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = v1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = v1[7];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    result = (_QWORD *)v1[8];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1000627F0(_QWORD *a1)
{
  sub_100062704(a1);
  operator delete();
}

uint64_t sub_100062814(uint64_t result, int a2)
{
  *(_DWORD *)(result + 76) = a2;
  return result;
}

void sub_10006281C()
{
  operator new();
}

void sub_100062858()
{
  operator delete();
}

uint64_t sub_10006287C(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  uint64_t v7;

  v1 = this;
  if (*(_BYTE *)(this + 80))
  {
    if ((*(_BYTE *)(this + 80) & 1) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        if (*(_BYTE *)(this + 44))
        {
          *(_QWORD *)(this + 16) = 0;
          *(_QWORD *)(this + 24) = 0;
          *(_QWORD *)(this + 32) = 0;
        }
        v2 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    v3 = *(_DWORD *)(v1 + 80);
    if ((v3 & 2) != 0)
    {
      this = *(_QWORD *)(v1 + 24);
      if (this)
      {
        this = sub_10005C26C(this);
        v3 = *(_DWORD *)(v1 + 80);
      }
    }
    if ((v3 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        this = sub_10005C26C(this);
        v3 = *(_DWORD *)(v1 + 80);
      }
    }
    if ((v3 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 40);
      if (this)
      {
        v4 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 28) = 0;
        if (v4)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    *(_QWORD *)(v1 + 48) = 0;
    *(_DWORD *)(v1 + 72) = -1;
    v5 = *(_DWORD *)(v1 + 80);
    if ((v5 & 0x40) != 0)
    {
      this = *(_QWORD *)(v1 + 56);
      if (this)
      {
        this = sub_100061A88(this);
        v5 = *(_DWORD *)(v1 + 80);
      }
    }
    if ((v5 & 0x80) != 0)
    {
      this = *(_QWORD *)(v1 + 64);
      if (this)
        this = sub_100062968(this);
    }
  }
  v7 = *(_QWORD *)(v1 + 8);
  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 18) = 0;
  if (v7)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  return this;
}

uint64_t sub_100062968(uint64_t this)
{
  uint64_t v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;

  v1 = this;
  if ((*(_BYTE *)(this + 28) & 1) != 0)
  {
    this = *(_QWORD *)(this + 16);
    if (this)
      this = sub_100063DF4(this);
  }
  v3 = *(_QWORD *)(v1 + 8);
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  return this;
}

uint64_t sub_1000629B4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v18;
  int v19;
  BOOL v20;
  int v21;
  _BYTE *v22;
  int *v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v29;
  int v30;
  int v31;
  _BYTE *v32;
  int *v33;
  char *v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v39;
  int v40;
  int v41;
  _BYTE *v42;
  uint64_t v43;
  char *v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v49;
  int v50;
  int v51;
  _BYTE *v52;
  _BYTE *v53;
  signed int v54;
  uint64_t result;
  _BYTE *v56;
  uint64_t v57;
  char *v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v63;
  int v64;
  int v65;
  _BYTE *v66;
  uint64_t v67;
  char *v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v73;
  int v74;
  int v75;
  unsigned int v76[2];

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 < *((_QWORD *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_28;
        *(_DWORD *)(a1 + 80) |= 1u;
        v10 = *(_QWORD *)(a1 + 16);
        if (!v10)
          operator new();
        v76[0] = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0;
        }
        else
        {
          v76[0] = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        v14 = *((_DWORD *)this + 14);
        v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_10005A0C8(v10, this, v17, v18) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        v19 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v19, 1);
        v21 = v19 - 1;
        if (v21 < 0 == v20)
          *((_DWORD *)this + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v22 >= *((_QWORD *)this + 2) || *v22 != 18)
          continue;
        *((_QWORD *)this + 1) = v22 + 1;
        goto LABEL_40;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_28;
LABEL_40:
        *(_DWORD *)(a1 + 80) |= 2u;
        v23 = *(int **)(a1 + 24);
        if (!v23)
          operator new();
        v76[0] = 0;
        v24 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v24 >= *((_QWORD *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0;
        }
        else
        {
          v76[0] = *v24;
          *((_QWORD *)this + 1) = v24 + 1;
        }
        v25 = *((_DWORD *)this + 14);
        v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26)
          return 0;
        v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_10005C2DC(v23, this, v28, v29) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        v30 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v30, 1);
        v31 = v30 - 1;
        if (v31 < 0 == v20)
          *((_DWORD *)this + 14) = v31;
        v32 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 != 26)
          continue;
        *((_QWORD *)this + 1) = v32 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 80) |= 4u;
        v33 = *(int **)(a1 + 32);
        if (!v33)
          operator new();
        v76[0] = 0;
        v34 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0;
        }
        else
        {
          v76[0] = *v34;
          *((_QWORD *)this + 1) = v34 + 1;
        }
        v35 = *((_DWORD *)this + 14);
        v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36)
          return 0;
        v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_10005C2DC(v33, this, v38, v39) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        v40 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v40, 1);
        v41 = v40 - 1;
        if (v41 < 0 == v20)
          *((_DWORD *)this + 14) = v41;
        v42 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v42 >= *((_QWORD *)this + 2) || *v42 != 34)
          continue;
        *((_QWORD *)this + 1) = v42 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 80) |= 8u;
        v43 = *(_QWORD *)(a1 + 40);
        if (!v43)
          operator new();
        v76[0] = 0;
        v44 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v44 >= *((_QWORD *)this + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0;
        }
        else
        {
          v76[0] = *v44;
          *((_QWORD *)this + 1) = v44 + 1;
        }
        v45 = *((_DWORD *)this + 14);
        v46 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v45 + 1;
        if (v45 >= v46)
          return 0;
        v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_10005B11C(v43, this, v48, v49) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
        v50 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v50, 1);
        v51 = v50 - 1;
        if (v51 < 0 == v20)
          *((_DWORD *)this + 14) = v51;
        v52 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v52 >= *((_QWORD *)this + 2) || *v52 != 41)
          continue;
        *((_QWORD *)this + 1) = v52 + 1;
LABEL_82:
        *(_QWORD *)v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)v76;
        *(_DWORD *)(a1 + 80) |= 0x10u;
        v53 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v53 >= v12 || *v53 != 48)
          continue;
        v13 = v53 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_86:
        v76[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!(_DWORD)result)
            return result;
          v54 = v76[0];
        }
        else
        {
          v54 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        if ((v54 + 1) > 3)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 6, v54);
        }
        else
        {
          *(_DWORD *)(a1 + 80) |= 0x20u;
          *(_DWORD *)(a1 + 72) = v54;
        }
        v56 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v56 >= *((_QWORD *)this + 2) || *v56 != 58)
          continue;
        *((_QWORD *)this + 1) = v56 + 1;
LABEL_97:
        *(_DWORD *)(a1 + 80) |= 0x40u;
        v57 = *(_QWORD *)(a1 + 56);
        if (!v57)
          operator new();
        v76[0] = 0;
        v58 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v58 >= *((_QWORD *)this + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0;
        }
        else
        {
          v76[0] = *v58;
          *((_QWORD *)this + 1) = v58 + 1;
        }
        v59 = *((_DWORD *)this + 14);
        v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 >= v60)
          return 0;
        v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_100061B24(v57, this, v62, v63) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
        v64 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v64, 1);
        v65 = v64 - 1;
        if (v65 < 0 == v20)
          *((_DWORD *)this + 14) = v65;
        v66 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v66 >= *((_QWORD *)this + 2) || *v66 != 66)
          continue;
        *((_QWORD *)this + 1) = v66 + 1;
LABEL_111:
        *(_DWORD *)(a1 + 80) |= 0x80u;
        v67 = *(_QWORD *)(a1 + 64);
        if (!v67)
          operator new();
        v76[0] = 0;
        v68 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v68 >= *((_QWORD *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0;
        }
        else
        {
          v76[0] = *v68;
          *((_QWORD *)this + 1) = v68 + 1;
        }
        v69 = *((_DWORD *)this + 14);
        v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 >= v70)
          return 0;
        v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_1000645F8(v67, this, v72, v73) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
        v74 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v74, 1);
        v75 = v74 - 1;
        if (v75 < 0 == v20)
          *((_DWORD *)this + 14) = v75;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_54;
        goto LABEL_28;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_68;
        goto LABEL_28;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_82;
        goto LABEL_28;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_86;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_97;
        goto LABEL_28;
      case 8u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_28;
        goto LABEL_111;
      default:
        v9 = TagFallback & 7;
LABEL_28:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
        continue;
    }
  }
}

void sub_10006316C()
{
  operator delete();
}

uint64_t sub_1000631E4(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v14;
  _QWORD *v15;

  v5 = this;
  v6 = *(_DWORD *)(this + 80);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F580 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
    v8 = *(_QWORD *)(qword_10085F580 + 24);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_16:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
    v9 = *(_QWORD *)(qword_10085F580 + 32);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_19:
  v10 = *(_QWORD *)(v5 + 40);
  if (!v10)
    v10 = *(_QWORD *)(qword_10085F580 + 40);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 72), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_30;
    goto LABEL_27;
  }
LABEL_24:
  v11 = *(_QWORD *)(v5 + 56);
  if (!v11)
    v11 = *(_QWORD *)(qword_10085F580 + 56);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  if ((*(_DWORD *)(v5 + 80) & 0x80) != 0)
  {
LABEL_27:
    v12 = *(_QWORD *)(v5 + 64);
    if (!v12)
      v12 = *(_QWORD *)(qword_10085F580 + 64);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
  }
LABEL_30:
  v15 = *(_QWORD **)(v5 + 8);
  v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v13 = v15;
  if (v15)
  {
    if (*v13 != v13[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v14, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006336C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  uint64_t v6;
  unsigned int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  unsigned int *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v12;
  unsigned int *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  uint64_t v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  unint64_t v21;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v22;
  int v23;
  unsigned int *v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v26;
  unsigned int *v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v29;
  _QWORD *v30;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v31;
  _QWORD *v32;

  v3 = a2;
  v5 = *((_DWORD *)this + 20);
  if ((v5 & 1) != 0)
  {
    v6 = *((_QWORD *)this + 2);
    if (!v6)
      v6 = *(_QWORD *)(qword_10085F580 + 16);
    *(_BYTE *)a2 = 10;
    v7 = (_DWORD)a2 + 1;
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
    if (v8 > 0x7F)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      v9 = (uint64_t)v3 + 2;
    }
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005A338(v6, v9, a3);
    v5 = *((_DWORD *)this + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = (unsigned int *)*((_QWORD *)this + 3);
  if (!v10)
    v10 = *(unsigned int **)(qword_10085F580 + 24);
  *(_BYTE *)v3 = 18;
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[10];
  if (v11 > 0x7F)
  {
    v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v11;
    v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  v3 = sub_10005C55C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
  v5 = *((_DWORD *)this + 20);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_26;
  }
LABEL_20:
  v13 = (unsigned int *)*((_QWORD *)this + 4);
  if (!v13)
    v13 = *(unsigned int **)(qword_10085F580 + 32);
  *(_BYTE *)v3 = 26;
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[10];
  if (v14 > 0x7F)
  {
    v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v14;
    v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  v3 = sub_10005C55C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
  v5 = *((_DWORD *)this + 20);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_32;
  }
LABEL_26:
  v16 = *((_QWORD *)this + 5);
  if (!v16)
    v16 = *(_QWORD *)(qword_10085F580 + 40);
  *(_BYTE *)v3 = 34;
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v16 + 32);
  if (v17 > 0x7F)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v17;
    v18 = (uint64_t)v3 + 2;
  }
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005B524(v16, v18, a3);
  v5 = *((_DWORD *)this + 20);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0)
      goto LABEL_39;
    goto LABEL_33;
  }
LABEL_32:
  v19 = *((_QWORD *)this + 6);
  *(_BYTE *)v3 = 41;
  *(_QWORD *)((char *)v3 + 1) = v19;
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 20) & 0x20) == 0)
    goto LABEL_39;
LABEL_33:
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 18);
  *(_BYTE *)v3 = 48;
  v21 = (unint64_t)v3 + 1;
  if ((v20 & 0x80000000) != 0)
  {
    v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v20, v21, a3);
  }
  else
  {
    if (v20 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v20;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_39;
    }
    v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, v21, a3);
  }
  v3 = v22;
LABEL_39:
  v23 = *((_DWORD *)this + 20);
  if ((v23 & 0x40) != 0)
  {
    v24 = (unsigned int *)*((_QWORD *)this + 7);
    if (!v24)
      v24 = *(unsigned int **)(qword_10085F580 + 56);
    *(_BYTE *)v3 = 58;
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24[10];
    if (v25 > 0x7F)
    {
      v26 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v25;
      v26 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    v3 = sub_100061F3C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v24, v26, a3);
    v23 = *((_DWORD *)this + 20);
  }
  if ((v23 & 0x80) != 0)
  {
    v27 = (unsigned int *)*((_QWORD *)this + 8);
    if (!v27)
      v27 = *(unsigned int **)(qword_10085F580 + 64);
    *(_BYTE *)v3 = 66;
    v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27[6];
    if (v28 > 0x7F)
    {
      v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v28;
      v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    v3 = sub_100064838((wireless_diagnostics::google::protobuf::internal::WireFormat *)v27, v29, a3);
  }
  v32 = (_QWORD *)*((_QWORD *)this + 1);
  v31 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v30 = v32;
  if (!v32 || *v30 == v30[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v31, v3, a3);
}

uint64_t sub_10006365C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  uint64_t v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  uint64_t v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  int v31;
  _QWORD *v32;

  LOBYTE(v3) = *(_BYTE *)(a1 + 80);
  if (!(_BYTE)v3)
  {
    v5 = 0;
    goto LABEL_58;
  }
  if ((*(_BYTE *)(a1 + 80) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 80) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    v6 = *(_QWORD *)(qword_10085F580 + 16);
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005A460(v6, a2);
  v8 = (int)v7;
  if (v7 >= 0x80)
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  else
    v9 = 1;
  v4 = v8 + v9 + 1;
  v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v10 = *(_QWORD *)(a1 + 24);
    if (!v10)
      v10 = *(_QWORD *)(qword_10085F580 + 24);
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C614(v10, a2);
    v12 = (int)v11;
    if (v11 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    else
      v13 = 1;
    v4 += v12 + v13 + 1;
    v3 = *(_DWORD *)(a1 + 80);
  }
LABEL_18:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_33;
    goto LABEL_27;
  }
  v14 = *(_QWORD *)(a1 + 32);
  if (!v14)
    v14 = *(_QWORD *)(qword_10085F580 + 32);
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C614(v14, a2);
  v16 = (int)v15;
  if (v15 >= 0x80)
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
  else
    v17 = 1;
  v4 += v16 + v17 + 1;
  v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 8) != 0)
  {
LABEL_27:
    v18 = *(_QWORD *)(a1 + 40);
    if (!v18)
      v18 = *(_QWORD *)(qword_10085F580 + 40);
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005B5B4(v18, a2);
    v20 = (int)v19;
    if (v19 >= 0x80)
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
    else
      v21 = 1;
    v4 += v20 + v21 + 1;
    v3 = *(_DWORD *)(a1 + 80);
  }
LABEL_33:
  if ((v3 & 0x10) != 0)
    v5 = v4 + 9;
  else
    v5 = v4;
  if ((v3 & 0x20) != 0)
  {
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v22 & 0x80000000) != 0)
    {
      v23 = 11;
    }
    else if (v22 >= 0x80)
    {
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 80);
    }
    else
    {
      v23 = 2;
    }
    v5 = (v23 + v5);
    if ((v3 & 0x40) == 0)
    {
LABEL_38:
      if ((v3 & 0x80) == 0)
        goto LABEL_58;
      goto LABEL_52;
    }
  }
  else if ((v3 & 0x40) == 0)
  {
    goto LABEL_38;
  }
  v24 = *(_QWORD *)(a1 + 56);
  if (!v24)
    v24 = *(_QWORD *)(qword_10085F580 + 56);
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100062090(v24, a2);
  v26 = (int)v25;
  if (v25 >= 0x80)
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
  else
    v27 = 1;
  v5 = (v5 + v26 + v27 + 1);
  if ((*(_DWORD *)(a1 + 80) & 0x80) != 0)
  {
LABEL_52:
    v28 = *(_QWORD *)(a1 + 64);
    if (!v28)
      v28 = *(_QWORD *)(qword_10085F580 + 64);
    v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000648D4(v28, a2);
    v30 = (int)v29;
    if (v29 >= 0x80)
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2);
    else
      v31 = 1;
    v5 = (v5 + v30 + v31 + 1);
  }
LABEL_58:
  v32 = *(_QWORD **)(a1 + 8);
  if (v32 && *v32 != v32[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 76) = v5;
  return v5;
}

uint64_t sub_1000638C0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 5138);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100062384((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100063968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100063980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 5639);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if ((*(_BYTE *)(a2 + 28) & 1) != 0)
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    v5 = *(_QWORD *)(a1 + 16);
    if (!v5)
      operator new();
    v6 = *(_QWORD *)(a2 + 16);
    if (!v6)
      v6 = *(_QWORD *)(qword_10085F590 + 16);
    sub_100063BC4(v5, v6);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100063A5C()
{
  operator delete();
}

uint64_t sub_100063A94(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100063ADC()
{
  return 1;
}

uint64_t sub_100063AE4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854220;
}

void sub_100063B5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100063B70(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC1B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_100063BB0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100063BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 5424);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 36);
      v8 = *(int *)(a1 + 32);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v7 + 1);
          v7 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v7 + 1;
        sub_10006BCA4();
      }
      v9 = *(_QWORD *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v8 + 1;
      sub_1000610F4(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 32));
  }
  if ((*(_BYTE *)(a2 + 52) & 1) != 0)
  {
    v10 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_QWORD *)(a1 + 16) = v10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100063D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100063D28(uint64_t *a1)
{
  *a1 = (uint64_t)off_1007FC1B0;
  sub_10006BDC4(a1 + 3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100063D68(uint64_t *a1)
{
  sub_100063D28(a1);
  operator delete();
}

uint64_t sub_100063D8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_100063D94()
{
  operator new();
}

void sub_100063DD0()
{
  operator delete();
}

uint64_t sub_100063DF4(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*(_BYTE *)(this + 52))
    *(_QWORD *)(this + 16) = 0;
  if (*(int *)(this + 32) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 32));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 6) = 0;
  *((_DWORD *)v4 + 11) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_100063E70(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unint64_t *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  unsigned int v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  char *v12;
  unint64_t v13;
  _BYTE *v14;
  uint64_t result;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v25;
  int v26;
  BOOL v27;
  int v28;
  _BYTE *v29;
  unsigned int v30;

  v6 = (unint64_t *)(a1 + 16);
  v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  v8 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v9 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v9 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v12 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v12 >= v13 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        if ((unint64_t)v14 < v13 && *v14 == 18)
          goto LABEL_23;
      }
      if (TagFallback >> 3 != 2)
        break;
      v11 = TagFallback & 7;
      if (v11 != 2)
        goto LABEL_16;
      while (1)
      {
        v16 = *(_DWORD *)(a1 + 36);
        v17 = *(int *)(a1 + 32);
        if ((int)v17 >= v16)
        {
          if (v16 == *(_DWORD *)(a1 + 40))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v16 + 1);
            v16 = *(_DWORD *)(a1 + 36);
          }
          *(_DWORD *)(a1 + 36) = v16 + 1;
          sub_10006BCA4();
        }
        v18 = *(_QWORD *)(a1 + 24);
        *(_DWORD *)(a1 + 32) = v17 + 1;
        v19 = *(_QWORD *)(v18 + 8 * v17);
        v30 = 0;
        v20 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v20 >= *((_QWORD *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30))return 0;
        }
        else
        {
          v30 = *v20;
          *((_QWORD *)this + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)this + 14);
        v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22)
          return 0;
        v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v30);
        if (!sub_1000612BC(v19, this, v24, v25) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        v26 = *((_DWORD *)this + 14);
        v27 = __OFSUB__(v26, 1);
        v28 = v26 - 1;
        if (v28 < 0 == v27)
          *((_DWORD *)this + 14) = v28;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        v29 = (_BYTE *)*((_QWORD *)this + 2);
        if (v14 >= v29 || *v14 != 18)
          break;
LABEL_23:
        *((_QWORD *)this + 1) = v14 + 1;
      }
      if (v14 == v29 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v11 = TagFallback & 7;
LABEL_16:
    if (v11 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v8, a4) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1000640F8(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  if ((*(_BYTE *)(this + 52) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 16), (unint64_t)a2, a4);
  if (*(int *)(v5 + 32) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 32));
  }
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100064198(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  _QWORD *v10;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v11;
  _QWORD *v12;

  v3 = a2;
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 2);
    *(_BYTE *)a2 = 8;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)a2 + 1, a3);
  }
  if (*((int *)this + 8) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 3) + 8 * v6);
      *(_BYTE *)v3 = 18;
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v7 + 32);
      if (v8 > 0x7F)
      {
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
      }
      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v8;
        v9 = (uint64_t)v3 + 2;
      }
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000614A8(v7, v9, a3);
      ++v6;
    }
    while (v6 < *((int *)this + 8));
  }
  v12 = (_QWORD *)*((_QWORD *)this + 1);
  v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v10 = v12;
  if (!v12 || *v10 == v10[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, v3, a3);
}

uint64_t sub_100064270(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  _QWORD *v10;

  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
  else
    v3 = 0;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = (v4 + v3);
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100061570(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * v6), a2);
      v8 = (int)v7;
      if (v7 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      else
        v9 = 1;
      v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *(int *)(a1 + 32));
  }
  v10 = *(_QWORD **)(a1 + 8);
  if (v10 && *v10 != v10[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 48) = v5;
  return v5;
}

uint64_t sub_10006432C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 5412);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100063BC4((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1000643D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000643EC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100064434()
{
  return 1;
}

uint64_t sub_10006443C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854230;
}

void sub_1000644B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1000644C8(_QWORD *a1)
{
  *a1 = off_1007FC260;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_1000644FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100064510(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1007FC260;
  if ((_QWORD *)qword_10085F590 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10006456C(_QWORD *a1)
{
  sub_100064510(a1);
  operator delete();
}

uint64_t sub_100064590(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_100064598()
{
  operator new();
}

void sub_1000645D4()
{
  operator delete();
}

uint64_t sub_1000645F8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v15;
  int v16;
  BOOL v17;
  int v18;
  uint64_t result;
  unsigned int v20;

  v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
      }
      if ((_DWORD)TagFallback != 10)
        break;
      *(_DWORD *)(a1 + 28) |= 1u;
      v9 = *(_QWORD *)(a1 + 16);
      if (!v9)
        operator new();
      v20 = 0;
      v10 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0;
      }
      else
      {
        v20 = *v10;
        *((_QWORD *)this + 1) = v10 + 1;
      }
      v11 = *((_DWORD *)this + 14);
      v12 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v11 + 1;
      if (v11 >= v12)
        return 0;
      v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v20);
      if (!sub_100063E70(v9, this, v14, v15) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
      v16 = *((_DWORD *)this + 14);
      v17 = __OFSUB__(v16, 1);
      v18 = v16 - 1;
      if (v18 < 0 == v17)
        *((_DWORD *)this + 14) = v18;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
      return 0;
  }
  return 1;
}

void sub_1000647A4()
{
  operator delete();
}

uint64_t sub_1000647C8(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  if ((*(_BYTE *)(this + 28) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 16);
    if (!v6)
      v6 = *(_QWORD *)(qword_10085F590 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100064838(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  unsigned int *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    v4 = (unsigned int *)*((_QWORD *)this + 2);
    if (!v4)
      v4 = *(unsigned int **)(qword_10085F590 + 16);
    *(_BYTE *)a2 = 10;
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4[12];
    if (v5 > 0x7F)
    {
      v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v5;
      v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
    a2 = sub_100064198((wireless_diagnostics::google::protobuf::internal::WireFormat *)v4, v6, a3);
  }
  v9 = (_QWORD *)*((_QWORD *)this + 1);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v7 = v9;
  if (!v9 || *v7 == v7[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, a2, a3);
}

uint64_t sub_1000648D4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  _QWORD *v8;

  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (!v4)
      v4 = *(_QWORD *)(qword_10085F590 + 16);
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100064270(v4, a2);
    v6 = (int)v5;
    if (v5 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    else
      v7 = 1;
    v3 = (v6 + v7 + 1);
  }
  else
  {
    v3 = 0;
  }
  v8 = *(_QWORD **)(a1 + 8);
  if (v8 && *v8 != v8[1])
    v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_100064964(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 5627);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100063980((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100064A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100064A24(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100064A6C()
{
  return 1;
}

uint64_t sub_100064A74()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854240;
}

void sub_100064AEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100064B00(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC310;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 40) = xmmword_100458700;
  return a1;
}

void sub_100064B44(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100064B58(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  char v14;
  _BYTE v15[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v15, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 5933);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * v5);
      v7 = a1[7];
      v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v7 + 1);
          v7 = a1[7];
        }
        a1[7] = v7 + 1;
        sub_10006BD04();
      }
      v9 = *((_QWORD *)a1 + 2);
      a1[6] = v8 + 1;
      sub_100062384(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  LOBYTE(v10) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v10)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      v11 = *(_DWORD *)(a2 + 40);
      if ((v11 + 1) >= 6)
        sub_1003CCA78();
      a1[13] |= 1u;
      a1[10] = v11;
      v10 = *(_DWORD *)(a2 + 52);
    }
    if ((v10 & 4) != 0)
    {
      v12 = *(_DWORD *)(a2 + 44);
      if (v12 >= 9)
        sub_1003CCA50();
      a1[13] |= 4u;
      a1[11] = v12;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100064CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100064CF8(uint64_t *a1)
{
  *a1 = (uint64_t)off_1007FC310;
  sub_10006BDC4(a1 + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100064D38(uint64_t *a1)
{
  sub_100064CF8(a1);
  operator delete();
}

uint64_t sub_100064D5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_100064D64()
{
  operator new();
}

void sub_100064DA0()
{
  operator delete();
}

uint64_t sub_100064DC4(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*(_BYTE *)(this + 52))
    *(_QWORD *)(this + 40) = 0x8FFFFFFFFLL;
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 11) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_100064E48(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v10;
  int v11;
  char *v12;
  unint64_t v13;
  char *v14;
  signed int v15;
  uint64_t result;
  _BYTE *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v27;
  int v28;
  BOOL v29;
  int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2);
  v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  while (1)
  {
    while (1)
    {
LABEL_2:
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v8 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v10 = TagFallback >> 3;
      if (TagFallback >> 3 != 1)
        break;
      v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v34 = 0;
      v14 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
        if (!(_DWORD)result)
          return result;
        v15 = v34;
      }
      else
      {
        v15 = *v14;
        *((_QWORD *)this + 1) = v14 + 1;
      }
      if ((v15 + 1) > 5)
      {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v15);
      }
      else
      {
        a1[13] |= 1u;
        a1[10] = v15;
      }
      v17 = (_BYTE *)*((_QWORD *)this + 1);
      if ((unint64_t)v17 < *((_QWORD *)this + 2) && *v17 == 18)
      {
        while (1)
        {
          *((_QWORD *)this + 1) = v17 + 1;
LABEL_31:
          v18 = a1[7];
          v19 = a1[6];
          if ((int)v19 >= v18)
          {
            if (v18 == a1[8])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v18 + 1);
              v18 = a1[7];
            }
            a1[7] = v18 + 1;
            sub_10006BD04();
          }
          v20 = *((_QWORD *)a1 + 2);
          a1[6] = v19 + 1;
          v21 = *(_QWORD *)(v20 + 8 * v19);
          v35 = 0;
          v22 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v22 >= *((_QWORD *)this + 2) || *v22 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0;
          }
          else
          {
            v35 = *v22;
            *((_QWORD *)this + 1) = v22 + 1;
          }
          v23 = *((_DWORD *)this + 14);
          v24 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v23 + 1;
          if (v23 >= v24)
            return 0;
          v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
          if (!sub_1000629B4(v21, this, v26, v27) || !*((_BYTE *)this + 36))
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
          v28 = *((_DWORD *)this + 14);
          v29 = __OFSUB__(v28, 1);
          v30 = v28 - 1;
          if (v30 < 0 == v29)
            *((_DWORD *)this + 14) = v30;
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          if ((unint64_t)v17 >= v13)
            break;
          v31 = *v17;
          if (v31 != 18)
          {
            if (v31 == 24)
            {
              v12 = v17 + 1;
              *((_QWORD *)this + 1) = v12;
LABEL_49:
              v33 = 0;
              if ((unint64_t)v12 >= v13 || *v12 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
                if (!(_DWORD)result)
                  return result;
                v32 = v33;
              }
              else
              {
                v32 = *v12;
                *((_QWORD *)this + 1) = v12 + 1;
              }
              if (v32 > 8)
              {
                wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v32);
              }
              else
              {
                a1[13] |= 4u;
                a1[11] = v32;
              }
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v10 == 2)
    {
      v11 = TagFallback & 7;
      if (v11 != 2)
        goto LABEL_19;
      goto LABEL_31;
    }
    if (v10 == 3)
    {
      v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v12 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_49;
      }
    }
    else
    {
      v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
  }
}

uint64_t sub_100065180(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  if ((*(_BYTE *)(this + 52) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 40), (int)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  if ((*(_BYTE *)(v5 + 52) & 4) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 44), (int)a2, a4);
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100065238(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  uint64_t v8;
  unsigned int *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  unint64_t v13;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v14;
  _QWORD *v15;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v16;
  _QWORD *v17;

  v3 = a2;
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
    *(_BYTE *)a2 = 8;
    v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v5;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }
      v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    v3 = v7;
  }
LABEL_8:
  if (*((int *)this + 6) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = *(unsigned int **)(*((_QWORD *)this + 2) + 8 * v8);
      *(_BYTE *)v3 = 18;
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[19];
      if (v10 > 0x7F)
      {
        v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
      }
      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v10;
        v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      v3 = sub_10006336C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v9, v11, a3);
      ++v8;
    }
    while (v8 < *((int *)this + 6));
  }
  if ((*((_BYTE *)this + 52) & 4) != 0)
  {
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 11);
    *(_BYTE *)v3 = 24;
    v13 = (unint64_t)v3 + 1;
    if ((v12 & 0x80000000) != 0)
    {
      v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, v13, a3);
    }
    else
    {
      if (v12 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v12;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_21;
      }
      v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v13, a3);
    }
    v3 = v14;
  }
LABEL_21:
  v17 = (_QWORD *)*((_QWORD *)this + 1);
  v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v15 = v17;
  if (!v17 || *v15 == v15[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, v3, a3);
}

uint64_t sub_100065370(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  _QWORD *v14;

  v3 = *(_BYTE *)(a1 + 52);
  if (!v3)
  {
    v4 = 0;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 4) == 0)
        goto LABEL_19;
    }
    else if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      if ((*(_DWORD *)(a1 + 52) & 4) == 0)
        goto LABEL_19;
    }
    else
    {
      v4 = 2;
      if ((v3 & 4) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      goto LABEL_19;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if ((v6 & 0x80000000) != 0)
  {
    v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  }
  else
  {
    v7 = 2;
  }
  v4 += v7;
LABEL_19:
  v8 = *(_DWORD *)(a1 + 24);
  v9 = (v8 + v4);
  if (v8 >= 1)
  {
    v10 = 0;
    do
    {
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006365C(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v10), a2);
      v12 = (int)v11;
      if (v11 >= 0x80)
        v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      else
        v13 = 1;
      v9 = (v12 + v9 + v13);
      ++v10;
    }
    while (v10 < *(int *)(a1 + 24));
  }
  v14 = *(_QWORD **)(a1 + 8);
  if (v14 && *v14 != v14[1])
    v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v9;
  *(_DWORD *)(a1 + 48) = v9;
  return v9;
}

uint64_t sub_100065494(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 5921);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100064B58(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10006553C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100065554(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10006559C()
{
  return 1;
}

uint64_t sub_1000655A4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854250;
}

void sub_10006561C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_100065630(_QWORD *a1)
{
  *a1 = off_1007FC3C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_100065668(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006567C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 6186);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 16);
      if (!v7)
        v7 = *(_QWORD *)(qword_10085F5A0 + 16);
      sub_10005AF50(v6, v7);
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      v8 = *(_QWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_QWORD *)(a1 + 24) = v8;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100065778()
{
  operator delete();
}

void sub_1000657B0(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1007FC3C0;
  if ((_QWORD *)qword_10085F5A0 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10006580C(_QWORD *a1)
{
  sub_1000657B0(a1);
  operator delete();
}

uint64_t sub_100065830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100065838()
{
  operator new();
}

void sub_100065874()
{
  operator delete();
}

uint64_t sub_100065898(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  uint64_t v4;

  v1 = this;
  if (*(_BYTE *)(this + 36))
  {
    if ((*(_BYTE *)(this + 36) & 1) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        v2 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 28) = 0;
        if (v2)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    *(_QWORD *)(v1 + 24) = 0;
  }
  v4 = *(_QWORD *)(v1 + 8);
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  return this;
}

uint64_t sub_1000658FC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  uint64_t v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  uint64_t result;
  unint64_t v22;
  unsigned int v23;

  v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 != 2)
      {
        v9 = TagFallback & 7;
        goto LABEL_18;
      }
      v9 = TagFallback & 7;
      if (v9 == 1)
      {
LABEL_30:
        v22 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 24) = v22;
        *(_DWORD *)(a1 + 36) |= 2u;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
      else
      {
LABEL_18:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
      }
    }
    v9 = TagFallback & 7;
    if (v9 != 2)
      goto LABEL_18;
    *(_DWORD *)(a1 + 36) |= 1u;
    v10 = *(_QWORD *)(a1 + 16);
    if (!v10)
      operator new();
    v23 = 0;
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))
        return 0;
    }
    else
    {
      v23 = *v11;
      *((_QWORD *)this + 1) = v11 + 1;
    }
    v12 = *((_DWORD *)this + 14);
    v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13)
      return 0;
    v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_10005B11C(v10, this, v15, v16) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    v17 = *((_DWORD *)this + 14);
    v18 = __OFSUB__(v17, 1);
    v19 = v17 - 1;
    if (v19 < 0 == v18)
      *((_DWORD *)this + 14) = v19;
    v20 = (_BYTE *)*((_QWORD *)this + 1);
    if ((unint64_t)v20 < *((_QWORD *)this + 2) && *v20 == 17)
    {
      *((_QWORD *)this + 1) = v20 + 1;
      goto LABEL_30;
    }
  }
}

void sub_100065B1C()
{
  operator delete();
}

uint64_t sub_100065B40(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F5A0 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  v10 = *(_QWORD **)(v5 + 8);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

_BYTE *sub_100065BC8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  v4 = *((_DWORD *)this + 9);
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 2);
    if (!v5)
      v5 = *(_QWORD *)(qword_10085F5A0 + 16);
    *a2 = 10;
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v5 + 32);
    if (v6 > 0x7F)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    else
    {
      a2[1] = (_BYTE)v6;
      v7 = (uint64_t)(a2 + 2);
    }
    a2 = (_BYTE *)sub_10005B524(v5, v7, a3);
    v4 = *((_DWORD *)this + 9);
  }
  if ((v4 & 2) != 0)
  {
    v8 = *((_QWORD *)this + 3);
    *a2 = 17;
    *(_QWORD *)(a2 + 1) = v8;
    a2 += 9;
  }
  v11 = (_QWORD *)*((_QWORD *)this + 1);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v9 = v11;
  if (!v11 || *v9 == v9[1])
    return a2;
  else
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100065CB8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  _QWORD *v10;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        v6 = *(_QWORD *)(qword_10085F5A0 + 16);
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005B5B4(v6, a2);
      v8 = (int)v7;
      if (v7 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      else
        v9 = 1;
      v4 = v8 + v9 + 1;
      v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v4 = 0;
    }
    if ((v3 & 2) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  v10 = *(_QWORD **)(a1 + 8);
  if (v10 && *v10 != v10[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_100065D64(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 6174);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10006567C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100065E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100065E24(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100065E6C()
{
  return 1;
}

uint64_t sub_100065E74()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854260;
}

void sub_100065EEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_100065F00(_QWORD *a1)
{
  *a1 = off_1007FC470;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_100065F38(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100065F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v7;
  _BYTE v8[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v8, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 6402);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_10006BAB4(a1 + 16, *(_DWORD *)(a1 + 24) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100066008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100066020(_QWORD *a1)
{
  *a1 = off_1007FC470;
  if (a1[2])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100066074(_QWORD *a1)
{
  sub_100066020(a1);
  operator delete();
}

uint64_t sub_100066098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1000660A0()
{
  operator new();
}

void sub_1000660DC()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100066100(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_100066118(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  uint64_t result;
  unsigned int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  signed int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  char v25;
  unsigned int v26[12];

  v6 = a1 + 16;
  v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v8 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v10 = TagFallback & 7;
      if ((TagFallback & 0xFFFFFFF8) != 8)
        break;
      if (v10 != 2)
      {
        if (v10 != 5)
          break;
        goto LABEL_15;
      }
      result = sub_10005AB30(this, v6);
      if (!(_DWORD)result)
        return result;
      while (1)
      {
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        v24 = (_BYTE *)*((_QWORD *)this + 2);
        if (v23 >= v24 || *v23 != 13)
          break;
        *((_QWORD *)this + 1) = v23 + 1;
LABEL_15:
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0)
          return 0;
        v12 = v26[0];
        v13 = *(_DWORD *)(a1 + 24);
        if (v13 == *(_DWORD *)(a1 + 28))
        {
          sub_10006BAB4(v6, v13 + 1);
          v13 = *(_DWORD *)(a1 + 24);
        }
        v14 = *(_QWORD *)(a1 + 16);
        v15 = v13 + 1;
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(_DWORD *)(v14 + 4 * v13) = v12;
        v16 = *((_QWORD *)this + 1);
        v17 = *((_DWORD *)this + 4) - v16;
        if (v17 >= 1)
        {
          v18 = v17 / 5u;
          v19 = v18 >= *(_DWORD *)(a1 + 28) - v15 ? *(_DWORD *)(a1 + 28) - v15 : v18;
          if (v19 >= 1)
          {
            v20 = 0;
            while (*(_BYTE *)v16 == 13)
            {
              v21 = *(_DWORD *)(v16 + 1);
              if (v15 >= *(_DWORD *)(a1 + 28))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v26, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                v22 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (size()) < (Capacity()): ");
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v25, v22);
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
                v15 = *(_DWORD *)(a1 + 24);
                v14 = *(_QWORD *)(a1 + 16);
              }
              *(_DWORD *)(a1 + 24) = v15 + 1;
              *(_DWORD *)(v14 + 4 * v15) = v21;
              ++v20;
              v16 += 5;
              ++v15;
              if (v19 == v20)
              {
                v20 = v19;
                break;
              }
            }
            if (v20)
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v20);
          }
        }
      }
      if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
      return 0;
  }
}

void sub_100066380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100066398(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(*(_QWORD *)(v4 + 16) + 4 * v5++), a3);
    while (v5 < *(int *)(v4 + 24));
  }
  v8 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_100066420(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  int v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  _QWORD *v7;

  if (*(int *)(a1 + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v3);
      *(_BYTE *)a2 = 13;
      *(_DWORD *)(a2 + 1) = v4;
      a2 += 5;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 24));
  }
  v7 = *(_QWORD **)(a1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = v7;
  if (!v7 || *v6 == v6[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100066490(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  wireless_diagnostics::google::protobuf::internal::WireFormat *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = *(_QWORD **)(a1 + 8);
  v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v4 = v5;
  v6 = (5 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1])
    v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2)
       + v6;
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_1000664D8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 6390);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100065F4C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100066580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100066598(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1000665E0()
{
  return 1;
}

uint64_t sub_1000665E8()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854270;
}

void sub_100066660(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100066674(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC520;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_1000666B0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000666C4(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 6605);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * v5);
      v7 = a1[7];
      v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v7 + 1);
          v7 = a1[7];
        }
        a1[7] = v7 + 1;
        sub_10006BD64();
      }
      v9 = *((_QWORD *)a1 + 2);
      a1[6] = v8 + 1;
      sub_100065F4C(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000667F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006680C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1007FC520;
  sub_10006BDC4(a1 + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10006684C(uint64_t *a1)
{
  sub_10006680C(a1);
  operator delete();
}

uint64_t sub_100066870(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_100066878()
{
  operator new();
}

void sub_1000668B4()
{
  operator delete();
}

uint64_t sub_1000668D8(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_100066948(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v19;
  int v20;
  BOOL v21;
  int v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t result;
  unsigned int v26;

  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  v7 = (_DWORD)a1 + 8;
  while (1)
  {
LABEL_2:
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v10 = a1[7];
        v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            v10 = a1[7];
          }
          a1[7] = v10 + 1;
          sub_10006BD64();
        }
        v12 = *((_QWORD *)a1 + 2);
        a1[6] = v11 + 1;
        v13 = *(_QWORD *)(v12 + 8 * v11);
        v26 = 0;
        v14 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0;
        }
        else
        {
          v26 = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        v15 = *((_DWORD *)this + 14);
        v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
        if (!sub_100066118(v13, this, v18, v19) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        v20 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v20, 1);
        v22 = v20 - 1;
        if (v22 < 0 == v21)
          *((_DWORD *)this + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        v24 = (_BYTE *)*((_QWORD *)this + 2);
        if (v23 >= v24 || *v23 != 10)
        {
          if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)this + 1) = v23 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
      return 0;
  }
}

uint64_t sub_100066B40(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100066BC8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  char *v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  if (*((int *)this + 6) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * v5);
      *(_BYTE *)a2 = 10;
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        v8 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
      }
      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v7;
        v8 = (char *)a2 + 2;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100066420(v6, (uint64_t)v8, a3);
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
  v11 = (_QWORD *)*((_QWORD *)this + 1);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v9 = v11;
  if (!v11 || *v9 == v9[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3);
}

uint64_t sub_100066C80(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  _QWORD *v8;

  v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    v4 = 0;
    do
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100066490(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v4), a2);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      else
        v7 = 1;
      v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  v8 = *(_QWORD **)(a1 + 8);
  if (v8 && *v8 != v8[1])
    v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_100066D1C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 6593);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000666C4(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100066DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100066DDC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100066E24()
{
  return 1;
}

uint64_t sub_100066E2C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854280;
}

void sub_100066EA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100066EB8(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC5D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_QWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_QWORD *)(a1 + 176) = 0;
  return a1;
}

void sub_100066F30(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100066F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  const std::string *v21;
  std::string *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _BYTE v28[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v28, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 7579);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v27, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v28);
  }
  v5 = *(_DWORD *)(a2 + 32);
  if (v5)
  {
    sub_10006BAB4(a1 + 24, *(_DWORD *)(a1 + 32) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_10006BB4C(a1 + 40, *(_DWORD *)(a1 + 48) + v6);
    memcpy((void *)(*(_QWORD *)(a1 + 40) + 8 * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  v7 = *(_DWORD *)(a2 + 64);
  if (v7)
  {
    sub_10006BAB4(a1 + 56, *(_DWORD *)(a1 + 64) + v7);
    memcpy((void *)(*(_QWORD *)(a1 + 56) + 4 * *(int *)(a1 + 64)), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 64));
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
  }
  v8 = *(_DWORD *)(a2 + 80);
  if (v8)
  {
    sub_10006BB4C(a1 + 72, *(_DWORD *)(a1 + 80) + v8);
    memcpy((void *)(*(_QWORD *)(a1 + 72) + 8 * *(int *)(a1 + 80)), *(const void **)(a2 + 72), 8 * *(int *)(a2 + 80));
    *(_DWORD *)(a1 + 80) += *(_DWORD *)(a2 + 80);
  }
  v9 = *(_DWORD *)(a2 + 104);
  if (v9)
  {
    sub_10006BAB4(a1 + 96, *(_DWORD *)(a1 + 104) + v9);
    memcpy((void *)(*(_QWORD *)(a1 + 96) + 4 * *(int *)(a1 + 104)), *(const void **)(a2 + 96), 4 * *(int *)(a2 + 104));
    *(_DWORD *)(a1 + 104) += *(_DWORD *)(a2 + 104);
  }
  v10 = *(_DWORD *)(a2 + 136);
  if (v10)
  {
    sub_10006BAB4(a1 + 128, *(_DWORD *)(a1 + 136) + v10);
    memcpy((void *)(*(_QWORD *)(a1 + 128) + 4 * *(int *)(a1 + 136)), *(const void **)(a2 + 128), 4 * *(int *)(a2 + 136));
    *(_DWORD *)(a1 + 136) += *(_DWORD *)(a2 + 136);
  }
  v11 = *(_DWORD *)(a2 + 152);
  if (v11)
  {
    sub_10006BAB4(a1 + 144, *(_DWORD *)(a1 + 152) + v11);
    memcpy((void *)(*(_QWORD *)(a1 + 144) + 4 * *(int *)(a1 + 152)), *(const void **)(a2 + 144), 4 * *(int *)(a2 + 152));
    *(_DWORD *)(a1 + 152) += *(_DWORD *)(a2 + 152);
  }
  v12 = *(_DWORD *)(a2 + 168);
  if (v12)
  {
    sub_10006BAB4(a1 + 160, *(_DWORD *)(a1 + 168) + v12);
    memcpy((void *)(*(_QWORD *)(a1 + 160) + 4 * *(int *)(a1 + 168)), *(const void **)(a2 + 160), 4 * *(int *)(a2 + 168));
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
  }
  v13 = *(_DWORD *)(a2 + 192);
  if (v13)
  {
    sub_10006BAB4(a1 + 184, *(_DWORD *)(a1 + 192) + v13);
    memcpy((void *)(*(_QWORD *)(a1 + 184) + 4 * *(int *)(a1 + 192)), *(const void **)(a2 + 184), 4 * *(int *)(a2 + 192));
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
  }
  v14 = *(_DWORD *)(a2 + 208);
  if (v14)
  {
    sub_10006BAB4(a1 + 200, *(_DWORD *)(a1 + 208) + v14);
    memcpy((void *)(*(_QWORD *)(a1 + 200) + 4 * *(int *)(a1 + 208)), *(const void **)(a2 + 200), 4 * *(int *)(a2 + 208));
    *(_DWORD *)(a1 + 208) += *(_DWORD *)(a2 + 208);
  }
  v15 = *(_DWORD *)(a2 + 224);
  if (v15)
  {
    sub_10006BAB4(a1 + 216, *(_DWORD *)(a1 + 224) + v15);
    memcpy((void *)(*(_QWORD *)(a1 + 216) + 4 * *(int *)(a1 + 224)), *(const void **)(a2 + 216), 4 * *(int *)(a2 + 224));
    *(_DWORD *)(a1 + 224) += *(_DWORD *)(a2 + 224);
  }
  v16 = *(_DWORD *)(a2 + 240);
  if (v16)
  {
    sub_10006BAB4(a1 + 232, *(_DWORD *)(a1 + 240) + v16);
    memcpy((void *)(*(_QWORD *)(a1 + 232) + 4 * *(int *)(a1 + 240)), *(const void **)(a2 + 232), 4 * *(int *)(a2 + 240));
    *(_DWORD *)(a1 + 240) += *(_DWORD *)(a2 + 240);
  }
  v17 = *(_DWORD *)(a2 + 256);
  if (v17)
  {
    sub_10006BB4C(a1 + 248, *(_DWORD *)(a1 + 256) + v17);
    memcpy((void *)(*(_QWORD *)(a1 + 248) + 8 * *(int *)(a1 + 256)), *(const void **)(a2 + 248), 8 * *(int *)(a2 + 256));
    *(_DWORD *)(a1 + 256) += *(_DWORD *)(a2 + 256);
  }
  v18 = *(_DWORD *)(a2 + 272);
  if (v18)
  {
    sub_10006BB4C(a1 + 264, *(_DWORD *)(a1 + 272) + v18);
    memcpy((void *)(*(_QWORD *)(a1 + 264) + 8 * *(int *)(a1 + 272)), *(const void **)(a2 + 264), 8 * *(int *)(a2 + 272));
    *(_DWORD *)(a1 + 272) += *(_DWORD *)(a2 + 272);
  }
  v19 = *(_DWORD *)(a2 + 284);
  if ((_BYTE)v19)
  {
    if ((v19 & 1) != 0)
    {
      v25 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 284) |= 1u;
      *(_QWORD *)(a1 + 16) = v25;
      v19 = *(_DWORD *)(a2 + 284);
      if ((v19 & 0x20) == 0)
      {
LABEL_34:
        if ((v19 & 0x80) == 0)
          goto LABEL_36;
        goto LABEL_35;
      }
    }
    else if ((v19 & 0x20) == 0)
    {
      goto LABEL_34;
    }
    v26 = *(_QWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 284) |= 0x20u;
    *(_QWORD *)(a1 + 88) = v26;
    v19 = *(_DWORD *)(a2 + 284);
    if ((v19 & 0x80) != 0)
    {
LABEL_35:
      v20 = *(_QWORD *)(a2 + 112);
      *(_DWORD *)(a1 + 284) |= 0x80u;
      *(_QWORD *)(a1 + 112) = v20;
      v19 = *(_DWORD *)(a2 + 284);
    }
  }
LABEL_36:
  if ((v19 & 0xFF00) != 0)
  {
    if ((v19 & 0x100) != 0)
    {
      v21 = *(const std::string **)(a2 + 120);
      *(_DWORD *)(a1 + 284) |= 0x100u;
      v22 = *(std::string **)(a1 + 120);
      if (v22 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(v22, v21);
      v19 = *(_DWORD *)(a2 + 284);
    }
    if ((v19 & 0x1000) != 0)
    {
      v23 = *(_QWORD *)(a2 + 176);
      *(_DWORD *)(a1 + 284) |= 0x1000u;
      *(_QWORD *)(a1 + 176) = v23;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100067460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100067478(_QWORD *a1)
{
  *a1 = off_1007FC5D0;
  sub_100067638((uint64_t)a1);
  if (a1[33])
    operator delete[]();
  if (a1[31])
    operator delete[]();
  if (a1[29])
    operator delete[]();
  if (a1[27])
    operator delete[]();
  if (a1[25])
    operator delete[]();
  if (a1[23])
    operator delete[]();
  if (a1[20])
    operator delete[]();
  if (a1[18])
    operator delete[]();
  if (a1[16])
    operator delete[]();
  if (a1[12])
    operator delete[]();
  if (a1[9])
    operator delete[]();
  if (a1[7])
    operator delete[]();
  if (a1[5])
    operator delete[]();
  if (a1[3])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_100067638(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 120);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    operator delete();
  }
  return result;
}

void sub_10006769C(_QWORD *a1)
{
  sub_100067478(a1);
  operator delete();
}

uint64_t sub_1000676C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 280) = a2;
  return result;
}

void sub_1000676C8()
{
  operator new();
}

void sub_100067704()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100067728(uint64_t a1)
{
  int v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v4;

  v1 = *(_DWORD *)(a1 + 284);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 112) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      v2 = *(_QWORD *)(a1 + 120);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(a1 + 176) = 0;
  }
  v4 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 14) = 0;
  *((_DWORD *)result + 18) = 0;
  *((_DWORD *)result + 24) = 0;
  *((_DWORD *)result + 32) = 0;
  *((_DWORD *)result + 36) = 0;
  *((_DWORD *)result + 40) = 0;
  *((_DWORD *)result + 46) = 0;
  *((_DWORD *)result + 50) = 0;
  *((_DWORD *)result + 54) = 0;
  *((_DWORD *)result + 58) = 0;
  *((_DWORD *)result + 62) = 0;
  *((_DWORD *)result + 66) = 0;
  *((_DWORD *)result + 69) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1000677D0(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  char *v10;
  unint64_t v11;
  _BYTE *v12;
  uint64_t result;
  char *i;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  int v20;
  unint64_t v21;
  char *j;
  char *k;
  unint64_t v24;
  unsigned __int8 *v25;
  char *v26;
  unsigned __int8 *v27;
  int v28;
  _BYTE *v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  _BYTE *v35;
  unint64_t v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  int v42;
  unsigned int v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  signed int v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  signed int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  _BYTE *v72;
  unint64_t v73;
  unsigned int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  signed int v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  int v95;
  signed int v96;
  int v97;
  int v98;
  int v99;
  uint64_t v100;
  int v101;
  _BYTE *v102;
  void *v103;
  _BYTE *v104;
  unsigned int v105;
  int v106;
  uint64_t v107;
  int v108;
  int v109;
  _BYTE *v110;
  unint64_t v111;
  unsigned int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int8 *v116;
  int v117;
  unsigned int v118;
  int v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  int v123;
  signed int v124;
  int v125;
  int v126;
  int v127;
  uint64_t v128;
  int v129;
  unsigned int v130;
  int v131;
  uint64_t v132;
  int v133;
  int v134;
  _BYTE *v135;
  unint64_t v136;
  unsigned int v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  unsigned __int8 *v141;
  int v142;
  unsigned int v143;
  int v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  int v148;
  signed int v149;
  int v150;
  int v151;
  int v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unsigned int v156;
  int v157;
  uint64_t v158;
  int v159;
  unsigned __int8 *v160;
  int v161;
  signed int v162;
  int v163;
  int v164;
  int v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  unsigned int v169;
  int v170;
  uint64_t v171;
  int v172;
  unsigned __int8 *v173;
  int v174;
  signed int v175;
  int v176;
  int v177;
  int v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  int v185;
  unsigned __int8 *v186;
  int v187;
  signed int v188;
  int v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  int v198;
  unsigned __int8 *v199;
  int v200;
  signed int v201;
  int v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  unsigned __int8 *v206;
  unint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t *v212;
  unint64_t *v213;
  uint64_t v214;
  unint64_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char v225;
  unsigned int v226[2];

  v208 = a1 + 248;
  v209 = a1 + 232;
  v210 = a1 + 216;
  v211 = a1 + 264;
  v222 = a1 + 144;
  v216 = a1 + 184;
  v217 = a1 + 128;
  v220 = a1 + 160;
  v221 = a1 + 96;
  v223 = a1 + 72;
  v224 = a1 + 200;
  v218 = a1 + 40;
  v219 = a1 + 56;
  v207 = (unint64_t *)(a1 + 16);
  v214 = a1 + 24;
  v215 = (unint64_t *)(a1 + 88);
  v212 = (unint64_t *)(a1 + 176);
  v213 = (unint64_t *)(a1 + 112);
  v6 = a1 + 8;
LABEL_2:
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v10 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v207);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v207 = *v10;
          v12 = v10 + 1;
          *((_QWORD *)this + 1) = v12;
        }
        *(_DWORD *)(a1 + 284) |= 1u;
        if ((unint64_t)v12 >= v11 || *v12 != 21)
          continue;
        goto LABEL_129;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_10005AB30(this, v214);
          if (!(_DWORD)result)
            return result;
          goto LABEL_146;
        }
        if (v9 != 5)
        {
LABEL_67:
          if (v9 == 4)
            return 1;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
            return 0;
          continue;
        }
        while (1)
        {
          v226[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v226) & 1) == 0)
            return 0;
          v43 = v226[0];
          v44 = *(_DWORD *)(a1 + 32);
          if (v44 == *(_DWORD *)(a1 + 36))
          {
            sub_10006BAB4(v214, v44 + 1);
            v44 = *(_DWORD *)(a1 + 32);
          }
          v45 = *(_QWORD *)(a1 + 24);
          v46 = v44 + 1;
          *(_DWORD *)(a1 + 32) = v44 + 1;
          *(_DWORD *)(v45 + 4 * v44) = v43;
          v47 = *((_QWORD *)this + 1);
          v48 = *((_DWORD *)this + 4) - v47;
          if (v48 >= 1)
          {
            v49 = v48 / 5u;
            v50 = v49 >= *(_DWORD *)(a1 + 36) - v46 ? *(_DWORD *)(a1 + 36) - v46 : v49;
            if (v50 >= 1)
            {
              v51 = 0;
              while (*(_BYTE *)v47 == 21)
              {
                v52 = *(_DWORD *)(v47 + 1);
                if (v46 >= *(_DWORD *)(a1 + 36))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                  v53 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v53);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                  v46 = *(_DWORD *)(a1 + 32);
                  v45 = *(_QWORD *)(a1 + 24);
                }
                *(_DWORD *)(a1 + 32) = v46 + 1;
                *(_DWORD *)(v45 + 4 * v46) = v52;
                ++v51;
                v47 += 5;
                ++v46;
                if (v50 == v51)
                {
                  v51 = v50;
                  break;
                }
              }
              if (v51)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v51);
            }
          }
LABEL_146:
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v12 >= *((_QWORD *)this + 2))
            goto LABEL_2;
          v54 = *v12;
          if (v54 != 21)
            break;
LABEL_129:
          *((_QWORD *)this + 1) = v12 + 1;
        }
        if (v54 != 25)
          continue;
LABEL_149:
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_150:
        *(_QWORD *)v226 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v226) & 1) != 0)
        {
          v55 = *(_QWORD *)v226;
          v56 = *(_DWORD *)(a1 + 48);
          if (v56 == *(_DWORD *)(a1 + 52))
          {
            sub_10006BB4C(v218, v56 + 1);
            v56 = *(_DWORD *)(a1 + 48);
          }
          v57 = *(_QWORD *)(a1 + 40);
          v58 = v56 + 1;
          *(_DWORD *)(a1 + 48) = v56 + 1;
          *(_QWORD *)(v57 + 8 * v56) = v55;
          v59 = *((_QWORD *)this + 1);
          v60 = *((_DWORD *)this + 4) - v59;
          if (v60 >= 1)
          {
            v61 = v60 / 9u;
            v62 = v61 >= *(_DWORD *)(a1 + 52) - v58 ? *(_DWORD *)(a1 + 52) - v58 : v61;
            if (v62 >= 1)
            {
              v63 = 0;
              while (*(_BYTE *)v59 == 25)
              {
                v64 = *(_QWORD *)(v59 + 1);
                if (v58 >= *(_DWORD *)(a1 + 52))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                  v65 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v65);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                  v58 = *(_DWORD *)(a1 + 48);
                  v57 = *(_QWORD *)(a1 + 40);
                }
                *(_DWORD *)(a1 + 48) = v58 + 1;
                *(_QWORD *)(v57 + 8 * v58) = v64;
                ++v63;
                v59 += 9;
                ++v58;
                if (v62 == v63)
                {
                  v63 = v62;
                  break;
                }
              }
              if (v63)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v63);
            }
          }
LABEL_166:
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          if ((unint64_t)v12 >= v15)
            continue;
          v66 = *v12;
          if (v66 == 25)
            goto LABEL_149;
          if (v66 == 32)
          {
            for (i = v12 + 1; ; i = (char *)(v27 + 1))
            {
              *((_QWORD *)this + 1) = i;
LABEL_171:
              v226[0] = 0;
              if ((unint64_t)i >= v15 || *i < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v226);
                if (!(_DWORD)result)
                  return result;
                v67 = v226[0];
              }
              else
              {
                v67 = *i;
                *((_QWORD *)this + 1) = i + 1;
              }
              v68 = *(_DWORD *)(a1 + 64);
              if (v68 == *(_DWORD *)(a1 + 68))
              {
                sub_10006BAB4(v219, v68 + 1);
                v68 = *(_DWORD *)(a1 + 64);
              }
              v69 = *(_QWORD *)(a1 + 56);
              *(_DWORD *)(a1 + 64) = v68 + 1;
              *(_DWORD *)(v69 + 4 * v68) = v67;
              v70 = *(_DWORD *)(a1 + 68) - *(_DWORD *)(a1 + 64);
              if (v70 >= 1)
              {
                v71 = v70 + 1;
                do
                {
                  v72 = (_BYTE *)*((_QWORD *)this + 1);
                  v73 = *((_QWORD *)this + 2);
                  if ((unint64_t)v72 >= v73 || *v72 != 32)
                    break;
                  *((_QWORD *)this + 1) = v72 + 1;
                  v226[0] = 0;
                  if ((unint64_t)(v72 + 1) >= v73 || (char)v72[1] < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v226);
                    if (!(_DWORD)result)
                      return result;
                    v74 = v226[0];
                  }
                  else
                  {
                    v74 = v72[1];
                    *((_QWORD *)this + 1) = v72 + 2;
                  }
                  v75 = *(_DWORD *)(a1 + 64);
                  if (v75 >= *(_DWORD *)(a1 + 68))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                    v76 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v76);
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                    v75 = *(_DWORD *)(a1 + 64);
                  }
                  v77 = *(_QWORD *)(a1 + 56);
                  *(_DWORD *)(a1 + 64) = v75 + 1;
                  *(_DWORD *)(v77 + 4 * v75) = v74;
                  --v71;
                }
                while (v71 > 1);
              }
LABEL_190:
              v27 = (unsigned __int8 *)*((_QWORD *)this + 1);
              v15 = *((_QWORD *)this + 2);
              if ((unint64_t)v27 >= v15)
                break;
              v78 = *v27;
              if (v78 == 41)
              {
                while (1)
                {
                  *((_QWORD *)this + 1) = v27 + 1;
LABEL_195:
                  *(_QWORD *)v226 = 0;
                  if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v226) & 1) == 0)return 0;
                  v79 = *(_QWORD *)v226;
                  v80 = *(_DWORD *)(a1 + 80);
                  if (v80 == *(_DWORD *)(a1 + 84))
                  {
                    sub_10006BB4C(v223, v80 + 1);
                    v80 = *(_DWORD *)(a1 + 80);
                  }
                  v81 = *(_QWORD *)(a1 + 72);
                  v82 = v80 + 1;
                  *(_DWORD *)(a1 + 80) = v80 + 1;
                  *(_QWORD *)(v81 + 8 * v80) = v79;
                  v83 = *((_QWORD *)this + 1);
                  v84 = *((_DWORD *)this + 4) - v83;
                  if (v84 >= 1)
                  {
                    v85 = v84 / 9u;
                    v86 = v85 >= *(_DWORD *)(a1 + 84) - v82 ? *(_DWORD *)(a1 + 84) - v82 : v85;
                    if (v86 >= 1)
                    {
                      v87 = 0;
                      while (*(_BYTE *)v83 == 41)
                      {
                        v88 = *(_QWORD *)(v83 + 1);
                        if (v82 >= *(_DWORD *)(a1 + 84))
                        {
                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                          v89 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v89);
                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                          v82 = *(_DWORD *)(a1 + 80);
                          v81 = *(_QWORD *)(a1 + 72);
                        }
                        *(_DWORD *)(a1 + 80) = v82 + 1;
                        *(_QWORD *)(v81 + 8 * v82) = v88;
                        ++v87;
                        v83 += 9;
                        ++v82;
                        if (v86 == v87)
                        {
                          v87 = v86;
                          break;
                        }
                      }
                      if (v87)
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v87);
                    }
                  }
LABEL_95:
                  v27 = (unsigned __int8 *)*((_QWORD *)this + 1);
                  v16 = *((_QWORD *)this + 2);
                  if ((unint64_t)v27 >= v16)
                    goto LABEL_2;
                  v28 = *v27;
                  if (v28 != 41)
                  {
                    if (v28 == 48)
                    {
                      v17 = (char *)(v27 + 1);
                      *((_QWORD *)this + 1) = v27 + 1;
LABEL_99:
                      if ((unint64_t)v17 >= v16 || *v17 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v215);
                        if (!(_DWORD)result)
                          return result;
                        v29 = (_BYTE *)*((_QWORD *)this + 1);
                        v16 = *((_QWORD *)this + 2);
                      }
                      else
                      {
                        *v215 = *v17;
                        v29 = v17 + 1;
                        *((_QWORD *)this + 1) = v29;
                      }
                      *(_DWORD *)(a1 + 284) |= 0x20u;
                      if ((unint64_t)v29 < v16 && *v29 == 61)
                      {
                        while (1)
                        {
                          *((_QWORD *)this + 1) = v29 + 1;
LABEL_212:
                          v226[0] = 0;
                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v226) & 1) == 0)return 0;
                          v90 = v226[0];
                          v91 = *(_DWORD *)(a1 + 104);
                          if (v91 == *(_DWORD *)(a1 + 108))
                          {
                            sub_10006BAB4(v221, v91 + 1);
                            v91 = *(_DWORD *)(a1 + 104);
                          }
                          v92 = *(_QWORD *)(a1 + 96);
                          v93 = v91 + 1;
                          *(_DWORD *)(a1 + 104) = v91 + 1;
                          *(_DWORD *)(v92 + 4 * v91) = v90;
                          v94 = *((_QWORD *)this + 1);
                          v95 = *((_DWORD *)this + 4) - v94;
                          if (v95 >= 1)
                          {
                            v96 = v95 / 5u;
                            v97 = v96 >= *(_DWORD *)(a1 + 108) - v93 ? *(_DWORD *)(a1 + 108) - v93 : v96;
                            if (v97 >= 1)
                            {
                              v98 = 0;
                              while (*(_BYTE *)v94 == 61)
                              {
                                v99 = *(_DWORD *)(v94 + 1);
                                if (v93 >= *(_DWORD *)(a1 + 108))
                                {
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                                  v100 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v100);
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                  v93 = *(_DWORD *)(a1 + 104);
                                  v92 = *(_QWORD *)(a1 + 96);
                                }
                                *(_DWORD *)(a1 + 104) = v93 + 1;
                                *(_DWORD *)(v92 + 4 * v93) = v99;
                                ++v98;
                                v94 += 5;
                                ++v93;
                                if (v97 == v98)
                                {
                                  v98 = v97;
                                  break;
                                }
                              }
                              if (v98)
                                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v98);
                            }
                          }
LABEL_228:
                          v29 = (_BYTE *)*((_QWORD *)this + 1);
                          v18 = *((_QWORD *)this + 2);
                          if ((unint64_t)v29 >= v18)
                            break;
                          v101 = *v29;
                          if (v101 != 61)
                          {
                            if (v101 == 64)
                            {
                              v19 = v29 + 1;
                              *((_QWORD *)this + 1) = v19;
LABEL_232:
                              if ((unint64_t)v19 >= v18 || *v19 < 0)
                              {
                                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v213);
                                if (!(_DWORD)result)
                                  return result;
                                v102 = (_BYTE *)*((_QWORD *)this + 1);
                                v18 = *((_QWORD *)this + 2);
                              }
                              else
                              {
                                *v213 = *v19;
                                v102 = v19 + 1;
                                *((_QWORD *)this + 1) = v102;
                              }
                              v20 = *(_DWORD *)(a1 + 284) | 0x80;
                              *(_DWORD *)(a1 + 284) = v20;
                              if ((unint64_t)v102 < v18 && *v102 == 74)
                              {
                                *((_QWORD *)this + 1) = v102 + 1;
LABEL_240:
                                *(_DWORD *)(a1 + 284) = v20 | 0x100;
                                v103 = *(void **)(a1 + 120);
                                if (v103 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
                                  operator new();
                                result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v103);
                                if (!(_DWORD)result)
                                  return result;
                                v104 = (_BYTE *)*((_QWORD *)this + 1);
                                v21 = *((_QWORD *)this + 2);
                                if ((unint64_t)v104 < v21 && *v104 == 80)
                                {
                                  for (j = v104 + 1; ; j = (char *)(v116 + 1))
                                  {
                                    *((_QWORD *)this + 1) = j;
LABEL_247:
                                    v226[0] = 0;
                                    if ((unint64_t)j >= v21 || *j < 0)
                                    {
                                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v226);
                                      if (!(_DWORD)result)
                                        return result;
                                      v105 = v226[0];
                                    }
                                    else
                                    {
                                      v105 = *j;
                                      *((_QWORD *)this + 1) = j + 1;
                                    }
                                    v106 = *(_DWORD *)(a1 + 136);
                                    if (v106 == *(_DWORD *)(a1 + 140))
                                    {
                                      sub_10006BAB4(v217, v106 + 1);
                                      v106 = *(_DWORD *)(a1 + 136);
                                    }
                                    v107 = *(_QWORD *)(a1 + 128);
                                    *(_DWORD *)(a1 + 136) = v106 + 1;
                                    *(_DWORD *)(v107 + 4 * v106) = v105;
                                    v108 = *(_DWORD *)(a1 + 140) - *(_DWORD *)(a1 + 136);
                                    if (v108 >= 1)
                                    {
                                      v109 = v108 + 1;
                                      do
                                      {
                                        v110 = (_BYTE *)*((_QWORD *)this + 1);
                                        v111 = *((_QWORD *)this + 2);
                                        if ((unint64_t)v110 >= v111 || *v110 != 80)
                                          break;
                                        *((_QWORD *)this + 1) = v110 + 1;
                                        v226[0] = 0;
                                        if ((unint64_t)(v110 + 1) >= v111 || (char)v110[1] < 0)
                                        {
                                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v226);
                                          if (!(_DWORD)result)
                                            return result;
                                          v112 = v226[0];
                                        }
                                        else
                                        {
                                          v112 = v110[1];
                                          *((_QWORD *)this + 1) = v110 + 2;
                                        }
                                        v113 = *(_DWORD *)(a1 + 136);
                                        if (v113 >= *(_DWORD *)(a1 + 140))
                                        {
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                                          v114 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v114);
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                          v113 = *(_DWORD *)(a1 + 136);
                                        }
                                        v115 = *(_QWORD *)(a1 + 128);
                                        *(_DWORD *)(a1 + 136) = v113 + 1;
                                        *(_DWORD *)(v115 + 4 * v113) = v112;
                                        --v109;
                                      }
                                      while (v109 > 1);
                                    }
LABEL_266:
                                    v116 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                    v21 = *((_QWORD *)this + 2);
                                    if ((unint64_t)v116 >= v21)
                                      break;
                                    v117 = *v116;
                                    if (v117 == 93)
                                    {
                                      while (1)
                                      {
                                        *((_QWORD *)this + 1) = v116 + 1;
LABEL_271:
                                        v226[0] = 0;
                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v226) & 1) == 0)return 0;
                                        v118 = v226[0];
                                        v119 = *(_DWORD *)(a1 + 152);
                                        if (v119 == *(_DWORD *)(a1 + 156))
                                        {
                                          sub_10006BAB4(v222, v119 + 1);
                                          v119 = *(_DWORD *)(a1 + 152);
                                        }
                                        v120 = *(_QWORD *)(a1 + 144);
                                        v121 = v119 + 1;
                                        *(_DWORD *)(a1 + 152) = v119 + 1;
                                        *(_DWORD *)(v120 + 4 * v119) = v118;
                                        v122 = *((_QWORD *)this + 1);
                                        v123 = *((_DWORD *)this + 4) - v122;
                                        if (v123 >= 1)
                                        {
                                          v124 = v123 / 5u;
                                          v125 = v124 >= *(_DWORD *)(a1 + 156) - v121
                                               ? *(_DWORD *)(a1 + 156) - v121
                                               : v124;
                                          if (v125 >= 1)
                                          {
                                            v126 = 0;
                                            while (*(_BYTE *)v122 == 93)
                                            {
                                              v127 = *(_DWORD *)(v122 + 1);
                                              if (v121 >= *(_DWORD *)(a1 + 156))
                                              {
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                                                v128 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v128);
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                v121 = *(_DWORD *)(a1 + 152);
                                                v120 = *(_QWORD *)(a1 + 144);
                                              }
                                              *(_DWORD *)(a1 + 152) = v121 + 1;
                                              *(_DWORD *)(v120 + 4 * v121) = v127;
                                              ++v126;
                                              v122 += 5;
                                              ++v121;
                                              if (v125 == v126)
                                              {
                                                v126 = v125;
                                                break;
                                              }
                                            }
                                            if (v126)
                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v126);
                                          }
                                        }
LABEL_287:
                                        v116 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                        v24 = *((_QWORD *)this + 2);
                                        if ((unint64_t)v116 >= v24)
                                          goto LABEL_2;
                                        v129 = *v116;
                                        if (v129 != 93)
                                        {
                                          if (v129 == 96)
                                          {
                                            for (k = (char *)(v116 + 1); ; k = (char *)(v141 + 1))
                                            {
                                              *((_QWORD *)this + 1) = k;
LABEL_292:
                                              v226[0] = 0;
                                              if ((unint64_t)k >= v24 || *k < 0)
                                              {
                                                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v226);
                                                if (!(_DWORD)result)
                                                  return result;
                                                v130 = v226[0];
                                              }
                                              else
                                              {
                                                v130 = *k;
                                                *((_QWORD *)this + 1) = k + 1;
                                              }
                                              v131 = *(_DWORD *)(a1 + 168);
                                              if (v131 == *(_DWORD *)(a1 + 172))
                                              {
                                                sub_10006BAB4(v220, v131 + 1);
                                                v131 = *(_DWORD *)(a1 + 168);
                                              }
                                              v132 = *(_QWORD *)(a1 + 160);
                                              *(_DWORD *)(a1 + 168) = v131 + 1;
                                              *(_DWORD *)(v132 + 4 * v131) = v130;
                                              v133 = *(_DWORD *)(a1 + 172) - *(_DWORD *)(a1 + 168);
                                              if (v133 >= 1)
                                              {
                                                v134 = v133 + 1;
                                                do
                                                {
                                                  v135 = (_BYTE *)*((_QWORD *)this + 1);
                                                  v136 = *((_QWORD *)this + 2);
                                                  if ((unint64_t)v135 >= v136 || *v135 != 96)
                                                    break;
                                                  *((_QWORD *)this + 1) = v135 + 1;
                                                  v226[0] = 0;
                                                  if ((unint64_t)(v135 + 1) >= v136 || (char)v135[1] < 0)
                                                  {
                                                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v226);
                                                    if (!(_DWORD)result)
                                                      return result;
                                                    v137 = v226[0];
                                                  }
                                                  else
                                                  {
                                                    v137 = v135[1];
                                                    *((_QWORD *)this + 1) = v135 + 2;
                                                  }
                                                  v138 = *(_DWORD *)(a1 + 168);
                                                  if (v138 >= *(_DWORD *)(a1 + 172))
                                                  {
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                                                    v139 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                                                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v139);
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                    v138 = *(_DWORD *)(a1 + 168);
                                                  }
                                                  v140 = *(_QWORD *)(a1 + 160);
                                                  *(_DWORD *)(a1 + 168) = v138 + 1;
                                                  *(_DWORD *)(v140 + 4 * v138) = v137;
                                                  --v134;
                                                }
                                                while (v134 > 1);
                                              }
LABEL_311:
                                              v141 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                              v24 = *((_QWORD *)this + 2);
                                              if ((unint64_t)v141 >= v24)
                                                break;
                                              v142 = *v141;
                                              if (v142 == 104)
                                              {
                                                v25 = v141 + 1;
                                                *((_QWORD *)this + 1) = v25;
LABEL_316:
                                                if ((unint64_t)v25 >= v24 || (char)*v25 < 0)
                                                {
                                                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v212);
                                                  if (!(_DWORD)result)
                                                    return result;
                                                  v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                  v24 = *((_QWORD *)this + 2);
                                                }
                                                else
                                                {
                                                  *v212 = *v25;
                                                  v41 = v25 + 1;
                                                  *((_QWORD *)this + 1) = v41;
                                                }
                                                *(_DWORD *)(a1 + 284) |= 0x1000u;
                                                if ((unint64_t)v41 < v24)
                                                {
                                                  v42 = *v41;
                                                  while (v42 == 112)
                                                  {
                                                    v26 = (char *)(v41 + 1);
                                                    *((_QWORD *)this + 1) = v26;
LABEL_107:
                                                    v226[0] = 0;
                                                    if ((unint64_t)v26 >= v24 || *v26 < 0)
                                                    {
                                                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v226);
                                                      if (!(_DWORD)result)
                                                        return result;
                                                      v30 = v226[0];
                                                    }
                                                    else
                                                    {
                                                      v30 = *v26;
                                                      *((_QWORD *)this + 1) = v26 + 1;
                                                    }
                                                    v31 = *(_DWORD *)(a1 + 192);
                                                    if (v31 == *(_DWORD *)(a1 + 196))
                                                    {
                                                      sub_10006BAB4(v216, v31 + 1);
                                                      v31 = *(_DWORD *)(a1 + 192);
                                                    }
                                                    v32 = *(_QWORD *)(a1 + 184);
                                                    *(_DWORD *)(a1 + 192) = v31 + 1;
                                                    *(_DWORD *)(v32 + 4 * v31) = v30;
                                                    v33 = *(_DWORD *)(a1 + 196) - *(_DWORD *)(a1 + 192);
                                                    if (v33 >= 1)
                                                    {
                                                      v34 = v33 + 1;
                                                      do
                                                      {
                                                        v35 = (_BYTE *)*((_QWORD *)this + 1);
                                                        v36 = *((_QWORD *)this + 2);
                                                        if ((unint64_t)v35 >= v36 || *v35 != 112)
                                                          break;
                                                        *((_QWORD *)this + 1) = v35 + 1;
                                                        v226[0] = 0;
                                                        if ((unint64_t)(v35 + 1) >= v36 || (char)v35[1] < 0)
                                                        {
                                                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v226);
                                                          if (!(_DWORD)result)
                                                            return result;
                                                          v37 = v226[0];
                                                        }
                                                        else
                                                        {
                                                          v37 = v35[1];
                                                          *((_QWORD *)this + 1) = v35 + 2;
                                                        }
                                                        v38 = *(_DWORD *)(a1 + 192);
                                                        if (v38 >= *(_DWORD *)(a1 + 196))
                                                        {
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                                                          v39 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v39);
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                          v38 = *(_DWORD *)(a1 + 192);
                                                        }
                                                        v40 = *(_QWORD *)(a1 + 184);
                                                        *(_DWORD *)(a1 + 192) = v38 + 1;
                                                        *(_DWORD *)(v40 + 4 * v38) = v37;
                                                        --v34;
                                                      }
                                                      while (v34 > 1);
                                                    }
LABEL_126:
                                                    v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                    v24 = *((_QWORD *)this + 2);
                                                    if ((unint64_t)v41 >= v24)
                                                      break;
                                                    v42 = *v41;
                                                    if (v42 == 125)
                                                    {
                                                      do
                                                      {
                                                        *((_QWORD *)this + 1) = v41 + 1;
LABEL_326:
                                                        v226[0] = 0;
                                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v226) & 1) == 0)return 0;
                                                        v143 = v226[0];
                                                        v144 = *(_DWORD *)(a1 + 208);
                                                        if (v144 == *(_DWORD *)(a1 + 212))
                                                        {
                                                          sub_10006BAB4(v224, v144 + 1);
                                                          v144 = *(_DWORD *)(a1 + 208);
                                                        }
                                                        v145 = *(_QWORD *)(a1 + 200);
                                                        v146 = v144 + 1;
                                                        *(_DWORD *)(a1 + 208) = v144 + 1;
                                                        *(_DWORD *)(v145 + 4 * v144) = v143;
                                                        v147 = *((_QWORD *)this + 1);
                                                        v148 = *((_DWORD *)this + 4) - v147;
                                                        if (v148 >= 1)
                                                        {
                                                          v149 = v148 / 5u;
                                                          v150 = v149 >= *(_DWORD *)(a1 + 212) - v146
                                                               ? *(_DWORD *)(a1 + 212) - v146
                                                               : v149;
                                                          if (v150 >= 1)
                                                          {
                                                            v151 = 0;
                                                            while (*(_BYTE *)v147 == 125)
                                                            {
                                                              v152 = *(_DWORD *)(v147 + 1);
                                                              if (v146 >= *(_DWORD *)(a1 + 212))
                                                              {
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                                                                v153 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v153);
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                v146 = *(_DWORD *)(a1 + 208);
                                                                v145 = *(_QWORD *)(a1 + 200);
                                                              }
                                                              *(_DWORD *)(a1 + 208) = v146 + 1;
                                                              *(_DWORD *)(v145 + 4 * v146) = v152;
                                                              ++v151;
                                                              v147 += 5;
                                                              ++v146;
                                                              if (v150 == v151)
                                                              {
                                                                v151 = v150;
                                                                break;
                                                              }
                                                            }
                                                            if (v151)
                                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v151);
                                                          }
                                                        }
LABEL_342:
                                                        v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                        v154 = *((_QWORD *)this + 2);
                                                      }
                                                      while ((unint64_t)v41 < v154 && *v41 == 125);
                                                      if ((int)v154 - (int)v41 >= 2 && *v41 == 133 && v41[1] == 1)
                                                      {
                                                        while (1)
                                                        {
                                                          *((_QWORD *)this + 1) = v41 + 2;
LABEL_348:
                                                          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x85, TagFallback) != 2)
                                                          {
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/wire_format_lite_inl.h", 247);
                                                            v155 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (UInt32Size(tag)) == (tag_size): ");
                                                            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v155);
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                          }
                                                          v226[0] = 0;
                                                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v226) & 1) == 0)return 0;
                                                          v156 = v226[0];
                                                          v157 = *(_DWORD *)(a1 + 224);
                                                          if (v157 == *(_DWORD *)(a1 + 228))
                                                          {
                                                            sub_10006BAB4(v210, v157 + 1);
                                                            v157 = *(_DWORD *)(a1 + 224);
                                                          }
                                                          v158 = *(_QWORD *)(a1 + 216);
                                                          v159 = v157 + 1;
                                                          *(_DWORD *)(a1 + 224) = v157 + 1;
                                                          *(_DWORD *)(v158 + 4 * v157) = v156;
                                                          v160 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                          v161 = *((_DWORD *)this + 4) - (_DWORD)v160;
                                                          if (v161 >= 1)
                                                          {
                                                            v162 = v161 / 6u;
                                                            v163 = v162 >= *(_DWORD *)(a1 + 228) - v159
                                                                 ? *(_DWORD *)(a1 + 228) - v159
                                                                 : v162;
                                                            if (v163 >= 1)
                                                            {
                                                              v164 = 0;
                                                              while (*v160 == 133 && v160[1] == 1)
                                                              {
                                                                v165 = *(_DWORD *)(v160 + 2);
                                                                if (v159 >= *(_DWORD *)(a1 + 228))
                                                                {
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                                                                  v166 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                                                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v166);
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                  v159 = *(_DWORD *)(a1 + 224);
                                                                  v158 = *(_QWORD *)(a1 + 216);
                                                                }
                                                                *(_DWORD *)(a1 + 224) = v159 + 1;
                                                                *(_DWORD *)(v158 + 4 * v159) = v165;
                                                                ++v164;
                                                                v160 += 6;
                                                                ++v159;
                                                                if (v163 == v164)
                                                                {
                                                                  v164 = v163;
                                                                  break;
                                                                }
                                                              }
                                                              if (v164)
                                                                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 6 * v164);
                                                            }
                                                          }
LABEL_367:
                                                          v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                          if (*((_DWORD *)this + 4) - (int)v41 <= 1)
                                                            break;
                                                          v167 = *v41;
                                                          if (v167 == 141)
                                                          {
                                                            if (v41[1] == 1)
                                                            {
                                                              while (1)
                                                              {
                                                                *((_QWORD *)this + 1) = v41 + 2;
LABEL_374:
                                                                if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x8D, TagFallback) != 2)
                                                                {
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/wire_format_lite_inl.h", 247);
                                                                  v168 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (UInt32Size(tag)) == (tag_size): ");
                                                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v168);
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                }
                                                                v226[0] = 0;
                                                                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v226) & 1) == 0)return 0;
                                                                v169 = v226[0];
                                                                v170 = *(_DWORD *)(a1 + 240);
                                                                if (v170 == *(_DWORD *)(a1 + 244))
                                                                {
                                                                  sub_10006BAB4(v209, v170 + 1);
                                                                  v170 = *(_DWORD *)(a1 + 240);
                                                                }
                                                                v171 = *(_QWORD *)(a1 + 232);
                                                                v172 = v170 + 1;
                                                                *(_DWORD *)(a1 + 240) = v170 + 1;
                                                                *(_DWORD *)(v171 + 4 * v170) = v169;
                                                                v173 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                                v174 = *((_DWORD *)this + 4) - (_DWORD)v173;
                                                                if (v174 >= 1)
                                                                {
                                                                  v175 = v174 / 6u;
                                                                  v176 = v175 >= *(_DWORD *)(a1 + 244) - v172
                                                                       ? *(_DWORD *)(a1 + 244) - v172
                                                                       : v175;
                                                                  if (v176 >= 1)
                                                                  {
                                                                    v177 = 0;
                                                                    while (*v173 == 141 && v173[1] == 1)
                                                                    {
                                                                      v178 = *(_DWORD *)(v173 + 2);
                                                                      if (v172 >= *(_DWORD *)(a1 + 244))
                                                                      {
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                                                                        v179 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                                                                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v179);
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                        v172 = *(_DWORD *)(a1 + 240);
                                                                        v171 = *(_QWORD *)(a1 + 232);
                                                                      }
                                                                      *(_DWORD *)(a1 + 240) = v172 + 1;
                                                                      *(_DWORD *)(v171 + 4 * v172) = v178;
                                                                      ++v177;
                                                                      v173 += 6;
                                                                      ++v172;
                                                                      if (v176 == v177)
                                                                      {
                                                                        v177 = v176;
                                                                        break;
                                                                      }
                                                                    }
                                                                    if (v177)
                                                                      wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 6 * v177);
                                                                  }
                                                                }
LABEL_393:
                                                                v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                                if (*((_DWORD *)this + 4) - (int)v41 <= 1)
                                                                  break;
                                                                v180 = *v41;
                                                                if (v180 == 145)
                                                                {
                                                                  if (v41[1] == 1)
                                                                  {
                                                                    while (1)
                                                                    {
                                                                      *((_QWORD *)this + 1) = v41 + 2;
LABEL_400:
                                                                      if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x91, TagFallback) != 2)
                                                                      {
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/wire_format_lite_inl.h", 247);
                                                                        v181 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (UInt32Size(tag)) == (tag_size): ");
                                                                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v181);
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                      }
                                                                      *(_QWORD *)v226 = 0;
                                                                      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v226) & 1) == 0)return 0;
                                                                      v182 = *(_QWORD *)v226;
                                                                      v183 = *(_DWORD *)(a1 + 256);
                                                                      if (v183 == *(_DWORD *)(a1 + 260))
                                                                      {
                                                                        sub_10006BB4C(v208, v183 + 1);
                                                                        v183 = *(_DWORD *)(a1 + 256);
                                                                      }
                                                                      v184 = *(_QWORD *)(a1 + 248);
                                                                      v185 = v183 + 1;
                                                                      *(_DWORD *)(a1 + 256) = v183 + 1;
                                                                      *(_QWORD *)(v184 + 8 * v183) = v182;
                                                                      v186 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                                      v187 = *((_DWORD *)this + 4) - (_DWORD)v186;
                                                                      if (v187 >= 1)
                                                                      {
                                                                        v188 = v187 / 0xAu;
                                                                        v189 = v188 >= *(_DWORD *)(a1 + 260) - v185
                                                                             ? *(_DWORD *)(a1 + 260) - v185
                                                                             : v188;
                                                                        if (v189 >= 1)
                                                                        {
                                                                          v190 = 0;
                                                                          while (*v186 == 145 && v186[1] == 1)
                                                                          {
                                                                            v191 = *(_QWORD *)(v186 + 2);
                                                                            if (v185 >= *(_DWORD *)(a1 + 260))
                                                                            {
                                                                              wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                                                                              v192 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                                                                              wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v192);
                                                                              wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                              v185 = *(_DWORD *)(a1 + 256);
                                                                              v184 = *(_QWORD *)(a1 + 248);
                                                                            }
                                                                            *(_DWORD *)(a1 + 256) = v185 + 1;
                                                                            *(_QWORD *)(v184 + 8 * v185) = v191;
                                                                            ++v190;
                                                                            v186 += 10;
                                                                            ++v185;
                                                                            if (v189 == v190)
                                                                            {
                                                                              v190 = v189;
                                                                              break;
                                                                            }
                                                                          }
                                                                          if (v190)
                                                                            wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 10 * v190);
                                                                        }
                                                                      }
LABEL_419:
                                                                      v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                                      if (*((_DWORD *)this + 4) - (int)v41 <= 1)
                                                                        goto LABEL_2;
                                                                      v193 = *v41;
                                                                      if (v193 == 153)
                                                                        break;
                                                                      if (v193 != 145 || v41[1] != 1)
                                                                        goto LABEL_2;
                                                                    }
                                                                    if (v41[1] == 1)
                                                                    {
                                                                      do
                                                                      {
                                                                        *((_QWORD *)this + 1) = v41 + 2;
LABEL_426:
                                                                        if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x99, TagFallback) != 2)
                                                                        {
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/wire_format_lite_inl.h", 247);
                                                                          v194 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (UInt32Size(tag)) == (tag_size): ");
                                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v194);
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                        }
                                                                        *(_QWORD *)v226 = 0;
                                                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v226) & 1) == 0)return 0;
                                                                        v195 = *(_QWORD *)v226;
                                                                        v196 = *(_DWORD *)(a1 + 272);
                                                                        if (v196 == *(_DWORD *)(a1 + 276))
                                                                        {
                                                                          sub_10006BB4C(v211, v196 + 1);
                                                                          v196 = *(_DWORD *)(a1 + 272);
                                                                        }
                                                                        v197 = *(_QWORD *)(a1 + 264);
                                                                        v198 = v196 + 1;
                                                                        *(_DWORD *)(a1 + 272) = v196 + 1;
                                                                        *(_QWORD *)(v197 + 8 * v196) = v195;
                                                                        v199 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                                        v200 = *((_DWORD *)this + 4) - (_DWORD)v199;
                                                                        if (v200 >= 1)
                                                                        {
                                                                          v201 = v200 / 0xAu;
                                                                          v202 = v201 >= *(_DWORD *)(a1 + 276) - v198
                                                                               ? *(_DWORD *)(a1 + 276) - v198
                                                                               : v201;
                                                                          if (v202 >= 1)
                                                                          {
                                                                            v203 = 0;
                                                                            while (*v199 == 153 && v199[1] == 1)
                                                                            {
                                                                              v204 = *(_QWORD *)(v199 + 2);
                                                                              if (v198 >= *(_DWORD *)(a1 + 276))
                                                                              {
                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v226, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                                                                                v205 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v226, "CHECK failed: (size()) < (Capacity()): ");
                                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v205);
                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                                v198 = *(_DWORD *)(a1 + 272);
                                                                                v197 = *(_QWORD *)(a1 + 264);
                                                                              }
                                                                              *(_DWORD *)(a1 + 272) = v198 + 1;
                                                                              *(_QWORD *)(v197 + 8 * v198) = v204;
                                                                              ++v203;
                                                                              v199 += 10;
                                                                              ++v198;
                                                                              if (v202 == v203)
                                                                              {
                                                                                v203 = v202;
                                                                                break;
                                                                              }
                                                                            }
                                                                            if (v203)
                                                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 10 * v203);
                                                                          }
                                                                        }
LABEL_445:
                                                                        v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
                                                                        v206 = (unsigned __int8 *)*((_QWORD *)this + 2);
                                                                      }
                                                                      while ((int)v206 - (int)v41 > 1
                                                                           && *v41 == 153
                                                                           && v41[1] == 1);
                                                                      if (v41 == v206
                                                                        && (*((_DWORD *)this + 11)
                                                                         || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                                                                      {
                                                                        *((_DWORD *)this + 8) = 0;
                                                                        result = 1;
                                                                        *((_BYTE *)this + 36) = 1;
                                                                        return result;
                                                                      }
                                                                    }
                                                                  }
                                                                  goto LABEL_2;
                                                                }
                                                                if (v180 != 141 || v41[1] != 1)
                                                                  goto LABEL_2;
                                                              }
                                                            }
                                                            goto LABEL_2;
                                                          }
                                                          if (v167 != 133 || v41[1] != 1)
                                                            goto LABEL_2;
                                                        }
                                                      }
                                                      goto LABEL_2;
                                                    }
                                                  }
                                                }
                                                goto LABEL_2;
                                              }
                                              if (v142 != 96)
                                                goto LABEL_2;
                                            }
                                          }
                                          goto LABEL_2;
                                        }
                                      }
                                    }
                                    if (v117 != 80)
                                      goto LABEL_2;
                                  }
                                }
                              }
                            }
                            goto LABEL_2;
                          }
                        }
                      }
                    }
                    goto LABEL_2;
                  }
                }
              }
              if (v78 != 32)
                goto LABEL_2;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_150;
        if (v9 != 2)
          goto LABEL_67;
        result = sub_10005B3A4(this, v218);
        if (!(_DWORD)result)
          return result;
        goto LABEL_166;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_100069274(this, v219);
          if (!(_DWORD)result)
            return result;
          goto LABEL_190;
        }
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        i = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_171;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_195;
        if (v9 != 2)
          goto LABEL_67;
        result = sub_10005B3A4(this, v223);
        if (!(_DWORD)result)
          return result;
        goto LABEL_95;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_99;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_10005AB30(this, v221);
          if (!(_DWORD)result)
            return result;
          goto LABEL_228;
        }
        if (v9 == 5)
          goto LABEL_212;
        goto LABEL_67;
      case 8u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v19 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_232;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_67;
        v20 = *(_DWORD *)(a1 + 284);
        goto LABEL_240;
      case 0xAu:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_100069274(this, v217);
          if (!(_DWORD)result)
            return result;
          goto LABEL_266;
        }
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        j = (char *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        goto LABEL_247;
      case 0xBu:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_10005AB30(this, v222);
          if (!(_DWORD)result)
            return result;
          goto LABEL_287;
        }
        if (v9 == 5)
          goto LABEL_271;
        goto LABEL_67;
      case 0xCu:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_100069274(this, v220);
          if (!(_DWORD)result)
            return result;
          goto LABEL_311;
        }
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        k = (char *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        goto LABEL_292;
      case 0xDu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v25 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        goto LABEL_316;
      case 0xEu:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_100069274(this, v216);
          if (!(_DWORD)result)
            return result;
          goto LABEL_126;
        }
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v26 = (char *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        goto LABEL_107;
      case 0xFu:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_10005AB30(this, v224);
          if (!(_DWORD)result)
            return result;
          goto LABEL_342;
        }
        if (v9 == 5)
          goto LABEL_326;
        goto LABEL_67;
      case 0x10u:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_10005AB30(this, v210);
          if (!(_DWORD)result)
            return result;
          goto LABEL_367;
        }
        if (v9 == 5)
          goto LABEL_348;
        goto LABEL_67;
      case 0x11u:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_10005AB30(this, v209);
          if (!(_DWORD)result)
            return result;
          goto LABEL_393;
        }
        if (v9 == 5)
          goto LABEL_374;
        goto LABEL_67;
      case 0x12u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_400;
        if (v9 != 2)
          goto LABEL_67;
        result = sub_10005B3A4(this, v208);
        if (!(_DWORD)result)
          return result;
        goto LABEL_419;
      case 0x13u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_426;
        if (v9 != 2)
          goto LABEL_67;
        result = sub_10005B3A4(this, v211);
        if (!(_DWORD)result)
          return result;
        goto LABEL_445;
      default:
        v9 = TagFallback & 7;
        goto LABEL_67;
    }
  }
}

void sub_1000691D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&a28);
  _Unwind_Resume(a1);
}

uint64_t sub_100069274(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  char *v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  char *v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;

  v12 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
    if (!(_DWORD)result)
      return result;
    v5 = v12;
  }
  else
  {
    v5 = *v4;
    v12 = v5;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v13 = 0;
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
        if (!(_DWORD)result)
          return result;
        v9 = v13;
      }
      else
      {
        v9 = *v8;
        *((_QWORD *)this + 1) = v8 + 1;
      }
      v10 = *(_DWORD *)(a2 + 8);
      if (v10 == *(_DWORD *)(a2 + 12))
      {
        sub_10006BAB4(a2, v10 + 1);
        v10 = *(_DWORD *)(a2 + 8);
      }
      v11 = *(_QWORD *)a2;
      *(_DWORD *)(a2 + 8) = v10 + 1;
      *(_DWORD *)(v11 + 4 * v10) = v9;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_100069388(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v22;
  _QWORD *v23;

  v5 = this;
  if ((*(_BYTE *)(this + 284) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 16), (unint64_t)a2, a4);
  if (*(int *)(v5 + 32) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(*(_QWORD *)(v5 + 24) + 4 * v6++), a3);
    while (v6 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(*(_QWORD *)(v5 + 40) + 8 * v7++), a3);
    while (v7 < *(int *)(v5 + 48));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v8++), (int)a2, a4);
    while (v8 < *(int *)(v5 + 64));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(*(_QWORD *)(v5 + 72) + 8 * v9++), a3);
    while (v9 < *(int *)(v5 + 80));
  }
  if ((*(_BYTE *)(v5 + 284) & 0x20) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(v5 + 88), (unint64_t)a2, a4);
  if (*(int *)(v5 + 104) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(*(_QWORD *)(v5 + 96) + 4 * v10++), a3);
    while (v10 < *(int *)(v5 + 104));
  }
  v11 = *(_DWORD *)(v5 + 284);
  if ((v11 & 0x80) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(v5 + 112), (unint64_t)a2, a4);
    v11 = *(_DWORD *)(v5 + 284);
  }
  if ((v11 & 0x100) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(9, *(_QWORD *)(v5 + 120), a2);
  if (*(int *)(v5 + 136) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(*(_QWORD *)(v5 + 128) + 4 * v12++), (int)a2, a4);
    while (v12 < *(int *)(v5 + 136));
  }
  if (*(int *)(v5 + 152) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(float *)(*(_QWORD *)(v5 + 144) + 4 * v13++), a3);
    while (v13 < *(int *)(v5 + 152));
  }
  if (*(int *)(v5 + 168) >= 1)
  {
    v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(*(_QWORD *)(v5 + 160) + 4 * v14++), (int)a2, a4);
    while (v14 < *(int *)(v5 + 168));
  }
  if ((*(_BYTE *)(v5 + 285) & 0x10) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(_QWORD *)(v5 + 176), (unint64_t)a2, a4);
  if (*(int *)(v5 + 192) >= 1)
  {
    v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(*(_QWORD *)(v5 + 184) + 4 * v15++), (int)a2, a4);
    while (v15 < *(int *)(v5 + 192));
  }
  if (*(int *)(v5 + 208) >= 1)
  {
    v16 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, *(float *)(*(_QWORD *)(v5 + 200) + 4 * v16++), a3);
    while (v16 < *(int *)(v5 + 208));
  }
  if (*(int *)(v5 + 224) >= 1)
  {
    v17 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (int)a2, *(float *)(*(_QWORD *)(v5 + 216) + 4 * v17++), a3);
    while (v17 < *(int *)(v5 + 224));
  }
  if (*(int *)(v5 + 240) >= 1)
  {
    v18 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (int)a2, *(float *)(*(_QWORD *)(v5 + 232) + 4 * v18++), a3);
    while (v18 < *(int *)(v5 + 240));
  }
  if (*(int *)(v5 + 256) >= 1)
  {
    v19 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (int)a2, *(double *)(*(_QWORD *)(v5 + 248) + 8 * v19++), a3);
    while (v19 < *(int *)(v5 + 256));
  }
  if (*(int *)(v5 + 272) >= 1)
  {
    v20 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (int)a2, *(double *)(*(_QWORD *)(v5 + 264) + 8 * v20++), a3);
    while (v20 < *(int *)(v5 + 272));
  }
  v23 = *(_QWORD **)(v5 + 8);
  v22 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v21 = v23;
  if (v23)
  {
    if (*v21 != v21[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v22, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006972C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  unint64_t v13;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v14;
  uint64_t v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  uint64_t v18;
  int v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  uint64_t v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  const void *v27;
  uint64_t v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  unint64_t v30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  unint64_t v36;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  uint64_t v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  unint64_t v41;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v54;
  _QWORD *v55;

  v4 = a2;
  if ((*((_BYTE *)this + 284) & 1) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 2);
    *(_BYTE *)a2 = 8;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
  }
  if (*((int *)this + 8) >= 1)
  {
    v7 = 0;
    do
    {
      v8 = *(_DWORD *)(*((_QWORD *)this + 3) + 4 * v7);
      *(_BYTE *)v4 = 21;
      *(_DWORD *)((char *)v4 + 1) = v8;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v7;
    }
    while (v7 < *((int *)this + 8));
  }
  if (*((int *)this + 12) >= 1)
  {
    v9 = 0;
    do
    {
      v10 = *(_QWORD *)(*((_QWORD *)this + 5) + 8 * v9);
      *(_BYTE *)v4 = 25;
      *(_QWORD *)((char *)v4 + 1) = v10;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
      ++v9;
    }
    while (v9 < *((int *)this + 12));
  }
  if (*((int *)this + 16) >= 1)
  {
    v11 = 0;
    while (1)
    {
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 7) + 4 * v11);
      *(_BYTE *)v4 = 32;
      v13 = (unint64_t)v4 + 1;
      if ((v12 & 0x80000000) != 0)
        break;
      if (v12 > 0x7F)
      {
        v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v13, a3);
        goto LABEL_16;
      }
      *((_BYTE *)v4 + 1) = (_BYTE)v12;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_17:
      if (++v11 >= *((int *)this + 16))
        goto LABEL_18;
    }
    v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, v13, a3);
LABEL_16:
    v4 = v14;
    goto LABEL_17;
  }
LABEL_18:
  if (*((int *)this + 20) >= 1)
  {
    v15 = 0;
    do
    {
      v16 = *(_QWORD *)(*((_QWORD *)this + 9) + 8 * v15);
      *(_BYTE *)v4 = 41;
      *(_QWORD *)((char *)v4 + 1) = v16;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
      ++v15;
    }
    while (v15 < *((int *)this + 20));
  }
  if ((*((_BYTE *)this + 284) & 0x20) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 11);
    *(_BYTE *)v4 = 48;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, (unint64_t)v4 + 1, a3);
  }
  if (*((int *)this + 26) >= 1)
  {
    v18 = 0;
    do
    {
      v19 = *(_DWORD *)(*((_QWORD *)this + 12) + 4 * v18);
      *(_BYTE *)v4 = 61;
      *(_DWORD *)((char *)v4 + 1) = v19;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v18;
    }
    while (v18 < *((int *)this + 26));
  }
  v20 = *((_DWORD *)this + 71);
  if ((v20 & 0x80) != 0)
  {
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 14);
    *(_BYTE *)v4 = 64;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v21, (unint64_t)v4 + 1, a3);
    v20 = *((_DWORD *)this + 71);
  }
  if ((v20 & 0x100) != 0)
  {
    v22 = *((_QWORD *)this + 15);
    *(_BYTE *)v4 = 74;
    if (*(char *)(v22 + 23) < 0)
      v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v22 + 8);
    else
      v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v22 + 23);
    if (v23 > 0x7F)
    {
      v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v23;
      v24 = (_DWORD)v4 + 2;
    }
    v25 = *(char *)(v22 + 23);
    if (v25 >= 0)
      v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22;
    else
      v26 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v22;
    if (v25 >= 0)
      v27 = (const void *)*(unsigned __int8 *)(v22 + 23);
    else
      v27 = (const void *)*(unsigned int *)(v22 + 8);
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v26, v27, v24, a4);
  }
  if (*((int *)this + 34) >= 1)
  {
    v28 = 0;
    while (1)
    {
      v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 16) + 4 * v28);
      *(_BYTE *)v4 = 80;
      v30 = (unint64_t)v4 + 1;
      if ((v29 & 0x80000000) != 0)
        break;
      if (v29 > 0x7F)
      {
        v31 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, v30, a3);
        goto LABEL_49;
      }
      *((_BYTE *)v4 + 1) = (_BYTE)v29;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_50:
      if (++v28 >= *((int *)this + 34))
        goto LABEL_51;
    }
    v31 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v29, v30, a3);
LABEL_49:
    v4 = v31;
    goto LABEL_50;
  }
LABEL_51:
  if (*((int *)this + 38) >= 1)
  {
    v32 = 0;
    do
    {
      v33 = *(_DWORD *)(*((_QWORD *)this + 18) + 4 * v32);
      *(_BYTE *)v4 = 93;
      *(_DWORD *)((char *)v4 + 1) = v33;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v32;
    }
    while (v32 < *((int *)this + 38));
  }
  if (*((int *)this + 42) >= 1)
  {
    v34 = 0;
    while (1)
    {
      v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 20) + 4 * v34);
      *(_BYTE *)v4 = 96;
      v36 = (unint64_t)v4 + 1;
      if ((v35 & 0x80000000) != 0)
        break;
      if (v35 > 0x7F)
      {
        v37 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v35, v36, a3);
        goto LABEL_61;
      }
      *((_BYTE *)v4 + 1) = (_BYTE)v35;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_62:
      if (++v34 >= *((int *)this + 42))
        goto LABEL_63;
    }
    v37 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v35, v36, a3);
LABEL_61:
    v4 = v37;
    goto LABEL_62;
  }
LABEL_63:
  if ((*((_BYTE *)this + 285) & 0x10) != 0)
  {
    v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 22);
    *(_BYTE *)v4 = 104;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v38, (unint64_t)v4 + 1, a3);
  }
  if (*((int *)this + 48) >= 1)
  {
    v39 = 0;
    while (1)
    {
      v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 23) + 4 * v39);
      *(_BYTE *)v4 = 112;
      v41 = (unint64_t)v4 + 1;
      if ((v40 & 0x80000000) != 0)
        break;
      if (v40 > 0x7F)
      {
        v42 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v40, v41, a3);
        goto LABEL_72;
      }
      *((_BYTE *)v4 + 1) = (_BYTE)v40;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_73:
      if (++v39 >= *((int *)this + 48))
        goto LABEL_74;
    }
    v42 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v40, v41, a3);
LABEL_72:
    v4 = v42;
    goto LABEL_73;
  }
LABEL_74:
  if (*((int *)this + 52) >= 1)
  {
    v43 = 0;
    do
    {
      v44 = *(_DWORD *)(*((_QWORD *)this + 25) + 4 * v43);
      *(_BYTE *)v4 = 125;
      *(_DWORD *)((char *)v4 + 1) = v44;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v43;
    }
    while (v43 < *((int *)this + 52));
  }
  if (*((int *)this + 56) >= 1)
  {
    v45 = 0;
    do
    {
      v46 = *(_DWORD *)(*((_QWORD *)this + 27) + 4 * v45);
      *(_WORD *)v4 = 389;
      *(_DWORD *)((char *)v4 + 2) = v46;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 6);
      ++v45;
    }
    while (v45 < *((int *)this + 56));
  }
  if (*((int *)this + 60) >= 1)
  {
    v47 = 0;
    do
    {
      v48 = *(_DWORD *)(*((_QWORD *)this + 29) + 4 * v47);
      *(_WORD *)v4 = 397;
      *(_DWORD *)((char *)v4 + 2) = v48;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 6);
      ++v47;
    }
    while (v47 < *((int *)this + 60));
  }
  if (*((int *)this + 64) >= 1)
  {
    v49 = 0;
    do
    {
      v50 = *(_QWORD *)(*((_QWORD *)this + 31) + 8 * v49);
      *(_WORD *)v4 = 401;
      *(_QWORD *)((char *)v4 + 2) = v50;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
      ++v49;
    }
    while (v49 < *((int *)this + 64));
  }
  if (*((int *)this + 68) >= 1)
  {
    v51 = 0;
    do
    {
      v52 = *(_QWORD *)(*((_QWORD *)this + 33) + 8 * v51);
      *(_WORD *)v4 = 409;
      *(_QWORD *)((char *)v4 + 2) = v52;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
      ++v51;
    }
    while (v51 < *((int *)this + 68));
  }
  v55 = (_QWORD *)*((_QWORD *)this + 1);
  v54 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v53 = v55;
  if (!v55 || *v53 == v53[1])
    return v4;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v54, v4, a3);
}

uint64_t sub_100069D80(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  _QWORD *v32;
  uint64_t v33;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;

  v3 = *(_DWORD *)(a1 + 284);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_10;
  }
  if ((v3 & 1) != 0)
  {
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 284);
    if ((v3 & 0x20) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v4 = 0;
  if ((v3 & 0x20) != 0)
  {
LABEL_7:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 88), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 284);
  }
LABEL_8:
  if ((v3 & 0x80) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 112), (unint64_t)a2)+ 1;
    v3 = *(_DWORD *)(a1 + 284);
  }
LABEL_10:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      v5 = *(_QWORD *)(a1 + 120);
      v6 = *(unsigned __int8 *)(v5 + 23);
      v7 = v6;
      v8 = *(_QWORD *)(v5 + 8);
      if ((v6 & 0x80u) == 0)
        v9 = *(unsigned __int8 *)(v5 + 23);
      else
        v9 = v8;
      if (v9 >= 0x80)
      {
        v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
        v6 = *(unsigned __int8 *)(v5 + 23);
        v8 = *(_QWORD *)(v5 + 8);
        v3 = *(_DWORD *)(a1 + 284);
        v7 = *(_BYTE *)(v5 + 23);
      }
      else
      {
        v10 = 1;
      }
      if (v7 < 0)
        v6 = v8;
      v4 += v10 + v6 + 1;
    }
    if ((v3 & 0x1000) != 0)
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 176), (unint64_t)a2)+ 1;
  }
  v37 = *(_DWORD *)(a1 + 32);
  v38 = *(_DWORD *)(a1 + 48);
  v39 = v4;
  v11 = *(_DWORD *)(a1 + 64);
  if (v11 < 1)
  {
    v13 = 0;
  }
  else
  {
    v12 = 0;
    v13 = 0;
    do
    {
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 56)
                                                                                             + 4 * v12);
      if ((v14 & 0x80000000) != 0)
      {
        v15 = 10;
      }
      else if (v14 >= 0x80)
      {
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
        v11 = *(_DWORD *)(a1 + 64);
      }
      else
      {
        v15 = 1;
      }
      v13 += v15;
      ++v12;
    }
    while (v12 < v11);
  }
  v35 = *(_DWORD *)(a1 + 104);
  v36 = *(_DWORD *)(a1 + 80);
  v16 = *(_DWORD *)(a1 + 136);
  if (v16 < 1)
  {
    v18 = 0;
  }
  else
  {
    v17 = 0;
    v18 = 0;
    do
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 128)
                                                                                             + 4 * v17);
      if ((v19 & 0x80000000) != 0)
      {
        v20 = 10;
      }
      else if (v19 >= 0x80)
      {
        v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
        v16 = *(_DWORD *)(a1 + 136);
      }
      else
      {
        v20 = 1;
      }
      v18 += v20;
      ++v17;
    }
    while (v17 < v16);
  }
  v21 = *(_DWORD *)(a1 + 152);
  v22 = *(_DWORD *)(a1 + 168);
  if (v22 < 1)
  {
    v24 = 0;
  }
  else
  {
    v23 = 0;
    v24 = 0;
    do
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 160)
                                                                                             + 4 * v23);
      if ((v25 & 0x80000000) != 0)
      {
        v26 = 10;
      }
      else if (v25 >= 0x80)
      {
        v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
        v22 = *(_DWORD *)(a1 + 168);
      }
      else
      {
        v26 = 1;
      }
      v24 += v26;
      ++v23;
    }
    while (v23 < v22);
  }
  v27 = *(_DWORD *)(a1 + 192);
  if (v27 < 1)
  {
    v29 = 0;
  }
  else
  {
    v28 = 0;
    v29 = 0;
    do
    {
      v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 184)
                                                                                             + 4 * v28);
      if ((v30 & 0x80000000) != 0)
      {
        v31 = 10;
      }
      else if (v30 >= 0x80)
      {
        v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
        v27 = *(_DWORD *)(a1 + 192);
      }
      else
      {
        v31 = 1;
      }
      v29 += v31;
      ++v28;
    }
    while (v28 < v27);
  }
  v32 = *(_QWORD **)(a1 + 8);
  v33 = (v13
                     + v39
                     + v11
                     + v18
                     + 9 * (v36 + v38)
                     + v16
                     + v24
                     + v22
                     + v29
                     + v27
                     + 5 * (v35 + v37 + v21 + *(_DWORD *)(a1 + 208))
                     + 6 * (*(_DWORD *)(a1 + 240) + *(_DWORD *)(a1 + 224))
                     + 10 * (*(_DWORD *)(a1 + 272) + *(_DWORD *)(a1 + 256)));
  if (v32 && *v32 != v32[1])
    v33 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v33;
  *(_DWORD *)(a1 + 280) = v33;
  return v33;
}

uint64_t sub_10006A0C4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 7567);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100066F44((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10006A16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006A184(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10006A1CC()
{
  return 1;
}

uint64_t sub_10006A1D4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854290;
}

void sub_10006A24C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_10006A260(_QWORD *a1)
{
  *a1 = off_1007FC680;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  return a1;
}

void sub_10006A294(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006A2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v6;
  _BYTE v7[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v7, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 7788);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v6, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10006A320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006A338(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC680;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10006A368(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC680;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10006A3AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 16) = a2;
  return result;
}

void sub_10006A3B4()
{
  operator new();
}

void sub_10006A3F0()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006A414(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 3) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10006A428(int a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  BOOL v8;
  uint64_t v9;

  v5 = a1 + 8;
  do
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
    }
    if ((_DWORD)TagFallback)
      v8 = (TagFallback & 7) == 4;
    else
      v8 = 1;
    v9 = v8;
  }
  while (!v8
       && (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v5, a4) & 1) != 0);
  return v9;
}

wireless_diagnostics::google::protobuf::internal::WireFormat *sub_10006A4B0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  wireless_diagnostics::google::protobuf::internal::WireFormat *result;
  _QWORD *v4;
  _QWORD *v5;

  v5 = *(_QWORD **)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v4 = v5;
  if (v5)
  {
    if (*v4 != v4[1])
      return (wireless_diagnostics::google::protobuf::internal::WireFormat *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(result, a2, a3);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006A4CC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::internal::WireFormat *v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = *(_QWORD **)(a1 + 8);
  v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v4 = v5;
  if (!v5 || *v4 == v4[1])
    return a2;
  else
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v3, a2, a3);
}

uint64_t sub_10006A4EC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  wireless_diagnostics::google::protobuf::internal::WireFormat *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t result;

  v5 = *(_QWORD **)(a1 + 8);
  v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v4 = v5;
  if (!v5 || *v4 == v4[1])
    result = 0;
  else
    result = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2);
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10006A52C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 7776);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10006A2A8((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10006A5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006A5EC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10006A634()
{
  return 1;
}

uint64_t sub_10006A63C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008542A0;
}

void sub_10006A6B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006A6C8(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC730;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10006A708(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006A71C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  _BYTE v19[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v19, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 0x2000);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v18, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 64);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 64) & 1) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 1u;
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 16);
      if (!v7)
        v7 = *(_QWORD *)(qword_10085F5C8 + 16);
      sub_100059ED4(v6, v7);
      v5 = *(_DWORD *)(a2 + 64);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 2u;
      v8 = *(_QWORD *)(a1 + 24);
      if (!v8)
        operator new();
      v9 = *(_QWORD *)(a2 + 24);
      if (!v9)
        v9 = *(_QWORD *)(qword_10085F5C8 + 24);
      sub_10006567C(v8, v9);
      v5 = *(_DWORD *)(a2 + 64);
    }
    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 4u;
      v10 = *(_DWORD **)(a1 + 32);
      if (!v10)
        operator new();
      v11 = *(_QWORD *)(a2 + 32);
      if (!v11)
        v11 = *(_QWORD *)(qword_10085F5C8 + 32);
      sub_10005C02C(v10, v11);
      v5 = *(_DWORD *)(a2 + 64);
    }
    if ((v5 & 8) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 8u;
      v12 = *(_DWORD **)(a1 + 40);
      if (!v12)
        operator new();
      v13 = *(_QWORD *)(a2 + 40);
      if (!v13)
        v13 = *(_QWORD *)(qword_10085F5C8 + 40);
      sub_1000666C4(v12, v13);
      v5 = *(_DWORD *)(a2 + 64);
    }
    if ((v5 & 0x10) != 0)
    {
      v14 = *(_DWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) |= 0x10u;
      *(_DWORD *)(a1 + 56) = v14;
      v5 = *(_DWORD *)(a2 + 64);
    }
    if ((v5 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 0x20u;
      v15 = *(_QWORD *)(a1 + 48);
      if (!v15)
        operator new();
      v16 = *(_QWORD *)(a2 + 48);
      if (!v16)
        v16 = *(_QWORD *)(qword_10085F5C8 + 48);
      sub_10006A2A8(v15, v16);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10006A988()
{
  operator delete();
}

void sub_10006AA00(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_1007FC730;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10006AA3C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

_QWORD *sub_10006AA3C(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((_QWORD *)qword_10085F5C8 != result)
  {
    v1 = result;
    v2 = result[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = v1[4];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = v1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    result = (_QWORD *)v1[6];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_10006AAD8(_QWORD *a1)
{
  sub_10006AA00(a1);
  operator delete();
}

uint64_t sub_10006AAFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_10006AB04()
{
  operator new();
}

void sub_10006AB40()
{
  operator delete();
}

uint64_t sub_10006AB64(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;

  v1 = this;
  if (*(_BYTE *)(this + 64))
  {
    if ((*(_BYTE *)(this + 64) & 1) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        if (*(_BYTE *)(this + 44))
        {
          *(_QWORD *)(this + 16) = 0;
          *(_QWORD *)(this + 24) = 0;
          *(_QWORD *)(this + 32) = 0;
        }
        v2 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    v3 = *(_DWORD *)(v1 + 64);
    if ((v3 & 2) != 0)
    {
      this = *(_QWORD *)(v1 + 24);
      if (this)
      {
        this = sub_100065898(this);
        v3 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v3 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        this = sub_10005C26C(this);
        v3 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v3 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 40);
      if (this)
      {
        this = sub_1000668D8(this);
        v3 = *(_DWORD *)(v1 + 64);
      }
    }
    *(_DWORD *)(v1 + 56) = 0;
    if ((v3 & 0x20) != 0)
    {
      this = *(_QWORD *)(v1 + 48);
      if (this)
      {
        v4 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 12) = 0;
        if (v4)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  v6 = *(_QWORD *)(v1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 14) = 0;
  if (v6)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  return this;
}

uint64_t sub_10006AC30(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  uint64_t v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v17;
  int v18;
  BOOL v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v28;
  int v29;
  int v30;
  _BYTE *v31;
  int *v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v38;
  int v39;
  int v40;
  _BYTE *v41;
  int *v42;
  char *v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v48;
  int v49;
  int v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  char *v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v59;
  int v60;
  int v61;
  uint64_t result;
  unsigned int v63;

  v6 = a1 + 8;
  while (1)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 < *((_QWORD *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_25;
        *(_DWORD *)(a1 + 64) |= 1u;
        v10 = *(_QWORD *)(a1 + 16);
        if (!v10)
          operator new();
        v63 = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0;
        }
        else
        {
          v63 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        v13 = *((_DWORD *)this + 14);
        v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14)
          return 0;
        v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_10005A0C8(v10, this, v16, v17) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        v18 = *((_DWORD *)this + 14);
        v19 = __OFSUB__(v18, 1);
        v20 = v18 - 1;
        if (v20 < 0 == v19)
          *((_DWORD *)this + 14) = v20;
        v21 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v21 >= *((_QWORD *)this + 2) || *v21 != 18)
          continue;
        *((_QWORD *)this + 1) = v21 + 1;
        goto LABEL_37;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_25;
LABEL_37:
        *(_DWORD *)(a1 + 64) |= 2u;
        v22 = *(_QWORD *)(a1 + 24);
        if (!v22)
          operator new();
        v63 = 0;
        v23 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v23 >= *((_QWORD *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0;
        }
        else
        {
          v63 = *v23;
          *((_QWORD *)this + 1) = v23 + 1;
        }
        v24 = *((_DWORD *)this + 14);
        v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25)
          return 0;
        v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_1000658FC(v22, this, v27, v28) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        v29 = *((_DWORD *)this + 14);
        v19 = __OFSUB__(v29, 1);
        v30 = v29 - 1;
        if (v30 < 0 == v19)
          *((_DWORD *)this + 14) = v30;
        v31 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v31 >= *((_QWORD *)this + 2) || *v31 != 26)
          continue;
        *((_QWORD *)this + 1) = v31 + 1;
LABEL_51:
        *(_DWORD *)(a1 + 64) |= 4u;
        v32 = *(int **)(a1 + 32);
        if (!v32)
          operator new();
        v63 = 0;
        v33 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v33 >= *((_QWORD *)this + 2) || *v33 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0;
        }
        else
        {
          v63 = *v33;
          *((_QWORD *)this + 1) = v33 + 1;
        }
        v34 = *((_DWORD *)this + 14);
        v35 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v34 + 1;
        if (v34 >= v35)
          return 0;
        v36 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_10005C2DC(v32, this, v37, v38) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v36);
        v39 = *((_DWORD *)this + 14);
        v19 = __OFSUB__(v39, 1);
        v40 = v39 - 1;
        if (v40 < 0 == v19)
          *((_DWORD *)this + 14) = v40;
        v41 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 != 34)
          continue;
        *((_QWORD *)this + 1) = v41 + 1;
LABEL_65:
        *(_DWORD *)(a1 + 64) |= 8u;
        v42 = *(int **)(a1 + 40);
        if (!v42)
          operator new();
        v63 = 0;
        v43 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v43 >= *((_QWORD *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0;
        }
        else
        {
          v63 = *v43;
          *((_QWORD *)this + 1) = v43 + 1;
        }
        v44 = *((_DWORD *)this + 14);
        v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45)
          return 0;
        v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_100066948(v42, this, v47, v48) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        v49 = *((_DWORD *)this + 14);
        v19 = __OFSUB__(v49, 1);
        v50 = v49 - 1;
        if (v50 < 0 == v19)
          *((_DWORD *)this + 14) = v50;
        v51 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v51 >= *((_QWORD *)this + 2) || *v51 != 45)
          continue;
        *((_QWORD *)this + 1) = v51 + 1;
LABEL_79:
        v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v63) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 56) = v63;
        v12 = *(_DWORD *)(a1 + 64) | 0x10;
        *(_DWORD *)(a1 + 64) = v12;
        v52 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v52 >= *((_QWORD *)this + 2) || *v52 != 50)
          continue;
        *((_QWORD *)this + 1) = v52 + 1;
LABEL_83:
        *(_DWORD *)(a1 + 64) = v12 | 0x20;
        v53 = *(_QWORD *)(a1 + 48);
        if (!v53)
          operator new();
        v63 = 0;
        v54 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v54 >= *((_QWORD *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0;
        }
        else
        {
          v63 = *v54;
          *((_QWORD *)this + 1) = v54 + 1;
        }
        v55 = *((_DWORD *)this + 14);
        v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56)
          return 0;
        v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_10006A428(v53, this, v58, v59) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        v60 = *((_DWORD *)this + 14);
        v19 = __OFSUB__(v60, 1);
        v61 = v60 - 1;
        if (v61 < 0 == v19)
          *((_DWORD *)this + 14) = v61;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_51;
        goto LABEL_25;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_65;
        goto LABEL_25;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 5)
          goto LABEL_79;
        goto LABEL_25;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_25;
        v12 = *(_DWORD *)(a1 + 64);
        goto LABEL_83;
      default:
        v9 = TagFallback & 7;
LABEL_25:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

void sub_10006B258()
{
  operator delete();
}

uint64_t sub_10006B2BC(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v13;
  _QWORD *v14;

  v5 = this;
  v6 = *(_DWORD *)(this + 64);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F5C8 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
    v8 = *(_QWORD *)(qword_10085F5C8 + 24);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_14:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
    v9 = *(_QWORD *)(qword_10085F5C8 + 32);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_17:
  v10 = *(_QWORD *)(v5 + 40);
  if (!v10)
    v10 = *(_QWORD *)(qword_10085F5C8 + 40);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_24;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 56), a3);
  if ((*(_DWORD *)(v5 + 64) & 0x20) == 0)
    goto LABEL_24;
LABEL_21:
  v11 = *(_QWORD *)(v5 + 48);
  if (!v11)
    v11 = *(_QWORD *)(qword_10085F5C8 + 48);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
LABEL_24:
  v14 = *(_QWORD **)(v5 + 8);
  v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v12 = v14;
  if (v14)
  {
    if (*v12 != v12[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v13, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006B3FC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  uint64_t v6;
  unsigned int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  unsigned int *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  _BYTE *v12;
  unsigned int *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v15;
  unsigned int *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v18;
  int v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  _QWORD *v22;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v23;
  _QWORD *v24;
  _QWORD *v25;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v26;
  _QWORD *v27;

  v3 = a2;
  v5 = *((_DWORD *)this + 16);
  if ((v5 & 1) != 0)
  {
    v6 = *((_QWORD *)this + 2);
    if (!v6)
      v6 = *(_QWORD *)(qword_10085F5C8 + 16);
    *(_BYTE *)a2 = 10;
    v7 = (_DWORD)a2 + 1;
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
    if (v8 > 0x7F)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      v9 = (uint64_t)v3 + 2;
    }
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005A338(v6, v9, a3);
    v5 = *((_DWORD *)this + 16);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = (unsigned int *)*((_QWORD *)this + 3);
  if (!v10)
    v10 = *(unsigned int **)(qword_10085F5C8 + 24);
  *(_BYTE *)v3 = 18;
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[8];
  if (v11 > 0x7F)
  {
    v12 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v11;
    v12 = (char *)v3 + 2;
  }
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100065BC8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
  v5 = *((_DWORD *)this + 16);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_26;
  }
LABEL_20:
  v13 = (unsigned int *)*((_QWORD *)this + 4);
  if (!v13)
    v13 = *(unsigned int **)(qword_10085F5C8 + 32);
  *(_BYTE *)v3 = 26;
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[10];
  if (v14 > 0x7F)
  {
    v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v14;
    v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  v3 = sub_10005C55C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
  v5 = *((_DWORD *)this + 16);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      goto LABEL_6;
LABEL_32:
    v19 = *((_DWORD *)this + 14);
    *(_BYTE *)v3 = 45;
    *(_DWORD *)((char *)v3 + 1) = v19;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    if ((*((_DWORD *)this + 16) & 0x20) == 0)
      goto LABEL_41;
    goto LABEL_33;
  }
LABEL_26:
  v16 = (unsigned int *)*((_QWORD *)this + 5);
  if (!v16)
    v16 = *(unsigned int **)(qword_10085F5C8 + 40);
  *(_BYTE *)v3 = 34;
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[10];
  if (v17 > 0x7F)
  {
    v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v17;
    v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  v3 = sub_100066BC8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v18, a3);
  v5 = *((_DWORD *)this + 16);
  if ((v5 & 0x10) != 0)
    goto LABEL_32;
LABEL_6:
  if ((v5 & 0x20) == 0)
    goto LABEL_41;
LABEL_33:
  v20 = *((_QWORD *)this + 6);
  if (!v20)
    v20 = *(_QWORD *)(qword_10085F5C8 + 48);
  *(_BYTE *)v3 = 50;
  v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 16);
  if (v21 > 0x7F)
  {
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v3 + 1, a3);
  }
  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v21;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  v24 = *(_QWORD **)(v20 + 8);
  v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8);
  v22 = v24;
  if (v24 && *v22 != v22[1])
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v23, v3, a3);
LABEL_41:
  v27 = (_QWORD *)*((_QWORD *)this + 1);
  v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v25 = v27;
  if (!v27 || *v25 == v25[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v26, v3, a3);
}

uint64_t sub_10006B650(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  uint64_t v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  int v26;
  _QWORD *v27;

  LOBYTE(v3) = *(_BYTE *)(a1 + 64);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 64) & 1) != 0)
    {
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        v6 = *(_QWORD *)(qword_10085F5C8 + 16);
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005A460(v6, a2);
      v8 = (int)v7;
      if (v7 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      else
        v9 = 1;
      v4 = v8 + v9 + 1;
      v3 = *(_DWORD *)(a1 + 64);
      if ((v3 & 2) == 0)
      {
LABEL_18:
        if ((v3 & 4) != 0)
        {
          v14 = *(_QWORD *)(a1 + 32);
          if (!v14)
            v14 = *(_QWORD *)(qword_10085F5C8 + 32);
          v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C614(v14, a2);
          v16 = (int)v15;
          if (v15 >= 0x80)
            v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
          else
            v17 = 1;
          v4 += v16 + v17 + 1;
          v3 = *(_DWORD *)(a1 + 64);
          if ((v3 & 8) == 0)
          {
LABEL_33:
            if ((v3 & 0x10) != 0)
              v5 = v4 + 5;
            else
              v5 = v4;
            if ((v3 & 0x20) == 0)
              goto LABEL_46;
            v22 = *(_QWORD *)(a1 + 48);
            if (!v22)
              v22 = *(_QWORD *)(qword_10085F5C8 + 48);
            v23 = *(_QWORD **)(v22 + 8);
            if (!v23 || *v23 == v23[1])
            {
              v25 = 0;
              *(_DWORD *)(v22 + 16) = 0;
            }
            else
            {
              v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v22 + 8), a2);
              v25 = (int)v24;
              *(_DWORD *)(v22 + 16) = (_DWORD)v24;
              if (v24 >= 0x80)
              {
                v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
LABEL_45:
                v5 = (v5 + v25 + v26 + 1);
                goto LABEL_46;
              }
            }
            v26 = 1;
            goto LABEL_45;
          }
        }
        else if ((v3 & 8) == 0)
        {
          goto LABEL_33;
        }
        v18 = *(_QWORD *)(a1 + 40);
        if (!v18)
          v18 = *(_QWORD *)(qword_10085F5C8 + 40);
        v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100066C80(v18, a2);
        v20 = (int)v19;
        if (v19 >= 0x80)
          v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
        else
          v21 = 1;
        v4 += v20 + v21 + 1;
        v3 = *(_DWORD *)(a1 + 64);
        goto LABEL_33;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 64) & 2) == 0)
        goto LABEL_18;
    }
    v10 = *(_QWORD *)(a1 + 24);
    if (!v10)
      v10 = *(_QWORD *)(qword_10085F5C8 + 24);
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100065CB8(v10, a2);
    v12 = (int)v11;
    if (v11 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    else
      v13 = 1;
    v4 += v12 + v13 + 1;
    v3 = *(_DWORD *)(a1 + 64);
    goto LABEL_18;
  }
  v5 = 0;
LABEL_46:
  v27 = *(_QWORD **)(a1 + 8);
  if (v27 && *v27 != v27[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 60) = v5;
  return v5;
}

uint64_t sub_10006B850(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", 8180);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10006A71C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10006B8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006B910(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10006B958()
{
  return 1;
}

uint64_t sub_10006B960()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008542F0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000582F4;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008542F0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008542B0;
}

void sub_10006B9D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006B9EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10006B9F4(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 152))(a1);
  return v1;
}

uint64_t sub_10006BA14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006BA1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006BA24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10006BA2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10006BA34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006BA3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_10006BA44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_10006BA4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_10006BA54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006BA5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10006BA64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_10006BA6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10006BA74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10006BA7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10006BA84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006BA8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006BA94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10006BA9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 280);
}

uint64_t sub_10006BAA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10006BAAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_10006BAB4(uint64_t result, int a2)
{
  int v2;
  int v3;

  v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    v3 = 2 * v2;
    if (v3 <= a2)
      v3 = a2;
    if (v3 <= 4)
      v3 = 4;
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t sub_10006BB4C(uint64_t result, int a2)
{
  int v2;
  int v3;

  v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    v3 = 2 * v2;
    if (v3 <= a2)
      v3 = a2;
    if (v3 <= 4)
      v3 = 4;
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

void sub_10006BBE4()
{
  operator new();
}

void sub_10006BC20()
{
  operator delete();
}

void sub_10006BC44()
{
  operator new();
}

void sub_10006BC80()
{
  operator delete();
}

void sub_10006BCA4()
{
  operator new();
}

void sub_10006BCE0()
{
  operator delete();
}

void sub_10006BD04()
{
  operator new();
}

void sub_10006BD40()
{
  operator delete();
}

void sub_10006BD64()
{
  operator new();
}

void sub_10006BDA0()
{
  operator delete();
}

uint64_t sub_10006BDC4(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    operator delete[]();
  return result;
}

void sub_10006BE40(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  wireless_diagnostics::google::protobuf::DescriptorPool *v4;
  uint64_t v5;
  uint64_t FileByName;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *__p[2];
  char v11;

  sub_10006CA1C(a1, a2, a3, a4);
  v5 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  sub_10000BF04(__p, "CLPNearbyd.proto");
  FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v5, __p);
  v7 = FileByName;
  if (v11 < 0)
  {
    operator delete(__p[0]);
    if (v7)
      goto LABEL_6;
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(__p, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 100);
  v8 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: file != NULL: ");
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v8);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  qword_1008542F8 = *(_QWORD *)(v7 + 80);
  operator new();
}

void sub_10006C980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  _Unwind_Resume(a1);
}

void sub_10006CA1C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  int v20;

  if ((byte_100854468 & 1) == 0)
  {
    byte_100854468 = 1;
    v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", a4);
    sub_1000BA5F0(v4, v5, v6, v7);
    sub_10011DDAC(v8, v9, v10, v11);
    sub_1000C9F7C(v12, v13, v14, v15);
    sub_1000E0B44(v16, v17, v18, v19);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1004589A4, (const void *)0x2593, v20);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("CLPNearbyd.proto", sub_10006D3D4);
    operator new();
  }
}

void sub_10006CE44()
{
  operator delete();
}

uint64_t sub_10006D000()
{
  uint64_t result;

  if (qword_10085F5D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5D0 + 8))(qword_10085F5D0);
  if (qword_100854300)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854300 + 8))(qword_100854300);
  if (qword_10085F5D8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5D8 + 8))(qword_10085F5D8);
  if (qword_100854310)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854310 + 8))(qword_100854310);
  if (qword_10085F5E0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5E0 + 8))(qword_10085F5E0);
  if (qword_100854320)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854320 + 8))(qword_100854320);
  if (qword_10085F5E8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5E8 + 8))(qword_10085F5E8);
  if (qword_100854330)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854330 + 8))(qword_100854330);
  if (qword_10085F5F0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5F0 + 8))(qword_10085F5F0);
  if (qword_100854340)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854340 + 8))(qword_100854340);
  if (qword_10085F5F8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F5F8 + 8))(qword_10085F5F8);
  if (qword_100854350)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854350 + 8))(qword_100854350);
  if (qword_10085F600)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F600 + 8))(qword_10085F600);
  if (qword_100854360)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854360 + 8))(qword_100854360);
  if (qword_10085F608)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F608 + 8))(qword_10085F608);
  if (qword_100854370)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854370 + 8))(qword_100854370);
  if (qword_10085F610)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F610 + 8))(qword_10085F610);
  if (qword_100854380)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854380 + 8))(qword_100854380);
  if (qword_10085F618)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F618 + 8))(qword_10085F618);
  if (qword_100854390)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854390 + 8))(qword_100854390);
  if (qword_10085F620)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F620 + 8))(qword_10085F620);
  if (qword_1008543A0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008543A0 + 8))(qword_1008543A0);
  if (qword_10085F628)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F628 + 8))(qword_10085F628);
  if (qword_1008543B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008543B0 + 8))(qword_1008543B0);
  if (qword_10085F630)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F630 + 8))(qword_10085F630);
  if (qword_1008543C0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008543C0 + 8))(qword_1008543C0);
  if (qword_10085F638)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F638 + 8))(qword_10085F638);
  if (qword_1008543D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008543D0 + 8))(qword_1008543D0);
  if (qword_10085F640)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F640 + 8))(qword_10085F640);
  if (qword_1008543E0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008543E0 + 8))(qword_1008543E0);
  if (qword_10085F648)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F648 + 8))(qword_10085F648);
  if (qword_1008543F0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008543F0 + 8))(qword_1008543F0);
  if (qword_10085F650)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F650 + 8))(qword_10085F650);
  if (qword_100854400)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854400 + 8))(qword_100854400);
  if (qword_10085F658)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F658 + 8))(qword_10085F658);
  if (qword_100854410)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854410 + 8))(qword_100854410);
  if (qword_10085F660)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F660 + 8))(qword_10085F660);
  if (qword_100854420)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854420 + 8))(qword_100854420);
  if (qword_10085F668)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F668 + 8))(qword_10085F668);
  result = qword_100854430;
  if (qword_100854430)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_100854430 + 8))(qword_100854430);
  return result;
}

uint64_t sub_10006D3D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];
  char v42;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v41[1] = sub_10006BE40;
    v42 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v41);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v41);
  }
  v1 = qword_1008542F8;
  if (!qword_10085F5D0)
    ((void (*)(void))sub_10006CA1C)();
  v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
  v3 = qword_100854308;
  if (!qword_10085F5D8)
    sub_10006CA1C(v2);
  v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v3);
  v5 = qword_100854318;
  if (!qword_10085F5E0)
    sub_10006CA1C(v4);
  v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v5);
  v7 = qword_100854328;
  if (!qword_10085F5E8)
    sub_10006CA1C(v6);
  v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v7);
  v9 = qword_100854338;
  if (!qword_10085F5F0)
    sub_10006CA1C(v8);
  v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v9);
  v11 = qword_100854348;
  if (!qword_10085F5F8)
    sub_10006CA1C(v10);
  v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v11);
  v13 = qword_100854358;
  if (!qword_10085F600)
    sub_10006CA1C(v12);
  v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v13);
  v15 = qword_100854368;
  if (!qword_10085F608)
    sub_10006CA1C(v14);
  v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v15);
  v17 = qword_100854378;
  if (!qword_10085F610)
    sub_10006CA1C(v16);
  v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v17);
  v19 = qword_100854388;
  if (!qword_10085F618)
    sub_10006CA1C(v18);
  v20 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v19);
  v21 = qword_100854398;
  if (!qword_10085F620)
    sub_10006CA1C(v20);
  v22 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v21);
  v23 = qword_1008543A8;
  if (!qword_10085F628)
    sub_10006CA1C(v22);
  v24 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v23);
  v25 = qword_1008543B8;
  if (!qword_10085F630)
    sub_10006CA1C(v24);
  v26 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v25);
  v27 = qword_1008543C8;
  if (!qword_10085F638)
    sub_10006CA1C(v26);
  v28 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v27);
  v29 = qword_1008543D8;
  if (!qword_10085F640)
    sub_10006CA1C(v28);
  v30 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v29);
  v31 = qword_1008543E8;
  if (!qword_10085F648)
    sub_10006CA1C(v30);
  v32 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v31);
  v33 = qword_1008543F8;
  if (!qword_10085F650)
    sub_10006CA1C(v32);
  v34 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v33);
  v35 = qword_100854408;
  if (!qword_10085F658)
    sub_10006CA1C(v34);
  v36 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v35);
  v37 = qword_100854418;
  if (!qword_10085F660)
    sub_10006CA1C(v36);
  v38 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v37);
  v39 = qword_100854428;
  if (!qword_10085F668)
    sub_10006CA1C(v38);
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v39);
}

void sub_10006D70C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006D764(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  const char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  const char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  const char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  const char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  const char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  const char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  const char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  const char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  const char *v143;
  uint64_t result;

  v4 = (_QWORD *)a1;
  v5 = qword_10085F5E0;
  if (!qword_10085F5E0)
  {
    a1 = sub_10006CA1C(a1);
    v5 = qword_10085F5E0;
  }
  v4[2] = v5;
  v6 = sub_1000BBE50(a1, a2, a3, a4);
  v4[3] = v6;
  v10 = sub_1000BCDBC(v6, v7, v8, v9);
  v4[4] = v10;
  v14 = sub_1000BD5A4(v10, v11, v12, v13);
  v4[5] = v14;
  v18 = sub_10011EE84(v14, v15, v16, v17);
  v4[6] = v18;
  v22 = qword_10085F5E8;
  if (!qword_10085F5E8)
  {
    v18 = sub_10006CA1C(v18);
    v22 = qword_10085F5E8;
  }
  v4[7] = v22;
  v23 = qword_10085F5F8;
  if (!qword_10085F5F8)
  {
    v18 = sub_10006CA1C(v18);
    v23 = qword_10085F5F8;
  }
  v4[8] = v23;
  v24 = qword_10085F600;
  if (!qword_10085F600)
  {
    v18 = sub_10006CA1C(v18);
    v24 = qword_10085F600;
  }
  v4[9] = v24;
  v25 = qword_10085F608;
  if (!qword_10085F608)
  {
    v18 = sub_10006CA1C(v18);
    v25 = qword_10085F608;
  }
  v4[10] = v25;
  v26 = qword_10085F610;
  if (!qword_10085F610)
  {
    v18 = sub_10006CA1C(v18);
    v26 = qword_10085F610;
  }
  v4[11] = v26;
  v27 = qword_10085F618;
  if (!qword_10085F618)
  {
    v18 = sub_10006CA1C(v18);
    v27 = qword_10085F618;
  }
  v4[12] = v27;
  v28 = qword_10085F620;
  if (!qword_10085F620)
  {
    v18 = sub_10006CA1C(v18);
    v28 = qword_10085F620;
  }
  v4[13] = v28;
  v29 = sub_1000E447C(v18, v19, v20, v21);
  v4[14] = v29;
  v33 = sub_1000FF30C(v29, v30, v31, v32);
  v4[15] = v33;
  v37 = sub_100107350(v33, v34, v35, v36);
  v4[16] = v37;
  v41 = sub_100116820(v37, v38, v39, v40);
  v4[17] = v41;
  v45 = sub_1000F372C(v41, v42, v43, v44);
  v4[18] = v45;
  v49 = sub_1001035E0(v45, v46, v47, v48);
  v4[19] = v49;
  v53 = sub_1001065B8(v49, v50, v51, v52);
  v4[20] = v53;
  v57 = sub_100108230(v53, v54, v55, v56);
  v4[21] = v57;
  v61 = sub_100108C6C(v57, v58, v59, v60);
  v4[22] = v61;
  v65 = sub_1001096D0(v61, v62, v63, v64);
  v4[23] = v65;
  v69 = sub_10010A6A8(v65, v66, v67, v68);
  v4[24] = v69;
  v73 = sub_10010BFA4(v69, v70, v71, v72);
  v4[25] = v73;
  v77 = sub_10010D858(v73, v74, v75, v76);
  v4[26] = v77;
  v81 = sub_10010BFA4(v77, v78, v79, v80);
  v4[27] = v81;
  v85 = sub_1000CDA88(v81, v82, v83, v84);
  v4[28] = v85;
  v89 = qword_10085F650;
  if (!qword_10085F650)
  {
    v85 = sub_10006CA1C(v85);
    v89 = qword_10085F650;
  }
  v4[29] = v89;
  v90 = sub_10010FC50(v85, v86, v87, v88);
  v4[30] = v90;
  v94 = sub_100110F24(v90, v91, v92, v93);
  v4[31] = v94;
  v98 = sub_1001142FC(v94, v95, v96, v97);
  v4[32] = v98;
  v102 = sub_100114B58(v98, v99, v100, v101);
  v4[33] = v102;
  v106 = sub_1001152C4(v102, v103, v104, v105);
  v4[34] = v106;
  v110 = sub_100112C5C(v106, v107, v108, v109);
  v4[35] = v110;
  v114 = sub_10010BFA4(v110, v111, v112, v113);
  v4[36] = v114;
  v118 = qword_10085F658;
  if (!qword_10085F658)
  {
    v114 = sub_10006CA1C(v114);
    v118 = qword_10085F658;
  }
  v4[37] = v118;
  v119 = sub_1001105D8(v114, v115, v116, v117);
  v4[38] = v119;
  v123 = sub_100115D1C(v119, v120, v121, v122);
  v4[39] = v123;
  v127 = qword_10085F668;
  if (!qword_10085F668)
  {
    v123 = sub_10006CA1C(v123);
    v127 = qword_10085F668;
  }
  v4[40] = v127;
  v128 = sub_10010F168(v123, v124, v125, v126);
  v4[41] = v128;
  v132 = sub_100117520(v128, v129, v130, v131);
  v4[42] = v132;
  v136 = sub_100118A60(v132, v133, v134, v135);
  v4[43] = v136;
  v140 = sub_10011A0CC(v136, v137, v138, v139);
  v4[44] = v140;
  result = sub_10011B508(v140, v141, v142, v143);
  v4[45] = result;
  return result;
}

uint64_t sub_10006D990(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)result;
  v2 = qword_10085F638;
  if (!qword_10085F638)
  {
    result = sub_10006CA1C(result);
    v2 = qword_10085F638;
  }
  v1[4] = v2;
  v3 = qword_10085F640;
  if (!qword_10085F640)
  {
    result = sub_10006CA1C(result);
    v3 = qword_10085F640;
  }
  v1[6] = v3;
  v4 = qword_10085F630;
  if (!qword_10085F630)
  {
    result = sub_10006CA1C(result);
    v4 = qword_10085F630;
  }
  v1[8] = v4;
  v5 = qword_10085F628;
  if (!qword_10085F628)
  {
    result = sub_10006CA1C(result);
    v5 = qword_10085F628;
  }
  v1[9] = v5;
  v6 = qword_10085F648;
  if (!qword_10085F648)
  {
    result = sub_10006CA1C(result);
    v6 = qword_10085F648;
  }
  v1[10] = v6;
  return result;
}

BOOL sub_10006DA24(unsigned int a1)
{
  return a1 < 0x30 || a1 - 100 < 2;
}

BOOL sub_10006DA40(unsigned int a1)
{
  return a1 < 0x10 || a1 - 998 < 2;
}

BOOL sub_10006DA5C(unsigned int a1)
{
  return a1 < 2;
}

BOOL sub_10006DA68(unsigned int a1)
{
  return a1 < 6;
}

_QWORD *sub_10006DA74(_QWORD *a1)
{
  *a1 = off_1007FC9D8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_10006DAA8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006DABC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = off_1007FC9D8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_10006DB34((_DWORD *)a1, a2);
  return a1;
}

void sub_10006DB10(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006DB34(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 1261);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if (!sub_10006DA40(v6))
        sub_1003CCAC8();
      a1[7] |= 1u;
      a1[4] = v6;
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      if (v7 >= 2)
        sub_1003CCAA0();
      a1[7] |= 2u;
      a1[5] = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10006DC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006DC28(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC9D8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10006DC58(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FC9D8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10006DC9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_10006DCA4()
{
  operator new();
}

void sub_10006DCE0()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006DD04(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 28))
    *(_QWORD *)(a1 + 16) = 0;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10006DD24(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  signed int v13;
  _BYTE *v14;
  unsigned int v15;
  uint64_t result;
  unsigned int v17;
  unsigned int v18;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v18 = 0;
      v12 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
        if (!(_DWORD)result)
          return result;
        v13 = v18;
      }
      else
      {
        v13 = *v12;
        *((_QWORD *)this + 1) = v12 + 1;
      }
      if (sub_10006DA40(v13))
      {
        a1[7] |= 1u;
        a1[4] = v13;
      }
      else
      {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v13);
      }
      v14 = (_BYTE *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v14 < v10 && *v14 == 16)
      {
        v11 = v14 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_27:
        v17 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
          if (!(_DWORD)result)
            return result;
          v15 = v17;
        }
        else
        {
          v15 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        if (v15 > 1)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v15);
        }
        else
        {
          a1[7] |= 2u;
          a1[5] = v15;
        }
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_27;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
  }
}

uint64_t sub_10006DF14(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), (int)a2, a4);
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006DF8C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(_BYTE *)a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      v5 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)a2 + 1, a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v4;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_8;
      }
      v5 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = v5;
  }
LABEL_8:
  if ((*((_BYTE *)this + 28) & 2) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
    *(_BYTE *)a2 = 16;
    if ((v6 & 0x80000000) != 0)
    {
      v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
    }
    else
    {
      if (v6 <= 0x7F)
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v6;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_15;
      }
      v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    a2 = v7;
  }
LABEL_15:
  v10 = (_QWORD *)*((_QWORD *)this + 1);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v8 = v10;
  if (!v10 || *v8 == v8[1])
    return a2;
  else
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, a2, a3);
}

uint64_t sub_10006E060(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  _QWORD *v8;

  v3 = *(_BYTE *)(a1 + 28);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 28) & 1) == 0)
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 28) & 2) == 0)
        goto LABEL_19;
LABEL_13:
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if ((v6 & 0x80000000) != 0)
      {
        v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
      }
      else
      {
        v7 = 2;
      }
      v4 = (v7 + v4);
      goto LABEL_19;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_19;
      goto LABEL_13;
    }
    if (v5 < 0x80)
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_19;
      goto LABEL_13;
    }
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
    if ((*(_DWORD *)(a1 + 28) & 2) != 0)
      goto LABEL_13;
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  v8 = *(_QWORD **)(a1 + 8);
  if (v8 && *v8 != v8[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

uint64_t sub_10006E128(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 1249);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10006DB34(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10006E1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006E1E8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10006E230()
{
  return 1;
}

uint64_t sub_10006E238()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008542F8;
}

void sub_10006E2B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL sub_10006E2C4(unsigned int a1)
{
  return a1 < 3;
}

BOOL sub_10006E2D0(unsigned int a1)
{
  return a1 < 4;
}

_QWORD *sub_10006E2DC(_QWORD *a1)
{
  *a1 = off_1007FCA88;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[4] = 0;
  return a1;
}

void sub_10006E31C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006E330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  const std::string *v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  char v11;
  _BYTE v12[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 1591);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      v7 = *(std::string **)(a1 + 16);
      if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(v7, v6);
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      v8 = *(const std::string **)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      v9 = *(std::string **)(a1 + 24);
      if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(v9, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10006E45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006E474(wireless_diagnostics::google::protobuf::Message *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *(_QWORD *)a1 = off_1007FCA88;
  v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_10006E4B0((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_10006E4B0(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(result + 16);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    operator delete();
  }
  v3 = *(_QWORD *)(result + 24);
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    operator delete();
  }
  return result;
}

void sub_10006E55C(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10006E474(a1);
  operator delete();
}

uint64_t sub_10006E580(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10006E588()
{
  operator new();
}

void sub_10006E5C4()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006E5E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v4;

  if (*(_BYTE *)(a1 + 36))
  {
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      v1 = *(_QWORD *)(a1 + 16);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(_BYTE **)v1 = 0;
          *(_QWORD *)(v1 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v1 = 0;
          *(_BYTE *)(v1 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(a1 + 36) & 2) != 0)
    {
      v2 = *(_QWORD *)(a1 + 24);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
  }
  v4 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10006E670(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  void *v10;
  uint64_t result;
  uint64_t *v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;

  v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if (v9 != 2)
        goto LABEL_18;
      *(_DWORD *)(a1 + 36) |= 1u;
      v10 = *(void **)(a1 + 16);
      if (v10 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v10);
      if (!(_DWORD)result)
        return result;
      v12 = *(uint64_t **)(a1 + 16);
      if (*((char *)v12 + 23) < 0)
      {
        v12 = (uint64_t *)*v12;
        v13 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
      }
      else
      {
        v13 = *((unsigned __int8 *)v12 + 23);
      }
      wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v12, v13, 0);
      v14 = (_BYTE *)*((_QWORD *)this + 1);
      if ((unint64_t)v14 < *((_QWORD *)this + 2) && *v14 == 18)
      {
        *((_QWORD *)this + 1) = v14 + 1;
LABEL_25:
        *(_DWORD *)(a1 + 36) |= 2u;
        v15 = *(void **)(a1 + 24);
        if (v15 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v15);
        if (!(_DWORD)result)
          return result;
        v16 = *(uint64_t **)(a1 + 24);
        if (*((char *)v16 + 23) < 0)
        {
          v16 = (uint64_t *)*v16;
          v17 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8);
        }
        else
        {
          v17 = *((unsigned __int8 *)v16 + 23);
        }
        wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v16, v17, 0);
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if (v9 == 2)
        goto LABEL_25;
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_18:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
      return 0;
  }
}

uint64_t sub_10006E86C(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v11;
  _QWORD *v12;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    v6 = *(uint64_t **)(this + 16);
    if (*((char *)v6 + 23) < 0)
    {
      v6 = (uint64_t *)*v6;
      v7 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8);
    }
    else
    {
      v7 = *((unsigned __int8 *)v6 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v6, v7, 1);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(v4 + 16), a2);
    v5 = *(_DWORD *)(v4 + 36);
  }
  if ((v5 & 2) != 0)
  {
    v8 = *(uint64_t **)(v4 + 24);
    if (*((char *)v8 + 23) < 0)
    {
      v8 = (uint64_t *)*v8;
      v9 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 8);
    }
    else
    {
      v9 = *((unsigned __int8 *)v8 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v8, v9, 1);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2, *(_QWORD *)(v4 + 24), a2);
  }
  v12 = *(_QWORD **)(v4 + 8);
  v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v10 = v12;
  if (v12)
  {
    if (*v10 != v10[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006E924(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  const void *v15;
  uint64_t *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  const void *v25;
  _QWORD *v26;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v27;
  _QWORD *v28;

  v5 = *((_DWORD *)this + 9);
  if ((v5 & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)this + 2);
    if (*((char *)v6 + 23) < 0)
    {
      v6 = (uint64_t *)*v6;
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 8);
    }
    else
    {
      v7 = *((unsigned __int8 *)v6 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v6, v7, 1);
    v10 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 10;
    if (*(char *)(v10 + 23) < 0)
      v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v10 + 8);
    else
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v10 + 23);
    if (v11 > 0x7F)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)a2 + 1, v8);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v11;
      v12 = (_DWORD)a2 + 2;
    }
    v13 = *(char *)(v10 + 23);
    if (v13 >= 0)
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10;
    else
      v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v10;
    if (v13 >= 0)
      v15 = (const void *)*(unsigned __int8 *)(v10 + 23);
    else
      v15 = (const void *)*(unsigned int *)(v10 + 8);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v14, v15, v12, v9);
    v5 = *((_DWORD *)this + 9);
  }
  if ((v5 & 2) != 0)
  {
    v16 = (uint64_t *)*((_QWORD *)this + 3);
    if (*((char *)v16 + 23) < 0)
    {
      v16 = (uint64_t *)*v16;
      v17 = *(_QWORD *)(*((_QWORD *)this + 3) + 8);
    }
    else
    {
      v17 = *((unsigned __int8 *)v16 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v16, v17, 1);
    v20 = *((_QWORD *)this + 3);
    *(_BYTE *)a2 = 18;
    if (*(char *)(v20 + 23) < 0)
      v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v20 + 8);
    else
      v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v20 + 23);
    if (v21 > 0x7F)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)a2 + 1, v18);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v21;
      v22 = (_DWORD)a2 + 2;
    }
    v23 = *(char *)(v20 + 23);
    if (v23 >= 0)
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20;
    else
      v24 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v20;
    if (v23 >= 0)
      v25 = (const void *)*(unsigned __int8 *)(v20 + 23);
    else
      v25 = (const void *)*(unsigned int *)(v20 + 8);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v24, v25, v22, v19);
  }
  v28 = (_QWORD *)*((_QWORD *)this + 1);
  v27 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v26 = v28;
  if (!v28 || *v26 == v26[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v27, a2, a3);
}

uint64_t sub_10006EA94(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  _QWORD *v18;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_24;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v10 = v11 + 1;
    v3 = *(_DWORD *)(a1 + 36);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 2;
  }
  if (v7 < 0)
    v6 = v8;
  v4 = (v10 + v6);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    v12 = *(_QWORD *)(a1 + 24);
    v13 = *(unsigned __int8 *)(v12 + 23);
    v14 = v13;
    v15 = *(_QWORD *)(v12 + 8);
    if ((v13 & 0x80u) == 0)
      v16 = *(unsigned __int8 *)(v12 + 23);
    else
      v16 = v15;
    if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16, a2);
      v13 = *(unsigned __int8 *)(v12 + 23);
      v15 = *(_QWORD *)(v12 + 8);
      v14 = *(_BYTE *)(v12 + 23);
    }
    else
    {
      v17 = 1;
    }
    if (v14 < 0)
      v13 = v15;
    v4 = (v4 + v17 + v13 + 1);
  }
LABEL_24:
  v18 = *(_QWORD **)(a1 + 8);
  if (v18 && *v18 != v18[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

uint64_t sub_10006EBA4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 1579);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10006E330((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10006EC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006EC64(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10006ECAC()
{
  return 1;
}

uint64_t sub_10006ECB4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854318;
}

void sub_10006ED2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006ED40(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FCB38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 0;
  return a1;
}

void sub_10006ED7C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006ED90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v6;
  char v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  _BYTE v19[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v19, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 2145);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v18, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v5 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v9 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_QWORD *)(a1 + 16) = v9;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_21;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v10 = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_BYTE *)(a1 + 24) = v10;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  v11 = *(_BYTE *)(a2 + 25);
  *(_DWORD *)(a1 + 40) |= 4u;
  *(_BYTE *)(a1 + 25) = v11;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  v12 = *(_BYTE *)(a2 + 26);
  *(_DWORD *)(a1 + 40) |= 8u;
  *(_BYTE *)(a1 + 26) = v12;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_24:
    v14 = *(_BYTE *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    *(_BYTE *)(a1 + 28) = v14;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  v13 = *(_BYTE *)(a2 + 27);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  *(_BYTE *)(a1 + 27) = v13;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 0x20) != 0)
    goto LABEL_24;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_25:
  v15 = *(_BYTE *)(a2 + 29);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  *(_BYTE *)(a1 + 29) = v15;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_BYTE *)(a2 + 30);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    *(_BYTE *)(a1 + 30) = v6;
    v5 = *(_DWORD *)(a2 + 40);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v5 & 0x100) == 0)
  {
    if ((v5 & 0x200) == 0)
      goto LABEL_16;
LABEL_28:
    v17 = *(_BYTE *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x200u;
    *(_BYTE *)(a1 + 32) = v17;
    if ((*(_DWORD *)(a2 + 40) & 0x400) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_17;
  }
  v16 = *(_BYTE *)(a2 + 31);
  *(_DWORD *)(a1 + 40) |= 0x100u;
  *(_BYTE *)(a1 + 31) = v16;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 0x200) != 0)
    goto LABEL_28;
LABEL_16:
  if ((v5 & 0x400) != 0)
  {
LABEL_17:
    v7 = *(_BYTE *)(a2 + 33);
    *(_DWORD *)(a1 + 40) |= 0x400u;
    *(_BYTE *)(a1 + 33) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10006EF78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006EF90(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FCB38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10006EFC0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FCB38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10006F004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_10006F00C()
{
  operator new();
}

void sub_10006F048()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006F06C(uint64_t a1)
{
  int v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(a1 + 23) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_WORD *)(a1 + 31) = 0;
    *(_BYTE *)(a1 + 33) = 0;
  }
  v3 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10006F0A4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  _BYTE *v11;
  char *v12;
  unsigned int v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t result;
  unsigned int v25;
  _BYTE *v26;
  unsigned int v27;
  _BYTE *v28;
  unsigned int v29;
  _BYTE *v30;
  unsigned int v31;
  _BYTE *v32;
  unsigned int v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  unsigned int v37;
  _BYTE *v38;
  unsigned int v39;
  _BYTE *v40;
  unsigned int v41;
  unsigned __int8 *v42;
  unsigned int v43[2];

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_36;
        *(_QWORD *)v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v43) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v43;
        *(_DWORD *)(a1 + 40) |= 1u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 != 16)
          continue;
        v12 = v11 + 1;
        *((_QWORD *)this + 1) = v12;
        goto LABEL_16;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v12 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_16:
        v43[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v13 = v43[0];
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v13 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_BYTE *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v14 >= v10 || *v14 != 24)
          continue;
        v15 = v14 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_45:
        v43[0] = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v25 = v43[0];
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v25 = *v15;
          v26 = v15 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        *(_BYTE *)(a1 + 25) = v25 != 0;
        *(_DWORD *)(a1 + 40) |= 4u;
        if ((unint64_t)v26 >= v10 || *v26 != 32)
          continue;
        v16 = v26 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_53:
        v43[0] = 0;
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v27 = v43[0];
          v28 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v27 = *v16;
          v28 = v16 + 1;
          *((_QWORD *)this + 1) = v28;
        }
        *(_BYTE *)(a1 + 26) = v27 != 0;
        *(_DWORD *)(a1 + 40) |= 8u;
        if ((unint64_t)v28 >= v10 || *v28 != 40)
          continue;
        v17 = v28 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_61:
        v43[0] = 0;
        if ((unint64_t)v17 >= v10 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v29 = v43[0];
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v29 = *v17;
          v30 = v17 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        *(_BYTE *)(a1 + 27) = v29 != 0;
        *(_DWORD *)(a1 + 40) |= 0x10u;
        if ((unint64_t)v30 >= v10 || *v30 != 48)
          continue;
        v18 = v30 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_69:
        v43[0] = 0;
        if ((unint64_t)v18 >= v10 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v31 = v43[0];
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v31 = *v18;
          v32 = v18 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        *(_BYTE *)(a1 + 28) = v31 != 0;
        *(_DWORD *)(a1 + 40) |= 0x20u;
        if ((unint64_t)v32 >= v10 || *v32 != 56)
          continue;
        v19 = v32 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_77:
        v43[0] = 0;
        if ((unint64_t)v19 >= v10 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v33 = v43[0];
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v33 = *v19;
          v34 = v19 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        *(_BYTE *)(a1 + 29) = v33 != 0;
        *(_DWORD *)(a1 + 40) |= 0x40u;
        if ((unint64_t)v34 >= v10 || *v34 != 64)
          continue;
        v20 = v34 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_85:
        v43[0] = 0;
        if ((unint64_t)v20 >= v10 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v35 = v43[0];
          v36 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v35 = *v20;
          v36 = v20 + 1;
          *((_QWORD *)this + 1) = v36;
        }
        *(_BYTE *)(a1 + 30) = v35 != 0;
        *(_DWORD *)(a1 + 40) |= 0x80u;
        if ((unint64_t)v36 >= v10 || *v36 != 72)
          continue;
        v21 = v36 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_93:
        v43[0] = 0;
        if ((unint64_t)v21 >= v10 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v37 = v43[0];
          v38 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v37 = *v21;
          v38 = v21 + 1;
          *((_QWORD *)this + 1) = v38;
        }
        *(_BYTE *)(a1 + 31) = v37 != 0;
        *(_DWORD *)(a1 + 40) |= 0x100u;
        if ((unint64_t)v38 >= v10 || *v38 != 80)
          continue;
        v22 = v38 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_101:
        v43[0] = 0;
        if ((unint64_t)v22 >= v10 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v39 = v43[0];
          v40 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v39 = *v22;
          v40 = v22 + 1;
          *((_QWORD *)this + 1) = v40;
        }
        *(_BYTE *)(a1 + 32) = v39 != 0;
        *(_DWORD *)(a1 + 40) |= 0x200u;
        if ((unint64_t)v40 >= v10 || *v40 != 88)
          continue;
        v23 = v40 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_109:
        v43[0] = 0;
        if ((unint64_t)v23 >= v10 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v41 = v43[0];
          v42 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v41 = *v23;
          v42 = (unsigned __int8 *)(v23 + 1);
          *((_QWORD *)this + 1) = v42;
        }
        *(_BYTE *)(a1 + 33) = v41 != 0;
        *(_DWORD *)(a1 + 40) |= 0x400u;
        if (v42 != (unsigned __int8 *)v10 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v15 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v16 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_53;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v17 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_61;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v18 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_69;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v19 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_77;
      case 8u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v20 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_85;
      case 9u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v21 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_93;
      case 0xAu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v22 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_101;
      case 0xBu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v23 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_109;
      default:
        v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_10006F6D8(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 25), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 26), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 27), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 28), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 29), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 30), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 31), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_13;
    goto LABEL_12;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 32), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 0x400) != 0)
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 33), (BOOL)a2, a4);
LABEL_13:
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_10006F854(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  char v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v9;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_19;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)a2 = 16;
  *(_BYTE *)(a2 + 1) = v10;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
    goto LABEL_20;
  }
LABEL_19:
  v11 = *(_BYTE *)(a1 + 25);
  *(_BYTE *)a2 = 24;
  *(_BYTE *)(a2 + 1) = v11;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_21;
  }
LABEL_20:
  v12 = *(_BYTE *)(a1 + 26);
  *(_BYTE *)a2 = 32;
  *(_BYTE *)(a2 + 1) = v12;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_22;
  }
LABEL_21:
  v13 = *(_BYTE *)(a1 + 27);
  *(_BYTE *)a2 = 40;
  *(_BYTE *)(a2 + 1) = v13;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  v14 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)a2 = 48;
  *(_BYTE *)(a2 + 1) = v14;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  v15 = *(_BYTE *)(a1 + 29);
  *(_BYTE *)a2 = 56;
  *(_BYTE *)(a2 + 1) = v15;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x80) == 0)
  {
LABEL_9:
    if ((v3 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_25;
  }
LABEL_24:
  v16 = *(_BYTE *)(a1 + 30);
  *(_BYTE *)a2 = 64;
  *(_BYTE *)(a2 + 1) = v16;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x100) == 0)
  {
LABEL_10:
    if ((v3 & 0x200) == 0)
      goto LABEL_11;
LABEL_26:
    v18 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)a2 = 80;
    *(_BYTE *)(a2 + 1) = v18;
    a2 += 2;
    if ((*(_DWORD *)(a1 + 40) & 0x400) == 0)
      goto LABEL_13;
    goto LABEL_12;
  }
LABEL_25:
  v17 = *(_BYTE *)(a1 + 31);
  *(_BYTE *)a2 = 72;
  *(_BYTE *)(a2 + 1) = v17;
  a2 += 2;
  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x200) != 0)
    goto LABEL_26;
LABEL_11:
  if ((v3 & 0x400) != 0)
  {
LABEL_12:
    v4 = *(_BYTE *)(a1 + 33);
    *(_BYTE *)a2 = 88;
    *(_BYTE *)(a2 + 1) = v4;
    a2 += 2;
  }
LABEL_13:
  v7 = *(_QWORD **)(a1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = v7;
  if (!v7 || *v6 == v6[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10006FA0C(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v3 = a1[10];
  if ((_BYTE)v3)
  {
    v4 = (v3 << 31 >> 31) & 9 | v3 & 2;
    if ((v3 & 4) != 0)
      v4 += 2;
    if ((v3 & 8) != 0)
      v4 += 2;
    if ((v3 & 0x10) != 0)
      v4 += 2;
    if ((v3 & 0x20) != 0)
      v4 += 2;
    if ((v3 & 0x40) != 0)
      v4 += 2;
    if ((v3 & 0x80) != 0)
      v4 += 2;
  }
  else
  {
    v4 = 0;
  }
  v5 = v4 + 2;
  if ((v3 & 0x100) == 0)
    v5 = v4;
  if ((v3 & 0x200) != 0)
    v5 += 2;
  if ((v3 & 0x400) != 0)
    v5 += 2;
  if ((v3 & 0xFF00) != 0)
    v6 = v5;
  else
    v6 = v4;
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  v8 = (_QWORD *)*((_QWORD *)a1 + 1);
  if (v8 && *v8 != v8[1])
    v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v7, a2)
       + v6;
  a1[9] = v6;
  return v6;
}

uint64_t sub_10006FAEC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 2133);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10006ED90((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10006FB94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006FBAC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10006FBF4()
{
  return 1;
}

uint64_t sub_10006FBFC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854328;
}

void sub_10006FC74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_10006FC88(_QWORD *a1)
{
  *a1 = off_1007FCBE8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_10006FCBC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006FCD0(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 2431);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v6;
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10006FD84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006FD9C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FCBE8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10006FDCC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FCBE8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10006FE10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_10006FE18()
{
  operator new();
}

void sub_10006FE54()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006FE78(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 28))
    *(_QWORD *)(a1 + 16) = 0;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10006FE98(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  _BYTE *v14;
  unsigned int v15;
  unsigned __int8 *v16;
  uint64_t result;
  unsigned int v18;
  unsigned int v19;

  v6 = (_DWORD)a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v19 = 0;
      v12 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
        if (!(_DWORD)result)
          return result;
        v13 = v19;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        v13 = *v12;
        v14 = v12 + 1;
        *((_QWORD *)this + 1) = v14;
      }
      a1[4] = v13;
      a1[7] |= 1u;
      if ((unint64_t)v14 < v10 && *v14 == 16)
      {
        v11 = v14 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_24:
        v18 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
          if (!(_DWORD)result)
            return result;
          v15 = v18;
          v16 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v15 = *v11;
          v16 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v16;
        }
        a1[5] = v15;
        a1[7] |= 2u;
        if (v16 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
      return 0;
  }
}

uint64_t sub_10007004C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), (int)a2, a4);
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000700C4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(_BYTE *)a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      v5 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)a2 + 1, a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v4;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_8;
      }
      v5 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = v5;
  }
LABEL_8:
  if ((*((_BYTE *)this + 28) & 2) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
    *(_BYTE *)a2 = 16;
    if ((v6 & 0x80000000) != 0)
    {
      v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
    }
    else
    {
      if (v6 <= 0x7F)
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v6;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_15;
      }
      v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    a2 = v7;
  }
LABEL_15:
  v10 = (_QWORD *)*((_QWORD *)this + 1);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v8 = v10;
  if (!v10 || *v8 == v8[1])
    return a2;
  else
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, a2, a3);
}

uint64_t sub_100070198(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  _QWORD *v8;

  v3 = *(_BYTE *)(a1 + 28);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 28) & 1) == 0)
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 28) & 2) == 0)
        goto LABEL_19;
LABEL_13:
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if ((v6 & 0x80000000) != 0)
      {
        v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
      }
      else
      {
        v7 = 2;
      }
      v4 = (v7 + v4);
      goto LABEL_19;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_19;
      goto LABEL_13;
    }
    if (v5 < 0x80)
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_19;
      goto LABEL_13;
    }
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
    if ((*(_DWORD *)(a1 + 28) & 2) != 0)
      goto LABEL_13;
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  v8 = *(_QWORD **)(a1 + 8);
  if (v8 && *v8 != v8[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

uint64_t sub_100070260(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 2419);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10006FCD0(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100070308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100070320(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100070368()
{
  return 1;
}

uint64_t sub_100070370()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854338;
}

void sub_1000703E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000703FC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FCC98;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_10007043C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100070450(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  char v18;
  _BYTE v19[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v19, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 2873);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v18, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), *(_DWORD *)(a2 + 40) + a1[10]);
  if (*(int *)(a2 + 40) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8 * v5);
      v7 = a1[11];
      v8 = (int)a1[10];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[12])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), v7 + 1);
          v7 = a1[11];
        }
        a1[11] = v7 + 1;
        sub_100083424();
      }
      v9 = *((_QWORD *)a1 + 4);
      a1[10] = v8 + 1;
      sub_10006FCD0(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 40));
  }
  LOBYTE(v10) = *(_BYTE *)(a2 + 68);
  if ((_BYTE)v10)
  {
    if ((*(_BYTE *)(a2 + 68) & 1) != 0)
    {
      v11 = *(_DWORD *)(a2 + 16);
      if (!sub_10006DA24(v11))
        sub_1003CCB18();
      a1[17] |= 1u;
      a1[4] = v11;
      v10 = *(_DWORD *)(a2 + 68);
    }
    if ((v10 & 2) != 0)
    {
      v12 = *(_DWORD *)(a2 + 20);
      a1[17] |= 2u;
      a1[5] = v12;
      v10 = *(_DWORD *)(a2 + 68);
      if ((v10 & 4) == 0)
      {
LABEL_17:
        if ((v10 & 8) == 0)
          goto LABEL_18;
        goto LABEL_23;
      }
    }
    else if ((v10 & 4) == 0)
    {
      goto LABEL_17;
    }
    v13 = *(_DWORD *)(a2 + 24);
    a1[17] |= 4u;
    a1[6] = v13;
    v10 = *(_DWORD *)(a2 + 68);
    if ((v10 & 8) == 0)
    {
LABEL_18:
      if ((v10 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_24;
    }
LABEL_23:
    v14 = *(_DWORD *)(a2 + 28);
    a1[17] |= 8u;
    a1[7] = v14;
    v10 = *(_DWORD *)(a2 + 68);
    if ((v10 & 0x10) == 0)
    {
LABEL_19:
      if ((v10 & 0x40) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
LABEL_25:
      v16 = *(_DWORD *)(a2 + 60);
      if (!sub_10006DA40(v16))
        sub_1003CCAF0();
      a1[17] |= 0x40u;
      a1[15] = v16;
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
LABEL_24:
    v15 = *(_DWORD *)(a2 + 56);
    a1[17] |= 0x10u;
    a1[14] = v15;
    if ((*(_DWORD *)(a2 + 68) & 0x40) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_25;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100070660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100070678(uint64_t *a1)
{
  *a1 = (uint64_t)off_1007FCC98;
  sub_10006BDC4(a1 + 4);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000706B8(uint64_t *a1)
{
  sub_100070678(a1);
  operator delete();
}

uint64_t sub_1000706DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

void sub_1000706E4()
{
  operator new();
}

void sub_100070720()
{
  operator delete();
}

uint64_t sub_100070744(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*(_BYTE *)(this + 68))
  {
    *(_QWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  if (*(int *)(this + 40) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 40));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 8) = 0;
  *((_DWORD *)v4 + 15) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_1000707C4(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned __int8 *v11;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v13;
  char *v14;
  signed int v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t result;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v38;
  int v39;
  BOOL v40;
  int v41;
  int v42;
  signed int v43;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2);
  v7 = a1 + 5;
  v8 = a1 + 6;
  v9 = a1 + 7;
  v10 = a1 + 14;
  v44 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
LABEL_2:
  while (1)
  {
    v11 = (unsigned __int8 *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || (char)*v11 < 0)
      break;
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v11;
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    *((_QWORD *)this + 1) = v11 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v46 = 0;
        v14 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
          if (!(_DWORD)result)
            return result;
          v15 = v46;
        }
        else
        {
          v15 = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        if (sub_10006DA24(v15))
        {
          a1[17] |= 1u;
          a1[4] = v15;
        }
        else
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v15);
        }
        v24 = (_BYTE *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        if ((unint64_t)v24 < v16 && *v24 == 16)
        {
          v17 = v24 + 1;
          *((_QWORD *)this + 1) = v17;
          goto LABEL_36;
        }
        continue;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
LABEL_36:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v25 = v17 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        a1[17] |= 2u;
        if ((unint64_t)v25 >= v16 || *v25 != 24)
          continue;
        v18 = v25 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_44:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v18;
          v26 = v18 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        a1[17] |= 4u;
        if ((unint64_t)v26 >= v16 || *v26 != 32)
          continue;
        v19 = v26 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_52:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v19;
          v27 = v19 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        a1[17] |= 8u;
        if ((unint64_t)v27 >= v16 || *v27 != 40)
          continue;
        v20 = v27 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_60:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v20;
          v28 = v20 + 1;
          *((_QWORD *)this + 1) = v28;
        }
        a1[17] |= 0x10u;
        if ((unint64_t)v28 >= v16 || *v28 != 50)
          continue;
        break;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v18 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_44;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v19 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_52;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v20 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_60;
      case 6u:
        v13 = TagFallback & 7;
        if (v13 == 2)
          goto LABEL_68;
        goto LABEL_24;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v22 = (char *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        goto LABEL_86;
      default:
        v13 = TagFallback & 7;
LABEL_24:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
        continue;
    }
    do
    {
      *((_QWORD *)this + 1) = v28 + 1;
LABEL_68:
      v29 = a1[11];
      v30 = (int)a1[10];
      if ((int)v30 >= v29)
      {
        if (v29 == a1[12])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v44, v29 + 1);
          v29 = a1[11];
        }
        a1[11] = v29 + 1;
        sub_100083424();
      }
      v31 = *((_QWORD *)a1 + 4);
      a1[10] = v30 + 1;
      v32 = *(_DWORD **)(v31 + 8 * v30);
      v47 = 0;
      v33 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v33 >= *((_QWORD *)this + 2) || *v33 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v47))return 0;
      }
      else
      {
        v47 = *v33;
        *((_QWORD *)this + 1) = v33 + 1;
      }
      v34 = *((_DWORD *)this + 14);
      v35 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v34 + 1;
      if (v34 >= v35)
        return 0;
      v36 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v47);
      if (!sub_10006FE98(v32, this, v37, v38) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v36);
      v39 = *((_DWORD *)this + 14);
      v40 = __OFSUB__(v39, 1);
      v41 = v39 - 1;
      if (v41 < 0 == v40)
        *((_DWORD *)this + 14) = v41;
      v28 = (_BYTE *)*((_QWORD *)this + 1);
      v21 = *((_QWORD *)this + 2);
      if ((unint64_t)v28 >= v21)
        goto LABEL_2;
      v42 = *v28;
    }
    while (v42 == 50);
    if (v42 != 56)
      continue;
    v22 = v28 + 1;
    *((_QWORD *)this + 1) = v22;
LABEL_86:
    v45 = 0;
    if ((unint64_t)v22 < v21 && (*v22 & 0x80000000) == 0)
    {
      v43 = *v22;
      *((_QWORD *)this + 1) = v22 + 1;
      goto LABEL_91;
    }
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
    if (!(_DWORD)result)
      return result;
    v43 = v45;
LABEL_91:
    if (sub_10006DA40(v43))
    {
      a1[17] |= 0x40u;
      a1[15] = v43;
    }
    else
    {
      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 7, v43);
    }
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
  TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = (_DWORD)TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t sub_100070CF0(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 68);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x10) != 0)
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 56), a2, a4);
LABEL_7:
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if ((*(_BYTE *)(v5 + 68) & 0x40) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 60), (int)a2, a4);
  v10 = *(_QWORD **)(v5 + 8);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100070E1C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  char *v6;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  uint64_t v12;
  unsigned int *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  unint64_t v17;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v18;
  _QWORD *v19;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v20;
  _QWORD *v21;

  v3 = a2;
  if ((*((_BYTE *)this + 68) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(_BYTE *)a2 = 8;
    v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v5;
        v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }
      v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    v3 = v7;
  }
LABEL_8:
  if ((*((_BYTE *)this + 68) & 2) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)v3 = 16;
    if (v8 > 0x7F)
    {
      v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 68) & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)v3 = 24;
    if (v9 > 0x7F)
    {
      v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 68) & 8) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)v3 = 32;
    if (v10 > 0x7F)
    {
      v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v10;
      v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 68) & 0x10) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)v3 = 40;
    if (v11 > 0x7F)
    {
      v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if (*((int *)this + 10) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(unsigned int **)(*((_QWORD *)this + 4) + 8 * v12);
      *(_BYTE *)v3 = 50;
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[6];
      if (v14 > 0x7F)
      {
        v15 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
      }
      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v14;
        v15 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      v3 = sub_1000700C4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
      ++v12;
    }
    while (v12 < *((int *)this + 10));
  }
  if ((*((_BYTE *)this + 68) & 0x40) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 15);
    *(_BYTE *)v3 = 56;
    v17 = (unint64_t)v3 + 1;
    if ((v16 & 0x80000000) != 0)
    {
      v18 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v16, v17, a3);
    }
    else
    {
      if (v16 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v16;
        v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_37;
      }
      v18 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, v17, a3);
    }
    v3 = v18;
  }
LABEL_37:
  v21 = (_QWORD *)*((_QWORD *)this + 1);
  v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v19 = v21;
  if (!v21 || *v19 == v19[1])
    return v3;
  else
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v20, v3, a3);
}

uint64_t sub_100071024(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  _QWORD *v22;

  LOBYTE(v3) = *(_BYTE *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_40;
  }
  if ((*(_BYTE *)(a1 + 68) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 68);
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 68) & 2) == 0)
      goto LABEL_17;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v7 = 2;
  }
  v4 += v7;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      v9 = 2;
    }
    v4 += v9;
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0)
        goto LABEL_20;
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0)
      goto LABEL_40;
    goto LABEL_34;
  }
LABEL_30:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v13 = 2;
  }
  v4 += v13;
  if ((v3 & 0x40) != 0)
  {
LABEL_34:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if ((v14 & 0x80000000) != 0)
    {
      v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)
          + 1;
    }
    else
    {
      v15 = 2;
    }
    v4 += v15;
  }
LABEL_40:
  v16 = *(_DWORD *)(a1 + 40);
  v17 = (v16 + v4);
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100070198(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * v18), a2);
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
      else
        v21 = 1;
      v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *(int *)(a1 + 40));
  }
  v22 = *(_QWORD **)(a1 + 8);
  if (v22 && *v22 != v22[1])
    v17 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v17;
  *(_DWORD *)(a1 + 64) = v17;
  return v17;
}

uint64_t sub_1000711F8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 2861);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100070450(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1000712A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000712B8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100071300()
{
  return 1;
}

uint64_t sub_100071308()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854348;
}

void sub_100071380(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_100071394(_QWORD *a1)
{
  *a1 = off_1007FCD48;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1000713CC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000713E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 3179);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 24);
      if (v6 >= 6)
        sub_1003CCB40();
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_DWORD *)(a1 + 24) = v6;
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_QWORD *)(a1 + 16) = v7;
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 4) != 0)
    {
      v8 = *(_DWORD *)(a2 + 28);
      *(_DWORD *)(a1 + 36) |= 4u;
      *(_DWORD *)(a1 + 28) = v8;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000714BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000714D4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FCD48;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100071504(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FCD48;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_100071548(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100071550()
{
  operator new();
}

void sub_10007158C()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000715B0(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 36))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1000715D0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  unsigned int *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v10;
  int v11;
  unint64_t v12;
  char *v13;
  char *v14;
  unsigned int v15;
  uint64_t result;
  _BYTE *v17;
  _BYTE *v18;
  unsigned __int8 *v19;
  unsigned int v20;
  unint64_t v21;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  v7 = (unsigned int *)(a1 + 28);
  do
  {
    while (1)
    {
      while (1)
      {
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v8 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v20 = 0;
        v14 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!(_DWORD)result)
            return result;
          v15 = v20;
        }
        else
        {
          v15 = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        if (v15 > 5)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v15);
        }
        else
        {
          *(_DWORD *)(a1 + 36) |= 1u;
          *(_DWORD *)(a1 + 24) = v15;
        }
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 < *((_QWORD *)this + 2) && *v17 == 17)
        {
          *((_QWORD *)this + 1) = v17 + 1;
          goto LABEL_30;
        }
      }
      if (v10 != 2)
        break;
      v11 = TagFallback & 7;
      if (v11 != 1)
        goto LABEL_19;
LABEL_30:
      v21 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0)
        return 0;
      *(_QWORD *)(a1 + 16) = v21;
      *(_DWORD *)(a1 + 36) |= 2u;
      v18 = (_BYTE *)*((_QWORD *)this + 1);
      v12 = *((_QWORD *)this + 2);
      if ((unint64_t)v18 < v12 && *v18 == 24)
      {
        v13 = v18 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_34:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v19 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v13;
          v19 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)this + 1) = v19;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if (v19 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_34;
      }
    }
    else
    {
      v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) != 0);
  return 0;
}

uint64_t sub_1000717FC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 24), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
LABEL_4:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
LABEL_5:
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

_BYTE *sub_100071898(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      v5 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)(a2 + 1), a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        a2[1] = (_BYTE)v4;
        a2 += 2;
        goto LABEL_8;
      }
      v5 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = v5;
  }
LABEL_8:
  v6 = *((_DWORD *)this + 9);
  if ((v6 & 2) != 0)
  {
    v7 = *((_QWORD *)this + 2);
    *a2 = 17;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
    v6 = *((_DWORD *)this + 9);
  }
  if ((v6 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *a2 = 24;
    if (v8 > 0x7F)
    {
      a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
    }
    else
    {
      a2[1] = (_BYTE)v8;
      a2 += 2;
    }
  }
  v11 = (_QWORD *)*((_QWORD *)this + 1);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v9 = v11;
  if (!v11 || *v9 == v9[1])
    return a2;
  else
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1000719B0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  _QWORD *v9;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v6 & 0x80000000) != 0)
      {
        v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        v3 = *(_DWORD *)(a1 + 36);
      }
      else
      {
        v4 = 2;
      }
    }
    else
    {
      v4 = 0;
    }
    if ((v3 & 2) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
    if ((v3 & 4) != 0)
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if (v7 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)
           + 1;
      else
        v8 = 2;
      v5 = (v8 + v5);
    }
  }
  else
  {
    v5 = 0;
  }
  v9 = *(_QWORD **)(a1 + 8);
  if (v9 && *v9 != v9[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_100071A6C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 3167);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000713E0((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100071B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100071B2C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100071B74()
{
  return 1;
}

uint64_t sub_100071B7C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854358;
}

void sub_100071BF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100071C08(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FCDF8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100071C48(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100071C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v14;
  int v15;
  int v16;
  char v17;
  _BYTE v18[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v18, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 3775);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v17, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  v5 = *(_DWORD *)(a2 + 40);
  if (v5)
  {
    sub_10006BAB4(a1 + 32, *(_DWORD *)(a1 + 40) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 32) + 4 * *(int *)(a1 + 40)), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 40));
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
  }
  v6 = *(_DWORD *)(a2 + 56);
  if (v6)
  {
    sub_10006BAB4(a1 + 48, *(_DWORD *)(a1 + 56) + v6);
    memcpy((void *)(*(_QWORD *)(a1 + 48) + 4 * *(int *)(a1 + 56)), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 56));
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
  }
  v7 = *(_DWORD *)(a2 + 80);
  if (v7)
  {
    sub_10006BAB4(a1 + 72, *(_DWORD *)(a1 + 80) + v7);
    memcpy((void *)(*(_QWORD *)(a1 + 72) + 4 * *(int *)(a1 + 80)), *(const void **)(a2 + 72), 4 * *(int *)(a2 + 80));
    *(_DWORD *)(a1 + 80) += *(_DWORD *)(a2 + 80);
  }
  v8 = *(_DWORD *)(a2 + 96);
  if (v8)
  {
    sub_10006BAB4(a1 + 88, *(_DWORD *)(a1 + 96) + v8);
    memcpy((void *)(*(_QWORD *)(a1 + 88) + 4 * *(int *)(a1 + 96)), *(const void **)(a2 + 88), 4 * *(int *)(a2 + 96));
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
  }
  v9 = *(_DWORD *)(a2 + 108);
  if (!(_BYTE)v9)
    goto LABEL_20;
  if ((v9 & 1) != 0)
  {
    v10 = *(_DWORD *)(a2 + 16);
    if (!sub_10006DA24(v10))
      sub_1003CCB90();
    *(_DWORD *)(a1 + 108) |= 1u;
    *(_DWORD *)(a1 + 16) = v10;
    v9 = *(_DWORD *)(a2 + 108);
  }
  if ((v9 & 2) == 0)
  {
    if ((v9 & 4) == 0)
      goto LABEL_17;
LABEL_25:
    v15 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 108) |= 4u;
    *(_DWORD *)(a1 + 24) = v15;
    v9 = *(_DWORD *)(a2 + 108);
    if ((v9 & 8) == 0)
    {
LABEL_18:
      if ((v9 & 0x10) == 0)
        goto LABEL_20;
      goto LABEL_19;
    }
    goto LABEL_26;
  }
  v14 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 108) |= 2u;
  *(_DWORD *)(a1 + 20) = v14;
  v9 = *(_DWORD *)(a2 + 108);
  if ((v9 & 4) != 0)
    goto LABEL_25;
LABEL_17:
  if ((v9 & 8) == 0)
    goto LABEL_18;
LABEL_26:
  v16 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 108) |= 8u;
  *(_DWORD *)(a1 + 28) = v16;
  v9 = *(_DWORD *)(a2 + 108);
  if ((v9 & 0x10) != 0)
  {
LABEL_19:
    v11 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 108) |= 0x10u;
    *(_DWORD *)(a1 + 64) = v11;
    v9 = *(_DWORD *)(a2 + 108);
  }
LABEL_20:
  if ((v9 & 0x200) != 0)
  {
    v12 = *(_DWORD *)(a2 + 68);
    if (!sub_10006DA40(v12))
      sub_1003CCB68();
    *(_DWORD *)(a1 + 108) |= 0x200u;
    *(_DWORD *)(a1 + 68) = v12;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100071ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100071EE4(_QWORD *a1)
{
  *a1 = off_1007FCDF8;
  if (a1[11])
    operator delete[]();
  if (a1[9])
    operator delete[]();
  if (a1[6])
    operator delete[]();
  if (a1[4])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100071F8C(_QWORD *a1)
{
  sub_100071EE4(a1);
  operator delete();
}

uint64_t sub_100071FB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 104) = a2;
  return result;
}

void sub_100071FB8()
{
  operator new();
}

void sub_100071FF4()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100072018(uint64_t a1)
{
  int v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 108);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  if ((v1 & 0x1FE00) != 0)
    *(_DWORD *)(a1 + 68) = 0;
  v3 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  *((_DWORD *)result + 12) = 0;
  *((_DWORD *)result + 18) = 0;
  *((_DWORD *)result + 22) = 0;
  *((_DWORD *)result + 25) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10007205C(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  char *v12;
  signed int v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  unsigned __int8 *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  unsigned __int8 *v28;
  int v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  _BYTE *v35;
  unint64_t v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  int v42;
  uint64_t v43;
  int v44;
  int v45;
  _BYTE *v46;
  unint64_t v47;
  unsigned int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  unsigned int v53;
  int v54;
  uint64_t v55;
  int v56;
  int v57;
  _BYTE *v58;
  unint64_t v59;
  unsigned int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  unsigned int v65;
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  _BYTE *v70;
  unint64_t v71;
  unsigned int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  signed int v77;
  uint64_t result;
  unsigned int *v79;
  unsigned int *v80;
  unsigned int *v81;
  unsigned int *v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  unsigned int v86[12];

  v6 = a1 + 88;
  v7 = a1 + 72;
  v83 = a1 + 32;
  v84 = a1 + 48;
  v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  v79 = (unsigned int *)(a1 + 20);
  v80 = (unsigned int *)(a1 + 24);
  v81 = (unsigned int *)(a1 + 28);
  v82 = (unsigned int *)(a1 + 64);
LABEL_2:
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v86[0] = 0;
        v12 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v86);
          if (!(_DWORD)result)
            return result;
          v13 = v86[0];
        }
        else
        {
          v13 = *v12;
          *((_QWORD *)this + 1) = v12 + 1;
        }
        if (sub_10006DA24(v13))
        {
          *(_DWORD *)(a1 + 108) |= 1u;
          *(_DWORD *)(a1 + 16) = v13;
        }
        else
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v8, 1, v13);
        }
        v24 = (_BYTE *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v24 < v14 && *v24 == 16)
        {
          v15 = v24 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_54;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_54:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v79);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v79 = *v15;
          v25 = v15 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 108) |= 2u;
        if ((unint64_t)v25 >= v14 || *v25 != 24)
          continue;
        v16 = v25 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_62:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v80);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v80 = *v16;
          v26 = v16 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 108) |= 4u;
        if ((unint64_t)v26 >= v14 || *v26 != 32)
          continue;
        v17 = v26 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_70:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v81 = *v17;
          v27 = v17 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 108) |= 8u;
        if ((unint64_t)v27 >= v14 || *v27 != 40)
          continue;
        v18 = v27 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_78:
        if ((unint64_t)v18 >= v14 || (char)*v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v82);
          if (!(_DWORD)result)
            return result;
          v28 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v82 = *v18;
          v28 = v18 + 1;
          *((_QWORD *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 108) |= 0x10u;
        if ((unint64_t)v28 >= v14)
          continue;
        v29 = *v28;
        goto LABEL_106;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v16 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_62;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v17 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_70;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v18 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_78;
      case 6u:
        v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v19 = (char *)*((_QWORD *)this + 1);
            v14 = *((_QWORD *)this + 2);
            goto LABEL_85;
          }
          goto LABEL_34;
        }
        result = sub_100069274(this, v83);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v28 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          if ((unint64_t)v28 >= v14)
            goto LABEL_2;
          v29 = *v28;
          if (v29 == 56)
            goto LABEL_130;
LABEL_106:
          if (v29 != 48)
            goto LABEL_2;
          v19 = (char *)(v28 + 1);
          *((_QWORD *)this + 1) = v19;
LABEL_85:
          v86[0] = 0;
          if ((unint64_t)v19 >= v14 || *v19 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v86);
            if (!(_DWORD)result)
              return result;
            v30 = v86[0];
          }
          else
          {
            v30 = *v19;
            *((_QWORD *)this + 1) = v19 + 1;
          }
          v31 = *(_DWORD *)(a1 + 40);
          if (v31 == *(_DWORD *)(a1 + 44))
          {
            sub_10006BAB4(v83, v31 + 1);
            v31 = *(_DWORD *)(a1 + 40);
          }
          v32 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)(a1 + 40) = v31 + 1;
          *(_DWORD *)(v32 + 4 * v31) = v30;
          v33 = *(_DWORD *)(a1 + 44) - *(_DWORD *)(a1 + 40);
          if (v33 >= 1)
          {
            v34 = v33 + 1;
            do
            {
              v35 = (_BYTE *)*((_QWORD *)this + 1);
              v36 = *((_QWORD *)this + 2);
              if ((unint64_t)v35 >= v36 || *v35 != 48)
                break;
              *((_QWORD *)this + 1) = v35 + 1;
              v86[0] = 0;
              if ((unint64_t)(v35 + 1) >= v36 || (char)v35[1] < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v86);
                if (!(_DWORD)result)
                  return result;
                v37 = v86[0];
              }
              else
              {
                v37 = v35[1];
                *((_QWORD *)this + 1) = v35 + 2;
              }
              v38 = *(_DWORD *)(a1 + 40);
              if (v38 >= *(_DWORD *)(a1 + 44))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v86, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                v39 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v86, "CHECK failed: (size()) < (Capacity()): ");
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v85, v39);
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v86);
                v38 = *(_DWORD *)(a1 + 40);
              }
              v40 = *(_QWORD *)(a1 + 32);
              *(_DWORD *)(a1 + 40) = v38 + 1;
              *(_DWORD *)(v40 + 4 * v38) = v37;
              --v34;
            }
            while (v34 > 1);
          }
        }
      case 7u:
        v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v20 = (char *)*((_QWORD *)this + 1);
            v14 = *((_QWORD *)this + 2);
            goto LABEL_108;
          }
          goto LABEL_34;
        }
        result = sub_100069274(this, v84);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v28 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          if ((unint64_t)v28 >= v14)
            goto LABEL_2;
          v52 = *v28;
          if (v52 == 64)
            goto LABEL_153;
          if (v52 != 56)
            goto LABEL_2;
LABEL_130:
          v20 = (char *)(v28 + 1);
          *((_QWORD *)this + 1) = v20;
LABEL_108:
          v86[0] = 0;
          if ((unint64_t)v20 >= v14 || *v20 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v86);
            if (!(_DWORD)result)
              return result;
            v41 = v86[0];
          }
          else
          {
            v41 = *v20;
            *((_QWORD *)this + 1) = v20 + 1;
          }
          v42 = *(_DWORD *)(a1 + 56);
          if (v42 == *(_DWORD *)(a1 + 60))
          {
            sub_10006BAB4(v84, v42 + 1);
            v42 = *(_DWORD *)(a1 + 56);
          }
          v43 = *(_QWORD *)(a1 + 48);
          *(_DWORD *)(a1 + 56) = v42 + 1;
          *(_DWORD *)(v43 + 4 * v42) = v41;
          v44 = *(_DWORD *)(a1 + 60) - *(_DWORD *)(a1 + 56);
          if (v44 >= 1)
          {
            v45 = v44 + 1;
            do
            {
              v46 = (_BYTE *)*((_QWORD *)this + 1);
              v47 = *((_QWORD *)this + 2);
              if ((unint64_t)v46 >= v47 || *v46 != 56)
                break;
              *((_QWORD *)this + 1) = v46 + 1;
              v86[0] = 0;
              if ((unint64_t)(v46 + 1) >= v47 || (char)v46[1] < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v86);
                if (!(_DWORD)result)
                  return result;
                v48 = v86[0];
              }
              else
              {
                v48 = v46[1];
                *((_QWORD *)this + 1) = v46 + 2;
              }
              v49 = *(_DWORD *)(a1 + 56);
              if (v49 >= *(_DWORD *)(a1 + 60))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v86, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                v50 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v86, "CHECK failed: (size()) < (Capacity()): ");
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v85, v50);
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v86);
                v49 = *(_DWORD *)(a1 + 56);
              }
              v51 = *(_QWORD *)(a1 + 48);
              *(_DWORD *)(a1 + 56) = v49 + 1;
              *(_DWORD *)(v51 + 4 * v49) = v48;
              --v45;
            }
            while (v45 > 1);
          }
        }
      case 8u:
        v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v21 = (char *)*((_QWORD *)this + 1);
            v14 = *((_QWORD *)this + 2);
            goto LABEL_131;
          }
          goto LABEL_34;
        }
        result = sub_100069274(this, v7);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v28 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          if ((unint64_t)v28 >= v14)
            goto LABEL_2;
          v64 = *v28;
          if (v64 == 72)
            goto LABEL_176;
          if (v64 != 64)
            goto LABEL_2;
LABEL_153:
          v21 = (char *)(v28 + 1);
          *((_QWORD *)this + 1) = v21;
LABEL_131:
          v86[0] = 0;
          if ((unint64_t)v21 >= v14 || *v21 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v86);
            if (!(_DWORD)result)
              return result;
            v53 = v86[0];
          }
          else
          {
            v53 = *v21;
            *((_QWORD *)this + 1) = v21 + 1;
          }
          v54 = *(_DWORD *)(a1 + 80);
          if (v54 == *(_DWORD *)(a1 + 84))
          {
            sub_10006BAB4(v7, v54 + 1);
            v54 = *(_DWORD *)(a1 + 80);
          }
          v55 = *(_QWORD *)(a1 + 72);
          *(_DWORD *)(a1 + 80) = v54 + 1;
          *(_DWORD *)(v55 + 4 * v54) = v53;
          v56 = *(_DWORD *)(a1 + 84) - *(_DWORD *)(a1 + 80);
          if (v56 >= 1)
          {
            v57 = v56 + 1;
            do
            {
              v58 = (_BYTE *)*((_QWORD *)this + 1);
              v59 = *((_QWORD *)this + 2);
              if ((unint64_t)v58 >= v59 || *v58 != 64)
                break;
              *((_QWORD *)this + 1) = v58 + 1;
              v86[0] = 0;
              if ((unint64_t)(v58 + 1) >= v59 || (char)v58[1] < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v86);
                if (!(_DWORD)result)
                  return result;
                v60 = v86[0];
              }
              else
              {
                v60 = v58[1];
                *((_QWORD *)this + 1) = v58 + 2;
              }
              v61 = *(_DWORD *)(a1 + 80);
              if (v61 >= *(_DWORD *)(a1 + 84))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v86, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                v62 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v86, "CHECK failed: (size()) < (Capacity()): ");
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v85, v62);
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v86);
                v61 = *(_DWORD *)(a1 + 80);
              }
              v63 = *(_QWORD *)(a1 + 72);
              *(_DWORD *)(a1 + 80) = v61 + 1;
              *(_DWORD *)(v63 + 4 * v61) = v60;
              --v57;
            }
            while (v57 > 1);
          }
        }
      case 9u:
        v11 = TagFallback & 7;
        if (v11 == 2)
        {
          result = sub_100069274(this, v6);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v28 = (unsigned __int8 *)*((_QWORD *)this + 1);
            v14 = *((_QWORD *)this + 2);
            if ((unint64_t)v28 >= v14)
              goto LABEL_2;
            v76 = *v28;
            if (v76 == 80)
            {
              v23 = (char *)(v28 + 1);
              *((_QWORD *)this + 1) = v23;
LABEL_178:
              v86[0] = 0;
              if ((unint64_t)v23 >= v14 || *v23 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v86);
                if (!(_DWORD)result)
                  return result;
                v77 = v86[0];
              }
              else
              {
                v77 = *v23;
                *((_QWORD *)this + 1) = v23 + 1;
              }
              if (sub_10006DA40(v77))
              {
                *(_DWORD *)(a1 + 108) |= 0x200u;
                *(_DWORD *)(a1 + 68) = v77;
              }
              else
              {
                wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v8, 10, v77);
              }
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              goto LABEL_2;
            }
            if (v76 != 72)
              goto LABEL_2;
LABEL_176:
            v22 = (char *)(v28 + 1);
            *((_QWORD *)this + 1) = v22;
LABEL_154:
            v86[0] = 0;
            if ((unint64_t)v22 >= v14 || *v22 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v86);
              if (!(_DWORD)result)
                return result;
              v65 = v86[0];
            }
            else
            {
              v65 = *v22;
              *((_QWORD *)this + 1) = v22 + 1;
            }
            v66 = *(_DWORD *)(a1 + 96);
            if (v66 == *(_DWORD *)(a1 + 100))
            {
              sub_10006BAB4(v6, v66 + 1);
              v66 = *(_DWORD *)(a1 + 96);
            }
            v67 = *(_QWORD *)(a1 + 88);
            *(_DWORD *)(a1 + 96) = v66 + 1;
            *(_DWORD *)(v67 + 4 * v66) = v65;
            v68 = *(_DWORD *)(a1 + 100) - *(_DWORD *)(a1 + 96);
            if (v68 >= 1)
            {
              v69 = v68 + 1;
              do
              {
                v70 = (_BYTE *)*((_QWORD *)this + 1);
                v71 = *((_QWORD *)this + 2);
                if ((unint64_t)v70 >= v71 || *v70 != 72)
                  break;
                *((_QWORD *)this + 1) = v70 + 1;
                v86[0] = 0;
                if ((unint64_t)(v70 + 1) >= v71 || (char)v70[1] < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v86);
                  if (!(_DWORD)result)
                    return result;
                  v72 = v86[0];
                }
                else
                {
                  v72 = v70[1];
                  *((_QWORD *)this + 1) = v70 + 2;
                }
                v73 = *(_DWORD *)(a1 + 96);
                if (v73 >= *(_DWORD *)(a1 + 100))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v86, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                  v74 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v86, "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v85, v74);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v86);
                  v73 = *(_DWORD *)(a1 + 96);
                }
                v75 = *(_QWORD *)(a1 + 88);
                *(_DWORD *)(a1 + 96) = v73 + 1;
                *(_DWORD *)(v75 + 4 * v73) = v72;
                --v69;
              }
              while (v69 > 1);
            }
          }
        }
        if ((TagFallback & 7) == 0)
        {
          v22 = (char *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          goto LABEL_154;
        }
LABEL_34:
        if (v11 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v8, a4) & 1) == 0)return 0;
          continue;
        }
        return 1;
      case 0xAu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v23 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_178;
      default:
        v11 = TagFallback & 7;
        goto LABEL_34;
    }
  }
}

void sub_100072AA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100072AD8(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v12;
  _QWORD *v13;

  v5 = this;
  v6 = *(_DWORD *)(this + 108);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 108);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_27;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  if ((*(_DWORD *)(v5 + 108) & 0x10) != 0)
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_7:
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(*(_QWORD *)(v5 + 32) + 4 * v7++), (int)a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v8++), (int)a2, a4);
    while (v8 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(*(_QWORD *)(v5 + 72) + 4 * v9++), (int)a2, a4);
    while (v9 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(*(_QWORD *)(v5 + 88) + 4 * v10++), (int)a2, a4);
    while (v10 < *(int *)(v5 + 96));
  }
  if ((*(_BYTE *)(v5 + 109) & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 68), (int)a2, a4);
  v13 = *(_QWORD **)(v5 + 8);
  v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v11 = v13;
  if (v13)
  {
    if (*v11 != v11[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100072CA0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  unint64_t v14;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  unint64_t v18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  unint64_t v22;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  unint64_t v26;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  unint64_t v29;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v30;
  _QWORD *v31;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v32;
  _QWORD *v33;

  v3 = a2;
  if ((*((_BYTE *)this + 108) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(_BYTE *)a2 = 8;
    v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v5;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }
      v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    v3 = v7;
  }
LABEL_8:
  if ((*((_BYTE *)this + 108) & 2) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)v3 = 16;
    if (v8 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 108) & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)v3 = 24;
    if (v9 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 108) & 8) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)v3 = 32;
    if (v10 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v10;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((_BYTE *)this + 108) & 0x10) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)v3 = 40;
    if (v11 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if (*((int *)this + 10) >= 1)
  {
    v12 = 0;
    while (1)
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 4) + 4 * v12);
      *(_BYTE *)v3 = 48;
      v14 = (unint64_t)v3 + 1;
      if ((v13 & 0x80000000) != 0)
        break;
      if (v13 > 0x7F)
      {
        v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v14, a3);
        goto LABEL_31;
      }
      *((_BYTE *)v3 + 1) = (_BYTE)v13;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_32:
      if (++v12 >= *((int *)this + 10))
        goto LABEL_33;
    }
    v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, v14, a3);
LABEL_31:
    v3 = v15;
    goto LABEL_32;
  }
LABEL_33:
  if (*((int *)this + 14) >= 1)
  {
    v16 = 0;
    while (1)
    {
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 6) + 4 * v16);
      *(_BYTE *)v3 = 56;
      v18 = (unint64_t)v3 + 1;
      if ((v17 & 0x80000000) != 0)
        break;
      if (v17 > 0x7F)
      {
        v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, v18, a3);
        goto LABEL_40;
      }
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_41:
      if (++v16 >= *((int *)this + 14))
        goto LABEL_42;
    }
    v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, v18, a3);
LABEL_40:
    v3 = v19;
    goto LABEL_41;
  }
LABEL_42:
  if (*((int *)this + 20) >= 1)
  {
    v20 = 0;
    while (1)
    {
      v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 9) + 4 * v20);
      *(_BYTE *)v3 = 64;
      v22 = (unint64_t)v3 + 1;
      if ((v21 & 0x80000000) != 0)
        break;
      if (v21 > 0x7F)
      {
        v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v22, a3);
        goto LABEL_49;
      }
      *((_BYTE *)v3 + 1) = (_BYTE)v21;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_50:
      if (++v20 >= *((int *)this + 20))
        goto LABEL_51;
    }
    v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v21, v22, a3);
LABEL_49:
    v3 = v23;
    goto LABEL_50;
  }
LABEL_51:
  if (*((int *)this + 24) >= 1)
  {
    v24 = 0;
    while (1)
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((_QWORD *)this + 11) + 4 * v24);
      *(_BYTE *)v3 = 72;
      v26 = (unint64_t)v3 + 1;
      if ((v25 & 0x80000000) != 0)
        break;
      if (v25 > 0x7F)
      {
        v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, v26, a3);
        goto LABEL_58;
      }
      *((_BYTE *)v3 + 1) = (_BYTE)v25;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_59:
      if (++v24 >= *((int *)this + 24))
        goto LABEL_60;
    }
    v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v25, v26, a3);
LABEL_58:
    v3 = v27;
    goto LABEL_59;
  }
LABEL_60:
  if ((*((_BYTE *)this + 109) & 2) != 0)
  {
    v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 17);
    *(_BYTE *)v3 = 80;
    v29 = (unint64_t)v3 + 1;
    if ((v28 & 0x80000000) != 0)
    {
      v30 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v28, v29, a3);
    }
    else
    {
      if (v28 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v28;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_67;
      }
      v30 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, v29, a3);
    }
    v3 = v30;
  }
LABEL_67:
  v33 = (_QWORD *)*((_QWORD *)this + 1);
  v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v31 = v33;
  if (!v33 || *v31 == v31[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v32, v3, a3);
}

uint64_t sub_100072FB8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  uint64_t v37;
  _QWORD *v38;

  v3 = *(_DWORD *)(a1 + 108);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    if ((v3 & 0x200) == 0)
      goto LABEL_40;
    goto LABEL_34;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_17;
    goto LABEL_13;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 108);
  }
  else
  {
    v6 = 1;
  }
  v4 = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_13:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = *(_DWORD *)(a1 + 108);
    }
    else
    {
      v8 = 1;
    }
    v4 += v8 + 1;
  }
LABEL_17:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      v3 = *(_DWORD *)(a1 + 108);
    }
    else
    {
      v10 = 1;
    }
    v4 += v10 + 1;
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0)
        goto LABEL_20;
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    v3 = *(_DWORD *)(a1 + 108);
  }
  else
  {
    v12 = 1;
  }
  v4 += v12 + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x200) == 0)
      goto LABEL_40;
    goto LABEL_34;
  }
LABEL_30:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    v3 = *(_DWORD *)(a1 + 108);
  }
  else
  {
    v14 = 1;
  }
  v4 += v14 + 1;
  if ((v3 & 0x200) != 0)
  {
LABEL_34:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
    if ((v15 & 0x80000000) != 0)
    {
      v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2)
          + 1;
    }
    else
    {
      v16 = 2;
    }
    v4 += v16;
  }
LABEL_40:
  v17 = *(_DWORD *)(a1 + 40);
  if (v17 < 1)
  {
    v19 = 0;
  }
  else
  {
    v18 = 0;
    v19 = 0;
    do
    {
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 32)
                                                                                             + 4 * v18);
      if ((v20 & 0x80000000) != 0)
      {
        v21 = 10;
      }
      else if (v20 >= 0x80)
      {
        v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
        v17 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        v21 = 1;
      }
      v19 += v21;
      ++v18;
    }
    while (v18 < v17);
  }
  v22 = *(_DWORD *)(a1 + 56);
  if (v22 < 1)
  {
    v24 = 0;
  }
  else
  {
    v23 = 0;
    v24 = 0;
    do
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 48)
                                                                                             + 4 * v23);
      if ((v25 & 0x80000000) != 0)
      {
        v26 = 10;
      }
      else if (v25 >= 0x80)
      {
        v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
        v22 = *(_DWORD *)(a1 + 56);
      }
      else
      {
        v26 = 1;
      }
      v24 += v26;
      ++v23;
    }
    while (v23 < v22);
  }
  v27 = *(_DWORD *)(a1 + 80);
  if (v27 < 1)
  {
    v29 = 0;
  }
  else
  {
    v28 = 0;
    v29 = 0;
    do
    {
      v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 72)
                                                                                             + 4 * v28);
      if ((v30 & 0x80000000) != 0)
      {
        v31 = 10;
      }
      else if (v30 >= 0x80)
      {
        v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
        v27 = *(_DWORD *)(a1 + 80);
      }
      else
      {
        v31 = 1;
      }
      v29 += v31;
      ++v28;
    }
    while (v28 < v27);
  }
  v32 = *(_DWORD *)(a1 + 96);
  if (v32 < 1)
  {
    v34 = 0;
  }
  else
  {
    v33 = 0;
    v34 = 0;
    do
    {
      v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 88)
                                                                                             + 4 * v33);
      if ((v35 & 0x80000000) != 0)
      {
        v36 = 10;
      }
      else if (v35 >= 0x80)
      {
        v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2);
        v32 = *(_DWORD *)(a1 + 96);
      }
      else
      {
        v36 = 1;
      }
      v34 += v36;
      ++v33;
    }
    while (v33 < v32);
  }
  v37 = (v19 + v4 + v17 + v24 + v22 + v29 + v27 + v34 + v32);
  v38 = *(_QWORD **)(a1 + 8);
  if (v38 && *v38 != v38[1])
    v37 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v37;
  *(_DWORD *)(a1 + 104) = v37;
  return v37;
}

uint64_t sub_1000732D0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 3763);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100071C5C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100073378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100073390(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1000733D8()
{
  return 1;
}

uint64_t sub_1000733E0()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854368;
}

void sub_100073458(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_10007346C(_QWORD *a1)
{
  *a1 = off_1007FCEA8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1000734A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000734B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 4052);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_QWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 2u;
      v7 = *(_DWORD **)(a1 + 24);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 24);
      if (!v8)
        v8 = *(_QWORD *)(qword_10085F610 + 24);
      sub_10006DB34(v7, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000735B4()
{
  operator delete();
}

void sub_1000735EC(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1007FCEA8;
  if ((_QWORD *)qword_10085F610 != a1)
  {
    v2 = a1[3];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100073648(_QWORD *a1)
{
  sub_1000735EC(a1);
  operator delete();
}

uint64_t sub_10007366C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100073674()
{
  operator new();
}

void sub_1000736B0()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000736D4(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  char v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  uint64_t v4;

  v1 = this;
  v2 = *((_BYTE *)this + 36);
  if (v2)
  {
    *((_QWORD *)this + 2) = 0;
    if ((v2 & 2) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 3);
      if (this)
        this = sub_10006DD04((uint64_t)this);
    }
  }
  v4 = *((_QWORD *)v1 + 1);
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  return this;
}

uint64_t sub_100073728(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  int v10;
  _BYTE *v11;
  _DWORD *v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v18;
  int v19;
  BOOL v20;
  int v21;
  uint64_t result;
  unint64_t v23;
  unsigned int v24;

  v6 = a1 + 8;
  while (1)
  {
    do
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 == 1)
          break;
        if (TagFallback >> 3 == 2)
        {
          v9 = TagFallback & 7;
          if (v9 == 2)
          {
            v10 = *(_DWORD *)(a1 + 36);
            goto LABEL_16;
          }
        }
        else
        {
          v9 = TagFallback & 7;
        }
LABEL_22:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
      }
      v9 = TagFallback & 7;
      if (v9 != 1)
        goto LABEL_22;
      v23 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0)
        return 0;
      *(_QWORD *)(a1 + 16) = v23;
      v10 = *(_DWORD *)(a1 + 36) | 1;
      *(_DWORD *)(a1 + 36) = v10;
      v11 = (_BYTE *)*((_QWORD *)this + 1);
    }
    while ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 18);
    *((_QWORD *)this + 1) = v11 + 1;
LABEL_16:
    *(_DWORD *)(a1 + 36) = v10 | 2;
    v12 = *(_DWORD **)(a1 + 24);
    if (!v12)
      operator new();
    v24 = 0;
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24))
        return 0;
    }
    else
    {
      v24 = *v13;
      *((_QWORD *)this + 1) = v13 + 1;
    }
    v14 = *((_DWORD *)this + 14);
    v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15)
      return 0;
    v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v24);
    if (!sub_10006DD24(v12, this, v17, v18) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    v19 = *((_DWORD *)this + 14);
    v20 = __OFSUB__(v19, 1);
    v21 = v19 - 1;
    if (v21 < 0 == v20)
      *((_DWORD *)this + 14) = v21;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

void sub_100073948()
{
  operator delete();
}

uint64_t sub_10007396C(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0)
  {
    v7 = *(_QWORD *)(v5 + 24);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F610 + 24);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  v10 = *(_QWORD **)(v5 + 8);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000739F4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v4;
  uint64_t v5;
  unsigned int *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  v4 = *((_DWORD *)this + 9);
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)((char *)a2 + 1) = v5;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    v4 = *((_DWORD *)this + 9);
  }
  if ((v4 & 2) != 0)
  {
    v6 = (unsigned int *)*((_QWORD *)this + 3);
    if (!v6)
      v6 = *(unsigned int **)(qword_10085F610 + 24);
    *(_BYTE *)a2 = 18;
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[6];
    if (v7 > 0x7F)
    {
      v8 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v7;
      v8 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
    a2 = sub_10006DF8C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v8, a3);
  }
  v11 = (_QWORD *)*((_QWORD *)this + 1);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v9 = v11;
  if (!v11 || *v9 == v9[1])
    return a2;
  else
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3);
}

uint64_t sub_100073AE4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  _QWORD *v9;

  v3 = *(unsigned __int8 *)(a1 + 36);
  if (*(_BYTE *)(a1 + 36))
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
    {
      v5 = *(_QWORD *)(a1 + 24);
      if (!v5)
        v5 = *(_QWORD *)(qword_10085F610 + 24);
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006E060(v5, a2);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
      else
        v8 = 1;
      v4 = (v4 + v7 + v8 + 1);
    }
  }
  else
  {
    v4 = 0;
  }
  v9 = *(_QWORD **)(a1 + 8);
  if (v9 && *v9 != v9[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

uint64_t sub_100073B90(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 4040);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000734B8((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100073C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100073C50(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100073C98()
{
  return 1;
}

uint64_t sub_100073CA0()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854378;
}

void sub_100073D18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100073D2C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FCF58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_100073D68(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100073D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 4313);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_10006BAB4(a1 + 16, *(_DWORD *)(a1 + 24) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 32);
    if (!sub_10006DA40(v6))
      sub_1003CCBB8();
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 32) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100073E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100073E84(_QWORD *a1)
{
  *a1 = off_1007FCF58;
  if (a1[2])
    operator delete[]();
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100073ED8(_QWORD *a1)
{
  sub_100073E84(a1);
  operator delete();
}

uint64_t sub_100073EFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_100073F04()
{
  operator new();
}

void sub_100073F40()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100073F64(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 40))
    *(_DWORD *)(a1 + 32) = 0;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 8) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_100073F88(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  char *v11;
  signed int v12;
  uint64_t result;
  _BYTE *v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  signed int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  _BYTE *v26;
  char v27;
  unsigned int v28[12];

  v6 = a1 + 16;
  v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v8 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v28[0] = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
          if (!(_DWORD)result)
            return result;
          v12 = v28[0];
        }
        else
        {
          v12 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        if (sub_10006DA40(v12))
        {
          *(_DWORD *)(a1 + 40) |= 1u;
          *(_DWORD *)(a1 + 32) = v12;
        }
        else
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 1, v12);
        }
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 < *((_QWORD *)this + 2) && *v14 == 21)
        {
LABEL_29:
          *((_QWORD *)this + 1) = v14 + 1;
          goto LABEL_30;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v10 = TagFallback & 7;
        break;
      }
      v10 = TagFallback & 7;
      if (v10 == 2)
      {
        result = sub_10005AB30(this, v6);
        if (!(_DWORD)result)
          return result;
        goto LABEL_46;
      }
      if (v10 != 5)
        break;
LABEL_30:
      v28[0] = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v28) & 1) == 0)
        return 0;
      v15 = v28[0];
      v16 = *(_DWORD *)(a1 + 24);
      if (v16 == *(_DWORD *)(a1 + 28))
      {
        sub_10006BAB4(v6, v16 + 1);
        v16 = *(_DWORD *)(a1 + 24);
      }
      v17 = *(_QWORD *)(a1 + 16);
      v18 = v16 + 1;
      *(_DWORD *)(a1 + 24) = v16 + 1;
      *(_DWORD *)(v17 + 4 * v16) = v15;
      v19 = *((_QWORD *)this + 1);
      v20 = *((_DWORD *)this + 4) - v19;
      if (v20 >= 1)
      {
        v21 = v20 / 5u;
        v22 = v21 >= *(_DWORD *)(a1 + 28) - v18 ? *(_DWORD *)(a1 + 28) - v18 : v21;
        if (v22 >= 1)
        {
          v23 = 0;
          while (*(_BYTE *)v19 == 21)
          {
            v24 = *(_DWORD *)(v19 + 1);
            if (v18 >= *(_DWORD *)(a1 + 28))
            {
              wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v28, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
              v25 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (size()) < (Capacity()): ");
              wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v27, v25);
              wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v28);
              v18 = *(_DWORD *)(a1 + 24);
              v17 = *(_QWORD *)(a1 + 16);
            }
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(_DWORD *)(v17 + 4 * v18) = v24;
            ++v23;
            v19 += 5;
            ++v18;
            if (v22 == v23)
            {
              v23 = v22;
              break;
            }
          }
          if (v23)
            wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v23);
        }
      }
LABEL_46:
      v14 = (_BYTE *)*((_QWORD *)this + 1);
      v26 = (_BYTE *)*((_QWORD *)this + 2);
      if (v14 < v26 && *v14 == 21)
        goto LABEL_29;
      if (v14 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
LABEL_17:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)return 0;
  }
}

void sub_100074288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000742A0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  if ((*(_BYTE *)(this + 40) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 32), (int)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(*(_QWORD *)(v5 + 16) + 4 * v6++), a3);
    while (v6 < *(int *)(v5 + 24));
  }
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

_BYTE *sub_100074340(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  _BYTE *v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
    *a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      v5 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)(a2 + 1), a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        a2[1] = (_BYTE)v4;
        a2 += 2;
        goto LABEL_8;
      }
      v5 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = v5;
  }
LABEL_8:
  if (*((int *)this + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_DWORD *)(*((_QWORD *)this + 2) + 4 * v6);
      *a2 = 21;
      *(_DWORD *)(a2 + 1) = v7;
      a2 += 5;
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  v10 = (_QWORD *)*((_QWORD *)this + 1);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v8 = v10;
  if (!v10 || *v8 == v8[1])
    return a2;
  else
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10007441C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  _QWORD *v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      v3 = 2;
    }
  }
  else
  {
    v3 = 0;
  }
  v5 = *(_QWORD **)(a1 + 8);
  v6 = (5 * *(_DWORD *)(a1 + 24) + v3);
  if (v5 && *v5 != v5[1])
    v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v6;
  *(_DWORD *)(a1 + 36) = v6;
  return v6;
}

uint64_t sub_1000744A4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 4301);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100073D7C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10007454C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100074564(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1000745AC()
{
  return 1;
}

uint64_t sub_1000745B4()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854388;
}

void sub_10007462C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100074640(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD008;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 44) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10007467C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100074690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 4699);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 56);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 56) & 1) != 0)
  {
    v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 24) = v8;
    v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_14;
    }
  }
  else if ((*(_BYTE *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(_QWORD *)(a1 + 16) = v9;
  v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  v10 = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_QWORD *)(a1 + 32) = v10;
  v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
LABEL_16:
    v12 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 0x10u;
    *(_DWORD *)(a1 + 48) = v12;
    if ((*(_DWORD *)(a2 + 56) & 0x20) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_10;
  }
LABEL_15:
  v11 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(_DWORD *)(a1 + 28) = v11;
  v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x10) != 0)
    goto LABEL_16;
LABEL_9:
  if ((v5 & 0x20) != 0)
  {
LABEL_10:
    v6 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(_QWORD *)(a1 + 40) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000747CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000747E4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD008;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100074814(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD008;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_100074858(uint64_t result, int a2)
{
  *(_DWORD *)(result + 52) = a2;
  return result;
}

void sub_100074860()
{
  operator new();
}

void sub_10007489C()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000748C0(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 56))
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 12) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1000748E8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unint64_t *v6;
  unsigned int *v7;
  unsigned int *v8;
  unint64_t *v9;
  unsigned int v10;
  char *v11;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v13;
  unint64_t v14;
  _BYTE *v15;
  char *v16;
  _BYTE *v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  unsigned __int8 *v26;
  unint64_t v27;
  unsigned int v28;

  v6 = (unint64_t *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 28);
  v8 = (unsigned int *)(a1 + 48);
  v9 = (unint64_t *)(a1 + 40);
  v10 = a1 + 8;
  while (2)
  {
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v11;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if (v13 != 5)
          goto LABEL_26;
        v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v28) & 1) == 0)
          return 0;
        *(_DWORD *)(a1 + 24) = v28;
        *(_DWORD *)(a1 + 56) |= 1u;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != 16)
          continue;
        v16 = v15 + 1;
        *((_QWORD *)this + 1) = v16;
        goto LABEL_16;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v16 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_16:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v17 = v16 + 1;
          *((_QWORD *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v17 >= v14 || *v17 != 25)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
LABEL_35:
        v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v27) & 1) != 0)
        {
          *(_QWORD *)(a1 + 32) = v27;
          *(_DWORD *)(a1 + 56) |= 4u;
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v18 = *((_QWORD *)this + 2);
          if ((unint64_t)v23 < v18 && *v23 == 32)
          {
            v19 = v23 + 1;
            *((_QWORD *)this + 1) = v19;
LABEL_39:
            if ((unint64_t)v19 >= v18 || *v19 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
              if (!(_DWORD)result)
                return result;
              v24 = (_BYTE *)*((_QWORD *)this + 1);
              v18 = *((_QWORD *)this + 2);
            }
            else
            {
              *v7 = *v19;
              v24 = v19 + 1;
              *((_QWORD *)this + 1) = v24;
            }
            *(_DWORD *)(a1 + 56) |= 8u;
            if ((unint64_t)v24 < v18 && *v24 == 40)
            {
              v20 = v24 + 1;
              *((_QWORD *)this + 1) = v20;
LABEL_47:
              if ((unint64_t)v20 >= v18 || *v20 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                if (!(_DWORD)result)
                  return result;
                v25 = (_BYTE *)*((_QWORD *)this + 1);
                v18 = *((_QWORD *)this + 2);
              }
              else
              {
                *v8 = *v20;
                v25 = v20 + 1;
                *((_QWORD *)this + 1) = v25;
              }
              *(_DWORD *)(a1 + 56) |= 0x10u;
              if ((unint64_t)v25 < v18 && *v25 == 48)
              {
                v21 = v25 + 1;
                *((_QWORD *)this + 1) = v21;
LABEL_55:
                if ((unint64_t)v21 >= v18 || *v21 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v9);
                  if (!(_DWORD)result)
                    return result;
                  v26 = (unsigned __int8 *)*((_QWORD *)this + 1);
                  v18 = *((_QWORD *)this + 2);
                }
                else
                {
                  *v9 = *v21;
                  v26 = (unsigned __int8 *)(v21 + 1);
                  *((_QWORD *)this + 1) = v26;
                }
                *(_DWORD *)(a1 + 56) |= 0x20u;
                if (v26 == (unsigned __int8 *)v18
                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  result = 1;
                  *((_BYTE *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v13 = TagFallback & 7;
        if (v13 == 1)
          goto LABEL_35;
        goto LABEL_26;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v19 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_39;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v20 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_47;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v21 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_55;
      default:
        v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v10, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_100074C54(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 24), a3);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (unint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 48), a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x20) != 0)
LABEL_7:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(v5 + 40), (unint64_t)a2, a4);
LABEL_8:
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_100074D44(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  _QWORD *v11;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v12;
  _QWORD *v13;

  v4 = *((_DWORD *)this + 14);
  if ((v4 & 1) != 0)
  {
    v5 = *((_DWORD *)this + 6);
    *(_BYTE *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v5;
    a2 += 5;
    v4 = *((_DWORD *)this + 14);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 2);
  *(_BYTE *)a2 = 16;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, a2 + 1, a3);
  v4 = *((_DWORD *)this + 14);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
LABEL_8:
  v7 = *((_QWORD *)this + 4);
  *(_BYTE *)a2 = 25;
  *(_QWORD *)(a2 + 1) = v7;
  a2 += 9;
  if ((*((_DWORD *)this + 14) & 8) == 0)
    goto LABEL_12;
LABEL_9:
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  *(_BYTE *)a2 = 32;
  if (v8 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
  }
  else
  {
    *(_BYTE *)(a2 + 1) = (_BYTE)v8;
    a2 += 2;
  }
LABEL_12:
  if ((*((_BYTE *)this + 56) & 0x10) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)a2 = 40;
    if (v9 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, a3);
    }
    else
    {
      *(_BYTE *)(a2 + 1) = (_BYTE)v9;
      a2 += 2;
    }
  }
  if ((*((_BYTE *)this + 56) & 0x20) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 5);
    *(_BYTE *)a2 = 48;
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, a2 + 1, a3);
  }
  v13 = (_QWORD *)*((_QWORD *)this + 1);
  v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v11 = v13;
  if (!v13 || *v11 == v11[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v12, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100074EC8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  _QWORD *v9;

  v3 = *(unsigned __int8 *)(a1 + 56);
  if (*(_BYTE *)(a1 + 56))
  {
    LODWORD(v4) = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0)
    {
      LODWORD(v4) = v4
                  + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
      v3 = *(_DWORD *)(a1 + 56);
    }
    if ((v3 & 4) != 0)
      v4 = (v4 + 9);
    else
      v4 = v4;
    if ((v3 & 8) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if (v5 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        v3 = *(_DWORD *)(a1 + 56);
      }
      else
      {
        v6 = 2;
      }
      v4 = (v6 + v4);
      if ((v3 & 0x10) == 0)
      {
LABEL_9:
        if ((v3 & 0x20) == 0)
          goto LABEL_21;
        goto LABEL_20;
      }
    }
    else if ((v3 & 0x10) == 0)
    {
      goto LABEL_9;
    }
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      v8 = 2;
    }
    v4 = (v8 + v4);
    if ((v3 & 0x20) == 0)
      goto LABEL_21;
LABEL_20:
    v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
    goto LABEL_21;
  }
  v4 = 0;
LABEL_21:
  v9 = *(_QWORD **)(a1 + 8);
  if (v9 && *v9 != v9[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 52) = v4;
  return v4;
}

uint64_t sub_100074FBC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 4687);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100074690((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100075064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007507C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1000750C4()
{
  return 1;
}

uint64_t sub_1000750CC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854398;
}

void sub_100075144(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100075158(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD0B8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_100075198(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000751AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 5103);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 64);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 64) & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 56);
    if (v6 >= 3)
      sub_1003CCBE0();
    *(_DWORD *)(a1 + 64) |= 1u;
    *(_DWORD *)(a1 + 56) = v6;
    v5 = *(_DWORD *)(a2 + 64);
  }
  if ((v5 & 2) != 0)
  {
    v9 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_QWORD *)(a1 + 16) = v9;
    v5 = *(_DWORD *)(a2 + 64);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0)
        goto LABEL_10;
      goto LABEL_16;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 64) |= 4u;
  *(_QWORD *)(a1 + 24) = v10;
  v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0)
      goto LABEL_11;
LABEL_17:
    v12 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 64) |= 0x10u;
    *(_QWORD *)(a1 + 40) = v12;
    if ((*(_DWORD *)(a2 + 64) & 0x20) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_12;
  }
LABEL_16:
  v11 = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 64) |= 8u;
  *(_QWORD *)(a1 + 32) = v11;
  v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 0x10) != 0)
    goto LABEL_17;
LABEL_11:
  if ((v5 & 0x20) != 0)
  {
LABEL_12:
    v7 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 64) |= 0x20u;
    *(_QWORD *)(a1 + 48) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000752F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100075308(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD0B8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100075338(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD0B8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10007537C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_100075384()
{
  operator new();
}

void sub_1000753C0()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000753E4(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 64))
  {
    *(_OWORD *)(a1 + 44) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 14) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10007540C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  char *v10;
  unsigned int v11;
  uint64_t result;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  unsigned int v18[2];

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v18[0] = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!(_DWORD)result)
            return result;
          v11 = v18[0];
        }
        else
        {
          v11 = *v10;
          *((_QWORD *)this + 1) = v10 + 1;
        }
        if (v11 > 2)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v11);
        }
        else
        {
          *(_DWORD *)(a1 + 64) |= 1u;
          *(_DWORD *)(a1 + 56) = v11;
        }
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 < *((_QWORD *)this + 2) && *v13 == 17)
        {
          *((_QWORD *)this + 1) = v13 + 1;
          goto LABEL_33;
        }
        continue;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_22;
LABEL_33:
        *(_QWORD *)v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v18;
        *(_DWORD *)(a1 + 64) |= 2u;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 != 25)
          continue;
        *((_QWORD *)this + 1) = v14 + 1;
LABEL_37:
        *(_QWORD *)v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v18;
        *(_DWORD *)(a1 + 64) |= 4u;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v15 >= *((_QWORD *)this + 2) || *v15 != 33)
          continue;
        *((_QWORD *)this + 1) = v15 + 1;
LABEL_41:
        *(_QWORD *)v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)v18;
        *(_DWORD *)(a1 + 64) |= 8u;
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v16 >= *((_QWORD *)this + 2) || *v16 != 41)
          continue;
        *((_QWORD *)this + 1) = v16 + 1;
LABEL_45:
        *(_QWORD *)v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v18;
        *(_DWORD *)(a1 + 64) |= 0x10u;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 != 49)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
LABEL_49:
        *(_QWORD *)v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) != 0)
        {
          *(_QWORD *)(a1 + 48) = *(_QWORD *)v18;
          *(_DWORD *)(a1 + 64) |= 0x20u;
          if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_37;
        goto LABEL_22;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_41;
        goto LABEL_22;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_45;
        goto LABEL_22;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_22;
        goto LABEL_49;
      default:
        v9 = TagFallback & 7;
LABEL_22:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_100075730(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 64);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 56), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 64) & 0x20) != 0)
LABEL_7:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
LABEL_8:
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

_BYTE *sub_100075820(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((*((_BYTE *)this + 64) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
    *a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      v5 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)(a2 + 1), a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        a2[1] = (_BYTE)v4;
        a2 += 2;
        goto LABEL_8;
      }
      v5 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = v5;
  }
LABEL_8:
  v6 = *((_DWORD *)this + 16);
  if ((v6 & 2) != 0)
  {
    v12 = *((_QWORD *)this + 2);
    *a2 = 17;
    *(_QWORD *)(a2 + 1) = v12;
    a2 += 9;
    v6 = *((_DWORD *)this + 16);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0)
        goto LABEL_11;
      goto LABEL_20;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  v13 = *((_QWORD *)this + 3);
  *a2 = 25;
  *(_QWORD *)(a2 + 1) = v13;
  a2 += 9;
  v6 = *((_DWORD *)this + 16);
  if ((v6 & 8) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0)
      goto LABEL_12;
LABEL_21:
    v15 = *((_QWORD *)this + 5);
    *a2 = 41;
    *(_QWORD *)(a2 + 1) = v15;
    a2 += 9;
    if ((*((_DWORD *)this + 16) & 0x20) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_20:
  v14 = *((_QWORD *)this + 4);
  *a2 = 33;
  *(_QWORD *)(a2 + 1) = v14;
  a2 += 9;
  v6 = *((_DWORD *)this + 16);
  if ((v6 & 0x10) != 0)
    goto LABEL_21;
LABEL_12:
  if ((v6 & 0x20) != 0)
  {
LABEL_13:
    v7 = *((_QWORD *)this + 6);
    *a2 = 49;
    *(_QWORD *)(a2 + 1) = v7;
    a2 += 9;
  }
LABEL_14:
  v10 = (_QWORD *)*((_QWORD *)this + 1);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v8 = v10;
  if (!v10 || *v8 == v8[1])
    return a2;
  else
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100075A64(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  _QWORD *v7;

  LOBYTE(v3) = *(_BYTE *)(a1 + 64);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 64) & 1) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if ((v6 & 0x80000000) != 0)
      {
        v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        v3 = *(_DWORD *)(a1 + 64);
      }
      else
      {
        v4 = 2;
      }
    }
    else
    {
      v4 = 0;
    }
    if ((v3 & 2) != 0)
      v4 += 9;
    if ((v3 & 4) != 0)
      v4 += 9;
    if ((v3 & 8) != 0)
      v4 += 9;
    if ((v3 & 0x10) != 0)
      v4 += 9;
    if ((v3 & 0x20) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  v7 = *(_QWORD **)(a1 + 8);
  if (v7 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 60) = v5;
  return v5;
}

uint64_t sub_100075B2C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 5091);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000751AC((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100075BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100075BEC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100075C34()
{
  return 1;
}

uint64_t sub_100075C3C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008543A8;
}

void sub_100075CB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100075CC8(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD168;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_100075D00(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100075D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 5371);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 24);
      if (v6 >= 4)
        sub_1003CCC08();
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 24) = v6;
      v5 = *(_DWORD *)(a2 + 32);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_QWORD *)(a1 + 16) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100075DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100075DEC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD168;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100075E1C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD168;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_100075E60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_100075E68()
{
  operator new();
}

void sub_100075EA4()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100075EC8(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 32))
  {
    *(_DWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_100075EEC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  char *v10;
  unsigned int v11;
  uint64_t result;
  _BYTE *v13;
  unsigned int v14;
  unint64_t v15;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v14 = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
          if (!(_DWORD)result)
            return result;
          v11 = v14;
        }
        else
        {
          v11 = *v10;
          *((_QWORD *)this + 1) = v10 + 1;
        }
        if (v11 > 3)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v11);
        }
        else
        {
          *(_DWORD *)(a1 + 32) |= 1u;
          *(_DWORD *)(a1 + 24) = v11;
        }
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 < *((_QWORD *)this + 2) && *v13 == 17)
        {
          *((_QWORD *)this + 1) = v13 + 1;
          goto LABEL_27;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v9 = TagFallback & 7;
      if (v9 != 1)
        goto LABEL_16;
LABEL_27:
      v15 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0)
        return 0;
      *(_QWORD *)(a1 + 16) = v15;
      *(_DWORD *)(a1 + 32) |= 2u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v9 = TagFallback & 7;
LABEL_16:
    if (v9 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) != 0);
  return 0;
}

uint64_t sub_10007609C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 24), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

_BYTE *sub_100076114(wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  _BYTE *v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      v5 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)(a2 + 1), a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        a2[1] = (_BYTE)v4;
        a2 += 2;
        goto LABEL_8;
      }
      v5 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = v5;
  }
LABEL_8:
  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
    v6 = *((_QWORD *)this + 2);
    *a2 = 17;
    *(_QWORD *)(a2 + 1) = v6;
    a2 += 9;
  }
  v9 = (_QWORD *)*((_QWORD *)this + 1);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v7 = v9;
  if (!v9 || *v7 == v7[1])
    return a2;
  else
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1000761F4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  _QWORD *v7;

  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v6 & 0x80000000) != 0)
      {
        v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        v3 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        v4 = 2;
      }
    }
    else
    {
      v4 = 0;
    }
    if ((v3 & 2) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  v7 = *(_QWORD **)(a1 + 8);
  if (v7 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 28) = v5;
  return v5;
}

uint64_t sub_10007628C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 5359);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100075D14((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100076334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007634C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100076394()
{
  return 1;
}

uint64_t sub_10007639C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008543B8;
}

void sub_100076414(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_100076428(_QWORD *a1)
{
  *a1 = off_1007FD218;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_100076460(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100076474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  _BYTE v12[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 5629);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 16);
      if (!v7)
        v7 = *(_QWORD *)(qword_10085F638 + 16);
      sub_100075D14(v6, v7);
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 2u;
      v8 = *(_QWORD *)(a1 + 24);
      if (!v8)
        operator new();
      v9 = *(_QWORD *)(a2 + 24);
      if (!v9)
        v9 = *(_QWORD *)(qword_10085F638 + 24);
      sub_1000751AC(v8, v9);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000765B0()
{
  operator delete();
}

void sub_1000765FC(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_1007FD218;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100076638(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

_QWORD *sub_100076638(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  if ((_QWORD *)qword_10085F638 != result)
  {
    v1 = result;
    v2 = result[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    result = (_QWORD *)v1[3];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_100076698(_QWORD *a1)
{
  sub_1000765FC(a1);
  operator delete();
}

uint64_t sub_1000766BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1000766C4()
{
  operator new();
}

void sub_100076700()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100076724(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  LOBYTE(v2) = *((_BYTE *)this + 36);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 36) & 1) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      if (this)
      {
        this = sub_100075EC8((uint64_t)this);
        v2 = *((_DWORD *)v1 + 9);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 3);
      if (this)
      {
        if (*((_BYTE *)this + 64))
        {
          *(_OWORD *)((char *)this + 44) = 0u;
          *((_OWORD *)this + 1) = 0u;
          *((_OWORD *)this + 2) = 0u;
        }
        v3 = *((_QWORD *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 14) = 0;
        if (v3)
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
      }
    }
  }
  v5 = *((_QWORD *)v1 + 1);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v4 + 7) = 0;
  if (v5)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_1000767A8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  uint64_t v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v27;
  int v28;
  int v29;
  uint64_t result;
  unsigned int v31;
  unsigned int v32;

  v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_18;
        *(_DWORD *)(a1 + 36) |= 1u;
        v10 = *(_QWORD *)(a1 + 16);
        if (!v10)
          operator new();
        v31 = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0;
        }
        else
        {
          v31 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        v12 = *((_DWORD *)this + 14);
        v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13)
          return 0;
        v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        if (!sub_100075EEC(v10, this, v15, v16) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        v17 = *((_DWORD *)this + 14);
        v18 = __OFSUB__(v17, 1);
        v19 = v17 - 1;
        if (v19 < 0 == v18)
          *((_DWORD *)this + 14) = v19;
        v20 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v20 < *((_QWORD *)this + 2) && *v20 == 18)
        {
          *((_QWORD *)this + 1) = v20 + 1;
          goto LABEL_30;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v9 = TagFallback & 7;
      if (v9 != 2)
        goto LABEL_18;
LABEL_30:
      *(_DWORD *)(a1 + 36) |= 2u;
      v21 = *(_QWORD *)(a1 + 24);
      if (!v21)
        operator new();
      v32 = 0;
      v22 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v22 >= *((_QWORD *)this + 2) || *v22 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0;
      }
      else
      {
        v32 = *v22;
        *((_QWORD *)this + 1) = v22 + 1;
      }
      v23 = *((_DWORD *)this + 14);
      v24 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v23 + 1;
      if (v23 >= v24)
        return 0;
      v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
      if (!sub_10007540C(v21, this, v26, v27) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
      v28 = *((_DWORD *)this + 14);
      v18 = __OFSUB__(v28, 1);
      v29 = v28 - 1;
      if (v29 < 0 == v18)
        *((_DWORD *)this + 14) = v29;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v9 = TagFallback & 7;
LABEL_18:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
      return 0;
  }
}

void sub_100076A6C()
{
  operator delete();
}

uint64_t sub_100076AA4(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F638 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0)
  {
    v8 = *(_QWORD *)(v5 + 24);
    if (!v8)
      v8 = *(_QWORD *)(qword_10085F638 + 24);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  v11 = *(_QWORD **)(v5 + 8);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100076B3C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  unsigned int *v6;
  unsigned int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  _BYTE *v9;
  unsigned int *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  _BYTE *v12;
  _QWORD *v13;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v14;
  _QWORD *v15;

  v3 = a2;
  v5 = *((_DWORD *)this + 9);
  if ((v5 & 1) != 0)
  {
    v6 = (unsigned int *)*((_QWORD *)this + 2);
    if (!v6)
      v6 = *(unsigned int **)(qword_10085F638 + 16);
    *(_BYTE *)a2 = 10;
    v7 = (_DWORD)a2 + 1;
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
    if (v8 > 0x7F)
    {
      v9 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      v9 = (char *)v3 + 2;
    }
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100076114((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3);
    v5 = *((_DWORD *)this + 9);
  }
  if ((v5 & 2) != 0)
  {
    v10 = (unsigned int *)*((_QWORD *)this + 3);
    if (!v10)
      v10 = *(unsigned int **)(qword_10085F638 + 24);
    *(_BYTE *)v3 = 18;
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[15];
    if (v11 > 0x7F)
    {
      v12 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      v12 = (char *)v3 + 2;
    }
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100075820((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
  }
  v15 = (_QWORD *)*((_QWORD *)this + 1);
  v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v13 = v15;
  if (!v15 || *v13 == v13[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v3, a3);
}

uint64_t sub_100076C30(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  _QWORD *v12;

  if (!*(_BYTE *)(a1 + 36))
  {
    v3 = 0;
    goto LABEL_18;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    v4 = *(_QWORD *)(qword_10085F638 + 16);
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000761F4(v4, a2);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  else
    v7 = 1;
  v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    v8 = *(_QWORD *)(a1 + 24);
    if (!v8)
      v8 = *(_QWORD *)(qword_10085F638 + 24);
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100075A64(v8, a2);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    else
      v11 = 1;
    v3 = (v3 + v10 + v11 + 1);
  }
LABEL_18:
  v12 = *(_QWORD **)(a1 + 8);
  if (v12 && *v12 != v12[1])
    v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

uint64_t sub_100076D20(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 5617);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100076474((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100076DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100076DE0(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100076E28()
{
  return 1;
}

uint64_t sub_100076E30()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008543C8;
}

void sub_100076EA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100076EBC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD2C8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_100076EF8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100076F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 5909);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 40) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 40) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    v9 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_QWORD *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(_QWORD *)(a1 + 16) = v8;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    v6 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 32) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100076FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100077000(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD2C8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100077030(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD2C8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_100077074(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_10007707C()
{
  operator new();
}

void sub_1000770B8()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000770DC(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 40))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_100077100(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v10;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  unsigned __int8 *v16;
  uint64_t result;
  unint64_t v18;

  v6 = (unsigned int *)(a1 + 32);
  v7 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v8 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v11 = TagFallback & 7;
        if (v11 != 1)
          goto LABEL_26;
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v18;
        *(_DWORD *)(a1 + 40) |= 1u;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 < *((_QWORD *)this + 2) && *v14 == 17)
        {
          *((_QWORD *)this + 1) = v14 + 1;
          goto LABEL_18;
        }
      }
      if (v10 != 2)
        break;
      v11 = TagFallback & 7;
      if (v11 != 1)
        goto LABEL_26;
LABEL_18:
      v18 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18) & 1) == 0)
        return 0;
      *(_QWORD *)(a1 + 24) = v18;
      *(_DWORD *)(a1 + 40) |= 2u;
      v15 = (_BYTE *)*((_QWORD *)this + 1);
      v12 = *((_QWORD *)this + 2);
      if ((unint64_t)v15 < v12 && *v15 == 24)
      {
        v13 = v15 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_22:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v16 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v13;
          v16 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        if (v16 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_22;
      }
    }
    else
    {
      v11 = TagFallback & 7;
    }
LABEL_26:
    if (v11 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) != 0);
  return 0;
}

uint64_t sub_1000772F0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 40) & 4) != 0)
LABEL_4:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), a2, a4);
LABEL_5:
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_10007738C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  v4 = *((_DWORD *)this + 10);
  if ((v4 & 1) == 0)
  {
    if ((v4 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    v6 = *((_QWORD *)this + 3);
    *(_BYTE *)a2 = 17;
    *(_QWORD *)(a2 + 1) = v6;
    a2 += 9;
    if ((*((_DWORD *)this + 10) & 4) == 0)
      goto LABEL_10;
    goto LABEL_7;
  }
  v5 = *((_QWORD *)this + 2);
  *(_BYTE *)a2 = 9;
  *(_QWORD *)(a2 + 1) = v5;
  a2 += 9;
  v4 = *((_DWORD *)this + 10);
  if ((v4 & 2) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v4 & 4) == 0)
    goto LABEL_10;
LABEL_7:
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(_BYTE *)a2 = 24;
  if (v7 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
  }
  else
  {
    *(_BYTE *)(a2 + 1) = (_BYTE)v7;
    a2 += 2;
  }
LABEL_10:
  v10 = (_QWORD *)*((_QWORD *)this + 1);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v8 = v10;
  if (!v10 || *v8 == v8[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1000774BC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  _QWORD *v8;

  v3 = *(unsigned __int8 *)(a1 + 40);
  if (*(_BYTE *)(a1 + 40))
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
    if ((v3 & 4) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if (v6 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
      else
        v7 = 2;
      v5 = (v7 + v5);
    }
  }
  else
  {
    v5 = 0;
  }
  v8 = *(_QWORD **)(a1 + 8);
  if (v8 && *v8 != v8[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 36) = v5;
  return v5;
}

uint64_t sub_10007754C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 5897);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100076F0C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1000775F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007760C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100077654()
{
  return 1;
}

uint64_t sub_10007765C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008543D8;
}

void sub_1000776D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000776E8(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD378;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100077724(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100077738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v12[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 6225);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 52);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 52) & 1) != 0)
  {
    v8 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_QWORD *)(a1 + 16) = v8;
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
LABEL_12:
      v10 = *(_QWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 52) |= 4u;
      *(_QWORD *)(a1 + 32) = v10;
      if ((*(_DWORD *)(a2 + 52) & 8) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_8;
    }
  }
  else if ((*(_BYTE *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(_QWORD *)(a1 + 24) = v9;
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 4) != 0)
    goto LABEL_12;
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    v6 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(_QWORD *)(a1 + 40) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100077834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007784C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD378;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10007787C(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD378;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_1000778C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1000778C8()
{
  operator new();
}

void sub_100077904()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100077928(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 52))
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10007794C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t result;
  unint64_t v14;

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_30;
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 52) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 17)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_30;
LABEL_15:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 24) = v14;
        *(_DWORD *)(a1 + 52) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 25)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
LABEL_20:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 32) = v14;
        *(_DWORD *)(a1 + 52) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 33)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_25:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 40) = v14;
        *(_DWORD *)(a1 + 52) |= 8u;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_20;
        goto LABEL_30;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_25;
        goto LABEL_30;
      default:
        v9 = TagFallback & 7;
LABEL_30:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
    return result;
  }
}

uint64_t sub_100077B88(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v4 = this;
  v5 = *(_DWORD *)(this + 52);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  if ((*(_DWORD *)(v4 + 52) & 8) != 0)
LABEL_5:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
LABEL_6:
  v8 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_100077C40(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v9;
    a2 += 9;
    v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
LABEL_12:
      v11 = *(_QWORD *)(a1 + 32);
      *(_BYTE *)a2 = 25;
      *(_QWORD *)(a2 + 1) = v11;
      a2 += 9;
      if ((*(_DWORD *)(a1 + 52) & 8) == 0)
        goto LABEL_6;
      goto LABEL_5;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a2 = 17;
  *(_QWORD *)(a2 + 1) = v10;
  a2 += 9;
  v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 4) != 0)
    goto LABEL_12;
LABEL_4:
  if ((v3 & 8) != 0)
  {
LABEL_5:
    v4 = *(_QWORD *)(a1 + 40);
    *(_BYTE *)a2 = 33;
    *(_QWORD *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_6:
  v7 = *(_QWORD **)(a1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v6 = v7;
  if (!v7 || *v6 == v6[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100077DC0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;

  v3 = *(unsigned __int8 *)(a1 + 52);
  if (*(_BYTE *)(a1 + 52))
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
      v4 += 9;
    if ((v3 & 4) != 0)
      v4 += 9;
    if ((v3 & 8) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  v7 = *(_QWORD **)(a1 + 8);
  if (v7 && *v7 != v7[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
       + v5;
  *(_DWORD *)(a1 + 48) = v5;
  return v5;
}

uint64_t sub_100077E44(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 6213);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100077738((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100077EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100077F04(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100077F4C()
{
  return 1;
}

uint64_t sub_100077F54()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008543E8;
}

void sub_100077FCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100077FE0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD428;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 92) = 0;
  *(_DWORD *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 73) = 0u;
  return a1;
}

void sub_100078030(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100078044(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const std::string *v19;
  std::string *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE v24[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v24, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 6798);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v23, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  v5 = *(_DWORD *)(a2 + 96);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) != 0)
    {
      v15 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 96) |= 1u;
      *(_QWORD *)(a1 + 16) = v15;
      v5 = *(_DWORD *)(a2 + 96);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_35;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    v16 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 96) |= 2u;
    *(_QWORD *)(a1 + 24) = v16;
    v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_40;
    }
LABEL_35:
    *(_DWORD *)(a1 + 96) |= 4u;
    v17 = *(_QWORD *)(a1 + 32);
    if (!v17)
      operator new();
    v18 = *(_QWORD *)(a2 + 32);
    if (!v18)
      v18 = *(_QWORD *)(qword_10085F650 + 32);
    sub_100076474(v17, v18);
    v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_43;
    }
LABEL_40:
    v19 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 96) |= 8u;
    v20 = *(std::string **)(a1 + 40);
    if (v20 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v20, v19);
    v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
      {
LABEL_11:
        if ((v5 & 0x40) != 0)
        {
          *(_DWORD *)(a1 + 96) |= 0x40u;
          v7 = *(_QWORD *)(a1 + 64);
          if (!v7)
            operator new();
          v8 = *(_QWORD *)(a2 + 64);
          if (!v8)
            v8 = *(_QWORD *)(qword_10085F650 + 64);
          sub_100075D14(v7, v8);
          v5 = *(_DWORD *)(a2 + 96);
        }
        if ((v5 & 0x80) != 0)
        {
          *(_DWORD *)(a1 + 96) |= 0x80u;
          v9 = *(_QWORD *)(a1 + 72);
          if (!v9)
            operator new();
          v10 = *(_QWORD *)(a2 + 72);
          if (!v10)
            v10 = *(_QWORD *)(qword_10085F650 + 72);
          sub_1000751AC(v9, v10);
          v5 = *(_DWORD *)(a2 + 96);
        }
        goto LABEL_23;
      }
LABEL_10:
      v6 = *(_QWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 96) |= 0x20u;
      *(_QWORD *)(a1 + 56) = v6;
      v5 = *(_DWORD *)(a2 + 96);
      goto LABEL_11;
    }
LABEL_43:
    *(_DWORD *)(a1 + 96) |= 0x10u;
    v21 = *(_QWORD *)(a1 + 48);
    if (!v21)
      operator new();
    v22 = *(_QWORD *)(a2 + 48);
    if (!v22)
      v22 = *(_QWORD *)(qword_10085F650 + 48);
    sub_100076F0C(v21, v22);
    v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 0x20) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
LABEL_23:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x100u;
      v11 = *(_QWORD *)(a1 + 80);
      if (!v11)
        operator new();
      v12 = *(_QWORD *)(a2 + 80);
      if (!v12)
        v12 = *(_QWORD *)(qword_10085F650 + 80);
      sub_100077738(v11, v12);
      v5 = *(_DWORD *)(a2 + 96);
    }
    if ((v5 & 0x200) != 0)
    {
      v13 = *(_BYTE *)(a2 + 88);
      *(_DWORD *)(a1 + 96) |= 0x200u;
      *(_BYTE *)(a1 + 88) = v13;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100078380()
{
  operator delete();
}

void sub_100078408(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_1007FD428;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100078444(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

_QWORD *sub_100078444(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = result;
  v2 = result[5];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    operator delete();
  }
  if ((_QWORD *)qword_10085F650 != result)
  {
    v4 = result[4];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = v1[6];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = v1[8];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = v1[9];
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    result = (_QWORD *)v1[10];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_100078520(_QWORD *a1)
{
  sub_100078408(a1);
  operator delete();
}

uint64_t sub_100078544(uint64_t result, int a2)
{
  *(_DWORD *)(result + 92) = a2;
  return result;
}

void sub_10007854C()
{
  operator new();
}

void sub_100078588()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000785AC(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v9;
  uint64_t v10;

  v1 = this;
  LOBYTE(v2) = *((_BYTE *)this + 96);
  if ((_BYTE)v2)
  {
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    if ((v2 & 4) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 4);
      if (this)
      {
        this = sub_100076724(this);
        v2 = *((_DWORD *)v1 + 24);
      }
    }
    if ((v2 & 8) != 0)
    {
      v3 = *((_QWORD *)v1 + 5);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 96) & 0x10) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 6);
      if (this)
      {
        if (*((_BYTE *)this + 40))
        {
          *((_QWORD *)this + 2) = 0;
          *((_QWORD *)this + 3) = 0;
          *((_DWORD *)this + 8) = 0;
        }
        v4 = *((_QWORD *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 8) = 0;
        if (v4)
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
      }
    }
    *((_QWORD *)v1 + 7) = 0;
    v5 = *((_DWORD *)v1 + 24);
    if ((v5 & 0x40) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 8);
      if (this)
      {
        this = sub_100075EC8((uint64_t)this);
        v5 = *((_DWORD *)v1 + 24);
      }
    }
    if ((v5 & 0x80) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 9);
      if (this)
      {
        if (*((_BYTE *)this + 64))
        {
          *(_OWORD *)((char *)this + 44) = 0u;
          *((_OWORD *)this + 1) = 0u;
          *((_OWORD *)this + 2) = 0u;
        }
        v6 = *((_QWORD *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 14) = 0;
        if (v6)
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
      }
    }
  }
  v7 = *((_DWORD *)v1 + 24);
  if ((v7 & 0xFF00) != 0)
  {
    if ((v7 & 0x100) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 10);
      if (this)
      {
        if (*((_BYTE *)this + 52))
        {
          *((_OWORD *)this + 1) = 0u;
          *((_OWORD *)this + 2) = 0u;
        }
        v8 = *((_QWORD *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 11) = 0;
        if (v8)
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
      }
    }
    *((_BYTE *)v1 + 88) = 0;
  }
  v10 = *((_QWORD *)v1 + 1);
  v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v9 + 22) = 0;
  if (v10)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
  return this;
}

uint64_t sub_1000786F4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  int v11;
  _BYTE *v12;
  uint64_t v13;
  char *v14;
  int v15;
  unint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v22;
  int v23;
  BOOL v24;
  int v25;
  _BYTE *v26;
  void *v27;
  uint64_t result;
  _BYTE *v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v36;
  int v37;
  int v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v47;
  int v48;
  int v49;
  _BYTE *v50;
  uint64_t v51;
  char *v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v57;
  int v58;
  int v59;
  _BYTE *v60;
  uint64_t v61;
  char *v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v67;
  int v68;
  int v69;
  _BYTE *v70;
  unsigned int v71;
  unsigned __int8 *v72;
  unsigned int v73[2];

  v6 = a1 + 8;
  while (1)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 < *((_QWORD *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_39;
        *(_QWORD *)v73 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v73) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v73;
        *(_DWORD *)(a1 + 96) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 17)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_39;
LABEL_15:
        *(_QWORD *)v73 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v73) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v73;
        v11 = *(_DWORD *)(a1 + 96) | 2;
        *(_DWORD *)(a1 + 96) = v11;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 26)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_21:
        *(_DWORD *)(a1 + 96) = v11 | 4;
        v13 = *(_QWORD *)(a1 + 32);
        if (!v13)
          operator new();
        v73[0] = 0;
        v14 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v73))return 0;
        }
        else
        {
          v73[0] = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        v18 = *((_DWORD *)this + 14);
        v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v73[0]);
        if (!sub_1000767A8(v13, this, v21, v22) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        v23 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v23, 1);
        v25 = v23 - 1;
        if (v25 < 0 == v24)
          *((_DWORD *)this + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v26 >= *((_QWORD *)this + 2) || *v26 != 34)
          continue;
        *((_QWORD *)this + 1) = v26 + 1;
LABEL_52:
        *(_DWORD *)(a1 + 96) |= 8u;
        v27 = *(void **)(a1 + 40);
        if (v27 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v27);
        if (!(_DWORD)result)
          return result;
        v29 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v29 >= *((_QWORD *)this + 2) || *v29 != 42)
          continue;
        *((_QWORD *)this + 1) = v29 + 1;
LABEL_58:
        *(_DWORD *)(a1 + 96) |= 0x10u;
        v30 = *(_QWORD *)(a1 + 48);
        if (!v30)
          operator new();
        v73[0] = 0;
        v31 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v31 >= *((_QWORD *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v73))return 0;
        }
        else
        {
          v73[0] = *v31;
          *((_QWORD *)this + 1) = v31 + 1;
        }
        v32 = *((_DWORD *)this + 14);
        v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33)
          return 0;
        v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v73[0]);
        if (!sub_100077100(v30, this, v35, v36) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
        v37 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v37, 1);
        v38 = v37 - 1;
        if (v38 < 0 == v24)
          *((_DWORD *)this + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v39 >= *((_QWORD *)this + 2) || *v39 != 49)
          continue;
        *((_QWORD *)this + 1) = v39 + 1;
LABEL_72:
        *(_QWORD *)v73 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v73) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 56) = *(_QWORD *)v73;
        v15 = *(_DWORD *)(a1 + 96) | 0x20;
        *(_DWORD *)(a1 + 96) = v15;
        v40 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v40 >= *((_QWORD *)this + 2) || *v40 != 58)
          continue;
        *((_QWORD *)this + 1) = v40 + 1;
LABEL_76:
        *(_DWORD *)(a1 + 96) = v15 | 0x40;
        v41 = *(_QWORD *)(a1 + 64);
        if (!v41)
          operator new();
        v73[0] = 0;
        v42 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v42 >= *((_QWORD *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v73))return 0;
        }
        else
        {
          v73[0] = *v42;
          *((_QWORD *)this + 1) = v42 + 1;
        }
        v43 = *((_DWORD *)this + 14);
        v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44)
          return 0;
        v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v73[0]);
        if (!sub_100075EEC(v41, this, v46, v47) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
        v48 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v48, 1);
        v49 = v48 - 1;
        if (v49 < 0 == v24)
          *((_DWORD *)this + 14) = v49;
        v50 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v50 >= *((_QWORD *)this + 2) || *v50 != 66)
          continue;
        *((_QWORD *)this + 1) = v50 + 1;
LABEL_90:
        *(_DWORD *)(a1 + 96) |= 0x80u;
        v51 = *(_QWORD *)(a1 + 72);
        if (!v51)
          operator new();
        v73[0] = 0;
        v52 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v52 >= *((_QWORD *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v73))return 0;
        }
        else
        {
          v73[0] = *v52;
          *((_QWORD *)this + 1) = v52 + 1;
        }
        v53 = *((_DWORD *)this + 14);
        v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54)
          return 0;
        v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v73[0]);
        if (!sub_10007540C(v51, this, v56, v57) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        v58 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v58, 1);
        v59 = v58 - 1;
        if (v59 < 0 == v24)
          *((_DWORD *)this + 14) = v59;
        v60 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v60 >= *((_QWORD *)this + 2) || *v60 != 74)
          continue;
        *((_QWORD *)this + 1) = v60 + 1;
LABEL_104:
        *(_DWORD *)(a1 + 96) |= 0x100u;
        v61 = *(_QWORD *)(a1 + 80);
        if (!v61)
          operator new();
        v73[0] = 0;
        v62 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v62 >= *((_QWORD *)this + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v73))return 0;
        }
        else
        {
          v73[0] = *v62;
          *((_QWORD *)this + 1) = v62 + 1;
        }
        v63 = *((_DWORD *)this + 14);
        v64 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v63 + 1;
        if (v63 >= v64)
          return 0;
        v65 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v73[0]);
        if (!sub_10007794C(v61, this, v66, v67) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v65);
        v68 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v68, 1);
        v69 = v68 - 1;
        if (v69 < 0 == v24)
          *((_DWORD *)this + 14) = v69;
        v70 = (_BYTE *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        if ((unint64_t)v70 < v16 && *v70 == 80)
        {
          v17 = v70 + 1;
          *((_QWORD *)this + 1) = v17;
LABEL_118:
          v73[0] = 0;
          if ((unint64_t)v17 >= v16 || *v17 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v73);
            if (!(_DWORD)result)
              return result;
            v71 = v73[0];
            v72 = (unsigned __int8 *)*((_QWORD *)this + 1);
            v16 = *((_QWORD *)this + 2);
          }
          else
          {
            v71 = *v17;
            v72 = (unsigned __int8 *)(v17 + 1);
            *((_QWORD *)this + 1) = v72;
          }
          *(_BYTE *)(a1 + 88) = v71 != 0;
          *(_DWORD *)(a1 + 96) |= 0x200u;
          if (v72 == (unsigned __int8 *)v16
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_39;
        v11 = *(_DWORD *)(a1 + 96);
        goto LABEL_21;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_52;
        goto LABEL_39;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_58;
        goto LABEL_39;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_72;
        goto LABEL_39;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_39;
        v15 = *(_DWORD *)(a1 + 96);
        goto LABEL_76;
      case 8u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_90;
        goto LABEL_39;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_104;
        goto LABEL_39;
      case 0xAu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_39;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_118;
      default:
        v9 = TagFallback & 7;
LABEL_39:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
  }
}

void sub_100078ED8()
{
  operator delete();
}

uint64_t sub_100078F4C(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = this;
  v6 = *(_DWORD *)(this + 96);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_18:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
    v10 = *(_QWORD *)(qword_10085F650 + 32);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(4, *(_QWORD *)(v5 + 40), a2);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_22:
  v11 = *(_QWORD *)(v5 + 48);
  if (!v11)
    v11 = *(_QWORD *)(qword_10085F650 + 48);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_29;
  }
LABEL_26:
  v12 = *(_QWORD *)(v5 + 64);
  if (!v12)
    v12 = *(_QWORD *)(qword_10085F650 + 64);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_32;
  }
LABEL_29:
  v13 = *(_QWORD *)(v5 + 72);
  if (!v13)
    v13 = *(_QWORD *)(qword_10085F650 + 72);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
LABEL_32:
  v14 = *(_QWORD *)(v5 + 80);
  if (!v14)
    v14 = *(_QWORD *)(qword_10085F650 + 80);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v14, a2, a4);
  if ((*(_DWORD *)(v5 + 96) & 0x200) != 0)
LABEL_11:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 88), (BOOL)a2, a4);
LABEL_12:
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000790FC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  int v6;
  char v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  const void *v22;
  unsigned int *v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int *v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  _BYTE *v29;
  unsigned int *v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  _BYTE *v32;
  uint64_t v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  uint64_t v35;

  v4 = a2;
  v6 = *((_DWORD *)this + 24);
  if ((v6 & 1) != 0)
  {
    v12 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)((char *)a2 + 1) = v12;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    v6 = *((_DWORD *)this + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v13 = *((_QWORD *)this + 3);
  *(_BYTE *)v4 = 17;
  *(_QWORD *)((char *)v4 + 1) = v13;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  v6 = *((_DWORD *)this + 24);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_24;
  }
LABEL_18:
  v14 = (unsigned int *)*((_QWORD *)this + 4);
  if (!v14)
    v14 = *(unsigned int **)(qword_10085F650 + 32);
  *(_BYTE *)v4 = 26;
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[8];
  if (v15 > 0x7F)
  {
    v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v15;
    v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100076B3C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3);
  v6 = *((_DWORD *)this + 24);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_37;
  }
LABEL_24:
  v17 = *((_QWORD *)this + 5);
  *(_BYTE *)v4 = 34;
  if (*(char *)(v17 + 23) < 0)
    v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v17 + 8);
  else
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v17 + 23);
  if (v18 > 0x7F)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v18;
    v19 = (_DWORD)v4 + 2;
  }
  v20 = *(char *)(v17 + 23);
  if (v20 >= 0)
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17;
  else
    v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v17;
  if (v20 >= 0)
    v22 = (const void *)*(unsigned __int8 *)(v17 + 23);
  else
    v22 = (const void *)*(unsigned int *)(v17 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v21, v22, v19, a4);
  v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_43;
  }
LABEL_37:
  v23 = (unsigned int *)*((_QWORD *)this + 6);
  if (!v23)
    v23 = *(unsigned int **)(qword_10085F650 + 48);
  *(_BYTE *)v4 = 42;
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[9];
  if (v24 > 0x7F)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v24;
    v25 = (uint64_t)v4 + 2;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10007738C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, v25, a3);
  v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_44;
  }
LABEL_43:
  v26 = *((_QWORD *)this + 7);
  *(_BYTE *)v4 = 49;
  *(_QWORD *)((char *)v4 + 1) = v26;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_50;
  }
LABEL_44:
  v27 = (unsigned int *)*((_QWORD *)this + 8);
  if (!v27)
    v27 = *(unsigned int **)(qword_10085F650 + 64);
  *(_BYTE *)v4 = 58;
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27[7];
  if (v28 > 0x7F)
  {
    v29 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v28;
    v29 = (char *)v4 + 2;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100076114((wireless_diagnostics::google::protobuf::internal::WireFormat *)v27, v29, a3);
  v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
LABEL_56:
    v33 = *((_QWORD *)this + 10);
    if (!v33)
      v33 = *(_QWORD *)(qword_10085F650 + 80);
    *(_BYTE *)v4 = 74;
    v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v33 + 48);
    if (v34 > 0x7F)
    {
      v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v34;
      v35 = (uint64_t)v4 + 2;
    }
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100077C40(v33, v35, a3);
    if ((*((_DWORD *)this + 24) & 0x200) != 0)
      goto LABEL_11;
    goto LABEL_12;
  }
LABEL_50:
  v30 = (unsigned int *)*((_QWORD *)this + 9);
  if (!v30)
    v30 = *(unsigned int **)(qword_10085F650 + 72);
  *(_BYTE *)v4 = 66;
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30[15];
  if (v31 > 0x7F)
  {
    v32 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v31;
    v32 = (char *)v4 + 2;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100075820((wireless_diagnostics::google::protobuf::internal::WireFormat *)v30, v32, a3);
  v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x100) != 0)
    goto LABEL_56;
LABEL_10:
  if ((v6 & 0x200) != 0)
  {
LABEL_11:
    v7 = *((_BYTE *)this + 88);
    *(_BYTE *)v4 = 80;
    *((_BYTE *)v4 + 1) = v7;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
LABEL_12:
  v10 = (_QWORD *)*((_QWORD *)this + 1);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v8 = v10;
  if (!v10 || *v8 == v8[1])
    return v4;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, v4, a3);
}

uint64_t sub_100079498(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  uint64_t v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  int v31;
  _QWORD *v32;

  v3 = *(_DWORD *)(a1 + 96);
  if (!(_BYTE)v3)
  {
    v5 = 0;
    goto LABEL_48;
  }
  if ((v3 & 2) != 0)
    v4 = ((v3 << 31 >> 31) & 9) + 9;
  else
    v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_7;
LABEL_16:
    v10 = *(_QWORD *)(a1 + 40);
    v11 = *(unsigned __int8 *)(v10 + 23);
    v12 = v11;
    v13 = *(_QWORD *)(v10 + 8);
    if ((v11 & 0x80u) == 0)
      v14 = *(unsigned __int8 *)(v10 + 23);
    else
      v14 = v13;
    if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14, a2);
      v11 = *(unsigned __int8 *)(v10 + 23);
      v13 = *(_QWORD *)(v10 + 8);
      v3 = *(_DWORD *)(a1 + 96);
      v12 = *(_BYTE *)(v10 + 23);
    }
    else
    {
      v15 = 1;
    }
    if (v12 < 0)
      v11 = v13;
    v4 += v15 + v11 + 1;
    if ((v3 & 0x10) == 0)
      goto LABEL_31;
    goto LABEL_25;
  }
  v6 = *(_QWORD *)(a1 + 32);
  if (!v6)
    v6 = *(_QWORD *)(qword_10085F650 + 32);
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100076C30(v6, a2);
  v8 = (int)v7;
  if (v7 >= 0x80)
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  else
    v9 = 1;
  v4 += v8 + v9 + 1;
  v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 8) != 0)
    goto LABEL_16;
LABEL_7:
  if ((v3 & 0x10) != 0)
  {
LABEL_25:
    v16 = *(_QWORD *)(a1 + 48);
    if (!v16)
      v16 = *(_QWORD *)(qword_10085F650 + 48);
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000774BC(v16, a2);
    v18 = (int)v17;
    if (v17 >= 0x80)
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    else
      v19 = 1;
    v4 += v18 + v19 + 1;
    v3 = *(_DWORD *)(a1 + 96);
  }
LABEL_31:
  if ((v3 & 0x20) != 0)
    v5 = v4 + 9;
  else
    v5 = v4;
  if ((v3 & 0x40) != 0)
  {
    v20 = *(_QWORD *)(a1 + 64);
    if (!v20)
      v20 = *(_QWORD *)(qword_10085F650 + 64);
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000761F4(v20, a2);
    v22 = (int)v21;
    if (v21 >= 0x80)
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
    else
      v23 = 1;
    v5 = (v5 + v22 + v23 + 1);
    v3 = *(_DWORD *)(a1 + 96);
  }
  if ((v3 & 0x80) != 0)
  {
    v24 = *(_QWORD *)(a1 + 72);
    if (!v24)
      v24 = *(_QWORD *)(qword_10085F650 + 72);
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100075A64(v24, a2);
    v26 = (int)v25;
    if (v25 >= 0x80)
      v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
    else
      v27 = 1;
    v5 = (v5 + v26 + v27 + 1);
    v3 = *(_DWORD *)(a1 + 96);
  }
LABEL_48:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      v28 = *(_QWORD *)(a1 + 80);
      if (!v28)
        v28 = *(_QWORD *)(qword_10085F650 + 80);
      v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100077DC0(v28, a2);
      v30 = (int)v29;
      if (v29 >= 0x80)
        v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2);
      else
        v31 = 1;
      LODWORD(v5) = v5 + v30 + v31 + 1;
      v3 = *(_DWORD *)(a1 + 96);
    }
    if ((v3 & 0x200) != 0)
      v5 = (v5 + 2);
    else
      v5 = v5;
  }
  v32 = *(_QWORD **)(a1 + 8);
  if (v32 && *v32 != v32[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 92) = v5;
  return v5;
}

uint64_t sub_1000796FC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 6786);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100078044((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1000797A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000797BC(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100079804()
{
  return 1;
}

uint64_t sub_10007980C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008543F8;
}

void sub_100079884(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100079898(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD4D8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_QWORD *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  return a1;
}

void sub_1000798E8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000798FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const std::string *v13;
  std::string *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _BYTE v21[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v21, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 7430);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v20, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  v5 = *(_DWORD *)(a2 + 116);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 116) |= 1u;
      *(_QWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 116);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_15;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 116) |= 2u;
    *(_QWORD *)(a1 + 24) = v7;
    v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    v8 = *(_QWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 116) |= 4u;
    *(_QWORD *)(a1 + 32) = v8;
    v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_17;
    }
LABEL_16:
    v9 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 116) |= 8u;
    *(_QWORD *)(a1 + 40) = v9;
    v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_18;
    }
LABEL_17:
    v10 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 116) |= 0x10u;
    *(_QWORD *)(a1 + 48) = v10;
    v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_19;
    }
LABEL_18:
    v11 = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 116) |= 0x20u;
    *(_QWORD *)(a1 + 56) = v11;
    v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_23;
      goto LABEL_20;
    }
LABEL_19:
    v12 = *(_QWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 116) |= 0x40u;
    *(_QWORD *)(a1 + 64) = v12;
    v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 0x80) == 0)
      goto LABEL_23;
LABEL_20:
    v13 = *(const std::string **)(a2 + 72);
    *(_DWORD *)(a1 + 116) |= 0x80u;
    v14 = *(std::string **)(a1 + 72);
    if (v14 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v14, v13);
    v5 = *(_DWORD *)(a2 + 116);
  }
LABEL_23:
  if ((v5 & 0xFF00) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v5 & 0x100) != 0)
  {
    v17 = *(_QWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 116) |= 0x100u;
    *(_QWORD *)(a1 + 80) = v17;
    v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 0x200) == 0)
    {
LABEL_26:
      if ((v5 & 0x400) == 0)
        goto LABEL_27;
LABEL_32:
      v19 = *(_QWORD *)(a2 + 96);
      *(_DWORD *)(a1 + 116) |= 0x400u;
      *(_QWORD *)(a1 + 96) = v19;
      if ((*(_DWORD *)(a2 + 116) & 0x800) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      goto LABEL_28;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_26;
  }
  v18 = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 116) |= 0x200u;
  *(_QWORD *)(a1 + 88) = v18;
  v5 = *(_DWORD *)(a2 + 116);
  if ((v5 & 0x400) != 0)
    goto LABEL_32;
LABEL_27:
  if ((v5 & 0x800) != 0)
  {
LABEL_28:
    v15 = *(_QWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 116) |= 0x800u;
    *(_QWORD *)(a1 + 104) = v15;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100079B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100079B60(wireless_diagnostics::google::protobuf::Message *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *(_QWORD *)a1 = off_1007FD4D8;
  v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100079B9C((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_100079B9C(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 72);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    operator delete();
  }
  return result;
}

void sub_100079C00(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_100079B60(a1);
  operator delete();
}

uint64_t sub_100079C24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 112) = a2;
  return result;
}

void sub_100079C2C()
{
  operator new();
}

void sub_100079C68()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100079C8C(uint64_t a1)
{
  char v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v4;

  v1 = *(_BYTE *)(a1 + 116);
  if (v1)
  {
    *(_QWORD *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    if (v1 < 0)
    {
      v2 = *(_QWORD *)(a1 + 72);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
  }
  if (*(_BYTE *)(a1 + 117))
  {
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
  }
  v4 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 27) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_100079D00(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  int v16;
  _BYTE *v17;
  void *v18;
  uint64_t result;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  unint64_t v24;

  v6 = a1 + 8;
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_73;
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v24;
        *(_DWORD *)(a1 + 116) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 17)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_73;
LABEL_15:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 24) = v24;
        *(_DWORD *)(a1 + 116) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 25)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
LABEL_20:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 32) = v24;
        *(_DWORD *)(a1 + 116) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 33)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_25:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 40) = v24;
        *(_DWORD *)(a1 + 116) |= 8u;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 != 41)
          continue;
        *((_QWORD *)this + 1) = v13 + 1;
LABEL_30:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 48) = v24;
        *(_DWORD *)(a1 + 116) |= 0x10u;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 != 49)
          continue;
        *((_QWORD *)this + 1) = v14 + 1;
LABEL_35:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 56) = v24;
        *(_DWORD *)(a1 + 116) |= 0x20u;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v15 >= *((_QWORD *)this + 2) || *v15 != 57)
          continue;
        *((_QWORD *)this + 1) = v15 + 1;
LABEL_40:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 64) = v24;
        v16 = *(_DWORD *)(a1 + 116) | 0x40;
        *(_DWORD *)(a1 + 116) = v16;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 != 66)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
LABEL_46:
        *(_DWORD *)(a1 + 116) = v16 | 0x80;
        v18 = *(void **)(a1 + 72);
        if (v18 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v18);
        if (!(_DWORD)result)
          return result;
        v20 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v20 >= *((_QWORD *)this + 2) || *v20 != 73)
          continue;
        *((_QWORD *)this + 1) = v20 + 1;
LABEL_53:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 80) = v24;
        *(_DWORD *)(a1 + 116) |= 0x100u;
        v21 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v21 >= *((_QWORD *)this + 2) || *v21 != 81)
          continue;
        *((_QWORD *)this + 1) = v21 + 1;
LABEL_58:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 88) = v24;
        *(_DWORD *)(a1 + 116) |= 0x200u;
        v22 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v22 >= *((_QWORD *)this + 2) || *v22 != 89)
          continue;
        *((_QWORD *)this + 1) = v22 + 1;
LABEL_63:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 96) = v24;
        *(_DWORD *)(a1 + 116) |= 0x400u;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v23 >= *((_QWORD *)this + 2) || *v23 != 97)
          continue;
        *((_QWORD *)this + 1) = v23 + 1;
LABEL_68:
        v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v24) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 104) = v24;
        *(_DWORD *)(a1 + 116) |= 0x800u;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_20;
        goto LABEL_73;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_25;
        goto LABEL_73;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_30;
        goto LABEL_73;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_35;
        goto LABEL_73;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_40;
        goto LABEL_73;
      case 8u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_73;
        v16 = *(_DWORD *)(a1 + 116);
        goto LABEL_46;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_53;
        goto LABEL_73;
      case 0xAu:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_58;
        goto LABEL_73;
      case 0xBu:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_63;
        goto LABEL_73;
      case 0xCu:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_68;
        goto LABEL_73;
      default:
        v9 = TagFallback & 7;
LABEL_73:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
          return 0;
        continue;
    }
    return result;
  }
}

uint64_t sub_10007A230(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v4 = this;
  v5 = *(_DWORD *)(this + 116);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    v5 = *(_DWORD *)(v4 + 116);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v4 + 48), a3);
  v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v4 + 56), a3);
  v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v4 + 64), a3);
  v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(8, *(_QWORD *)(v4 + 72), a2);
  v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v4 + 80), a3);
  v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v4 + 88), a3);
  v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v4 + 96), a3);
  if ((*(_DWORD *)(v4 + 116) & 0x800) != 0)
LABEL_13:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v4 + 104), a3);
LABEL_14:
  v8 = *(_QWORD **)(v4 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10007A3C8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *((_DWORD *)this + 29);
  if ((v5 & 1) != 0)
  {
    v11 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 9;
    *(_QWORD *)(a2 + 1) = v11;
    a2 += 9;
    v5 = *((_DWORD *)this + 29);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  v12 = *((_QWORD *)this + 3);
  *(_BYTE *)a2 = 17;
  *(_QWORD *)(a2 + 1) = v12;
  a2 += 9;
  v5 = *((_DWORD *)this + 29);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_20:
  v13 = *((_QWORD *)this + 4);
  *(_BYTE *)a2 = 25;
  *(_QWORD *)(a2 + 1) = v13;
  a2 += 9;
  v5 = *((_DWORD *)this + 29);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_21:
  v14 = *((_QWORD *)this + 5);
  *(_BYTE *)a2 = 33;
  *(_QWORD *)(a2 + 1) = v14;
  a2 += 9;
  v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  v15 = *((_QWORD *)this + 6);
  *(_BYTE *)a2 = 41;
  *(_QWORD *)(a2 + 1) = v15;
  a2 += 9;
  v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  v16 = *((_QWORD *)this + 7);
  *(_BYTE *)a2 = 49;
  *(_QWORD *)(a2 + 1) = v16;
  a2 += 9;
  v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  v17 = *((_QWORD *)this + 8);
  *(_BYTE *)a2 = 57;
  *(_QWORD *)(a2 + 1) = v17;
  a2 += 9;
  v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_38;
  }
LABEL_25:
  v18 = *((_QWORD *)this + 9);
  *(_BYTE *)a2 = 66;
  if (*(char *)(v18 + 23) < 0)
    v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v18 + 8);
  else
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
  if (v19 > 0x7F)
  {
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)a2 + 1, a3);
  }
  else
  {
    *(_BYTE *)(a2 + 1) = (_BYTE)v19;
    v20 = a2 + 2;
  }
  v21 = *(char *)(v18 + 23);
  if (v21 >= 0)
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
  else
    v22 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
  if (v21 >= 0)
    v23 = (const void *)*(unsigned __int8 *)(v18 + 23);
  else
    v23 = (const void *)*(unsigned int *)(v18 + 8);
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v22, v23, v20, a4);
  v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_39;
  }
LABEL_38:
  v24 = *((_QWORD *)this + 10);
  *(_BYTE *)a2 = 73;
  *(_QWORD *)(a2 + 1) = v24;
  a2 += 9;
  v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0)
      goto LABEL_12;
LABEL_40:
    v26 = *((_QWORD *)this + 12);
    *(_BYTE *)a2 = 89;
    *(_QWORD *)(a2 + 1) = v26;
    a2 += 9;
    if ((*((_DWORD *)this + 29) & 0x800) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_39:
  v25 = *((_QWORD *)this + 11);
  *(_BYTE *)a2 = 81;
  *(_QWORD *)(a2 + 1) = v25;
  a2 += 9;
  v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x400) != 0)
    goto LABEL_40;
LABEL_12:
  if ((v5 & 0x800) != 0)
  {
LABEL_13:
    v6 = *((_QWORD *)this + 13);
    *(_BYTE *)a2 = 97;
    *(_QWORD *)(a2 + 1) = v6;
    a2 += 9;
  }
LABEL_14:
  v9 = (_QWORD *)*((_QWORD *)this + 1);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v7 = v9;
  if (!v9 || *v7 == v7[1])
    return a2;
  else
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10007A848(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unsigned int v12;
  _QWORD *v13;

  v3 = *(_DWORD *)(a1 + 116);
  if ((_BYTE)v3)
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
      v4 += 9;
    if ((v3 & 4) != 0)
      v4 += 9;
    if ((v3 & 8) != 0)
      v4 += 9;
    if ((v3 & 0x10) != 0)
      v4 += 9;
    if ((v3 & 0x20) != 0)
      v4 += 9;
    if ((v3 & 0x40) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
    if ((v3 & 0x80) != 0)
    {
      v6 = *(_QWORD *)(a1 + 72);
      v7 = *(unsigned __int8 *)(v6 + 23);
      v8 = v7;
      v9 = *(_QWORD *)(v6 + 8);
      if ((v7 & 0x80u) == 0)
        v10 = *(unsigned __int8 *)(v6 + 23);
      else
        v10 = v9;
      if (v10 >= 0x80)
      {
        v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        v7 = *(unsigned __int8 *)(v6 + 23);
        v9 = *(_QWORD *)(v6 + 8);
        v3 = *(_DWORD *)(a1 + 116);
        v8 = *(_BYTE *)(v6 + 23);
      }
      else
      {
        v11 = 1;
      }
      if (v8 < 0)
        v7 = v9;
      v5 = (v5 + v11 + v7 + 1);
    }
  }
  else
  {
    v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    v12 = v5 + 9;
    if ((v3 & 0x100) == 0)
      v12 = v5;
    if ((v3 & 0x200) != 0)
      v12 += 9;
    if ((v3 & 0x400) != 0)
      v12 += 9;
    if ((v3 & 0x800) != 0)
      v5 = v12 + 9;
    else
      v5 = v12;
  }
  v13 = *(_QWORD **)(a1 + 8);
  if (v13 && *v13 != v13[1])
    v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  *(_DWORD *)(a1 + 112) = v5;
  return v5;
}

uint64_t sub_10007A98C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 7418);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_1000798FC((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10007AA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007AA4C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10007AA94()
{
  return 1;
}

uint64_t sub_10007AA9C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854408;
}

void sub_10007AB14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_10007AB28(_QWORD *a1)
{
  *a1 = off_1007FD588;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[4] = 0;
  return a1;
}

void sub_10007AB70(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007AB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  const std::string *v8;
  std::string *v9;
  char v11;
  _BYTE v12[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 7764);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
LABEL_10:
        v8 = *(const std::string **)(a2 + 24);
        *(_DWORD *)(a1 + 36) |= 4u;
        v9 = *(std::string **)(a1 + 24);
        if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        std::string::operator=(v9, v8);
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 20) = v7;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10007ACA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007ACBC(wireless_diagnostics::google::protobuf::Message *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *(_QWORD *)a1 = off_1007FD588;
  v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_10007ACF8((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_10007ACF8(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    operator delete();
  }
  return result;
}

void sub_10007AD5C(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10007ACBC(a1);
  operator delete();
}

uint64_t sub_10007AD80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10007AD88()
{
  operator new();
}

void sub_10007ADC4()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007ADE8(uint64_t a1)
{
  char v1;
  uint64_t v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v4;

  v1 = *(_BYTE *)(a1 + 36);
  if (v1)
  {
    *(_QWORD *)(a1 + 16) = 0;
    if ((v1 & 4) != 0)
    {
      v2 = *(_QWORD *)(a1 + 24);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
  }
  v4 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_10007AE40(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v11;
  int v12;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  _BYTE *v18;
  void *v19;
  uint64_t result;

  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v8 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v9 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((_QWORD *)this + 1) = v9 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v11 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v15 = (char *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          if ((unint64_t)v15 >= v14 || *v15 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
            if (!(_DWORD)result)
              return result;
            v16 = (_BYTE *)*((_QWORD *)this + 1);
            v14 = *((_QWORD *)this + 2);
          }
          else
          {
            *v6 = *v15;
            v16 = v15 + 1;
            *((_QWORD *)this + 1) = v16;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)this + 1) = v17;
            goto LABEL_27;
          }
        }
        if (v11 != 2)
          break;
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v17 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_27:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v18 = v17 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        v13 = *(_DWORD *)(a1 + 36) | 2;
        *(_DWORD *)(a1 + 36) = v13;
        if ((unint64_t)v18 < v14 && *v18 == 26)
        {
          *((_QWORD *)this + 1) = v18 + 1;
          goto LABEL_35;
        }
      }
      if (v11 != 3)
        break;
      v12 = TagFallback & 7;
      if (v12 != 2)
        goto LABEL_19;
      v13 = *(_DWORD *)(a1 + 36);
LABEL_35:
      *(_DWORD *)(a1 + 36) = v13 | 4;
      v19 = *(void **)(a1 + 24);
      if (v19 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v19);
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v12 = TagFallback & 7;
LABEL_19:
    if (v12 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v8, a4) & 1) == 0)
      return 0;
  }
}

uint64_t sub_10007B078(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
LABEL_4:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(3, *(_QWORD *)(v5 + 24), a2);
LABEL_5:
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007B114(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  unsigned int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  const void *v14;
  _QWORD *v15;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v16;
  _QWORD *v17;

  v4 = a2;
  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    *(_BYTE *)a2 = 8;
    v7 = (_DWORD)a2 + 1;
    if (v6 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v7, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v6;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }
  if ((*((_BYTE *)this + 36) & 2) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)v4 = 16;
    if (v8 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v8;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }
  if ((*((_BYTE *)this + 36) & 4) != 0)
  {
    v9 = *((_QWORD *)this + 3);
    *(_BYTE *)v4 = 26;
    if (*(char *)(v9 + 23) < 0)
      v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v9 + 8);
    else
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v9 + 23);
    if (v10 > 0x7F)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v10;
      v11 = (_DWORD)v4 + 2;
    }
    v12 = *(char *)(v9 + 23);
    if (v12 >= 0)
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9;
    else
      v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v9;
    if (v12 >= 0)
      v14 = (const void *)*(unsigned __int8 *)(v9 + 23);
    else
      v14 = (const void *)*(unsigned int *)(v9 + 8);
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v13, v14, v11, a4);
  }
  v17 = (_QWORD *)*((_QWORD *)this + 1);
  v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v15 = v17;
  if (!v17 || *v15 == v15[1])
    return v4;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, v4, a3);
}

uint64_t sub_10007B234(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  _QWORD *v14;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_24;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
      v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = *(_QWORD *)(a1 + 24);
    v9 = *(unsigned __int8 *)(v8 + 23);
    v10 = v9;
    v11 = *(_QWORD *)(v8 + 8);
    if ((v9 & 0x80u) == 0)
      v12 = *(unsigned __int8 *)(v8 + 23);
    else
      v12 = v11;
    if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12, a2);
      v9 = *(unsigned __int8 *)(v8 + 23);
      v11 = *(_QWORD *)(v8 + 8);
      v10 = *(_BYTE *)(v8 + 23);
    }
    else
    {
      v13 = 1;
    }
    if (v10 < 0)
      v9 = v11;
    v4 = (v4 + v13 + v9 + 1);
  }
LABEL_24:
  v14 = *(_QWORD **)(a1 + 8);
  if (v14 && *v14 != v14[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

uint64_t sub_10007B340(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 7752);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10007AB84((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10007B3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007B400(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10007B448()
{
  return 1;
}

uint64_t sub_10007B450()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854418;
}

void sub_10007B4C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007B4DC(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD638;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_10007B518(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007B52C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 7979);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * v5);
      v7 = a1[7];
      v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v7 + 1);
          v7 = a1[7];
        }
        a1[7] = v7 + 1;
        sub_100083484();
      }
      v9 = *((_QWORD *)a1 + 2);
      a1[6] = v8 + 1;
      sub_10007AB84(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10007B65C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007B674(uint64_t *a1)
{
  *a1 = (uint64_t)off_1007FD638;
  sub_10006BDC4(a1 + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10007B6B4(uint64_t *a1)
{
  sub_10007B674(a1);
  operator delete();
}

uint64_t sub_10007B6D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10007B6E0()
{
  operator new();
}

void sub_10007B71C()
{
  operator delete();
}

uint64_t sub_10007B740(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_10007B7B0(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v19;
  int v20;
  BOOL v21;
  int v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t result;
  unsigned int v26;

  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  v7 = (_DWORD)a1 + 8;
  while (1)
  {
LABEL_2:
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v10 = a1[7];
        v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            v10 = a1[7];
          }
          a1[7] = v10 + 1;
          sub_100083484();
        }
        v12 = *((_QWORD *)a1 + 2);
        a1[6] = v11 + 1;
        v13 = *(_QWORD *)(v12 + 8 * v11);
        v26 = 0;
        v14 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0;
        }
        else
        {
          v26 = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        v15 = *((_DWORD *)this + 14);
        v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
        if (!sub_10007AE40(v13, this, v18, v19) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        v20 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v20, 1);
        v22 = v20 - 1;
        if (v22 < 0 == v21)
          *((_DWORD *)this + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        v24 = (_BYTE *)*((_QWORD *)this + 2);
        if (v23 >= v24 || *v23 != 10)
        {
          if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)this + 1) = v23 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
      return 0;
  }
}

uint64_t sub_10007B9A8(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007BA30(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v6;
  unsigned int *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v9;
  _QWORD *v10;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v11;
  _QWORD *v12;

  if (*((int *)this + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(unsigned int **)(*((_QWORD *)this + 2) + 8 * v6);
      *(_BYTE *)a2 = 10;
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[8];
      if (v8 > 0x7F)
      {
        v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
      }
      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v8;
        v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = sub_10007B114((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v9, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  v12 = (_QWORD *)*((_QWORD *)this + 1);
  v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v10 = v12;
  if (!v12 || *v10 == v10[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3);
}

uint64_t sub_10007BAE8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  _QWORD *v8;

  v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    v4 = 0;
    do
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007B234(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v4), a2);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      else
        v7 = 1;
      v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  v8 = *(_QWORD **)(a1 + 8);
  if (v8 && *v8 != v8[1])
    v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_10007BB84(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 7967);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10007B52C(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10007BC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007BC44(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_10007BC8C()
{
  return 1;
}

uint64_t sub_10007BC94()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854428;
}

void sub_10007BD0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007BD20(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD6E8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10007BD84(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007BD98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _DWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v97;
  _BYTE v98[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v98, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 10013);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v98, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v97, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v98);
  }
  v5 = *(_DWORD *)(a2 + 376);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 1u;
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 16);
      if (!v7)
        v7 = *(_QWORD *)(qword_10085F5D8 + 16);
      sub_10006E330(v6, v7);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 2u;
      v8 = *(_QWORD *)(a1 + 24);
      if (!v8)
        operator new();
      v9 = *(_QWORD *)(a2 + 24);
      if (!v9)
        v9 = *(_QWORD *)(qword_10085F5D8 + 24);
      sub_1000BBA78(v8, v9);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 4u;
      v10 = *(_QWORD *)(a1 + 32);
      if (!v10)
        operator new();
      v11 = *(_QWORD *)(a2 + 32);
      if (!v11)
        v11 = *(_QWORD *)(qword_10085F5D8 + 32);
      sub_1000BCC20(v10, v11);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 8) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 8u;
      v12 = *(_QWORD *)(a1 + 40);
      if (!v12)
        operator new();
      v13 = *(_QWORD *)(a2 + 40);
      if (!v13)
        v13 = *(_QWORD *)(qword_10085F5D8 + 40);
      sub_1000BD3E8(v12, v13);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x10) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x10u;
      v14 = *(_QWORD *)(a1 + 48);
      if (!v14)
        operator new();
      v15 = *(_QWORD *)(a2 + 48);
      if (!v15)
        v15 = *(_QWORD *)(qword_10085F5D8 + 48);
      sub_10011EA88(v14, v15);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x20) != 0)
    {
      v16 = *(_DWORD *)(a2 + 368);
      if (!sub_10006DA24(v16))
        sub_1003CCC30();
      *(_DWORD *)(a1 + 376) |= 0x20u;
      *(_DWORD *)(a1 + 368) = v16;
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x40) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x40u;
      v17 = *(_QWORD *)(a1 + 56);
      if (!v17)
        operator new();
      v18 = *(_QWORD *)(a2 + 56);
      if (!v18)
        v18 = *(_QWORD *)(qword_10085F5D8 + 56);
      sub_10006ED90(v17, v18);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x80u;
      v19 = *(_DWORD **)(a1 + 64);
      if (!v19)
        operator new();
      v20 = *(_QWORD *)(a2 + 64);
      if (!v20)
        v20 = *(_QWORD *)(qword_10085F5D8 + 64);
      sub_100070450(v19, v20);
      v5 = *(_DWORD *)(a2 + 376);
    }
  }
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x100u;
      v21 = *(_QWORD *)(a1 + 72);
      if (!v21)
        operator new();
      v22 = *(_QWORD *)(a2 + 72);
      if (!v22)
        v22 = *(_QWORD *)(qword_10085F5D8 + 72);
      sub_1000713E0(v21, v22);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x200u;
      v23 = *(_QWORD *)(a1 + 80);
      if (!v23)
        operator new();
      v24 = *(_QWORD *)(a2 + 80);
      if (!v24)
        v24 = *(_QWORD *)(qword_10085F5D8 + 80);
      sub_100071C5C(v23, v24);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x400) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x400u;
      v25 = *(_QWORD *)(a1 + 88);
      if (!v25)
        operator new();
      v26 = *(_QWORD *)(a2 + 88);
      if (!v26)
        v26 = *(_QWORD *)(qword_10085F5D8 + 88);
      sub_1000734B8(v25, v26);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x800) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x800u;
      v27 = *(_QWORD *)(a1 + 96);
      if (!v27)
        operator new();
      v28 = *(_QWORD *)(a2 + 96);
      if (!v28)
        v28 = *(_QWORD *)(qword_10085F5D8 + 96);
      sub_100073D7C(v27, v28);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x1000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x1000u;
      v29 = *(_QWORD *)(a1 + 104);
      if (!v29)
        operator new();
      v30 = *(_QWORD *)(a2 + 104);
      if (!v30)
        v30 = *(_QWORD *)(qword_10085F5D8 + 104);
      sub_100074690(v29, v30);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x2000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x2000u;
      v31 = *(_QWORD *)(a1 + 112);
      if (!v31)
        operator new();
      v32 = *(_QWORD *)(a2 + 112);
      if (!v32)
        v32 = *(_QWORD *)(qword_10085F5D8 + 112);
      sub_1000E3AF8(v31, v32);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x4000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x4000u;
      v33 = *(_QWORD *)(a1 + 120);
      if (!v33)
        operator new();
      v34 = *(_QWORD *)(a2 + 120);
      if (!v34)
        v34 = *(_QWORD *)(qword_10085F5D8 + 120);
      sub_1000FF0FC(v33, v34);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x8000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x8000u;
      v35 = *(_QWORD *)(a1 + 128);
      if (!v35)
        operator new();
      v36 = *(_QWORD *)(a2 + 128);
      if (!v36)
        v36 = *(_QWORD *)(qword_10085F5D8 + 128);
      sub_100107038(v35, v36);
      v5 = *(_DWORD *)(a2 + 376);
    }
  }
  if ((v5 & 0xFF0000) != 0)
  {
    if ((v5 & 0x10000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x10000u;
      v37 = *(_QWORD *)(a1 + 136);
      if (!v37)
        operator new();
      v38 = *(_QWORD *)(a2 + 136);
      if (!v38)
        v38 = *(_QWORD *)(qword_10085F5D8 + 136);
      sub_1001165E8(v37, v38);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x20000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x20000u;
      v39 = *(_QWORD *)(a1 + 144);
      if (!v39)
        operator new();
      v40 = *(_QWORD *)(a2 + 144);
      if (!v40)
        v40 = *(_QWORD *)(qword_10085F5D8 + 144);
      sub_1000F33A8(v39, v40);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x40000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x40000u;
      v41 = *(_QWORD *)(a1 + 152);
      if (!v41)
        operator new();
      v42 = *(_QWORD *)(a2 + 152);
      if (!v42)
        v42 = *(_QWORD *)(qword_10085F5D8 + 152);
      sub_100103388(v41, v42);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x80000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x80000u;
      v43 = *(_QWORD *)(a1 + 160);
      if (!v43)
        operator new();
      v44 = *(_QWORD *)(a2 + 160);
      if (!v44)
        v44 = *(_QWORD *)(qword_10085F5D8 + 160);
      sub_1001062E4(v43, v44);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x100000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x100000u;
      v45 = *(_QWORD *)(a1 + 168);
      if (!v45)
        operator new();
      v46 = *(_QWORD *)(a2 + 168);
      if (!v46)
        v46 = *(_QWORD *)(qword_10085F5D8 + 168);
      sub_10010800C(v45, v46);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x200000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x200000u;
      v47 = *(_QWORD *)(a1 + 176);
      if (!v47)
        operator new();
      v48 = *(_QWORD *)(a2 + 176);
      if (!v48)
        v48 = *(_QWORD *)(qword_10085F5D8 + 176);
      sub_100108AC8(v47, v48);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x400000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x400000u;
      v49 = *(_QWORD *)(a1 + 184);
      if (!v49)
        operator new();
      v50 = *(_QWORD *)(a2 + 184);
      if (!v50)
        v50 = *(_QWORD *)(qword_10085F5D8 + 184);
      sub_10010940C(v49, v50);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x800000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x800000u;
      v51 = *(_QWORD *)(a1 + 192);
      if (!v51)
        operator new();
      v52 = *(_QWORD *)(a2 + 192);
      if (!v52)
        v52 = *(_QWORD *)(qword_10085F5D8 + 192);
      sub_10010A414(v51, v52);
      v5 = *(_DWORD *)(a2 + 376);
    }
  }
  if (HIBYTE(v5))
  {
    if ((v5 & 0x1000000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x1000000u;
      v53 = *(_QWORD *)(a1 + 200);
      if (!v53)
        operator new();
      v54 = *(_QWORD *)(a2 + 200);
      if (!v54)
        v54 = *(_QWORD *)(qword_10085F5D8 + 200);
      sub_10010BB2C(v53, v54);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x2000000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x2000000u;
      v55 = *(_QWORD *)(a1 + 208);
      if (!v55)
        operator new();
      v56 = *(_QWORD *)(a2 + 208);
      if (!v56)
        v56 = *(_QWORD *)(qword_10085F5D8 + 208);
      sub_10010D614(v55, v56);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x4000000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x4000000u;
      v57 = *(_QWORD *)(a1 + 216);
      if (!v57)
        operator new();
      v58 = *(_QWORD *)(a2 + 216);
      if (!v58)
        v58 = *(_QWORD *)(qword_10085F5D8 + 216);
      sub_10010BB2C(v57, v58);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x8000000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x8000000u;
      v59 = *(_QWORD *)(a1 + 224);
      if (!v59)
        operator new();
      v60 = *(_QWORD *)(a2 + 224);
      if (!v60)
        v60 = *(_QWORD *)(qword_10085F5D8 + 224);
      sub_1000CD6A4(v59, v60);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x10000000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x10000000u;
      v61 = *(_QWORD *)(a1 + 232);
      if (!v61)
        operator new();
      v62 = *(_QWORD *)(a2 + 232);
      if (!v62)
        v62 = *(_QWORD *)(qword_10085F5D8 + 232);
      sub_100078044(v61, v62);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x20000000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x20000000u;
      v63 = *(_QWORD *)(a1 + 240);
      if (!v63)
        operator new();
      v64 = *(_QWORD *)(a2 + 240);
      if (!v64)
        v64 = *(_QWORD *)(qword_10085F5D8 + 240);
      sub_10010F9EC(v63, v64);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x40000000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x40000000u;
      v65 = *(_QWORD *)(a1 + 248);
      if (!v65)
        operator new();
      v66 = *(_QWORD *)(a2 + 248);
      if (!v66)
        v66 = *(_QWORD *)(qword_10085F5D8 + 248);
      sub_100110C9C(v65, v66);
      v5 = *(_DWORD *)(a2 + 376);
    }
    if ((v5 & 0x80000000) != 0)
    {
      *(_DWORD *)(a1 + 376) |= 0x80000000;
      v67 = *(_QWORD *)(a1 + 256);
      if (!v67)
        operator new();
      v68 = *(_QWORD *)(a2 + 256);
      if (!v68)
        v68 = *(_QWORD *)(qword_10085F5D8 + 256);
      sub_100114174(v67, v68);
    }
  }
  v69 = *(_DWORD *)(a2 + 380);
  if ((_BYTE)v69)
  {
    if ((v69 & 1) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 1u;
      v70 = *(_QWORD *)(a1 + 264);
      if (!v70)
        operator new();
      v71 = *(_QWORD *)(a2 + 264);
      if (!v71)
        v71 = *(_QWORD *)(qword_10085F5D8 + 264);
      sub_1001149FC(v70, v71);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 2) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 2u;
      v72 = *(_QWORD *)(a1 + 272);
      if (!v72)
        operator new();
      v73 = *(_QWORD *)(a2 + 272);
      if (!v73)
        v73 = *(_QWORD *)(qword_10085F5D8 + 272);
      sub_100115100(v72, v73);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 4) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 4u;
      v74 = *(_QWORD *)(a1 + 280);
      if (!v74)
        operator new();
      v75 = *(_QWORD *)(a2 + 280);
      if (!v75)
        v75 = *(_QWORD *)(qword_10085F5D8 + 280);
      sub_100112778(v74, v75);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 8) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 8u;
      v76 = *(_QWORD *)(a1 + 288);
      if (!v76)
        operator new();
      v77 = *(_QWORD *)(a2 + 288);
      if (!v77)
        v77 = *(_QWORD *)(qword_10085F5D8 + 288);
      sub_10010BB2C(v76, v77);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 0x10) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 0x10u;
      v78 = *(_QWORD *)(a1 + 296);
      if (!v78)
        operator new();
      v79 = *(_QWORD *)(a2 + 296);
      if (!v79)
        v79 = *(_QWORD *)(qword_10085F5D8 + 296);
      sub_1000798FC(v78, v79);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 0x20u;
      v80 = *(_QWORD *)(a1 + 304);
      if (!v80)
        operator new();
      v81 = *(_QWORD *)(a2 + 304);
      if (!v81)
        v81 = *(_QWORD *)(qword_10085F5D8 + 304);
      sub_10011045C(v80, v81);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 0x40) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 0x40u;
      v82 = *(_QWORD *)(a1 + 312);
      if (!v82)
        operator new();
      v83 = *(_QWORD *)(a2 + 312);
      if (!v83)
        v83 = *(_QWORD *)(qword_10085F5D8 + 312);
      sub_100115B58(v82, v83);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 0x80u;
      v84 = *(_DWORD **)(a1 + 320);
      if (!v84)
        operator new();
      v85 = *(_QWORD *)(a2 + 320);
      if (!v85)
        v85 = *(_QWORD *)(qword_10085F5D8 + 320);
      sub_10007B52C(v84, v85);
      v69 = *(_DWORD *)(a2 + 380);
    }
  }
  if ((v69 & 0xFF00) != 0)
  {
    if ((v69 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 0x100u;
      v86 = *(_QWORD *)(a1 + 328);
      if (!v86)
        operator new();
      v87 = *(_QWORD *)(a2 + 328);
      if (!v87)
        v87 = *(_QWORD *)(qword_10085F5D8 + 328);
      sub_10010EF50(v86, v87);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 0x200u;
      v88 = *(_QWORD *)(a1 + 336);
      if (!v88)
        operator new();
      v89 = *(_QWORD *)(a2 + 336);
      if (!v89)
        v89 = *(_QWORD *)(qword_10085F5D8 + 336);
      sub_100117190(v88, v89);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 0x400) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 0x400u;
      v90 = *(_QWORD *)(a1 + 344);
      if (!v90)
        operator new();
      v91 = *(_QWORD *)(a2 + 344);
      if (!v91)
        v91 = *(_QWORD *)(qword_10085F5D8 + 344);
      sub_1001188D0(v90, v91);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 0x800) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 0x800u;
      v92 = *(_QWORD *)(a1 + 352);
      if (!v92)
        operator new();
      v93 = *(_QWORD *)(a2 + 352);
      if (!v93)
        v93 = *(_QWORD *)(qword_10085F5D8 + 352);
      sub_100119F10(v92, v93);
      v69 = *(_DWORD *)(a2 + 380);
    }
    if ((v69 & 0x1000) != 0)
    {
      *(_DWORD *)(a1 + 380) |= 0x1000u;
      v94 = *(_QWORD *)(a1 + 360);
      if (!v94)
        operator new();
      v95 = *(_QWORD *)(a2 + 360);
      if (!v95)
        v95 = *(_QWORD *)(qword_10085F5D8 + 360);
      sub_10011B324(v94, v95);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10007CE44()
{
  operator delete();
}

void sub_10007D16C(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  JUMPOUT(0x10007D164);
}

void sub_10007D180(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_1007FD6E8;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10007D1BC(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

_QWORD *sub_10007D1BC(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  if ((_QWORD *)qword_10085F5D8 != result)
  {
    v1 = result;
    v2 = result[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = v1[4];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = v1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = v1[6];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = v1[7];
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = v1[8];
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = v1[9];
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = v1[10];
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = v1[11];
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v1[12];
    if (v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
    v13 = v1[13];
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = v1[14];
    if (v14)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
    v15 = v1[15];
    if (v15)
      (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
    v16 = v1[16];
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v1[17];
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v1[18];
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = v1[19];
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
    v20 = v1[20];
    if (v20)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
    v21 = v1[21];
    if (v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
    v22 = v1[22];
    if (v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
    v23 = v1[23];
    if (v23)
      (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
    v24 = v1[24];
    if (v24)
      (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
    v25 = v1[25];
    if (v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
    v26 = v1[26];
    if (v26)
      (*(void (**)(uint64_t))(*(_QWORD *)v26 + 8))(v26);
    v27 = v1[27];
    if (v27)
      (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
    v28 = v1[28];
    if (v28)
      (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
    v29 = v1[29];
    if (v29)
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
    v30 = v1[30];
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = v1[31];
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v1[32];
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = v1[33];
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v1[34];
    if (v34)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
    v35 = v1[35];
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
    v36 = v1[36];
    if (v36)
      (*(void (**)(uint64_t))(*(_QWORD *)v36 + 8))(v36);
    v37 = v1[37];
    if (v37)
      (*(void (**)(uint64_t))(*(_QWORD *)v37 + 8))(v37);
    v38 = v1[38];
    if (v38)
      (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
    v39 = v1[39];
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
    v40 = v1[40];
    if (v40)
      (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
    v41 = v1[41];
    if (v41)
      (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
    v42 = v1[42];
    if (v42)
      (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
    v43 = v1[43];
    if (v43)
      (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
    v44 = v1[44];
    if (v44)
      (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
    result = (_QWORD *)v1[45];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_10007D564(_QWORD *a1)
{
  sub_10007D180(a1);
  operator delete();
}

uint64_t sub_10007D588(uint64_t result, int a2)
{
  *(_DWORD *)(result + 372) = a2;
  return result;
}

uint64_t sub_10007D590(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10085F5D8;
  if (!qword_10085F5D8)
  {
    sub_10006CA1C(0, a2, a3, a4);
    return qword_10085F5D8;
  }
  return result;
}

void sub_10007D5BC()
{
  operator new();
}

void sub_10007D5F8()
{
  operator delete();
}

uint64_t sub_10007D61C(uint64_t this)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  uint64_t v8;

  v1 = this;
  v2 = *(_DWORD *)(this + 376);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        this = (uint64_t)sub_10006E5E8(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(v1 + 24);
      if (this)
      {
        this = sub_1000BBEDC(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        this = sub_1000BCE48(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 40);
      if (this)
      {
        this = sub_1000BD630(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(_QWORD *)(v1 + 48);
      if (this)
      {
        this = (uint64_t)sub_10011EF10((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    *(_DWORD *)(v1 + 368) = 0;
    if ((v2 & 0x40) != 0)
    {
      this = *(_QWORD *)(v1 + 56);
      if (this)
      {
        this = (uint64_t)sub_10006F06C(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      this = *(_QWORD *)(v1 + 64);
      if (this)
      {
        this = sub_100070744(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(_QWORD *)(v1 + 72);
      if (this)
      {
        if (*(_BYTE *)(this + 36))
        {
          *(_QWORD *)(this + 16) = 0;
          *(_QWORD *)(this + 24) = 0;
        }
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    v4 = *(_DWORD *)(v1 + 376);
    if ((v4 & 0x200) != 0)
    {
      this = *(_QWORD *)(v1 + 80);
      if (this)
      {
        this = (uint64_t)sub_100072018(this);
        v4 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v4 & 0x400) != 0)
    {
      this = *(_QWORD *)(v1 + 88);
      if (this)
      {
        this = (uint64_t)sub_1000736D4((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v4 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v4 & 0x800) != 0)
    {
      this = *(_QWORD *)(v1 + 96);
      if (this)
      {
        this = (uint64_t)sub_100073F64(this);
        v4 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v4 & 0x1000) != 0)
    {
      this = *(_QWORD *)(v1 + 104);
      if (this)
      {
        if (*(_BYTE *)(this + 56))
        {
          *(_DWORD *)(this + 48) = 0;
          *(_OWORD *)(this + 16) = 0u;
          *(_OWORD *)(this + 32) = 0u;
        }
        v5 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 48) = 0;
        if (v5)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    v2 = *(_DWORD *)(v1 + 376);
    if ((v2 & 0x2000) != 0)
    {
      this = *(_QWORD *)(v1 + 112);
      if (this)
      {
        this = sub_1000E4508(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x4000) != 0)
    {
      this = *(_QWORD *)(v1 + 120);
      if (this)
      {
        this = (uint64_t)sub_1000FF398(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x8000) != 0)
    {
      this = *(_QWORD *)(v1 + 128);
      if (this)
      {
        this = sub_1001073DC(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      this = *(_QWORD *)(v1 + 136);
      if (this)
      {
        this = sub_1001168AC(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x20000) != 0)
    {
      this = *(_QWORD *)(v1 + 144);
      if (this)
      {
        this = (uint64_t)sub_1000F37B8(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x40000) != 0)
    {
      this = *(_QWORD *)(v1 + 152);
      if (this)
      {
        this = (uint64_t)sub_10010366C((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x80000) != 0)
    {
      this = *(_QWORD *)(v1 + 160);
      if (this)
      {
        this = (uint64_t)sub_100106644((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x100000) != 0)
    {
      this = *(_QWORD *)(v1 + 168);
      if (this)
      {
        this = (uint64_t)sub_1001082BC(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x200000) != 0)
    {
      this = *(_QWORD *)(v1 + 176);
      if (this)
      {
        this = (uint64_t)sub_100108CF8(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x400000) != 0)
    {
      this = *(_QWORD *)(v1 + 184);
      if (this)
      {
        this = (uint64_t)sub_10010975C(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x800000) != 0)
    {
      this = *(_QWORD *)(v1 + 192);
      if (this)
      {
        this = (uint64_t)sub_10010A734(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      this = *(_QWORD *)(v1 + 200);
      if (this)
      {
        this = sub_10010C030(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x2000000) != 0)
    {
      this = *(_QWORD *)(v1 + 208);
      if (this)
      {
        this = (uint64_t)sub_10010D8E4(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x4000000) != 0)
    {
      this = *(_QWORD *)(v1 + 216);
      if (this)
      {
        this = sub_10010C030(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x8000000) != 0)
    {
      this = *(_QWORD *)(v1 + 224);
      if (this)
      {
        this = sub_1000CDB14(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x10000000) != 0)
    {
      this = *(_QWORD *)(v1 + 232);
      if (this)
      {
        this = (uint64_t)sub_1000785AC((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x20000000) != 0)
    {
      this = *(_QWORD *)(v1 + 240);
      if (this)
      {
        this = sub_10010FCDC(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x40000000) != 0)
    {
      this = *(_QWORD *)(v1 + 248);
      if (this)
      {
        this = (uint64_t)sub_100110FB0(this);
        v2 = *(_DWORD *)(v1 + 376);
      }
    }
    if ((v2 & 0x80000000) != 0)
    {
      this = *(_QWORD *)(v1 + 256);
      if (this)
        this = (uint64_t)sub_100114388(this);
    }
  }
  v6 = *(_DWORD *)(v1 + 380);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) != 0)
    {
      this = *(_QWORD *)(v1 + 264);
      if (this)
      {
        this = (uint64_t)sub_100114BE4(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 2) != 0)
    {
      this = *(_QWORD *)(v1 + 272);
      if (this)
      {
        this = (uint64_t)sub_100115350(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 280);
      if (this)
      {
        this = (uint64_t)sub_100112CE8((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 288);
      if (this)
      {
        this = sub_10010C030(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      this = *(_QWORD *)(v1 + 296);
      if (this)
      {
        this = (uint64_t)sub_100079C8C(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 0x20) != 0)
    {
      this = *(_QWORD *)(v1 + 304);
      if (this)
      {
        this = (uint64_t)sub_100110664(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 0x40) != 0)
    {
      this = *(_QWORD *)(v1 + 312);
      if (this)
      {
        this = (uint64_t)sub_100115DA8(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 0x80) != 0)
    {
      this = *(_QWORD *)(v1 + 320);
      if (this)
      {
        this = sub_10007B740(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
  }
  if ((v6 & 0xFF00) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      this = *(_QWORD *)(v1 + 328);
      if (this)
      {
        this = sub_10010F1F4(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 0x200) != 0)
    {
      this = *(_QWORD *)(v1 + 336);
      if (this)
      {
        this = (uint64_t)sub_1001175AC(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 0x400) != 0)
    {
      this = *(_QWORD *)(v1 + 344);
      if (this)
      {
        this = (uint64_t)sub_100118AEC(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 0x800) != 0)
    {
      this = *(_QWORD *)(v1 + 352);
      if (this)
      {
        this = sub_10011A158(this);
        v6 = *(_DWORD *)(v1 + 380);
      }
    }
    if ((v6 & 0x1000) != 0)
    {
      this = *(_QWORD *)(v1 + 360);
      if (this)
        this = sub_10011B594(this);
    }
  }
  v8 = *(_QWORD *)(v1 + 8);
  v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_QWORD *)v7 + 46) = 0;
  if (v8)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  return this;
}

uint64_t sub_10007DA30(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v18;
  int v19;
  BOOL v20;
  int v21;
  _BYTE *v22;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v29;
  int v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  char *v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v39;
  int v40;
  int v41;
  _BYTE *v42;
  uint64_t v43;
  char *v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v49;
  int v50;
  int v51;
  _BYTE *v52;
  uint64_t v53;
  char *v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v59;
  int v60;
  int v61;
  _BYTE *v62;
  signed int v63;
  uint64_t result;
  _BYTE *v65;
  uint64_t v66;
  char *v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v72;
  int v73;
  int v74;
  _BYTE *v75;
  _DWORD *v76;
  char *v77;
  int v78;
  int v79;
  int v80;
  uint64_t v81;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v82;
  int v83;
  int v84;
  _BYTE *v85;
  uint64_t v86;
  char *v87;
  int v88;
  int v89;
  int v90;
  uint64_t v91;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v92;
  int v93;
  int v94;
  _BYTE *v95;
  uint64_t v96;
  char *v97;
  int v98;
  int v99;
  int v100;
  uint64_t v101;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v102;
  int v103;
  int v104;
  _BYTE *v105;
  uint64_t v106;
  char *v107;
  int v108;
  int v109;
  int v110;
  uint64_t v111;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v112;
  int v113;
  int v114;
  _BYTE *v115;
  uint64_t v116;
  char *v117;
  int v118;
  int v119;
  int v120;
  uint64_t v121;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v122;
  int v123;
  int v124;
  _BYTE *v125;
  uint64_t v126;
  char *v127;
  int v128;
  int v129;
  int v130;
  uint64_t v131;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v132;
  int v133;
  int v134;
  _BYTE *v135;
  uint64_t v136;
  char *v137;
  int v138;
  int v139;
  int v140;
  uint64_t v141;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v142;
  int v143;
  int v144;
  _BYTE *v145;
  uint64_t v146;
  char *v147;
  int v148;
  int v149;
  int v150;
  uint64_t v151;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v152;
  int v153;
  int v154;
  unsigned __int8 *v155;
  uint64_t v156;
  char *v157;
  int v158;
  int v159;
  int v160;
  uint64_t v161;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v162;
  int v163;
  int v164;
  unsigned __int8 *v165;
  uint64_t v166;
  char *v167;
  int v168;
  int v169;
  int v170;
  uint64_t v171;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v172;
  int v173;
  int v174;
  unsigned __int8 *v175;
  uint64_t v176;
  char *v177;
  int v178;
  int v179;
  int v180;
  uint64_t v181;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v182;
  int v183;
  int v184;
  unsigned __int8 *v185;
  uint64_t v186;
  char *v187;
  int v188;
  int v189;
  int v190;
  uint64_t v191;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v192;
  int v193;
  int v194;
  unsigned __int8 *v195;
  uint64_t v196;
  char *v197;
  int v198;
  int v199;
  int v200;
  uint64_t v201;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v202;
  int v203;
  int v204;
  unsigned __int8 *v205;
  uint64_t v206;
  char *v207;
  int v208;
  int v209;
  int v210;
  uint64_t v211;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v212;
  int v213;
  int v214;
  unsigned __int8 *v215;
  uint64_t v216;
  char *v217;
  int v218;
  int v219;
  int v220;
  uint64_t v221;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v222;
  int v223;
  int v224;
  unsigned __int8 *v225;
  uint64_t v226;
  char *v227;
  int v228;
  int v229;
  int v230;
  uint64_t v231;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v232;
  int v233;
  int v234;
  unsigned __int8 *v235;
  uint64_t v236;
  char *v237;
  int v238;
  int v239;
  int v240;
  uint64_t v241;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v242;
  int v243;
  int v244;
  unsigned __int8 *v245;
  uint64_t v246;
  char *v247;
  int v248;
  int v249;
  int v250;
  uint64_t v251;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v252;
  int v253;
  int v254;
  unsigned __int8 *v255;
  uint64_t v256;
  char *v257;
  int v258;
  int v259;
  int v260;
  uint64_t v261;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v262;
  int v263;
  int v264;
  unsigned __int8 *v265;
  uint64_t v266;
  char *v267;
  int v268;
  int v269;
  int v270;
  uint64_t v271;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v272;
  int v273;
  int v274;
  unsigned __int8 *v275;
  uint64_t v276;
  char *v277;
  int v278;
  int v279;
  int v280;
  uint64_t v281;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v282;
  int v283;
  int v284;
  unsigned __int8 *v285;
  uint64_t v286;
  char *v287;
  int v288;
  int v289;
  int v290;
  uint64_t v291;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v292;
  int v293;
  int v294;
  unsigned __int8 *v295;
  uint64_t v296;
  char *v297;
  int v298;
  int v299;
  int v300;
  uint64_t v301;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v302;
  int v303;
  int v304;
  unsigned __int8 *v305;
  uint64_t v306;
  char *v307;
  int v308;
  int v309;
  int v310;
  uint64_t v311;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v312;
  int v313;
  int v314;
  unsigned __int8 *v315;
  uint64_t v316;
  char *v317;
  int v318;
  int v319;
  int v320;
  uint64_t v321;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v322;
  int v323;
  int v324;
  unsigned __int8 *v325;
  uint64_t v326;
  char *v327;
  int v328;
  int v329;
  int v330;
  uint64_t v331;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v332;
  int v333;
  int v334;
  unsigned __int8 *v335;
  uint64_t v336;
  char *v337;
  int v338;
  int v339;
  int v340;
  uint64_t v341;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v342;
  int v343;
  int v344;
  unsigned __int8 *v345;
  uint64_t v346;
  char *v347;
  int v348;
  int v349;
  int v350;
  uint64_t v351;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v352;
  int v353;
  int v354;
  unsigned __int8 *v355;
  uint64_t v356;
  char *v357;
  int v358;
  int v359;
  int v360;
  uint64_t v361;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v362;
  int v363;
  int v364;
  unsigned __int8 *v365;
  uint64_t v366;
  char *v367;
  int v368;
  int v369;
  int v370;
  uint64_t v371;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v372;
  int v373;
  int v374;
  unsigned __int8 *v375;
  uint64_t v376;
  char *v377;
  int v378;
  int v379;
  int v380;
  uint64_t v381;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v382;
  int v383;
  int v384;
  unsigned __int8 *v385;
  uint64_t v386;
  char *v387;
  int v388;
  int v389;
  int v390;
  uint64_t v391;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v392;
  int v393;
  int v394;
  unsigned __int8 *v395;
  int *v396;
  char *v397;
  int v398;
  int v399;
  int v400;
  uint64_t v401;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v402;
  int v403;
  int v404;
  unsigned __int8 *v405;
  uint64_t v406;
  char *v407;
  int v408;
  int v409;
  int v410;
  uint64_t v411;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v412;
  int v413;
  int v414;
  unsigned __int8 *v415;
  unint64_t *v416;
  char *v417;
  int v418;
  int v419;
  int v420;
  uint64_t v421;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v422;
  int v423;
  int v424;
  unsigned __int8 *v425;
  _DWORD *v426;
  char *v427;
  int v428;
  int v429;
  int v430;
  uint64_t v431;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v432;
  int v433;
  int v434;
  unsigned __int8 *v435;
  uint64_t v436;
  char *v437;
  int v438;
  int v439;
  int v440;
  uint64_t v441;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v442;
  int v443;
  int v444;
  unsigned __int8 *v445;
  uint64_t v446;
  char *v447;
  int v448;
  int v449;
  int v450;
  uint64_t v451;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v452;
  int v453;
  int v454;
  unsigned int v455;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 < *((_QWORD *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_102;
        *(_DWORD *)(a1 + 376) |= 1u;
        v10 = *(_QWORD *)(a1 + 16);
        if (!v10)
          operator new();
        v455 = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        v14 = *((_DWORD *)this + 14);
        v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10006E670(v10, this, v17, v18) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        v19 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v19, 1);
        v21 = v19 - 1;
        if (v21 < 0 == v20)
          *((_DWORD *)this + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v22 >= *((_QWORD *)this + 2) || *v22 != 18)
          continue;
        *((_QWORD *)this + 1) = v22 + 1;
        goto LABEL_114;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_102;
LABEL_114:
        *(_DWORD *)(a1 + 376) |= 2u;
        v23 = *(_QWORD *)(a1 + 24);
        if (!v23)
          operator new();
        v455 = 0;
        v24 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v24 >= *((_QWORD *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v24;
          *((_QWORD *)this + 1) = v24 + 1;
        }
        v25 = *((_DWORD *)this + 14);
        v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26)
          return 0;
        v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000BBFF0(v23, this, v28, v29) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        v30 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v30, 1);
        v31 = v30 - 1;
        if (v31 < 0 == v20)
          *((_DWORD *)this + 14) = v31;
        v32 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 != 26)
          continue;
        *((_QWORD *)this + 1) = v32 + 1;
LABEL_128:
        *(_DWORD *)(a1 + 376) |= 4u;
        v33 = *(_QWORD *)(a1 + 32);
        if (!v33)
          operator new();
        v455 = 0;
        v34 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v34;
          *((_QWORD *)this + 1) = v34 + 1;
        }
        v35 = *((_DWORD *)this + 14);
        v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36)
          return 0;
        v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000BCE94(v33, this, v38, v39) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        v40 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v40, 1);
        v41 = v40 - 1;
        if (v41 < 0 == v20)
          *((_DWORD *)this + 14) = v41;
        v42 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v42 >= *((_QWORD *)this + 2) || *v42 != 34)
          continue;
        *((_QWORD *)this + 1) = v42 + 1;
LABEL_142:
        *(_DWORD *)(a1 + 376) |= 8u;
        v43 = *(_QWORD *)(a1 + 40);
        if (!v43)
          operator new();
        v455 = 0;
        v44 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v44 >= *((_QWORD *)this + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v44;
          *((_QWORD *)this + 1) = v44 + 1;
        }
        v45 = *((_DWORD *)this + 14);
        v46 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v45 + 1;
        if (v45 >= v46)
          return 0;
        v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000BD684(v43, this, v48, v49) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
        v50 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v50, 1);
        v51 = v50 - 1;
        if (v51 < 0 == v20)
          *((_DWORD *)this + 14) = v51;
        v52 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v52 >= *((_QWORD *)this + 2) || *v52 != 42)
          continue;
        *((_QWORD *)this + 1) = v52 + 1;
LABEL_156:
        *(_DWORD *)(a1 + 376) |= 0x10u;
        v53 = *(_QWORD *)(a1 + 48);
        if (!v53)
          operator new();
        v455 = 0;
        v54 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v54 >= *((_QWORD *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v54;
          *((_QWORD *)this + 1) = v54 + 1;
        }
        v55 = *((_DWORD *)this + 14);
        v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56)
          return 0;
        v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10011F010(v53, this, v58, v59) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        v60 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v60, 1);
        v61 = v60 - 1;
        if (v61 < 0 == v20)
          *((_DWORD *)this + 14) = v61;
        v62 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v62 >= v12 || *v62 != 48)
          continue;
        v13 = v62 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_170:
        v455 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455);
          if (!(_DWORD)result)
            return result;
          v63 = v455;
        }
        else
        {
          v63 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        if (sub_10006DA24(v63))
        {
          *(_DWORD *)(a1 + 376) |= 0x20u;
          *(_DWORD *)(a1 + 368) = v63;
        }
        else
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 6, v63);
        }
        v65 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v65 >= *((_QWORD *)this + 2) || *v65 != 58)
          continue;
        *((_QWORD *)this + 1) = v65 + 1;
LABEL_181:
        *(_DWORD *)(a1 + 376) |= 0x40u;
        v66 = *(_QWORD *)(a1 + 56);
        if (!v66)
          operator new();
        v455 = 0;
        v67 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v67 >= *((_QWORD *)this + 2) || *v67 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v67;
          *((_QWORD *)this + 1) = v67 + 1;
        }
        v68 = *((_DWORD *)this + 14);
        v69 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v68 + 1;
        if (v68 >= v69)
          return 0;
        v70 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10006F0A4(v66, this, v71, v72) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v70);
        v73 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v73, 1);
        v74 = v73 - 1;
        if (v74 < 0 == v20)
          *((_DWORD *)this + 14) = v74;
        v75 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v75 >= *((_QWORD *)this + 2) || *v75 != 66)
          continue;
        *((_QWORD *)this + 1) = v75 + 1;
LABEL_195:
        *(_DWORD *)(a1 + 376) |= 0x80u;
        v76 = *(_DWORD **)(a1 + 64);
        if (!v76)
          operator new();
        v455 = 0;
        v77 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v77 >= *((_QWORD *)this + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v77;
          *((_QWORD *)this + 1) = v77 + 1;
        }
        v78 = *((_DWORD *)this + 14);
        v79 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v78 + 1;
        if (v78 >= v79)
          return 0;
        v80 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000707C4(v76, this, v81, v82) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v80);
        v83 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v83, 1);
        v84 = v83 - 1;
        if (v84 < 0 == v20)
          *((_DWORD *)this + 14) = v84;
        v85 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v85 >= *((_QWORD *)this + 2) || *v85 != 74)
          continue;
        *((_QWORD *)this + 1) = v85 + 1;
LABEL_209:
        *(_DWORD *)(a1 + 376) |= 0x100u;
        v86 = *(_QWORD *)(a1 + 72);
        if (!v86)
          operator new();
        v455 = 0;
        v87 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v87 >= *((_QWORD *)this + 2) || *v87 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v87;
          *((_QWORD *)this + 1) = v87 + 1;
        }
        v88 = *((_DWORD *)this + 14);
        v89 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v88 + 1;
        if (v88 >= v89)
          return 0;
        v90 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000715D0(v86, this, v91, v92) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v90);
        v93 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v93, 1);
        v94 = v93 - 1;
        if (v94 < 0 == v20)
          *((_DWORD *)this + 14) = v94;
        v95 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v95 >= *((_QWORD *)this + 2) || *v95 != 82)
          continue;
        *((_QWORD *)this + 1) = v95 + 1;
LABEL_223:
        *(_DWORD *)(a1 + 376) |= 0x200u;
        v96 = *(_QWORD *)(a1 + 80);
        if (!v96)
          operator new();
        v455 = 0;
        v97 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v97 >= *((_QWORD *)this + 2) || *v97 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v97;
          *((_QWORD *)this + 1) = v97 + 1;
        }
        v98 = *((_DWORD *)this + 14);
        v99 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v98 + 1;
        if (v98 >= v99)
          return 0;
        v100 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10007205C(v96, this, v101, v102) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v100);
        v103 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v103, 1);
        v104 = v103 - 1;
        if (v104 < 0 == v20)
          *((_DWORD *)this + 14) = v104;
        v105 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v105 >= *((_QWORD *)this + 2) || *v105 != 90)
          continue;
        *((_QWORD *)this + 1) = v105 + 1;
LABEL_237:
        *(_DWORD *)(a1 + 376) |= 0x400u;
        v106 = *(_QWORD *)(a1 + 88);
        if (!v106)
          operator new();
        v455 = 0;
        v107 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v107 >= *((_QWORD *)this + 2) || *v107 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v107;
          *((_QWORD *)this + 1) = v107 + 1;
        }
        v108 = *((_DWORD *)this + 14);
        v109 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v108 + 1;
        if (v108 >= v109)
          return 0;
        v110 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100073728(v106, this, v111, v112) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v110);
        v113 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v113, 1);
        v114 = v113 - 1;
        if (v114 < 0 == v20)
          *((_DWORD *)this + 14) = v114;
        v115 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v115 >= *((_QWORD *)this + 2) || *v115 != 98)
          continue;
        *((_QWORD *)this + 1) = v115 + 1;
LABEL_251:
        *(_DWORD *)(a1 + 376) |= 0x800u;
        v116 = *(_QWORD *)(a1 + 96);
        if (!v116)
          operator new();
        v455 = 0;
        v117 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v117 >= *((_QWORD *)this + 2) || *v117 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v117;
          *((_QWORD *)this + 1) = v117 + 1;
        }
        v118 = *((_DWORD *)this + 14);
        v119 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v118 + 1;
        if (v118 >= v119)
          return 0;
        v120 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100073F88(v116, this, v121, v122) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v120);
        v123 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v123, 1);
        v124 = v123 - 1;
        if (v124 < 0 == v20)
          *((_DWORD *)this + 14) = v124;
        v125 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v125 >= *((_QWORD *)this + 2) || *v125 != 106)
          continue;
        *((_QWORD *)this + 1) = v125 + 1;
LABEL_265:
        *(_DWORD *)(a1 + 376) |= 0x1000u;
        v126 = *(_QWORD *)(a1 + 104);
        if (!v126)
          operator new();
        v455 = 0;
        v127 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v127 >= *((_QWORD *)this + 2) || *v127 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v127;
          *((_QWORD *)this + 1) = v127 + 1;
        }
        v128 = *((_DWORD *)this + 14);
        v129 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v128 + 1;
        if (v128 >= v129)
          return 0;
        v130 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000748E8(v126, this, v131, v132) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v130);
        v133 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v133, 1);
        v134 = v133 - 1;
        if (v134 < 0 == v20)
          *((_DWORD *)this + 14) = v134;
        v135 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v135 >= *((_QWORD *)this + 2) || *v135 != 114)
          continue;
        *((_QWORD *)this + 1) = v135 + 1;
LABEL_279:
        *(_DWORD *)(a1 + 376) |= 0x2000u;
        v136 = *(_QWORD *)(a1 + 112);
        if (!v136)
          operator new();
        v455 = 0;
        v137 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v137 >= *((_QWORD *)this + 2) || *v137 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v137;
          *((_QWORD *)this + 1) = v137 + 1;
        }
        v138 = *((_DWORD *)this + 14);
        v139 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v138 + 1;
        if (v138 >= v139)
          return 0;
        v140 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000E4E20(v136, this, v141, v142) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v140);
        v143 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v143, 1);
        v144 = v143 - 1;
        if (v144 < 0 == v20)
          *((_DWORD *)this + 14) = v144;
        v145 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v145 >= *((_QWORD *)this + 2) || *v145 != 122)
          continue;
        *((_QWORD *)this + 1) = v145 + 1;
LABEL_293:
        *(_DWORD *)(a1 + 376) |= 0x4000u;
        v146 = *(_QWORD *)(a1 + 120);
        if (!v146)
          operator new();
        v455 = 0;
        v147 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v147 >= *((_QWORD *)this + 2) || *v147 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v147;
          *((_QWORD *)this + 1) = v147 + 1;
        }
        v148 = *((_DWORD *)this + 14);
        v149 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v148 + 1;
        if (v148 >= v149)
          return 0;
        v150 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000FF3C8(v146, this, v151, v152) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v150);
        v153 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v153, 1);
        v154 = v153 - 1;
        if (v154 < 0 == v20)
          *((_DWORD *)this + 14) = v154;
        v155 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v155 <= 1 || *v155 != 130 || v155[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v155 + 2;
LABEL_308:
        *(_DWORD *)(a1 + 376) |= 0x8000u;
        v156 = *(_QWORD *)(a1 + 128);
        if (!v156)
          operator new();
        v455 = 0;
        v157 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v157 >= *((_QWORD *)this + 2) || *v157 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v157;
          *((_QWORD *)this + 1) = v157 + 1;
        }
        v158 = *((_DWORD *)this + 14);
        v159 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v158 + 1;
        if (v158 >= v159)
          return 0;
        v160 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100107474(v156, this, v161, v162) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v160);
        v163 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v163, 1);
        v164 = v163 - 1;
        if (v164 < 0 == v20)
          *((_DWORD *)this + 14) = v164;
        v165 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v165 <= 1 || *v165 != 138 || v165[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v165 + 2;
LABEL_323:
        *(_DWORD *)(a1 + 376) |= 0x10000u;
        v166 = *(_QWORD *)(a1 + 136);
        if (!v166)
          operator new();
        v455 = 0;
        v167 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v167 >= *((_QWORD *)this + 2) || *v167 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v167;
          *((_QWORD *)this + 1) = v167 + 1;
        }
        v168 = *((_DWORD *)this + 14);
        v169 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v168 + 1;
        if (v168 >= v169)
          return 0;
        v170 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100116960(v166, this, v171, v172) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v170);
        v173 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v173, 1);
        v174 = v173 - 1;
        if (v174 < 0 == v20)
          *((_DWORD *)this + 14) = v174;
        v175 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v175 <= 1 || *v175 != 146 || v175[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v175 + 2;
LABEL_338:
        *(_DWORD *)(a1 + 376) |= 0x20000u;
        v176 = *(_QWORD *)(a1 + 144);
        if (!v176)
          operator new();
        v455 = 0;
        v177 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v177 >= *((_QWORD *)this + 2) || *v177 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v177;
          *((_QWORD *)this + 1) = v177 + 1;
        }
        v178 = *((_DWORD *)this + 14);
        v179 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v178 + 1;
        if (v178 >= v179)
          return 0;
        v180 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000F387C(v176, this, v181, v182) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v180);
        v183 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v183, 1);
        v184 = v183 - 1;
        if (v184 < 0 == v20)
          *((_DWORD *)this + 14) = v184;
        v185 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v185 <= 1 || *v185 != 154 || v185[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v185 + 2;
LABEL_353:
        *(_DWORD *)(a1 + 376) |= 0x40000u;
        v186 = *(_QWORD *)(a1 + 152);
        if (!v186)
          operator new();
        v455 = 0;
        v187 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v187 >= *((_QWORD *)this + 2) || *v187 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v187;
          *((_QWORD *)this + 1) = v187 + 1;
        }
        v188 = *((_DWORD *)this + 14);
        v189 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v188 + 1;
        if (v188 >= v189)
          return 0;
        v190 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1001036F0(v186, this, v191, v192) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v190);
        v193 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v193, 1);
        v194 = v193 - 1;
        if (v194 < 0 == v20)
          *((_DWORD *)this + 14) = v194;
        v195 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v195 <= 1 || *v195 != 162 || v195[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v195 + 2;
LABEL_368:
        *(_DWORD *)(a1 + 376) |= 0x80000u;
        v196 = *(_QWORD *)(a1 + 160);
        if (!v196)
          operator new();
        v455 = 0;
        v197 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v197 >= *((_QWORD *)this + 2) || *v197 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v197;
          *((_QWORD *)this + 1) = v197 + 1;
        }
        v198 = *((_DWORD *)this + 14);
        v199 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v198 + 1;
        if (v198 >= v199)
          return 0;
        v200 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1001066D4(v196, this, v201, v202) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v200);
        v203 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v203, 1);
        v204 = v203 - 1;
        if (v204 < 0 == v20)
          *((_DWORD *)this + 14) = v204;
        v205 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v205 <= 1 || *v205 != 170 || v205[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v205 + 2;
LABEL_383:
        *(_DWORD *)(a1 + 376) |= 0x100000u;
        v206 = *(_QWORD *)(a1 + 168);
        if (!v206)
          operator new();
        v455 = 0;
        v207 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v207 >= *((_QWORD *)this + 2) || *v207 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v207;
          *((_QWORD *)this + 1) = v207 + 1;
        }
        v208 = *((_DWORD *)this + 14);
        v209 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v208 + 1;
        if (v208 >= v209)
          return 0;
        v210 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100108318(v206, this, v211, v212) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v210);
        v213 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v213, 1);
        v214 = v213 - 1;
        if (v214 < 0 == v20)
          *((_DWORD *)this + 14) = v214;
        v215 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v215 <= 1 || *v215 != 178 || v215[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v215 + 2;
LABEL_398:
        *(_DWORD *)(a1 + 376) |= 0x200000u;
        v216 = *(_QWORD *)(a1 + 176);
        if (!v216)
          operator new();
        v455 = 0;
        v217 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v217 >= *((_QWORD *)this + 2) || *v217 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v217;
          *((_QWORD *)this + 1) = v217 + 1;
        }
        v218 = *((_DWORD *)this + 14);
        v219 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v218 + 1;
        if (v218 >= v219)
          return 0;
        v220 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100108D54(v216, this, v221, v222) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v220);
        v223 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v223, 1);
        v224 = v223 - 1;
        if (v224 < 0 == v20)
          *((_DWORD *)this + 14) = v224;
        v225 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v225 <= 1 || *v225 != 186 || v225[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v225 + 2;
LABEL_413:
        *(_DWORD *)(a1 + 376) |= 0x400000u;
        v226 = *(_QWORD *)(a1 + 184);
        if (!v226)
          operator new();
        v455 = 0;
        v227 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v227 >= *((_QWORD *)this + 2) || *v227 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v227;
          *((_QWORD *)this + 1) = v227 + 1;
        }
        v228 = *((_DWORD *)this + 14);
        v229 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v228 + 1;
        if (v228 >= v229)
          return 0;
        v230 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1001097C4(v226, this, v231, v232) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v230);
        v233 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v233, 1);
        v234 = v233 - 1;
        if (v234 < 0 == v20)
          *((_DWORD *)this + 14) = v234;
        v235 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v235 <= 1 || *v235 != 194 || v235[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v235 + 2;
LABEL_428:
        *(_DWORD *)(a1 + 376) |= 0x800000u;
        v236 = *(_QWORD *)(a1 + 192);
        if (!v236)
          operator new();
        v455 = 0;
        v237 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v237 >= *((_QWORD *)this + 2) || *v237 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v237;
          *((_QWORD *)this + 1) = v237 + 1;
        }
        v238 = *((_DWORD *)this + 14);
        v239 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v238 + 1;
        if (v238 >= v239)
          return 0;
        v240 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10010A7A0(v236, this, v241, v242) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v240);
        v243 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v243, 1);
        v244 = v243 - 1;
        if (v244 < 0 == v20)
          *((_DWORD *)this + 14) = v244;
        v245 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v245 <= 1 || *v245 != 202 || v245[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v245 + 2;
LABEL_443:
        *(_DWORD *)(a1 + 376) |= 0x1000000u;
        v246 = *(_QWORD *)(a1 + 200);
        if (!v246)
          operator new();
        v455 = 0;
        v247 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v247 >= *((_QWORD *)this + 2) || *v247 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v247;
          *((_QWORD *)this + 1) = v247 + 1;
        }
        v248 = *((_DWORD *)this + 14);
        v249 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v248 + 1;
        if (v248 >= v249)
          return 0;
        v250 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10010C100(v246, this, v251, v252) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v250);
        v253 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v253, 1);
        v254 = v253 - 1;
        if (v254 < 0 == v20)
          *((_DWORD *)this + 14) = v254;
        v255 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v255 <= 1 || *v255 != 210 || v255[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v255 + 2;
LABEL_458:
        *(_DWORD *)(a1 + 376) |= 0x2000000u;
        v256 = *(_QWORD *)(a1 + 208);
        if (!v256)
          operator new();
        v455 = 0;
        v257 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v257 >= *((_QWORD *)this + 2) || *v257 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v257;
          *((_QWORD *)this + 1) = v257 + 1;
        }
        v258 = *((_DWORD *)this + 14);
        v259 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v258 + 1;
        if (v258 >= v259)
          return 0;
        v260 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10010D940(v256, this, v261, v262) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v260);
        v263 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v263, 1);
        v264 = v263 - 1;
        if (v264 < 0 == v20)
          *((_DWORD *)this + 14) = v264;
        v265 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v265 <= 1 || *v265 != 218 || v265[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v265 + 2;
LABEL_473:
        *(_DWORD *)(a1 + 376) |= 0x4000000u;
        v266 = *(_QWORD *)(a1 + 216);
        if (!v266)
          operator new();
        v455 = 0;
        v267 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v267 >= *((_QWORD *)this + 2) || *v267 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v267;
          *((_QWORD *)this + 1) = v267 + 1;
        }
        v268 = *((_DWORD *)this + 14);
        v269 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v268 + 1;
        if (v268 >= v269)
          return 0;
        v270 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10010C100(v266, this, v271, v272) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v270);
        v273 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v273, 1);
        v274 = v273 - 1;
        if (v274 < 0 == v20)
          *((_DWORD *)this + 14) = v274;
        v275 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v275 <= 1 || *v275 != 226 || v275[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v275 + 2;
LABEL_488:
        *(_DWORD *)(a1 + 376) |= 0x8000000u;
        v276 = *(_QWORD *)(a1 + 224);
        if (!v276)
          operator new();
        v455 = 0;
        v277 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v277 >= *((_QWORD *)this + 2) || *v277 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v277;
          *((_QWORD *)this + 1) = v277 + 1;
        }
        v278 = *((_DWORD *)this + 14);
        v279 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v278 + 1;
        if (v278 >= v279)
          return 0;
        v280 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000CDC2C(v276, this, v281, v282) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v280);
        v283 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v283, 1);
        v284 = v283 - 1;
        if (v284 < 0 == v20)
          *((_DWORD *)this + 14) = v284;
        v285 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v285 <= 1 || *v285 != 234 || v285[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v285 + 2;
LABEL_503:
        *(_DWORD *)(a1 + 376) |= 0x10000000u;
        v286 = *(_QWORD *)(a1 + 232);
        if (!v286)
          operator new();
        v455 = 0;
        v287 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v287 >= *((_QWORD *)this + 2) || *v287 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v287;
          *((_QWORD *)this + 1) = v287 + 1;
        }
        v288 = *((_DWORD *)this + 14);
        v289 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v288 + 1;
        if (v288 >= v289)
          return 0;
        v290 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1000786F4(v286, this, v291, v292) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v290);
        v293 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v293, 1);
        v294 = v293 - 1;
        if (v294 < 0 == v20)
          *((_DWORD *)this + 14) = v294;
        v295 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v295 <= 1 || *v295 != 242 || v295[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v295 + 2;
LABEL_518:
        *(_DWORD *)(a1 + 376) |= 0x20000000u;
        v296 = *(_QWORD *)(a1 + 240);
        if (!v296)
          operator new();
        v455 = 0;
        v297 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v297 >= *((_QWORD *)this + 2) || *v297 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v297;
          *((_QWORD *)this + 1) = v297 + 1;
        }
        v298 = *((_DWORD *)this + 14);
        v299 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v298 + 1;
        if (v298 >= v299)
          return 0;
        v300 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10010FD68(v296, this, v301, v302) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v300);
        v303 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v303, 1);
        v304 = v303 - 1;
        if (v304 < 0 == v20)
          *((_DWORD *)this + 14) = v304;
        v305 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v305 <= 1 || *v305 != 250 || v305[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v305 + 2;
LABEL_533:
        *(_DWORD *)(a1 + 376) |= 0x40000000u;
        v306 = *(_QWORD *)(a1 + 248);
        if (!v306)
          operator new();
        v455 = 0;
        v307 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v307 >= *((_QWORD *)this + 2) || *v307 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v307;
          *((_QWORD *)this + 1) = v307 + 1;
        }
        v308 = *((_DWORD *)this + 14);
        v309 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v308 + 1;
        if (v308 >= v309)
          return 0;
        v310 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10011102C(v306, this, v311, v312) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v310);
        v313 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v313, 1);
        v314 = v313 - 1;
        if (v314 < 0 == v20)
          *((_DWORD *)this + 14) = v314;
        v315 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v315 <= 1 || *v315 != 130 || v315[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v315 + 2;
LABEL_548:
        *(_DWORD *)(a1 + 376) |= 0x80000000;
        v316 = *(_QWORD *)(a1 + 256);
        if (!v316)
          operator new();
        v455 = 0;
        v317 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v317 >= *((_QWORD *)this + 2) || *v317 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v317;
          *((_QWORD *)this + 1) = v317 + 1;
        }
        v318 = *((_DWORD *)this + 14);
        v319 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v318 + 1;
        if (v318 >= v319)
          return 0;
        v320 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1001143E0(v316, this, v321, v322) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v320);
        v323 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v323, 1);
        v324 = v323 - 1;
        if (v324 < 0 == v20)
          *((_DWORD *)this + 14) = v324;
        v325 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v325 <= 1 || *v325 != 138 || v325[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v325 + 2;
LABEL_563:
        *(_DWORD *)(a1 + 380) |= 1u;
        v326 = *(_QWORD *)(a1 + 264);
        if (!v326)
          operator new();
        v455 = 0;
        v327 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v327 >= *((_QWORD *)this + 2) || *v327 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v327;
          *((_QWORD *)this + 1) = v327 + 1;
        }
        v328 = *((_DWORD *)this + 14);
        v329 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v328 + 1;
        if (v328 >= v329)
          return 0;
        v330 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100114C34(v326, this, v331, v332) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v330);
        v333 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v333, 1);
        v334 = v333 - 1;
        if (v334 < 0 == v20)
          *((_DWORD *)this + 14) = v334;
        v335 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v335 <= 1 || *v335 != 146 || v335[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v335 + 2;
LABEL_578:
        *(_DWORD *)(a1 + 380) |= 2u;
        v336 = *(_QWORD *)(a1 + 272);
        if (!v336)
          operator new();
        v455 = 0;
        v337 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v337 >= *((_QWORD *)this + 2) || *v337 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v337;
          *((_QWORD *)this + 1) = v337 + 1;
        }
        v338 = *((_DWORD *)this + 14);
        v339 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v338 + 1;
        if (v338 >= v339)
          return 0;
        v340 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1001153AC(v336, this, v341, v342) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v340);
        v343 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v343, 1);
        v344 = v343 - 1;
        if (v344 < 0 == v20)
          *((_DWORD *)this + 14) = v344;
        v345 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v345 <= 1 || *v345 != 154 || v345[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v345 + 2;
LABEL_593:
        *(_DWORD *)(a1 + 380) |= 4u;
        v346 = *(_QWORD *)(a1 + 280);
        if (!v346)
          operator new();
        v455 = 0;
        v347 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v347 >= *((_QWORD *)this + 2) || *v347 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v347;
          *((_QWORD *)this + 1) = v347 + 1;
        }
        v348 = *((_DWORD *)this + 14);
        v349 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v348 + 1;
        if (v348 >= v349)
          return 0;
        v350 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100112DEC(v346, this, v351, v352) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v350);
        v353 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v353, 1);
        v354 = v353 - 1;
        if (v354 < 0 == v20)
          *((_DWORD *)this + 14) = v354;
        v355 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v355 <= 1 || *v355 != 162 || v355[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v355 + 2;
LABEL_608:
        *(_DWORD *)(a1 + 380) |= 8u;
        v356 = *(_QWORD *)(a1 + 288);
        if (!v356)
          operator new();
        v455 = 0;
        v357 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v357 >= *((_QWORD *)this + 2) || *v357 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v357;
          *((_QWORD *)this + 1) = v357 + 1;
        }
        v358 = *((_DWORD *)this + 14);
        v359 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v358 + 1;
        if (v358 >= v359)
          return 0;
        v360 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10010C100(v356, this, v361, v362) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v360);
        v363 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v363, 1);
        v364 = v363 - 1;
        if (v364 < 0 == v20)
          *((_DWORD *)this + 14) = v364;
        v365 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v365 <= 1 || *v365 != 170 || v365[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v365 + 2;
LABEL_623:
        *(_DWORD *)(a1 + 380) |= 0x10u;
        v366 = *(_QWORD *)(a1 + 296);
        if (!v366)
          operator new();
        v455 = 0;
        v367 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v367 >= *((_QWORD *)this + 2) || *v367 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v367;
          *((_QWORD *)this + 1) = v367 + 1;
        }
        v368 = *((_DWORD *)this + 14);
        v369 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v368 + 1;
        if (v368 >= v369)
          return 0;
        v370 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100079D00(v366, this, v371, v372) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v370);
        v373 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v373, 1);
        v374 = v373 - 1;
        if (v374 < 0 == v20)
          *((_DWORD *)this + 14) = v374;
        v375 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v375 <= 1 || *v375 != 178 || v375[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v375 + 2;
LABEL_638:
        *(_DWORD *)(a1 + 380) |= 0x20u;
        v376 = *(_QWORD *)(a1 + 304);
        if (!v376)
          operator new();
        v455 = 0;
        v377 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v377 >= *((_QWORD *)this + 2) || *v377 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v377;
          *((_QWORD *)this + 1) = v377 + 1;
        }
        v378 = *((_DWORD *)this + 14);
        v379 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v378 + 1;
        if (v378 >= v379)
          return 0;
        v380 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_1001106BC(v376, this, v381, v382) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v380);
        v383 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v383, 1);
        v384 = v383 - 1;
        if (v384 < 0 == v20)
          *((_DWORD *)this + 14) = v384;
        v385 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v385 <= 1 || *v385 != 186 || v385[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v385 + 2;
LABEL_653:
        *(_DWORD *)(a1 + 380) |= 0x40u;
        v386 = *(_QWORD *)(a1 + 312);
        if (!v386)
          operator new();
        v455 = 0;
        v387 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v387 >= *((_QWORD *)this + 2) || *v387 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v387;
          *((_QWORD *)this + 1) = v387 + 1;
        }
        v388 = *((_DWORD *)this + 14);
        v389 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v388 + 1;
        if (v388 >= v389)
          return 0;
        v390 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100115E00(v386, this, v391, v392) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v390);
        v393 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v393, 1);
        v394 = v393 - 1;
        if (v394 < 0 == v20)
          *((_DWORD *)this + 14) = v394;
        v395 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v395 <= 1 || *v395 != 194 || v395[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v395 + 2;
LABEL_668:
        *(_DWORD *)(a1 + 380) |= 0x80u;
        v396 = *(int **)(a1 + 320);
        if (!v396)
          operator new();
        v455 = 0;
        v397 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v397 >= *((_QWORD *)this + 2) || *v397 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v397;
          *((_QWORD *)this + 1) = v397 + 1;
        }
        v398 = *((_DWORD *)this + 14);
        v399 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v398 + 1;
        if (v398 >= v399)
          return 0;
        v400 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10007B7B0(v396, this, v401, v402) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v400);
        v403 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v403, 1);
        v404 = v403 - 1;
        if (v404 < 0 == v20)
          *((_DWORD *)this + 14) = v404;
        v405 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v405 <= 1 || *v405 != 202 || v405[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v405 + 2;
LABEL_683:
        *(_DWORD *)(a1 + 380) |= 0x100u;
        v406 = *(_QWORD *)(a1 + 328);
        if (!v406)
          operator new();
        v455 = 0;
        v407 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v407 >= *((_QWORD *)this + 2) || *v407 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v407;
          *((_QWORD *)this + 1) = v407 + 1;
        }
        v408 = *((_DWORD *)this + 14);
        v409 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v408 + 1;
        if (v408 >= v409)
          return 0;
        v410 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10010F2A0(v406, this, v411, v412) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v410);
        v413 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v413, 1);
        v414 = v413 - 1;
        if (v414 < 0 == v20)
          *((_DWORD *)this + 14) = v414;
        v415 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v415 <= 1 || *v415 != 210 || v415[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v415 + 2;
LABEL_698:
        *(_DWORD *)(a1 + 380) |= 0x200u;
        v416 = *(unint64_t **)(a1 + 336);
        if (!v416)
          operator new();
        v455 = 0;
        v417 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v417 >= *((_QWORD *)this + 2) || *v417 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v417;
          *((_QWORD *)this + 1) = v417 + 1;
        }
        v418 = *((_DWORD *)this + 14);
        v419 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v418 + 1;
        if (v418 >= v419)
          return 0;
        v420 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100117604(v416, this, v421, v422) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v420);
        v423 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v423, 1);
        v424 = v423 - 1;
        if (v424 < 0 == v20)
          *((_DWORD *)this + 14) = v424;
        v425 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v425 <= 1 || *v425 != 218 || v425[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v425 + 2;
LABEL_713:
        *(_DWORD *)(a1 + 380) |= 0x400u;
        v426 = *(_DWORD **)(a1 + 344);
        if (!v426)
          operator new();
        v455 = 0;
        v427 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v427 >= *((_QWORD *)this + 2) || *v427 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v427;
          *((_QWORD *)this + 1) = v427 + 1;
        }
        v428 = *((_DWORD *)this + 14);
        v429 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v428 + 1;
        if (v428 >= v429)
          return 0;
        v430 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_100118B10(v426, this, v431, v432) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v430);
        v433 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v433, 1);
        v434 = v433 - 1;
        if (v434 < 0 == v20)
          *((_DWORD *)this + 14) = v434;
        v435 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v435 <= 1 || *v435 != 226 || v435[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v435 + 2;
LABEL_728:
        *(_DWORD *)(a1 + 380) |= 0x800u;
        v436 = *(_QWORD *)(a1 + 352);
        if (!v436)
          operator new();
        v455 = 0;
        v437 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v437 >= *((_QWORD *)this + 2) || *v437 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v437;
          *((_QWORD *)this + 1) = v437 + 1;
        }
        v438 = *((_DWORD *)this + 14);
        v439 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v438 + 1;
        if (v438 >= v439)
          return 0;
        v440 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10011A1CC(v436, this, v441, v442) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v440);
        v443 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v443, 1);
        v444 = v443 - 1;
        if (v444 < 0 == v20)
          *((_DWORD *)this + 14) = v444;
        v445 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v445 <= 1 || *v445 != 234 || v445[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v445 + 2;
LABEL_743:
        *(_DWORD *)(a1 + 380) |= 0x1000u;
        v446 = *(_QWORD *)(a1 + 360);
        if (!v446)
          operator new();
        v455 = 0;
        v447 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v447 >= *((_QWORD *)this + 2) || *v447 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v455))return 0;
        }
        else
        {
          v455 = *v447;
          *((_QWORD *)this + 1) = v447 + 1;
        }
        v448 = *((_DWORD *)this + 14);
        v449 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v448 + 1;
        if (v448 >= v449)
          return 0;
        v450 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v455);
        if (!sub_10011B60C(v446, this, v451, v452) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v450);
        v453 = *((_DWORD *)this + 14);
        v20 = __OFSUB__(v453, 1);
        v454 = v453 - 1;
        if (v454 < 0 == v20)
          *((_DWORD *)this + 14) = v454;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_128;
        goto LABEL_102;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_142;
        goto LABEL_102;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_156;
        goto LABEL_102;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_102;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_170;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_181;
        goto LABEL_102;
      case 8u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_195;
        goto LABEL_102;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_209;
        goto LABEL_102;
      case 0xAu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_223;
        goto LABEL_102;
      case 0xBu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_237;
        goto LABEL_102;
      case 0xCu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_251;
        goto LABEL_102;
      case 0xDu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_265;
        goto LABEL_102;
      case 0xEu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_279;
        goto LABEL_102;
      case 0xFu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_293;
        goto LABEL_102;
      case 0x10u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_308;
        goto LABEL_102;
      case 0x11u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_323;
        goto LABEL_102;
      case 0x12u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_338;
        goto LABEL_102;
      case 0x13u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_353;
        goto LABEL_102;
      case 0x14u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_368;
        goto LABEL_102;
      case 0x15u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_383;
        goto LABEL_102;
      case 0x16u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_398;
        goto LABEL_102;
      case 0x17u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_413;
        goto LABEL_102;
      case 0x18u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_428;
        goto LABEL_102;
      case 0x19u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_443;
        goto LABEL_102;
      case 0x1Au:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_458;
        goto LABEL_102;
      case 0x1Bu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_473;
        goto LABEL_102;
      case 0x1Cu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_488;
        goto LABEL_102;
      case 0x1Du:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_503;
        goto LABEL_102;
      case 0x1Eu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_518;
        goto LABEL_102;
      case 0x1Fu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_533;
        goto LABEL_102;
      case 0x20u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_548;
        goto LABEL_102;
      case 0x21u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_563;
        goto LABEL_102;
      case 0x22u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_578;
        goto LABEL_102;
      case 0x23u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_593;
        goto LABEL_102;
      case 0x24u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_608;
        goto LABEL_102;
      case 0x25u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_623;
        goto LABEL_102;
      case 0x26u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_638;
        goto LABEL_102;
      case 0x27u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_653;
        goto LABEL_102;
      case 0x28u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_668;
        goto LABEL_102;
      case 0x29u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_683;
        goto LABEL_102;
      case 0x2Au:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_698;
        goto LABEL_102;
      case 0x2Bu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_713;
        goto LABEL_102;
      case 0x2Cu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_728;
        goto LABEL_102;
      case 0x2Du:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_102;
        goto LABEL_743;
      default:
        v9 = TagFallback & 7;
LABEL_102:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
        continue;
    }
  }
}

void sub_100080950()
{
  operator delete();
}

uint64_t sub_100080C78(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v53;
  _QWORD *v54;

  v5 = this;
  v6 = *(_DWORD *)(this + 376);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F5D8 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 376);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_40;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
    v8 = *(_QWORD *)(qword_10085F5D8 + 24);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_43;
  }
LABEL_40:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
    v9 = *(_QWORD *)(qword_10085F5D8 + 32);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_46;
  }
LABEL_43:
  v10 = *(_QWORD *)(v5 + 40);
  if (!v10)
    v10 = *(_QWORD *)(qword_10085F5D8 + 40);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_49;
  }
LABEL_46:
  v11 = *(_QWORD *)(v5 + 48);
  if (!v11)
    v11 = *(_QWORD *)(qword_10085F5D8 + 48);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 368), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_53;
  }
LABEL_50:
  v12 = *(_QWORD *)(v5 + 56);
  if (!v12)
    v12 = *(_QWORD *)(qword_10085F5D8 + 56);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_56;
  }
LABEL_53:
  v13 = *(_QWORD *)(v5 + 64);
  if (!v13)
    v13 = *(_QWORD *)(qword_10085F5D8 + 64);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_59;
  }
LABEL_56:
  v14 = *(_QWORD *)(v5 + 72);
  if (!v14)
    v14 = *(_QWORD *)(qword_10085F5D8 + 72);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v14, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_62;
  }
LABEL_59:
  v15 = *(_QWORD *)(v5 + 80);
  if (!v15)
    v15 = *(_QWORD *)(qword_10085F5D8 + 80);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v15, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_65;
  }
LABEL_62:
  v16 = *(_QWORD *)(v5 + 88);
  if (!v16)
    v16 = *(_QWORD *)(qword_10085F5D8 + 88);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v16, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_68;
  }
LABEL_65:
  v17 = *(_QWORD *)(v5 + 96);
  if (!v17)
    v17 = *(_QWORD *)(qword_10085F5D8 + 96);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v17, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_71;
  }
LABEL_68:
  v18 = *(_QWORD *)(v5 + 104);
  if (!v18)
    v18 = *(_QWORD *)(qword_10085F5D8 + 104);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v18, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_74;
  }
LABEL_71:
  v19 = *(_QWORD *)(v5 + 112);
  if (!v19)
    v19 = *(_QWORD *)(qword_10085F5D8 + 112);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v19, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_77;
  }
LABEL_74:
  v20 = *(_QWORD *)(v5 + 120);
  if (!v20)
    v20 = *(_QWORD *)(qword_10085F5D8 + 120);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v20, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_80;
  }
LABEL_77:
  v21 = *(_QWORD *)(v5 + 128);
  if (!v21)
    v21 = *(_QWORD *)(qword_10085F5D8 + 128);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v21, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_83;
  }
LABEL_80:
  v22 = *(_QWORD *)(v5 + 136);
  if (!v22)
    v22 = *(_QWORD *)(qword_10085F5D8 + 136);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v22, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_86;
  }
LABEL_83:
  v23 = *(_QWORD *)(v5 + 144);
  if (!v23)
    v23 = *(_QWORD *)(qword_10085F5D8 + 144);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v23, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_89;
  }
LABEL_86:
  v24 = *(_QWORD *)(v5 + 152);
  if (!v24)
    v24 = *(_QWORD *)(qword_10085F5D8 + 152);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v24, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_92;
  }
LABEL_89:
  v25 = *(_QWORD *)(v5 + 160);
  if (!v25)
    v25 = *(_QWORD *)(qword_10085F5D8 + 160);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v25, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_95;
  }
LABEL_92:
  v26 = *(_QWORD *)(v5 + 168);
  if (!v26)
    v26 = *(_QWORD *)(qword_10085F5D8 + 168);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v26, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_98;
  }
LABEL_95:
  v27 = *(_QWORD *)(v5 + 176);
  if (!v27)
    v27 = *(_QWORD *)(qword_10085F5D8 + 176);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v27, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_101;
  }
LABEL_98:
  v28 = *(_QWORD *)(v5 + 184);
  if (!v28)
    v28 = *(_QWORD *)(qword_10085F5D8 + 184);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v28, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_104;
  }
LABEL_101:
  v29 = *(_QWORD *)(v5 + 192);
  if (!v29)
    v29 = *(_QWORD *)(qword_10085F5D8 + 192);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v29, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_107;
  }
LABEL_104:
  v30 = *(_QWORD *)(v5 + 200);
  if (!v30)
    v30 = *(_QWORD *)(qword_10085F5D8 + 200);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v30, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_110;
  }
LABEL_107:
  v31 = *(_QWORD *)(v5 + 208);
  if (!v31)
    v31 = *(_QWORD *)(qword_10085F5D8 + 208);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v31, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_113;
  }
LABEL_110:
  v32 = *(_QWORD *)(v5 + 216);
  if (!v32)
    v32 = *(_QWORD *)(qword_10085F5D8 + 216);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v32, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_116;
  }
LABEL_113:
  v33 = *(_QWORD *)(v5 + 224);
  if (!v33)
    v33 = *(_QWORD *)(qword_10085F5D8 + 224);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v33, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_119;
  }
LABEL_116:
  v34 = *(_QWORD *)(v5 + 232);
  if (!v34)
    v34 = *(_QWORD *)(qword_10085F5D8 + 232);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v34, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_32;
    goto LABEL_122;
  }
LABEL_119:
  v35 = *(_QWORD *)(v5 + 240);
  if (!v35)
    v35 = *(_QWORD *)(qword_10085F5D8 + 240);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v35, a2, a4);
  v6 = *(_DWORD *)(v5 + 376);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0)
      goto LABEL_128;
    goto LABEL_125;
  }
LABEL_122:
  v36 = *(_QWORD *)(v5 + 248);
  if (!v36)
    v36 = *(_QWORD *)(qword_10085F5D8 + 248);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v36, a2, a4);
  if ((*(_DWORD *)(v5 + 376) & 0x80000000) != 0)
  {
LABEL_125:
    v37 = *(_QWORD *)(v5 + 256);
    if (!v37)
      v37 = *(_QWORD *)(qword_10085F5D8 + 256);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, v37, a2, a4);
  }
LABEL_128:
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 1) != 0)
  {
    v39 = *(_QWORD *)(v5 + 264);
    if (!v39)
      v39 = *(_QWORD *)(qword_10085F5D8 + 264);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, v39, a2, a4);
    v38 = *(_DWORD *)(v5 + 380);
    if ((v38 & 2) == 0)
    {
LABEL_130:
      if ((v38 & 4) == 0)
        goto LABEL_131;
      goto LABEL_148;
    }
  }
  else if ((v38 & 2) == 0)
  {
    goto LABEL_130;
  }
  v40 = *(_QWORD *)(v5 + 272);
  if (!v40)
    v40 = *(_QWORD *)(qword_10085F5D8 + 272);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, v40, a2, a4);
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 4) == 0)
  {
LABEL_131:
    if ((v38 & 8) == 0)
      goto LABEL_132;
    goto LABEL_151;
  }
LABEL_148:
  v41 = *(_QWORD *)(v5 + 280);
  if (!v41)
    v41 = *(_QWORD *)(qword_10085F5D8 + 280);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, v41, a2, a4);
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 8) == 0)
  {
LABEL_132:
    if ((v38 & 0x10) == 0)
      goto LABEL_133;
    goto LABEL_154;
  }
LABEL_151:
  v42 = *(_QWORD *)(v5 + 288);
  if (!v42)
    v42 = *(_QWORD *)(qword_10085F5D8 + 288);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, v42, a2, a4);
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 0x10) == 0)
  {
LABEL_133:
    if ((v38 & 0x20) == 0)
      goto LABEL_134;
    goto LABEL_157;
  }
LABEL_154:
  v43 = *(_QWORD *)(v5 + 296);
  if (!v43)
    v43 = *(_QWORD *)(qword_10085F5D8 + 296);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, v43, a2, a4);
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 0x20) == 0)
  {
LABEL_134:
    if ((v38 & 0x40) == 0)
      goto LABEL_135;
    goto LABEL_160;
  }
LABEL_157:
  v44 = *(_QWORD *)(v5 + 304);
  if (!v44)
    v44 = *(_QWORD *)(qword_10085F5D8 + 304);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, v44, a2, a4);
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 0x40) == 0)
  {
LABEL_135:
    if ((v38 & 0x80) == 0)
      goto LABEL_136;
    goto LABEL_163;
  }
LABEL_160:
  v45 = *(_QWORD *)(v5 + 312);
  if (!v45)
    v45 = *(_QWORD *)(qword_10085F5D8 + 312);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, v45, a2, a4);
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 0x80) == 0)
  {
LABEL_136:
    if ((v38 & 0x100) == 0)
      goto LABEL_137;
    goto LABEL_166;
  }
LABEL_163:
  v46 = *(_QWORD *)(v5 + 320);
  if (!v46)
    v46 = *(_QWORD *)(qword_10085F5D8 + 320);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, v46, a2, a4);
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 0x100) == 0)
  {
LABEL_137:
    if ((v38 & 0x200) == 0)
      goto LABEL_138;
    goto LABEL_169;
  }
LABEL_166:
  v47 = *(_QWORD *)(v5 + 328);
  if (!v47)
    v47 = *(_QWORD *)(qword_10085F5D8 + 328);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, v47, a2, a4);
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 0x200) == 0)
  {
LABEL_138:
    if ((v38 & 0x400) == 0)
      goto LABEL_139;
    goto LABEL_172;
  }
LABEL_169:
  v48 = *(_QWORD *)(v5 + 336);
  if (!v48)
    v48 = *(_QWORD *)(qword_10085F5D8 + 336);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, v48, a2, a4);
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 0x400) == 0)
  {
LABEL_139:
    if ((v38 & 0x800) == 0)
      goto LABEL_140;
    goto LABEL_175;
  }
LABEL_172:
  v49 = *(_QWORD *)(v5 + 344);
  if (!v49)
    v49 = *(_QWORD *)(qword_10085F5D8 + 344);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, v49, a2, a4);
  v38 = *(_DWORD *)(v5 + 380);
  if ((v38 & 0x800) == 0)
  {
LABEL_140:
    if ((v38 & 0x1000) == 0)
      goto LABEL_181;
    goto LABEL_178;
  }
LABEL_175:
  v50 = *(_QWORD *)(v5 + 352);
  if (!v50)
    v50 = *(_QWORD *)(qword_10085F5D8 + 352);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, v50, a2, a4);
  if ((*(_DWORD *)(v5 + 380) & 0x1000) != 0)
  {
LABEL_178:
    v51 = *(_QWORD *)(v5 + 360);
    if (!v51)
      v51 = *(_QWORD *)(qword_10085F5D8 + 360);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, v51, a2, a4);
  }
LABEL_181:
  v54 = *(_QWORD **)(v5 + 8);
  v53 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v52 = v54;
  if (v54)
  {
    if (*v52 != v52[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v53, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008146C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  int v6;
  unsigned int *v7;
  unsigned int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v10;
  unsigned int *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v13;
  unsigned int *v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v16;
  unsigned int *v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v19;
  unsigned int *v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  unint64_t v24;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v25;
  int v26;
  uint64_t v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  uint64_t v29;
  unsigned int *v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v32;
  unsigned int *v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  _BYTE *v35;
  unsigned int *v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v38;
  unsigned int *v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v41;
  unsigned int *v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  _BYTE *v44;
  unsigned int *v45;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v46;
  uint64_t v47;
  unsigned int *v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v50;
  uint64_t v51;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v52;
  uint64_t v53;
  unsigned int *v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v56;
  unsigned int *v57;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v59;
  unsigned int *v60;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v61;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v62;
  unsigned int *v63;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v64;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v65;
  unsigned int *v66;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v67;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v68;
  unsigned int *v69;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v70;
  uint64_t v71;
  unsigned int *v72;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v73;
  uint64_t v74;
  unsigned int *v75;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v76;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v77;
  unsigned int *v78;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v79;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v80;
  unsigned int *v81;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v82;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v83;
  unsigned int *v84;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v85;
  uint64_t v86;
  unsigned int *v87;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v88;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v89;
  unsigned int *v90;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v91;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v92;
  unsigned int *v93;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v94;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v95;
  unsigned int *v96;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v97;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v98;
  unsigned int *v99;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v100;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v101;
  unsigned int *v102;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v103;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v104;
  int v105;
  unsigned int *v106;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v107;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v108;
  unsigned int *v109;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v110;
  _BYTE *v111;
  unsigned int *v112;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v113;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v114;
  unsigned int *v115;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v116;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v117;
  unsigned int *v118;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v119;
  uint64_t v120;
  unsigned int *v121;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v122;
  uint64_t v123;
  unsigned int *v124;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v125;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v126;
  unsigned int *v127;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v128;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v129;
  unsigned int *v130;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v131;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v132;
  unsigned int *v133;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v134;
  uint64_t v135;
  unsigned int *v136;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v137;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v138;
  unsigned int *v139;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v140;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v141;
  unsigned int *v142;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v143;
  const wireless_diagnostics::google::protobuf::UnknownFieldSet *v144;
  _QWORD *v145;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v146;
  _QWORD *v147;

  v4 = a2;
  v6 = *((_DWORD *)this + 94);
  if ((v6 & 1) != 0)
  {
    v7 = (unsigned int *)*((_QWORD *)this + 2);
    if (!v7)
      v7 = *(unsigned int **)(qword_10085F5D8 + 16);
    *(_BYTE *)a2 = 10;
    v8 = (_DWORD)a2 + 1;
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[8];
    if (v9 > 0x7F)
    {
      v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v9;
      v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    v4 = sub_10006E924((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v10, a3);
    v6 = *((_DWORD *)this + 94);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v11 = (unsigned int *)*((_QWORD *)this + 3);
  if (!v11)
    v11 = *(unsigned int **)(qword_10085F5D8 + 24);
  *(_BYTE *)v4 = 18;
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[17];
  if (v12 > 0x7F)
  {
    v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v12;
    v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_1000BC5F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v13, a3, a4);
  v6 = *((_DWORD *)this + 94);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_26;
  }
LABEL_20:
  v14 = (unsigned int *)*((_QWORD *)this + 4);
  if (!v14)
    v14 = *(unsigned int **)(qword_10085F5D8 + 32);
  *(_BYTE *)v4 = 26;
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[6];
  if (v15 > 0x7F)
  {
    v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v15;
    v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_1000BD0D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3, a4);
  v6 = *((_DWORD *)this + 94);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
LABEL_32:
    v20 = (unsigned int *)*((_QWORD *)this + 6);
    if (!v20)
      v20 = *(unsigned int **)(qword_10085F5D8 + 48);
    *(_BYTE *)v4 = 42;
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[19];
    if (v21 > 0x7F)
    {
      v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v21;
      v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    v4 = sub_10011F6BC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v20, v22, a3);
    if ((*((_DWORD *)this + 94) & 0x20) == 0)
      goto LABEL_44;
    goto LABEL_38;
  }
LABEL_26:
  v17 = (unsigned int *)*((_QWORD *)this + 5);
  if (!v17)
    v17 = *(unsigned int **)(qword_10085F5D8 + 40);
  *(_BYTE *)v4 = 34;
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[8];
  if (v18 > 0x7F)
  {
    v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v18;
    v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_1000BD950((wireless_diagnostics::google::protobuf::internal::WireFormat *)v17, v19, a3, a4);
  v6 = *((_DWORD *)this + 94);
  if ((v6 & 0x10) != 0)
    goto LABEL_32;
LABEL_6:
  if ((v6 & 0x20) == 0)
    goto LABEL_44;
LABEL_38:
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 92);
  *(_BYTE *)v4 = 48;
  v24 = (unint64_t)v4 + 1;
  if ((v23 & 0x80000000) != 0)
  {
    v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v23, v24, a3);
  }
  else
  {
    if (v23 <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v23;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_44;
    }
    v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, v24, a3);
  }
  v4 = v25;
LABEL_44:
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x40) != 0)
  {
    v27 = *((_QWORD *)this + 7);
    if (!v27)
      v27 = *(_QWORD *)(qword_10085F5D8 + 56);
    *(_BYTE *)v4 = 58;
    v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v27 + 36);
    if (v28 > 0x7F)
    {
      v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v28;
      v29 = (uint64_t)v4 + 2;
    }
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10006F854(v27, v29, a3);
    v26 = *((_DWORD *)this + 94);
    if ((v26 & 0x80) == 0)
    {
LABEL_46:
      if ((v26 & 0x100) == 0)
        goto LABEL_47;
      goto LABEL_83;
    }
  }
  else if ((v26 & 0x80) == 0)
  {
    goto LABEL_46;
  }
  v30 = (unsigned int *)*((_QWORD *)this + 8);
  if (!v30)
    v30 = *(unsigned int **)(qword_10085F5D8 + 64);
  *(_BYTE *)v4 = 66;
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30[16];
  if (v31 > 0x7F)
  {
    v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v31;
    v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100070E1C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v30, v32, a3);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x100) == 0)
  {
LABEL_47:
    if ((v26 & 0x200) == 0)
      goto LABEL_48;
    goto LABEL_89;
  }
LABEL_83:
  v33 = (unsigned int *)*((_QWORD *)this + 9);
  if (!v33)
    v33 = *(unsigned int **)(qword_10085F5D8 + 72);
  *(_BYTE *)v4 = 74;
  v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v33[8];
  if (v34 > 0x7F)
  {
    v35 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v34;
    v35 = (char *)v4 + 2;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100071898((wireless_diagnostics::google::protobuf::internal::WireFormat *)v33, v35, a3);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x200) == 0)
  {
LABEL_48:
    if ((v26 & 0x400) == 0)
      goto LABEL_49;
    goto LABEL_95;
  }
LABEL_89:
  v36 = (unsigned int *)*((_QWORD *)this + 10);
  if (!v36)
    v36 = *(unsigned int **)(qword_10085F5D8 + 80);
  *(_BYTE *)v4 = 82;
  v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v36[26];
  if (v37 > 0x7F)
  {
    v38 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v37, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v37;
    v38 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100072CA0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v36, v38, a3);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x400) == 0)
  {
LABEL_49:
    if ((v26 & 0x800) == 0)
      goto LABEL_50;
    goto LABEL_101;
  }
LABEL_95:
  v39 = (unsigned int *)*((_QWORD *)this + 11);
  if (!v39)
    v39 = *(unsigned int **)(qword_10085F5D8 + 88);
  *(_BYTE *)v4 = 90;
  v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[8];
  if (v40 > 0x7F)
  {
    v41 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v40, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v40;
    v41 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_1000739F4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, v41, a3);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x800) == 0)
  {
LABEL_50:
    if ((v26 & 0x1000) == 0)
      goto LABEL_51;
    goto LABEL_107;
  }
LABEL_101:
  v42 = (unsigned int *)*((_QWORD *)this + 12);
  if (!v42)
    v42 = *(unsigned int **)(qword_10085F5D8 + 96);
  *(_BYTE *)v4 = 98;
  v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v42[9];
  if (v43 > 0x7F)
  {
    v44 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v43, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v43;
    v44 = (char *)v4 + 2;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100074340((wireless_diagnostics::google::protobuf::internal::WireFormat *)v42, v44, a3);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x1000) == 0)
  {
LABEL_51:
    if ((v26 & 0x2000) == 0)
      goto LABEL_52;
    goto LABEL_113;
  }
LABEL_107:
  v45 = (unsigned int *)*((_QWORD *)this + 13);
  if (!v45)
    v45 = *(unsigned int **)(qword_10085F5D8 + 104);
  *(_BYTE *)v4 = 106;
  v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v45[13];
  if (v46 > 0x7F)
  {
    v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v46, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v46;
    v47 = (uint64_t)v4 + 2;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100074D44((wireless_diagnostics::google::protobuf::internal::WireFormat *)v45, v47, a3);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x2000) == 0)
  {
LABEL_52:
    if ((v26 & 0x4000) == 0)
      goto LABEL_53;
    goto LABEL_119;
  }
LABEL_113:
  v48 = (unsigned int *)*((_QWORD *)this + 14);
  if (!v48)
    v48 = *(unsigned int **)(qword_10085F5D8 + 112);
  *(_BYTE *)v4 = 114;
  v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v48[36];
  if (v49 > 0x7F)
  {
    v50 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v49, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v49;
    v50 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_1000E631C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v48, v50, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x4000) == 0)
  {
LABEL_53:
    if ((v26 & 0x8000) == 0)
      goto LABEL_54;
    goto LABEL_125;
  }
LABEL_119:
  v51 = *((_QWORD *)this + 15);
  if (!v51)
    v51 = *(_QWORD *)(qword_10085F5D8 + 120);
  *(_BYTE *)v4 = 122;
  v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v51 + 48);
  if (v52 > 0x7F)
  {
    v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v52, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v52;
    v53 = (uint64_t)v4 + 2;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000FF8D8(v51, v53, a3);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x8000) == 0)
  {
LABEL_54:
    if ((v26 & 0x10000) == 0)
      goto LABEL_55;
    goto LABEL_131;
  }
LABEL_125:
  v54 = (unsigned int *)*((_QWORD *)this + 16);
  if (!v54)
    v54 = *(unsigned int **)(qword_10085F5D8 + 128);
  *(_WORD *)v4 = 386;
  v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v54[14];
  if (v55 > 0x7F)
  {
    v56 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v55, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v55;
    v56 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_100107A64((wireless_diagnostics::google::protobuf::internal::WireFormat *)v54, v56, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x10000) == 0)
  {
LABEL_55:
    if ((v26 & 0x20000) == 0)
      goto LABEL_56;
    goto LABEL_137;
  }
LABEL_131:
  v57 = (unsigned int *)*((_QWORD *)this + 17);
  if (!v57)
    v57 = *(unsigned int **)(qword_10085F5D8 + 136);
  *(_WORD *)v4 = 394;
  v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v57[14];
  if (v58 > 0x7F)
  {
    v59 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v58, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v58;
    v59 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_100116D14((wireless_diagnostics::google::protobuf::internal::WireFormat *)v57, v59, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x20000) == 0)
  {
LABEL_56:
    if ((v26 & 0x40000) == 0)
      goto LABEL_57;
    goto LABEL_143;
  }
LABEL_137:
  v60 = (unsigned int *)*((_QWORD *)this + 18);
  if (!v60)
    v60 = *(unsigned int **)(qword_10085F5D8 + 144);
  *(_WORD *)v4 = 402;
  v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v60[18];
  if (v61 > 0x7F)
  {
    v62 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v61, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v61;
    v62 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000F3E94((wireless_diagnostics::google::protobuf::internal::WireFormat *)v60, v62, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x40000) == 0)
  {
LABEL_57:
    if ((v26 & 0x80000) == 0)
      goto LABEL_58;
    goto LABEL_149;
  }
LABEL_143:
  v63 = (unsigned int *)*((_QWORD *)this + 19);
  if (!v63)
    v63 = *(unsigned int **)(qword_10085F5D8 + 152);
  *(_WORD *)v4 = 410;
  v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v63[12];
  if (v64 > 0x7F)
  {
    v65 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v64, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v64;
    v65 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_100103ACC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v63, v65, a3);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x80000) == 0)
  {
LABEL_58:
    if ((v26 & 0x100000) == 0)
      goto LABEL_59;
    goto LABEL_155;
  }
LABEL_149:
  v66 = (unsigned int *)*((_QWORD *)this + 20);
  if (!v66)
    v66 = *(unsigned int **)(qword_10085F5D8 + 160);
  *(_WORD *)v4 = 418;
  v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v66[10];
  if (v67 > 0x7F)
  {
    v68 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v67, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v67;
    v68 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_100106BB4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v66, v68, a3);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x100000) == 0)
  {
LABEL_59:
    if ((v26 & 0x200000) == 0)
      goto LABEL_60;
    goto LABEL_161;
  }
LABEL_155:
  v69 = (unsigned int *)*((_QWORD *)this + 21);
  if (!v69)
    v69 = *(unsigned int **)(qword_10085F5D8 + 168);
  *(_WORD *)v4 = 426;
  v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v69[12];
  if (v70 > 0x7F)
  {
    v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v70, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v70;
    v71 = (uint64_t)v4 + 3;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100108640((wireless_diagnostics::google::protobuf::internal::WireFormat *)v69, v71, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x200000) == 0)
  {
LABEL_60:
    if ((v26 & 0x400000) == 0)
      goto LABEL_61;
    goto LABEL_167;
  }
LABEL_161:
  v72 = (unsigned int *)*((_QWORD *)this + 22);
  if (!v72)
    v72 = *(unsigned int **)(qword_10085F5D8 + 176);
  *(_WORD *)v4 = 434;
  v73 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v72[9];
  if (v73 > 0x7F)
  {
    v74 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v73, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v73;
    v74 = (uint64_t)v4 + 3;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100109018((wireless_diagnostics::google::protobuf::internal::WireFormat *)v72, v74, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x400000) == 0)
  {
LABEL_61:
    if ((v26 & 0x800000) == 0)
      goto LABEL_62;
    goto LABEL_173;
  }
LABEL_167:
  v75 = (unsigned int *)*((_QWORD *)this + 23);
  if (!v75)
    v75 = *(unsigned int **)(qword_10085F5D8 + 184);
  *(_WORD *)v4 = 442;
  v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v75[19];
  if (v76 > 0x7F)
  {
    v77 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v76, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v76;
    v77 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_100109D8C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v75, v77, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x800000) == 0)
  {
LABEL_62:
    if ((v26 & 0x1000000) == 0)
      goto LABEL_63;
    goto LABEL_179;
  }
LABEL_173:
  v78 = (unsigned int *)*((_QWORD *)this + 24);
  if (!v78)
    v78 = *(unsigned int **)(qword_10085F5D8 + 192);
  *(_WORD *)v4 = 450;
  v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v78[13];
  if (v79 > 0x7F)
  {
    v80 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v79, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v79;
    v80 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_10010AEA8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v78, v80, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x1000000) == 0)
  {
LABEL_63:
    if ((v26 & 0x2000000) == 0)
      goto LABEL_64;
    goto LABEL_185;
  }
LABEL_179:
  v81 = (unsigned int *)*((_QWORD *)this + 25);
  if (!v81)
    v81 = *(unsigned int **)(qword_10085F5D8 + 200);
  *(_WORD *)v4 = 458;
  v82 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v81[34];
  if (v82 > 0x7F)
  {
    v83 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v82, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v82;
    v83 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_10010CBE4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v81, v83, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x2000000) == 0)
  {
LABEL_64:
    if ((v26 & 0x4000000) == 0)
      goto LABEL_65;
    goto LABEL_191;
  }
LABEL_185:
  v84 = (unsigned int *)*((_QWORD *)this + 26);
  if (!v84)
    v84 = *(unsigned int **)(qword_10085F5D8 + 208);
  *(_WORD *)v4 = 466;
  v85 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v84[14];
  if (v85 > 0x7F)
  {
    v86 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v85, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v85;
    v86 = (uint64_t)v4 + 3;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010DCDC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v84, v86, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x4000000) == 0)
  {
LABEL_65:
    if ((v26 & 0x8000000) == 0)
      goto LABEL_66;
    goto LABEL_197;
  }
LABEL_191:
  v87 = (unsigned int *)*((_QWORD *)this + 27);
  if (!v87)
    v87 = *(unsigned int **)(qword_10085F5D8 + 216);
  *(_WORD *)v4 = 474;
  v88 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v87[34];
  if (v88 > 0x7F)
  {
    v89 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v88, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v88;
    v89 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_10010CBE4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v87, v89, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x8000000) == 0)
  {
LABEL_66:
    if ((v26 & 0x10000000) == 0)
      goto LABEL_67;
    goto LABEL_203;
  }
LABEL_197:
  v90 = (unsigned int *)*((_QWORD *)this + 28);
  if (!v90)
    v90 = *(unsigned int **)(qword_10085F5D8 + 224);
  *(_WORD *)v4 = 482;
  v91 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v90[18];
  if (v91 > 0x7F)
  {
    v92 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v91, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v91;
    v92 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000CE448((wireless_diagnostics::google::protobuf::internal::WireFormat *)v90, v92, a3);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x10000000) == 0)
  {
LABEL_67:
    if ((v26 & 0x20000000) == 0)
      goto LABEL_68;
    goto LABEL_209;
  }
LABEL_203:
  v93 = (unsigned int *)*((_QWORD *)this + 29);
  if (!v93)
    v93 = *(unsigned int **)(qword_10085F5D8 + 232);
  *(_WORD *)v4 = 490;
  v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v93[23];
  if (v94 > 0x7F)
  {
    v95 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v94, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v94;
    v95 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000790FC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v93, v95, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x20000000) == 0)
  {
LABEL_68:
    if ((v26 & 0x40000000) == 0)
      goto LABEL_69;
    goto LABEL_215;
  }
LABEL_209:
  v96 = (unsigned int *)*((_QWORD *)this + 30);
  if (!v96)
    v96 = *(unsigned int **)(qword_10085F5D8 + 240);
  *(_WORD *)v4 = 498;
  v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v96[8];
  if (v97 > 0x7F)
  {
    v98 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v97, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v97;
    v98 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_100110060((wireless_diagnostics::google::protobuf::internal::WireFormat *)v96, v98, a3, a4);
  v26 = *((_DWORD *)this + 94);
  if ((v26 & 0x40000000) == 0)
  {
LABEL_69:
    if ((v26 & 0x80000000) == 0)
      goto LABEL_227;
    goto LABEL_221;
  }
LABEL_215:
  v99 = (unsigned int *)*((_QWORD *)this + 31);
  if (!v99)
    v99 = *(unsigned int **)(qword_10085F5D8 + 248);
  *(_WORD *)v4 = 506;
  v100 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v99[21];
  if (v100 > 0x7F)
  {
    v101 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v100, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v100;
    v101 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_10011168C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v99, v101, a3, a4);
  if ((*((_DWORD *)this + 94) & 0x80000000) != 0)
  {
LABEL_221:
    v102 = (unsigned int *)*((_QWORD *)this + 32);
    if (!v102)
      v102 = *(unsigned int **)(qword_10085F5D8 + 256);
    *(_WORD *)v4 = 642;
    v103 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v102[7];
    if (v103 > 0x7F)
    {
      v104 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v103, (int)v4 + 2, a3);
    }
    else
    {
      *((_BYTE *)v4 + 2) = (_BYTE)v103;
      v104 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    }
    v4 = sub_100114634((wireless_diagnostics::google::protobuf::internal::WireFormat *)v102, v104, a3, a4);
  }
LABEL_227:
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 1) != 0)
  {
    v106 = (unsigned int *)*((_QWORD *)this + 33);
    if (!v106)
      v106 = *(unsigned int **)(qword_10085F5D8 + 264);
    *(_WORD *)v4 = 650;
    v107 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v106[6];
    if (v107 > 0x7F)
    {
      v108 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v107, (int)v4 + 2, a3);
    }
    else
    {
      *((_BYTE *)v4 + 2) = (_BYTE)v107;
      v108 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    }
    v4 = sub_100114DB8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v106, v108, a3, a4);
    v105 = *((_DWORD *)this + 95);
    if ((v105 & 2) == 0)
    {
LABEL_229:
      if ((v105 & 4) == 0)
        goto LABEL_230;
      goto LABEL_253;
    }
  }
  else if ((v105 & 2) == 0)
  {
    goto LABEL_229;
  }
  v109 = (unsigned int *)*((_QWORD *)this + 34);
  if (!v109)
    v109 = *(unsigned int **)(qword_10085F5D8 + 272);
  *(_WORD *)v4 = 658;
  v110 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v109[12];
  if (v110 > 0x7F)
  {
    v111 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v110, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v110;
    v111 = (char *)v4 + 3;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001156D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v109, v111, a3, a4);
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 4) == 0)
  {
LABEL_230:
    if ((v105 & 8) == 0)
      goto LABEL_231;
    goto LABEL_259;
  }
LABEL_253:
  v112 = (unsigned int *)*((_QWORD *)this + 35);
  if (!v112)
    v112 = *(unsigned int **)(qword_10085F5D8 + 280);
  *(_WORD *)v4 = 666;
  v113 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v112[25];
  if (v113 > 0x7F)
  {
    v114 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v113, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v113;
    v114 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_100113890((wireless_diagnostics::google::protobuf::internal::WireFormat *)v112, v114, a3, a4);
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 8) == 0)
  {
LABEL_231:
    if ((v105 & 0x10) == 0)
      goto LABEL_232;
    goto LABEL_265;
  }
LABEL_259:
  v115 = (unsigned int *)*((_QWORD *)this + 36);
  if (!v115)
    v115 = *(unsigned int **)(qword_10085F5D8 + 288);
  *(_WORD *)v4 = 674;
  v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v115[34];
  if (v116 > 0x7F)
  {
    v117 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v116, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v116;
    v117 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_10010CBE4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v115, v117, a3, a4);
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 0x10) == 0)
  {
LABEL_232:
    if ((v105 & 0x20) == 0)
      goto LABEL_233;
    goto LABEL_271;
  }
LABEL_265:
  v118 = (unsigned int *)*((_QWORD *)this + 37);
  if (!v118)
    v118 = *(unsigned int **)(qword_10085F5D8 + 296);
  *(_WORD *)v4 = 682;
  v119 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v118[28];
  if (v119 > 0x7F)
  {
    v120 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v119, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v119;
    v120 = (uint64_t)v4 + 3;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10007A3C8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v118, v120, a3, a4);
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 0x20) == 0)
  {
LABEL_233:
    if ((v105 & 0x40) == 0)
      goto LABEL_234;
    goto LABEL_277;
  }
LABEL_271:
  v121 = (unsigned int *)*((_QWORD *)this + 38);
  if (!v121)
    v121 = *(unsigned int **)(qword_10085F5D8 + 304);
  *(_WORD *)v4 = 690;
  v122 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v121[8];
  if (v122 > 0x7F)
  {
    v123 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v122, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v122;
    v123 = (uint64_t)v4 + 3;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001108D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v121, v123, a3, a4);
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 0x40) == 0)
  {
LABEL_234:
    if ((v105 & 0x80) == 0)
      goto LABEL_235;
    goto LABEL_283;
  }
LABEL_277:
  v124 = (unsigned int *)*((_QWORD *)this + 39);
  if (!v124)
    v124 = *(unsigned int **)(qword_10085F5D8 + 312);
  *(_WORD *)v4 = 698;
  v125 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v124[10];
  if (v125 > 0x7F)
  {
    v126 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v125, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v125;
    v126 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_100116168((wireless_diagnostics::google::protobuf::internal::WireFormat *)v124, v126, a3, a4);
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 0x80) == 0)
  {
LABEL_235:
    if ((v105 & 0x100) == 0)
      goto LABEL_236;
    goto LABEL_289;
  }
LABEL_283:
  v127 = (unsigned int *)*((_QWORD *)this + 40);
  if (!v127)
    v127 = *(unsigned int **)(qword_10085F5D8 + 320);
  *(_WORD *)v4 = 706;
  v128 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v127[10];
  if (v128 > 0x7F)
  {
    v129 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v128, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v128;
    v129 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_10007BA30((wireless_diagnostics::google::protobuf::internal::WireFormat *)v127, v129, a3, a4);
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 0x100) == 0)
  {
LABEL_236:
    if ((v105 & 0x200) == 0)
      goto LABEL_237;
    goto LABEL_295;
  }
LABEL_289:
  v130 = (unsigned int *)*((_QWORD *)this + 41);
  if (!v130)
    v130 = *(unsigned int **)(qword_10085F5D8 + 328);
  *(_WORD *)v4 = 714;
  v131 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v130[12];
  if (v131 > 0x7F)
  {
    v132 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v131, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v131;
    v132 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_10010F5DC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v130, v132, a3, a4);
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 0x200) == 0)
  {
LABEL_237:
    if ((v105 & 0x400) == 0)
      goto LABEL_238;
    goto LABEL_301;
  }
LABEL_295:
  v133 = (unsigned int *)*((_QWORD *)this + 42);
  if (!v133)
    v133 = *(unsigned int **)(qword_10085F5D8 + 336);
  *(_WORD *)v4 = 722;
  v134 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v133[30];
  if (v134 > 0x7F)
  {
    v135 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v134, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v134;
    v135 = (uint64_t)v4 + 3;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100118130((wireless_diagnostics::google::protobuf::internal::WireFormat *)v133, v135, a3);
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 0x400) == 0)
  {
LABEL_238:
    if ((v105 & 0x800) == 0)
      goto LABEL_239;
    goto LABEL_307;
  }
LABEL_301:
  v136 = (unsigned int *)*((_QWORD *)this + 43);
  if (!v136)
    v136 = *(unsigned int **)(qword_10085F5D8 + 344);
  *(_WORD *)v4 = 730;
  v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v136[9];
  if (v137 > 0x7F)
  {
    v138 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v137, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v137;
    v138 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_100118E84((wireless_diagnostics::google::protobuf::internal::WireFormat *)v136, v138, a3);
  v105 = *((_DWORD *)this + 95);
  if ((v105 & 0x800) == 0)
  {
LABEL_239:
    if ((v105 & 0x1000) == 0)
      goto LABEL_319;
    goto LABEL_313;
  }
LABEL_307:
  v139 = (unsigned int *)*((_QWORD *)this + 44);
  if (!v139)
    v139 = *(unsigned int **)(qword_10085F5D8 + 352);
  *(_WORD *)v4 = 738;
  v140 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v139[7];
  if (v140 > 0x7F)
  {
    v141 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v140, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v140;
    v141 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_10011A4B4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v139, v141, a3);
  if ((*((_DWORD *)this + 95) & 0x1000) != 0)
  {
LABEL_313:
    v142 = (unsigned int *)*((_QWORD *)this + 45);
    if (!v142)
      v142 = *(unsigned int **)(qword_10085F5D8 + 360);
    *(_WORD *)v4 = 746;
    v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v142[9];
    if (v143 > 0x7F)
    {
      v144 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v143, (int)v4 + 2, a3);
    }
    else
    {
      *((_BYTE *)v4 + 2) = (_BYTE)v143;
      v144 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    }
    v4 = sub_10011B99C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v142, v144, a3);
  }
LABEL_319:
  v147 = (_QWORD *)*((_QWORD *)this + 1);
  v146 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v145 = v147;
  if (!v147 || *v145 == v145[1])
    return v4;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v146, v4, a3);
}

uint64_t sub_10008241C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  _DWORD *v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  int v30;
  uint64_t v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;
  int v34;
  uint64_t v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  int v37;
  int v38;
  uint64_t v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  int v41;
  int v42;
  uint64_t v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  int v45;
  int v46;
  uint64_t v47;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v48;
  int v49;
  int v50;
  uint64_t v51;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v52;
  int v53;
  int v54;
  uint64_t v55;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v56;
  int v57;
  int v58;
  uint64_t v59;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v60;
  int v61;
  int v62;
  uint64_t v63;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v64;
  int v65;
  int v66;
  uint64_t v67;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v68;
  int v69;
  int v70;
  uint64_t v71;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v72;
  int v73;
  int v74;
  uint64_t v75;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v76;
  int v77;
  int v78;
  uint64_t v79;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v80;
  int v81;
  int v82;
  uint64_t v83;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v84;
  int v85;
  int v86;
  uint64_t v87;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v88;
  int v89;
  int v90;
  uint64_t v91;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v92;
  int v93;
  int v94;
  uint64_t v95;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v96;
  int v97;
  int v98;
  uint64_t v99;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v100;
  int v101;
  int v102;
  uint64_t v103;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v104;
  int v105;
  int v106;
  uint64_t v107;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v108;
  int v109;
  int v110;
  uint64_t v111;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v112;
  int v113;
  int v114;
  uint64_t v115;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v116;
  int v117;
  int v118;
  uint64_t v119;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v120;
  int v121;
  int v122;
  uint64_t v123;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v124;
  int v125;
  int v126;
  uint64_t v127;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v128;
  int v129;
  int v130;
  int v131;
  uint64_t v132;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v133;
  int v134;
  int v135;
  uint64_t v136;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v137;
  int v138;
  int v139;
  uint64_t v140;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v141;
  int v142;
  int v143;
  uint64_t v144;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v145;
  int v146;
  int v147;
  uint64_t v148;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v149;
  int v150;
  int v151;
  uint64_t v152;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v153;
  int v154;
  int v155;
  uint64_t v156;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v157;
  int v158;
  int v159;
  uint64_t v160;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v161;
  int v162;
  int v163;
  uint64_t v164;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v165;
  int v166;
  int v167;
  uint64_t v168;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v169;
  int v170;
  int v171;
  uint64_t v172;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v173;
  int v174;
  int v175;
  uint64_t v176;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v177;
  int v178;
  int v179;
  uint64_t v180;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v181;
  int v182;
  int v183;
  _QWORD *v184;

  v3 = *(_DWORD *)(a1 + 376);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_61;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    v5 = *(_QWORD *)(qword_10085F5D8 + 16);
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006EA94(v5, a2);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  else
    v8 = 1;
  v4 = (v7 + v8 + 1);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v9 = *(_QWORD *)(a1 + 24);
    if (!v9)
      v9 = *(_QWORD *)(qword_10085F5D8 + 24);
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000BC854(v9, a2);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    else
      v12 = 1;
    v4 = (v4 + v11 + v12 + 1);
    v3 = *(_DWORD *)(a1 + 376);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    v13 = *(_QWORD *)(a1 + 32);
    if (!v13)
      v13 = *(_QWORD *)(qword_10085F5D8 + 32);
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000BD170(v13, a2);
    v15 = (int)v14;
    if (v14 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    else
      v16 = 1;
    v4 = (v4 + v15 + v16 + 1);
    v3 = *(_DWORD *)(a1 + 376);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  v17 = *(_QWORD *)(a1 + 40);
  if (!v17)
    v17 = *(_QWORD *)(qword_10085F5D8 + 40);
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000BDA40(v17, a2);
  v19 = (int)v18;
  if (v18 >= 0x80)
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  else
    v20 = 1;
  v4 = (v4 + v19 + v20 + 1);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_43;
  }
LABEL_37:
  v21 = *(_QWORD *)(a1 + 48);
  if (!v21)
    v21 = *(_QWORD *)(qword_10085F5D8 + 48);
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011F990(v21, a2);
  v23 = (int)v22;
  if (v22 >= 0x80)
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  else
    v24 = 1;
  v4 = (v4 + v23 + v24 + 1);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_49;
  }
LABEL_43:
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 368);
  if ((v25 & 0x80000000) != 0)
  {
    v26 = 10;
  }
  else if (v25 >= 0x80)
  {
    v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
    v3 = *(_DWORD *)(a1 + 376);
  }
  else
  {
    v26 = 1;
  }
  v4 = (v4 + v26 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0)
      goto LABEL_61;
    goto LABEL_55;
  }
LABEL_49:
  v27 = *(_DWORD **)(a1 + 56);
  if (!v27)
    v27 = *(_DWORD **)(qword_10085F5D8 + 56);
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006FA0C(v27, a2);
  v29 = (int)v28;
  if (v28 >= 0x80)
    v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
  else
    v30 = 1;
  v4 = (v4 + v29 + v30 + 1);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x80) != 0)
  {
LABEL_55:
    v31 = *(_QWORD *)(a1 + 64);
    if (!v31)
      v31 = *(_QWORD *)(qword_10085F5D8 + 64);
    v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100071024(v31, a2);
    v33 = (int)v32;
    if (v32 >= 0x80)
      v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32, a2);
    else
      v34 = 1;
    v4 = (v4 + v33 + v34 + 1);
    v3 = *(_DWORD *)(a1 + 376);
  }
LABEL_61:
  if ((v3 & 0xFF00) == 0)
    goto LABEL_119;
  if ((v3 & 0x100) != 0)
  {
    v35 = *(_QWORD *)(a1 + 72);
    if (!v35)
      v35 = *(_QWORD *)(qword_10085F5D8 + 72);
    v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000719B0(v35, a2);
    v37 = (int)v36;
    if (v36 >= 0x80)
      v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2);
    else
      v38 = 1;
    v4 = (v4 + v37 + v38 + 1);
    v3 = *(_DWORD *)(a1 + 376);
    if ((v3 & 0x200) == 0)
    {
LABEL_64:
      if ((v3 & 0x400) == 0)
        goto LABEL_65;
      goto LABEL_83;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_64;
  }
  v39 = *(_QWORD *)(a1 + 80);
  if (!v39)
    v39 = *(_QWORD *)(qword_10085F5D8 + 80);
  v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100072FB8(v39, a2);
  v41 = (int)v40;
  if (v40 >= 0x80)
    v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40, a2);
  else
    v42 = 1;
  v4 = (v4 + v41 + v42 + 1);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x400) == 0)
  {
LABEL_65:
    if ((v3 & 0x800) == 0)
      goto LABEL_66;
    goto LABEL_89;
  }
LABEL_83:
  v43 = *(_QWORD *)(a1 + 88);
  if (!v43)
    v43 = *(_QWORD *)(qword_10085F5D8 + 88);
  v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100073AE4(v43, a2);
  v45 = (int)v44;
  if (v44 >= 0x80)
    v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44, a2);
  else
    v46 = 1;
  v4 = (v4 + v45 + v46 + 1);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x800) == 0)
  {
LABEL_66:
    if ((v3 & 0x1000) == 0)
      goto LABEL_67;
    goto LABEL_95;
  }
LABEL_89:
  v47 = *(_QWORD *)(a1 + 96);
  if (!v47)
    v47 = *(_QWORD *)(qword_10085F5D8 + 96);
  v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007441C(v47, a2);
  v49 = (int)v48;
  if (v48 >= 0x80)
    v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48, a2);
  else
    v50 = 1;
  v4 = (v4 + v49 + v50 + 1);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x1000) == 0)
  {
LABEL_67:
    if ((v3 & 0x2000) == 0)
      goto LABEL_68;
    goto LABEL_101;
  }
LABEL_95:
  v51 = *(_QWORD *)(a1 + 104);
  if (!v51)
    v51 = *(_QWORD *)(qword_10085F5D8 + 104);
  v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100074EC8(v51, a2);
  v53 = (int)v52;
  if (v52 >= 0x80)
    v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52, a2);
  else
    v54 = 1;
  v4 = (v4 + v53 + v54 + 1);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x2000) == 0)
  {
LABEL_68:
    if ((v3 & 0x4000) == 0)
      goto LABEL_69;
    goto LABEL_107;
  }
LABEL_101:
  v55 = *(_QWORD *)(a1 + 112);
  if (!v55)
    v55 = *(_QWORD *)(qword_10085F5D8 + 112);
  v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000E68E8(v55, a2);
  v57 = (int)v56;
  if (v56 >= 0x80)
    v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56, a2);
  else
    v58 = 1;
  v4 = (v4 + v57 + v58 + 1);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x4000) == 0)
  {
LABEL_69:
    if ((v3 & 0x8000) == 0)
      goto LABEL_119;
    goto LABEL_113;
  }
LABEL_107:
  v59 = *(_QWORD *)(a1 + 120);
  if (!v59)
    v59 = *(_QWORD *)(qword_10085F5D8 + 120);
  v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000FFAA8(v59, a2);
  v61 = (int)v60;
  if (v60 >= 0x80)
    v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60, a2);
  else
    v62 = 1;
  v4 = (v4 + v61 + v62 + 1);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x8000) != 0)
  {
LABEL_113:
    v63 = *(_QWORD *)(a1 + 128);
    if (!v63)
      v63 = *(_QWORD *)(qword_10085F5D8 + 128);
    v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100107CAC(v63, a2);
    v65 = (int)v64;
    if (v64 >= 0x80)
      v66 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64, a2);
    else
      v66 = 1;
    v4 = (v4 + v65 + v66 + 2);
    v3 = *(_DWORD *)(a1 + 376);
  }
LABEL_119:
  if ((v3 & 0xFF0000) == 0)
    goto LABEL_177;
  if ((v3 & 0x10000) != 0)
  {
    v67 = *(_QWORD *)(a1 + 136);
    if (!v67)
      v67 = *(_QWORD *)(qword_10085F5D8 + 136);
    v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100116E8C(v67, a2);
    v69 = (int)v68;
    if (v68 >= 0x80)
      v70 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68, a2);
    else
      v70 = 1;
    v4 = (v4 + v69 + v70 + 2);
    v3 = *(_DWORD *)(a1 + 376);
    if ((v3 & 0x20000) == 0)
    {
LABEL_122:
      if ((v3 & 0x40000) == 0)
        goto LABEL_123;
      goto LABEL_141;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_122;
  }
  v71 = *(_QWORD *)(a1 + 144);
  if (!v71)
    v71 = *(_QWORD *)(qword_10085F5D8 + 144);
  v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F41D4(v71, a2);
  v73 = (int)v72;
  if (v72 >= 0x80)
    v74 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72, a2);
  else
    v74 = 1;
  v4 = (v4 + v73 + v74 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x40000) == 0)
  {
LABEL_123:
    if ((v3 & 0x80000) == 0)
      goto LABEL_124;
    goto LABEL_147;
  }
LABEL_141:
  v75 = *(_QWORD *)(a1 + 152);
  if (!v75)
    v75 = *(_QWORD *)(qword_10085F5D8 + 152);
  v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100103BD8(v75, a2);
  v77 = (int)v76;
  if (v76 >= 0x80)
    v78 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v76, a2);
  else
    v78 = 1;
  v4 = (v4 + v77 + v78 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x80000) == 0)
  {
LABEL_124:
    if ((v3 & 0x100000) == 0)
      goto LABEL_125;
    goto LABEL_153;
  }
LABEL_147:
  v79 = *(_QWORD *)(a1 + 160);
  if (!v79)
    v79 = *(_QWORD *)(qword_10085F5D8 + 160);
  v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100106D08(v79, a2);
  v81 = (int)v80;
  if (v80 >= 0x80)
    v82 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v80, a2);
  else
    v82 = 1;
  v4 = (v4 + v81 + v82 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x100000) == 0)
  {
LABEL_125:
    if ((v3 & 0x200000) == 0)
      goto LABEL_126;
    goto LABEL_159;
  }
LABEL_153:
  v83 = *(_QWORD *)(a1 + 168);
  if (!v83)
    v83 = *(_QWORD *)(qword_10085F5D8 + 168);
  v84 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100108800(v83, a2);
  v85 = (int)v84;
  if (v84 >= 0x80)
    v86 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v84, a2);
  else
    v86 = 1;
  v4 = (v4 + v85 + v86 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x200000) == 0)
  {
LABEL_126:
    if ((v3 & 0x400000) == 0)
      goto LABEL_127;
    goto LABEL_165;
  }
LABEL_159:
  v87 = *(_QWORD *)(a1 + 176);
  if (!v87)
    v87 = *(_QWORD *)(qword_10085F5D8 + 176);
  v88 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100109148(v87, a2);
  v89 = (int)v88;
  if (v88 >= 0x80)
    v90 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v88, a2);
  else
    v90 = 1;
  v4 = (v4 + v89 + v90 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x400000) == 0)
  {
LABEL_127:
    if ((v3 & 0x800000) == 0)
      goto LABEL_177;
    goto LABEL_171;
  }
LABEL_165:
  v91 = *(_QWORD *)(a1 + 184);
  if (!v91)
    v91 = *(_QWORD *)(qword_10085F5D8 + 184);
  v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010A0A0(v91, a2);
  v93 = (int)v92;
  if (v92 >= 0x80)
    v94 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92, a2);
  else
    v94 = 1;
  v4 = (v4 + v93 + v94 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x800000) != 0)
  {
LABEL_171:
    v95 = *(_QWORD *)(a1 + 192);
    if (!v95)
      v95 = *(_QWORD *)(qword_10085F5D8 + 192);
    v96 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010B114(v95, a2);
    v97 = (int)v96;
    if (v96 >= 0x80)
      v98 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v96, a2);
    else
      v98 = 1;
    v4 = (v4 + v97 + v98 + 2);
    v3 = *(_DWORD *)(a1 + 376);
  }
LABEL_177:
  if (!HIBYTE(v3))
    goto LABEL_235;
  if ((v3 & 0x1000000) != 0)
  {
    v99 = *(_QWORD *)(a1 + 200);
    if (!v99)
      v99 = *(_QWORD *)(qword_10085F5D8 + 200);
    v100 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010D1C4(v99, a2);
    v101 = (int)v100;
    if (v100 >= 0x80)
      v102 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v100, a2);
    else
      v102 = 1;
    v4 = (v4 + v101 + v102 + 2);
    v3 = *(_DWORD *)(a1 + 376);
    if ((v3 & 0x2000000) == 0)
    {
LABEL_180:
      if ((v3 & 0x4000000) == 0)
        goto LABEL_181;
      goto LABEL_199;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_180;
  }
  v103 = *(_QWORD *)(a1 + 208);
  if (!v103)
    v103 = *(_QWORD *)(qword_10085F5D8 + 208);
  v104 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010DEF4(v103, a2);
  v105 = (int)v104;
  if (v104 >= 0x80)
    v106 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v104, a2);
  else
    v106 = 1;
  v4 = (v4 + v105 + v106 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x4000000) == 0)
  {
LABEL_181:
    if ((v3 & 0x8000000) == 0)
      goto LABEL_182;
    goto LABEL_205;
  }
LABEL_199:
  v107 = *(_QWORD *)(a1 + 216);
  if (!v107)
    v107 = *(_QWORD *)(qword_10085F5D8 + 216);
  v108 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010D1C4(v107, a2);
  v109 = (int)v108;
  if (v108 >= 0x80)
    v110 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v108, a2);
  else
    v110 = 1;
  v4 = (v4 + v109 + v110 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x8000000) == 0)
  {
LABEL_182:
    if ((v3 & 0x10000000) == 0)
      goto LABEL_183;
    goto LABEL_211;
  }
LABEL_205:
  v111 = *(_QWORD *)(a1 + 224);
  if (!v111)
    v111 = *(_QWORD *)(qword_10085F5D8 + 224);
  v112 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CE6FC(v111, a2);
  v113 = (int)v112;
  if (v112 >= 0x80)
    v114 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v112, a2);
  else
    v114 = 1;
  v4 = (v4 + v113 + v114 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x10000000) == 0)
  {
LABEL_183:
    if ((v3 & 0x20000000) == 0)
      goto LABEL_184;
    goto LABEL_217;
  }
LABEL_211:
  v115 = *(_QWORD *)(a1 + 232);
  if (!v115)
    v115 = *(_QWORD *)(qword_10085F5D8 + 232);
  v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100079498(v115, a2);
  v117 = (int)v116;
  if (v116 >= 0x80)
    v118 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v116, a2);
  else
    v118 = 1;
  v4 = (v4 + v117 + v118 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x20000000) == 0)
  {
LABEL_184:
    if ((v3 & 0x40000000) == 0)
      goto LABEL_185;
    goto LABEL_223;
  }
LABEL_217:
  v119 = *(_QWORD *)(a1 + 240);
  if (!v119)
    v119 = *(_QWORD *)(qword_10085F5D8 + 240);
  v120 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011016C(v119, a2);
  v121 = (int)v120;
  if (v120 >= 0x80)
    v122 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v120, a2);
  else
    v122 = 1;
  v4 = (v4 + v121 + v122 + 2);
  v3 = *(_DWORD *)(a1 + 376);
  if ((v3 & 0x40000000) == 0)
  {
LABEL_185:
    if ((v3 & 0x80000000) == 0)
      goto LABEL_235;
    goto LABEL_229;
  }
LABEL_223:
  v123 = *(_QWORD *)(a1 + 248);
  if (!v123)
    v123 = *(_QWORD *)(qword_10085F5D8 + 248);
  v124 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001119C0(v123, a2);
  v125 = (int)v124;
  if (v124 >= 0x80)
    v126 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v124, a2);
  else
    v126 = 1;
  v4 = (v4 + v125 + v126 + 2);
  if ((*(_DWORD *)(a1 + 376) & 0x80000000) != 0)
  {
LABEL_229:
    v127 = *(_QWORD *)(a1 + 256);
    if (!v127)
      v127 = *(_QWORD *)(qword_10085F5D8 + 256);
    v128 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011472C(v127, a2);
    v129 = (int)v128;
    if (v128 >= 0x80)
      v130 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v128, a2);
    else
      v130 = 1;
    v4 = (v4 + v129 + v130 + 2);
  }
LABEL_235:
  v131 = *(_DWORD *)(a1 + 380);
  if (!(_BYTE)v131)
    goto LABEL_293;
  if ((v131 & 1) != 0)
  {
    v132 = *(_QWORD *)(a1 + 264);
    if (!v132)
      v132 = *(_QWORD *)(qword_10085F5D8 + 264);
    v133 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100114E6C(v132, a2);
    v134 = (int)v133;
    if (v133 >= 0x80)
      v135 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v133, a2);
    else
      v135 = 1;
    v4 = (v4 + v134 + v135 + 2);
    v131 = *(_DWORD *)(a1 + 380);
    if ((v131 & 2) == 0)
    {
LABEL_238:
      if ((v131 & 4) == 0)
        goto LABEL_239;
      goto LABEL_257;
    }
  }
  else if ((v131 & 2) == 0)
  {
    goto LABEL_238;
  }
  v136 = *(_QWORD *)(a1 + 272);
  if (!v136)
    v136 = *(_QWORD *)(qword_10085F5D8 + 272);
  v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100115894(v136, a2);
  v138 = (int)v137;
  if (v137 >= 0x80)
    v139 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v137, a2);
  else
    v139 = 1;
  v4 = (v4 + v138 + v139 + 2);
  v131 = *(_DWORD *)(a1 + 380);
  if ((v131 & 4) == 0)
  {
LABEL_239:
    if ((v131 & 8) == 0)
      goto LABEL_240;
    goto LABEL_263;
  }
LABEL_257:
  v140 = *(_QWORD *)(a1 + 280);
  if (!v140)
    v140 = *(_QWORD *)(qword_10085F5D8 + 280);
  v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100113CD4(v140, a2);
  v142 = (int)v141;
  if (v141 >= 0x80)
    v143 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v141, a2);
  else
    v143 = 1;
  v4 = (v4 + v142 + v143 + 2);
  v131 = *(_DWORD *)(a1 + 380);
  if ((v131 & 8) == 0)
  {
LABEL_240:
    if ((v131 & 0x10) == 0)
      goto LABEL_241;
    goto LABEL_269;
  }
LABEL_263:
  v144 = *(_QWORD *)(a1 + 288);
  if (!v144)
    v144 = *(_QWORD *)(qword_10085F5D8 + 288);
  v145 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010D1C4(v144, a2);
  v146 = (int)v145;
  if (v145 >= 0x80)
    v147 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v145, a2);
  else
    v147 = 1;
  v4 = (v4 + v146 + v147 + 2);
  v131 = *(_DWORD *)(a1 + 380);
  if ((v131 & 0x10) == 0)
  {
LABEL_241:
    if ((v131 & 0x20) == 0)
      goto LABEL_242;
    goto LABEL_275;
  }
LABEL_269:
  v148 = *(_QWORD *)(a1 + 296);
  if (!v148)
    v148 = *(_QWORD *)(qword_10085F5D8 + 296);
  v149 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007A848(v148, a2);
  v150 = (int)v149;
  if (v149 >= 0x80)
    v151 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v149, a2);
  else
    v151 = 1;
  v4 = (v4 + v150 + v151 + 2);
  v131 = *(_DWORD *)(a1 + 380);
  if ((v131 & 0x20) == 0)
  {
LABEL_242:
    if ((v131 & 0x40) == 0)
      goto LABEL_243;
    goto LABEL_281;
  }
LABEL_275:
  v152 = *(_QWORD *)(a1 + 304);
  if (!v152)
    v152 = *(_QWORD *)(qword_10085F5D8 + 304);
  v153 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001109DC(v152, a2);
  v154 = (int)v153;
  if (v153 >= 0x80)
    v155 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v153, a2);
  else
    v155 = 1;
  v4 = (v4 + v154 + v155 + 2);
  v131 = *(_DWORD *)(a1 + 380);
  if ((v131 & 0x40) == 0)
  {
LABEL_243:
    if ((v131 & 0x80) == 0)
      goto LABEL_293;
    goto LABEL_287;
  }
LABEL_281:
  v156 = *(_QWORD *)(a1 + 312);
  if (!v156)
    v156 = *(_QWORD *)(qword_10085F5D8 + 312);
  v157 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001162E8(v156, a2);
  v158 = (int)v157;
  if (v157 >= 0x80)
    v159 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v157, a2);
  else
    v159 = 1;
  v4 = (v4 + v158 + v159 + 2);
  v131 = *(_DWORD *)(a1 + 380);
  if ((v131 & 0x80) != 0)
  {
LABEL_287:
    v160 = *(_QWORD *)(a1 + 320);
    if (!v160)
      v160 = *(_QWORD *)(qword_10085F5D8 + 320);
    v161 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007BAE8(v160, a2);
    v162 = (int)v161;
    if (v161 >= 0x80)
      v163 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v161, a2);
    else
      v163 = 1;
    v4 = (v4 + v162 + v163 + 2);
    v131 = *(_DWORD *)(a1 + 380);
  }
LABEL_293:
  if ((v131 & 0xFF00) == 0)
    goto LABEL_330;
  if ((v131 & 0x100) != 0)
  {
    v164 = *(_QWORD *)(a1 + 328);
    if (!v164)
      v164 = *(_QWORD *)(qword_10085F5D8 + 328);
    v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010F700(v164, a2);
    v166 = (int)v165;
    if (v165 >= 0x80)
      v167 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v165, a2);
    else
      v167 = 1;
    v4 = (v4 + v166 + v167 + 2);
    v131 = *(_DWORD *)(a1 + 380);
    if ((v131 & 0x200) == 0)
    {
LABEL_296:
      if ((v131 & 0x400) == 0)
        goto LABEL_297;
      goto LABEL_312;
    }
  }
  else if ((v131 & 0x200) == 0)
  {
    goto LABEL_296;
  }
  v168 = *(_QWORD *)(a1 + 336);
  if (!v168)
    v168 = *(_QWORD *)(qword_10085F5D8 + 336);
  v169 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100118508(v168, a2);
  v170 = (int)v169;
  if (v169 >= 0x80)
    v171 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v169, a2);
  else
    v171 = 1;
  v4 = (v4 + v170 + v171 + 2);
  v131 = *(_DWORD *)(a1 + 380);
  if ((v131 & 0x400) == 0)
  {
LABEL_297:
    if ((v131 & 0x800) == 0)
      goto LABEL_298;
    goto LABEL_318;
  }
LABEL_312:
  v172 = *(_QWORD *)(a1 + 344);
  if (!v172)
    v172 = *(_QWORD *)(qword_10085F5D8 + 344);
  v173 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100118FA4(v172, a2);
  v174 = (int)v173;
  if (v173 >= 0x80)
    v175 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v173, a2);
  else
    v175 = 1;
  v4 = (v4 + v174 + v175 + 2);
  v131 = *(_DWORD *)(a1 + 380);
  if ((v131 & 0x800) == 0)
  {
LABEL_298:
    if ((v131 & 0x1000) == 0)
      goto LABEL_330;
    goto LABEL_324;
  }
LABEL_318:
  v176 = *(_QWORD *)(a1 + 352);
  if (!v176)
    v176 = *(_QWORD *)(qword_10085F5D8 + 352);
  v177 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011A588(v176, a2);
  v178 = (int)v177;
  if (v177 >= 0x80)
    v179 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v177, a2);
  else
    v179 = 1;
  v4 = (v4 + v178 + v179 + 2);
  if ((*(_DWORD *)(a1 + 380) & 0x1000) != 0)
  {
LABEL_324:
    v180 = *(_QWORD *)(a1 + 360);
    if (!v180)
      v180 = *(_QWORD *)(qword_10085F5D8 + 360);
    v181 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011BA8C(v180, a2);
    v182 = (int)v181;
    if (v181 >= 0x80)
      v183 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v181, a2);
    else
      v183 = 1;
    v4 = (v4 + v182 + v183 + 2);
  }
LABEL_330:
  v184 = *(_QWORD **)(a1 + 8);
  if (v184 && *v184 != v184[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 372) = v4;
  return v4;
}

uint64_t sub_1000831E8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", 10001);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10007BD98((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100083290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000832A8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1000832F0()
{
  return 1;
}

uint64_t sub_1000832F8()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_100854470;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006BE40;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_100854470, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854308;
}

void sub_100083370(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100083384(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008338C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100083394(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10008339C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1000833A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_1000833AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000833B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 104);
}

uint64_t sub_1000833BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000833C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1000833CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1000833D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_1000833DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000833E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000833EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1000833F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1000833FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_100083404(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

uint64_t sub_10008340C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100083414(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10008341C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 372);
}

void sub_100083424()
{
  operator new();
}

void sub_100083460()
{
  operator delete();
}

void sub_100083484()
{
  operator new();
}

void sub_1000834C0()
{
  operator delete();
}

void sub_1000834E8()
{
  wireless_diagnostics::google::protobuf::DescriptorPool *v0;
  uint64_t v1;
  uint64_t FileByName;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *__p[2];
  char v7;

  v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_100084CA0();
  v1 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  sub_10000BF04(__p, "CLPRoseCommunicationEvent.proto");
  FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v1, __p);
  v3 = FileByName;
  if (v7 < 0)
  {
    operator delete(__p[0]);
    if (v3)
      goto LABEL_6;
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(__p, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 182);
  v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: file != NULL: ");
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v5, v4);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  qword_100854478 = *(_QWORD *)(v3 + 80);
  operator new();
}

void sub_100084BAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  _Unwind_Resume(a1);
}

void sub_100084CA0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  int v4;

  if ((byte_1008547C0 & 1) == 0)
  {
    byte_1008547C0 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_10045BB74, (const void *)0x62F8, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("CLPRoseCommunicationEvent.proto", sub_1000861E8);
    operator new();
  }
}

void sub_1000856A0()
{
  operator delete();
}

void sub_1000859DC()
{
  JUMPOUT(0x1000859C8);
}

uint64_t sub_1000859F4()
{
  uint64_t result;

  if (qword_10085F670)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F670 + 8))(qword_10085F670);
  if (qword_100854480)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854480 + 8))(qword_100854480);
  if (qword_10085F678)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F678 + 8))(qword_10085F678);
  if (qword_100854490)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854490 + 8))(qword_100854490);
  if (qword_10085F680)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F680 + 8))(qword_10085F680);
  if (qword_1008544A0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008544A0 + 8))(qword_1008544A0);
  if (qword_10085F688)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F688 + 8))(qword_10085F688);
  if (qword_1008544B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008544B0 + 8))(qword_1008544B0);
  if (qword_10085F690)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F690 + 8))(qword_10085F690);
  if (qword_1008544C0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008544C0 + 8))(qword_1008544C0);
  if (qword_10085F698)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F698 + 8))(qword_10085F698);
  if (qword_1008544D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008544D0 + 8))(qword_1008544D0);
  if (qword_10085F6A0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6A0 + 8))(qword_10085F6A0);
  if (qword_1008544E0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008544E0 + 8))(qword_1008544E0);
  if (qword_10085F6A8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6A8 + 8))(qword_10085F6A8);
  if (qword_1008544F0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008544F0 + 8))(qword_1008544F0);
  if (qword_10085F6B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6B0 + 8))(qword_10085F6B0);
  if (qword_100854500)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854500 + 8))(qword_100854500);
  if (qword_10085F6B8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6B8 + 8))(qword_10085F6B8);
  if (qword_100854510)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854510 + 8))(qword_100854510);
  if (qword_10085F6C0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6C0 + 8))(qword_10085F6C0);
  if (qword_100854520)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854520 + 8))(qword_100854520);
  if (qword_10085F6C8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6C8 + 8))(qword_10085F6C8);
  if (qword_100854530)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854530 + 8))(qword_100854530);
  if (qword_10085F6D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6D0 + 8))(qword_10085F6D0);
  if (qword_100854540)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854540 + 8))(qword_100854540);
  if (qword_10085F6D8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6D8 + 8))(qword_10085F6D8);
  if (qword_100854550)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854550 + 8))(qword_100854550);
  if (qword_10085F6E0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6E0 + 8))(qword_10085F6E0);
  if (qword_100854560)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854560 + 8))(qword_100854560);
  if (qword_10085F6E8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6E8 + 8))(qword_10085F6E8);
  if (qword_100854570)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854570 + 8))(qword_100854570);
  if (qword_10085F6F0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6F0 + 8))(qword_10085F6F0);
  if (qword_100854580)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854580 + 8))(qword_100854580);
  if (qword_10085F6F8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F6F8 + 8))(qword_10085F6F8);
  if (qword_100854590)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854590 + 8))(qword_100854590);
  if (qword_10085F700)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F700 + 8))(qword_10085F700);
  if (qword_1008545A0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008545A0 + 8))(qword_1008545A0);
  if (qword_10085F708)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F708 + 8))(qword_10085F708);
  if (qword_1008545B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008545B0 + 8))(qword_1008545B0);
  if (qword_10085F710)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F710 + 8))(qword_10085F710);
  if (qword_1008545C0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008545C0 + 8))(qword_1008545C0);
  if (qword_10085F718)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F718 + 8))(qword_10085F718);
  if (qword_1008545D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008545D0 + 8))(qword_1008545D0);
  if (qword_10085F720)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F720 + 8))(qword_10085F720);
  if (qword_1008545E0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008545E0 + 8))(qword_1008545E0);
  if (qword_10085F728)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F728 + 8))(qword_10085F728);
  if (qword_1008545F0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008545F0 + 8))(qword_1008545F0);
  if (qword_10085F730)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F730 + 8))(qword_10085F730);
  if (qword_100854600)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854600 + 8))(qword_100854600);
  if (qword_10085F738)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F738 + 8))(qword_10085F738);
  if (qword_100854610)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854610 + 8))(qword_100854610);
  if (qword_10085F740)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F740 + 8))(qword_10085F740);
  if (qword_100854620)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854620 + 8))(qword_100854620);
  if (qword_10085F748)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F748 + 8))(qword_10085F748);
  if (qword_100854630)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854630 + 8))(qword_100854630);
  if (qword_10085F750)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F750 + 8))(qword_10085F750);
  if (qword_100854640)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854640 + 8))(qword_100854640);
  if (qword_10085F758)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F758 + 8))(qword_10085F758);
  if (qword_100854650)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854650 + 8))(qword_100854650);
  if (qword_10085F760)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F760 + 8))(qword_10085F760);
  if (qword_100854660)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854660 + 8))(qword_100854660);
  if (qword_10085F768)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F768 + 8))(qword_10085F768);
  if (qword_100854670)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854670 + 8))(qword_100854670);
  if (qword_10085F770)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F770 + 8))(qword_10085F770);
  if (qword_100854680)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854680 + 8))(qword_100854680);
  if (qword_10085F778)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F778 + 8))(qword_10085F778);
  if (qword_100854690)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854690 + 8))(qword_100854690);
  if (qword_10085F780)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F780 + 8))(qword_10085F780);
  if (qword_1008546A0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008546A0 + 8))(qword_1008546A0);
  if (qword_10085F788)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F788 + 8))(qword_10085F788);
  if (qword_1008546B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008546B0 + 8))(qword_1008546B0);
  if (qword_10085F790)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F790 + 8))(qword_10085F790);
  if (qword_1008546C0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008546C0 + 8))(qword_1008546C0);
  if (qword_10085F798)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F798 + 8))(qword_10085F798);
  if (qword_1008546D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008546D0 + 8))(qword_1008546D0);
  if (qword_10085F7A0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F7A0 + 8))(qword_10085F7A0);
  if (qword_1008546E0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008546E0 + 8))(qword_1008546E0);
  if (qword_10085F7A8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F7A8 + 8))(qword_10085F7A8);
  if (qword_1008546F0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1008546F0 + 8))(qword_1008546F0);
  if (qword_10085F7B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F7B0 + 8))(qword_10085F7B0);
  if (qword_100854700)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_100854700 + 8))(qword_100854700);
  if (qword_10085F7B8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_10085F7B8 + 8))(qword_10085F7B8);
  result = qword_100854710;
  if (qword_100854710)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_100854710 + 8))(qword_100854710);
  return result;
}

uint64_t sub_1000861E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v85[2];
  char v86;

  v0 = qword_1008547C8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v85[1] = sub_1000834E8;
    v86 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008547C8, v85);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v85);
  }
  v1 = qword_100854478;
  if (!qword_10085F670)
    ((void (*)(void))sub_100084CA0)();
  v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
  v3 = qword_100854488;
  if (!qword_10085F678)
    sub_100084CA0(v2);
  v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v3);
  v5 = qword_100854498;
  if (!qword_10085F680)
    sub_100084CA0(v4);
  v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v5);
  v7 = qword_1008544A8;
  if (!qword_10085F688)
    sub_100084CA0(v6);
  v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v7);
  v9 = qword_1008544B8;
  if (!qword_10085F690)
    sub_100084CA0(v8);
  v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v9);
  v11 = qword_1008544C8;
  if (!qword_10085F698)
    sub_100084CA0(v10);
  v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v11);
  v13 = qword_1008544D8;
  if (!qword_10085F6A0)
    sub_100084CA0(v12);
  v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v13);
  v15 = qword_1008544E8;
  if (!qword_10085F6A8)
    sub_100084CA0(v14);
  v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v15);
  v17 = qword_1008544F8;
  if (!qword_10085F6B0)
    sub_100084CA0(v16);
  v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v17);
  v19 = qword_100854508;
  if (!qword_10085F6B8)
    sub_100084CA0(v18);
  v20 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v19);
  v21 = qword_100854518;
  if (!qword_10085F6C0)
    sub_100084CA0(v20);
  v22 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v21);
  v23 = qword_100854528;
  if (!qword_10085F6C8)
    sub_100084CA0(v22);
  v24 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v23);
  v25 = qword_100854538;
  if (!qword_10085F6D0)
    sub_100084CA0(v24);
  v26 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v25);
  v27 = qword_100854548;
  if (!qword_10085F6D8)
    sub_100084CA0(v26);
  v28 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v27);
  v29 = qword_100854558;
  if (!qword_10085F6E0)
    sub_100084CA0(v28);
  v30 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v29);
  v31 = qword_100854568;
  if (!qword_10085F6E8)
    sub_100084CA0(v30);
  v32 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v31);
  v33 = qword_100854578;
  if (!qword_10085F6F0)
    sub_100084CA0(v32);
  v34 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v33);
  v35 = qword_100854588;
  if (!qword_10085F6F8)
    sub_100084CA0(v34);
  v36 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v35);
  v37 = qword_100854598;
  if (!qword_10085F700)
    sub_100084CA0(v36);
  v38 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v37);
  v39 = qword_1008545A8;
  if (!qword_10085F708)
    sub_100084CA0(v38);
  v40 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v39);
  v41 = qword_1008545B8;
  if (!qword_10085F710)
    sub_100084CA0(v40);
  v42 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v41);
  v43 = qword_1008545C8;
  if (!qword_10085F718)
    sub_100084CA0(v42);
  v44 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v43);
  v45 = qword_1008545D8;
  if (!qword_10085F720)
    sub_100084CA0(v44);
  v46 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v45);
  v47 = qword_1008545E8;
  if (!qword_10085F728)
    sub_100084CA0(v46);
  v48 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v47);
  v49 = qword_1008545F8;
  if (!qword_10085F730)
    sub_100084CA0(v48);
  v50 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v49);
  v51 = qword_100854608;
  if (!qword_10085F738)
    sub_100084CA0(v50);
  v52 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v51);
  v53 = qword_100854618;
  if (!qword_10085F740)
    sub_100084CA0(v52);
  v54 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v53);
  v55 = qword_100854628;
  if (!qword_10085F748)
    sub_100084CA0(v54);
  v56 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v55);
  v57 = qword_100854638;
  if (!qword_10085F750)
    sub_100084CA0(v56);
  v58 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v57);
  v59 = qword_100854648;
  if (!qword_10085F758)
    sub_100084CA0(v58);
  v60 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v59);
  v61 = qword_100854658;
  if (!qword_10085F760)
    sub_100084CA0(v60);
  v62 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v61);
  v63 = qword_100854668;
  if (!qword_10085F768)
    sub_100084CA0(v62);
  v64 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v63);
  v65 = qword_100854678;
  if (!qword_10085F770)
    sub_100084CA0(v64);
  v66 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v65);
  v67 = qword_100854688;
  if (!qword_10085F778)
    sub_100084CA0(v66);
  v68 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v67);
  v69 = qword_100854698;
  if (!qword_10085F780)
    sub_100084CA0(v68);
  v70 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v69);
  v71 = qword_1008546A8;
  if (!qword_10085F788)
    sub_100084CA0(v70);
  v72 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v71);
  v73 = qword_1008546B8;
  if (!qword_10085F790)
    sub_100084CA0(v72);
  v74 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v73);
  v75 = qword_1008546C8;
  if (!qword_10085F798)
    sub_100084CA0(v74);
  v76 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v75);
  v77 = qword_1008546D8;
  if (!qword_10085F7A0)
    sub_100084CA0(v76);
  v78 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v77);
  v79 = qword_1008546E8;
  if (!qword_10085F7A8)
    sub_100084CA0(v78);
  v80 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v79);
  v81 = qword_1008546F8;
  if (!qword_10085F7B0)
    sub_100084CA0(v80);
  v82 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v81);
  v83 = qword_100854708;
  if (!qword_10085F7B8)
    sub_100084CA0(v82);
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v83);
}

void sub_100086838(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100086890(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = (_QWORD *)result;
  v2 = qword_10085F688;
  if (!qword_10085F688)
  {
    result = sub_100084CA0(result);
    v2 = qword_10085F688;
  }
  v1[3] = v2;
  v3 = qword_10085F690;
  if (!qword_10085F690)
  {
    result = sub_100084CA0(result);
    v3 = qword_10085F690;
  }
  v1[4] = v3;
  v4 = qword_10085F6A0;
  if (!qword_10085F6A0)
  {
    result = sub_100084CA0(result);
    v4 = qword_10085F6A0;
  }
  v1[5] = v4;
  v5 = qword_10085F6A8;
  if (!qword_10085F6A8)
  {
    result = sub_100084CA0(result);
    v5 = qword_10085F6A8;
  }
  v1[6] = v5;
  v6 = qword_10085F6B0;
  if (!qword_10085F6B0)
  {
    result = sub_100084CA0(result);
    v6 = qword_10085F6B0;
  }
  v1[7] = v6;
  v7 = qword_10085F6B8;
  if (!qword_10085F6B8)
  {
    result = sub_100084CA0(result);
    v7 = qword_10085F6B8;
  }
  v1[8] = v7;
  v8 = qword_10085F6C0;
  if (!qword_10085F6C0)
  {
    result = sub_100084CA0(result);
    v8 = qword_10085F6C0;
  }
  v1[9] = v8;
  v9 = qword_10085F6C8;
  if (!qword_10085F6C8)
  {
    result = sub_100084CA0(result);
    v9 = qword_10085F6C8;
  }
  v1[10] = v9;
  v10 = qword_10085F6D0;
  if (!qword_10085F6D0)
  {
    result = sub_100084CA0(result);
    v10 = qword_10085F6D0;
  }
  v1[11] = v10;
  v11 = qword_10085F6E0;
  if (!qword_10085F6E0)
  {
    result = sub_100084CA0(result);
    v11 = qword_10085F6E0;
  }
  v1[12] = v11;
  v12 = qword_10085F6E8;
  if (!qword_10085F6E8)
  {
    result = sub_100084CA0(result);
    v12 = qword_10085F6E8;
  }
  v1[13] = v12;
  v13 = qword_10085F6F0;
  if (!qword_10085F6F0)
  {
    result = sub_100084CA0(result);
    v13 = qword_10085F6F0;
  }
  v1[14] = v13;
  v14 = qword_10085F6F8;
  if (!qword_10085F6F8)
  {
    result = sub_100084CA0(result);
    v14 = qword_10085F6F8;
  }
  v1[15] = v14;
  v15 = qword_10085F718;
  if (!qword_10085F718)
  {
    result = sub_100084CA0(result);
    v15 = qword_10085F718;
  }
  v1[16] = v15;
  v16 = qword_10085F720;
  if (!qword_10085F720)
  {
    result = sub_100084CA0(result);
    v16 = qword_10085F720;
  }
  v1[17] = v16;
  v17 = qword_10085F748;
  if (!qword_10085F748)
  {
    result = sub_100084CA0(result);
    v17 = qword_10085F748;
  }
  v1[18] = v17;
  v18 = qword_10085F750;
  if (!qword_10085F750)
  {
    result = sub_100084CA0(result);
    v18 = qword_10085F750;
  }
  v1[19] = v18;
  v19 = qword_10085F758;
  if (!qword_10085F758)
  {
    result = sub_100084CA0(result);
    v19 = qword_10085F758;
  }
  v1[20] = v19;
  v20 = qword_10085F760;
  if (!qword_10085F760)
  {
    result = sub_100084CA0(result);
    v20 = qword_10085F760;
  }
  v1[21] = v20;
  v21 = qword_10085F778;
  if (!qword_10085F778)
  {
    result = sub_100084CA0(result);
    v21 = qword_10085F778;
  }
  v1[22] = v21;
  v22 = qword_10085F780;
  if (!qword_10085F780)
  {
    result = sub_100084CA0(result);
    v22 = qword_10085F780;
  }
  v1[23] = v22;
  v23 = qword_10085F798;
  if (!qword_10085F798)
  {
    result = sub_100084CA0(result);
    v23 = qword_10085F798;
  }
  v1[24] = v23;
  v24 = qword_10085F7A0;
  if (!qword_10085F7A0)
  {
    result = sub_100084CA0(result);
    v24 = qword_10085F7A0;
  }
  v1[25] = v24;
  v25 = qword_10085F7A8;
  if (!qword_10085F7A8)
  {
    result = sub_100084CA0(result);
    v25 = qword_10085F7A8;
  }
  v1[26] = v25;
  v26 = qword_10085F770;
  if (!qword_10085F770)
  {
    result = sub_100084CA0(result);
    v26 = qword_10085F770;
  }
  v1[27] = v26;
  v27 = qword_10085F7B0;
  if (!qword_10085F7B0)
  {
    result = sub_100084CA0(result);
    v27 = qword_10085F7B0;
  }
  v1[28] = v27;
  v28 = qword_10085F7B8;
  if (!qword_10085F7B8)
  {
    result = sub_100084CA0(result);
    v28 = qword_10085F7B8;
  }
  v1[29] = v28;
  v29 = qword_10085F790;
  if (!qword_10085F790)
  {
    result = sub_100084CA0(result);
    v29 = qword_10085F790;
  }
  v1[30] = v29;
  return result;
}

BOOL sub_100086B4C(int a1)
{
  return (a1 - 1) < 3;
}

uint64_t sub_100086B5C(unsigned int a1)
{
  return (a1 < 0x1D) & (0x1FDFFFFFu >> a1);
}

uint64_t sub_100086B74(unsigned int a1)
{
  uint64_t result;
  unsigned int v3;

  result = 1;
  if (a1 >= 0x25)
  {
    v3 = a1 - 89;
    if (v3 > 8 || ((1 << v3) & 0x18F) == 0)
      return 0;
  }
  return result;
}

uint64_t sub_100086BB0(unsigned int a1)
{
  return (a1 < 0x1C) & (0xDDB54EFu >> a1);
}

BOOL sub_100086BCC(int a1)
{
  return (a1 - 1) < 6;
}

BOOL sub_100086BDC(int a1)
{
  return (a1 - 1) < 2;
}

BOOL sub_100086BEC(unsigned int a1)
{
  return a1 < 5;
}

uint64_t sub_100086BF8(unsigned int a1)
{
  return (a1 < 0xE) & (0x3C3Fu >> a1);
}

uint64_t sub_100086C10(unsigned int a1)
{
  uint64_t result;

  result = 1;
  if ((a1 - 224 > 0x1E || ((1 << (a1 + 32)) & 0x7FFF403F) == 0) && (a1 > 0x18 || ((1 << a1) & 0x116003F) == 0))
    return 0;
  return result;
}

uint64_t sub_100086C64(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FD978;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 248) = 0;
  *(_OWORD *)(a1 + 20) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  *(_OWORD *)(a1 + 52) = 0u;
  *(_OWORD *)(a1 + 68) = 0u;
  *(_OWORD *)(a1 + 84) = 0u;
  *(_OWORD *)(a1 + 100) = 0u;
  *(_OWORD *)(a1 + 116) = 0u;
  *(_OWORD *)(a1 + 132) = 0u;
  *(_OWORD *)(a1 + 148) = 0u;
  *(_OWORD *)(a1 + 164) = 0u;
  *(_OWORD *)(a1 + 180) = 0u;
  *(_OWORD *)(a1 + 196) = 0u;
  *(_OWORD *)(a1 + 212) = 0u;
  *(_OWORD *)(a1 + 228) = 0u;
  *(_DWORD *)(a1 + 244) = 0;
  return a1;
}

void sub_100086CE0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100086CF4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10085F718;
  if (!qword_10085F718)
  {
    sub_100084CA0(0, a2, a3, a4);
    return qword_10085F718;
  }
  return result;
}

uint64_t sub_100086D20(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10085F770;
  if (!qword_10085F770)
  {
    sub_100084CA0(0, a2, a3, a4);
    return qword_10085F770;
  }
  return result;
}

uint64_t sub_100086D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  _DWORD *v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v65;
  _BYTE v66[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v66, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 3929);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v66, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v65, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v66);
  }
  v5 = *(_DWORD *)(a2 + 252);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if ((v6 - 1) >= 3)
        sub_1003CCC80();
      *(_DWORD *)(a1 + 252) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      if (v7 >= 0x15 && v7 - 22 >= 7)
        sub_1003CCC58();
      *(_DWORD *)(a1 + 252) |= 2u;
      *(_DWORD *)(a1 + 20) = v7;
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 4u;
      v8 = *(_QWORD *)(a1 + 24);
      if (!v8)
        operator new();
      v9 = *(_QWORD *)(a2 + 24);
      if (!v9)
        v9 = *(_QWORD *)(qword_10085F670 + 24);
      sub_10008CA68(v8, v9);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 8) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 8u;
      v10 = *(_QWORD *)(a1 + 32);
      if (!v10)
        operator new();
      v11 = *(_QWORD *)(a2 + 32);
      if (!v11)
        v11 = *(_QWORD *)(qword_10085F670 + 32);
      sub_10008CB58(v10, v11);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x10) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x10u;
      v12 = *(_QWORD *)(a1 + 40);
      if (!v12)
        operator new();
      v13 = *(_QWORD *)(a2 + 40);
      if (!v13)
        v13 = *(_QWORD *)(qword_10085F670 + 40);
      sub_10008CDA8(v12, v13);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x20u;
      v14 = *(_QWORD *)(a1 + 48);
      if (!v14)
        operator new();
      v15 = *(_QWORD *)(a2 + 48);
      if (!v15)
        v15 = *(_QWORD *)(qword_10085F670 + 48);
      sub_10008D098(v14, v15);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x40) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x40u;
      v16 = *(_QWORD *)(a1 + 56);
      if (!v16)
        operator new();
      v17 = *(_QWORD *)(a2 + 56);
      if (!v17)
        v17 = *(_QWORD *)(qword_10085F670 + 56);
      sub_10008D1AC(v16, v17);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x80u;
      v18 = *(_QWORD *)(a1 + 64);
      if (!v18)
        operator new();
      v19 = *(_QWORD *)(a2 + 64);
      if (!v19)
        v19 = *(_QWORD *)(qword_10085F670 + 64);
      sub_10008D324(v18, v19);
      v5 = *(_DWORD *)(a2 + 252);
    }
  }
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x100u;
      v20 = *(_QWORD *)(a1 + 72);
      if (!v20)
        operator new();
      v21 = *(_QWORD *)(a2 + 72);
      if (!v21)
        v21 = *(_QWORD *)(qword_10085F670 + 72);
      sub_10008D438(v20, v21);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x200u;
      v22 = *(_QWORD *)(a1 + 80);
      if (!v22)
        operator new();
      v23 = *(_QWORD *)(a2 + 80);
      if (!v23)
        v23 = *(_QWORD *)(qword_10085F670 + 80);
      sub_10008D578(v22, v23);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x400) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x400u;
      v24 = *(_QWORD *)(a1 + 88);
      if (!v24)
        operator new();
      v25 = *(_QWORD *)(a2 + 88);
      if (!v25)
        v25 = *(_QWORD *)(qword_10085F670 + 88);
      sub_10008D68C(v24, v25);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x800) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x800u;
      v26 = *(_DWORD **)(a1 + 96);
      if (!v26)
        operator new();
      v27 = *(_QWORD *)(a2 + 96);
      if (!v27)
        v27 = *(_QWORD *)(qword_10085F670 + 96);
      sub_10008D760(v26, v27);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x1000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x1000u;
      v28 = *(_DWORD **)(a1 + 104);
      if (!v28)
        operator new();
      v29 = *(_QWORD *)(a2 + 104);
      if (!v29)
        v29 = *(_QWORD *)(qword_10085F670 + 104);
      sub_10008D8D4(v28, v29);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x2000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x2000u;
      v30 = *(_DWORD **)(a1 + 112);
      if (!v30)
        operator new();
      v31 = *(_QWORD *)(a2 + 112);
      if (!v31)
        v31 = *(_QWORD *)(qword_10085F670 + 112);
      sub_10008DA1C(v30, v31);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x4000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x4000u;
      v32 = *(_QWORD *)(a1 + 120);
      if (!v32)
        operator new();
      v33 = *(_QWORD *)(a2 + 120);
      if (!v33)
        v33 = *(_QWORD *)(qword_10085F670 + 120);
      sub_10008DB1C(v32, v33);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x8000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x8000u;
      v34 = *(_QWORD *)(a1 + 128);
      if (!v34)
        operator new();
      v35 = *(_QWORD *)(a2 + 128);
      if (!v35)
        v35 = *(_QWORD *)(qword_10085F670 + 128);
      sub_10008DCB8(v34, v35);
      v5 = *(_DWORD *)(a2 + 252);
    }
  }
  if ((v5 & 0xFF0000) != 0)
  {
    if ((v5 & 0x10000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x10000u;
      v36 = *(_QWORD *)(a1 + 136);
      if (!v36)
        operator new();
      v37 = *(_QWORD *)(a2 + 136);
      if (!v37)
        v37 = *(_QWORD *)(qword_10085F670 + 136);
      sub_10008E898(v36, v37);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x20000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x20000u;
      v38 = *(_QWORD *)(a1 + 144);
      if (!v38)
        operator new();
      v39 = *(_QWORD *)(a2 + 144);
      if (!v39)
        v39 = *(_QWORD *)(qword_10085F670 + 144);
      sub_10008E9DC(v38, v39);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x40000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x40000u;
      v40 = *(_QWORD *)(a1 + 152);
      if (!v40)
        operator new();
      v41 = *(_QWORD *)(a2 + 152);
      if (!v41)
        v41 = *(_QWORD *)(qword_10085F670 + 152);
      sub_10008ED28(v40, v41);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x80000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x80000u;
      v42 = *(_QWORD *)(a1 + 160);
      if (!v42)
        operator new();
      v43 = *(_QWORD *)(a2 + 160);
      if (!v43)
        v43 = *(_QWORD *)(qword_10085F670 + 160);
      sub_10008F33C(v42, v43);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x100000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x100000u;
      v44 = *(_QWORD *)(a1 + 168);
      if (!v44)
        operator new();
      v45 = *(_QWORD *)(a2 + 168);
      if (!v45)
        v45 = *(_QWORD *)(qword_10085F670 + 168);
      sub_10008F714(v44, v45);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x200000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x200000u;
      v46 = *(_QWORD *)(a1 + 176);
      if (!v46)
        operator new();
      v47 = *(_QWORD *)(a2 + 176);
      if (!v47)
        v47 = *(_QWORD *)(qword_10085F670 + 176);
      sub_10008F9E0(v46, v47);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x400000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x400000u;
      v48 = *(_QWORD *)(a1 + 184);
      if (!v48)
        operator new();
      v49 = *(_QWORD *)(a2 + 184);
      if (!v49)
        v49 = *(_QWORD *)(qword_10085F670 + 184);
      sub_100090064(v48, v49);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x800000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x800000u;
      v50 = *(_QWORD *)(a1 + 192);
      if (!v50)
        operator new();
      v51 = *(_QWORD *)(a2 + 192);
      if (!v51)
        v51 = *(_QWORD *)(qword_10085F670 + 192);
      sub_10009021C(v50, v51);
      v5 = *(_DWORD *)(a2 + 252);
    }
  }
  if (HIBYTE(v5))
  {
    if ((v5 & 0x1000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x1000000u;
      v52 = *(_QWORD *)(a1 + 200);
      if (!v52)
        operator new();
      v53 = *(_QWORD *)(a2 + 200);
      if (!v53)
        v53 = *(_QWORD *)(qword_10085F670 + 200);
      sub_10009056C(v52, v53);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x2000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x2000000u;
      v54 = *(_QWORD *)(a1 + 208);
      if (!v54)
        operator new();
      v55 = *(_QWORD *)(a2 + 208);
      if (!v55)
        v55 = *(_QWORD *)(qword_10085F670 + 208);
      sub_1000907E8(v54, v55);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x4000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x4000000u;
      v56 = *(_QWORD *)(a1 + 216);
      if (!v56)
        operator new();
      v57 = *(_QWORD *)(a2 + 216);
      if (!v57)
        v57 = *(_QWORD *)(qword_10085F670 + 216);
      sub_1000909E0(v56, v57);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x8000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x8000000u;
      v58 = *(_QWORD *)(a1 + 224);
      if (!v58)
        operator new();
      v59 = *(_QWORD *)(a2 + 224);
      if (!v59)
        v59 = *(_QWORD *)(qword_10085F670 + 224);
      sub_100090C4C(v58, v59);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x10000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x10000000u;
      v60 = *(_QWORD *)(a1 + 232);
      if (!v60)
        operator new();
      v61 = *(_QWORD *)(a2 + 232);
      if (!v61)
        v61 = *(_QWORD *)(qword_10085F670 + 232);
      sub_100090F58(v60, v61);
      v5 = *(_DWORD *)(a2 + 252);
    }
    if ((v5 & 0x20000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x20000000u;
      v62 = *(_QWORD *)(a1 + 240);
      if (!v62)
        operator new();
      v63 = *(_QWORD *)(a2 + 240);
      if (!v63)
        v63 = *(_QWORD *)(qword_10085F670 + 240);
      sub_10009106C(v62, v63);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008785C()
{
  operator delete();
}

void sub_100087A54(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  JUMPOUT(0x100087A4CLL);
}

void sub_100087A68(_QWORD *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *a1 = off_1007FD978;
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100087AA4(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

_QWORD *sub_100087AA4(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if ((_QWORD *)qword_10085F670 != result)
  {
    v1 = result;
    v2 = result[3];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[4];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = v1[5];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = v1[6];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = v1[7];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = v1[8];
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = v1[9];
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = v1[10];
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = v1[11];
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = v1[12];
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v1[13];
    if (v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
    v13 = v1[14];
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = v1[15];
    if (v14)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
    v15 = v1[16];
    if (v15)
      (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
    v16 = v1[17];
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v1[18];
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v1[19];
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = v1[20];
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
    v20 = v1[21];
    if (v20)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
    v21 = v1[22];
    if (v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
    v22 = v1[23];
    if (v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
    v23 = v1[24];
    if (v23)
      (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
    v24 = v1[25];
    if (v24)
      (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
    v25 = v1[26];
    if (v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
    v26 = v1[27];
    if (v26)
      (*(void (**)(uint64_t))(*(_QWORD *)v26 + 8))(v26);
    v27 = v1[28];
    if (v27)
      (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
    v28 = v1[29];
    if (v28)
      (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
    result = (_QWORD *)v1[30];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_100087D0C(_QWORD *a1)
{
  sub_100087A68(a1);
  operator delete();
}

uint64_t sub_100087D30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 248) = a2;
  return result;
}

uint64_t sub_100087D38(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_10085F670;
  if (!qword_10085F670)
  {
    sub_100084CA0(0, a2, a3, a4);
    return qword_10085F670;
  }
  return result;
}

void sub_100087D64()
{
  operator new();
}

void sub_100087DA0()
{
  operator delete();
}

uint64_t sub_100087DC4(uint64_t this)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;

  v1 = this;
  v2 = *(_DWORD *)(this + 252);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(this + 16) = 1;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 24);
      if (this)
      {
        this = (uint64_t)sub_100088088(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        this = (uint64_t)sub_1000880D8(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(_QWORD *)(v1 + 40);
      if (this)
      {
        this = (uint64_t)sub_10008817C((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      this = *(_QWORD *)(v1 + 48);
      if (this)
      {
        this = (uint64_t)sub_100088224((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(_QWORD *)(v1 + 56);
      if (this)
      {
        this = (uint64_t)sub_100088270((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      this = *(_QWORD *)(v1 + 64);
      if (this)
      {
        this = (uint64_t)sub_1000882C4((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(_QWORD *)(v1 + 72);
      if (this)
      {
        this = (uint64_t)sub_100088310((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      this = *(_QWORD *)(v1 + 80);
      if (this)
      {
        this = (uint64_t)sub_100088364((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      this = *(_QWORD *)(v1 + 88);
      if (this)
      {
        v3 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 28) = 0;
        if (v3)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    v2 = *(_DWORD *)(v1 + 252);
    if ((v2 & 0x800) != 0)
    {
      this = *(_QWORD *)(v1 + 96);
      if (this)
      {
        this = sub_1000883C8(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x1000) != 0)
    {
      this = *(_QWORD *)(v1 + 104);
      if (this)
      {
        this = sub_100088444(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x2000) != 0)
    {
      this = *(_QWORD *)(v1 + 112);
      if (this)
      {
        this = (uint64_t)sub_1000884B4(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x4000) != 0)
    {
      this = *(_QWORD *)(v1 + 120);
      if (this)
      {
        this = (uint64_t)sub_1000884D8((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x8000) != 0)
    {
      this = *(_QWORD *)(v1 + 128);
      if (this)
      {
        this = (uint64_t)sub_100088534((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      this = *(_QWORD *)(v1 + 136);
      if (this)
      {
        this = (uint64_t)sub_100088740((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x20000) != 0)
    {
      this = *(_QWORD *)(v1 + 144);
      if (this)
      {
        this = (uint64_t)sub_100088794((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x40000) != 0)
    {
      this = *(_QWORD *)(v1 + 152);
      if (this)
      {
        this = (uint64_t)sub_100088898((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x80000) != 0)
    {
      this = *(_QWORD *)(v1 + 160);
      if (this)
      {
        this = (uint64_t)sub_1000889AC((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x100000) != 0)
    {
      this = *(_QWORD *)(v1 + 168);
      if (this)
      {
        this = (uint64_t)sub_100088AC4((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x200000) != 0)
    {
      this = *(_QWORD *)(v1 + 176);
      if (this)
      {
        this = (uint64_t)sub_100088B6C(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x400000) != 0)
    {
      this = *(_QWORD *)(v1 + 184);
      if (this)
      {
        if (*(_BYTE *)(this + 68))
        {
          *(_OWORD *)(this + 32) = 0u;
          *(_OWORD *)(this + 48) = 0u;
          *(_OWORD *)(this + 16) = 0u;
        }
        v4 = *(_QWORD *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 60) = 0;
        if (v4)
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
    v2 = *(_DWORD *)(v1 + 252);
    if ((v2 & 0x800000) != 0)
    {
      this = *(_QWORD *)(v1 + 192);
      if (this)
      {
        this = (uint64_t)sub_100088C20(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      this = *(_QWORD *)(v1 + 200);
      if (this)
      {
        this = sub_100088C70(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x2000000) != 0)
    {
      this = *(_QWORD *)(v1 + 208);
      if (this)
      {
        this = (uint64_t)sub_100088D08((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x4000000) != 0)
    {
      this = *(_QWORD *)(v1 + 216);
      if (this)
      {
        this = (uint64_t)sub_100088D74((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x8000000) != 0)
    {
      this = *(_QWORD *)(v1 + 224);
      if (this)
      {
        this = (uint64_t)sub_100088E08((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x10000000) != 0)
    {
      this = *(_QWORD *)(v1 + 232);
      if (this)
      {
        this = (uint64_t)sub_100088E84((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x20000000) != 0)
    {
      this = *(_QWORD *)(v1 + 240);
      if (this)
        this = (uint64_t)sub_100088ED0((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
    }
  }
  v6 = *(_QWORD *)(v1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 61) = 0;
  if (v6)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088088(uint64_t a1)
{
  uint64_t v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v3;

  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    v1 = *(_QWORD *)(a1 + 16);
    if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(_BYTE **)v1 = 0;
        *(_QWORD *)(v1 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v1 = 0;
        *(_BYTE *)(v1 + 23) = 0;
      }
    }
  }
  v3 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000880D8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v5;

  v1 = *(_DWORD *)(a1 + 68);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(a1 + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    if ((*(_BYTE *)(a1 + 68) & 0x20) != 0)
    {
      v3 = *(_QWORD *)(a1 + 40);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(a1 + 48) = 0;
    v1 = *(_DWORD *)(a1 + 68);
  }
  if ((v1 & 0xFF00) != 0)
    *(_QWORD *)(a1 + 56) = 0;
  v5 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 15) = 0;
  if (v5)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008817C(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;

  v1 = this;
  v2 = *((_DWORD *)this + 21);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      if (this)
      {
        this = sub_1000918A8((uint64_t)this);
        v2 = *((_DWORD *)v1 + 21);
      }
    }
    *((_QWORD *)v1 + 3) = 0;
    *((_QWORD *)v1 + 4) = 0;
    *((_DWORD *)v1 + 12) = 0;
    *((_QWORD *)v1 + 5) = 0;
  }
  if ((v2 & 0xFF00) != 0)
    *((_DWORD *)v1 + 13) = 0;
  if (*((int *)v1 + 16) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*((_QWORD *)v1 + 7) + 8 * v3);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *((int *)v1 + 16));
  }
  v6 = *((_QWORD *)v1 + 1);
  v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v5 + 14) = 0;
  *((_DWORD *)v5 + 19) = 0;
  if (v6)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088224(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;

  v1 = this;
  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
    if (this)
      this = sub_100092178(this);
  }
  v3 = *((_QWORD *)v1 + 1);
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088270(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;

  v1 = this;
  if (*((_BYTE *)this + 44))
  {
    if ((*((_BYTE *)this + 44) & 1) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      if (this)
        this = sub_1000918A8((uint64_t)this);
    }
    *((_QWORD *)v1 + 3) = 0;
    *((_QWORD *)v1 + 4) = 0;
  }
  v3 = *((_QWORD *)v1 + 1);
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 9) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000882C4(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;

  v1 = this;
  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
    if (this)
      this = sub_100092178(this);
  }
  v3 = *((_QWORD *)v1 + 1);
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088310(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;

  v1 = this;
  if (*((_BYTE *)this + 32))
  {
    if ((*((_BYTE *)this + 32) & 1) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      if (this)
        this = sub_1000918A8((uint64_t)this);
    }
    *((_DWORD *)v1 + 6) = 0;
  }
  v3 = *((_QWORD *)v1 + 1);
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 6) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088364(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;

  v1 = this;
  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
    if (this)
      this = sub_100092178(this);
  }
  v3 = *((_QWORD *)v1 + 1);
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000883B0(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1000883C8(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*(_BYTE *)(this + 48))
    *(_DWORD *)(this + 40) = 0;
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 10) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t sub_100088444(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000884B4(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 32))
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000884D8(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  char v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  uint64_t v4;

  v1 = this;
  v2 = *((_BYTE *)this + 56);
  if (v2)
  {
    *((_DWORD *)this + 12) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)this + 4) = 0;
    *((_QWORD *)this + 2) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 5);
      if (this)
        this = sub_10009A218((uint64_t)this);
    }
  }
  v4 = *((_QWORD *)v1 + 1);
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 12) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088534(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  unsigned int *v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v10;
  uint64_t v11;

  v1 = this;
  v2 = (unsigned int *)((char *)this + 468);
  v3 = *((_DWORD *)this + 117);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      if (this)
      {
        this = sub_100092178(this);
        v3 = *v2;
      }
    }
    *((_DWORD *)v1 + 12) = 0;
    *((_QWORD *)v1 + 3) = 0;
    *((_QWORD *)v1 + 4) = 0;
    if ((v3 & 0x20) != 0)
    {
      v4 = *((_QWORD *)v1 + 5);
      if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    *((_DWORD *)v1 + 13) = 0;
    *((_DWORD *)v1 + 14) = 0;
    v3 = *((_DWORD *)v1 + 117);
  }
  if ((v3 & 0xFF00) != 0)
  {
    *((_DWORD *)v1 + 34) = 0;
    *(_OWORD *)((char *)v1 + 60) = 0u;
    *(_OWORD *)((char *)v1 + 76) = 0u;
    *((_DWORD *)v1 + 23) = 0;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *((_QWORD *)v1 + 16) = 0;
    *((_OWORD *)v1 + 6) = 0u;
    *((_OWORD *)v1 + 7) = 0u;
    *((_QWORD *)v1 + 19) = 0;
    *((_QWORD *)v1 + 20) = 0;
    *((_QWORD *)v1 + 18) = 0;
  }
  if (HIBYTE(v3))
  {
    *((_DWORD *)v1 + 35) = 0;
    *((_QWORD *)v1 + 22) = 0;
    *((_QWORD *)v1 + 23) = 0;
    *((_QWORD *)v1 + 21) = 0;
    *((_QWORD *)v1 + 28) = 0;
    *((_QWORD *)v1 + 29) = 0;
    *((_QWORD *)v1 + 27) = 0;
  }
  v5 = *((_DWORD *)v1 + 118);
  if ((_BYTE)v5)
  {
    *((_OWORD *)v1 + 16) = 0u;
    *((_OWORD *)v1 + 17) = 0u;
    *((_OWORD *)v1 + 15) = 0u;
    *((_DWORD *)v1 + 72) = 1;
  }
  if ((v5 & 0xFF00) != 0)
  {
    *((_QWORD *)v1 + 38) = 0;
    *((_DWORD *)v1 + 73) = 0;
    *(_DWORD *)((char *)v1 + 295) = 0;
    if ((v5 & 0x2000) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 39);
      if (this)
      {
        if (*((_BYTE *)this + 52))
        {
          *((_OWORD *)this + 1) = 0u;
          *((_OWORD *)this + 2) = 0u;
        }
        v6 = *((_QWORD *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 11) = 0;
        if (v6)
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
      }
    }
    *((_DWORD *)v1 + 75) = 0;
    v5 = *((_DWORD *)v1 + 118);
  }
  if ((v5 & 0xFF0000) != 0)
  {
    *((_OWORD *)v1 + 21) = 0u;
    *((_OWORD *)v1 + 22) = 0u;
    *(_OWORD *)((char *)v1 + 364) = 0u;
  }
  if (HIBYTE(v5))
  {
    *(_OWORD *)((char *)v1 + 380) = 0u;
    *(_OWORD *)((char *)v1 + 396) = 0u;
    *(_QWORD *)((char *)v1 + 412) = &_mh_execute_header;
  }
  v7 = *((_DWORD *)v1 + 119);
  if ((_BYTE)v7)
  {
    *(_QWORD *)((char *)v1 + 452) = 0;
    *(_OWORD *)((char *)v1 + 420) = 0u;
    *(_OWORD *)((char *)v1 + 436) = 0u;
  }
  if ((v7 & 0xFF00) != 0)
    *((_DWORD *)v1 + 115) = 0;
  if (*((int *)v1 + 50) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = *(_QWORD *)(*((_QWORD *)v1 + 24) + 8 * v8);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9);
      ++v8;
    }
    while (v8 < *((int *)v1 + 50));
  }
  v11 = *((_QWORD *)v1 + 1);
  v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v10 + 48) = 0;
  *((_DWORD *)v10 + 80) = 0;
  *(_QWORD *)v2 = 0;
  v2[2] = 0;
  if (v11)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v10);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088740(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;

  v1 = this;
  if (*((_BYTE *)this + 32))
  {
    if ((*((_BYTE *)this + 32) & 1) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      if (this)
        this = sub_100092178(this);
    }
    *((_DWORD *)v1 + 6) = 0;
  }
  v3 = *((_QWORD *)v1 + 1);
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 6) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088794(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v8;
  uint64_t v9;

  v1 = this;
  LOBYTE(v2) = *((_BYTE *)this + 96);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 96) & 1) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      if (this)
      {
        this = sub_1000918A8((uint64_t)this);
        v2 = *((_DWORD *)v1 + 24);
      }
    }
    *((_QWORD *)v1 + 3) = 0;
    *((_DWORD *)v1 + 22) = 0;
    if ((v2 & 0x10) != 0)
    {
      v3 = *((_QWORD *)v1 + 4);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
  }
  if (*((int *)v1 + 12) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*((_QWORD *)v1 + 5) + 8 * v4);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *((int *)v1 + 12));
  }
  *((_DWORD *)v1 + 12) = 0;
  if (*((int *)v1 + 18) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*((_QWORD *)v1 + 8) + 8 * v6);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *((int *)v1 + 18));
  }
  v9 = *((_QWORD *)v1 + 1);
  v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v8 + 16) = 0;
  *((_DWORD *)v8 + 22) = 0;
  if (v9)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v8);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088898(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  unsigned int *v2;
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;

  v1 = this;
  v2 = (unsigned int *)((char *)this + 300);
  v3 = *((_DWORD *)this + 75);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      if (this)
      {
        this = sub_1000918A8((uint64_t)this);
        v3 = *v2;
      }
    }
    *((_QWORD *)v1 + 3) = 0;
    *((_DWORD *)v1 + 30) = 0;
    if ((v3 & 0x10) != 0)
    {
      v4 = *((_QWORD *)v1 + 4);
      if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    *((_QWORD *)v1 + 5) = 0;
    *((_QWORD *)v1 + 6) = 0;
    *((_QWORD *)v1 + 7) = 0;
    v3 = *((_DWORD *)v1 + 75);
  }
  if ((v3 & 0xFF00) != 0)
  {
    *((_QWORD *)v1 + 16) = 0;
    *((_OWORD *)v1 + 4) = 0u;
    *((_OWORD *)v1 + 5) = 0u;
    *((_OWORD *)v1 + 6) = 0u;
    *((_QWORD *)v1 + 14) = 0;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *(_OWORD *)((char *)v1 + 184) = 0u;
    *(_OWORD *)((char *)v1 + 168) = 0u;
    *(_OWORD *)((char *)v1 + 152) = 0u;
    *(_OWORD *)((char *)v1 + 136) = 0u;
  }
  if (HIBYTE(v3))
  {
    *((_DWORD *)v1 + 31) = 0;
    *(_OWORD *)((char *)v1 + 200) = 0u;
    *(_OWORD *)((char *)v1 + 216) = 0u;
    *(_OWORD *)((char *)v1 + 232) = 0u;
    *((_QWORD *)v1 + 31) = 0;
  }
  if (*((_BYTE *)v1 + 304))
  {
    *((_QWORD *)v1 + 36) = 0;
    *((_OWORD *)v1 + 16) = 0u;
    *((_OWORD *)v1 + 17) = 0u;
  }
  *(_QWORD *)v2 = 0;
  v6 = *((_QWORD *)v1 + 1);
  v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  if (v6)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000889AC(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v9;
  uint64_t v10;

  v1 = this;
  v2 = *((_DWORD *)this + 33);
  if ((_BYTE)v2)
  {
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    if ((v2 & 8) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 4);
      if (this)
      {
        this = sub_1000918A8((uint64_t)this);
        v2 = *((_DWORD *)v1 + 33);
      }
    }
    *((_DWORD *)v1 + 18) = 0;
    *((_QWORD *)v1 + 5) = 0;
  }
  if ((v2 & 0x1FE00) != 0)
    *((_DWORD *)v1 + 19) = 0;
  if (*((int *)v1 + 14) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*((_QWORD *)v1 + 6) + 8 * v3);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *((int *)v1 + 14));
  }
  *((_DWORD *)v1 + 14) = 0;
  if (*((int *)v1 + 22) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*((_QWORD *)v1 + 10) + 8 * v5);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *((int *)v1 + 22));
  }
  *((_DWORD *)v1 + 22) = 0;
  if (*((int *)v1 + 28) >= 1)
  {
    v7 = 0;
    do
    {
      v8 = *(_QWORD *)(*((_QWORD *)v1 + 13) + 8 * v7);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 32))(v8);
      ++v7;
    }
    while (v7 < *((int *)v1 + 28));
  }
  v10 = *((_QWORD *)v1 + 1);
  v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v9 + 26) = 0;
  *((_DWORD *)v9 + 31) = 0;
  if (v10)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088AC4(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;

  v1 = this;
  v2 = *((_DWORD *)this + 24);
  if ((_BYTE)v2)
  {
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    if ((v2 & 8) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 4);
      if (this)
      {
        this = sub_1000918A8((uint64_t)this);
        v2 = *((_DWORD *)v1 + 24);
      }
    }
    *((_QWORD *)v1 + 5) = 0;
    *((_QWORD *)v1 + 6) = 0;
    *((_QWORD *)v1 + 7) = 0;
  }
  if ((v2 & 0x1FE00) != 0)
    *((_DWORD *)v1 + 22) = 0;
  if (*((int *)v1 + 18) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*((_QWORD *)v1 + 8) + 8 * v3);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *((int *)v1 + 18));
  }
  v6 = *((_QWORD *)v1 + 1);
  v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v5 + 16) = 0;
  *((_DWORD *)v5 + 22) = 0;
  if (v6)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088B6C(uint64_t a1)
{
  unsigned int v1;
  int v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v4;

  v1 = *(_DWORD *)(a1 + 232);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(a1 + 96) = 0;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_QWORD *)(a1 + 136) = 0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
  }
  if (HIBYTE(v1))
  {
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
  }
  v2 = *(_DWORD *)(a1 + 236);
  if ((_BYTE)v2)
  {
    *(_OWORD *)(a1 + 176) = 0u;
    *(_OWORD *)(a1 + 192) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(a1 + 208) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    *(_DWORD *)(a1 + 224) = 0;
  }
  v4 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_QWORD *)result + 28) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088BF8(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 68))
  {
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 15) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088C20(uint64_t a1)
{
  int v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 104);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 44) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 40) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_QWORD *)(a1 + 80) = 0;
    *(_QWORD *)(a1 + 88) = 0;
    *(_DWORD *)(a1 + 96) = 0;
  }
  v3 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 24) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_100088C70(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;

  v1 = this;
  v2 = *(_DWORD *)(this + 88);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 72) = 0;
    *(_OWORD *)(this + 56) = 0u;
    *(_OWORD *)(this + 40) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 76) = 0;
    *(_DWORD *)(this + 80) = 0;
  }
  if (*(int *)(this + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 24));
  }
  v6 = *(_QWORD *)(v1 + 8);
  v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 4) = 0;
  *((_DWORD *)v5 + 20) = 0;
  if (v6)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088D08(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  int v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  uint64_t v4;

  v1 = this;
  LOBYTE(v2) = *((_BYTE *)this + 52);
  if ((_BYTE)v2)
  {
    *((_QWORD *)this + 2) = 0;
    if ((v2 & 4) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 3);
      if (this)
      {
        this = sub_1000A2EB0((uint64_t)this);
        v2 = *((_DWORD *)v1 + 13);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 4);
      if (this)
        this = sub_1000A2EB0((uint64_t)this);
    }
    *((_QWORD *)v1 + 5) = 0;
  }
  v4 = *((_QWORD *)v1 + 1);
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 11) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088D74(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;

  v1 = this;
  v2 = *((_BYTE *)this + 76);
  if (v2)
  {
    *((_DWORD *)this + 10) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 4);
      if (this)
        this = sub_1000918A8((uint64_t)this);
    }
    *((_DWORD *)v1 + 11) = 0;
  }
  if (*((int *)v1 + 14) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*((_QWORD *)v1 + 6) + 8 * v3);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *((int *)v1 + 14));
  }
  v6 = *((_QWORD *)v1 + 1);
  v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v5 + 12) = 0;
  *((_DWORD *)v5 + 17) = 0;
  if (v6)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088E08(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  int v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  uint64_t v4;

  v1 = this;
  v2 = *((_DWORD *)this + 22);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      if (this)
      {
        this = sub_1000918A8((uint64_t)this);
        v2 = *((_DWORD *)v1 + 22);
      }
    }
    *((_QWORD *)v1 + 3) = 0;
    *((_QWORD *)v1 + 4) = 0;
    *((_DWORD *)v1 + 12) = 0;
    *((_QWORD *)v1 + 5) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)((char *)v1 + 60) = 0;
    *(_QWORD *)((char *)v1 + 52) = 0;
    *(_QWORD *)((char *)v1 + 73) = 0;
    *(_QWORD *)((char *)v1 + 68) = 0;
  }
  v4 = *((_QWORD *)v1 + 1);
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 20) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088E84(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;

  v1 = this;
  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
    if (this)
      this = sub_100092178(this);
  }
  v3 = *((_QWORD *)v1 + 1);
  v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100088ED0(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  uint64_t v7;

  v1 = this;
  v2 = *((_DWORD *)this + 40);
  if ((_BYTE)v2)
  {
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)this + 4) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 5);
      if (this)
      {
        this = sub_1000918A8((uint64_t)this);
        v2 = *((_DWORD *)v1 + 40);
      }
    }
    *((_QWORD *)v1 + 6) = 0;
    *((_QWORD *)v1 + 7) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v3 = *((_QWORD *)v1 + 8);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *((_QWORD *)v1 + 13) = 0;
    *(_OWORD *)((char *)v1 + 88) = 0u;
    *(_OWORD *)((char *)v1 + 72) = 0u;
    v2 = *((_DWORD *)v1 + 40);
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *((_DWORD *)v1 + 38) = 0;
    *((_QWORD *)v1 + 14) = 0;
    *((_QWORD *)v1 + 15) = 0;
  }
  if (*((int *)v1 + 34) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*((_QWORD *)v1 + 16) + 8 * v4);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *((int *)v1 + 34));
  }
  v7 = *((_QWORD *)v1 + 1);
  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v6 + 32) = 0;
  *((_DWORD *)v6 + 38) = 0;
  if (v7)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  return this;
}

uint64_t sub_100088FD0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  char *v10;
  signed int v11;
  unint64_t v12;
  char *v13;
  uint64_t result;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v24;
  int v25;
  BOOL v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v35;
  int v36;
  int v37;
  _BYTE *v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v45;
  int v46;
  int v47;
  _BYTE *v48;
  uint64_t v49;
  char *v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v55;
  int v56;
  int v57;
  _BYTE *v58;
  uint64_t v59;
  char *v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v65;
  int v66;
  int v67;
  _BYTE *v68;
  uint64_t v69;
  char *v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v75;
  int v76;
  int v77;
  _BYTE *v78;
  uint64_t v79;
  char *v80;
  int v81;
  int v82;
  int v83;
  uint64_t v84;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v85;
  int v86;
  int v87;
  _BYTE *v88;
  uint64_t v89;
  char *v90;
  int v91;
  int v92;
  int v93;
  uint64_t v94;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v95;
  int v96;
  int v97;
  _BYTE *v98;
  uint64_t v99;
  char *v100;
  int v101;
  int v102;
  int v103;
  uint64_t v104;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v105;
  int v106;
  int v107;
  _BYTE *v108;
  int *v109;
  char *v110;
  int v111;
  int v112;
  int v113;
  uint64_t v114;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v115;
  int v116;
  int v117;
  _BYTE *v118;
  int *v119;
  char *v120;
  int v121;
  int v122;
  int v123;
  uint64_t v124;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v125;
  int v126;
  int v127;
  _BYTE *v128;
  unsigned int *v129;
  char *v130;
  int v131;
  int v132;
  int v133;
  uint64_t v134;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v135;
  int v136;
  int v137;
  _BYTE *v138;
  uint64_t v139;
  char *v140;
  int v141;
  int v142;
  int v143;
  uint64_t v144;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v145;
  int v146;
  int v147;
  unsigned __int8 *v148;
  uint64_t v149;
  char *v150;
  int v151;
  int v152;
  int v153;
  uint64_t v154;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v155;
  int v156;
  int v157;
  unsigned __int8 *v158;
  uint64_t v159;
  char *v160;
  int v161;
  int v162;
  int v163;
  uint64_t v164;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v165;
  int v166;
  int v167;
  unsigned __int8 *v168;
  uint64_t v169;
  char *v170;
  int v171;
  int v172;
  int v173;
  uint64_t v174;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v175;
  int v176;
  int v177;
  unsigned __int8 *v178;
  uint64_t v179;
  char *v180;
  int v181;
  int v182;
  int v183;
  uint64_t v184;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v185;
  int v186;
  int v187;
  unsigned __int8 *v188;
  uint64_t v189;
  char *v190;
  int v191;
  int v192;
  int v193;
  uint64_t v194;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v195;
  int v196;
  int v197;
  unsigned __int8 *v198;
  uint64_t v199;
  char *v200;
  int v201;
  int v202;
  int v203;
  uint64_t v204;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v205;
  int v206;
  int v207;
  unsigned __int8 *v208;
  uint64_t v209;
  char *v210;
  int v211;
  int v212;
  int v213;
  uint64_t v214;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v215;
  int v216;
  int v217;
  unsigned __int8 *v218;
  uint64_t v219;
  char *v220;
  int v221;
  int v222;
  int v223;
  uint64_t v224;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v225;
  int v226;
  int v227;
  unsigned __int8 *v228;
  uint64_t v229;
  char *v230;
  int v231;
  int v232;
  int v233;
  uint64_t v234;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v235;
  int v236;
  int v237;
  unsigned __int8 *v238;
  uint64_t v239;
  char *v240;
  int v241;
  int v242;
  int v243;
  uint64_t v244;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v245;
  int v246;
  int v247;
  unsigned __int8 *v248;
  uint64_t v249;
  char *v250;
  int v251;
  int v252;
  int v253;
  uint64_t v254;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v255;
  int v256;
  int v257;
  unsigned __int8 *v258;
  uint64_t v259;
  char *v260;
  int v261;
  int v262;
  int v263;
  uint64_t v264;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v265;
  int v266;
  int v267;
  unsigned __int8 *v268;
  uint64_t v269;
  char *v270;
  int v271;
  int v272;
  int v273;
  uint64_t v274;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v275;
  int v276;
  int v277;
  unsigned __int8 *v278;
  uint64_t v279;
  char *v280;
  int v281;
  int v282;
  int v283;
  uint64_t v284;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v285;
  int v286;
  int v287;
  unsigned __int8 *v288;
  uint64_t v289;
  char *v290;
  int v291;
  int v292;
  int v293;
  uint64_t v294;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v295;
  int v296;
  int v297;
  unsigned int v298;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_70;
        v298 = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 < *((_QWORD *)this + 2) && (*v10 & 0x80000000) == 0)
        {
          v11 = *v10;
          *((_QWORD *)this + 1) = v10 + 1;
          goto LABEL_75;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298);
        if ((_DWORD)result)
        {
          v11 = v298;
LABEL_75:
          if ((v11 - 1) > 2)
          {
            wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v11);
          }
          else
          {
            *(_DWORD *)(a1 + 252) |= 1u;
            *(_DWORD *)(a1 + 16) = v11;
          }
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          if ((unint64_t)v15 < v12 && *v15 == 16)
          {
            v13 = v15 + 1;
            *((_QWORD *)this + 1) = v13;
            goto LABEL_81;
          }
          continue;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_70;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_81:
        v298 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298);
          if (!(_DWORD)result)
            return result;
          v16 = v298;
        }
        else
        {
          v16 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        if (v16 >= 0x15 && v16 - 22 > 6)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v16);
        }
        else
        {
          if (v16 >= 0x15 && v16 - 22 >= 7)
            sub_1003CCC58();
          *(_DWORD *)(a1 + 252) |= 2u;
          *(_DWORD *)(a1 + 20) = v16;
        }
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 != 26)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
LABEL_94:
        *(_DWORD *)(a1 + 252) |= 4u;
        v18 = *(_QWORD *)(a1 + 24);
        if (!v18)
          operator new();
        v298 = 0;
        v19 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v19;
          *((_QWORD *)this + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)this + 14);
        v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_100092954(v18, this, v23, v24) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        v25 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v25, 1);
        v27 = v25 - 1;
        if (v27 < 0 == v26)
          *((_DWORD *)this + 14) = v27;
        v28 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v28 >= *((_QWORD *)this + 2) || *v28 != 34)
          continue;
        *((_QWORD *)this + 1) = v28 + 1;
LABEL_108:
        *(_DWORD *)(a1 + 252) |= 8u;
        v29 = *(_QWORD *)(a1 + 32);
        if (!v29)
          operator new();
        v298 = 0;
        v30 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v30 >= *((_QWORD *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v30;
          *((_QWORD *)this + 1) = v30 + 1;
        }
        v31 = *((_DWORD *)this + 14);
        v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32)
          return 0;
        v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_100093008(v29, this, v34, v35) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        v36 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v36, 1);
        v37 = v36 - 1;
        if (v37 < 0 == v26)
          *((_DWORD *)this + 14) = v37;
        v38 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v38 >= *((_QWORD *)this + 2) || *v38 != 42)
          continue;
        *((_QWORD *)this + 1) = v38 + 1;
LABEL_122:
        *(_DWORD *)(a1 + 252) |= 0x10u;
        v39 = *(_QWORD *)(a1 + 40);
        if (!v39)
          operator new();
        v298 = 0;
        v40 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v40 >= *((_QWORD *)this + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v40;
          *((_QWORD *)this + 1) = v40 + 1;
        }
        v41 = *((_DWORD *)this + 14);
        v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42)
          return 0;
        v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000945F0(v39, this, v44, v45) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        v46 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v46, 1);
        v47 = v46 - 1;
        if (v47 < 0 == v26)
          *((_DWORD *)this + 14) = v47;
        v48 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v48 >= *((_QWORD *)this + 2) || *v48 != 50)
          continue;
        *((_QWORD *)this + 1) = v48 + 1;
LABEL_136:
        *(_DWORD *)(a1 + 252) |= 0x20u;
        v49 = *(_QWORD *)(a1 + 48);
        if (!v49)
          operator new();
        v298 = 0;
        v50 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v50 >= *((_QWORD *)this + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v50;
          *((_QWORD *)this + 1) = v50 + 1;
        }
        v51 = *((_DWORD *)this + 14);
        v52 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v51 + 1;
        if (v51 >= v52)
          return 0;
        v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_100095708(v49, this, v54, v55) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
        v56 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v56, 1);
        v57 = v56 - 1;
        if (v57 < 0 == v26)
          *((_DWORD *)this + 14) = v57;
        v58 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v58 >= *((_QWORD *)this + 2) || *v58 != 58)
          continue;
        *((_QWORD *)this + 1) = v58 + 1;
LABEL_150:
        *(_DWORD *)(a1 + 252) |= 0x40u;
        v59 = *(_QWORD *)(a1 + 56);
        if (!v59)
          operator new();
        v298 = 0;
        v60 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v60 >= *((_QWORD *)this + 2) || *v60 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v60;
          *((_QWORD *)this + 1) = v60 + 1;
        }
        v61 = *((_DWORD *)this + 14);
        v62 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v61 + 1;
        if (v61 >= v62)
          return 0;
        v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_100095D44(v59, this, v64, v65) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
        v66 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v66, 1);
        v67 = v66 - 1;
        if (v67 < 0 == v26)
          *((_DWORD *)this + 14) = v67;
        v68 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v68 >= *((_QWORD *)this + 2) || *v68 != 66)
          continue;
        *((_QWORD *)this + 1) = v68 + 1;
LABEL_164:
        *(_DWORD *)(a1 + 252) |= 0x80u;
        v69 = *(_QWORD *)(a1 + 64);
        if (!v69)
          operator new();
        v298 = 0;
        v70 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v70 >= *((_QWORD *)this + 2) || *v70 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v70;
          *((_QWORD *)this + 1) = v70 + 1;
        }
        v71 = *((_DWORD *)this + 14);
        v72 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v71 + 1;
        if (v71 >= v72)
          return 0;
        v73 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009668C(v69, this, v74, v75) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v73);
        v76 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v76, 1);
        v77 = v76 - 1;
        if (v77 < 0 == v26)
          *((_DWORD *)this + 14) = v77;
        v78 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v78 >= *((_QWORD *)this + 2) || *v78 != 74)
          continue;
        *((_QWORD *)this + 1) = v78 + 1;
LABEL_178:
        *(_DWORD *)(a1 + 252) |= 0x100u;
        v79 = *(_QWORD *)(a1 + 72);
        if (!v79)
          operator new();
        v298 = 0;
        v80 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v80 >= *((_QWORD *)this + 2) || *v80 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v80;
          *((_QWORD *)this + 1) = v80 + 1;
        }
        v81 = *((_DWORD *)this + 14);
        v82 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v81 + 1;
        if (v81 >= v82)
          return 0;
        v83 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_100096CC8(v79, this, v84, v85) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v83);
        v86 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v86, 1);
        v87 = v86 - 1;
        if (v87 < 0 == v26)
          *((_DWORD *)this + 14) = v87;
        v88 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v88 >= *((_QWORD *)this + 2) || *v88 != 82)
          continue;
        *((_QWORD *)this + 1) = v88 + 1;
LABEL_192:
        *(_DWORD *)(a1 + 252) |= 0x200u;
        v89 = *(_QWORD *)(a1 + 80);
        if (!v89)
          operator new();
        v298 = 0;
        v90 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v90 >= *((_QWORD *)this + 2) || *v90 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v90;
          *((_QWORD *)this + 1) = v90 + 1;
        }
        v91 = *((_DWORD *)this + 14);
        v92 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v91 + 1;
        if (v91 >= v92)
          return 0;
        v93 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_100097450(v89, this, v94, v95) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v93);
        v96 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v96, 1);
        v97 = v96 - 1;
        if (v97 < 0 == v26)
          *((_DWORD *)this + 14) = v97;
        v98 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v98 >= *((_QWORD *)this + 2) || *v98 != 90)
          continue;
        *((_QWORD *)this + 1) = v98 + 1;
LABEL_206:
        *(_DWORD *)(a1 + 252) |= 0x400u;
        v99 = *(_QWORD *)(a1 + 88);
        if (!v99)
          operator new();
        v298 = 0;
        v100 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v100 >= *((_QWORD *)this + 2) || *v100 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v100;
          *((_QWORD *)this + 1) = v100 + 1;
        }
        v101 = *((_DWORD *)this + 14);
        v102 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v101 + 1;
        if (v101 >= v102)
          return 0;
        v103 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_100097A84(v99, this, v104, v105) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v103);
        v106 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v106, 1);
        v107 = v106 - 1;
        if (v107 < 0 == v26)
          *((_DWORD *)this + 14) = v107;
        v108 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v108 >= *((_QWORD *)this + 2) || *v108 != 98)
          continue;
        *((_QWORD *)this + 1) = v108 + 1;
LABEL_220:
        *(_DWORD *)(a1 + 252) |= 0x800u;
        v109 = *(int **)(a1 + 96);
        if (!v109)
          operator new();
        v298 = 0;
        v110 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v110 >= *((_QWORD *)this + 2) || *v110 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v110;
          *((_QWORD *)this + 1) = v110 + 1;
        }
        v111 = *((_DWORD *)this + 14);
        v112 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v111 + 1;
        if (v111 >= v112)
          return 0;
        v113 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_100098AE8(v109, this, v114, v115) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v113);
        v116 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v116, 1);
        v117 = v116 - 1;
        if (v117 < 0 == v26)
          *((_DWORD *)this + 14) = v117;
        v118 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v118 >= *((_QWORD *)this + 2) || *v118 != 106)
          continue;
        *((_QWORD *)this + 1) = v118 + 1;
LABEL_234:
        *(_DWORD *)(a1 + 252) |= 0x1000u;
        v119 = *(int **)(a1 + 104);
        if (!v119)
          operator new();
        v298 = 0;
        v120 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v120 >= *((_QWORD *)this + 2) || *v120 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v120;
          *((_QWORD *)this + 1) = v120 + 1;
        }
        v121 = *((_DWORD *)this + 14);
        v122 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v121 + 1;
        if (v121 >= v122)
          return 0;
        v123 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000992B4(v119, this, v124, v125) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v123);
        v126 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v126, 1);
        v127 = v126 - 1;
        if (v127 < 0 == v26)
          *((_DWORD *)this + 14) = v127;
        v128 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v128 >= *((_QWORD *)this + 2) || *v128 != 114)
          continue;
        *((_QWORD *)this + 1) = v128 + 1;
LABEL_248:
        *(_DWORD *)(a1 + 252) |= 0x2000u;
        v129 = *(unsigned int **)(a1 + 112);
        if (!v129)
          operator new();
        v298 = 0;
        v130 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v130 >= *((_QWORD *)this + 2) || *v130 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v130;
          *((_QWORD *)this + 1) = v130 + 1;
        }
        v131 = *((_DWORD *)this + 14);
        v132 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v131 + 1;
        if (v131 >= v132)
          return 0;
        v133 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009994C(v129, this, v134, v135) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v133);
        v136 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v136, 1);
        v137 = v136 - 1;
        if (v137 < 0 == v26)
          *((_DWORD *)this + 14) = v137;
        v138 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v138 >= *((_QWORD *)this + 2) || *v138 != 122)
          continue;
        *((_QWORD *)this + 1) = v138 + 1;
LABEL_262:
        *(_DWORD *)(a1 + 252) |= 0x4000u;
        v139 = *(_QWORD *)(a1 + 120);
        if (!v139)
          operator new();
        v298 = 0;
        v140 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v140 >= *((_QWORD *)this + 2) || *v140 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v140;
          *((_QWORD *)this + 1) = v140 + 1;
        }
        v141 = *((_DWORD *)this + 14);
        v142 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v141 + 1;
        if (v141 >= v142)
          return 0;
        v143 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009AB90(v139, this, v144, v145) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v143);
        v146 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v146, 1);
        v147 = v146 - 1;
        if (v147 < 0 == v26)
          *((_DWORD *)this + 14) = v147;
        v148 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v148 <= 1 || *v148 != 130 || v148[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v148 + 2;
LABEL_277:
        *(_DWORD *)(a1 + 252) |= 0x8000u;
        v149 = *(_QWORD *)(a1 + 128);
        if (!v149)
          operator new();
        v298 = 0;
        v150 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v150 >= *((_QWORD *)this + 2) || *v150 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v150;
          *((_QWORD *)this + 1) = v150 + 1;
        }
        v151 = *((_DWORD *)this + 14);
        v152 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v151 + 1;
        if (v151 >= v152)
          return 0;
        v153 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009D284(v149, this, v154, v155) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v153);
        v156 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v156, 1);
        v157 = v156 - 1;
        if (v157 < 0 == v26)
          *((_DWORD *)this + 14) = v157;
        v158 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v158 <= 1 || *v158 != 138 || v158[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v158 + 2;
LABEL_292:
        *(_DWORD *)(a1 + 252) |= 0x10000u;
        v159 = *(_QWORD *)(a1 + 136);
        if (!v159)
          operator new();
        v298 = 0;
        v160 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v160 >= *((_QWORD *)this + 2) || *v160 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v160;
          *((_QWORD *)this + 1) = v160 + 1;
        }
        v161 = *((_DWORD *)this + 14);
        v162 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v161 + 1;
        if (v161 >= v162)
          return 0;
        v163 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000A2664(v159, this, v164, v165) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v163);
        v166 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v166, 1);
        v167 = v166 - 1;
        if (v167 < 0 == v26)
          *((_DWORD *)this + 14) = v167;
        v168 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v168 <= 1 || *v168 != 146 || v168[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v168 + 2;
LABEL_307:
        *(_DWORD *)(a1 + 252) |= 0x20000u;
        v169 = *(_QWORD *)(a1 + 144);
        if (!v169)
          operator new();
        v298 = 0;
        v170 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v170 >= *((_QWORD *)this + 2) || *v170 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v170;
          *((_QWORD *)this + 1) = v170 + 1;
        }
        v171 = *((_DWORD *)this + 14);
        v172 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v171 + 1;
        if (v171 >= v172)
          return 0;
        v173 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000A6398(v169, this, v174, v175) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v173);
        v176 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v176, 1);
        v177 = v176 - 1;
        if (v177 < 0 == v26)
          *((_DWORD *)this + 14) = v177;
        v178 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v178 <= 1 || *v178 != 154 || v178[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v178 + 2;
LABEL_322:
        *(_DWORD *)(a1 + 252) |= 0x40000u;
        v179 = *(_QWORD *)(a1 + 152);
        if (!v179)
          operator new();
        v298 = 0;
        v180 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v180 >= *((_QWORD *)this + 2) || *v180 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v180;
          *((_QWORD *)this + 1) = v180 + 1;
        }
        v181 = *((_DWORD *)this + 14);
        v182 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v181 + 1;
        if (v181 >= v182)
          return 0;
        v183 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000A742C(v179, this, v184, v185) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v183);
        v186 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v186, 1);
        v187 = v186 - 1;
        if (v187 < 0 == v26)
          *((_DWORD *)this + 14) = v187;
        v188 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v188 <= 1 || *v188 != 162 || v188[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v188 + 2;
LABEL_337:
        *(_DWORD *)(a1 + 252) |= 0x80000u;
        v189 = *(_QWORD *)(a1 + 160);
        if (!v189)
          operator new();
        v298 = 0;
        v190 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v190 >= *((_QWORD *)this + 2) || *v190 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v190;
          *((_QWORD *)this + 1) = v190 + 1;
        }
        v191 = *((_DWORD *)this + 14);
        v192 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v191 + 1;
        if (v191 >= v192)
          return 0;
        v193 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000A9C8C(v189, this, v194, v195) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v193);
        v196 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v196, 1);
        v197 = v196 - 1;
        if (v197 < 0 == v26)
          *((_DWORD *)this + 14) = v197;
        v198 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v198 <= 1 || *v198 != 170 || v198[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v198 + 2;
LABEL_352:
        *(_DWORD *)(a1 + 252) |= 0x100000u;
        v199 = *(_QWORD *)(a1 + 168);
        if (!v199)
          operator new();
        v298 = 0;
        v200 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v200 >= *((_QWORD *)this + 2) || *v200 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v200;
          *((_QWORD *)this + 1) = v200 + 1;
        }
        v201 = *((_DWORD *)this + 14);
        v202 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v201 + 1;
        if (v201 >= v202)
          return 0;
        v203 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000AAF20(v199, this, v204, v205) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v203);
        v206 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v206, 1);
        v207 = v206 - 1;
        if (v207 < 0 == v26)
          *((_DWORD *)this + 14) = v207;
        v208 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v208 <= 1 || *v208 != 178 || v208[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v208 + 2;
LABEL_367:
        *(_DWORD *)(a1 + 252) |= 0x200000u;
        v209 = *(_QWORD *)(a1 + 176);
        if (!v209)
          operator new();
        v298 = 0;
        v210 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v210 >= *((_QWORD *)this + 2) || *v210 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v210;
          *((_QWORD *)this + 1) = v210 + 1;
        }
        v211 = *((_DWORD *)this + 14);
        v212 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v211 + 1;
        if (v211 >= v212)
          return 0;
        v213 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000AD9A4(v209, this, v214, v215) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v213);
        v216 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v216, 1);
        v217 = v216 - 1;
        if (v217 < 0 == v26)
          *((_DWORD *)this + 14) = v217;
        v218 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v218 <= 1 || *v218 != 186 || v218[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v218 + 2;
LABEL_382:
        *(_DWORD *)(a1 + 252) |= 0x400000u;
        v219 = *(_QWORD *)(a1 + 184);
        if (!v219)
          operator new();
        v298 = 0;
        v220 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v220 >= *((_QWORD *)this + 2) || *v220 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v220;
          *((_QWORD *)this + 1) = v220 + 1;
        }
        v221 = *((_DWORD *)this + 14);
        v222 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v221 + 1;
        if (v221 >= v222)
          return 0;
        v223 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B0D34(v219, this, v224, v225) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v223);
        v226 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v226, 1);
        v227 = v226 - 1;
        if (v227 < 0 == v26)
          *((_DWORD *)this + 14) = v227;
        v228 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v228 <= 1 || *v228 != 202 || v228[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v228 + 2;
LABEL_397:
        *(_DWORD *)(a1 + 252) |= 0x800000u;
        v229 = *(_QWORD *)(a1 + 192);
        if (!v229)
          operator new();
        v298 = 0;
        v230 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v230 >= *((_QWORD *)this + 2) || *v230 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v230;
          *((_QWORD *)this + 1) = v230 + 1;
        }
        v231 = *((_DWORD *)this + 14);
        v232 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v231 + 1;
        if (v231 >= v232)
          return 0;
        v233 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B3DDC(v229, this, v234, v235) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v233);
        v236 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v236, 1);
        v237 = v236 - 1;
        if (v237 < 0 == v26)
          *((_DWORD *)this + 14) = v237;
        v238 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v238 <= 1 || *v238 != 210 || v238[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v238 + 2;
LABEL_412:
        *(_DWORD *)(a1 + 252) |= 0x1000000u;
        v239 = *(_QWORD *)(a1 + 200);
        if (!v239)
          operator new();
        v298 = 0;
        v240 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v240 >= *((_QWORD *)this + 2) || *v240 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v240;
          *((_QWORD *)this + 1) = v240 + 1;
        }
        v241 = *((_DWORD *)this + 14);
        v242 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v241 + 1;
        if (v241 >= v242)
          return 0;
        v243 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B5724(v239, this, v244, v245) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v243);
        v246 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v246, 1);
        v247 = v246 - 1;
        if (v247 < 0 == v26)
          *((_DWORD *)this + 14) = v247;
        v248 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v248 <= 1 || *v248 != 218 || v248[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v248 + 2;
LABEL_427:
        *(_DWORD *)(a1 + 252) |= 0x2000000u;
        v249 = *(_QWORD *)(a1 + 208);
        if (!v249)
          operator new();
        v298 = 0;
        v250 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v250 >= *((_QWORD *)this + 2) || *v250 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v250;
          *((_QWORD *)this + 1) = v250 + 1;
        }
        v251 = *((_DWORD *)this + 14);
        v252 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v251 + 1;
        if (v251 >= v252)
          return 0;
        v253 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B66F0(v249, this, v254, v255) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v253);
        v256 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v256, 1);
        v257 = v256 - 1;
        if (v257 < 0 == v26)
          *((_DWORD *)this + 14) = v257;
        v258 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v258 <= 1 || *v258 != 226 || v258[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v258 + 2;
LABEL_442:
        *(_DWORD *)(a1 + 252) |= 0x4000000u;
        v259 = *(_QWORD *)(a1 + 216);
        if (!v259)
          operator new();
        v298 = 0;
        v260 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v260 >= *((_QWORD *)this + 2) || *v260 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v260;
          *((_QWORD *)this + 1) = v260 + 1;
        }
        v261 = *((_DWORD *)this + 14);
        v262 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v261 + 1;
        if (v261 >= v262)
          return 0;
        v263 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000ACC28(v259, this, v264, v265) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v263);
        v266 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v266, 1);
        v267 = v266 - 1;
        if (v267 < 0 == v26)
          *((_DWORD *)this + 14) = v267;
        v268 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v268 <= 1 || *v268 != 234 || v268[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v268 + 2;
LABEL_457:
        *(_DWORD *)(a1 + 252) |= 0x8000000u;
        v269 = *(_QWORD *)(a1 + 224);
        if (!v269)
          operator new();
        v298 = 0;
        v270 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v270 >= *((_QWORD *)this + 2) || *v270 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v270;
          *((_QWORD *)this + 1) = v270 + 1;
        }
        v271 = *((_DWORD *)this + 14);
        v272 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v271 + 1;
        if (v271 >= v272)
          return 0;
        v273 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B7374(v269, this, v274, v275) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v273);
        v276 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v276, 1);
        v277 = v276 - 1;
        if (v277 < 0 == v26)
          *((_DWORD *)this + 14) = v277;
        v278 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v278 <= 1 || *v278 != 242 || v278[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v278 + 2;
LABEL_472:
        *(_DWORD *)(a1 + 252) |= 0x10000000u;
        v279 = *(_QWORD *)(a1 + 232);
        if (!v279)
          operator new();
        v298 = 0;
        v280 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v280 >= *((_QWORD *)this + 2) || *v280 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v280;
          *((_QWORD *)this + 1) = v280 + 1;
        }
        v281 = *((_DWORD *)this + 14);
        v282 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v281 + 1;
        if (v281 >= v282)
          return 0;
        v283 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B889C(v279, this, v284, v285) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v283);
        v286 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v286, 1);
        v287 = v286 - 1;
        if (v287 < 0 == v26)
          *((_DWORD *)this + 14) = v287;
        v288 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v288 <= 1 || *v288 != 250 || v288[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v288 + 2;
LABEL_487:
        *(_DWORD *)(a1 + 252) |= 0x20000000u;
        v289 = *(_QWORD *)(a1 + 240);
        if (!v289)
          operator new();
        v298 = 0;
        v290 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v290 >= *((_QWORD *)this + 2) || *v290 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0;
        }
        else
        {
          v298 = *v290;
          *((_QWORD *)this + 1) = v290 + 1;
        }
        v291 = *((_DWORD *)this + 14);
        v292 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v291 + 1;
        if (v291 >= v292)
          return 0;
        v293 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B2174(v289, this, v294, v295) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v293);
        v296 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v296, 1);
        v297 = v296 - 1;
        if (v297 < 0 == v26)
          *((_DWORD *)this + 14) = v297;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_94;
        goto LABEL_70;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_108;
        goto LABEL_70;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_122;
        goto LABEL_70;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_136;
        goto LABEL_70;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_150;
        goto LABEL_70;
      case 8u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_164;
        goto LABEL_70;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_178;
        goto LABEL_70;
      case 0xAu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_192;
        goto LABEL_70;
      case 0xBu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_206;
        goto LABEL_70;
      case 0xCu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_220;
        goto LABEL_70;
      case 0xDu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_234;
        goto LABEL_70;
      case 0xEu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_248;
        goto LABEL_70;
      case 0xFu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_262;
        goto LABEL_70;
      case 0x10u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_277;
        goto LABEL_70;
      case 0x11u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_292;
        goto LABEL_70;
      case 0x12u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_307;
        goto LABEL_70;
      case 0x13u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_322;
        goto LABEL_70;
      case 0x14u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_337;
        goto LABEL_70;
      case 0x15u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_352;
        goto LABEL_70;
      case 0x16u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_367;
        goto LABEL_70;
      case 0x17u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_382;
        goto LABEL_70;
      case 0x19u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_397;
        goto LABEL_70;
      case 0x1Au:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_412;
        goto LABEL_70;
      case 0x1Bu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_427;
        goto LABEL_70;
      case 0x1Cu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_442;
        goto LABEL_70;
      case 0x1Du:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_70;
        goto LABEL_457;
      case 0x1Eu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_472;
        goto LABEL_70;
      case 0x1Fu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_487;
        goto LABEL_70;
      default:
        v9 = TagFallback & 7;
LABEL_70:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
        continue;
    }
    return result;
  }
}

void sub_10008AEC0()
{
  operator delete();
}

uint64_t sub_10008B0B8(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v36;
  _QWORD *v37;

  v5 = this;
  v6 = *(_DWORD *)(this + 252);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 252);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_34;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_37;
  }
LABEL_34:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
    v7 = *(_QWORD *)(qword_10085F670 + 24);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_40;
  }
LABEL_37:
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
    v8 = *(_QWORD *)(qword_10085F670 + 32);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_43;
  }
LABEL_40:
  v9 = *(_QWORD *)(v5 + 40);
  if (!v9)
    v9 = *(_QWORD *)(qword_10085F670 + 40);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_46;
  }
LABEL_43:
  v10 = *(_QWORD *)(v5 + 48);
  if (!v10)
    v10 = *(_QWORD *)(qword_10085F670 + 48);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_49;
  }
LABEL_46:
  v11 = *(_QWORD *)(v5 + 56);
  if (!v11)
    v11 = *(_QWORD *)(qword_10085F670 + 56);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_52;
  }
LABEL_49:
  v12 = *(_QWORD *)(v5 + 64);
  if (!v12)
    v12 = *(_QWORD *)(qword_10085F670 + 64);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_55;
  }
LABEL_52:
  v13 = *(_QWORD *)(v5 + 72);
  if (!v13)
    v13 = *(_QWORD *)(qword_10085F670 + 72);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_58;
  }
LABEL_55:
  v14 = *(_QWORD *)(v5 + 80);
  if (!v14)
    v14 = *(_QWORD *)(qword_10085F670 + 80);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v14, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_61;
  }
LABEL_58:
  v15 = *(_QWORD *)(v5 + 88);
  if (!v15)
    v15 = *(_QWORD *)(qword_10085F670 + 88);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v15, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_64;
  }
LABEL_61:
  v16 = *(_QWORD *)(v5 + 96);
  if (!v16)
    v16 = *(_QWORD *)(qword_10085F670 + 96);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v16, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_67;
  }
LABEL_64:
  v17 = *(_QWORD *)(v5 + 104);
  if (!v17)
    v17 = *(_QWORD *)(qword_10085F670 + 104);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v17, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_70;
  }
LABEL_67:
  v18 = *(_QWORD *)(v5 + 112);
  if (!v18)
    v18 = *(_QWORD *)(qword_10085F670 + 112);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v18, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_73;
  }
LABEL_70:
  v19 = *(_QWORD *)(v5 + 120);
  if (!v19)
    v19 = *(_QWORD *)(qword_10085F670 + 120);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v19, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_76;
  }
LABEL_73:
  v20 = *(_QWORD *)(v5 + 128);
  if (!v20)
    v20 = *(_QWORD *)(qword_10085F670 + 128);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v20, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_79;
  }
LABEL_76:
  v21 = *(_QWORD *)(v5 + 136);
  if (!v21)
    v21 = *(_QWORD *)(qword_10085F670 + 136);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v21, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_82;
  }
LABEL_79:
  v22 = *(_QWORD *)(v5 + 144);
  if (!v22)
    v22 = *(_QWORD *)(qword_10085F670 + 144);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v22, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_85;
  }
LABEL_82:
  v23 = *(_QWORD *)(v5 + 152);
  if (!v23)
    v23 = *(_QWORD *)(qword_10085F670 + 152);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v23, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_88;
  }
LABEL_85:
  v24 = *(_QWORD *)(v5 + 160);
  if (!v24)
    v24 = *(_QWORD *)(qword_10085F670 + 160);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v24, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_91;
  }
LABEL_88:
  v25 = *(_QWORD *)(v5 + 168);
  if (!v25)
    v25 = *(_QWORD *)(qword_10085F670 + 168);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v25, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_94;
  }
LABEL_91:
  v26 = *(_QWORD *)(v5 + 176);
  if (!v26)
    v26 = *(_QWORD *)(qword_10085F670 + 176);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v26, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_97;
  }
LABEL_94:
  v27 = *(_QWORD *)(v5 + 184);
  if (!v27)
    v27 = *(_QWORD *)(qword_10085F670 + 184);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v27, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_100;
  }
LABEL_97:
  v28 = *(_QWORD *)(v5 + 192);
  if (!v28)
    v28 = *(_QWORD *)(qword_10085F670 + 192);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v28, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_103;
  }
LABEL_100:
  v29 = *(_QWORD *)(v5 + 200);
  if (!v29)
    v29 = *(_QWORD *)(qword_10085F670 + 200);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v29, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_106;
  }
LABEL_103:
  v30 = *(_QWORD *)(v5 + 208);
  if (!v30)
    v30 = *(_QWORD *)(qword_10085F670 + 208);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v30, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_109;
  }
LABEL_106:
  v31 = *(_QWORD *)(v5 + 216);
  if (!v31)
    v31 = *(_QWORD *)(qword_10085F670 + 216);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v31, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_112;
  }
LABEL_109:
  v32 = *(_QWORD *)(v5 + 224);
  if (!v32)
    v32 = *(_QWORD *)(qword_10085F670 + 224);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v32, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_118;
    goto LABEL_115;
  }
LABEL_112:
  v33 = *(_QWORD *)(v5 + 232);
  if (!v33)
    v33 = *(_QWORD *)(qword_10085F670 + 232);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v33, a2, a4);
  if ((*(_DWORD *)(v5 + 252) & 0x20000000) != 0)
  {
LABEL_115:
    v34 = *(_QWORD *)(v5 + 240);
    if (!v34)
      v34 = *(_QWORD *)(qword_10085F670 + 240);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v34, a2, a4);
  }
LABEL_118:
  v37 = *(_QWORD **)(v5 + 8);
  v36 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v35 = v37;
  if (v37)
  {
    if (*v35 != v35[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v36, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008B608(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  unint64_t v10;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v11;
  int v12;
  unsigned int *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v15;
  unsigned int *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v18;
  unsigned int *v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v21;
  unsigned int *v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v24;
  unsigned int *v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v27;
  unsigned int *v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v30;
  unsigned int *v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v33;
  unsigned int *v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v36;
  unsigned int *v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v39;
  unsigned int *v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v42;
  unsigned int *v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v45;
  unsigned int *v46;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v47;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v48;
  unsigned int *v49;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v50;
  _BYTE *v51;
  unsigned int *v52;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v53;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v54;
  unsigned int *v55;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v56;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v57;
  unsigned int *v58;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v59;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v60;
  unsigned int *v61;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v62;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v63;
  unsigned int *v64;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v65;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v66;
  unsigned int *v67;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v68;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v69;
  unsigned int *v70;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v71;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v72;
  unsigned int *v73;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v74;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v75;
  unsigned int *v76;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v77;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v78;
  unsigned int *v79;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v80;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v81;
  unsigned int *v82;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v83;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v84;
  unsigned int *v85;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v86;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v87;
  unsigned int *v88;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v89;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v90;
  unsigned int *v91;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v92;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v93;
  unsigned int *v94;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v95;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v96;
  _QWORD *v97;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v98;
  _QWORD *v99;

  v4 = a2;
  if ((*((_BYTE *)this + 252) & 1) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(_BYTE *)a2 = 8;
    v7 = (char *)a2 + 1;
    if ((v6 & 0x80000000) != 0)
    {
      v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)v7, a3);
    }
    else
    {
      if (v6 <= 0x7F)
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v6;
        v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_8;
      }
      v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v7, a3);
    }
    v4 = v8;
  }
LABEL_8:
  if ((*((_BYTE *)this + 252) & 2) == 0)
    goto LABEL_15;
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
  *(_BYTE *)v4 = 16;
  v10 = (unint64_t)v4 + 1;
  if ((v9 & 0x80000000) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, v10, a3);
  }
  else
  {
    if (v9 <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v9;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_15;
    }
    v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v10, a3);
  }
  v4 = v11;
LABEL_15:
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 4) != 0)
  {
    v13 = (unsigned int *)*((_QWORD *)this + 3);
    if (!v13)
      v13 = *(unsigned int **)(qword_10085F670 + 24);
    *(_BYTE *)v4 = 26;
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[6];
    if (v14 > 0x7F)
    {
      v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v14;
      v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    v4 = sub_100092B18((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
    v12 = *((_DWORD *)this + 63);
    if ((v12 & 8) == 0)
    {
LABEL_17:
      if ((v12 & 0x10) == 0)
        goto LABEL_18;
      goto LABEL_56;
    }
  }
  else if ((v12 & 8) == 0)
  {
    goto LABEL_17;
  }
  v16 = (unsigned int *)*((_QWORD *)this + 4);
  if (!v16)
    v16 = *(unsigned int **)(qword_10085F670 + 32);
  *(_BYTE *)v4 = 34;
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[16];
  if (v17 > 0x7F)
  {
    v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v17;
    v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100093790((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v18, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x10) == 0)
  {
LABEL_18:
    if ((v12 & 0x20) == 0)
      goto LABEL_19;
    goto LABEL_62;
  }
LABEL_56:
  v19 = (unsigned int *)*((_QWORD *)this + 5);
  if (!v19)
    v19 = *(unsigned int **)(qword_10085F670 + 40);
  *(_BYTE *)v4 = 42;
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[20];
  if (v20 > 0x7F)
  {
    v21 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v20;
    v21 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100094F00((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, v21, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x20) == 0)
  {
LABEL_19:
    if ((v12 & 0x40) == 0)
      goto LABEL_20;
    goto LABEL_68;
  }
LABEL_62:
  v22 = (unsigned int *)*((_QWORD *)this + 6);
  if (!v22)
    v22 = *(unsigned int **)(qword_10085F670 + 48);
  *(_BYTE *)v4 = 50;
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22[6];
  if (v23 > 0x7F)
  {
    v24 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v23;
    v24 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100095948((wireless_diagnostics::google::protobuf::internal::WireFormat *)v22, v24, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x40) == 0)
  {
LABEL_20:
    if ((v12 & 0x80) == 0)
      goto LABEL_21;
    goto LABEL_74;
  }
LABEL_68:
  v25 = (unsigned int *)*((_QWORD *)this + 7);
  if (!v25)
    v25 = *(unsigned int **)(qword_10085F670 + 56);
  *(_BYTE *)v4 = 58;
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[10];
  if (v26 > 0x7F)
  {
    v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v26;
    v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_10009617C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, v27, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x80) == 0)
  {
LABEL_21:
    if ((v12 & 0x100) == 0)
      goto LABEL_22;
    goto LABEL_80;
  }
LABEL_74:
  v28 = (unsigned int *)*((_QWORD *)this + 8);
  if (!v28)
    v28 = *(unsigned int **)(qword_10085F670 + 64);
  *(_BYTE *)v4 = 66;
  v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28[6];
  if (v29 > 0x7F)
  {
    v30 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v29;
    v30 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_1000968CC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v28, v30, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x100) == 0)
  {
LABEL_22:
    if ((v12 & 0x200) == 0)
      goto LABEL_23;
    goto LABEL_86;
  }
LABEL_80:
  v31 = (unsigned int *)*((_QWORD *)this + 9);
  if (!v31)
    v31 = *(unsigned int **)(qword_10085F670 + 72);
  *(_BYTE *)v4 = 74;
  v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v31[7];
  if (v32 > 0x7F)
  {
    v33 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v32, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v32;
    v33 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100096FD0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v31, v33, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x200) == 0)
  {
LABEL_23:
    if ((v12 & 0x400) == 0)
      goto LABEL_24;
    goto LABEL_92;
  }
LABEL_86:
  v34 = (unsigned int *)*((_QWORD *)this + 10);
  if (!v34)
    v34 = *(unsigned int **)(qword_10085F670 + 80);
  *(_BYTE *)v4 = 82;
  v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[6];
  if (v35 > 0x7F)
  {
    v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v35, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v35;
    v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100097690((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v36, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x400) == 0)
  {
LABEL_24:
    if ((v12 & 0x800) == 0)
      goto LABEL_25;
    goto LABEL_98;
  }
LABEL_92:
  v37 = (unsigned int *)*((_QWORD *)this + 11);
  if (!v37)
    v37 = *(unsigned int **)(qword_10085F670 + 88);
  *(_BYTE *)v4 = 90;
  v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37[8];
  if (v38 > 0x7F)
  {
    v39 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v38, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v38;
    v39 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100097EBC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v37, v39, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x800) == 0)
  {
LABEL_25:
    if ((v12 & 0x1000) == 0)
      goto LABEL_26;
    goto LABEL_104;
  }
LABEL_98:
  v40 = (unsigned int *)*((_QWORD *)this + 12);
  if (!v40)
    v40 = *(unsigned int **)(qword_10085F670 + 96);
  *(_BYTE *)v4 = 98;
  v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v40[11];
  if (v41 > 0x7F)
  {
    v42 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v41;
    v42 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100098E2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v40, v42, a3, a4);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x1000) == 0)
  {
LABEL_26:
    if ((v12 & 0x2000) == 0)
      goto LABEL_27;
    goto LABEL_110;
  }
LABEL_104:
  v43 = (unsigned int *)*((_QWORD *)this + 13);
  if (!v43)
    v43 = *(unsigned int **)(qword_10085F670 + 104);
  *(_BYTE *)v4 = 106;
  v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v43[10];
  if (v44 > 0x7F)
  {
    v45 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v44, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v44;
    v45 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100099534((wireless_diagnostics::google::protobuf::internal::WireFormat *)v43, v45, a3, a4);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x2000) == 0)
  {
LABEL_27:
    if ((v12 & 0x4000) == 0)
      goto LABEL_28;
    goto LABEL_116;
  }
LABEL_110:
  v46 = (unsigned int *)*((_QWORD *)this + 14);
  if (!v46)
    v46 = *(unsigned int **)(qword_10085F670 + 112);
  *(_BYTE *)v4 = 114;
  v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v46[7];
  if (v47 > 0x7F)
  {
    v48 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v47, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v47;
    v48 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  v4 = sub_100099C3C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v46, v48, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x4000) == 0)
  {
LABEL_28:
    if ((v12 & 0x8000) == 0)
      goto LABEL_29;
    goto LABEL_122;
  }
LABEL_116:
  v49 = (unsigned int *)*((_QWORD *)this + 15);
  if (!v49)
    v49 = *(unsigned int **)(qword_10085F670 + 120);
  *(_BYTE *)v4 = 122;
  v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v49[13];
  if (v50 > 0x7F)
  {
    v51 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v50, (int)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v50;
    v51 = (char *)v4 + 2;
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10009B018((wireless_diagnostics::google::protobuf::internal::WireFormat *)v49, v51, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x8000) == 0)
  {
LABEL_29:
    if ((v12 & 0x10000) == 0)
      goto LABEL_30;
    goto LABEL_128;
  }
LABEL_122:
  v52 = (unsigned int *)*((_QWORD *)this + 16);
  if (!v52)
    v52 = *(unsigned int **)(qword_10085F670 + 128);
  *(_WORD *)v4 = 386;
  v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v52[116];
  if (v53 > 0x7F)
  {
    v54 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v53, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v53;
    v54 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000A0624((wireless_diagnostics::google::protobuf::internal::WireFormat *)v52, v54, a3, a4);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x10000) == 0)
  {
LABEL_30:
    if ((v12 & 0x20000) == 0)
      goto LABEL_31;
    goto LABEL_134;
  }
LABEL_128:
  v55 = (unsigned int *)*((_QWORD *)this + 17);
  if (!v55)
    v55 = *(unsigned int **)(qword_10085F670 + 136);
  *(_WORD *)v4 = 394;
  v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v55[7];
  if (v56 > 0x7F)
  {
    v57 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v56, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v56;
    v57 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000A2970((wireless_diagnostics::google::protobuf::internal::WireFormat *)v55, v57, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x20000) == 0)
  {
LABEL_31:
    if ((v12 & 0x40000) == 0)
      goto LABEL_32;
    goto LABEL_140;
  }
LABEL_134:
  v58 = (unsigned int *)*((_QWORD *)this + 18);
  if (!v58)
    v58 = *(unsigned int **)(qword_10085F670 + 144);
  *(_WORD *)v4 = 402;
  v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v58[23];
  if (v59 > 0x7F)
  {
    v60 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v59, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v59;
    v60 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000A6BD8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v58, v60, a3, a4);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x40000) == 0)
  {
LABEL_32:
    if ((v12 & 0x80000) == 0)
      goto LABEL_33;
    goto LABEL_146;
  }
LABEL_140:
  v61 = (unsigned int *)*((_QWORD *)this + 19);
  if (!v61)
    v61 = *(unsigned int **)(qword_10085F670 + 152);
  *(_WORD *)v4 = 410;
  v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v61[74];
  if (v62 > 0x7F)
  {
    v63 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v62, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v62;
    v63 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000A8AD4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v61, v63, a3, a4);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x80000) == 0)
  {
LABEL_33:
    if ((v12 & 0x100000) == 0)
      goto LABEL_34;
    goto LABEL_152;
  }
LABEL_146:
  v64 = (unsigned int *)*((_QWORD *)this + 20);
  if (!v64)
    v64 = *(unsigned int **)(qword_10085F670 + 160);
  *(_WORD *)v4 = 418;
  v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v64[32];
  if (v65 > 0x7F)
  {
    v66 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v65, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v65;
    v66 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000AA684((wireless_diagnostics::google::protobuf::internal::WireFormat *)v64, v66, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x100000) == 0)
  {
LABEL_34:
    if ((v12 & 0x200000) == 0)
      goto LABEL_35;
    goto LABEL_158;
  }
LABEL_152:
  v67 = (unsigned int *)*((_QWORD *)this + 21);
  if (!v67)
    v67 = *(unsigned int **)(qword_10085F670 + 168);
  *(_WORD *)v4 = 426;
  v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v67[23];
  if (v68 > 0x7F)
  {
    v69 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v68, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v68;
    v69 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000AB74C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v67, v69, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x200000) == 0)
  {
LABEL_35:
    if ((v12 & 0x400000) == 0)
      goto LABEL_36;
    goto LABEL_164;
  }
LABEL_158:
  v70 = (unsigned int *)*((_QWORD *)this + 22);
  if (!v70)
    v70 = *(unsigned int **)(qword_10085F670 + 176);
  *(_WORD *)v4 = 434;
  v71 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v70[57];
  if (v71 > 0x7F)
  {
    v72 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v71, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v71;
    v72 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000AF7AC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v70, v72, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x400000) == 0)
  {
LABEL_36:
    if ((v12 & 0x800000) == 0)
      goto LABEL_37;
    goto LABEL_170;
  }
LABEL_164:
  v73 = (unsigned int *)*((_QWORD *)this + 23);
  if (!v73)
    v73 = *(unsigned int **)(qword_10085F670 + 184);
  *(_WORD *)v4 = 442;
  v74 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v73[16];
  if (v74 > 0x7F)
  {
    v75 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v74, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v74;
    v75 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000B12F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v73, v75, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x800000) == 0)
  {
LABEL_37:
    if ((v12 & 0x1000000) == 0)
      goto LABEL_38;
    goto LABEL_176;
  }
LABEL_170:
  v76 = (unsigned int *)*((_QWORD *)this + 24);
  if (!v76)
    v76 = *(unsigned int **)(qword_10085F670 + 192);
  *(_WORD *)v4 = 458;
  v77 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v76[25];
  if (v77 > 0x7F)
  {
    v78 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v77, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v77;
    v78 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000B4BC0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v76, v78, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x1000000) == 0)
  {
LABEL_38:
    if ((v12 & 0x2000000) == 0)
      goto LABEL_39;
    goto LABEL_182;
  }
LABEL_176:
  v79 = (unsigned int *)*((_QWORD *)this + 25);
  if (!v79)
    v79 = *(unsigned int **)(qword_10085F670 + 200);
  *(_WORD *)v4 = 466;
  v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v79[21];
  if (v80 > 0x7F)
  {
    v81 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v80, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v80;
    v81 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000B5ED8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v79, v81, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x2000000) == 0)
  {
LABEL_39:
    if ((v12 & 0x4000000) == 0)
      goto LABEL_40;
    goto LABEL_188;
  }
LABEL_182:
  v82 = (unsigned int *)*((_QWORD *)this + 26);
  if (!v82)
    v82 = *(unsigned int **)(qword_10085F670 + 208);
  *(_WORD *)v4 = 474;
  v83 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v82[12];
  if (v83 > 0x7F)
  {
    v84 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v83, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v83;
    v84 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000B6D08((wireless_diagnostics::google::protobuf::internal::WireFormat *)v82, v84, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x4000000) == 0)
  {
LABEL_40:
    if ((v12 & 0x8000000) == 0)
      goto LABEL_41;
    goto LABEL_194;
  }
LABEL_188:
  v85 = (unsigned int *)*((_QWORD *)this + 27);
  if (!v85)
    v85 = *(unsigned int **)(qword_10085F670 + 216);
  *(_WORD *)v4 = 482;
  v86 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v85[18];
  if (v86 > 0x7F)
  {
    v87 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v86, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v86;
    v87 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000AD2E4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v85, v87, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x8000000) == 0)
  {
LABEL_41:
    if ((v12 & 0x10000000) == 0)
      goto LABEL_42;
    goto LABEL_200;
  }
LABEL_194:
  v88 = (unsigned int *)*((_QWORD *)this + 28);
  if (!v88)
    v88 = *(unsigned int **)(qword_10085F670 + 224);
  *(_WORD *)v4 = 490;
  v89 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v88[21];
  if (v89 > 0x7F)
  {
    v90 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v89, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v89;
    v90 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000B7F04((wireless_diagnostics::google::protobuf::internal::WireFormat *)v88, v90, a3);
  v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x10000000) == 0)
  {
LABEL_42:
    if ((v12 & 0x20000000) == 0)
      goto LABEL_212;
    goto LABEL_206;
  }
LABEL_200:
  v91 = (unsigned int *)*((_QWORD *)this + 29);
  if (!v91)
    v91 = *(unsigned int **)(qword_10085F670 + 232);
  *(_WORD *)v4 = 498;
  v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v91[6];
  if (v92 > 0x7F)
  {
    v93 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v92, (int)v4 + 2, a3);
  }
  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v92;
    v93 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  v4 = sub_1000B8ADC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v91, v93, a3);
  if ((*((_DWORD *)this + 63) & 0x20000000) != 0)
  {
LABEL_206:
    v94 = (unsigned int *)*((_QWORD *)this + 30);
    if (!v94)
      v94 = *(unsigned int **)(qword_10085F670 + 240);
    *(_WORD *)v4 = 506;
    v95 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v94[39];
    if (v95 > 0x7F)
    {
      v96 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v95, (int)v4 + 2, a3);
    }
    else
    {
      *((_BYTE *)v4 + 2) = (_BYTE)v95;
      v96 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    }
    v4 = sub_1000B30E4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v94, v96, a3, a4);
  }
LABEL_212:
  v99 = (_QWORD *)*((_QWORD *)this + 1);
  v98 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v97 = v99;
  if (!v99 || *v97 == v97[1])
    return v4;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v98, v4, a3);
}

uint64_t sub_10008C074(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;
  uint64_t v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;
  uint64_t v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  int v32;
  uint64_t v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  int v35;
  int v36;
  uint64_t v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;
  int v40;
  uint64_t v41;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v42;
  int v43;
  int v44;
  uint64_t v45;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v46;
  int v47;
  int v48;
  uint64_t v49;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v50;
  int v51;
  int v52;
  uint64_t v53;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v54;
  int v55;
  int v56;
  uint64_t v57;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v58;
  int v59;
  int v60;
  uint64_t v61;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v62;
  int v63;
  int v64;
  uint64_t v65;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v66;
  int v67;
  int v68;
  uint64_t v69;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v70;
  int v71;
  int v72;
  uint64_t v73;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v74;
  int v75;
  int v76;
  uint64_t v77;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v78;
  int v79;
  int v80;
  uint64_t v81;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v82;
  int v83;
  int v84;
  uint64_t v85;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v86;
  int v87;
  int v88;
  uint64_t v89;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v90;
  int v91;
  int v92;
  unsigned int *v93;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v94;
  int v95;
  int v96;
  uint64_t v97;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v98;
  int v99;
  int v100;
  uint64_t v101;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v102;
  int v103;
  int v104;
  uint64_t v105;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v106;
  int v107;
  int v108;
  uint64_t v109;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v110;
  int v111;
  int v112;
  uint64_t v113;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v114;
  int v115;
  int v116;
  uint64_t v117;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v118;
  int v119;
  int v120;
  _QWORD *v121;

  v3 = *(_DWORD *)(a1 + 252);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_61;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 252);
  }
  else
  {
    v6 = 1;
  }
  v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = *(_DWORD *)(a1 + 252);
    }
    else
    {
      v8 = 1;
    }
    v4 = (v4 + v8 + 1);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    v9 = *(_QWORD *)(a1 + 24);
    if (!v9)
      v9 = *(_QWORD *)(qword_10085F670 + 24);
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100092BFC(v9, a2);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    else
      v12 = 1;
    v4 = (v4 + v11 + v12 + 1);
    v3 = *(_DWORD *)(a1 + 252);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(a1 + 32);
  if (!v13)
    v13 = *(_QWORD *)(qword_10085F670 + 32);
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100093AA0(v13, a2);
  v15 = (int)v14;
  if (v14 >= 0x80)
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  else
    v16 = 1;
  v4 = (v4 + v15 + v16 + 1);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_43;
  }
LABEL_37:
  v17 = *(_QWORD *)(a1 + 40);
  if (!v17)
    v17 = *(_QWORD *)(qword_10085F670 + 40);
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000951C4(v17, a2);
  v19 = (int)v18;
  if (v18 >= 0x80)
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  else
    v20 = 1;
  v4 = (v4 + v19 + v20 + 1);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_49;
  }
LABEL_43:
  v21 = *(_QWORD *)(a1 + 48);
  if (!v21)
    v21 = *(_QWORD *)(qword_10085F670 + 48);
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000959E4(v21, a2);
  v23 = (int)v22;
  if (v22 >= 0x80)
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  else
    v24 = 1;
  v4 = (v4 + v23 + v24 + 1);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0)
      goto LABEL_61;
    goto LABEL_55;
  }
LABEL_49:
  v25 = *(_QWORD *)(a1 + 56);
  if (!v25)
    v25 = *(_QWORD *)(qword_10085F670 + 56);
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000962B0(v25, a2);
  v27 = (int)v26;
  if (v26 >= 0x80)
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  else
    v28 = 1;
  v4 = (v4 + v27 + v28 + 1);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x80) != 0)
  {
LABEL_55:
    v29 = *(_QWORD *)(a1 + 64);
    if (!v29)
      v29 = *(_QWORD *)(qword_10085F670 + 64);
    v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100096968(v29, a2);
    v31 = (int)v30;
    if (v30 >= 0x80)
      v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
    else
      v32 = 1;
    v4 = (v4 + v31 + v32 + 1);
    v3 = *(_DWORD *)(a1 + 252);
  }
LABEL_61:
  if ((v3 & 0xFF00) == 0)
    goto LABEL_119;
  if ((v3 & 0x100) != 0)
  {
    v33 = *(_QWORD *)(a1 + 72);
    if (!v33)
      v33 = *(_QWORD *)(qword_10085F670 + 72);
    v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000970B0(v33, a2);
    v35 = (int)v34;
    if (v34 >= 0x80)
      v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2);
    else
      v36 = 1;
    v4 = (v4 + v35 + v36 + 1);
    v3 = *(_DWORD *)(a1 + 252);
    if ((v3 & 0x200) == 0)
    {
LABEL_64:
      if ((v3 & 0x400) == 0)
        goto LABEL_65;
      goto LABEL_83;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_64;
  }
  v37 = *(_QWORD *)(a1 + 80);
  if (!v37)
    v37 = *(_QWORD *)(qword_10085F670 + 80);
  v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009772C(v37, a2);
  v39 = (int)v38;
  if (v38 >= 0x80)
    v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
  else
    v40 = 1;
  v4 = (v4 + v39 + v40 + 1);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x400) == 0)
  {
LABEL_65:
    if ((v3 & 0x800) == 0)
      goto LABEL_66;
    goto LABEL_89;
  }
LABEL_83:
  v41 = *(_QWORD *)(a1 + 88);
  if (!v41)
    v41 = *(_QWORD *)(qword_10085F670 + 88);
  v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100097F64(v41, a2);
  v43 = (int)v42;
  if (v42 >= 0x80)
    v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42, a2);
  else
    v44 = 1;
  v4 = (v4 + v43 + v44 + 1);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x800) == 0)
  {
LABEL_66:
    if ((v3 & 0x1000) == 0)
      goto LABEL_67;
    goto LABEL_95;
  }
LABEL_89:
  v45 = *(_QWORD *)(a1 + 96);
  if (!v45)
    v45 = *(_QWORD *)(qword_10085F670 + 96);
  v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100098F24(v45, a2);
  v47 = (int)v46;
  if (v46 >= 0x80)
    v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46, a2);
  else
    v48 = 1;
  v4 = (v4 + v47 + v48 + 1);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x1000) == 0)
  {
LABEL_67:
    if ((v3 & 0x2000) == 0)
      goto LABEL_68;
    goto LABEL_101;
  }
LABEL_95:
  v49 = *(_QWORD *)(a1 + 104);
  if (!v49)
    v49 = *(_QWORD *)(qword_10085F670 + 104);
  v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000995EC(v49, a2);
  v51 = (int)v50;
  if (v50 >= 0x80)
    v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50, a2);
  else
    v52 = 1;
  v4 = (v4 + v51 + v52 + 1);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x2000) == 0)
  {
LABEL_68:
    if ((v3 & 0x4000) == 0)
      goto LABEL_69;
    goto LABEL_107;
  }
LABEL_101:
  v53 = *(_QWORD *)(a1 + 112);
  if (!v53)
    v53 = *(_QWORD *)(qword_10085F670 + 112);
  v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100099D30(v53, a2);
  v55 = (int)v54;
  if (v54 >= 0x80)
    v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v54, a2);
  else
    v56 = 1;
  v4 = (v4 + v55 + v56 + 1);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x4000) == 0)
  {
LABEL_69:
    if ((v3 & 0x8000) == 0)
      goto LABEL_119;
    goto LABEL_113;
  }
LABEL_107:
  v57 = *(_QWORD *)(a1 + 120);
  if (!v57)
    v57 = *(_QWORD *)(qword_10085F670 + 120);
  v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009B1C0(v57, a2);
  v59 = (int)v58;
  if (v58 >= 0x80)
    v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58, a2);
  else
    v60 = 1;
  v4 = (v4 + v59 + v60 + 1);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x8000) != 0)
  {
LABEL_113:
    v61 = *(_QWORD *)(a1 + 128);
    if (!v61)
      v61 = *(_QWORD *)(qword_10085F670 + 128);
    v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A1990(v61, a2);
    v63 = (int)v62;
    if (v62 >= 0x80)
      v64 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62, a2);
    else
      v64 = 1;
    v4 = (v4 + v63 + v64 + 2);
    v3 = *(_DWORD *)(a1 + 252);
  }
LABEL_119:
  if ((v3 & 0xFF0000) == 0)
    goto LABEL_177;
  if ((v3 & 0x10000) != 0)
  {
    v65 = *(_QWORD *)(a1 + 136);
    if (!v65)
      v65 = *(_QWORD *)(qword_10085F670 + 136);
    v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A2A50(v65, a2);
    v67 = (int)v66;
    if (v66 >= 0x80)
      v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66, a2);
    else
      v68 = 1;
    v4 = (v4 + v67 + v68 + 2);
    v3 = *(_DWORD *)(a1 + 252);
    if ((v3 & 0x20000) == 0)
    {
LABEL_122:
      if ((v3 & 0x40000) == 0)
        goto LABEL_123;
      goto LABEL_141;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_122;
  }
  v69 = *(_QWORD *)(a1 + 144);
  if (!v69)
    v69 = *(_QWORD *)(qword_10085F670 + 144);
  v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A6E58(v69, a2);
  v71 = (int)v70;
  if (v70 >= 0x80)
    v72 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70, a2);
  else
    v72 = 1;
  v4 = (v4 + v71 + v72 + 2);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x40000) == 0)
  {
LABEL_123:
    if ((v3 & 0x80000) == 0)
      goto LABEL_124;
    goto LABEL_147;
  }
LABEL_141:
  v73 = *(_QWORD *)(a1 + 152);
  if (!v73)
    v73 = *(_QWORD *)(qword_10085F670 + 152);
  v74 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A9598(v73, a2);
  v75 = (int)v74;
  if (v74 >= 0x80)
    v76 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v74, a2);
  else
    v76 = 1;
  v4 = (v4 + v75 + v76 + 2);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x80000) == 0)
  {
LABEL_124:
    if ((v3 & 0x100000) == 0)
      goto LABEL_125;
    goto LABEL_153;
  }
LABEL_147:
  v77 = *(_QWORD *)(a1 + 160);
  if (!v77)
    v77 = *(_QWORD *)(qword_10085F670 + 160);
  v78 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000AA9C8(v77, a2);
  v79 = (int)v78;
  if (v78 >= 0x80)
    v80 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v78, a2);
  else
    v80 = 1;
  v4 = (v4 + v79 + v80 + 2);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x100000) == 0)
  {
LABEL_125:
    if ((v3 & 0x200000) == 0)
      goto LABEL_126;
    goto LABEL_159;
  }
LABEL_153:
  v81 = *(_QWORD *)(a1 + 168);
  if (!v81)
    v81 = *(_QWORD *)(qword_10085F670 + 168);
  v82 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000ABA58(v81, a2);
  v83 = (int)v82;
  if (v82 >= 0x80)
    v84 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v82, a2);
  else
    v84 = 1;
  v4 = (v4 + v83 + v84 + 2);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x200000) == 0)
  {
LABEL_126:
    if ((v3 & 0x400000) == 0)
      goto LABEL_127;
    goto LABEL_165;
  }
LABEL_159:
  v85 = *(_QWORD *)(a1 + 176);
  if (!v85)
    v85 = *(_QWORD *)(qword_10085F670 + 176);
  v86 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B01EC(v85, a2);
  v87 = (int)v86;
  if (v86 >= 0x80)
    v88 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v86, a2);
  else
    v88 = 1;
  v4 = (v4 + v87 + v88 + 2);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x400000) == 0)
  {
LABEL_127:
    if ((v3 & 0x800000) == 0)
      goto LABEL_177;
    goto LABEL_171;
  }
LABEL_165:
  v89 = *(_QWORD *)(a1 + 184);
  if (!v89)
    v89 = *(_QWORD *)(qword_10085F670 + 184);
  v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B1520(v89, a2);
  v91 = (int)v90;
  if (v90 >= 0x80)
    v92 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v90, a2);
  else
    v92 = 1;
  v4 = (v4 + v91 + v92 + 2);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x800000) != 0)
  {
LABEL_171:
    v93 = *(unsigned int **)(a1 + 192);
    if (!v93)
      v93 = *(unsigned int **)(qword_10085F670 + 192);
    v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B505C(v93, a2);
    v95 = (int)v94;
    if (v94 >= 0x80)
      v96 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v94, a2);
    else
      v96 = 1;
    v4 = (v4 + v95 + v96 + 2);
    v3 = *(_DWORD *)(a1 + 252);
  }
LABEL_177:
  if (!HIBYTE(v3))
    goto LABEL_221;
  if ((v3 & 0x1000000) != 0)
  {
    v97 = *(_QWORD *)(a1 + 200);
    if (!v97)
      v97 = *(_QWORD *)(qword_10085F670 + 200);
    v98 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B61C8(v97, a2);
    v99 = (int)v98;
    if (v98 >= 0x80)
      v100 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v98, a2);
    else
      v100 = 1;
    v4 = (v4 + v99 + v100 + 2);
    v3 = *(_DWORD *)(a1 + 252);
    if ((v3 & 0x2000000) == 0)
    {
LABEL_180:
      if ((v3 & 0x4000000) == 0)
        goto LABEL_181;
      goto LABEL_197;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_180;
  }
  v101 = *(_QWORD *)(a1 + 208);
  if (!v101)
    v101 = *(_QWORD *)(qword_10085F670 + 208);
  v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B6EE4(v101, a2);
  v103 = (int)v102;
  if (v102 >= 0x80)
    v104 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v102, a2);
  else
    v104 = 1;
  v4 = (v4 + v103 + v104 + 2);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x4000000) == 0)
  {
LABEL_181:
    if ((v3 & 0x8000000) == 0)
      goto LABEL_182;
    goto LABEL_203;
  }
LABEL_197:
  v105 = *(_QWORD *)(a1 + 216);
  if (!v105)
    v105 = *(_QWORD *)(qword_10085F670 + 216);
  v106 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000AD514(v105, a2);
  v107 = (int)v106;
  if (v106 >= 0x80)
    v108 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v106, a2);
  else
    v108 = 1;
  v4 = (v4 + v107 + v108 + 2);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x8000000) == 0)
  {
LABEL_182:
    if ((v3 & 0x10000000) == 0)
      goto LABEL_183;
    goto LABEL_209;
  }
LABEL_203:
  v109 = *(_QWORD *)(a1 + 224);
  if (!v109)
    v109 = *(_QWORD *)(qword_10085F670 + 224);
  v110 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B82A4(v109, a2);
  v111 = (int)v110;
  if (v110 >= 0x80)
    v112 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v110, a2);
  else
    v112 = 1;
  v4 = (v4 + v111 + v112 + 2);
  v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x10000000) == 0)
  {
LABEL_183:
    if ((v3 & 0x20000000) == 0)
      goto LABEL_221;
    goto LABEL_215;
  }
LABEL_209:
  v113 = *(_QWORD *)(a1 + 232);
  if (!v113)
    v113 = *(_QWORD *)(qword_10085F670 + 232);
  v114 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B8B78(v113, a2);
  v115 = (int)v114;
  if (v114 >= 0x80)
    v116 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v114, a2);
  else
    v116 = 1;
  v4 = (v4 + v115 + v116 + 2);
  if ((*(_DWORD *)(a1 + 252) & 0x20000000) != 0)
  {
LABEL_215:
    v117 = *(_QWORD *)(a1 + 240);
    if (!v117)
      v117 = *(_QWORD *)(qword_10085F670 + 240);
    v118 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B373C(v117, a2);
    v119 = (int)v118;
    if (v118 >= 0x80)
      v120 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v118, a2);
    else
      v120 = 1;
    v4 = (v4 + v119 + v120 + 2);
  }
LABEL_221:
  v121 = *(_QWORD **)(a1 + 8);
  if (v121 && *v121 != v121[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 248) = v4;
  return v4;
}

uint64_t sub_10008C9A8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 3917);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100086D4C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_10008CA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10008CA68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const std::string *v5;
  std::string *v6;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 4800);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if ((*(_BYTE *)(a2 + 28) & 1) != 0)
  {
    v5 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 1u;
    v6 = *(std::string **)(a1 + 16);
    if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v6, v5);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008CB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10008CB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  const std::string *v10;
  std::string *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  const std::string *v16;
  std::string *v17;
  int v18;
  char v19;
  _BYTE v20[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v20, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 5370);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v5 = *(_DWORD *)(a2 + 68);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v10 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 68) |= 1u;
    v11 = *(std::string **)(a1 + 16);
    if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v11, v10);
    v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v12 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(_DWORD *)(a1 + 24) = v12;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  v13 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 68) |= 4u;
  *(_DWORD *)(a1 + 28) = v13;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  v14 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(_DWORD *)(a1 + 32) = v14;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_26:
    v16 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 68) |= 0x20u;
    v17 = *(std::string **)(a1 + 40);
    if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v17, v16);
    v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_25:
  v15 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v15;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x20) != 0)
    goto LABEL_26;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_29:
  v18 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x40u;
  *(_DWORD *)(a1 + 48) = v18;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 68) |= 0x80u;
    *(_DWORD *)(a1 + 52) = v6;
    v5 = *(_DWORD *)(a2 + 68);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      v7 = *(_DWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 68) |= 0x100u;
      *(_DWORD *)(a1 + 56) = v7;
      v5 = *(_DWORD *)(a2 + 68);
    }
    if ((v5 & 0x200) != 0)
    {
      v8 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 68) |= 0x200u;
      *(_DWORD *)(a1 + 60) = v8;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008CD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10008CDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v18;
  int v19;
  int v20;
  int v21;
  char v22;
  _BYTE v23[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v23, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 6171);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v22, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56), *(_DWORD *)(a2 + 64) + *(_DWORD *)(a1 + 64));
  if (*(int *)(a2 + 64) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 68);
      v8 = *(int *)(a1 + 64);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 72))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56), v7 + 1);
          v7 = *(_DWORD *)(a1 + 68);
        }
        *(_DWORD *)(a1 + 68) = v7 + 1;
        sub_1000B8EF4();
      }
      v9 = *(_QWORD *)(a1 + 56);
      *(_DWORD *)(a1 + 64) = v8 + 1;
      sub_100093EFC(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 64));
  }
  v10 = *(_DWORD *)(a2 + 84);
  if (!(_BYTE)v10)
    goto LABEL_31;
  if ((v10 & 1) != 0)
  {
    *(_DWORD *)(a1 + 84) |= 1u;
    v11 = *(_QWORD *)(a1 + 16);
    if (!v11)
      operator new();
    v12 = *(_QWORD *)(a2 + 16);
    if (!v12)
      v12 = *(_QWORD *)(qword_10085F6A0 + 16);
    sub_10009166C(v11, v12);
    v10 = *(_DWORD *)(a2 + 84);
  }
  if ((v10 & 2) != 0)
  {
    v13 = *(_DWORD *)(a2 + 24);
    if (v13 > 0x1B || ((1 << v13) & 0xDDB54EF) == 0)
      sub_1003CCCD0();
    *(_DWORD *)(a1 + 84) |= 2u;
    *(_DWORD *)(a1 + 24) = v13;
    v10 = *(_DWORD *)(a2 + 84);
  }
  if ((v10 & 4) != 0)
  {
    v14 = *(_DWORD *)(a2 + 28);
    if (v14 >= 2)
      sub_1003CCCA8();
    *(_DWORD *)(a1 + 84) |= 4u;
    *(_DWORD *)(a1 + 28) = v14;
    v10 = *(_DWORD *)(a2 + 84);
  }
  if ((v10 & 8) != 0)
  {
    v18 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 84) |= 8u;
    *(_DWORD *)(a1 + 32) = v18;
    v10 = *(_DWORD *)(a2 + 84);
    if ((v10 & 0x10) == 0)
    {
LABEL_27:
      if ((v10 & 0x20) == 0)
        goto LABEL_28;
LABEL_36:
      v20 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 84) |= 0x20u;
      *(_DWORD *)(a1 + 40) = v20;
      v10 = *(_DWORD *)(a2 + 84);
      if ((v10 & 0x40) == 0)
      {
LABEL_29:
        if ((v10 & 0x80) == 0)
          goto LABEL_31;
        goto LABEL_30;
      }
      goto LABEL_37;
    }
  }
  else if ((v10 & 0x10) == 0)
  {
    goto LABEL_27;
  }
  v19 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 84) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v19;
  v10 = *(_DWORD *)(a2 + 84);
  if ((v10 & 0x20) != 0)
    goto LABEL_36;
LABEL_28:
  if ((v10 & 0x40) == 0)
    goto LABEL_29;
LABEL_37:
  v21 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 84) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v21;
  v10 = *(_DWORD *)(a2 + 84);
  if ((v10 & 0x80) != 0)
  {
LABEL_30:
    v15 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 84) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v15;
    v10 = *(_DWORD *)(a2 + 84);
  }
LABEL_31:
  if ((v10 & 0x100) != 0)
  {
    v16 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 84) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v16;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008D060()
{
  operator delete();
}

uint64_t sub_10008D098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 6420);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if ((*(_BYTE *)(a2 + 28) & 1) != 0)
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    v5 = *(_QWORD *)(a1 + 16);
    if (!v5)
      operator new();
    v6 = *(_QWORD *)(a2 + 16);
    if (!v6)
      v6 = *(_QWORD *)(qword_10085F6A8 + 16);
    sub_100091F4C(v5, v6);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008D174()
{
  operator delete();
}

uint64_t sub_10008D1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  int v11;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 6741);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    v6 = *(_QWORD *)(a1 + 16);
    if (!v6)
      operator new();
    v7 = *(_QWORD *)(a2 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F6B0 + 16);
    sub_10009166C(v6, v7);
    v5 = *(_DWORD *)(a2 + 44);
  }
  if ((v5 & 2) == 0)
  {
    if ((v5 & 4) == 0)
      goto LABEL_12;
LABEL_16:
    v11 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_DWORD *)(a1 + 32) = v11;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_13;
  }
  v10 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_QWORD *)(a1 + 24) = v10;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 4) != 0)
    goto LABEL_16;
LABEL_12:
  if ((v5 & 8) != 0)
  {
LABEL_13:
    v8 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 36) = v8;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008D2EC()
{
  operator delete();
}

uint64_t sub_10008D324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 6966);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if ((*(_BYTE *)(a2 + 28) & 1) != 0)
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    v5 = *(_QWORD *)(a1 + 16);
    if (!v5)
      operator new();
    v6 = *(_QWORD *)(a2 + 16);
    if (!v6)
      v6 = *(_QWORD *)(qword_10085F6B8 + 16);
    sub_100091F4C(v5, v6);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008D400()
{
  operator delete();
}

uint64_t sub_10008D438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 7221);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 16);
      if (!v7)
        v7 = *(_QWORD *)(qword_10085F6C0 + 16);
      sub_10009166C(v6, v7);
      v5 = *(_DWORD *)(a2 + 32);
    }
    if ((v5 & 2) != 0)
    {
      v8 = *(_DWORD *)(a2 + 24);
      if (v8 >= 2)
        sub_1003CCCF8();
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 24) = v8;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008D540()
{
  operator delete();
}

uint64_t sub_10008D578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 7438);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if ((*(_BYTE *)(a2 + 28) & 1) != 0)
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    v5 = *(_QWORD *)(a1 + 16);
    if (!v5)
      operator new();
    v6 = *(_QWORD *)(a2 + 16);
    if (!v6)
      v6 = *(_QWORD *)(qword_10085F6C8 + 16);
    sub_100091F4C(v5, v6);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008D654()
{
  operator delete();
}

uint64_t sub_10008D68C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v7;
  _BYTE v8[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v8, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 7653);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_10006BAB4(a1 + 16, *(_DWORD *)(a1 + 24) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008D748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10008D760(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  char v12;
  _BYTE v13[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 8157);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * v5);
      v7 = a1[7];
      v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v7 + 1);
          v7 = a1[7];
        }
        a1[7] = v7 + 1;
        sub_1000B8F54();
      }
      v9 = *((_QWORD *)a1 + 2);
      a1[6] = v8 + 1;
      sub_1000981F4(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  if ((*(_BYTE *)(a2 + 48) & 1) != 0)
  {
    v10 = *(_DWORD *)(a2 + 40);
    if ((sub_100086B74(v10) & 1) == 0)
      sub_1003CCD20();
    a1[12] |= 1u;
    a1[10] = v10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008D8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10008D8D4(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 8366);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * v5);
      v7 = a1[7];
      v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v7 + 1);
          v7 = a1[7];
        }
        a1[7] = v7 + 1;
        sub_1000B8F54();
      }
      v9 = *((_QWORD *)a1 + 2);
      a1[6] = v8 + 1;
      sub_1000981F4(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008DA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10008DA1C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  char v10;
  _BYTE v11[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 8648);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if ((sub_100086B74(v6) & 1) == 0)
        sub_1003CCD48();
      a1[8] |= 1u;
      a1[4] = v6;
      v5 = *(_DWORD *)(a2 + 32);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      a1[8] |= 2u;
      a1[5] = v7;
      v5 = *(_DWORD *)(a2 + 32);
    }
    if ((v5 & 4) != 0)
    {
      v8 = *(_DWORD *)(a2 + 24);
      a1[8] |= 4u;
      a1[6] = v8;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008DB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10008DB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 9336);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 56);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 56) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 48);
      *(_DWORD *)(a1 + 56) |= 1u;
      *(_DWORD *)(a1 + 48) = v6;
      v5 = *(_DWORD *)(a2 + 56);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*(_BYTE *)(a2 + 56) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 56) |= 2u;
    *(_QWORD *)(a1 + 16) = v7;
    v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_13;
    }
LABEL_12:
    v8 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 56) |= 4u;
    *(_QWORD *)(a1 + 24) = v8;
    v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
LABEL_14:
      *(_DWORD *)(a1 + 56) |= 0x10u;
      v10 = *(_QWORD *)(a1 + 40);
      if (!v10)
        operator new();
      v11 = *(_QWORD *)(a2 + 40);
      if (!v11)
        v11 = *(_QWORD *)(qword_10085F6F8 + 40);
      sub_10009A000(v10, v11);
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
LABEL_13:
    v9 = *(_QWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 56) |= 8u;
    *(_QWORD *)(a1 + 32) = v9;
    if ((*(_DWORD *)(a2 + 56) & 0x10) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_14;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008DC80()
{
  operator delete();
}

uint64_t sub_10008DCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  const std::string *v38;
  std::string *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  int v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  _DWORD *v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int v88;
  char v89;
  _BYTE v90[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v90, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 13153);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v90, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v89, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v90);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192), *(_DWORD *)(a2 + 200) + *(_DWORD *)(a1 + 200));
  if (*(int *)(a2 + 200) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 192) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 204);
      v8 = *(int *)(a1 + 200);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 208))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192), v7 + 1);
          v7 = *(_DWORD *)(a1 + 204);
        }
        *(_DWORD *)(a1 + 204) = v7 + 1;
        sub_1000B8FB4();
      }
      v9 = *(_QWORD *)(a1 + 192);
      *(_DWORD *)(a1 + 200) = v8 + 1;
      sub_10009B4B0(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 200));
  }
  v10 = *(_DWORD *)(a2 + 328);
  if (v10)
  {
    sub_10006BB4C(a1 + 320, *(_DWORD *)(a1 + 328) + v10);
    memcpy((void *)(*(_QWORD *)(a1 + 320) + 8 * *(int *)(a1 + 328)), *(const void **)(a2 + 320), 8 * *(int *)(a2 + 328));
    *(_DWORD *)(a1 + 328) += *(_DWORD *)(a2 + 328);
  }
  v11 = *(_DWORD *)(a2 + 468);
  if (!(_BYTE)v11)
    goto LABEL_31;
  if ((v11 & 1) != 0)
  {
    *(_DWORD *)(a1 + 468) |= 1u;
    v12 = *(_QWORD *)(a1 + 16);
    if (!v12)
      operator new();
    v13 = *(_QWORD *)(a2 + 16);
    if (!v13)
      v13 = *(_QWORD *)(qword_10085F718 + 16);
    sub_100091F4C(v12, v13);
    v11 = *(_DWORD *)(a2 + 468);
  }
  if ((v11 & 2) != 0)
  {
    v14 = *(_DWORD *)(a2 + 32);
    if (v14 > 0x1B || ((1 << v14) & 0xDDB54EF) == 0)
      sub_1003CCDE8();
    *(_DWORD *)(a1 + 468) |= 2u;
    *(_DWORD *)(a1 + 32) = v14;
    v11 = *(_DWORD *)(a2 + 468);
  }
  if ((v11 & 4) != 0)
  {
    v35 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 468) |= 4u;
    *(_QWORD *)(a1 + 24) = v35;
    v11 = *(_DWORD *)(a2 + 468);
    if ((v11 & 8) == 0)
    {
LABEL_26:
      if ((v11 & 0x10) == 0)
        goto LABEL_27;
      goto LABEL_90;
    }
  }
  else if ((v11 & 8) == 0)
  {
    goto LABEL_26;
  }
  v36 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 468) |= 8u;
  *(_DWORD *)(a1 + 36) = v36;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x10) == 0)
  {
LABEL_27:
    if ((v11 & 0x20) == 0)
      goto LABEL_28;
LABEL_91:
    v38 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 468) |= 0x20u;
    v39 = *(std::string **)(a1 + 40);
    if (v39 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v39, v38);
    v11 = *(_DWORD *)(a2 + 468);
    if ((v11 & 0x40) == 0)
    {
LABEL_29:
      if ((v11 & 0x80) == 0)
        goto LABEL_31;
      goto LABEL_30;
    }
    goto LABEL_94;
  }
LABEL_90:
  v37 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 468) |= 0x10u;
  *(_DWORD *)(a1 + 48) = v37;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x20) != 0)
    goto LABEL_91;
LABEL_28:
  if ((v11 & 0x40) == 0)
    goto LABEL_29;
LABEL_94:
  v40 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 468) |= 0x40u;
  *(_DWORD *)(a1 + 52) = v40;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x80) != 0)
  {
LABEL_30:
    v15 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 468) |= 0x80u;
    *(_DWORD *)(a1 + 56) = v15;
    v11 = *(_DWORD *)(a2 + 468);
  }
LABEL_31:
  if ((v11 & 0xFF00) == 0)
    goto LABEL_41;
  if ((v11 & 0x100) != 0)
  {
    v21 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 468) |= 0x100u;
    *(_DWORD *)(a1 + 60) = v21;
    v11 = *(_DWORD *)(a2 + 468);
    if ((v11 & 0x200) == 0)
    {
LABEL_34:
      if ((v11 & 0x400) == 0)
        goto LABEL_35;
      goto LABEL_74;
    }
  }
  else if ((v11 & 0x200) == 0)
  {
    goto LABEL_34;
  }
  v22 = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 468) |= 0x200u;
  *(_QWORD *)(a1 + 64) = v22;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x400) == 0)
  {
LABEL_35:
    if ((v11 & 0x800) == 0)
      goto LABEL_36;
    goto LABEL_75;
  }
LABEL_74:
  v23 = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 468) |= 0x400u;
  *(_QWORD *)(a1 + 72) = v23;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x800) == 0)
  {
LABEL_36:
    if ((v11 & 0x1000) == 0)
      goto LABEL_37;
    goto LABEL_76;
  }
LABEL_75:
  v24 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 468) |= 0x800u;
  *(_DWORD *)(a1 + 80) = v24;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x1000) == 0)
  {
LABEL_37:
    if ((v11 & 0x2000) == 0)
      goto LABEL_38;
    goto LABEL_77;
  }
LABEL_76:
  v25 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 468) |= 0x1000u;
  *(_DWORD *)(a1 + 84) = v25;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x2000) == 0)
  {
LABEL_38:
    if ((v11 & 0x4000) == 0)
      goto LABEL_39;
    goto LABEL_78;
  }
LABEL_77:
  v26 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 468) |= 0x2000u;
  *(_DWORD *)(a1 + 88) = v26;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x4000) == 0)
  {
LABEL_39:
    if ((v11 & 0x8000) == 0)
      goto LABEL_41;
    goto LABEL_40;
  }
LABEL_78:
  v27 = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 468) |= 0x4000u;
  *(_DWORD *)(a1 + 92) = v27;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x8000) != 0)
  {
LABEL_40:
    v16 = *(_DWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 468) |= 0x8000u;
    *(_DWORD *)(a1 + 136) = v16;
    v11 = *(_DWORD *)(a2 + 468);
  }
LABEL_41:
  if ((v11 & 0xFF0000) == 0)
    goto LABEL_51;
  if ((v11 & 0x10000) != 0)
  {
    v28 = *(_QWORD *)(a2 + 96);
    *(_DWORD *)(a1 + 468) |= 0x10000u;
    *(_QWORD *)(a1 + 96) = v28;
    v11 = *(_DWORD *)(a2 + 468);
    if ((v11 & 0x20000) == 0)
    {
LABEL_44:
      if ((v11 & 0x40000) == 0)
        goto LABEL_45;
      goto LABEL_82;
    }
  }
  else if ((v11 & 0x20000) == 0)
  {
    goto LABEL_44;
  }
  v29 = *(_QWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 468) |= 0x20000u;
  *(_QWORD *)(a1 + 104) = v29;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x40000) == 0)
  {
LABEL_45:
    if ((v11 & 0x80000) == 0)
      goto LABEL_46;
    goto LABEL_83;
  }
LABEL_82:
  v30 = *(_QWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 468) |= 0x40000u;
  *(_QWORD *)(a1 + 112) = v30;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x80000) == 0)
  {
LABEL_46:
    if ((v11 & 0x100000) == 0)
      goto LABEL_47;
    goto LABEL_84;
  }
LABEL_83:
  v31 = *(_QWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 468) |= 0x80000u;
  *(_QWORD *)(a1 + 120) = v31;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x100000) == 0)
  {
LABEL_47:
    if ((v11 & 0x200000) == 0)
      goto LABEL_48;
    goto LABEL_85;
  }
LABEL_84:
  v32 = *(_QWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 468) |= 0x100000u;
  *(_QWORD *)(a1 + 128) = v32;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x200000) == 0)
  {
LABEL_48:
    if ((v11 & 0x400000) == 0)
      goto LABEL_49;
    goto LABEL_86;
  }
LABEL_85:
  v33 = *(_QWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 468) |= 0x200000u;
  *(_QWORD *)(a1 + 144) = v33;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x400000) == 0)
  {
LABEL_49:
    if ((v11 & 0x800000) == 0)
      goto LABEL_51;
    goto LABEL_50;
  }
LABEL_86:
  v34 = *(_QWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 468) |= 0x400000u;
  *(_QWORD *)(a1 + 152) = v34;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x800000) != 0)
  {
LABEL_50:
    v17 = *(_QWORD *)(a2 + 160);
    *(_DWORD *)(a1 + 468) |= 0x800000u;
    *(_QWORD *)(a1 + 160) = v17;
    v11 = *(_DWORD *)(a2 + 468);
  }
LABEL_51:
  if (!HIBYTE(v11))
    goto LABEL_59;
  if ((v11 & 0x1000000) != 0)
  {
    v63 = *(_QWORD *)(a2 + 168);
    *(_DWORD *)(a1 + 468) |= 0x1000000u;
    *(_QWORD *)(a1 + 168) = v63;
    v11 = *(_DWORD *)(a2 + 468);
    if ((v11 & 0x2000000) == 0)
    {
LABEL_54:
      if ((v11 & 0x4000000) == 0)
        goto LABEL_55;
      goto LABEL_153;
    }
  }
  else if ((v11 & 0x2000000) == 0)
  {
    goto LABEL_54;
  }
  v64 = *(_QWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 468) |= 0x2000000u;
  *(_QWORD *)(a1 + 176) = v64;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x4000000) == 0)
  {
LABEL_55:
    if ((v11 & 0x8000000) == 0)
      goto LABEL_56;
    goto LABEL_154;
  }
LABEL_153:
  v65 = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 468) |= 0x4000000u;
  *(_DWORD *)(a1 + 140) = v65;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x8000000) == 0)
  {
LABEL_56:
    if ((v11 & 0x20000000) == 0)
      goto LABEL_57;
    goto LABEL_155;
  }
LABEL_154:
  v66 = *(_QWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 468) |= 0x8000000u;
  *(_QWORD *)(a1 + 184) = v66;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x20000000) == 0)
  {
LABEL_57:
    if ((v11 & 0x40000000) == 0)
      goto LABEL_58;
LABEL_156:
    v68 = *(_QWORD *)(a2 + 224);
    *(_DWORD *)(a1 + 468) |= 0x40000000u;
    *(_QWORD *)(a1 + 224) = v68;
    if ((*(_DWORD *)(a2 + 468) & 0x80000000) == 0)
      goto LABEL_59;
    goto LABEL_157;
  }
LABEL_155:
  v67 = *(_QWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 468) |= 0x20000000u;
  *(_QWORD *)(a1 + 216) = v67;
  v11 = *(_DWORD *)(a2 + 468);
  if ((v11 & 0x40000000) != 0)
    goto LABEL_156;
LABEL_58:
  if ((v11 & 0x80000000) == 0)
    goto LABEL_59;
LABEL_157:
  v69 = *(_QWORD *)(a2 + 232);
  *(_DWORD *)(a1 + 468) |= 0x80000000;
  *(_QWORD *)(a1 + 232) = v69;
LABEL_59:
  v18 = *(_DWORD *)(a2 + 472);
  if (!(_BYTE)v18)
    goto LABEL_103;
  if ((v18 & 1) != 0)
  {
    v19 = *(_DWORD *)(a2 + 240);
    *(_DWORD *)(a1 + 472) |= 1u;
    *(_DWORD *)(a1 + 240) = v19;
    v18 = *(_DWORD *)(a2 + 472);
  }
  if ((v18 & 2) != 0)
  {
    v20 = *(_DWORD *)(a2 + 244);
    if (v20 >= 2)
      sub_1003CCDC0();
    *(_DWORD *)(a1 + 472) |= 2u;
    *(_DWORD *)(a1 + 244) = v20;
    v18 = *(_DWORD *)(a2 + 472);
  }
  if ((v18 & 4) != 0)
  {
    v41 = *(_QWORD *)(a2 + 248);
    *(_DWORD *)(a1 + 472) |= 4u;
    *(_QWORD *)(a1 + 248) = v41;
    v18 = *(_DWORD *)(a2 + 472);
    if ((v18 & 8) == 0)
    {
LABEL_67:
      if ((v18 & 0x10) == 0)
        goto LABEL_68;
      goto LABEL_98;
    }
  }
  else if ((v18 & 8) == 0)
  {
    goto LABEL_67;
  }
  v42 = *(_QWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 472) |= 8u;
  *(_QWORD *)(a1 + 256) = v42;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x10) == 0)
  {
LABEL_68:
    if ((v18 & 0x20) == 0)
      goto LABEL_69;
    goto LABEL_99;
  }
LABEL_98:
  v43 = *(_QWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 472) |= 0x10u;
  *(_QWORD *)(a1 + 264) = v43;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x20) == 0)
  {
LABEL_69:
    if ((v18 & 0x40) == 0)
      goto LABEL_70;
    goto LABEL_100;
  }
LABEL_99:
  v44 = *(_QWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 472) |= 0x20u;
  *(_QWORD *)(a1 + 272) = v44;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x40) == 0)
  {
LABEL_70:
    if ((v18 & 0x80) == 0)
      goto LABEL_103;
    goto LABEL_101;
  }
LABEL_100:
  v45 = *(_QWORD *)(a2 + 280);
  *(_DWORD *)(a1 + 472) |= 0x40u;
  *(_QWORD *)(a1 + 280) = v45;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x80) == 0)
    goto LABEL_103;
LABEL_101:
  v46 = *(_DWORD *)(a2 + 288);
  if ((v46 - 1) >= 2)
    sub_1003CCD98();
  *(_DWORD *)(a1 + 472) |= 0x80u;
  *(_DWORD *)(a1 + 288) = v46;
  v18 = *(_DWORD *)(a2 + 472);
LABEL_103:
  if ((v18 & 0xFF00) == 0)
    goto LABEL_112;
  if ((v18 & 0x100) != 0)
  {
    v49 = *(_DWORD *)(a2 + 292);
    *(_DWORD *)(a1 + 472) |= 0x100u;
    *(_DWORD *)(a1 + 292) = v49;
    v18 = *(_DWORD *)(a2 + 472);
    if ((v18 & 0x200) == 0)
    {
LABEL_106:
      if ((v18 & 0x400) == 0)
        goto LABEL_107;
      goto LABEL_134;
    }
  }
  else if ((v18 & 0x200) == 0)
  {
    goto LABEL_106;
  }
  v50 = *(_BYTE *)(a2 + 296);
  *(_DWORD *)(a1 + 472) |= 0x200u;
  *(_BYTE *)(a1 + 296) = v50;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x400) == 0)
  {
LABEL_107:
    if ((v18 & 0x800) == 0)
      goto LABEL_108;
    goto LABEL_135;
  }
LABEL_134:
  v51 = *(_BYTE *)(a2 + 297);
  *(_DWORD *)(a1 + 472) |= 0x400u;
  *(_BYTE *)(a1 + 297) = v51;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x800) == 0)
  {
LABEL_108:
    if ((v18 & 0x1000) == 0)
      goto LABEL_109;
    goto LABEL_136;
  }
LABEL_135:
  v52 = *(_BYTE *)(a2 + 298);
  *(_DWORD *)(a1 + 472) |= 0x800u;
  *(_BYTE *)(a1 + 298) = v52;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x1000) == 0)
  {
LABEL_109:
    if ((v18 & 0x2000) == 0)
      goto LABEL_110;
    goto LABEL_137;
  }
LABEL_136:
  v53 = *(_QWORD *)(a2 + 304);
  *(_DWORD *)(a1 + 472) |= 0x1000u;
  *(_QWORD *)(a1 + 304) = v53;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x2000) == 0)
  {
LABEL_110:
    if ((v18 & 0x4000) == 0)
      goto LABEL_112;
    goto LABEL_111;
  }
LABEL_137:
  *(_DWORD *)(a1 + 472) |= 0x2000u;
  v54 = *(_DWORD **)(a1 + 312);
  if (!v54)
    operator new();
  v55 = *(_QWORD *)(a2 + 312);
  if (!v55)
    v55 = *(_QWORD *)(qword_10085F718 + 312);
  sub_10009C098(v54, v55);
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x4000) != 0)
  {
LABEL_111:
    v47 = *(_DWORD *)(a2 + 300);
    *(_DWORD *)(a1 + 472) |= 0x4000u;
    *(_DWORD *)(a1 + 300) = v47;
    v18 = *(_DWORD *)(a2 + 472);
  }
LABEL_112:
  if ((v18 & 0xFF0000) == 0)
    goto LABEL_122;
  if ((v18 & 0x10000) != 0)
  {
    v56 = *(_DWORD *)(a2 + 336);
    *(_DWORD *)(a1 + 472) |= 0x10000u;
    *(_DWORD *)(a1 + 336) = v56;
    v18 = *(_DWORD *)(a2 + 472);
    if ((v18 & 0x20000) == 0)
    {
LABEL_115:
      if ((v18 & 0x40000) == 0)
        goto LABEL_116;
      goto LABEL_145;
    }
  }
  else if ((v18 & 0x20000) == 0)
  {
    goto LABEL_115;
  }
  v57 = *(_DWORD *)(a2 + 340);
  *(_DWORD *)(a1 + 472) |= 0x20000u;
  *(_DWORD *)(a1 + 340) = v57;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x40000) == 0)
  {
LABEL_116:
    if ((v18 & 0x80000) == 0)
      goto LABEL_117;
    goto LABEL_146;
  }
LABEL_145:
  v58 = *(_DWORD *)(a2 + 344);
  *(_DWORD *)(a1 + 472) |= 0x40000u;
  *(_DWORD *)(a1 + 344) = v58;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x80000) == 0)
  {
LABEL_117:
    if ((v18 & 0x100000) == 0)
      goto LABEL_118;
    goto LABEL_147;
  }
LABEL_146:
  v59 = *(_DWORD *)(a2 + 348);
  *(_DWORD *)(a1 + 472) |= 0x80000u;
  *(_DWORD *)(a1 + 348) = v59;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x100000) == 0)
  {
LABEL_118:
    if ((v18 & 0x200000) == 0)
      goto LABEL_119;
    goto LABEL_148;
  }
LABEL_147:
  v60 = *(_DWORD *)(a2 + 376);
  *(_DWORD *)(a1 + 472) |= 0x100000u;
  *(_DWORD *)(a1 + 376) = v60;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x200000) == 0)
  {
LABEL_119:
    if ((v18 & 0x400000) == 0)
      goto LABEL_120;
    goto LABEL_149;
  }
LABEL_148:
  v61 = *(_QWORD *)(a2 + 352);
  *(_DWORD *)(a1 + 472) |= 0x200000u;
  *(_QWORD *)(a1 + 352) = v61;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x400000) == 0)
  {
LABEL_120:
    if ((v18 & 0x800000) == 0)
      goto LABEL_122;
    goto LABEL_121;
  }
LABEL_149:
  v62 = *(_QWORD *)(a2 + 360);
  *(_DWORD *)(a1 + 472) |= 0x400000u;
  *(_QWORD *)(a1 + 360) = v62;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x800000) != 0)
  {
LABEL_121:
    v48 = *(_QWORD *)(a2 + 368);
    *(_DWORD *)(a1 + 472) |= 0x800000u;
    *(_QWORD *)(a1 + 368) = v48;
    v18 = *(_DWORD *)(a2 + 472);
  }
LABEL_122:
  if (!HIBYTE(v18))
    goto LABEL_167;
  if ((v18 & 0x1000000) != 0)
  {
    v70 = *(_QWORD *)(a2 + 384);
    *(_DWORD *)(a1 + 472) |= 0x1000000u;
    *(_QWORD *)(a1 + 384) = v70;
    v18 = *(_DWORD *)(a2 + 472);
    if ((v18 & 0x2000000) == 0)
    {
LABEL_125:
      if ((v18 & 0x4000000) == 0)
        goto LABEL_126;
      goto LABEL_160;
    }
  }
  else if ((v18 & 0x2000000) == 0)
  {
    goto LABEL_125;
  }
  v71 = *(_QWORD *)(a2 + 392);
  *(_DWORD *)(a1 + 472) |= 0x2000000u;
  *(_QWORD *)(a1 + 392) = v71;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x4000000) == 0)
  {
LABEL_126:
    if ((v18 & 0x8000000) == 0)
      goto LABEL_127;
    goto LABEL_161;
  }
LABEL_160:
  v72 = *(_DWORD *)(a2 + 380);
  *(_DWORD *)(a1 + 472) |= 0x4000000u;
  *(_DWORD *)(a1 + 380) = v72;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x8000000) == 0)
  {
LABEL_127:
    if ((v18 & 0x10000000) == 0)
      goto LABEL_128;
    goto LABEL_162;
  }
LABEL_161:
  v73 = *(_DWORD *)(a2 + 400);
  *(_DWORD *)(a1 + 472) |= 0x8000000u;
  *(_DWORD *)(a1 + 400) = v73;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x10000000) == 0)
  {
LABEL_128:
    if ((v18 & 0x20000000) == 0)
      goto LABEL_129;
    goto LABEL_163;
  }
LABEL_162:
  v74 = *(_DWORD *)(a2 + 404);
  *(_DWORD *)(a1 + 472) |= 0x10000000u;
  *(_DWORD *)(a1 + 404) = v74;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x20000000) == 0)
  {
LABEL_129:
    if ((v18 & 0x40000000) == 0)
      goto LABEL_130;
LABEL_164:
    v76 = *(_DWORD *)(a2 + 412);
    *(_DWORD *)(a1 + 472) |= 0x40000000u;
    *(_DWORD *)(a1 + 412) = v76;
    if ((*(_DWORD *)(a2 + 472) & 0x80000000) == 0)
      goto LABEL_167;
    goto LABEL_165;
  }
LABEL_163:
  v75 = *(_DWORD *)(a2 + 408);
  *(_DWORD *)(a1 + 472) |= 0x20000000u;
  *(_DWORD *)(a1 + 408) = v75;
  v18 = *(_DWORD *)(a2 + 472);
  if ((v18 & 0x40000000) != 0)
    goto LABEL_164;
LABEL_130:
  if ((v18 & 0x80000000) == 0)
    goto LABEL_167;
LABEL_165:
  v77 = *(_DWORD *)(a2 + 416);
  if ((v77 - 1) >= 6)
    sub_1003CCD70();
  *(_DWORD *)(a1 + 472) |= 0x80000000;
  *(_DWORD *)(a1 + 416) = v77;
LABEL_167:
  v78 = *(_DWORD *)(a2 + 476);
  if (!(_BYTE)v78)
    goto LABEL_177;
  if ((v78 & 1) != 0)
  {
    v82 = *(_DWORD *)(a2 + 420);
    *(_DWORD *)(a1 + 476) |= 1u;
    *(_DWORD *)(a1 + 420) = v82;
    v78 = *(_DWORD *)(a2 + 476);
    if ((v78 & 2) == 0)
    {
LABEL_170:
      if ((v78 & 4) == 0)
        goto LABEL_171;
      goto LABEL_182;
    }
  }
  else if ((v78 & 2) == 0)
  {
    goto LABEL_170;
  }
  v83 = *(_DWORD *)(a2 + 424);
  *(_DWORD *)(a1 + 476) |= 2u;
  *(_DWORD *)(a1 + 424) = v83;
  v78 = *(_DWORD *)(a2 + 476);
  if ((v78 & 4) == 0)
  {
LABEL_171:
    if ((v78 & 8) == 0)
      goto LABEL_172;
    goto LABEL_183;
  }
LABEL_182:
  v84 = *(_DWORD *)(a2 + 428);
  *(_DWORD *)(a1 + 476) |= 4u;
  *(_DWORD *)(a1 + 428) = v84;
  v78 = *(_DWORD *)(a2 + 476);
  if ((v78 & 8) == 0)
  {
LABEL_172:
    if ((v78 & 0x10) == 0)
      goto LABEL_173;
    goto LABEL_184;
  }
LABEL_183:
  v85 = *(_QWORD *)(a2 + 432);
  *(_DWORD *)(a1 + 476) |= 8u;
  *(_QWORD *)(a1 + 432) = v85;
  v78 = *(_DWORD *)(a2 + 476);
  if ((v78 & 0x10) == 0)
  {
LABEL_173:
    if ((v78 & 0x20) == 0)
      goto LABEL_174;
    goto LABEL_185;
  }
LABEL_184:
  v86 = *(_QWORD *)(a2 + 440);
  *(_DWORD *)(a1 + 476) |= 0x10u;
  *(_QWORD *)(a1 + 440) = v86;
  v78 = *(_DWORD *)(a2 + 476);
  if ((v78 & 0x20) == 0)
  {
LABEL_174:
    if ((v78 & 0x40) == 0)
      goto LABEL_175;
    goto LABEL_186;
  }
LABEL_185:
  v87 = *(_DWORD *)(a2 + 448);
  *(_DWORD *)(a1 + 476) |= 0x20u;
  *(_DWORD *)(a1 + 448) = v87;
  v78 = *(_DWORD *)(a2 + 476);
  if ((v78 & 0x40) == 0)
  {
LABEL_175:
    if ((v78 & 0x80) == 0)
      goto LABEL_177;
    goto LABEL_176;
  }
LABEL_186:
  v88 = *(_DWORD *)(a2 + 452);
  *(_DWORD *)(a1 + 476) |= 0x40u;
  *(_DWORD *)(a1 + 452) = v88;
  v78 = *(_DWORD *)(a2 + 476);
  if ((v78 & 0x80) != 0)
  {
LABEL_176:
    v79 = *(_DWORD *)(a2 + 456);
    *(_DWORD *)(a1 + 476) |= 0x80u;
    *(_DWORD *)(a1 + 456) = v79;
    v78 = *(_DWORD *)(a2 + 476);
  }
LABEL_177:
  if ((v78 & 0x100) != 0)
  {
    v80 = *(_DWORD *)(a2 + 460);
    *(_DWORD *)(a1 + 476) |= 0x100u;
    *(_DWORD *)(a1 + 460) = v80;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008E84C()
{
  operator delete();
}

uint64_t sub_10008E898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 13712);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      v6 = *(_QWORD *)(a1 + 16);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 16);
      if (!v7)
        v7 = *(_QWORD *)(qword_10085F720 + 16);
      sub_100091F4C(v6, v7);
      v5 = *(_DWORD *)(a2 + 32);
    }
    if ((v5 & 2) != 0)
    {
      v8 = *(_DWORD *)(a2 + 24);
      if ((sub_100086B74(v8) & 1) == 0)
        sub_1003CCE10();
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 24) = v8;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008E9A4()
{
  operator delete();
}

uint64_t sub_10008E9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  int v20;
  const std::string *v21;
  std::string *v22;
  char v24;
  _BYTE v25[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v25, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 15541);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v24, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), *(_DWORD *)(a2 + 48) + *(_DWORD *)(a1 + 48));
  if (*(int *)(a2 + 48) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 52);
      v8 = *(int *)(a1 + 48);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), v7 + 1);
          v7 = *(_DWORD *)(a1 + 52);
        }
        *(_DWORD *)(a1 + 52) = v7 + 1;
        sub_1000B90D4();
      }
      v9 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)(a1 + 48) = v8 + 1;
      sub_1000A4C88(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 48));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64), *(_DWORD *)(a2 + 72) + *(_DWORD *)(a1 + 72));
  if (*(int *)(a2 + 72) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)(a2 + 64) + 8 * v10);
      v12 = *(_DWORD *)(a1 + 76);
      v13 = *(int *)(a1 + 72);
      if ((int)v13 >= v12)
      {
        if (v12 == *(_DWORD *)(a1 + 80))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64), v12 + 1);
          v12 = *(_DWORD *)(a1 + 76);
        }
        *(_DWORD *)(a1 + 76) = v12 + 1;
        sub_1000B9074();
      }
      v14 = *(_QWORD *)(a1 + 64);
      *(_DWORD *)(a1 + 72) = v13 + 1;
      sub_1000A4324(*(_QWORD *)(v14 + 8 * v13), v11);
      ++v10;
    }
    while (v10 < *(int *)(a2 + 72));
  }
  LOBYTE(v15) = *(_BYTE *)(a2 + 96);
  if ((_BYTE)v15)
  {
    if ((*(_BYTE *)(a2 + 96) & 1) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 1u;
      v16 = *(_QWORD *)(a1 + 16);
      if (!v16)
        operator new();
      v17 = *(_QWORD *)(a2 + 16);
      if (!v17)
        v17 = *(_QWORD *)(qword_10085F748 + 16);
      sub_10009166C(v16, v17);
      v15 = *(_DWORD *)(a2 + 96);
    }
    if ((v15 & 2) != 0)
    {
      v18 = *(_DWORD *)(a2 + 24);
      if (v18 > 0x1B || ((1 << v18) & 0xDDB54EF) == 0)
        sub_1003CCE38();
      *(_DWORD *)(a1 + 96) |= 2u;
      *(_DWORD *)(a1 + 24) = v18;
      v15 = *(_DWORD *)(a2 + 96);
    }
    if ((v15 & 4) != 0)
    {
      v19 = *(_DWORD *)(a2 + 28);
      *(_DWORD *)(a1 + 96) |= 4u;
      *(_DWORD *)(a1 + 28) = v19;
      v15 = *(_DWORD *)(a2 + 96);
      if ((v15 & 8) == 0)
      {
LABEL_32:
        if ((v15 & 0x10) == 0)
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
LABEL_36:
        v21 = *(const std::string **)(a2 + 32);
        *(_DWORD *)(a1 + 96) |= 0x10u;
        v22 = *(std::string **)(a1 + 32);
        if (v22 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        std::string::operator=(v22, v21);
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    else if ((v15 & 8) == 0)
    {
      goto LABEL_32;
    }
    v20 = *(_DWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 96) |= 8u;
    *(_DWORD *)(a1 + 88) = v20;
    if ((*(_DWORD *)(a2 + 96) & 0x10) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_36;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008ECF0()
{
  operator delete();
}

uint64_t sub_10008ED28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  const std::string *v35;
  std::string *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE v48[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v48, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 17056);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v48, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v47, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v48);
  }
  v5 = *(_DWORD *)(a2 + 300);
  if (!(_BYTE)v5)
    goto LABEL_21;
  if ((v5 & 1) != 0)
  {
    *(_DWORD *)(a1 + 300) |= 1u;
    v6 = *(_QWORD *)(a1 + 16);
    if (!v6)
      operator new();
    v7 = *(_QWORD *)(a2 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F750 + 16);
    sub_10009166C(v6, v7);
    v5 = *(_DWORD *)(a2 + 300);
  }
  if ((v5 & 2) != 0)
  {
    v8 = *(_DWORD *)(a2 + 24);
    if (v8 > 0x1B || ((1 << v8) & 0xDDB54EF) == 0)
      sub_1003CCE60();
    *(_DWORD *)(a1 + 300) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    v5 = *(_DWORD *)(a2 + 300);
  }
  if ((v5 & 4) != 0)
  {
    v33 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 300) |= 4u;
    *(_DWORD *)(a1 + 28) = v33;
    v5 = *(_DWORD *)(a2 + 300);
    if ((v5 & 8) == 0)
    {
LABEL_16:
      if ((v5 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_81;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_16;
  }
  v34 = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 300) |= 8u;
  *(_DWORD *)(a1 + 120) = v34;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x10) == 0)
  {
LABEL_17:
    if ((v5 & 0x20) == 0)
      goto LABEL_18;
LABEL_84:
    v37 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 300) |= 0x20u;
    *(_QWORD *)(a1 + 40) = v37;
    v5 = *(_DWORD *)(a2 + 300);
    if ((v5 & 0x40) == 0)
    {
LABEL_19:
      if ((v5 & 0x80) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
    goto LABEL_85;
  }
LABEL_81:
  v35 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 300) |= 0x10u;
  v36 = *(std::string **)(a1 + 32);
  if (v36 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v36, v35);
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x20) != 0)
    goto LABEL_84;
LABEL_18:
  if ((v5 & 0x40) == 0)
    goto LABEL_19;
LABEL_85:
  v38 = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 300) |= 0x40u;
  *(_QWORD *)(a1 + 48) = v38;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x80) != 0)
  {
LABEL_20:
    v9 = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 300) |= 0x80u;
    *(_QWORD *)(a1 + 56) = v9;
    v5 = *(_DWORD *)(a2 + 300);
  }
LABEL_21:
  if ((v5 & 0xFF00) == 0)
    goto LABEL_31;
  if ((v5 & 0x100) != 0)
  {
    v15 = *(_QWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 300) |= 0x100u;
    *(_QWORD *)(a1 + 64) = v15;
    v5 = *(_DWORD *)(a2 + 300);
    if ((v5 & 0x200) == 0)
    {
LABEL_24:
      if ((v5 & 0x400) == 0)
        goto LABEL_25;
      goto LABEL_60;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  v16 = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 300) |= 0x200u;
  *(_QWORD *)(a1 + 72) = v16;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x400) == 0)
  {
LABEL_25:
    if ((v5 & 0x800) == 0)
      goto LABEL_26;
    goto LABEL_61;
  }
LABEL_60:
  v17 = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 300) |= 0x400u;
  *(_QWORD *)(a1 + 80) = v17;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x800) == 0)
  {
LABEL_26:
    if ((v5 & 0x1000) == 0)
      goto LABEL_27;
    goto LABEL_62;
  }
LABEL_61:
  v18 = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 300) |= 0x800u;
  *(_QWORD *)(a1 + 88) = v18;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x1000) == 0)
  {
LABEL_27:
    if ((v5 & 0x2000) == 0)
      goto LABEL_28;
    goto LABEL_63;
  }
LABEL_62:
  v19 = *(_QWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 300) |= 0x1000u;
  *(_QWORD *)(a1 + 96) = v19;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x2000) == 0)
  {
LABEL_28:
    if ((v5 & 0x4000) == 0)
      goto LABEL_29;
    goto LABEL_64;
  }
LABEL_63:
  v20 = *(_QWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 300) |= 0x2000u;
  *(_QWORD *)(a1 + 104) = v20;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x4000) == 0)
  {
LABEL_29:
    if ((v5 & 0x8000) == 0)
      goto LABEL_31;
    goto LABEL_30;
  }
LABEL_64:
  v21 = *(_QWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 300) |= 0x4000u;
  *(_QWORD *)(a1 + 112) = v21;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x8000) != 0)
  {
LABEL_30:
    v10 = *(_QWORD *)(a2 + 128);
    *(_DWORD *)(a1 + 300) |= 0x8000u;
    *(_QWORD *)(a1 + 128) = v10;
    v5 = *(_DWORD *)(a2 + 300);
  }
LABEL_31:
  if ((v5 & 0xFF0000) == 0)
    goto LABEL_41;
  if ((v5 & 0x10000) != 0)
  {
    v22 = *(_QWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 300) |= 0x10000u;
    *(_QWORD *)(a1 + 136) = v22;
    v5 = *(_DWORD *)(a2 + 300);
    if ((v5 & 0x20000) == 0)
    {
LABEL_34:
      if ((v5 & 0x40000) == 0)
        goto LABEL_35;
      goto LABEL_68;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_34;
  }
  v23 = *(_QWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 300) |= 0x20000u;
  *(_QWORD *)(a1 + 144) = v23;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x40000) == 0)
  {
LABEL_35:
    if ((v5 & 0x80000) == 0)
      goto LABEL_36;
    goto LABEL_69;
  }
LABEL_68:
  v24 = *(_QWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 300) |= 0x40000u;
  *(_QWORD *)(a1 + 152) = v24;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x80000) == 0)
  {
LABEL_36:
    if ((v5 & 0x100000) == 0)
      goto LABEL_37;
    goto LABEL_70;
  }
LABEL_69:
  v25 = *(_QWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 300) |= 0x80000u;
  *(_QWORD *)(a1 + 160) = v25;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x100000) == 0)
  {
LABEL_37:
    if ((v5 & 0x200000) == 0)
      goto LABEL_38;
    goto LABEL_71;
  }
LABEL_70:
  v26 = *(_QWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 300) |= 0x100000u;
  *(_QWORD *)(a1 + 168) = v26;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x200000) == 0)
  {
LABEL_38:
    if ((v5 & 0x400000) == 0)
      goto LABEL_39;
    goto LABEL_72;
  }
LABEL_71:
  v27 = *(_QWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 300) |= 0x200000u;
  *(_QWORD *)(a1 + 176) = v27;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x400000) == 0)
  {
LABEL_39:
    if ((v5 & 0x800000) == 0)
      goto LABEL_41;
    goto LABEL_40;
  }
LABEL_72:
  v28 = *(_QWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 300) |= 0x400000u;
  *(_QWORD *)(a1 + 184) = v28;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x800000) != 0)
  {
LABEL_40:
    v11 = *(_QWORD *)(a2 + 192);
    *(_DWORD *)(a1 + 300) |= 0x800000u;
    *(_QWORD *)(a1 + 192) = v11;
    v5 = *(_DWORD *)(a2 + 300);
  }
LABEL_41:
  if (!HIBYTE(v5))
    goto LABEL_50;
  if ((v5 & 0x1000000) != 0)
  {
    v39 = *(_QWORD *)(a2 + 200);
    *(_DWORD *)(a1 + 300) |= 0x1000000u;
    *(_QWORD *)(a1 + 200) = v39;
    v5 = *(_DWORD *)(a2 + 300);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_44:
      if ((v5 & 0x4000000) == 0)
        goto LABEL_45;
      goto LABEL_89;
    }
  }
  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_44;
  }
  v40 = *(_QWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 300) |= 0x2000000u;
  *(_QWORD *)(a1 + 208) = v40;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_45:
    if ((v5 & 0x8000000) == 0)
      goto LABEL_46;
    goto LABEL_90;
  }
LABEL_89:
  v41 = *(_QWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 300) |= 0x4000000u;
  *(_QWORD *)(a1 + 216) = v41;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_46:
    if ((v5 & 0x10000000) == 0)
      goto LABEL_47;
    goto LABEL_91;
  }
LABEL_90:
  v42 = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 300) |= 0x8000000u;
  *(_DWORD *)(a1 + 124) = v42;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_47:
    if ((v5 & 0x20000000) == 0)
      goto LABEL_48;
    goto LABEL_92;
  }
LABEL_91:
  v43 = *(_QWORD *)(a2 + 224);
  *(_DWORD *)(a1 + 300) |= 0x10000000u;
  *(_QWORD *)(a1 + 224) = v43;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_48:
    if ((v5 & 0x40000000) == 0)
      goto LABEL_49;
LABEL_93:
    v45 = *(_QWORD *)(a2 + 240);
    *(_DWORD *)(a1 + 300) |= 0x40000000u;
    *(_QWORD *)(a1 + 240) = v45;
    if ((*(_DWORD *)(a2 + 300) & 0x80000000) == 0)
      goto LABEL_50;
    goto LABEL_94;
  }
LABEL_92:
  v44 = *(_QWORD *)(a2 + 232);
  *(_DWORD *)(a1 + 300) |= 0x20000000u;
  *(_QWORD *)(a1 + 232) = v44;
  v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x40000000) != 0)
    goto LABEL_93;
LABEL_49:
  if ((v5 & 0x80000000) == 0)
    goto LABEL_50;
LABEL_94:
  v46 = *(_QWORD *)(a2 + 248);
  *(_DWORD *)(a1 + 300) |= 0x80000000;
  *(_QWORD *)(a1 + 248) = v46;
LABEL_50:
  LOBYTE(v12) = *(_BYTE *)(a2 + 304);
  if (!(_BYTE)v12)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 304) & 1) != 0)
  {
    v29 = *(_QWORD *)(a2 + 256);
    *(_DWORD *)(a1 + 304) |= 1u;
    *(_QWORD *)(a1 + 256) = v29;
    v12 = *(_DWORD *)(a2 + 304);
    if ((v12 & 2) == 0)
    {
LABEL_53:
      if ((v12 & 4) == 0)
        goto LABEL_54;
      goto LABEL_76;
    }
  }
  else if ((*(_BYTE *)(a2 + 304) & 2) == 0)
  {
    goto LABEL_53;
  }
  v30 = *(_QWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 304) |= 2u;
  *(_QWORD *)(a1 + 264) = v30;
  v12 = *(_DWORD *)(a2 + 304);
  if ((v12 & 4) == 0)
  {
LABEL_54:
    if ((v12 & 8) == 0)
      goto LABEL_55;
LABEL_77:
    v32 = *(_QWORD *)(a2 + 280);
    *(_DWORD *)(a1 + 304) |= 8u;
    *(_QWORD *)(a1 + 280) = v32;
    if ((*(_DWORD *)(a2 + 304) & 0x10) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_56;
  }
LABEL_76:
  v31 = *(_QWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 304) |= 4u;
  *(_QWORD *)(a1 + 272) = v31;
  v12 = *(_DWORD *)(a2 + 304);
  if ((v12 & 8) != 0)
    goto LABEL_77;
LABEL_55:
  if ((v12 & 0x10) != 0)
  {
LABEL_56:
    v13 = *(_QWORD *)(a2 + 288);
    *(_DWORD *)(a1 + 304) |= 0x10u;
    *(_QWORD *)(a1 + 288) = v13;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008F304()
{
  operator delete();
}

uint64_t sub_10008F33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _BYTE v31[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v31, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 17752);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v31, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v30, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v31);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), *(_DWORD *)(a2 + 56) + *(_DWORD *)(a1 + 56));
  if (*(int *)(a2 + 56) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 60);
      v8 = *(int *)(a1 + 56);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 64))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v7 + 1);
          v7 = *(_DWORD *)(a1 + 60);
        }
        *(_DWORD *)(a1 + 60) = v7 + 1;
        sub_1000B9014();
      }
      v9 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)(a1 + 56) = v8 + 1;
      sub_1000A2D08(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 56));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 80), *(_DWORD *)(a2 + 88) + *(_DWORD *)(a1 + 88));
  if (*(int *)(a2 + 88) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)(a2 + 80) + 8 * v10);
      v12 = *(_DWORD *)(a1 + 92);
      v13 = *(int *)(a1 + 88);
      if ((int)v13 >= v12)
      {
        if (v12 == *(_DWORD *)(a1 + 96))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 80), v12 + 1);
          v12 = *(_DWORD *)(a1 + 92);
        }
        *(_DWORD *)(a1 + 92) = v12 + 1;
        sub_1000B9014();
      }
      v14 = *(_QWORD *)(a1 + 80);
      *(_DWORD *)(a1 + 88) = v13 + 1;
      sub_1000A2D08(*(_DWORD **)(v14 + 8 * v13), v11);
      ++v10;
    }
    while (v10 < *(int *)(a2 + 88));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104), *(_DWORD *)(a2 + 112) + *(_DWORD *)(a1 + 112));
  if (*(int *)(a2 + 112) >= 1)
  {
    v15 = 0;
    do
    {
      v16 = *(_QWORD *)(*(_QWORD *)(a2 + 104) + 8 * v15);
      v17 = *(_DWORD *)(a1 + 116);
      v18 = *(int *)(a1 + 112);
      if ((int)v18 >= v17)
      {
        if (v17 == *(_DWORD *)(a1 + 120))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104), v17 + 1);
          v17 = *(_DWORD *)(a1 + 116);
        }
        *(_DWORD *)(a1 + 116) = v17 + 1;
        sub_1000B9014();
      }
      v19 = *(_QWORD *)(a1 + 104);
      *(_DWORD *)(a1 + 112) = v18 + 1;
      sub_1000A2D08(*(_DWORD **)(v19 + 8 * v18), v16);
      ++v15;
    }
    while (v15 < *(int *)(a2 + 112));
  }
  v20 = *(_DWORD *)(a2 + 132);
  if ((_BYTE)v20)
  {
    if ((v20 & 1) != 0)
    {
      v25 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 132) |= 1u;
      *(_QWORD *)(a1 + 16) = v25;
      v20 = *(_DWORD *)(a2 + 132);
      if ((v20 & 2) == 0)
      {
LABEL_30:
        if ((v20 & 4) == 0)
          goto LABEL_31;
        goto LABEL_41;
      }
    }
    else if ((v20 & 2) == 0)
    {
      goto LABEL_30;
    }
    v26 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 132) |= 2u;
    *(_DWORD *)(a1 + 24) = v26;
    v20 = *(_DWORD *)(a2 + 132);
    if ((v20 & 4) == 0)
    {
LABEL_31:
      if ((v20 & 8) == 0)
        goto LABEL_32;
      goto LABEL_42;
    }
LABEL_41:
    v27 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 132) |= 4u;
    *(_DWORD *)(a1 + 28) = v27;
    v20 = *(_DWORD *)(a2 + 132);
    if ((v20 & 8) == 0)
    {
LABEL_32:
      if ((v20 & 0x10) == 0)
        goto LABEL_34;
      goto LABEL_33;
    }
LABEL_42:
    *(_DWORD *)(a1 + 132) |= 8u;
    v28 = *(_QWORD *)(a1 + 32);
    if (!v28)
      operator new();
    v29 = *(_QWORD *)(a2 + 32);
    if (!v29)
      v29 = *(_QWORD *)(qword_10085F758 + 32);
    sub_10009166C(v28, v29);
    v20 = *(_DWORD *)(a2 + 132);
    if ((v20 & 0x10) == 0)
      goto LABEL_34;
LABEL_33:
    v21 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 132) |= 0x10u;
    *(_DWORD *)(a1 + 72) = v21;
    v20 = *(_DWORD *)(a2 + 132);
LABEL_34:
    if ((v20 & 0x20) != 0)
    {
      v22 = *(_QWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 132) |= 0x20u;
      *(_QWORD *)(a1 + 40) = v22;
      v20 = *(_DWORD *)(a2 + 132);
    }
  }
  if ((v20 & 0x200) != 0)
  {
    v23 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 132) |= 0x200u;
    *(_DWORD *)(a1 + 76) = v23;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008F6DC()
{
  operator delete();
}

uint64_t sub_10008F714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char v22;
  _BYTE v23[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v23, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 18321);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v22, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64), *(_DWORD *)(a2 + 72) + *(_DWORD *)(a1 + 72));
  if (*(int *)(a2 + 72) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 64) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 76);
      v8 = *(int *)(a1 + 72);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 80))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64), v7 + 1);
          v7 = *(_DWORD *)(a1 + 76);
        }
        *(_DWORD *)(a1 + 76) = v7 + 1;
        sub_1000B9014();
      }
      v9 = *(_QWORD *)(a1 + 64);
      *(_DWORD *)(a1 + 72) = v8 + 1;
      sub_1000A2D08(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 72));
  }
  v10 = *(_DWORD *)(a2 + 96);
  if (!(_BYTE)v10)
    goto LABEL_21;
  if ((v10 & 1) != 0)
  {
    v14 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 96) |= 1u;
    *(_QWORD *)(a1 + 16) = v14;
    v10 = *(_DWORD *)(a2 + 96);
    if ((v10 & 2) == 0)
    {
LABEL_14:
      if ((v10 & 4) == 0)
        goto LABEL_15;
      goto LABEL_26;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_14;
  }
  v15 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 96) |= 2u;
  *(_DWORD *)(a1 + 24) = v15;
  v10 = *(_DWORD *)(a2 + 96);
  if ((v10 & 4) == 0)
  {
LABEL_15:
    if ((v10 & 8) == 0)
      goto LABEL_16;
    goto LABEL_27;
  }
LABEL_26:
  v16 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 96) |= 4u;
  *(_DWORD *)(a1 + 28) = v16;
  v10 = *(_DWORD *)(a2 + 96);
  if ((v10 & 8) == 0)
  {
LABEL_16:
    if ((v10 & 0x10) == 0)
      goto LABEL_17;
    goto LABEL_32;
  }
LABEL_27:
  *(_DWORD *)(a1 + 96) |= 8u;
  v17 = *(_QWORD *)(a1 + 32);
  if (!v17)
    operator new();
  v18 = *(_QWORD *)(a2 + 32);
  if (!v18)
    v18 = *(_QWORD *)(qword_10085F760 + 32);
  sub_10009166C(v17, v18);
  v10 = *(_DWORD *)(a2 + 96);
  if ((v10 & 0x10) == 0)
  {
LABEL_17:
    if ((v10 & 0x20) == 0)
      goto LABEL_18;
LABEL_33:
    v20 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 96) |= 0x20u;
    *(_DWORD *)(a1 + 44) = v20;
    v10 = *(_DWORD *)(a2 + 96);
    if ((v10 & 0x40) == 0)
    {
LABEL_19:
      if ((v10 & 0x80) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
    goto LABEL_34;
  }
LABEL_32:
  v19 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 96) |= 0x10u;
  *(_DWORD *)(a1 + 40) = v19;
  v10 = *(_DWORD *)(a2 + 96);
  if ((v10 & 0x20) != 0)
    goto LABEL_33;
LABEL_18:
  if ((v10 & 0x40) == 0)
    goto LABEL_19;
LABEL_34:
  v21 = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 96) |= 0x40u;
  *(_QWORD *)(a1 + 48) = v21;
  v10 = *(_DWORD *)(a2 + 96);
  if ((v10 & 0x80) != 0)
  {
LABEL_20:
    v11 = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 96) |= 0x80u;
    *(_QWORD *)(a1 + 56) = v11;
    v10 = *(_DWORD *)(a2 + 96);
  }
LABEL_21:
  if ((v10 & 0x200) != 0)
  {
    v12 = *(_DWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 96) |= 0x200u;
    *(_DWORD *)(a1 + 88) = v12;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008F9A8()
{
  operator delete();
}

uint64_t sub_10008F9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  char v53;
  _BYTE v54[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v54, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 20996);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v54, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v53, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v54);
  }
  v5 = *(_DWORD *)(a2 + 232);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v13 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 232) |= 1u;
    *(_QWORD *)(a1 + 16) = v13;
    v5 = *(_DWORD *)(a2 + 232);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_62;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v14 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 232) |= 2u;
  *(_DWORD *)(a1 + 24) = v14;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_64;
  }
LABEL_62:
  v15 = *(_DWORD *)(a2 + 28);
  if ((sub_100086B74(v15) & 1) == 0)
    sub_1003CCEB0();
  *(_DWORD *)(a1 + 232) |= 4u;
  *(_DWORD *)(a1 + 28) = v15;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_65;
  }
LABEL_64:
  v16 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 232) |= 8u;
  *(_DWORD *)(a1 + 40) = v16;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_66:
    v18 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 232) |= 0x20u;
    *(_QWORD *)(a1 + 48) = v18;
    v5 = *(_DWORD *)(a2 + 232);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_67;
  }
LABEL_65:
  v17 = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 232) |= 0x10u;
  *(_QWORD *)(a1 + 32) = v17;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x20) != 0)
    goto LABEL_66;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_67:
  v19 = *(_DWORD *)(a2 + 44);
  if (v19 >= 2)
    sub_1003CCE88();
  *(_DWORD *)(a1 + 232) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v19;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 232) |= 0x80u;
    *(_QWORD *)(a1 + 56) = v6;
    v5 = *(_DWORD *)(a2 + 232);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    goto LABEL_23;
  if ((v5 & 0x100) != 0)
  {
    v20 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 232) |= 0x100u;
    *(_DWORD *)(a1 + 64) = v20;
    v5 = *(_DWORD *)(a2 + 232);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_72;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v21 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 232) |= 0x200u;
  *(_DWORD *)(a1 + 68) = v21;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_73;
  }
LABEL_72:
  v22 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 232) |= 0x400u;
  *(_DWORD *)(a1 + 72) = v22;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_74;
  }
LABEL_73:
  v23 = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 232) |= 0x800u;
  *(_DWORD *)(a1 + 76) = v23;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_75;
  }
LABEL_74:
  v24 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 232) |= 0x1000u;
  *(_DWORD *)(a1 + 88) = v24;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_76;
  }
LABEL_75:
  v25 = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 232) |= 0x2000u;
  *(_QWORD *)(a1 + 80) = v25;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
LABEL_76:
  v26 = *(_QWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 232) |= 0x4000u;
  *(_QWORD *)(a1 + 96) = v26;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x8000) != 0)
  {
LABEL_22:
    v7 = *(_DWORD *)(a2 + 92);
    *(_DWORD *)(a1 + 232) |= 0x8000u;
    *(_DWORD *)(a1 + 92) = v7;
    v5 = *(_DWORD *)(a2 + 232);
  }
LABEL_23:
  if ((v5 & 0xFF0000) == 0)
    goto LABEL_33;
  if ((v5 & 0x10000) != 0)
  {
    v27 = *(_DWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 232) |= 0x10000u;
    *(_DWORD *)(a1 + 104) = v27;
    v5 = *(_DWORD *)(a2 + 232);
    if ((v5 & 0x20000) == 0)
    {
LABEL_26:
      if ((v5 & 0x40000) == 0)
        goto LABEL_27;
      goto LABEL_80;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  v28 = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 232) |= 0x20000u;
  *(_DWORD *)(a1 + 108) = v28;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x40000) == 0)
  {
LABEL_27:
    if ((v5 & 0x80000) == 0)
      goto LABEL_28;
    goto LABEL_81;
  }
LABEL_80:
  v29 = *(_QWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 232) |= 0x40000u;
  *(_QWORD *)(a1 + 112) = v29;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x80000) == 0)
  {
LABEL_28:
    if ((v5 & 0x100000) == 0)
      goto LABEL_29;
    goto LABEL_82;
  }
LABEL_81:
  v30 = *(_QWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 232) |= 0x80000u;
  *(_QWORD *)(a1 + 120) = v30;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x100000) == 0)
  {
LABEL_29:
    if ((v5 & 0x200000) == 0)
      goto LABEL_30;
    goto LABEL_83;
  }
LABEL_82:
  v31 = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 232) |= 0x100000u;
  *(_DWORD *)(a1 + 128) = v31;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x200000) == 0)
  {
LABEL_30:
    if ((v5 & 0x400000) == 0)
      goto LABEL_31;
    goto LABEL_84;
  }
LABEL_83:
  v32 = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 232) |= 0x200000u;
  *(_DWORD *)(a1 + 132) = v32;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x400000) == 0)
  {
LABEL_31:
    if ((v5 & 0x800000) == 0)
      goto LABEL_33;
    goto LABEL_32;
  }
LABEL_84:
  v33 = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 232) |= 0x400000u;
  *(_DWORD *)(a1 + 136) = v33;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x800000) != 0)
  {
LABEL_32:
    v8 = *(_DWORD *)(a2 + 140);
    *(_DWORD *)(a1 + 232) |= 0x800000u;
    *(_DWORD *)(a1 + 140) = v8;
    v5 = *(_DWORD *)(a2 + 232);
  }
LABEL_33:
  if (!HIBYTE(v5))
    goto LABEL_42;
  if ((v5 & 0x1000000) != 0)
  {
    v45 = *(_DWORD *)(a2 + 144);
    *(_DWORD *)(a1 + 232) |= 0x1000000u;
    *(_DWORD *)(a1 + 144) = v45;
    v5 = *(_DWORD *)(a2 + 232);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_36:
      if ((v5 & 0x4000000) == 0)
        goto LABEL_37;
      goto LABEL_101;
    }
  }
  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_36;
  }
  v46 = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 232) |= 0x2000000u;
  *(_DWORD *)(a1 + 148) = v46;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x8000000) == 0)
      goto LABEL_38;
    goto LABEL_102;
  }
LABEL_101:
  v47 = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 232) |= 0x4000000u;
  *(_DWORD *)(a1 + 152) = v47;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x10000000) == 0)
      goto LABEL_39;
    goto LABEL_103;
  }
LABEL_102:
  v48 = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 232) |= 0x8000000u;
  *(_DWORD *)(a1 + 156) = v48;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x20000000) == 0)
      goto LABEL_40;
    goto LABEL_104;
  }
LABEL_103:
  v49 = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 232) |= 0x10000000u;
  *(_DWORD *)(a1 + 160) = v49;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x40000000) == 0)
      goto LABEL_41;
LABEL_105:
    v51 = *(_DWORD *)(a2 + 168);
    *(_DWORD *)(a1 + 232) |= 0x40000000u;
    *(_DWORD *)(a1 + 168) = v51;
    if ((*(_DWORD *)(a2 + 232) & 0x80000000) == 0)
      goto LABEL_42;
    goto LABEL_106;
  }
LABEL_104:
  v50 = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 232) |= 0x20000000u;
  *(_DWORD *)(a1 + 164) = v50;
  v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x40000000) != 0)
    goto LABEL_105;
LABEL_41:
  if ((v5 & 0x80000000) == 0)
    goto LABEL_42;
LABEL_106:
  v52 = *(_DWORD *)(a2 + 172);
  *(_DWORD *)(a1 + 232) |= 0x80000000;
  *(_DWORD *)(a1 + 172) = v52;
LABEL_42:
  v9 = *(_DWORD *)(a2 + 236);
  if (!(_BYTE)v9)
    goto LABEL_52;
  if ((v9 & 1) != 0)
  {
    v34 = *(_DWORD *)(a2 + 176);
    *(_DWORD *)(a1 + 236) |= 1u;
    *(_DWORD *)(a1 + 176) = v34;
    v9 = *(_DWORD *)(a2 + 236);
    if ((v9 & 2) == 0)
    {
LABEL_45:
      if ((v9 & 4) == 0)
        goto LABEL_46;
      goto LABEL_88;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_45;
  }
  v35 = *(_DWORD *)(a2 + 180);
  *(_DWORD *)(a1 + 236) |= 2u;
  *(_DWORD *)(a1 + 180) = v35;
  v9 = *(_DWORD *)(a2 + 236);
  if ((v9 & 4) == 0)
  {
LABEL_46:
    if ((v9 & 8) == 0)
      goto LABEL_47;
    goto LABEL_89;
  }
LABEL_88:
  v36 = *(_DWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 236) |= 4u;
  *(_DWORD *)(a1 + 184) = v36;
  v9 = *(_DWORD *)(a2 + 236);
  if ((v9 & 8) == 0)
  {
LABEL_47:
    if ((v9 & 0x10) == 0)
      goto LABEL_48;
    goto LABEL_90;
  }
LABEL_89:
  v37 = *(_DWORD *)(a2 + 188);
  *(_DWORD *)(a1 + 236) |= 8u;
  *(_DWORD *)(a1 + 188) = v37;
  v9 = *(_DWORD *)(a2 + 236);
  if ((v9 & 0x10) == 0)
  {
LABEL_48:
    if ((v9 & 0x20) == 0)
      goto LABEL_49;
    goto LABEL_91;
  }
LABEL_90:
  v38 = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 236) |= 0x10u;
  *(_DWORD *)(a1 + 192) = v38;
  v9 = *(_DWORD *)(a2 + 236);
  if ((v9 & 0x20) == 0)
  {
LABEL_49:
    if ((v9 & 0x40) == 0)
      goto LABEL_50;
    goto LABEL_92;
  }
LABEL_91:
  v39 = *(_DWORD *)(a2 + 196);
  *(_DWORD *)(a1 + 236) |= 0x20u;
  *(_DWORD *)(a1 + 196) = v39;
  v9 = *(_DWORD *)(a2 + 236);
  if ((v9 & 0x40) == 0)
  {
LABEL_50:
    if ((v9 & 0x80) == 0)
      goto LABEL_52;
    goto LABEL_51;
  }
LABEL_92:
  v40 = *(_DWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 236) |= 0x40u;
  *(_DWORD *)(a1 + 200) = v40;
  v9 = *(_DWORD *)(a2 + 236);
  if ((v9 & 0x80) != 0)
  {
LABEL_51:
    v10 = *(_DWORD *)(a2 + 204);
    *(_DWORD *)(a1 + 236) |= 0x80u;
    *(_DWORD *)(a1 + 204) = v10;
    v9 = *(_DWORD *)(a2 + 236);
  }
LABEL_52:
  if ((v9 & 0xFF00) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v9 & 0x100) != 0)
  {
    v41 = *(_DWORD *)(a2 + 208);
    *(_DWORD *)(a1 + 236) |= 0x100u;
    *(_DWORD *)(a1 + 208) = v41;
    v9 = *(_DWORD *)(a2 + 236);
    if ((v9 & 0x200) == 0)
    {
LABEL_55:
      if ((v9 & 0x400) == 0)
        goto LABEL_56;
      goto LABEL_96;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_55;
  }
  v42 = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(a1 + 236) |= 0x200u;
  *(_DWORD *)(a1 + 212) = v42;
  v9 = *(_DWORD *)(a2 + 236);
  if ((v9 & 0x400) == 0)
  {
LABEL_56:
    if ((v9 & 0x800) == 0)
      goto LABEL_57;
LABEL_97:
    v44 = *(_DWORD *)(a2 + 220);
    *(_DWORD *)(a1 + 236) |= 0x800u;
    *(_DWORD *)(a1 + 220) = v44;
    if ((*(_DWORD *)(a2 + 236) & 0x1000) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_58;
  }
LABEL_96:
  v43 = *(_DWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 236) |= 0x400u;
  *(_DWORD *)(a1 + 216) = v43;
  v9 = *(_DWORD *)(a2 + 236);
  if ((v9 & 0x800) != 0)
    goto LABEL_97;
LABEL_57:
  if ((v9 & 0x1000) != 0)
  {
LABEL_58:
    v11 = *(_DWORD *)(a2 + 224);
    *(_DWORD *)(a1 + 236) |= 0x1000u;
    *(_DWORD *)(a1 + 224) = v11;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10009004C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100090064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  _BYTE v16[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v16, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 21651);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 68);
  if (!(_BYTE)v5)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 68) & 1) != 0)
  {
    v8 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 68) |= 1u;
    *(_QWORD *)(a1 + 16) = v8;
    v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_16;
    }
  }
  else if ((*(_BYTE *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_16:
  v10 = *(_DWORD *)(a2 + 28);
  if ((sub_100086B74(v10) & 1) == 0)
    sub_1003CCF00();
  *(_DWORD *)(a1 + 68) |= 4u;
  *(_DWORD *)(a1 + 28) = v10;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  v11 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(_DWORD *)(a1 + 40) = v11;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  v12 = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(_QWORD *)(a1 + 32) = v12;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0)
      goto LABEL_11;
LABEL_21:
    v14 = *(_DWORD *)(a2 + 44);
    if (v14 >= 2)
      sub_1003CCED8();
    *(_DWORD *)(a1 + 68) |= 0x40u;
    *(_DWORD *)(a1 + 44) = v14;
    if ((*(_DWORD *)(a2 + 68) & 0x80) != 0)
      goto LABEL_12;
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_20:
  v13 = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x20u;
  *(_QWORD *)(a1 + 48) = v13;
  v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x40) != 0)
    goto LABEL_21;
LABEL_11:
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 68) |= 0x80u;
    *(_QWORD *)(a1 + 56) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100090204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009021C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  char v27;
  char v28;
  _BYTE v29[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v29, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 23920);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v29, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v28, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v29);
  }
  v5 = *(_DWORD *)(a2 + 104);
  if (!(_BYTE)v5)
    goto LABEL_15;
  if ((v5 & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 16);
    if (v6 >= 2)
      sub_1003CCF28();
    *(_DWORD *)(a1 + 104) |= 1u;
    *(_DWORD *)(a1 + 16) = v6;
    v5 = *(_DWORD *)(a2 + 104);
  }
  if ((v5 & 2) != 0)
  {
    v22 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 104) |= 2u;
    *(_DWORD *)(a1 + 20) = v22;
    v5 = *(_DWORD *)(a2 + 104);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0)
        goto LABEL_10;
      goto LABEL_48;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  v23 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 104) |= 4u;
  *(_DWORD *)(a1 + 24) = v23;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_49;
  }
LABEL_48:
  v24 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 104) |= 8u;
  *(_DWORD *)(a1 + 28) = v24;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0)
      goto LABEL_12;
LABEL_50:
    v26 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 104) |= 0x20u;
    *(_DWORD *)(a1 + 36) = v26;
    v5 = *(_DWORD *)(a2 + 104);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0)
        goto LABEL_15;
      goto LABEL_14;
    }
    goto LABEL_51;
  }
LABEL_49:
  v25 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 104) |= 0x10u;
  *(_DWORD *)(a1 + 32) = v25;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x20) != 0)
    goto LABEL_50;
LABEL_12:
  if ((v5 & 0x40) == 0)
    goto LABEL_13;
LABEL_51:
  v27 = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 104) |= 0x40u;
  *(_BYTE *)(a1 + 40) = v27;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    v7 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 104) |= 0x80u;
    *(_DWORD *)(a1 + 44) = v7;
    v5 = *(_DWORD *)(a2 + 104);
  }
LABEL_15:
  if ((v5 & 0xFF00) == 0)
    goto LABEL_25;
  if ((v5 & 0x100) != 0)
  {
    v11 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 104) |= 0x100u;
    *(_DWORD *)(a1 + 48) = v11;
    v5 = *(_DWORD *)(a2 + 104);
    if ((v5 & 0x200) == 0)
    {
LABEL_18:
      if ((v5 & 0x400) == 0)
        goto LABEL_19;
      goto LABEL_35;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  v12 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 104) |= 0x200u;
  *(_DWORD *)(a1 + 52) = v12;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x400) == 0)
  {
LABEL_19:
    if ((v5 & 0x800) == 0)
      goto LABEL_20;
    goto LABEL_36;
  }
LABEL_35:
  v13 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 104) |= 0x400u;
  *(_DWORD *)(a1 + 56) = v13;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x800) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0)
      goto LABEL_21;
    goto LABEL_37;
  }
LABEL_36:
  v14 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 104) |= 0x800u;
  *(_DWORD *)(a1 + 60) = v14;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x1000) == 0)
  {
LABEL_21:
    if ((v5 & 0x2000) == 0)
      goto LABEL_22;
    goto LABEL_38;
  }
LABEL_37:
  v15 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 104) |= 0x1000u;
  *(_DWORD *)(a1 + 64) = v15;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x2000) == 0)
  {
LABEL_22:
    if ((v5 & 0x4000) == 0)
      goto LABEL_23;
    goto LABEL_39;
  }
LABEL_38:
  v16 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 104) |= 0x2000u;
  *(_DWORD *)(a1 + 68) = v16;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x4000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000) == 0)
      goto LABEL_25;
    goto LABEL_24;
  }
LABEL_39:
  v17 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 104) |= 0x4000u;
  *(_DWORD *)(a1 + 72) = v17;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x8000) != 0)
  {
LABEL_24:
    v8 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 104) |= 0x8000u;
    *(_DWORD *)(a1 + 76) = v8;
    v5 = *(_DWORD *)(a2 + 104);
  }
LABEL_25:
  if ((v5 & 0xFF0000) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v5 & 0x10000) != 0)
  {
    v18 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 104) |= 0x10000u;
    *(_DWORD *)(a1 + 80) = v18;
    v5 = *(_DWORD *)(a2 + 104);
    if ((v5 & 0x20000) == 0)
    {
LABEL_28:
      if ((v5 & 0x40000) == 0)
        goto LABEL_29;
      goto LABEL_43;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_28;
  }
  v19 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 104) |= 0x20000u;
  *(_DWORD *)(a1 + 84) = v19;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x40000) == 0)
  {
LABEL_29:
    if ((v5 & 0x80000) == 0)
      goto LABEL_30;
LABEL_44:
    v21 = *(_DWORD *)(a2 + 92);
    *(_DWORD *)(a1 + 104) |= 0x80000u;
    *(_DWORD *)(a1 + 92) = v21;
    if ((*(_DWORD *)(a2 + 104) & 0x100000) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_31;
  }
LABEL_43:
  v20 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 104) |= 0x40000u;
  *(_DWORD *)(a1 + 88) = v20;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x80000) != 0)
    goto LABEL_44;
LABEL_30:
  if ((v5 & 0x100000) != 0)
  {
LABEL_31:
    v9 = *(_DWORD *)(a2 + 96);
    *(_DWORD *)(a1 + 104) |= 0x100000u;
    *(_DWORD *)(a1 + 96) = v9;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100090554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009056C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  char v21;
  _BYTE v22[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v22, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 24544);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v21, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 28);
      v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        sub_1000B9014();
      }
      v9 = *(_QWORD *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      sub_1000A2D08(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  v10 = *(_DWORD *)(a2 + 88);
  if (!(_BYTE)v10)
    goto LABEL_22;
  if ((v10 & 1) != 0)
  {
    v11 = *(_DWORD *)(a2 + 48);
    if ((sub_100086B74(v11) & 1) == 0)
      sub_1003CCF50();
    *(_DWORD *)(a1 + 88) |= 1u;
    *(_DWORD *)(a1 + 48) = v11;
    v10 = *(_DWORD *)(a2 + 88);
  }
  if ((v10 & 4) != 0)
  {
    v16 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 88) |= 4u;
    *(_QWORD *)(a1 + 40) = v16;
    v10 = *(_DWORD *)(a2 + 88);
    if ((v10 & 8) == 0)
    {
LABEL_17:
      if ((v10 & 0x10) == 0)
        goto LABEL_18;
      goto LABEL_30;
    }
  }
  else if ((v10 & 8) == 0)
  {
    goto LABEL_17;
  }
  v17 = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 88) |= 8u;
  *(_QWORD *)(a1 + 56) = v17;
  v10 = *(_DWORD *)(a2 + 88);
  if ((v10 & 0x10) == 0)
  {
LABEL_18:
    if ((v10 & 0x20) == 0)
      goto LABEL_19;
LABEL_31:
    v19 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 88) |= 0x20u;
    *(_DWORD *)(a1 + 64) = v19;
    v10 = *(_DWORD *)(a2 + 88);
    if ((v10 & 0x40) == 0)
    {
LABEL_20:
      if ((v10 & 0x80) == 0)
        goto LABEL_22;
      goto LABEL_21;
    }
    goto LABEL_32;
  }
LABEL_30:
  v18 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(_DWORD *)(a1 + 52) = v18;
  v10 = *(_DWORD *)(a2 + 88);
  if ((v10 & 0x20) != 0)
    goto LABEL_31;
LABEL_19:
  if ((v10 & 0x40) == 0)
    goto LABEL_20;
LABEL_32:
  v20 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 88) |= 0x40u;
  *(_DWORD *)(a1 + 68) = v20;
  v10 = *(_DWORD *)(a2 + 88);
  if ((v10 & 0x80) != 0)
  {
LABEL_21:
    v12 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 88) |= 0x80u;
    *(_DWORD *)(a1 + 72) = v12;
    v10 = *(_DWORD *)(a2 + 88);
  }
LABEL_22:
  if ((v10 & 0xFF00) != 0)
  {
    if ((v10 & 0x100) != 0)
    {
      v13 = *(_DWORD *)(a2 + 76);
      *(_DWORD *)(a1 + 88) |= 0x100u;
      *(_DWORD *)(a1 + 76) = v13;
      v10 = *(_DWORD *)(a2 + 88);
    }
    if ((v10 & 0x200) != 0)
    {
      v14 = *(_DWORD *)(a2 + 80);
      *(_DWORD *)(a1 + 88) |= 0x200u;
      *(_DWORD *)(a1 + 80) = v14;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000907D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000907E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  char v15;
  _BYTE v16[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v16, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 24984);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if ((sub_100086B74(v6) & 1) == 0)
        sub_1003CCF78();
      *(_DWORD *)(a1 + 52) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 52);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 52) |= 2u;
      *(_DWORD *)(a1 + 20) = v7;
      v5 = *(_DWORD *)(a2 + 52);
    }
    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 52) |= 4u;
      v8 = *(_DWORD **)(a1 + 24);
      if (!v8)
        operator new();
      v9 = *(_QWORD *)(a2 + 24);
      if (!v9)
        v9 = *(_QWORD *)(qword_10085F7A8 + 24);
      sub_1000A2D08(v8, v9);
      v5 = *(_DWORD *)(a2 + 52);
    }
    if ((v5 & 8) != 0)
    {
      *(_DWORD *)(a1 + 52) |= 8u;
      v10 = *(_DWORD **)(a1 + 32);
      if (!v10)
        operator new();
      v11 = *(_QWORD *)(a2 + 32);
      if (!v11)
        v11 = *(_QWORD *)(qword_10085F7A8 + 32);
      sub_1000A2D08(v10, v11);
      v5 = *(_DWORD *)(a2 + 52);
    }
    if ((v5 & 0x10) != 0)
    {
      v12 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 52) |= 0x10u;
      *(_DWORD *)(a1 + 40) = v12;
      v5 = *(_DWORD *)(a2 + 52);
    }
    if ((v5 & 0x20) != 0)
    {
      v13 = *(_DWORD *)(a2 + 44);
      *(_DWORD *)(a1 + 52) |= 0x20u;
      *(_DWORD *)(a1 + 44) = v13;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000909A4()
{
  operator delete();
}

uint64_t sub_1000909E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BYTE v20[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v20, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 19154);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), *(_DWORD *)(a2 + 56) + *(_DWORD *)(a1 + 56));
  if (*(int *)(a2 + 56) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 60);
      v8 = *(int *)(a1 + 56);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 64))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v7 + 1);
          v7 = *(_DWORD *)(a1 + 60);
        }
        *(_DWORD *)(a1 + 60) = v7 + 1;
        sub_1000B9134();
      }
      v9 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)(a1 + 56) = v8 + 1;
      sub_1000ABE44(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 56));
  }
  LOBYTE(v10) = *(_BYTE *)(a2 + 76);
  if (!(_BYTE)v10)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((*(_BYTE *)(a2 + 76) & 1) != 0)
  {
    v13 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 76) |= 1u;
    *(_QWORD *)(a1 + 16) = v13;
    v10 = *(_DWORD *)(a2 + 76);
    if ((v10 & 2) == 0)
    {
LABEL_14:
      if ((v10 & 4) == 0)
        goto LABEL_15;
      goto LABEL_22;
    }
  }
  else if ((*(_BYTE *)(a2 + 76) & 2) == 0)
  {
    goto LABEL_14;
  }
  v14 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 76) |= 2u;
  *(_DWORD *)(a1 + 24) = v14;
  v10 = *(_DWORD *)(a2 + 76);
  if ((v10 & 4) == 0)
  {
LABEL_15:
    if ((v10 & 8) == 0)
      goto LABEL_16;
    goto LABEL_23;
  }
LABEL_22:
  v15 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(_DWORD *)(a1 + 28) = v15;
  v10 = *(_DWORD *)(a2 + 76);
  if ((v10 & 8) == 0)
  {
LABEL_16:
    if ((v10 & 0x10) == 0)
      goto LABEL_17;
LABEL_24:
    *(_DWORD *)(a1 + 76) |= 0x10u;
    v17 = *(_QWORD *)(a1 + 32);
    if (!v17)
      operator new();
    v18 = *(_QWORD *)(a2 + 32);
    if (!v18)
      v18 = *(_QWORD *)(qword_10085F770 + 32);
    sub_10009166C(v17, v18);
    if ((*(_DWORD *)(a2 + 76) & 0x20) != 0)
      goto LABEL_18;
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_23:
  v16 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(_DWORD *)(a1 + 40) = v16;
  v10 = *(_DWORD *)(a2 + 76);
  if ((v10 & 0x10) != 0)
    goto LABEL_24;
LABEL_17:
  if ((v10 & 0x20) != 0)
  {
LABEL_18:
    v11 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 76) |= 0x20u;
    *(_DWORD *)(a1 + 44) = v11;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100090C14()
{
  operator delete();
}

uint64_t sub_100090C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  char v10;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  char v24;
  _BYTE v25[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v25, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 25765);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v24, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  v5 = *(_DWORD *)(a2 + 88);
  if (!(_BYTE)v5)
    goto LABEL_20;
  if ((v5 & 1) != 0)
  {
    *(_DWORD *)(a1 + 88) |= 1u;
    v6 = *(_QWORD *)(a1 + 16);
    if (!v6)
      operator new();
    v7 = *(_QWORD *)(a2 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F7B0 + 16);
    sub_10009166C(v6, v7);
    v5 = *(_DWORD *)(a2 + 88);
  }
  if ((v5 & 2) != 0)
  {
    v8 = *(_DWORD *)(a2 + 24);
    if (v8 >= 2)
      sub_1003CCFA0();
    *(_DWORD *)(a1 + 88) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    v5 = *(_DWORD *)(a2 + 88);
  }
  if ((v5 & 4) != 0)
  {
    v19 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 88) |= 4u;
    *(_DWORD *)(a1 + 28) = v19;
    v5 = *(_DWORD *)(a2 + 88);
    if ((v5 & 8) == 0)
    {
LABEL_15:
      if ((v5 & 0x10) == 0)
        goto LABEL_16;
      goto LABEL_41;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_15;
  }
  v20 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 88) |= 8u;
  *(_DWORD *)(a1 + 32) = v20;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x10) == 0)
  {
LABEL_16:
    if ((v5 & 0x20) == 0)
      goto LABEL_17;
LABEL_42:
    v22 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 88) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v22;
    v5 = *(_DWORD *)(a2 + 88);
    if ((v5 & 0x40) == 0)
    {
LABEL_18:
      if ((v5 & 0x80) == 0)
        goto LABEL_20;
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_41:
  v21 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v21;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x20) != 0)
    goto LABEL_42;
LABEL_17:
  if ((v5 & 0x40) == 0)
    goto LABEL_18;
LABEL_43:
  v23 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 88) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v23;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x80) != 0)
  {
LABEL_19:
    v9 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 88) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v9;
    v5 = *(_DWORD *)(a2 + 88);
  }
LABEL_20:
  if ((v5 & 0xFF00) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v5 & 0x100) != 0)
  {
    v12 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 88) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v12;
    v5 = *(_DWORD *)(a2 + 88);
    if ((v5 & 0x200) == 0)
    {
LABEL_23:
      if ((v5 & 0x400) == 0)
        goto LABEL_24;
      goto LABEL_33;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_23;
  }
  v13 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 88) |= 0x200u;
  *(_DWORD *)(a1 + 56) = v13;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x400) == 0)
  {
LABEL_24:
    if ((v5 & 0x800) == 0)
      goto LABEL_25;
    goto LABEL_34;
  }
LABEL_33:
  v14 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 88) |= 0x400u;
  *(_DWORD *)(a1 + 60) = v14;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x800) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000) == 0)
      goto LABEL_26;
    goto LABEL_35;
  }
LABEL_34:
  v15 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 88) |= 0x800u;
  *(_DWORD *)(a1 + 64) = v15;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x1000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000) == 0)
      goto LABEL_27;
    goto LABEL_36;
  }
LABEL_35:
  v16 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 88) |= 0x1000u;
  *(_DWORD *)(a1 + 68) = v16;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x2000) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000) == 0)
      goto LABEL_28;
LABEL_37:
    v18 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 88) |= 0x4000u;
    *(_DWORD *)(a1 + 76) = v18;
    if ((*(_DWORD *)(a2 + 88) & 0x8000) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_29;
  }
LABEL_36:
  v17 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 88) |= 0x2000u;
  *(_DWORD *)(a1 + 72) = v17;
  v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x4000) != 0)
    goto LABEL_37;
LABEL_28:
  if ((v5 & 0x8000) != 0)
  {
LABEL_29:
    v10 = *(_BYTE *)(a2 + 80);
    *(_DWORD *)(a1 + 88) |= 0x8000u;
    *(_BYTE *)(a1 + 80) = v10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100090F20()
{
  operator delete();
}

uint64_t sub_100090F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 26040);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if ((*(_BYTE *)(a2 + 28) & 1) != 0)
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    v5 = *(_QWORD *)(a1 + 16);
    if (!v5)
      operator new();
    v6 = *(_QWORD *)(a2 + 16);
    if (!v6)
      v6 = *(_QWORD *)(qword_10085F7B8 + 16);
    sub_100091F4C(v5, v6);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100091034()
{
  operator delete();
}

uint64_t sub_10009106C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  const std::string *v24;
  std::string *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  char v34;
  _BYTE v35[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v35, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 22898);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v35, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v34, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v35);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 128), *(_DWORD *)(a2 + 136) + *(_DWORD *)(a1 + 136));
  if (*(int *)(a2 + 136) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 128) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 140);
      v8 = *(int *)(a1 + 136);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 144))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 128), v7 + 1);
          v7 = *(_DWORD *)(a1 + 140);
        }
        *(_DWORD *)(a1 + 140) = v7 + 1;
        sub_1000B9194();
      }
      v9 = *(_QWORD *)(a1 + 128);
      *(_DWORD *)(a1 + 136) = v8 + 1;
      sub_1000B1874(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 136));
  }
  v10 = *(_DWORD *)(a2 + 160);
  if ((_BYTE)v10)
  {
    if ((v10 & 1) != 0)
    {
      v17 = *(_QWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 160) |= 1u;
      *(_QWORD *)(a1 + 16) = v17;
      v10 = *(_DWORD *)(a2 + 160);
      if ((v10 & 2) == 0)
      {
LABEL_14:
        if ((v10 & 4) == 0)
          goto LABEL_15;
        goto LABEL_43;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_14;
    }
    v18 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 160) |= 2u;
    *(_QWORD *)(a1 + 24) = v18;
    v10 = *(_DWORD *)(a2 + 160);
    if ((v10 & 4) == 0)
    {
LABEL_15:
      if ((v10 & 8) == 0)
        goto LABEL_16;
      goto LABEL_44;
    }
LABEL_43:
    v19 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 160) |= 4u;
    *(_DWORD *)(a1 + 32) = v19;
    v10 = *(_DWORD *)(a2 + 160);
    if ((v10 & 8) == 0)
    {
LABEL_16:
      if ((v10 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_46;
    }
LABEL_44:
    v20 = *(_DWORD *)(a2 + 36);
    if ((sub_100086B74(v20) & 1) == 0)
      sub_1003CD068();
    *(_DWORD *)(a1 + 160) |= 8u;
    *(_DWORD *)(a1 + 36) = v20;
    v10 = *(_DWORD *)(a2 + 160);
    if ((v10 & 0x10) == 0)
    {
LABEL_17:
      if ((v10 & 0x20) == 0)
        goto LABEL_18;
      goto LABEL_51;
    }
LABEL_46:
    *(_DWORD *)(a1 + 160) |= 0x10u;
    v21 = *(_QWORD *)(a1 + 40);
    if (!v21)
      operator new();
    v22 = *(_QWORD *)(a2 + 40);
    if (!v22)
      v22 = *(_QWORD *)(qword_10085F790 + 40);
    sub_10009166C(v21, v22);
    v10 = *(_DWORD *)(a2 + 160);
    if ((v10 & 0x20) == 0)
    {
LABEL_18:
      if ((v10 & 0x40) == 0)
        goto LABEL_20;
      goto LABEL_19;
    }
LABEL_51:
    v23 = *(_DWORD *)(a2 + 48);
    if (v23 > 0x1B || ((1 << v23) & 0xDDB54EF) == 0)
      sub_1003CD040();
    *(_DWORD *)(a1 + 160) |= 0x20u;
    *(_DWORD *)(a1 + 48) = v23;
    v10 = *(_DWORD *)(a2 + 160);
    if ((v10 & 0x40) == 0)
      goto LABEL_20;
LABEL_19:
    v11 = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 160) |= 0x40u;
    *(_QWORD *)(a1 + 56) = v11;
    v10 = *(_DWORD *)(a2 + 160);
LABEL_20:
    if ((v10 & 0x80) != 0)
    {
      v12 = *(_DWORD *)(a2 + 52);
      *(_DWORD *)(a1 + 160) |= 0x80u;
      *(_DWORD *)(a1 + 52) = v12;
      v10 = *(_DWORD *)(a2 + 160);
    }
  }
  if ((v10 & 0xFF00) == 0)
    goto LABEL_32;
  if ((v10 & 0x100) != 0)
  {
    v24 = *(const std::string **)(a2 + 64);
    *(_DWORD *)(a1 + 160) |= 0x100u;
    v25 = *(std::string **)(a1 + 64);
    if (v25 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v25, v24);
    v10 = *(_DWORD *)(a2 + 160);
    if ((v10 & 0x200) == 0)
    {
LABEL_25:
      if ((v10 & 0x400) == 0)
        goto LABEL_26;
      goto LABEL_59;
    }
  }
  else if ((v10 & 0x200) == 0)
  {
    goto LABEL_25;
  }
  v26 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 160) |= 0x200u;
  *(_DWORD *)(a1 + 88) = v26;
  v10 = *(_DWORD *)(a2 + 160);
  if ((v10 & 0x400) == 0)
  {
LABEL_26:
    if ((v10 & 0x800) == 0)
      goto LABEL_27;
    goto LABEL_60;
  }
LABEL_59:
  v27 = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 160) |= 0x400u;
  *(_QWORD *)(a1 + 72) = v27;
  v10 = *(_DWORD *)(a2 + 160);
  if ((v10 & 0x800) == 0)
  {
LABEL_27:
    if ((v10 & 0x1000) == 0)
      goto LABEL_28;
    goto LABEL_61;
  }
LABEL_60:
  v28 = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 160) |= 0x800u;
  *(_QWORD *)(a1 + 80) = v28;
  v10 = *(_DWORD *)(a2 + 160);
  if ((v10 & 0x1000) == 0)
  {
LABEL_28:
    if ((v10 & 0x2000) == 0)
      goto LABEL_29;
    goto LABEL_62;
  }
LABEL_61:
  v29 = *(_QWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 160) |= 0x1000u;
  *(_QWORD *)(a1 + 96) = v29;
  v10 = *(_DWORD *)(a2 + 160);
  if ((v10 & 0x2000) == 0)
  {
LABEL_29:
    if ((v10 & 0x4000) == 0)
      goto LABEL_30;
    goto LABEL_64;
  }
LABEL_62:
  v30 = *(_DWORD *)(a2 + 92);
  if (v30 >= 4)
    sub_1003CD018();
  *(_DWORD *)(a1 + 160) |= 0x2000u;
  *(_DWORD *)(a1 + 92) = v30;
  v10 = *(_DWORD *)(a2 + 160);
  if ((v10 & 0x4000) == 0)
  {
LABEL_30:
    if ((v10 & 0x8000) == 0)
      goto LABEL_32;
    goto LABEL_31;
  }
LABEL_64:
  v31 = *(_DWORD *)(a2 + 104);
  if (v31 >= 4)
    sub_1003CCFF0();
  *(_DWORD *)(a1 + 160) |= 0x4000u;
  *(_DWORD *)(a1 + 104) = v31;
  v10 = *(_DWORD *)(a2 + 160);
  if ((v10 & 0x8000) != 0)
  {
LABEL_31:
    v13 = *(_DWORD *)(a2 + 108);
    *(_DWORD *)(a1 + 160) |= 0x8000u;
    *(_DWORD *)(a1 + 108) = v13;
    v10 = *(_DWORD *)(a2 + 160);
  }
LABEL_32:
  if ((v10 & 0xFF0000) == 0)
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  if ((v10 & 0x10000) != 0)
  {
    v14 = *(_DWORD *)(a2 + 120);
    if ((sub_100086C10(v14) & 1) == 0)
      sub_1003CCFC8();
    *(_DWORD *)(a1 + 160) |= 0x10000u;
    *(_DWORD *)(a1 + 120) = v14;
    v10 = *(_DWORD *)(a2 + 160);
  }
  if ((v10 & 0x20000) == 0)
  {
    if ((v10 & 0x40000) == 0)
      goto LABEL_38;
LABEL_68:
    v33 = *(_DWORD *)(a2 + 124);
    *(_DWORD *)(a1 + 160) |= 0x40000u;
    *(_DWORD *)(a1 + 124) = v33;
    if ((*(_DWORD *)(a2 + 160) & 0x80000) == 0)
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    goto LABEL_39;
  }
  v32 = *(_QWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 160) |= 0x20000u;
  *(_QWORD *)(a1 + 112) = v32;
  v10 = *(_DWORD *)(a2 + 160);
  if ((v10 & 0x40000) != 0)
    goto LABEL_68;
LABEL_38:
  if ((v10 & 0x80000) != 0)
  {
LABEL_39:
    v15 = *(_DWORD *)(a2 + 152);
    *(_DWORD *)(a1 + 160) |= 0x80000u;
    *(_DWORD *)(a1 + 152) = v15;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100091504()
{
  operator delete();
}

uint64_t sub_10009153C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100091584()
{
  return 1;
}

uint64_t sub_10009158C()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008547C8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000834E8;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008547C8, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854478;
}

void sub_100091604(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100091618(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FDA28;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_100091658(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009166C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  const std::string *v6;
  std::string *v7;
  int v8;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 4312);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v6 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 32) |= 1u;
      v7 = *(std::string **)(a1 + 16);
      if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(v7, v6);
      v5 = *(_DWORD *)(a2 + 32);
    }
    if ((v5 & 2) != 0)
    {
      v8 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 24) = v8;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100091764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009177C(wireless_diagnostics::google::protobuf::Message *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *(_QWORD *)a1 = off_1007FDA28;
  v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_1000917B8((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_1000917B8(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 16);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    operator delete();
  }
  return result;
}

void sub_10009181C(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10009177C(a1);
  operator delete();
}

uint64_t sub_100091840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_100091848()
{
  operator new();
}

void sub_100091884()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000918A8(uint64_t a1)
{
  uint64_t v1;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v3;

  if (*(_BYTE *)(a1 + 32))
  {
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      v1 = *(_QWORD *)(a1 + 16);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(_BYTE **)v1 = 0;
          *(_QWORD *)(v1 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v1 = 0;
          *(_BYTE *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(a1 + 24) = 0;
  }
  v3 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v3)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_100091900(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  unint64_t v11;
  char *v12;
  void *v13;
  uint64_t result;
  uint64_t *v15;
  uint64_t v16;
  _BYTE *v17;
  unsigned __int8 *v18;

  v6 = (unsigned int *)(a1 + 24);
  v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v8 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v10 = TagFallback & 7;
      if (v10 != 2)
        goto LABEL_18;
      *(_DWORD *)(a1 + 32) |= 1u;
      v13 = *(void **)(a1 + 16);
      if (v13 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v13);
      if (!(_DWORD)result)
        return result;
      v15 = *(uint64_t **)(a1 + 16);
      if (*((char *)v15 + 23) < 0)
      {
        v15 = (uint64_t *)*v15;
        v16 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
      }
      else
      {
        v16 = *((unsigned __int8 *)v15 + 23);
      }
      wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v15, v16, 0);
      v17 = (_BYTE *)*((_QWORD *)this + 1);
      v11 = *((_QWORD *)this + 2);
      if ((unint64_t)v17 < v11 && *v17 == 16)
      {
        v12 = v17 + 1;
        *((_QWORD *)this + 1) = v12;
LABEL_25:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v18 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v12;
          v18 = (unsigned __int8 *)(v12 + 1);
          *((_QWORD *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if (v18 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_25;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_18:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
      return 0;
  }
}

uint64_t sub_100091ADC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v10;
  _QWORD *v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    v7 = *(uint64_t **)(this + 16);
    if (*((char *)v7 + 23) < 0)
    {
      v7 = (uint64_t *)*v7;
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8);
    }
    else
    {
      v8 = *((unsigned __int8 *)v7 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v7, v8, 1);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(v5 + 16), a2);
    v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  v11 = *(_QWORD **)(v5 + 8);
  v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100091B74(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  const void *v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  _QWORD *v17;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v18;
  _QWORD *v19;

  v5 = *((_DWORD *)this + 8);
  if ((v5 & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)this + 2);
    if (*((char *)v6 + 23) < 0)
    {
      v6 = (uint64_t *)*v6;
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 8);
    }
    else
    {
      v7 = *((unsigned __int8 *)v6 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v6, v7, 1);
    v10 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 10;
    if (*(char *)(v10 + 23) < 0)
      v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v10 + 8);
    else
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v10 + 23);
    if (v11 > 0x7F)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)a2 + 1, v8);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v11;
      v12 = (_DWORD)a2 + 2;
    }
    v13 = *(char *)(v10 + 23);
    if (v13 >= 0)
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10;
    else
      v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v10;
    if (v13 >= 0)
      v15 = (const void *)*(unsigned __int8 *)(v10 + 23);
    else
      v15 = (const void *)*(unsigned int *)(v10 + 8);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v14, v15, v12, v9);
    v5 = *((_DWORD *)this + 8);
  }
  if ((v5 & 2) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)a2 = 16;
    if (v16 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v16;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  v19 = (_QWORD *)*((_QWORD *)this + 1);
  v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v17 = v19;
  if (!v19 || *v17 == v17[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, a2, a3);
}

uint64_t sub_100091C8C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  _QWORD *v14;

  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 32) & 1) == 0)
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 32) & 2) == 0)
        goto LABEL_19;
LABEL_15:
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if (v12 >= 0x80)
        v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)
            + 1;
      else
        v13 = 2;
      v4 = (v13 + v4);
      goto LABEL_19;
    }
    v5 = *(_QWORD *)(a1 + 16);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v7 = v6;
    v8 = *(_QWORD *)(v5 + 8);
    if ((v6 & 0x80u) == 0)
      v9 = *(unsigned __int8 *)(v5 + 23);
    else
      v9 = v8;
    if (v9 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
      v6 = *(unsigned __int8 *)(v5 + 23);
      v8 = *(_QWORD *)(v5 + 8);
      v10 = v11 + 1;
      v3 = *(_DWORD *)(a1 + 32);
      v7 = *(_BYTE *)(v5 + 23);
    }
    else
    {
      v10 = 2;
    }
    if (v7 < 0)
      v6 = v8;
    v4 = (v10 + v6);
    if ((v3 & 2) != 0)
      goto LABEL_15;
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  v14 = *(_QWORD **)(a1 + 8);
  if (v14 && *v14 != v14[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

uint64_t sub_100091D64(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 4300);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10009166C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100091E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100091E24(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100091E6C()
{
  return 1;
}

uint64_t sub_100091E74()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008547C8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000834E8;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008547C8, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854488;
}

void sub_100091EEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100091F00(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FDAD8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_100091F38(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100091F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 4571);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 24);
      if ((sub_100086B74(v6) & 1) == 0)
        sub_1003CD090();
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 24) = v6;
      v5 = *(_DWORD *)(a2 + 32);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 2u;
      v7 = *(_QWORD *)(a1 + 16);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 16);
      if (!v8)
        v8 = *(_QWORD *)(qword_10085F680 + 16);
      sub_10009166C(v7, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100092058()
{
  operator delete();
}

void sub_100092090(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_1007FDAD8;
  if ((_QWORD *)qword_10085F680 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000920EC(_QWORD *a1)
{
  sub_100092090(a1);
  operator delete();
}

uint64_t sub_100092110(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_100092118()
{
  operator new();
}

void sub_100092154()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100092178(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v1;
  char v2;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  uint64_t v4;

  v1 = this;
  v2 = *((_BYTE *)this + 32);
  if (v2)
  {
    *((_DWORD *)this + 6) = 0;
    if ((v2 & 2) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      if (this)
        this = sub_1000918A8((uint64_t)this);
    }
  }
  v4 = *((_QWORD *)v1 + 1);
  v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 6) = 0;
  if (v4)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  return this;
}

uint64_t sub_1000921CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  char *v10;
  signed int v11;
  uint64_t result;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v20;
  int v21;
  BOOL v22;
  int v23;
  unsigned int v24;
  unsigned int v25;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v24 = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!(_DWORD)result)
            return result;
          v11 = v24;
        }
        else
        {
          v11 = *v10;
          *((_QWORD *)this + 1) = v10 + 1;
        }
        if (sub_100086B74(v11))
        {
          *(_DWORD *)(a1 + 32) |= 1u;
          *(_DWORD *)(a1 + 24) = v11;
        }
        else
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v11);
        }
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 < *((_QWORD *)this + 2) && *v13 == 18)
        {
          *((_QWORD *)this + 1) = v13 + 1;
          goto LABEL_27;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v9 = TagFallback & 7;
        goto LABEL_16;
      }
      v9 = TagFallback & 7;
      if (v9 == 2)
        break;
LABEL_16:
      if (v9 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
    }
LABEL_27:
    *(_DWORD *)(a1 + 32) |= 2u;
    v14 = *(_QWORD *)(a1 + 16);
    if (!v14)
      operator new();
    v25 = 0;
    v15 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v15 >= *((_QWORD *)this + 2) || *v15 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25))
        return 0;
    }
    else
    {
      v25 = *v15;
      *((_QWORD *)this + 1) = v15 + 1;
    }
    v16 = *((_DWORD *)this + 14);
    v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17)
      return 0;
    v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v25);
    if (!sub_100091900(v14, this, v19, v20) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    v21 = *((_DWORD *)this + 14);
    v22 = __OFSUB__(v21, 1);
    v23 = v21 - 1;
    if (v23 < 0 == v22)
      *((_DWORD *)this + 14) = v23;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

void sub_10009242C()
{
  operator delete();
}

uint64_t sub_100092450(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v9;
  _QWORD *v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 24), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0)
  {
    v7 = *(_QWORD *)(v5 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_10085F680 + 16);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  v10 = *(_QWORD **)(v5 + 8);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000924D8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v7;
  unsigned int *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v10;
  _QWORD *v11;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v12;
  _QWORD *v13;

  v3 = a2;
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *(_BYTE *)a2 = 8;
    v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v5;
        v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }
      v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    v3 = v7;
  }
LABEL_8:
  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
    v8 = (unsigned int *)*((_QWORD *)this + 2);
    if (!v8)
      v8 = *(unsigned int **)(qword_10085F680 + 16);
    *(_BYTE *)v3 = 18;
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[7];
    if (v9 > 0x7F)
    {
      v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    v3 = sub_100091B74((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v10, a3);
  }
  v13 = (_QWORD *)*((_QWORD *)this + 1);
  v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v11 = v13;
  if (!v13 || *v11 == v11[1])
    return v3;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v12, v3, a3);
}

uint64_t sub_1000925B8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  _QWORD *v10;

  v3 = *(_BYTE *)(a1 + 32);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v5 & 0x80000000) != 0)
      {
        v4 = 11;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
      else if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
        if ((*(_DWORD *)(a1 + 32) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 32) & 2) == 0)
        goto LABEL_19;
    }
    v6 = *(_QWORD *)(a1 + 16);
    if (!v6)
      v6 = *(_QWORD *)(qword_10085F680 + 16);
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100091C8C(v6, a2);
    v8 = (int)v7;
    if (v7 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    else
      v9 = 1;
    v4 = (v4 + v8 + v9 + 1);
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  v10 = *(_QWORD **)(a1 + 8);
  if (v10 && *v10 != v10[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

uint64_t sub_10009269C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 4559);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100091F4C((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100092744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009275C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_1000927A4()
{
  return 1;
}

uint64_t sub_1000927AC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008547C8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000834E8;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008547C8, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_100854498;
}

void sub_100092824(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_100092838(_QWORD *a1)
{
  *a1 = off_1007FDB88;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  return a1;
}

void sub_100092874(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100092888(wireless_diagnostics::google::protobuf::Message *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *(_QWORD *)a1 = off_1007FDB88;
  v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_1000917B8((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_1000928C8(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_100092888(a1);
  operator delete();
}

uint64_t sub_1000928EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1000928F4()
{
  operator new();
}

void sub_100092930()
{
  operator delete();
}

uint64_t sub_100092954(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t result;

  v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
      }
      if ((_DWORD)TagFallback != 10)
        break;
      *(_DWORD *)(a1 + 28) |= 1u;
      v9 = *(void **)(a1 + 16);
      if (v9 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v9);
      if (!(_DWORD)result)
        return result;
      v10 = *(uint64_t **)(a1 + 16);
      if (*((char *)v10 + 23) < 0)
      {
        v10 = (uint64_t *)*v10;
        v11 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
      }
      else
      {
        v11 = *((unsigned __int8 *)v10 + 23);
      }
      wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v10, v11, 0);
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)
      return 0;
  }
  return 1;
}

uint64_t sub_100092A98(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;

  v4 = this;
  if ((*(_BYTE *)(this + 28) & 1) != 0)
  {
    v5 = *(uint64_t **)(this + 16);
    if (*((char *)v5 + 23) < 0)
    {
      v5 = (uint64_t *)*v5;
      v6 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8);
    }
    else
    {
      v6 = *((unsigned __int8 *)v5 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v5, v6, 1);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(v4 + 16), a2);
  }
  v9 = *(_QWORD **)(v4 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100092B18(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t *v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  const void *v14;
  _QWORD *v15;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v16;
  _QWORD *v17;

  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    v5 = (uint64_t *)*((_QWORD *)this + 2);
    if (*((char *)v5 + 23) < 0)
    {
      v5 = (uint64_t *)*v5;
      v6 = *(_QWORD *)(*((_QWORD *)this + 2) + 8);
    }
    else
    {
      v6 = *((unsigned __int8 *)v5 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v5, v6, 1);
    v9 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 10;
    if (*(char *)(v9 + 23) < 0)
      v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v9 + 8);
    else
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v9 + 23);
    if (v10 > 0x7F)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)a2 + 1, v7);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v10;
      v11 = (_DWORD)a2 + 2;
    }
    v12 = *(char *)(v9 + 23);
    if (v12 >= 0)
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9;
    else
      v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v9;
    if (v12 >= 0)
      v14 = (const void *)*(unsigned __int8 *)(v9 + 23);
    else
      v14 = (const void *)*(unsigned int *)(v9 + 8);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v13, v14, v11, v8);
  }
  v17 = (_QWORD *)*((_QWORD *)this + 1);
  v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v15 = v17;
  if (!v17 || *v15 == v15[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, a2, a3);
}

uint64_t sub_100092BFC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  _QWORD *v11;

  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 8);
    if ((v5 & 0x80u) == 0)
      v8 = *(unsigned __int8 *)(v4 + 23);
    else
      v8 = v7;
    if (v8 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8, a2);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v7 = *(_QWORD *)(v4 + 8);
      v9 = v10 + 1;
      v6 = *(_BYTE *)(v4 + 23);
    }
    else
    {
      v9 = 2;
    }
    if (v6 < 0)
      v5 = v7;
    v3 = (v9 + v5);
  }
  else
  {
    v3 = 0;
  }
  v11 = *(_QWORD **)(a1 + 8);
  if (v11 && *v11 != v11[1])
    v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_100092C9C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 4788);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10008CA68((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100092D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100092D5C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100092DA4()
{
  return 1;
}

uint64_t sub_100092DAC()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008547C8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000834E8;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008547C8, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008544A8;
}

void sub_100092E24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_100092E38(_QWORD *a1)
{
  *a1 = off_1007FDC38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0;
  return a1;
}

void sub_100092E80(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100092E94(wireless_diagnostics::google::protobuf::Message *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;

  *(_QWORD *)a1 = off_1007FDC38;
  v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100092ED0((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_100092ED0(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(result + 16);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    operator delete();
  }
  v3 = *(_QWORD *)(result + 40);
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    operator delete();
  }
  return result;
}

void sub_100092F7C(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_100092E94(a1);
  operator delete();
}

uint64_t sub_100092FA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

void sub_100092FA8()
{
  operator new();
}

void sub_100092FE4()
{
  operator delete();
}

uint64_t sub_100093008(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v15;
  void *v16;
  uint64_t result;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;
  unint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  void *v36;
  uint64_t *v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  unsigned __int8 *v43;
  unsigned int *v44;
  unsigned int *v45;

  v44 = (unsigned int *)(a1 + 24);
  v45 = (unsigned int *)(a1 + 28);
  v6 = (unsigned int *)(a1 + 32);
  v7 = (unsigned int *)(a1 + 36);
  v8 = (unsigned int *)(a1 + 48);
  v9 = (unsigned int *)(a1 + 52);
  v10 = (unsigned int *)(a1 + 56);
  v11 = (unsigned int *)(a1 + 60);
  v12 = a1 + 8;
  while (2)
  {
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v13;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v13 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v15 = TagFallback & 7;
        if (v15 != 2)
          goto LABEL_32;
        *(_DWORD *)(a1 + 68) |= 1u;
        v16 = *(void **)(a1 + 16);
        if (v16 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v16);
        if ((_DWORD)result)
        {
          v18 = *(uint64_t **)(a1 + 16);
          if (*((char *)v18 + 23) < 0)
          {
            v18 = (uint64_t *)*v18;
            v19 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
          }
          else
          {
            v19 = *((unsigned __int8 *)v18 + 23);
          }
          wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v18, v19, 0);
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
          if ((unint64_t)v31 < v20 && *v31 == 16)
          {
            v21 = v31 + 1;
            *((_QWORD *)this + 1) = v21;
            goto LABEL_40;
          }
          continue;
        }
        return result;
      case 2u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
LABEL_40:
        if ((unint64_t)v21 < v20 && (*v21 & 0x80000000) == 0)
        {
          *v44 = *v21;
          v32 = v21 + 1;
          *((_QWORD *)this + 1) = v32;
LABEL_45:
          *(_DWORD *)(a1 + 68) |= 2u;
          if ((unint64_t)v32 < v20 && *v32 == 24)
          {
            v22 = v32 + 1;
            *((_QWORD *)this + 1) = v22;
            goto LABEL_48;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
        if ((_DWORD)result)
        {
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
          goto LABEL_45;
        }
        break;
      case 3u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v22 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
LABEL_48:
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          *v45 = *v22;
          v33 = v22 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 68) |= 4u;
        if ((unint64_t)v33 >= v20 || *v33 != 32)
          continue;
        v23 = v33 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_56:
        if ((unint64_t)v23 >= v20 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v23;
          v34 = v23 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 68) |= 8u;
        if ((unint64_t)v34 >= v20 || *v34 != 40)
          continue;
        v24 = v34 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_64:
        if ((unint64_t)v24 >= v20 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v24;
          v35 = v24 + 1;
          *((_QWORD *)this + 1) = v35;
        }
        v25 = *(_DWORD *)(a1 + 68) | 0x10;
        *(_DWORD *)(a1 + 68) = v25;
        if ((unint64_t)v35 >= v20 || *v35 != 50)
          continue;
        *((_QWORD *)this + 1) = v35 + 1;
LABEL_72:
        *(_DWORD *)(a1 + 68) = v25 | 0x20;
        v36 = *(void **)(a1 + 40);
        if (v36 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v36);
        if (!(_DWORD)result)
          return result;
        v37 = *(uint64_t **)(a1 + 40);
        if (*((char *)v37 + 23) < 0)
        {
          v37 = (uint64_t *)*v37;
          v38 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
        }
        else
        {
          v38 = *((unsigned __int8 *)v37 + 23);
        }
        wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v37, v38, 0);
        v39 = (_BYTE *)*((_QWORD *)this + 1);
        v26 = *((_QWORD *)this + 2);
        if ((unint64_t)v39 >= v26 || *v39 != 56)
          continue;
        v27 = v39 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_81:
        if ((unint64_t)v27 >= v26 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)this + 1);
          v26 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v27;
          v40 = v27 + 1;
          *((_QWORD *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 68) |= 0x40u;
        if ((unint64_t)v40 >= v26 || *v40 != 64)
          continue;
        v28 = v40 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_89:
        if ((unint64_t)v28 >= v26 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v41 = (_BYTE *)*((_QWORD *)this + 1);
          v26 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v28;
          v41 = v28 + 1;
          *((_QWORD *)this + 1) = v41;
        }
        *(_DWORD *)(a1 + 68) |= 0x80u;
        if ((unint64_t)v41 >= v26 || *v41 != 72)
          continue;
        v29 = v41 + 1;
        *((_QWORD *)this + 1) = v29;
LABEL_97:
        if ((unint64_t)v29 >= v26 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v42 = (_BYTE *)*((_QWORD *)this + 1);
          v26 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v29;
          v42 = v29 + 1;
          *((_QWORD *)this + 1) = v42;
        }
        *(_DWORD *)(a1 + 68) |= 0x100u;
        if ((unint64_t)v42 >= v26 || *v42 != 80)
          continue;
        v30 = v42 + 1;
        *((_QWORD *)this + 1) = v30;
LABEL_105:
        if ((unint64_t)v30 >= v26 || *v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v43 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v26 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v30;
          v43 = (unsigned __int8 *)(v30 + 1);
          *((_QWORD *)this + 1) = v43;
        }
        *(_DWORD *)(a1 + 68) |= 0x200u;
        if (v43 != (unsigned __int8 *)v26 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 4u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v23 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_56;
      case 5u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v24 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_64;
      case 6u:
        v15 = TagFallback & 7;
        if (v15 != 2)
          goto LABEL_32;
        v25 = *(_DWORD *)(a1 + 68);
        goto LABEL_72;
      case 7u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v27 = (char *)*((_QWORD *)this + 1);
        v26 = *((_QWORD *)this + 2);
        goto LABEL_81;
      case 8u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v28 = (char *)*((_QWORD *)this + 1);
        v26 = *((_QWORD *)this + 2);
        goto LABEL_89;
      case 9u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v29 = (char *)*((_QWORD *)this + 1);
        v26 = *((_QWORD *)this + 2);
        goto LABEL_97;
      case 0xAu:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v30 = (char *)*((_QWORD *)this + 1);
        v26 = *((_QWORD *)this + 2);
        goto LABEL_105;
      default:
        v15 = TagFallback & 7;
LABEL_32:
        if (v15 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v12, a4) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1000935F0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v5 = this;
  v6 = *(_DWORD *)(this + 68);
  if ((v6 & 1) != 0)
  {
    v10 = *(uint64_t **)(this + 16);
    if (*((char *)v10 + 23) < 0)
    {
      v10 = (uint64_t *)*v10;
      v11 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8);
    }
    else
    {
      v11 = *((unsigned __int8 *)v10 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v10, v11, 1);
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(1, *(_QWORD *)(v5 + 16), a2);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_28;
  }
LABEL_24:
  v12 = *(uint64_t **)(v5 + 40);
  if (*((char *)v12 + 23) < 0)
  {
    v12 = (uint64_t *)*v12;
    v13 = *(_QWORD *)(*(_QWORD *)(v5 + 40) + 8);
  }
  else
  {
    v13 = *((unsigned __int8 *)v12 + 23);
  }
  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v12, v13, 1);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(6, *(_QWORD *)(v5 + 40), a2);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 48), a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 52), a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 56), a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x200) != 0)
LABEL_11:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 60), a2, a4);
LABEL_12:
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100093790(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  const void *v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  const void *v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  _QWORD *v35;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v36;
  _QWORD *v37;

  v5 = *((_DWORD *)this + 17);
  if ((v5 & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)this + 2);
    if (*((char *)v6 + 23) < 0)
    {
      v6 = (uint64_t *)*v6;
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 8);
    }
    else
    {
      v7 = *((unsigned __int8 *)v6 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v6, v7, 1);
    v10 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 10;
    if (*(char *)(v10 + 23) < 0)
      v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v10 + 8);
    else
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v10 + 23);
    if (v11 > 0x7F)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)a2 + 1, v8);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v11;
      v12 = (_DWORD)a2 + 2;
    }
    v13 = *(char *)(v10 + 23);
    if (v13 >= 0)
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10;
    else
      v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v10;
    if (v13 >= 0)
      v15 = (const void *)*(unsigned __int8 *)(v10 + 23);
    else
      v15 = (const void *)*(unsigned int *)(v10 + 8);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v14, v15, v12, v9);
    v5 = *((_DWORD *)this + 17);
  }
  if ((v5 & 2) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)a2 = 16;
    if (v16 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v16;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((_BYTE *)this + 68) & 4) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)a2 = 24;
    if (v17 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v17;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((_BYTE *)this + 68) & 8) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(_BYTE *)a2 = 32;
    if (v18 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v18;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((_BYTE *)this + 68) & 0x10) != 0)
  {
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)a2 = 40;
    if (v19 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v19;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  v20 = *((_DWORD *)this + 17);
  if ((v20 & 0x20) != 0)
  {
    v21 = (uint64_t *)*((_QWORD *)this + 5);
    if (*((char *)v21 + 23) < 0)
    {
      v21 = (uint64_t *)*v21;
      v22 = *(_QWORD *)(*((_QWORD *)this + 5) + 8);
    }
    else
    {
      v22 = *((unsigned __int8 *)v21 + 23);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v21, v22, 1);
    v25 = *((_QWORD *)this + 5);
    *(_BYTE *)a2 = 50;
    if (*(char *)(v25 + 23) < 0)
      v26 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v25 + 8);
    else
      v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v25 + 23);
    if (v26 > 0x7F)
    {
      v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)a2 + 1, v23);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v26;
      v27 = (_DWORD)a2 + 2;
    }
    v28 = *(char *)(v25 + 23);
    if (v28 >= 0)
      v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25;
    else
      v29 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v25;
    if (v28 >= 0)
      v30 = (const void *)*(unsigned __int8 *)(v25 + 23);
    else
      v30 = (const void *)*(unsigned int *)(v25 + 8);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v29, v30, v27, v24);
    v20 = *((_DWORD *)this + 17);
  }
  if ((v20 & 0x40) != 0)
  {
    v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)a2 = 56;
    if (v31 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v31;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((_BYTE *)this + 68) & 0x80) != 0)
  {
    v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)a2 = 64;
    if (v32 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v32, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v32;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((_BYTE *)this + 69) & 1) != 0)
  {
    v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)a2 = 72;
    if (v33 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v33, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v33;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((_BYTE *)this + 69) & 2) != 0)
  {
    v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(_BYTE *)a2 = 80;
    if (v34 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v34;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  v37 = (_QWORD *)*((_QWORD *)this + 1);
  v36 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v35 = v37;
  if (!v37 || *v35 == v35[1])
    return a2;
  else
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v36, a2, a3);
}

uint64_t sub_100093AA0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  _QWORD *v33;

  v3 = *(_DWORD *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_55;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_19;
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v3 = *(_DWORD *)(a1 + 68);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v4 = (v10 + v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      v12 = 1;
    }
    v4 = (v4 + v12 + 1);
  }
LABEL_19:
  if ((v3 & 4) != 0)
  {
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      v14 = 1;
    }
    v4 = (v4 + v14 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_21:
      if ((v3 & 0x10) == 0)
        goto LABEL_22;
      goto LABEL_34;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_21;
  }
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v16 = 2;
  }
  v4 = (v16 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_22:
    if ((v3 & 0x20) == 0)
      goto LABEL_23;
    goto LABEL_38;
  }
LABEL_34:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v18 = 2;
  }
  v4 = (v18 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_23:
    if ((v3 & 0x40) == 0)
      goto LABEL_24;
    goto LABEL_47;
  }
LABEL_38:
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(unsigned __int8 *)(v19 + 23);
  v21 = v20;
  v22 = *(_QWORD *)(v19 + 8);
  if ((v20 & 0x80u) == 0)
    v23 = *(unsigned __int8 *)(v19 + 23);
  else
    v23 = v22;
  if (v23 >= 0x80)
  {
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23, a2);
    v20 = *(unsigned __int8 *)(v19 + 23);
    v22 = *(_QWORD *)(v19 + 8);
    v3 = *(_DWORD *)(a1 + 68);
    v21 = *(_BYTE *)(v19 + 23);
  }
  else
  {
    v24 = 1;
  }
  if (v21 < 0)
    v20 = v22;
  v4 = (v4 + v24 + v20 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_24:
    if ((v3 & 0x80) == 0)
      goto LABEL_55;
    goto LABEL_51;
  }
LABEL_47:
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v25 >= 0x80)
  {
    v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v26 = 2;
  }
  v4 = (v26 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_51:
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v27 >= 0x80)
    {
      v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)
          + 1;
      v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      v28 = 2;
    }
    v4 = (v28 + v4);
  }
LABEL_55:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if (v29 >= 0x80)
      {
        v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2)
            + 1;
        v3 = *(_DWORD *)(a1 + 68);
      }
      else
      {
        v30 = 2;
      }
      v4 = (v30 + v4);
    }
    if ((v3 & 0x200) != 0)
    {
      v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
      if (v31 >= 0x80)
        v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2)
            + 1;
      else
        v32 = 2;
      v4 = (v32 + v4);
    }
  }
  v33 = *(_QWORD **)(a1 + 8);
  if (v33 && *v33 != v33[1])
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

uint64_t sub_100093D14(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 5358);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_10008CB58((uint64_t)a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_100093DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100093DD4(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100093E1C()
{
  return 1;
}

uint64_t sub_100093E24()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008547C8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000834E8;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008547C8, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008544B8;
}

void sub_100093E9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100093EB0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FDCE8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  return a1;
}

void sub_100093EE8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100093EFC(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v7;
  _BYTE v8[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v8, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 5616);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  if ((*(_BYTE *)(a2 + 24) & 1) != 0)
  {
    v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 1u;
    a1[4] = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100093F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100093FA8(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FDCE8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100093FD8(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FDCE8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete();
}

uint64_t sub_10009401C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 20) = a2;
  return result;
}

void sub_100094024()
{
  operator new();
}

void sub_100094060()
{
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100094084(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 24))
    *(_DWORD *)(a1 + 16) = 0;
  v2 = *(_QWORD *)(a1 + 8);
  result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  if (v2)
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t sub_1000940A4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unint64_t v10;
  char *v11;
  unsigned __int8 *v12;
  uint64_t result;

  v6 = (unsigned int *)(a1 + 16);
  v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v8 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v11 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v11 >= v10 || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result)
          return result;
        v12 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        *v6 = *v11;
        v12 = (unsigned __int8 *)(v11 + 1);
        *((_QWORD *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if (v12 == (unsigned __int8 *)v10 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) == 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1000941BC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  _QWORD *v6;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v7;
  _QWORD *v8;

  v5 = this;
  if ((*(_BYTE *)(this + 24) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
  v8 = *(_QWORD **)(v5 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009421C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  _QWORD *v5;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v6;
  _QWORD *v7;

  if ((*((_BYTE *)this + 24) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    *(_BYTE *)a2 = 8;
    if (v4 > 0x7F)
    {
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v4;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  v7 = (_QWORD *)*((_QWORD *)this + 1);
  v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v5 = v7;
  if (!v7 || *v5 == v5[1])
    return a2;
  else
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, a2, a3);
}

uint64_t sub_100094298(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  _QWORD *v5;

  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v4 >= 0x80)
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2)+ 1;
    else
      v3 = 2;
  }
  else
  {
    v3 = 0;
  }
  v5 = *(_QWORD **)(a1 + 8);
  if (v5 && *v5 != v5[1])
    v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_100094308(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  uint64_t v4;
  void *v5;
  wireless_diagnostics::google::protobuf::Message *v6;
  char v8;
  _BYTE v9[48];

  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", 5604);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (v5)
    return sub_100093EFC(a1, (uint64_t)v5);
  else
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
}

void sub_1000943B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000943C8(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2 != result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 32))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return result;
}

uint64_t sub_100094410()
{
  return 1;
}

uint64_t sub_100094418()
{
  uint64_t v0;
  _QWORD v2[2];
  char v3;

  v0 = qword_1008547C8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000834E8;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1008547C8, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008544C8;
}

void sub_100094490(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000944A4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1007FDD98;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_QWORD *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 60) = 0u;
  return a1;
}

void sub_1000944E8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message *v1;

  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1000944FC(uint64_t *a1)
{
  uint64_t v2;

  *a1 = (uint64_t)off_1007FDD98;
  if ((uint64_t *)qword_10085F6A0 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_10006BDC4(a1 + 7);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100094564(uint64_t *a1)
{
  sub_1000944FC(a1);
  operator delete();
}

uint64_t sub_100094588(uint64_t result, int a2)
{
  *(_DWORD *)(result + 80) = a2;
  return result;
}

void sub_100094590()
{
  operator new();
}

void sub_1000945CC()
{
  operator delete();
}

uint64_t sub_1000945F0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned __int8 *v11;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v31;
  int v32;
  BOOL v33;
  int v34;
  _BYTE *v35;
  unsigned int v36;
  uint64_t result;
  _BYTE *v39;
  unsigned int v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v57;
  int v58;
  int v59;
  _BYTE *v60;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v61;
  unsigned int *v62;
  unsigned int *v63;
  unsigned int v64;

  v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  v62 = (unsigned int *)(a1 + 32);
  v63 = (unsigned int *)(a1 + 36);
  v7 = (unsigned int *)(a1 + 40);
  v8 = (unsigned int *)(a1 + 44);
  v9 = (unsigned int *)(a1 + 48);
  v10 = (unsigned int *)(a1 + 52);
  v61 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56);
  while (1)
  {
    v11 = (unsigned __int8 *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || (char)*v11 < 0)
      break;
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v11;
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    *((_QWORD *)this + 1) = v11 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if (v13 != 2)
          goto LABEL_32;
        *(_DWORD *)(a1 + 84) |= 1u;
        v14 = *(_QWORD *)(a1 + 16);
        if (!v14)
          operator new();
        v64 = 0;
        v15 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v15 >= *((_QWORD *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v64))return 0;
        }
        else
        {
          v64 = *v15;
          *((_QWORD *)this + 1) = v15 + 1;
        }
        v27 = *((_DWORD *)this + 14);
        v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28)
          return 0;
        v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64);
        if (!sub_100091900(v14, this, v30, v31) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        v32 = *((_DWORD *)this + 14);
        v33 = __OFSUB__(v32, 1);
        v34 = v32 - 1;
        if (v34 < 0 == v33)
          *((_DWORD *)this + 14) = v34;
        v35 = (_BYTE *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        if ((unint64_t)v35 >= v16 || *v35 != 16)
          continue;
        v17 = v35 + 1;
        *((_QWORD *)this + 1) = v17;
        goto LABEL_45;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
LABEL_45:
        v64 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v64);
          if (!(_DWORD)result)
            return result;
          v36 = v64;
        }
        else
        {
          v36 = *v17;
          *((_QWORD *)this + 1) = v17 + 1;
        }
        if (v36 > 0x1B || ((1 << v36) & 0xDDB54EF) == 0)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v36);
        }
        else
        {
          if (v36 > 0x1B || ((1 << v36) & 0xDDB54EF) == 0)
            sub_1003CCCD0();
          *(_DWORD *)(a1 + 84) |= 2u;
          *(_DWORD *)(a1 + 24) = v36;
        }
        v39 = (_BYTE *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        if ((unint64_t)v39 >= v18 || *v39 != 24)
          continue;
        v19 = v39 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_60:
        v64 = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v64);
          if (!(_DWORD)result)
            return result;
          v40 = v64;
        }
        else
        {
          v40 = *v19;
          *((_QWORD *)this + 1) = v19 + 1;
        }
        if (v40 > 1)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v40);
        }
        else
        {
          *(_DWORD *)(a1 + 84) |= 4u;
          *(_DWORD *)(a1 + 28) = v40;
        }
        v41 = (_BYTE *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        if ((unint64_t)v41 >= v20 || *v41 != 32)
          continue;
        v21 = v41 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_71:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v62);
          if (!(_DWORD)result)
            return result;
          v42 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          *v62 = *v21;
          v42 = v21 + 1;
          *((_QWORD *)this + 1) = v42;
        }
        *(_DWORD *)(a1 + 84) |= 8u;
        if ((unint64_t)v42 >= v20 || *v42 != 40)
          continue;
        v22 = v42 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_79:
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v63);
          if (!(_DWORD)result)
            return result;
          v43 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          *v63 = *v22;
          v43 = v22 + 1;
          *((_QWORD *)this + 1) = v43;
        }
        *(_DWORD *)(a1 + 84) |= 0x10u;
        if ((unint64_t)v43 >= v20 || *v43 != 48)
          continue;
        v24 = v43 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_87:
        if ((unint64_t)v24 >= v20 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v44 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v24;
          v44 = v24 + 1;
          *((_QWORD *)this + 1) = v44;
        }
        *(_DWORD *)(a1 + 84) |= 0x20u;
        if ((unint64_t)v44 >= v20 || *v44 != 56)
          continue;
        v25 = v44 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_95:
        if ((unint64_t)v25 >= v20 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v45 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v25;
          v45 = v25 + 1;
          *((_QWORD *)this + 1) = v45;
        }
        *(_DWORD *)(a1 + 84) |= 0x40u;
        if ((unint64_t)v45 >= v20 || *v45 != 64)
          continue;
        v23 = v45 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_103:
        if ((unint64_t)v23 >= v20 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v46 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v23;
          v46 = v23 + 1;
          *((_QWORD *)this + 1) = v46;
        }
        *(_DWORD *)(a1 + 84) |= 0x80u;
        if ((unint64_t)v46 >= v20 || *v46 != 72)
          continue;
        v26 = v46 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_111:
        if ((unint64_t)v26 >= v20 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v47 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v26;
          v47 = v26 + 1;
          *((_QWORD *)this + 1) = v47;
        }
        *(_DWORD *)(a1 + 84) |= 0x100u;
        if ((unint64_t)v47 >= v20 || *v47 != 82)
          continue;
        break;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v19 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_60;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_71;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v22 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_79;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v24 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_87;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v25 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_95;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v23 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_103;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v26 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_111;
      case 0xAu:
        v13 = TagFallback & 7;
        if (v13 == 2)
          goto LABEL_121;
        goto LABEL_32;
      default:
        v13 = TagFallback & 7;
LABEL_32:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v6, a4) & 1) == 0)return 0;
        continue;
    }
    do
    {
      *((_QWORD *)this + 1) = v47 + 1;
LABEL_121:
      v48 = *(_DWORD *)(a1 + 68);
      v49 = *(int *)(a1 + 64);
      if ((int)v49 >= v48)
      {
        if (v48 == *(_DWORD *)(a1 + 72))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v61, v48 + 1);
          v48 = *(_DWORD *)(a1 + 68);
        }
        *(_DWORD *)(a1 + 68) = v48 + 1;
        sub_1000B8EF4();
      }
      v50 = *(_QWORD *)(a1 + 56);
      *(_DWORD *)(a1 + 64) = v49 + 1;
      v51 = *(_QWORD *)(v50 + 8 * v49);
      v64 = 0;
      v52 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v52 >= *((_QWORD *)this + 2) || *v52 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v64))return 0;
      }
      else
      {
        v64 = *v52;
        *((_QWORD *)this + 1) = v52 + 1;
      }
      v53 = *((_DWORD *)this + 14);
      v54 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v53 + 1;
      if (v53 >= v54)
        return 0;
      v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64);
      if (!sub_1000940A4(v51, this, v56, v57) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
      v58 = *((_DWORD *)this + 14);
      v33 = __OFSUB__(v58, 1);
      v59 = v58 - 1;
      if (v59 < 0 == v33)
        *((_DWORD *)this + 14) = v59;
      v47 = (_BYTE *)*((_QWORD *)this + 1);
      v60 = (_BYTE *)*((_QWORD *)this + 2);
    }
    while (v47 < v60 && *v47 == 82);
    if (v47 == v60 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
  TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = (_DWORD)TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

